
struct Engine_ForceUpdate_Parms
{
	unsigned long                                      bTransformOnly : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UActorComponent::ForceUpdate(bool bTransformOnly)
{
	static UFieldFunc* pFnForceUpdate = NULL;
	if(!pFnForceUpdate)
		pFnForceUpdate = UObject::FindFunction("Function Engine.ActorComponent.ForceUpdate");

	Engine_ForceUpdate_Parms ForceUpdate_Parms;
	ForceUpdate_Parms.bTransformOnly = bTransformOnly;
	pFnForceUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceUpdate,NULL,&ForceUpdate_Parms,NULL);
	pFnForceUpdate->FunctionFlags |= 0x400;
}

struct Engine_SetComponentRBFixed_Parms
{
	unsigned long                                      bFixed : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void UActorComponent::SetComponentRBFixed(bool bFixed)
{
	static UFieldFunc* pFnSetComponentRBFixed = NULL;
	if(!pFnSetComponentRBFixed)
		pFnSetComponentRBFixed = UObject::FindFunction("Function Engine.ActorComponent.SetComponentRBFixed");

	Engine_SetComponentRBFixed_Parms SetComponentRBFixed_Parms;
	SetComponentRBFixed_Parms.bFixed = bFixed;
	pFnSetComponentRBFixed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetComponentRBFixed,NULL,&SetComponentRBFixed_Parms,NULL);
	pFnSetComponentRBFixed->FunctionFlags |= 0x400;
}

struct Engine_SetTickGroup_Parms
{
	unsigned char                                      NewTickGroup;                                     		// 0x000000 (0x0001)              
};

void UActorComponent::SetTickGroup(unsigned char NewTickGroup)
{
	static UFieldFunc* pFnSetTickGroup = NULL;
	if(!pFnSetTickGroup)
		pFnSetTickGroup = UObject::FindFunction("Function Engine.ActorComponent.SetTickGroup");

	Engine_SetTickGroup_Parms SetTickGroup_Parms;
	SetTickGroup_Parms.NewTickGroup = NewTickGroup;
	pFnSetTickGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTickGroup,NULL,&SetTickGroup_Parms,NULL);
	pFnSetTickGroup->FunctionFlags |= 0x400;
}

struct Engine_RecalcLocalToWorld_Parms
{
};

void UcBlobShadowComponent::RecalcLocalToWorld()
{
	static UFieldFunc* pFnRecalcLocalToWorld = NULL;
	if(!pFnRecalcLocalToWorld)
		pFnRecalcLocalToWorld = UObject::FindFunction("Function Engine.cBlobShadowComponent.RecalcLocalToWorld");

	Engine_RecalcLocalToWorld_Parms RecalcLocalToWorld_Parms;
	pFnRecalcLocalToWorld->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRecalcLocalToWorld,NULL,&RecalcLocalToWorld_Parms,NULL);
	pFnRecalcLocalToWorld->FunctionFlags |= 0x400;
}

struct Engine_SetScale3D_Parms
{
	FVector3                                           Scale3D;                                          		// 0x000000 (0x000C)              
};

void UcBlobShadowComponent::SetScale3D(FVector3 Scale3D)
{
	static UFieldFunc* pFnSetScale3D = NULL;
	if(!pFnSetScale3D)
		pFnSetScale3D = UObject::FindFunction("Function Engine.cBlobShadowComponent.SetScale3D");

	Engine_SetScale3D_Parms SetScale3D_Parms;
	memcpy(&SetScale3D_Parms.Scale3D,&Scale3D,0xC);
	pFnSetScale3D->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScale3D,NULL,&SetScale3D_Parms,NULL);
	pFnSetScale3D->FunctionFlags |= 0x400;
}

struct Engine_SetTranslation_Parms
{
	FVector3                                           Translation;                                      		// 0x000000 (0x000C)              
};

void UcBlobShadowComponent::SetTranslation(FVector3 Translation)
{
	static UFieldFunc* pFnSetTranslation = NULL;
	if(!pFnSetTranslation)
		pFnSetTranslation = UObject::FindFunction("Function Engine.cBlobShadowComponent.SetTranslation");

	Engine_SetTranslation_Parms SetTranslation_Parms;
	memcpy(&SetTranslation_Parms.Translation,&Translation,0xC);
	pFnSetTranslation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTranslation,NULL,&SetTranslation_Parms,NULL);
	pFnSetTranslation->FunctionFlags |= 0x400;
}

struct Engine_OcclusionChanged_Parms
{
	unsigned long                                      bNowOccluded : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void UAudioComponent::OcclusionChanged(bool bNowOccluded)
{
	static UFieldFunc* pFnOcclusionChanged = NULL;
	if(!pFnOcclusionChanged)
		pFnOcclusionChanged = UObject::FindFunction("Function Engine.AudioComponent.OcclusionChanged");

	Engine_OcclusionChanged_Parms OcclusionChanged_Parms;
	OcclusionChanged_Parms.bNowOccluded = bNowOccluded;
	ProcessEvent(pFnOcclusionChanged,NULL,&OcclusionChanged_Parms,NULL);
}

struct Engine_Play_Parms
{
};

void UAudioComponent::Play()
{
	static UFieldFunc* pFnPlay = NULL;
	if(!pFnPlay)
		pFnPlay = UObject::FindFunction("Function Engine.AudioComponent.Play");

	Engine_Play_Parms Play_Parms;
	pFnPlay->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlay,NULL,&Play_Parms,NULL);
	pFnPlay->FunctionFlags |= 0x400;
}

struct Engine_Stop_Parms
{
};

void UAudioComponent::Stop()
{
	static UFieldFunc* pFnStop = NULL;
	if(!pFnStop)
		pFnStop = UObject::FindFunction("Function Engine.AudioComponent.Stop");

	Engine_Stop_Parms Stop_Parms;
	pFnStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStop,NULL,&Stop_Parms,NULL);
	pFnStop->FunctionFlags |= 0x400;
}

struct Engine_IsPlaying_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UAudioComponent::IsPlaying()
{
	static UFieldFunc* pFnIsPlaying = NULL;
	if(!pFnIsPlaying)
		pFnIsPlaying = UObject::FindFunction("Function Engine.AudioComponent.IsPlaying");

	Engine_IsPlaying_Parms IsPlaying_Parms;
	pFnIsPlaying->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPlaying,NULL,&IsPlaying_Parms,NULL);
	pFnIsPlaying->FunctionFlags |= 0x400;
	return IsPlaying_Parms.ReturnValue;
}

struct Engine_FadeOut_Parms
{
	float                                              FadeOutDuration;                                  		// 0x000000 (0x0004)              
	float                                              FadeVolumeLevel;                                  		// 0x000004 (0x0004)              
};

void UAudioComponent::FadeOut(float FadeOutDuration,float FadeVolumeLevel)
{
	static UFieldFunc* pFnFadeOut = NULL;
	if(!pFnFadeOut)
		pFnFadeOut = UObject::FindFunction("Function Engine.AudioComponent.FadeOut");

	Engine_FadeOut_Parms FadeOut_Parms;
	FadeOut_Parms.FadeOutDuration = FadeOutDuration;
	FadeOut_Parms.FadeVolumeLevel = FadeVolumeLevel;
	pFnFadeOut->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFadeOut,NULL,&FadeOut_Parms,NULL);
	pFnFadeOut->FunctionFlags |= 0x400;
}

struct Engine_FadeIn_Parms
{
	float                                              FadeInDuration;                                   		// 0x000000 (0x0004)              
	float                                              FadeVolumeLevel;                                  		// 0x000004 (0x0004)              
};

void UAudioComponent::FadeIn(float FadeInDuration,float FadeVolumeLevel)
{
	static UFieldFunc* pFnFadeIn = NULL;
	if(!pFnFadeIn)
		pFnFadeIn = UObject::FindFunction("Function Engine.AudioComponent.FadeIn");

	Engine_FadeIn_Parms FadeIn_Parms;
	FadeIn_Parms.FadeInDuration = FadeInDuration;
	FadeIn_Parms.FadeVolumeLevel = FadeVolumeLevel;
	pFnFadeIn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFadeIn,NULL,&FadeIn_Parms,NULL);
	pFnFadeIn->FunctionFlags |= 0x400;
}

struct Engine_OnAudioFinished_Parms
{
	class UAudioComponent*                             AC;                                               		// 0x000000 (0x0004)              
};

void UAudioComponent::OnAudioFinished(class UAudioComponent* AC)
{
	static UFieldFunc* pFnOnAudioFinished = NULL;
	if(!pFnOnAudioFinished)
		pFnOnAudioFinished = UObject::FindFunction("Function Engine.AudioComponent.OnAudioFinished");

	Engine_OnAudioFinished_Parms OnAudioFinished_Parms;
	OnAudioFinished_Parms.AC = AC;
	ProcessEvent(pFnOnAudioFinished,NULL,&OnAudioFinished_Parms,NULL);
}

struct Engine_AdjustVolume_Parms
{
	float                                              AdjustVolumeDuration;                             		// 0x000000 (0x0004)              
	float                                              AdjustVolumeLevel;                                		// 0x000004 (0x0004)              
};

void UAudioComponent::AdjustVolume(float AdjustVolumeDuration,float AdjustVolumeLevel)
{
	static UFieldFunc* pFnAdjustVolume = NULL;
	if(!pFnAdjustVolume)
		pFnAdjustVolume = UObject::FindFunction("Function Engine.AudioComponent.AdjustVolume");

	Engine_AdjustVolume_Parms AdjustVolume_Parms;
	AdjustVolume_Parms.AdjustVolumeDuration = AdjustVolumeDuration;
	AdjustVolume_Parms.AdjustVolumeLevel = AdjustVolumeLevel;
	pFnAdjustVolume->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAdjustVolume,NULL,&AdjustVolume_Parms,NULL);
	pFnAdjustVolume->FunctionFlags |= 0x400;
}

struct Engine_SetWaveParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	class USoundNodeWave*                              InWave;                                           		// 0x000008 (0x0004)              
};

void UAudioComponent::SetWaveParameter(struct FName InName,class USoundNodeWave* InWave)
{
	static UFieldFunc* pFnSetWaveParameter = NULL;
	if(!pFnSetWaveParameter)
		pFnSetWaveParameter = UObject::FindFunction("Function Engine.AudioComponent.SetWaveParameter");

	Engine_SetWaveParameter_Parms SetWaveParameter_Parms;
	memcpy(&SetWaveParameter_Parms.InName,&InName,0x8);
	SetWaveParameter_Parms.InWave = InWave;
	pFnSetWaveParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetWaveParameter,NULL,&SetWaveParameter_Parms,NULL);
	pFnSetWaveParameter->FunctionFlags |= 0x400;
}

struct Engine_SetFloatParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	float                                              InFloat;                                          		// 0x000008 (0x0004)              
};

void UAudioComponent::SetFloatParameter(struct FName InName,float InFloat)
{
	static UFieldFunc* pFnSetFloatParameter = NULL;
	if(!pFnSetFloatParameter)
		pFnSetFloatParameter = UObject::FindFunction("Function Engine.AudioComponent.SetFloatParameter");

	Engine_SetFloatParameter_Parms SetFloatParameter_Parms;
	memcpy(&SetFloatParameter_Parms.InName,&InName,0x8);
	SetFloatParameter_Parms.InFloat = InFloat;
	pFnSetFloatParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFloatParameter,NULL,&SetFloatParameter_Parms,NULL);
	pFnSetFloatParameter->FunctionFlags |= 0x400;
}

struct Engine_ResetToDefaults_Parms
{
};

void UAudioComponent::ResetToDefaults()
{
	static UFieldFunc* pFnResetToDefaults = NULL;
	if(!pFnResetToDefaults)
		pFnResetToDefaults = UObject::FindFunction("Function Engine.AudioComponent.ResetToDefaults");

	Engine_ResetToDefaults_Parms ResetToDefaults_Parms;
	pFnResetToDefaults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetToDefaults,NULL,&ResetToDefaults_Parms,NULL);
	pFnResetToDefaults->FunctionFlags |= 0x400;
}

struct Engine_SetIgnoreOwnerHidden_Parms
{
	unsigned long                                      bNewIgnoreOwnerHidden : 1;                        		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetIgnoreOwnerHidden(bool bNewIgnoreOwnerHidden)
{
	static UFieldFunc* pFnSetIgnoreOwnerHidden = NULL;
	if(!pFnSetIgnoreOwnerHidden)
		pFnSetIgnoreOwnerHidden = UObject::FindFunction("Function Engine.PrimitiveComponent.SetIgnoreOwnerHidden");

	Engine_SetIgnoreOwnerHidden_Parms SetIgnoreOwnerHidden_Parms;
	SetIgnoreOwnerHidden_Parms.bNewIgnoreOwnerHidden = bNewIgnoreOwnerHidden;
	pFnSetIgnoreOwnerHidden->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIgnoreOwnerHidden,NULL,&SetIgnoreOwnerHidden_Parms,NULL);
	pFnSetIgnoreOwnerHidden->FunctionFlags |= 0x400;
}

struct Engine_SetAbsolute_Parms
{
	unsigned long                                      NewAbsoluteTranslation : 1;                       		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      NewAbsoluteRotation : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      NewAbsoluteScale : 1;                             		// 0x000008 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetAbsolute(bool NewAbsoluteTranslation,bool NewAbsoluteRotation,bool NewAbsoluteScale)
{
	static UFieldFunc* pFnSetAbsolute = NULL;
	if(!pFnSetAbsolute)
		pFnSetAbsolute = UObject::FindFunction("Function Engine.PrimitiveComponent.SetAbsolute");

	Engine_SetAbsolute_Parms SetAbsolute_Parms;
	SetAbsolute_Parms.NewAbsoluteTranslation = NewAbsoluteTranslation;
	SetAbsolute_Parms.NewAbsoluteRotation = NewAbsoluteRotation;
	SetAbsolute_Parms.NewAbsoluteScale = NewAbsoluteScale;
	pFnSetAbsolute->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAbsolute,NULL,&SetAbsolute_Parms,NULL);
	pFnSetAbsolute->FunctionFlags |= 0x400;
}

struct Engine_SetRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
};

void UPrimitiveComponent::SetRotation(FRotator NewRotation)
{
	static UFieldFunc* pFnSetRotation = NULL;
	if(!pFnSetRotation)
		pFnSetRotation = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRotation");

	Engine_SetRotation_Parms SetRotation_Parms;
	memcpy(&SetRotation_Parms.NewRotation,&NewRotation,0xC);
	pFnSetRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRotation,NULL,&SetRotation_Parms,NULL);
	pFnSetRotation->FunctionFlags |= 0x400;
}

struct Engine_AddForce_Parms
{
	FVector3                                           Force;                                            		// 0x000000 (0x000C)              
	FVector3                                           Position;                                         		// 0x00000C (0x000C)              
	struct FName                                       BoneName;                                         		// 0x000018 (0x0008)              
};

void UPrimitiveComponent::AddForce(FVector3 Force,FVector3 Position,struct FName BoneName)
{
	static UFieldFunc* pFnAddForce = NULL;
	if(!pFnAddForce)
		pFnAddForce = UObject::FindFunction("Function Engine.PrimitiveComponent.AddForce");

	Engine_AddForce_Parms AddForce_Parms;
	memcpy(&AddForce_Parms.Force,&Force,0xC);
	memcpy(&AddForce_Parms.Position,&Position,0xC);
	memcpy(&AddForce_Parms.BoneName,&BoneName,0x8);
	pFnAddForce->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddForce,NULL,&AddForce_Parms,NULL);
	pFnAddForce->FunctionFlags |= 0x400;
}

struct Engine_SetHidden_Parms
{
	unsigned long                                      NewHidden : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetHidden(bool NewHidden)
{
	static UFieldFunc* pFnSetHidden = NULL;
	if(!pFnSetHidden)
		pFnSetHidden = UObject::FindFunction("Function Engine.PrimitiveComponent.SetHidden");

	Engine_SetHidden_Parms SetHidden_Parms;
	SetHidden_Parms.NewHidden = NewHidden;
	pFnSetHidden->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHidden,NULL,&SetHidden_Parms,NULL);
	pFnSetHidden->FunctionFlags |= 0x400;
}

struct Engine_SetTranslation_Parms
{
	FVector3                                           NewTranslation;                                   		// 0x000000 (0x000C)              
};

void UPrimitiveComponent::SetTranslation(FVector3 NewTranslation)
{
	static UFieldFunc* pFnSetTranslation = NULL;
	if(!pFnSetTranslation)
		pFnSetTranslation = UObject::FindFunction("Function Engine.PrimitiveComponent.SetTranslation");

	Engine_SetTranslation_Parms SetTranslation_Parms;
	memcpy(&SetTranslation_Parms.NewTranslation,&NewTranslation,0xC);
	pFnSetTranslation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTranslation,NULL,&SetTranslation_Parms,NULL);
	pFnSetTranslation->FunctionFlags |= 0x400;
}

struct Engine_SetRBLinearVelocity_Parms
{
	FVector3                                           NewVel;                                           		// 0x000000 (0x000C)              
	unsigned long                                      bAddToCurrent : 1;                                		// 0x00000C (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetRBLinearVelocity(FVector3 NewVel,bool bAddToCurrent)
{
	static UFieldFunc* pFnSetRBLinearVelocity = NULL;
	if(!pFnSetRBLinearVelocity)
		pFnSetRBLinearVelocity = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBLinearVelocity");

	Engine_SetRBLinearVelocity_Parms SetRBLinearVelocity_Parms;
	memcpy(&SetRBLinearVelocity_Parms.NewVel,&NewVel,0xC);
	SetRBLinearVelocity_Parms.bAddToCurrent = bAddToCurrent;
	pFnSetRBLinearVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBLinearVelocity,NULL,&SetRBLinearVelocity_Parms,NULL);
	pFnSetRBLinearVelocity->FunctionFlags |= 0x400;
}

struct Engine_SetCastShadow_Parms
{
	unsigned long                                      bNewCastShadow : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetCastShadow(bool bNewCastShadow)
{
	static UFieldFunc* pFnSetCastShadow = NULL;
	if(!pFnSetCastShadow)
		pFnSetCastShadow = UObject::FindFunction("Function Engine.PrimitiveComponent.SetCastShadow");

	Engine_SetCastShadow_Parms SetCastShadow_Parms;
	SetCastShadow_Parms.bNewCastShadow = bNewCastShadow;
	pFnSetCastShadow->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCastShadow,NULL,&SetCastShadow_Parms,NULL);
	pFnSetCastShadow->FunctionFlags |= 0x400;
}

struct Engine_SetRBRotation_Parms
{
	FRotator                                           NewRot;                                           		// 0x000000 (0x000C)              
	struct FName                                       BoneName;                                         		// 0x00000C (0x0008)              
};

void UPrimitiveComponent::SetRBRotation(FRotator NewRot,struct FName BoneName)
{
	static UFieldFunc* pFnSetRBRotation = NULL;
	if(!pFnSetRBRotation)
		pFnSetRBRotation = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBRotation");

	Engine_SetRBRotation_Parms SetRBRotation_Parms;
	memcpy(&SetRBRotation_Parms.NewRot,&NewRot,0xC);
	memcpy(&SetRBRotation_Parms.BoneName,&BoneName,0x8);
	pFnSetRBRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBRotation,NULL,&SetRBRotation_Parms,NULL);
	pFnSetRBRotation->FunctionFlags |= 0x400;
}

struct Engine_RetCullDistance_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UPrimitiveComponent::RetCullDistance()
{
	static UFieldFunc* pFnRetCullDistance = NULL;
	if(!pFnRetCullDistance)
		pFnRetCullDistance = UObject::FindFunction("Function Engine.PrimitiveComponent.RetCullDistance");

	Engine_RetCullDistance_Parms RetCullDistance_Parms;
	pFnRetCullDistance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRetCullDistance,NULL,&RetCullDistance_Parms,NULL);
	pFnRetCullDistance->FunctionFlags |= 0x400;
	return RetCullDistance_Parms.ReturnValue;
}

struct Engine_SetLightEnvironment_Parms
{
	class ULightEnvironmentComponent*                  NewLightEnvironment;                              		// 0x000000 (0x0004)              
};

void UPrimitiveComponent::SetLightEnvironment(class ULightEnvironmentComponent* NewLightEnvironment)
{
	static UFieldFunc* pFnSetLightEnvironment = NULL;
	if(!pFnSetLightEnvironment)
		pFnSetLightEnvironment = UObject::FindFunction("Function Engine.PrimitiveComponent.SetLightEnvironment");

	Engine_SetLightEnvironment_Parms SetLightEnvironment_Parms;
	SetLightEnvironment_Parms.NewLightEnvironment = NewLightEnvironment;
	pFnSetLightEnvironment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLightEnvironment,NULL,&SetLightEnvironment_Parms,NULL);
	pFnSetLightEnvironment->FunctionFlags |= 0x400;
}

struct Engine_SetShadowParent_Parms
{
	class UPrimitiveComponent*                         NewShadowParent;                                  		// 0x000000 (0x0004)              
};

void UPrimitiveComponent::SetShadowParent(class UPrimitiveComponent* NewShadowParent)
{
	static UFieldFunc* pFnSetShadowParent = NULL;
	if(!pFnSetShadowParent)
		pFnSetShadowParent = UObject::FindFunction("Function Engine.PrimitiveComponent.SetShadowParent");

	Engine_SetShadowParent_Parms SetShadowParent_Parms;
	SetShadowParent_Parms.NewShadowParent = NewShadowParent;
	pFnSetShadowParent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetShadowParent,NULL,&SetShadowParent_Parms,NULL);
	pFnSetShadowParent->FunctionFlags |= 0x400;
}

struct Engine_GetRootBodyInstance_Parms
{
	class URB_BodyInstance*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class URB_BodyInstance* UPrimitiveComponent::GetRootBodyInstance()
{
	static UFieldFunc* pFnGetRootBodyInstance = NULL;
	if(!pFnGetRootBodyInstance)
		pFnGetRootBodyInstance = UObject::FindFunction("Function Engine.PrimitiveComponent.GetRootBodyInstance");

	Engine_GetRootBodyInstance_Parms GetRootBodyInstance_Parms;
	pFnGetRootBodyInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRootBodyInstance,NULL,&GetRootBodyInstance_Parms,NULL);
	pFnGetRootBodyInstance->FunctionFlags |= 0x400;
	return GetRootBodyInstance_Parms.ReturnValue;
}

struct Engine_SetRigidBodyIsTrigger_Parms
{
	unsigned long                                      bNewIsTrigger : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetRigidBodyIsTrigger(bool bNewIsTrigger)
{
	static UFieldFunc* pFnSetRigidBodyIsTrigger = NULL;
	if(!pFnSetRigidBodyIsTrigger)
		pFnSetRigidBodyIsTrigger = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRigidBodyIsTrigger");

	Engine_SetRigidBodyIsTrigger_Parms SetRigidBodyIsTrigger_Parms;
	SetRigidBodyIsTrigger_Parms.bNewIsTrigger = bNewIsTrigger;
	pFnSetRigidBodyIsTrigger->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRigidBodyIsTrigger,NULL,&SetRigidBodyIsTrigger_Parms,NULL);
	pFnSetRigidBodyIsTrigger->FunctionFlags |= 0x400;
}

struct Engine_PutRigidBodyToSleep_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
};

void UPrimitiveComponent::PutRigidBodyToSleep(struct FName BoneName)
{
	static UFieldFunc* pFnPutRigidBodyToSleep = NULL;
	if(!pFnPutRigidBodyToSleep)
		pFnPutRigidBodyToSleep = UObject::FindFunction("Function Engine.PrimitiveComponent.PutRigidBodyToSleep");

	Engine_PutRigidBodyToSleep_Parms PutRigidBodyToSleep_Parms;
	memcpy(&PutRigidBodyToSleep_Parms.BoneName,&BoneName,0x8);
	pFnPutRigidBodyToSleep->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPutRigidBodyToSleep,NULL,&PutRigidBodyToSleep_Parms,NULL);
	pFnPutRigidBodyToSleep->FunctionFlags |= 0x400;
}

struct Engine_AddImpulse_Parms
{
	FVector3                                           Impulse;                                          		// 0x000000 (0x000C)              
	FVector3                                           Position;                                         		// 0x00000C (0x000C)              
	struct FName                                       BoneName;                                         		// 0x000018 (0x0008)              
	unsigned long                                      bVelChange : 1;                                   		// 0x000020 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::AddImpulse(FVector3 Impulse,FVector3 Position,struct FName BoneName,bool bVelChange)
{
	static UFieldFunc* pFnAddImpulse = NULL;
	if(!pFnAddImpulse)
		pFnAddImpulse = UObject::FindFunction("Function Engine.PrimitiveComponent.AddImpulse");

	Engine_AddImpulse_Parms AddImpulse_Parms;
	memcpy(&AddImpulse_Parms.Impulse,&Impulse,0xC);
	memcpy(&AddImpulse_Parms.Position,&Position,0xC);
	memcpy(&AddImpulse_Parms.BoneName,&BoneName,0x8);
	AddImpulse_Parms.bVelChange = bVelChange;
	pFnAddImpulse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddImpulse,NULL,&AddImpulse_Parms,NULL);
	pFnAddImpulse->FunctionFlags |= 0x400;
}

struct Engine_SetRBPosition_Parms
{
	FVector3                                           NewPos;                                           		// 0x000000 (0x000C)              
	struct FName                                       BoneName;                                         		// 0x00000C (0x0008)              
};

void UPrimitiveComponent::SetRBPosition(FVector3 NewPos,struct FName BoneName)
{
	static UFieldFunc* pFnSetRBPosition = NULL;
	if(!pFnSetRBPosition)
		pFnSetRBPosition = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBPosition");

	Engine_SetRBPosition_Parms SetRBPosition_Parms;
	memcpy(&SetRBPosition_Parms.NewPos,&NewPos,0xC);
	memcpy(&SetRBPosition_Parms.BoneName,&BoneName,0x8);
	pFnSetRBPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBPosition,NULL,&SetRBPosition_Parms,NULL);
	pFnSetRBPosition->FunctionFlags |= 0x400;
}

struct Engine_SetScale3D_Parms
{
	FVector3                                           NewScale3D;                                       		// 0x000000 (0x000C)              
};

void UPrimitiveComponent::SetScale3D(FVector3 NewScale3D)
{
	static UFieldFunc* pFnSetScale3D = NULL;
	if(!pFnSetScale3D)
		pFnSetScale3D = UObject::FindFunction("Function Engine.PrimitiveComponent.SetScale3D");

	Engine_SetScale3D_Parms SetScale3D_Parms;
	memcpy(&SetScale3D_Parms.NewScale3D,&NewScale3D,0xC);
	pFnSetScale3D->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScale3D,NULL,&SetScale3D_Parms,NULL);
	pFnSetScale3D->FunctionFlags |= 0x400;
}

struct Engine_SetAPBCollision_Parms
{
	struct FsAPBCollision                              newAPBCollision;                                  		// 0x000000 (0x0014)              
};

void UPrimitiveComponent::SetAPBCollision(struct FsAPBCollision newAPBCollision)
{
	static UFieldFunc* pFnSetAPBCollision = NULL;
	if(!pFnSetAPBCollision)
		pFnSetAPBCollision = UObject::FindFunction("Function Engine.PrimitiveComponent.SetAPBCollision");

	Engine_SetAPBCollision_Parms SetAPBCollision_Parms;
	memcpy(&SetAPBCollision_Parms.newAPBCollision,&newAPBCollision,0x14);
	pFnSetAPBCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAPBCollision,NULL,&SetAPBCollision_Parms,NULL);
	pFnSetAPBCollision->FunctionFlags |= 0x400;
}

struct Engine_SetBlockRigidBody_Parms
{
	unsigned long                                      bNewBlockRigidBody : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetBlockRigidBody(bool bNewBlockRigidBody)
{
	static UFieldFunc* pFnSetBlockRigidBody = NULL;
	if(!pFnSetBlockRigidBody)
		pFnSetBlockRigidBody = UObject::FindFunction("Function Engine.PrimitiveComponent.SetBlockRigidBody");

	Engine_SetBlockRigidBody_Parms SetBlockRigidBody_Parms;
	SetBlockRigidBody_Parms.bNewBlockRigidBody = bNewBlockRigidBody;
	pFnSetBlockRigidBody->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBlockRigidBody,NULL,&SetBlockRigidBody_Parms,NULL);
	pFnSetBlockRigidBody->FunctionFlags |= 0x400;
}

struct Engine_InitRBPhys_Parms
{
};

void UPrimitiveComponent::InitRBPhys()
{
	static UFieldFunc* pFnInitRBPhys = NULL;
	if(!pFnInitRBPhys)
		pFnInitRBPhys = UObject::FindFunction("Function Engine.PrimitiveComponent.InitRBPhys");

	Engine_InitRBPhys_Parms InitRBPhys_Parms;
	pFnInitRBPhys->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitRBPhys,NULL,&InitRBPhys_Parms,NULL);
	pFnInitRBPhys->FunctionFlags |= 0x400;
}

struct Engine_SetRBChannel_Parms
{
	unsigned char                                      Channel;                                          		// 0x000000 (0x0001)              
};

void UPrimitiveComponent::SetRBChannel(unsigned char Channel)
{
	static UFieldFunc* pFnSetRBChannel = NULL;
	if(!pFnSetRBChannel)
		pFnSetRBChannel = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBChannel");

	Engine_SetRBChannel_Parms SetRBChannel_Parms;
	SetRBChannel_Parms.Channel = Channel;
	pFnSetRBChannel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBChannel,NULL,&SetRBChannel_Parms,NULL);
	pFnSetRBChannel->FunctionFlags |= 0x400;
}

struct Engine_SetRBDominanceGroup_Parms
{
	unsigned char                                      InDomGroup;                                       		// 0x000000 (0x0001)              
};

void UPrimitiveComponent::SetRBDominanceGroup(unsigned char InDomGroup)
{
	static UFieldFunc* pFnSetRBDominanceGroup = NULL;
	if(!pFnSetRBDominanceGroup)
		pFnSetRBDominanceGroup = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBDominanceGroup");

	Engine_SetRBDominanceGroup_Parms SetRBDominanceGroup_Parms;
	SetRBDominanceGroup_Parms.InDomGroup = InDomGroup;
	pFnSetRBDominanceGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBDominanceGroup,NULL,&SetRBDominanceGroup_Parms,NULL);
	pFnSetRBDominanceGroup->FunctionFlags |= 0x400;
}

struct Engine_SetOnlyOwnerSee_Parms
{
	unsigned long                                      bNewOnlyOwnerSee : 1;                             		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetOnlyOwnerSee(bool bNewOnlyOwnerSee)
{
	static UFieldFunc* pFnSetOnlyOwnerSee = NULL;
	if(!pFnSetOnlyOwnerSee)
		pFnSetOnlyOwnerSee = UObject::FindFunction("Function Engine.PrimitiveComponent.SetOnlyOwnerSee");

	Engine_SetOnlyOwnerSee_Parms SetOnlyOwnerSee_Parms;
	SetOnlyOwnerSee_Parms.bNewOnlyOwnerSee = bNewOnlyOwnerSee;
	pFnSetOnlyOwnerSee->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOnlyOwnerSee,NULL,&SetOnlyOwnerSee_Parms,NULL);
	pFnSetOnlyOwnerSee->FunctionFlags |= 0x400;
}

struct Engine_SetNotifyRigidBodyCollision_Parms
{
	unsigned long                                      bNewNotifyRigidBodyCollision : 1;                 		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetNotifyRigidBodyCollision(bool bNewNotifyRigidBodyCollision)
{
	static UFieldFunc* pFnSetNotifyRigidBodyCollision = NULL;
	if(!pFnSetNotifyRigidBodyCollision)
		pFnSetNotifyRigidBodyCollision = UObject::FindFunction("Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision");

	Engine_SetNotifyRigidBodyCollision_Parms SetNotifyRigidBodyCollision_Parms;
	SetNotifyRigidBodyCollision_Parms.bNewNotifyRigidBodyCollision = bNewNotifyRigidBodyCollision;
	pFnSetNotifyRigidBodyCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNotifyRigidBodyCollision,NULL,&SetNotifyRigidBodyCollision_Parms,NULL);
	pFnSetNotifyRigidBodyCollision->FunctionFlags |= 0x400;
}

struct Engine_SetRBCollidesWithChannel_Parms
{
	unsigned char                                      Channel;                                          		// 0x000000 (0x0001)              
	unsigned long                                      bNewCollides : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetRBCollidesWithChannel(unsigned char Channel,bool bNewCollides)
{
	static UFieldFunc* pFnSetRBCollidesWithChannel = NULL;
	if(!pFnSetRBCollidesWithChannel)
		pFnSetRBCollidesWithChannel = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBCollidesWithChannel");

	Engine_SetRBCollidesWithChannel_Parms SetRBCollidesWithChannel_Parms;
	SetRBCollidesWithChannel_Parms.Channel = Channel;
	SetRBCollidesWithChannel_Parms.bNewCollides = bNewCollides;
	pFnSetRBCollidesWithChannel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBCollidesWithChannel,NULL,&SetRBCollidesWithChannel_Parms,NULL);
	pFnSetRBCollidesWithChannel->FunctionFlags |= 0x400;
}

struct Engine_WakeRigidBody_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
};

void UPrimitiveComponent::WakeRigidBody(struct FName BoneName)
{
	static UFieldFunc* pFnWakeRigidBody = NULL;
	if(!pFnWakeRigidBody)
		pFnWakeRigidBody = UObject::FindFunction("Function Engine.PrimitiveComponent.WakeRigidBody");

	Engine_WakeRigidBody_Parms WakeRigidBody_Parms;
	memcpy(&WakeRigidBody_Parms.BoneName,&BoneName,0x8);
	pFnWakeRigidBody->FunctionFlags |= ~0x400;
	ProcessEvent(pFnWakeRigidBody,NULL,&WakeRigidBody_Parms,NULL);
	pFnWakeRigidBody->FunctionFlags |= 0x400;
}

struct Engine_SetRigidBodyGravityResponse_Parms
{
	unsigned long                                      bGravityResponse : 1;                             		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetRigidBodyGravityResponse(bool bGravityResponse)
{
	static UFieldFunc* pFnSetRigidBodyGravityResponse = NULL;
	if(!pFnSetRigidBodyGravityResponse)
		pFnSetRigidBodyGravityResponse = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRigidBodyGravityResponse");

	Engine_SetRigidBodyGravityResponse_Parms SetRigidBodyGravityResponse_Parms;
	SetRigidBodyGravityResponse_Parms.bGravityResponse = bGravityResponse;
	pFnSetRigidBodyGravityResponse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRigidBodyGravityResponse,NULL,&SetRigidBodyGravityResponse_Parms,NULL);
	pFnSetRigidBodyGravityResponse->FunctionFlags |= 0x400;
}

struct Engine_AddRadialImpulse_Parms
{
	FVector3                                           Origin;                                           		// 0x000000 (0x000C)              
	float                                              Radius;                                           		// 0x00000C (0x0004)              
	float                                              Strength;                                         		// 0x000010 (0x0004)              
	unsigned char                                      Falloff;                                          		// 0x000014 (0x0001)              
	unsigned long                                      bVelChange : 1;                                   		// 0x000018 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::AddRadialImpulse(FVector3 Origin,float Radius,float Strength,unsigned char Falloff,bool bVelChange)
{
	static UFieldFunc* pFnAddRadialImpulse = NULL;
	if(!pFnAddRadialImpulse)
		pFnAddRadialImpulse = UObject::FindFunction("Function Engine.PrimitiveComponent.AddRadialImpulse");

	Engine_AddRadialImpulse_Parms AddRadialImpulse_Parms;
	memcpy(&AddRadialImpulse_Parms.Origin,&Origin,0xC);
	AddRadialImpulse_Parms.Radius = Radius;
	AddRadialImpulse_Parms.Strength = Strength;
	AddRadialImpulse_Parms.Falloff = Falloff;
	AddRadialImpulse_Parms.bVelChange = bVelChange;
	pFnAddRadialImpulse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddRadialImpulse,NULL,&AddRadialImpulse_Parms,NULL);
	pFnAddRadialImpulse->FunctionFlags |= 0x400;
}

struct Engine_SetScale_Parms
{
	float                                              NewScale;                                         		// 0x000000 (0x0004)              
};

void UPrimitiveComponent::SetScale(float NewScale)
{
	static UFieldFunc* pFnSetScale = NULL;
	if(!pFnSetScale)
		pFnSetScale = UObject::FindFunction("Function Engine.PrimitiveComponent.SetScale");

	Engine_SetScale_Parms SetScale_Parms;
	SetScale_Parms.NewScale = NewScale;
	pFnSetScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScale,NULL,&SetScale_Parms,NULL);
	pFnSetScale->FunctionFlags |= 0x400;
}

struct Engine_SetLightingChannels_Parms
{
	struct FLightingChannelContainer                   NewLightingChannels;                              		// 0x000000 (0x0004)              
};

void UPrimitiveComponent::SetLightingChannels(struct FLightingChannelContainer NewLightingChannels)
{
	static UFieldFunc* pFnSetLightingChannels = NULL;
	if(!pFnSetLightingChannels)
		pFnSetLightingChannels = UObject::FindFunction("Function Engine.PrimitiveComponent.SetLightingChannels");

	Engine_SetLightingChannels_Parms SetLightingChannels_Parms;
	memcpy(&SetLightingChannels_Parms.NewLightingChannels,&NewLightingChannels,0x4);
	pFnSetLightingChannels->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLightingChannels,NULL,&SetLightingChannels_Parms,NULL);
	pFnSetLightingChannels->FunctionFlags |= 0x400;
}

struct Engine_GetRotation_Parms
{
	FRotator                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FRotator UPrimitiveComponent::GetRotation()
{
	static UFieldFunc* pFnGetRotation = NULL;
	if(!pFnGetRotation)
		pFnGetRotation = UObject::FindFunction("Function Engine.PrimitiveComponent.GetRotation");

	Engine_GetRotation_Parms GetRotation_Parms;
	pFnGetRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRotation,NULL,&GetRotation_Parms,NULL);
	pFnGetRotation->FunctionFlags |= 0x400;
	return GetRotation_Parms.ReturnValue;
}

struct Engine_SetRigidBodyAwake_Parms
{
	unsigned long                                      bAwake : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetRigidBodyAwake(bool bAwake)
{
	static UFieldFunc* pFnSetRigidBodyAwake = NULL;
	if(!pFnSetRigidBodyAwake)
		pFnSetRigidBodyAwake = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRigidBodyAwake");

	Engine_SetRigidBodyAwake_Parms SetRigidBodyAwake_Parms;
	SetRigidBodyAwake_Parms.bAwake = bAwake;
	pFnSetRigidBodyAwake->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRigidBodyAwake,NULL,&SetRigidBodyAwake_Parms,NULL);
	pFnSetRigidBodyAwake->FunctionFlags |= 0x400;
}

struct Engine_RigidBodyIsAwake_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UPrimitiveComponent::RigidBodyIsAwake(struct FName BoneName)
{
	static UFieldFunc* pFnRigidBodyIsAwake = NULL;
	if(!pFnRigidBodyIsAwake)
		pFnRigidBodyIsAwake = UObject::FindFunction("Function Engine.PrimitiveComponent.RigidBodyIsAwake");

	Engine_RigidBodyIsAwake_Parms RigidBodyIsAwake_Parms;
	memcpy(&RigidBodyIsAwake_Parms.BoneName,&BoneName,0x8);
	pFnRigidBodyIsAwake->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRigidBodyIsAwake,NULL,&RigidBodyIsAwake_Parms,NULL);
	pFnRigidBodyIsAwake->FunctionFlags |= 0x400;
	return RigidBodyIsAwake_Parms.ReturnValue;
}

struct Engine_AddRadialForce_Parms
{
	FVector3                                           Origin;                                           		// 0x000000 (0x000C)              
	float                                              Radius;                                           		// 0x00000C (0x0004)              
	float                                              Strength;                                         		// 0x000010 (0x0004)              
	unsigned char                                      Falloff;                                          		// 0x000014 (0x0001)              
};

void UPrimitiveComponent::AddRadialForce(FVector3 Origin,float Radius,float Strength,unsigned char Falloff)
{
	static UFieldFunc* pFnAddRadialForce = NULL;
	if(!pFnAddRadialForce)
		pFnAddRadialForce = UObject::FindFunction("Function Engine.PrimitiveComponent.AddRadialForce");

	Engine_AddRadialForce_Parms AddRadialForce_Parms;
	memcpy(&AddRadialForce_Parms.Origin,&Origin,0xC);
	AddRadialForce_Parms.Radius = Radius;
	AddRadialForce_Parms.Strength = Strength;
	AddRadialForce_Parms.Falloff = Falloff;
	pFnAddRadialForce->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddRadialForce,NULL,&AddRadialForce_Parms,NULL);
	pFnAddRadialForce->FunctionFlags |= 0x400;
}

struct Engine_SetViewOwnerDepthPriorityGroup_Parms
{
	unsigned long                                      bNewUseViewOwnerDepthPriorityGroup : 1;           		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      NewViewOwnerDepthPriorityGroup;                   		// 0x000004 (0x0001)              
};

void UPrimitiveComponent::SetViewOwnerDepthPriorityGroup(bool bNewUseViewOwnerDepthPriorityGroup,unsigned char NewViewOwnerDepthPriorityGroup)
{
	static UFieldFunc* pFnSetViewOwnerDepthPriorityGroup = NULL;
	if(!pFnSetViewOwnerDepthPriorityGroup)
		pFnSetViewOwnerDepthPriorityGroup = UObject::FindFunction("Function Engine.PrimitiveComponent.SetViewOwnerDepthPriorityGroup");

	Engine_SetViewOwnerDepthPriorityGroup_Parms SetViewOwnerDepthPriorityGroup_Parms;
	SetViewOwnerDepthPriorityGroup_Parms.bNewUseViewOwnerDepthPriorityGroup = bNewUseViewOwnerDepthPriorityGroup;
	SetViewOwnerDepthPriorityGroup_Parms.NewViewOwnerDepthPriorityGroup = NewViewOwnerDepthPriorityGroup;
	pFnSetViewOwnerDepthPriorityGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetViewOwnerDepthPriorityGroup,NULL,&SetViewOwnerDepthPriorityGroup_Parms,NULL);
	pFnSetViewOwnerDepthPriorityGroup->FunctionFlags |= 0x400;
}

struct Engine_SetCullDistance_Parms
{
	float                                              NewCullDistance;                                  		// 0x000000 (0x0004)              
};

void UPrimitiveComponent::SetCullDistance(float NewCullDistance)
{
	static UFieldFunc* pFnSetCullDistance = NULL;
	if(!pFnSetCullDistance)
		pFnSetCullDistance = UObject::FindFunction("Function Engine.PrimitiveComponent.SetCullDistance");

	Engine_SetCullDistance_Parms SetCullDistance_Parms;
	SetCullDistance_Parms.NewCullDistance = NewCullDistance;
	pFnSetCullDistance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCullDistance,NULL,&SetCullDistance_Parms,NULL);
	pFnSetCullDistance->FunctionFlags |= 0x400;
}

struct Engine_SetActorCollision_Parms
{
	unsigned long                                      NewCollideActors : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      NewBlockActors : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      NewAlwaysCheckCollision : 1;                      		// 0x000008 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetActorCollision(bool NewCollideActors,bool NewBlockActors,bool NewAlwaysCheckCollision)
{
	static UFieldFunc* pFnSetActorCollision = NULL;
	if(!pFnSetActorCollision)
		pFnSetActorCollision = UObject::FindFunction("Function Engine.PrimitiveComponent.SetActorCollision");

	Engine_SetActorCollision_Parms SetActorCollision_Parms;
	SetActorCollision_Parms.NewCollideActors = NewCollideActors;
	SetActorCollision_Parms.NewBlockActors = NewBlockActors;
	SetActorCollision_Parms.NewAlwaysCheckCollision = NewAlwaysCheckCollision;
	pFnSetActorCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActorCollision,NULL,&SetActorCollision_Parms,NULL);
	pFnSetActorCollision->FunctionFlags |= 0x400;
}

struct Engine_GetPosition_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
	//FVector3                                           Position;                                         		// 0x00000C (0x000C)              
};

FVector3 UPrimitiveComponent::GetPosition()
{
	static UFieldFunc* pFnGetPosition = NULL;
	if(!pFnGetPosition)
		pFnGetPosition = UObject::FindFunction("Function Engine.PrimitiveComponent.GetPosition");

	Engine_GetPosition_Parms GetPosition_Parms;
	ProcessEvent(pFnGetPosition,NULL,&GetPosition_Parms,NULL);
	return GetPosition_Parms.ReturnValue;
}

struct Engine_SetRBAngularVelocity_Parms
{
	FVector3                                           NewAngVel;                                        		// 0x000000 (0x000C)              
	unsigned long                                      bAddToCurrent : 1;                                		// 0x00000C (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetRBAngularVelocity(FVector3 NewAngVel,bool bAddToCurrent)
{
	static UFieldFunc* pFnSetRBAngularVelocity = NULL;
	if(!pFnSetRBAngularVelocity)
		pFnSetRBAngularVelocity = UObject::FindFunction("Function Engine.PrimitiveComponent.SetRBAngularVelocity");

	Engine_SetRBAngularVelocity_Parms SetRBAngularVelocity_Parms;
	memcpy(&SetRBAngularVelocity_Parms.NewAngVel,&NewAngVel,0xC);
	SetRBAngularVelocity_Parms.bAddToCurrent = bAddToCurrent;
	pFnSetRBAngularVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRBAngularVelocity,NULL,&SetRBAngularVelocity_Parms,NULL);
	pFnSetRBAngularVelocity->FunctionFlags |= 0x400;
}

struct Engine_SetOwnerNoSee_Parms
{
	unsigned long                                      bNewOwnerNoSee : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetOwnerNoSee(bool bNewOwnerNoSee)
{
	static UFieldFunc* pFnSetOwnerNoSee = NULL;
	if(!pFnSetOwnerNoSee)
		pFnSetOwnerNoSee = UObject::FindFunction("Function Engine.PrimitiveComponent.SetOwnerNoSee");

	Engine_SetOwnerNoSee_Parms SetOwnerNoSee_Parms;
	SetOwnerNoSee_Parms.bNewOwnerNoSee = bNewOwnerNoSee;
	pFnSetOwnerNoSee->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOwnerNoSee,NULL,&SetOwnerNoSee_Parms,NULL);
	pFnSetOwnerNoSee->FunctionFlags |= 0x400;
}

struct Engine_SetPhysMaterialOverride_Parms
{
	class UPhysicalMaterial*                           NewPhysMaterial;                                  		// 0x000000 (0x0004)              
};

void UPrimitiveComponent::SetPhysMaterialOverride(class UPhysicalMaterial* NewPhysMaterial)
{
	static UFieldFunc* pFnSetPhysMaterialOverride = NULL;
	if(!pFnSetPhysMaterialOverride)
		pFnSetPhysMaterialOverride = UObject::FindFunction("Function Engine.PrimitiveComponent.SetPhysMaterialOverride");

	Engine_SetPhysMaterialOverride_Parms SetPhysMaterialOverride_Parms;
	SetPhysMaterialOverride_Parms.NewPhysMaterial = NewPhysMaterial;
	pFnSetPhysMaterialOverride->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPhysMaterialOverride,NULL,&SetPhysMaterialOverride_Parms,NULL);
	pFnSetPhysMaterialOverride->FunctionFlags |= 0x400;
}

struct Engine_SetTraceBlocking_Parms
{
	unsigned long                                      NewBlockZeroExtent : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      NewBlockNonZeroExtent : 1;                        		// 0x000004 (0x0004) [0x00000001] 
};

void UPrimitiveComponent::SetTraceBlocking(bool NewBlockZeroExtent,bool NewBlockNonZeroExtent)
{
	static UFieldFunc* pFnSetTraceBlocking = NULL;
	if(!pFnSetTraceBlocking)
		pFnSetTraceBlocking = UObject::FindFunction("Function Engine.PrimitiveComponent.SetTraceBlocking");

	Engine_SetTraceBlocking_Parms SetTraceBlocking_Parms;
	SetTraceBlocking_Parms.NewBlockZeroExtent = NewBlockZeroExtent;
	SetTraceBlocking_Parms.NewBlockNonZeroExtent = NewBlockNonZeroExtent;
	pFnSetTraceBlocking->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTraceBlocking,NULL,&SetTraceBlocking_Parms,NULL);
	pFnSetTraceBlocking->FunctionFlags |= 0x400;
}

struct Engine_SetDepthPriorityGroup_Parms
{
	unsigned char                                      NewDepthPriorityGroup;                            		// 0x000000 (0x0001)              
};

void UPrimitiveComponent::SetDepthPriorityGroup(unsigned char NewDepthPriorityGroup)
{
	static UFieldFunc* pFnSetDepthPriorityGroup = NULL;
	if(!pFnSetDepthPriorityGroup)
		pFnSetDepthPriorityGroup = UObject::FindFunction("Function Engine.PrimitiveComponent.SetDepthPriorityGroup");

	Engine_SetDepthPriorityGroup_Parms SetDepthPriorityGroup_Parms;
	SetDepthPriorityGroup_Parms.NewDepthPriorityGroup = NewDepthPriorityGroup;
	pFnSetDepthPriorityGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDepthPriorityGroup,NULL,&SetDepthPriorityGroup_Parms,NULL);
	pFnSetDepthPriorityGroup->FunctionFlags |= 0x400;
}

struct Engine_UpdateCosmeticCollision_Parms
{
};

void UCylinderComponent::UpdateCosmeticCollision()
{
	static UFieldFunc* pFnUpdateCosmeticCollision = NULL;
	if(!pFnUpdateCosmeticCollision)
		pFnUpdateCosmeticCollision = UObject::FindFunction("Function Engine.CylinderComponent.UpdateCosmeticCollision");

	Engine_UpdateCosmeticCollision_Parms UpdateCosmeticCollision_Parms;
	pFnUpdateCosmeticCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateCosmeticCollision,NULL,&UpdateCosmeticCollision_Parms,NULL);
	pFnUpdateCosmeticCollision->FunctionFlags |= 0x400;
}

struct Engine_SetCylinderSize_Parms
{
	float                                              NewRadius;                                        		// 0x000000 (0x0004)              
	float                                              NewHeight;                                        		// 0x000004 (0x0004)              
};

void UCylinderComponent::SetCylinderSize(float NewRadius,float NewHeight)
{
	static UFieldFunc* pFnSetCylinderSize = NULL;
	if(!pFnSetCylinderSize)
		pFnSetCylinderSize = UObject::FindFunction("Function Engine.CylinderComponent.SetCylinderSize");

	Engine_SetCylinderSize_Parms SetCylinderSize_Parms;
	SetCylinderSize_Parms.NewRadius = NewRadius;
	SetCylinderSize_Parms.NewHeight = NewHeight;
	pFnSetCylinderSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCylinderSize,NULL,&SetCylinderSize_Parms,NULL);
	pFnSetCylinderSize->FunctionFlags |= 0x400;
}

struct Engine_DestroyVFX_Parms
{
};

void UcVisualFXComponent::DestroyVFX()
{
	static UFieldFunc* pFnDestroyVFX = NULL;
	if(!pFnDestroyVFX)
		pFnDestroyVFX = UObject::FindFunction("Function Engine.cVisualFXComponent.DestroyVFX");

	Engine_DestroyVFX_Parms DestroyVFX_Parms;
	pFnDestroyVFX->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDestroyVFX,NULL,&DestroyVFX_Parms,NULL);
	pFnDestroyVFX->FunctionFlags |= 0x400;
}

struct Engine_SetEnabled_Parms
{
	unsigned long                                      bNewEnabled : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void ULightEnvironmentComponent::SetEnabled(bool bNewEnabled)
{
	static UFieldFunc* pFnSetEnabled = NULL;
	if(!pFnSetEnabled)
		pFnSetEnabled = UObject::FindFunction("Function Engine.LightEnvironmentComponent.SetEnabled");

	Engine_SetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bNewEnabled = bNewEnabled;
	pFnSetEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnabled,NULL,&SetEnabled_Parms,NULL);
	pFnSetEnabled->FunctionFlags |= 0x400;
}

struct Engine_GetNumElements_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UMeshComponent::GetNumElements()
{
	static UFieldFunc* pFnGetNumElements = NULL;
	if(!pFnGetNumElements)
		pFnGetNumElements = UObject::FindFunction("Function Engine.MeshComponent.GetNumElements");

	Engine_GetNumElements_Parms GetNumElements_Parms;
	pFnGetNumElements->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumElements,NULL,&GetNumElements_Parms,NULL);
	pFnGetNumElements->FunctionFlags |= 0x400;
	return GetNumElements_Parms.ReturnValue;
}

struct Engine_CreateAndSetMaterialInstanceTimeVarying_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	class UMaterialInstanceTimeVarying*                ReturnValue;                                      		// 0x000004 (0x0004)              
	//class UMaterialInstanceTimeVarying*                Instance;                                         		// 0x000008 (0x0004)              
};

class UMaterialInstanceTimeVarying* UMeshComponent::CreateAndSetMaterialInstanceTimeVarying(int ElementIndex)
{
	static UFieldFunc* pFnCreateAndSetMaterialInstanceTimeVarying = NULL;
	if(!pFnCreateAndSetMaterialInstanceTimeVarying)
		pFnCreateAndSetMaterialInstanceTimeVarying = UObject::FindFunction("Function Engine.MeshComponent.CreateAndSetMaterialInstanceTimeVarying");

	Engine_CreateAndSetMaterialInstanceTimeVarying_Parms CreateAndSetMaterialInstanceTimeVarying_Parms;
	CreateAndSetMaterialInstanceTimeVarying_Parms.ElementIndex = ElementIndex;
	ProcessEvent(pFnCreateAndSetMaterialInstanceTimeVarying,NULL,&CreateAndSetMaterialInstanceTimeVarying_Parms,NULL);
	return CreateAndSetMaterialInstanceTimeVarying_Parms.ReturnValue;
}

struct Engine_GetMaterial_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	class UMaterialInterface*                          ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UMaterialInterface* UMeshComponent::GetMaterial(int ElementIndex)
{
	static UFieldFunc* pFnGetMaterial = NULL;
	if(!pFnGetMaterial)
		pFnGetMaterial = UObject::FindFunction("Function Engine.MeshComponent.GetMaterial");

	Engine_GetMaterial_Parms GetMaterial_Parms;
	GetMaterial_Parms.ElementIndex = ElementIndex;
	pFnGetMaterial->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaterial,NULL,&GetMaterial_Parms,NULL);
	pFnGetMaterial->FunctionFlags |= 0x400;
	return GetMaterial_Parms.ReturnValue;
}

struct Engine_SetMaterial_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	class UMaterialInterface*                          Material;                                         		// 0x000004 (0x0004)              
};

void UMeshComponent::SetMaterial(int ElementIndex,class UMaterialInterface* Material)
{
	static UFieldFunc* pFnSetMaterial = NULL;
	if(!pFnSetMaterial)
		pFnSetMaterial = UObject::FindFunction("Function Engine.MeshComponent.SetMaterial");

	Engine_SetMaterial_Parms SetMaterial_Parms;
	SetMaterial_Parms.ElementIndex = ElementIndex;
	SetMaterial_Parms.Material = Material;
	pFnSetMaterial->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMaterial,NULL,&SetMaterial_Parms,NULL);
	pFnSetMaterial->FunctionFlags |= 0x400;
}

struct Engine_CreateAndSetMaterialInstanceConstant_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	class UMaterialInstanceConstant*                   ReturnValue;                                      		// 0x000004 (0x0004)              
	//class UMaterialInstanceConstant*                   Instance;                                         		// 0x000008 (0x0004)              
};

class UMaterialInstanceConstant* UMeshComponent::CreateAndSetMaterialInstanceConstant(int ElementIndex)
{
	static UFieldFunc* pFnCreateAndSetMaterialInstanceConstant = NULL;
	if(!pFnCreateAndSetMaterialInstanceConstant)
		pFnCreateAndSetMaterialInstanceConstant = UObject::FindFunction("Function Engine.MeshComponent.CreateAndSetMaterialInstanceConstant");

	Engine_CreateAndSetMaterialInstanceConstant_Parms CreateAndSetMaterialInstanceConstant_Parms;
	CreateAndSetMaterialInstanceConstant_Parms.ElementIndex = ElementIndex;
	ProcessEvent(pFnCreateAndSetMaterialInstanceConstant,NULL,&CreateAndSetMaterialInstanceConstant_Parms,NULL);
	return CreateAndSetMaterialInstanceConstant_Parms.ReturnValue;
}

struct Engine_SetStaticMesh_Parms
{
	class UStaticMesh*                                 NewMesh;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UStaticMeshComponent::SetStaticMesh(class UStaticMesh* NewMesh)
{
	static UFieldFunc* pFnSetStaticMesh = NULL;
	if(!pFnSetStaticMesh)
		pFnSetStaticMesh = UObject::FindFunction("Function Engine.StaticMeshComponent.SetStaticMesh");

	Engine_SetStaticMesh_Parms SetStaticMesh_Parms;
	SetStaticMesh_Parms.NewMesh = NewMesh;
	pFnSetStaticMesh->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStaticMesh,NULL,&SetStaticMesh_Parms,NULL);
	pFnSetStaticMesh->FunctionFlags |= 0x400;
	return SetStaticMesh_Parms.ReturnValue;
}

struct Engine_DisableRBCollisionWithSMC_Parms
{
	class UStaticMeshComponent*                        OtherSMC;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bDisabled : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void UStaticMeshComponent::DisableRBCollisionWithSMC(class UStaticMeshComponent* OtherSMC,bool bDisabled)
{
	static UFieldFunc* pFnDisableRBCollisionWithSMC = NULL;
	if(!pFnDisableRBCollisionWithSMC)
		pFnDisableRBCollisionWithSMC = UObject::FindFunction("Function Engine.StaticMeshComponent.DisableRBCollisionWithSMC");

	Engine_DisableRBCollisionWithSMC_Parms DisableRBCollisionWithSMC_Parms;
	DisableRBCollisionWithSMC_Parms.OtherSMC = OtherSMC;
	DisableRBCollisionWithSMC_Parms.bDisabled = bDisabled;
	pFnDisableRBCollisionWithSMC->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableRBCollisionWithSMC,NULL,&DisableRBCollisionWithSMC_Parms,NULL);
	pFnDisableRBCollisionWithSMC->FunctionFlags |= 0x400;
}

struct Engine_GetMediumFont_Parms
{
	class UFont*                                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFont* UEngine::GetMediumFont()
{
	static UFieldFunc* pFnGetMediumFont = NULL;
	if(!pFnGetMediumFont)
		pFnGetMediumFont = UObject::FindFunction("Function Engine.Engine.GetMediumFont");

	Engine_GetMediumFont_Parms GetMediumFont_Parms;
	pFnGetMediumFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMediumFont,NULL,&GetMediumFont_Parms,NULL);
	pFnGetMediumFont->FunctionFlags |= 0x400;
	return GetMediumFont_Parms.ReturnValue;
}

struct Engine_GetEngine_Parms
{
	class UEngine*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UEngine* UEngine::GetEngine()
{
	static UFieldFunc* pFnGetEngine = NULL;
	if(!pFnGetEngine)
		pFnGetEngine = UObject::FindFunction("Function Engine.Engine.GetEngine");

	Engine_GetEngine_Parms GetEngine_Parms;
	pFnGetEngine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetEngine,NULL,&GetEngine_Parms,NULL);
	pFnGetEngine->FunctionFlags |= 0x400;
	return GetEngine_Parms.ReturnValue;
}

struct Engine_OnConnectSuccess_Parms
{
};

void UEngine::OnConnectSuccess()
{
	static UFieldFunc* pFnOnConnectSuccess = NULL;
	if(!pFnOnConnectSuccess)
		pFnOnConnectSuccess = UObject::FindFunction("Function Engine.Engine.OnConnectSuccess");

	Engine_OnConnectSuccess_Parms OnConnectSuccess_Parms;
	ProcessEvent(pFnOnConnectSuccess,NULL,&OnConnectSuccess_Parms,NULL);
}

struct Engine_GetGEngine_Parms
{
	class UEngine*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UEngine* UEngine::GetGEngine()
{
	static UFieldFunc* pFnGetGEngine = NULL;
	if(!pFnGetGEngine)
		pFnGetGEngine = UObject::FindFunction("Function Engine.Engine.GetGEngine");

	Engine_GetGEngine_Parms GetGEngine_Parms;
	pFnGetGEngine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGEngine,NULL,&GetGEngine_Parms,NULL);
	pFnGetGEngine->FunctionFlags |= 0x400;
	return GetGEngine_Parms.ReturnValue;
}

struct Engine_OnBeginPlay_Parms
{
};

void UEngine::OnBeginPlay()
{
	static UFieldFunc* pFnOnBeginPlay = NULL;
	if(!pFnOnBeginPlay)
		pFnOnBeginPlay = UObject::FindFunction("Function Engine.Engine.OnBeginPlay");

	Engine_OnBeginPlay_Parms OnBeginPlay_Parms;
	ProcessEvent(pFnOnBeginPlay,NULL,&OnBeginPlay_Parms,NULL);
}

struct Engine_GetAdditionalFont_Parms
{
	int                                                AdditionalFontIndex;                              		// 0x000000 (0x0004)              
	class UFont*                                       ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UFont* UEngine::GetAdditionalFont(int AdditionalFontIndex)
{
	static UFieldFunc* pFnGetAdditionalFont = NULL;
	if(!pFnGetAdditionalFont)
		pFnGetAdditionalFont = UObject::FindFunction("Function Engine.Engine.GetAdditionalFont");

	Engine_GetAdditionalFont_Parms GetAdditionalFont_Parms;
	GetAdditionalFont_Parms.AdditionalFontIndex = AdditionalFontIndex;
	pFnGetAdditionalFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAdditionalFont,NULL,&GetAdditionalFont_Parms,NULL);
	pFnGetAdditionalFont->FunctionFlags |= 0x400;
	return GetAdditionalFont_Parms.ReturnValue;
}

struct Engine_GetTinyFont_Parms
{
	class UFont*                                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFont* UEngine::GetTinyFont()
{
	static UFieldFunc* pFnGetTinyFont = NULL;
	if(!pFnGetTinyFont)
		pFnGetTinyFont = UObject::FindFunction("Function Engine.Engine.GetTinyFont");

	Engine_GetTinyFont_Parms GetTinyFont_Parms;
	pFnGetTinyFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTinyFont,NULL,&GetTinyFont_Parms,NULL);
	pFnGetTinyFont->FunctionFlags |= 0x400;
	return GetTinyFont_Parms.ReturnValue;
}

struct Engine_GetSmallFont_Parms
{
	class UFont*                                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFont* UEngine::GetSmallFont()
{
	static UFieldFunc* pFnGetSmallFont = NULL;
	if(!pFnGetSmallFont)
		pFnGetSmallFont = UObject::FindFunction("Function Engine.Engine.GetSmallFont");

	Engine_GetSmallFont_Parms GetSmallFont_Parms;
	pFnGetSmallFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSmallFont,NULL,&GetSmallFont_Parms,NULL);
	pFnGetSmallFont->FunctionFlags |= 0x400;
	return GetSmallFont_Parms.ReturnValue;
}

struct Engine_AddOverlay_Parms
{
	class UFont*                                       Font;                                             		// 0x000000 (0x0004)              
	struct FString                                     Text;                                             		// 0x000004 (0x000C)              
	float                                              X;                                                		// 0x000010 (0x0004)              
	float                                              Y;                                                		// 0x000014 (0x0004)              
	float                                              ScaleX;                                           		// 0x000018 (0x0004)              
	float                                              ScaleY;                                           		// 0x00001C (0x0004)              
	unsigned long                                      bIsCentered : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

void UEngine::AddOverlay(class UFont* Font,struct FString Text,float X,float Y,float ScaleX,float ScaleY,bool bIsCentered)
{
	static UFieldFunc* pFnAddOverlay = NULL;
	if(!pFnAddOverlay)
		pFnAddOverlay = UObject::FindFunction("Function Engine.Engine.AddOverlay");

	Engine_AddOverlay_Parms AddOverlay_Parms;
	AddOverlay_Parms.Font = Font;
	memcpy(&AddOverlay_Parms.Text,&Text,0xC);
	AddOverlay_Parms.X = X;
	AddOverlay_Parms.Y = Y;
	AddOverlay_Parms.ScaleX = ScaleX;
	AddOverlay_Parms.ScaleY = ScaleY;
	AddOverlay_Parms.bIsCentered = bIsCentered;
	pFnAddOverlay->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddOverlay,NULL,&AddOverlay_Parms,NULL);
	pFnAddOverlay->FunctionFlags |= 0x400;
}

struct Engine_ReportScriptVersion_Parms
{
};

void UEngine::ReportScriptVersion()
{
	static UFieldFunc* pFnReportScriptVersion = NULL;
	if(!pFnReportScriptVersion)
		pFnReportScriptVersion = UObject::FindFunction("Function Engine.Engine.ReportScriptVersion");

	Engine_ReportScriptVersion_Parms ReportScriptVersion_Parms;
	ProcessEvent(pFnReportScriptVersion,NULL,&ReportScriptVersion_Parms,NULL);
}

struct Engine_GetLastMovieName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UEngine::GetLastMovieName()
{
	static UFieldFunc* pFnGetLastMovieName = NULL;
	if(!pFnGetLastMovieName)
		pFnGetLastMovieName = UObject::FindFunction("Function Engine.Engine.GetLastMovieName");

	Engine_GetLastMovieName_Parms GetLastMovieName_Parms;
	pFnGetLastMovieName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLastMovieName,NULL,&GetLastMovieName_Parms,NULL);
	pFnGetLastMovieName->FunctionFlags |= 0x400;
	return GetLastMovieName_Parms.ReturnValue;
}

struct Engine_IsSplitScreen_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UEngine::IsSplitScreen()
{
	static UFieldFunc* pFnIsSplitScreen = NULL;
	if(!pFnIsSplitScreen)
		pFnIsSplitScreen = UObject::FindFunction("Function Engine.Engine.IsSplitScreen");

	Engine_IsSplitScreen_Parms IsSplitScreen_Parms;
	pFnIsSplitScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsSplitScreen,NULL,&IsSplitScreen_Parms,NULL);
	pFnIsSplitScreen->FunctionFlags |= 0x400;
	return IsSplitScreen_Parms.ReturnValue;
}

struct Engine_GetCurrentWorldInfo_Parms
{
	class AWorldInfo*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AWorldInfo* UEngine::GetCurrentWorldInfo()
{
	static UFieldFunc* pFnGetCurrentWorldInfo = NULL;
	if(!pFnGetCurrentWorldInfo)
		pFnGetCurrentWorldInfo = UObject::FindFunction("Function Engine.Engine.GetCurrentWorldInfo");

	Engine_GetCurrentWorldInfo_Parms GetCurrentWorldInfo_Parms;
	pFnGetCurrentWorldInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentWorldInfo,NULL,&GetCurrentWorldInfo_Parms,NULL);
	pFnGetCurrentWorldInfo->FunctionFlags |= 0x400;
	return GetCurrentWorldInfo_Parms.ReturnValue;
}

struct Engine_GetAudioDevice_Parms
{
	class UAudioDevice*                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAudioDevice* UEngine::GetAudioDevice()
{
	static UFieldFunc* pFnGetAudioDevice = NULL;
	if(!pFnGetAudioDevice)
		pFnGetAudioDevice = UObject::FindFunction("Function Engine.Engine.GetAudioDevice");

	Engine_GetAudioDevice_Parms GetAudioDevice_Parms;
	pFnGetAudioDevice->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAudioDevice,NULL,&GetAudioDevice_Parms,NULL);
	pFnGetAudioDevice->FunctionFlags |= 0x400;
	return GetAudioDevice_Parms.ReturnValue;
}

struct Engine_RemoveAllOverlays_Parms
{
};

void UEngine::RemoveAllOverlays()
{
	static UFieldFunc* pFnRemoveAllOverlays = NULL;
	if(!pFnRemoveAllOverlays)
		pFnRemoveAllOverlays = UObject::FindFunction("Function Engine.Engine.RemoveAllOverlays");

	Engine_RemoveAllOverlays_Parms RemoveAllOverlays_Parms;
	pFnRemoveAllOverlays->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveAllOverlays,NULL,&RemoveAllOverlays_Parms,NULL);
	pFnRemoveAllOverlays->FunctionFlags |= 0x400;
}

struct Engine_GetLargeFont_Parms
{
	class UFont*                                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFont* UEngine::GetLargeFont()
{
	static UFieldFunc* pFnGetLargeFont = NULL;
	if(!pFnGetLargeFont)
		pFnGetLargeFont = UObject::FindFunction("Function Engine.Engine.GetLargeFont");

	Engine_GetLargeFont_Parms GetLargeFont_Parms;
	pFnGetLargeFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLargeFont,NULL,&GetLargeFont_Parms,NULL);
	pFnGetLargeFont->FunctionFlags |= 0x400;
	return GetLargeFont_Parms.ReturnValue;
}

struct Engine_OnConnectFailed_Parms
{
	int                                                nError;                                           		// 0x000000 (0x0004)              
};

void UEngine::OnConnectFailed(int nError)
{
	static UFieldFunc* pFnOnConnectFailed = NULL;
	if(!pFnOnConnectFailed)
		pFnOnConnectFailed = UObject::FindFunction("Function Engine.Engine.OnConnectFailed");

	Engine_OnConnectFailed_Parms OnConnectFailed_Parms;
	OnConnectFailed_Parms.nError = nError;
	ProcessEvent(pFnOnConnectFailed,NULL,&OnConnectFailed_Parms,NULL);
}

struct Engine_OnWorldCleanup_Parms
{
};

void UEngine::OnWorldCleanup()
{
	static UFieldFunc* pFnOnWorldCleanup = NULL;
	if(!pFnOnWorldCleanup)
		pFnOnWorldCleanup = UObject::FindFunction("Function Engine.Engine.OnWorldCleanup");

	Engine_OnWorldCleanup_Parms OnWorldCleanup_Parms;
	pFnOnWorldCleanup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnWorldCleanup,NULL,&OnWorldCleanup_Parms,NULL);
	pFnOnWorldCleanup->FunctionFlags |= 0x400;
}

struct Engine_PlayLoadMapMovie_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UEngine::PlayLoadMapMovie()
{
	static UFieldFunc* pFnPlayLoadMapMovie = NULL;
	if(!pFnPlayLoadMapMovie)
		pFnPlayLoadMapMovie = UObject::FindFunction("Function Engine.Engine.PlayLoadMapMovie");

	Engine_PlayLoadMapMovie_Parms PlayLoadMapMovie_Parms;
	pFnPlayLoadMapMovie->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayLoadMapMovie,NULL,&PlayLoadMapMovie_Parms,NULL);
	pFnPlayLoadMapMovie->FunctionFlags |= 0x400;
	return PlayLoadMapMovie_Parms.ReturnValue;
}

struct Engine_AddOverlayWrapped_Parms
{
	class UFont*                                       Font;                                             		// 0x000000 (0x0004)              
	struct FString                                     Text;                                             		// 0x000004 (0x000C)              
	float                                              X;                                                		// 0x000010 (0x0004)              
	float                                              Y;                                                		// 0x000014 (0x0004)              
	float                                              ScaleX;                                           		// 0x000018 (0x0004)              
	float                                              ScaleY;                                           		// 0x00001C (0x0004)              
	float                                              WrapWidth;                                        		// 0x000020 (0x0004)              
};

void UEngine::AddOverlayWrapped(class UFont* Font,struct FString Text,float X,float Y,float ScaleX,float ScaleY,float WrapWidth)
{
	static UFieldFunc* pFnAddOverlayWrapped = NULL;
	if(!pFnAddOverlayWrapped)
		pFnAddOverlayWrapped = UObject::FindFunction("Function Engine.Engine.AddOverlayWrapped");

	Engine_AddOverlayWrapped_Parms AddOverlayWrapped_Parms;
	AddOverlayWrapped_Parms.Font = Font;
	memcpy(&AddOverlayWrapped_Parms.Text,&Text,0xC);
	AddOverlayWrapped_Parms.X = X;
	AddOverlayWrapped_Parms.Y = Y;
	AddOverlayWrapped_Parms.ScaleX = ScaleX;
	AddOverlayWrapped_Parms.ScaleY = ScaleY;
	AddOverlayWrapped_Parms.WrapWidth = WrapWidth;
	pFnAddOverlayWrapped->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddOverlayWrapped,NULL,&AddOverlayWrapped_Parms,NULL);
	pFnAddOverlayWrapped->FunctionFlags |= 0x400;
}

struct Engine_StopMovie_Parms
{
	unsigned long                                      bDelayStopUntilGameHasRendered : 1;               		// 0x000000 (0x0004) [0x00000001] 
};

void UEngine::StopMovie(bool bDelayStopUntilGameHasRendered)
{
	static UFieldFunc* pFnStopMovie = NULL;
	if(!pFnStopMovie)
		pFnStopMovie = UObject::FindFunction("Function Engine.Engine.StopMovie");

	Engine_StopMovie_Parms StopMovie_Parms;
	StopMovie_Parms.bDelayStopUntilGameHasRendered = bDelayStopUntilGameHasRendered;
	pFnStopMovie->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopMovie,NULL,&StopMovie_Parms,NULL);
	pFnStopMovie->FunctionFlags |= 0x400;
}

struct Engine_GetOnlineSubsystem_Parms
{
	class UOnlineSubsystem*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UOnlineSubsystem* UGameEngine::GetOnlineSubsystem()
{
	static UFieldFunc* pFnGetOnlineSubsystem = NULL;
	if(!pFnGetOnlineSubsystem)
		pFnGetOnlineSubsystem = UObject::FindFunction("Function Engine.GameEngine.GetOnlineSubsystem");

	Engine_GetOnlineSubsystem_Parms GetOnlineSubsystem_Parms;
	pFnGetOnlineSubsystem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOnlineSubsystem,NULL,&GetOnlineSubsystem_Parms,NULL);
	pFnGetOnlineSubsystem->FunctionFlags |= 0x400;
	return GetOnlineSubsystem_Parms.ReturnValue;
}

struct Engine_GetTargetLocation_Parms
{
	class AActor*                                      RequestedBy;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bRequestAlternateLoc : 1;                         		// 0x000004 (0x0004) [0x00000001] 
	FVector3                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FVector3 AActor::GetTargetLocation(class AActor* RequestedBy,bool bRequestAlternateLoc)
{
	static UFieldFunc* pFnGetTargetLocation = NULL;
	if(!pFnGetTargetLocation)
		pFnGetTargetLocation = UObject::FindFunction("Function Engine.Actor.GetTargetLocation");

	Engine_GetTargetLocation_Parms GetTargetLocation_Parms;
	GetTargetLocation_Parms.RequestedBy = RequestedBy;
	GetTargetLocation_Parms.bRequestAlternateLoc = bRequestAlternateLoc;
	pFnGetTargetLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTargetLocation,NULL,&GetTargetLocation_Parms,NULL);
	pFnGetTargetLocation->FunctionFlags |= 0x400;
	return GetTargetLocation_Parms.ReturnValue;
}

struct Engine_CheckHitInfo_Parms
{
	struct FTraceHitInfo                               HitInfo;                                          		// 0x000000 (0x001C)              
	class UPrimitiveComponent*                         FallBackComponent;                                		// 0x00001C (0x0004)              
	FVector3                                           Dir;                                              		// 0x000020 (0x000C)              
	FVector3                                           out_HitLocation;                                  		// 0x00002C (0x000C)              
	//FVector3                                           out_NewHitLocation;                               		// 0x000038 (0x000C)              
	//FVector3                                           out_HitNormal;                                    		// 0x000044 (0x000C)              
	//FVector3                                           TraceEnd;                                         		// 0x000050 (0x000C)              
	//FVector3                                           TraceStart;                                       		// 0x00005C (0x000C)              
	//struct FTraceHitInfo                               newHitInfo;                                       		// 0x000068 (0x001C)              
};

void AActor::CheckHitInfo(struct FTraceHitInfo* HitInfo,class UPrimitiveComponent* FallBackComponent,FVector3 Dir,FVector3* out_HitLocation)
{
	static UFieldFunc* pFnCheckHitInfo = NULL;
	if(!pFnCheckHitInfo)
		pFnCheckHitInfo = UObject::FindFunction("Function Engine.Actor.CheckHitInfo");

	Engine_CheckHitInfo_Parms CheckHitInfo_Parms;
	CheckHitInfo_Parms.FallBackComponent = FallBackComponent;
	memcpy(&CheckHitInfo_Parms.Dir,&Dir,0xC);
	ProcessEvent(pFnCheckHitInfo,NULL,&CheckHitInfo_Parms,NULL);
	if(HitInfo)
		memcpy(HitInfo,&CheckHitInfo_Parms.HitInfo,0x1C);
	if(out_HitLocation)
		memcpy(out_HitLocation,&CheckHitInfo_Parms.out_HitLocation,0xC);
}

struct Engine_EncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::EncroachingOn(class AActor* Other)
{
	static UFieldFunc* pFnEncroachingOn = NULL;
	if(!pFnEncroachingOn)
		pFnEncroachingOn = UObject::FindFunction("Function Engine.Actor.EncroachingOn");

	Engine_EncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;
	ProcessEvent(pFnEncroachingOn,NULL,&EncroachingOn_Parms,NULL);
	return EncroachingOn_Parms.ReturnValue;
}

struct Engine_OnDestroy_Parms
{
	class USeqAct_Destroy*                             Action;                                           		// 0x000000 (0x0004)              
};

void AActor::OnDestroy(class USeqAct_Destroy* Action)
{
	static UFieldFunc* pFnOnDestroy = NULL;
	if(!pFnOnDestroy)
		pFnOnDestroy = UObject::FindFunction("Function Engine.Actor.OnDestroy");

	Engine_OnDestroy_Parms OnDestroy_Parms;
	OnDestroy_Parms.Action = Action;
	ProcessEvent(pFnOnDestroy,NULL,&OnDestroy_Parms,NULL);
}

struct Engine_GetVFXComponent_Parms
{
	class UcVisualFXComponent*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UcVisualFXComponent* AActor::GetVFXComponent()
{
	static UFieldFunc* pFnGetVFXComponent = NULL;
	if(!pFnGetVFXComponent)
		pFnGetVFXComponent = UObject::FindFunction("Function Engine.Actor.GetVFXComponent");

	Engine_GetVFXComponent_Parms GetVFXComponent_Parms;
	pFnGetVFXComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVFXComponent,NULL,&GetVFXComponent_Parms,NULL);
	pFnGetVFXComponent->FunctionFlags |= 0x400;
	return GetVFXComponent_Parms.ReturnValue;
}

struct Engine_OnRanOver_Parms
{
	class ASVehicle*                                   Vehicle;                                          		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         RunOverComponent;                                 		// 0x000004 (0x0004)              
	int                                                WheelIndex;                                       		// 0x000008 (0x0004)              
};

void AActor::OnRanOver(class ASVehicle* Vehicle,class UPrimitiveComponent* RunOverComponent,int WheelIndex)
{
	static UFieldFunc* pFnOnRanOver = NULL;
	if(!pFnOnRanOver)
		pFnOnRanOver = UObject::FindFunction("Function Engine.Actor.OnRanOver");

	Engine_OnRanOver_Parms OnRanOver_Parms;
	OnRanOver_Parms.Vehicle = Vehicle;
	OnRanOver_Parms.RunOverComponent = RunOverComponent;
	OnRanOver_Parms.WheelIndex = WheelIndex;
	ProcessEvent(pFnOnRanOver,NULL,&OnRanOver_Parms,NULL);
}

struct Engine_FindSpot_Parms
{
	FVector3                                           BoxExtent;                                        		// 0x000000 (0x000C)              
	FVector3                                           SpotLocation;                                     		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AActor::FindSpot(FVector3 BoxExtent,FVector3* SpotLocation)
{
	static UFieldFunc* pFnFindSpot = NULL;
	if(!pFnFindSpot)
		pFnFindSpot = UObject::FindFunction("Function Engine.Actor.FindSpot");

	Engine_FindSpot_Parms FindSpot_Parms;
	memcpy(&FindSpot_Parms.BoxExtent,&BoxExtent,0xC);
	pFnFindSpot->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindSpot,NULL,&FindSpot_Parms,NULL);
	pFnFindSpot->FunctionFlags |= 0x400;
	if(SpotLocation)
		memcpy(SpotLocation,&FindSpot_Parms.SpotLocation,0xC);
	return FindSpot_Parms.ReturnValue;
}

struct Engine_DrawDebugSphere_Parms
{
	FVector3                                           Center;                                           		// 0x000000 (0x000C)              
	float                                              Radius;                                           		// 0x00000C (0x0004)              
	int                                                Segments;                                         		// 0x000010 (0x0004)              
	unsigned char                                      R;                                                		// 0x000014 (0x0001)              
	unsigned char                                      G;                                                		// 0x000015 (0x0001)              
	unsigned char                                      B;                                                		// 0x000016 (0x0001)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x000018 (0x0004) [0x00000001] 
};

void AActor::DrawDebugSphere(FVector3 Center,float Radius,int Segments,unsigned char R,unsigned char G,unsigned char B,bool bPersistentLines)
{
	static UFieldFunc* pFnDrawDebugSphere = NULL;
	if(!pFnDrawDebugSphere)
		pFnDrawDebugSphere = UObject::FindFunction("Function Engine.Actor.DrawDebugSphere");

	Engine_DrawDebugSphere_Parms DrawDebugSphere_Parms;
	memcpy(&DrawDebugSphere_Parms.Center,&Center,0xC);
	DrawDebugSphere_Parms.Radius = Radius;
	DrawDebugSphere_Parms.Segments = Segments;
	DrawDebugSphere_Parms.R = R;
	DrawDebugSphere_Parms.G = G;
	DrawDebugSphere_Parms.B = B;
	DrawDebugSphere_Parms.bPersistentLines = bPersistentLines;
	pFnDrawDebugSphere->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawDebugSphere,NULL,&DrawDebugSphere_Parms,NULL);
	pFnDrawDebugSphere->FunctionFlags |= 0x400;
}

struct Engine_InIllegalLocation_APB_Parms
{
	struct FString                                     sErrorMessage;                                    		// 0x000000 (0x000C)              
};

void AActor::InIllegalLocation_APB(struct FString sErrorMessage)
{
	static UFieldFunc* pFnInIllegalLocation_APB = NULL;
	if(!pFnInIllegalLocation_APB)
		pFnInIllegalLocation_APB = UObject::FindFunction("Function Engine.Actor.InIllegalLocation_APB");

	Engine_InIllegalLocation_APB_Parms InIllegalLocation_APB_Parms;
	memcpy(&InIllegalLocation_APB_Parms.sErrorMessage,&sErrorMessage,0xC);
	pFnInIllegalLocation_APB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInIllegalLocation_APB,NULL,&InIllegalLocation_APB_Parms,NULL);
	pFnInIllegalLocation_APB->FunctionFlags |= 0x400;
}

struct Engine_ForceNetRelevant_Parms
{
};

void AActor::ForceNetRelevant()
{
	static UFieldFunc* pFnForceNetRelevant = NULL;
	if(!pFnForceNetRelevant)
		pFnForceNetRelevant = UObject::FindFunction("Function Engine.Actor.ForceNetRelevant");

	Engine_ForceNetRelevant_Parms ForceNetRelevant_Parms;
	ProcessEvent(pFnForceNetRelevant,NULL,&ForceNetRelevant_Parms,NULL);
}

struct Engine_OnHealDamage_Parms
{
	class USeqAct_HealDamage*                          Action;                                           		// 0x000000 (0x0004)              
	//class AController*                                 InstigatorController;                             		// 0x000004 (0x0004)              
	//class APawn*                                       InstigatorPawn;                                   		// 0x000008 (0x0004)              
};

void AActor::OnHealDamage(class USeqAct_HealDamage* Action)
{
	static UFieldFunc* pFnOnHealDamage = NULL;
	if(!pFnOnHealDamage)
		pFnOnHealDamage = UObject::FindFunction("Function Engine.Actor.OnHealDamage");

	Engine_OnHealDamage_Parms OnHealDamage_Parms;
	OnHealDamage_Parms.Action = Action;
	ProcessEvent(pFnOnHealDamage,NULL,&OnHealDamage_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AActor::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.Actor.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_SourceActorAllowCameraBlockingTest_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::SourceActorAllowCameraBlockingTest()
{
	static UFieldFunc* pFnSourceActorAllowCameraBlockingTest = NULL;
	if(!pFnSourceActorAllowCameraBlockingTest)
		pFnSourceActorAllowCameraBlockingTest = UObject::FindFunction("Function Engine.Actor.SourceActorAllowCameraBlockingTest");

	Engine_SourceActorAllowCameraBlockingTest_Parms SourceActorAllowCameraBlockingTest_Parms;
	pFnSourceActorAllowCameraBlockingTest->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSourceActorAllowCameraBlockingTest,NULL,&SourceActorAllowCameraBlockingTest_Parms,NULL);
	pFnSourceActorAllowCameraBlockingTest->FunctionFlags |= 0x400;
	return SourceActorAllowCameraBlockingTest_Parms.ReturnValue;
}

struct Engine_FinishAnim_Parms
{
	class UAnimNodeSequence*                           SeqNode;                                          		// 0x000000 (0x0004)              
};

void AActor::FinishAnim(class UAnimNodeSequence* SeqNode)
{
	static UFieldFunc* pFnFinishAnim = NULL;
	if(!pFnFinishAnim)
		pFnFinishAnim = UObject::FindFunction("Function Engine.Actor.FinishAnim");

	Engine_FinishAnim_Parms FinishAnim_Parms;
	FinishAnim_Parms.SeqNode = SeqNode;

	unsigned short NativeIndex = pFnFinishAnim->iNative;
	pFnFinishAnim->iNative = 0;
	pFnFinishAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFinishAnim,NULL,&FinishAnim_Parms,NULL);
	pFnFinishAnim->FunctionFlags |= 0x400;
	pFnFinishAnim->iNative = NativeIndex;
}

struct Engine_LocalPlayerControllers_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

void AActor::LocalPlayerControllers(class UClass* BaseClass,class APlayerController** PC)
{
	static UFieldFunc* pFnLocalPlayerControllers = NULL;
	if(!pFnLocalPlayerControllers)
		pFnLocalPlayerControllers = UObject::FindFunction("Function Engine.Actor.LocalPlayerControllers");

	Engine_LocalPlayerControllers_Parms LocalPlayerControllers_Parms;
	LocalPlayerControllers_Parms.BaseClass = BaseClass;
	pFnLocalPlayerControllers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLocalPlayerControllers,NULL,&LocalPlayerControllers_Parms,NULL);
	pFnLocalPlayerControllers->FunctionFlags |= 0x400;
	if(PC)
		*PC = LocalPlayerControllers_Parms.PC;
}

struct Engine_OnRigidBodySpringOverextension_Parms
{
	class URB_BodyInstance*                            BodyInstance;                                     		// 0x000000 (0x0004)              
};

void AActor::OnRigidBodySpringOverextension(class URB_BodyInstance* BodyInstance)
{
	static UFieldFunc* pFnOnRigidBodySpringOverextension = NULL;
	if(!pFnOnRigidBodySpringOverextension)
		pFnOnRigidBodySpringOverextension = UObject::FindFunction("Function Engine.Actor.OnRigidBodySpringOverextension");

	Engine_OnRigidBodySpringOverextension_Parms OnRigidBodySpringOverextension_Parms;
	OnRigidBodySpringOverextension_Parms.BodyInstance = BodyInstance;
	ProcessEvent(pFnOnRigidBodySpringOverextension,NULL,&OnRigidBodySpringOverextension_Parms,NULL);
}

struct Engine_CollisionChanged_Parms
{
};

void AActor::CollisionChanged()
{
	static UFieldFunc* pFnCollisionChanged = NULL;
	if(!pFnCollisionChanged)
		pFnCollisionChanged = UObject::FindFunction("Function Engine.Actor.CollisionChanged");

	Engine_CollisionChanged_Parms CollisionChanged_Parms;
	ProcessEvent(pFnCollisionChanged,NULL,&CollisionChanged_Parms,NULL);
}

struct Engine_PauseTimer_Parms
{
	unsigned long                                      bPause : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
	struct FScriptDelegate                             InTimerFunc;                                      		// 0x000004 (0x000C)              
};

void AActor::PauseTimer(bool bPause,struct FScriptDelegate InTimerFunc)
{
	static UFieldFunc* pFnPauseTimer = NULL;
	if(!pFnPauseTimer)
		pFnPauseTimer = UObject::FindFunction("Function Engine.Actor.PauseTimer");

	Engine_PauseTimer_Parms PauseTimer_Parms;
	PauseTimer_Parms.bPause = bPause;
	memcpy(&PauseTimer_Parms.InTimerFunc,&InTimerFunc,0xC);
	pFnPauseTimer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPauseTimer,NULL,&PauseTimer_Parms,NULL);
	pFnPauseTimer->FunctionFlags |= 0x400;
}

struct Engine_UnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::UnTouch(class AActor* Other)
{
	static UFieldFunc* pFnUnTouch = NULL;
	if(!pFnUnTouch)
		pFnUnTouch = UObject::FindFunction("Function Engine.Actor.UnTouch");

	Engine_UnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;
	ProcessEvent(pFnUnTouch,NULL,&UnTouch_Parms,NULL);
}

struct Engine_UnClock_Parms
{
	float                                              Time;                                             		// 0x000000 (0x0004)              
};

void AActor::UnClock(float* Time)
{
	static UFieldFunc* pFnUnClock = NULL;
	if(!pFnUnClock)
		pFnUnClock = UObject::FindFunction("Function Engine.Actor.UnClock");

	Engine_UnClock_Parms UnClock_Parms;
	pFnUnClock->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnClock,NULL,&UnClock_Parms,NULL);
	pFnUnClock->FunctionFlags |= 0x400;
	if(Time)
		*Time = UnClock_Parms.Time;
}

struct Engine_SpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class AActor* AActor::SpecialHandling(class APawn* Other)
{
	static UFieldFunc* pFnSpecialHandling = NULL;
	if(!pFnSpecialHandling)
		pFnSpecialHandling = UObject::FindFunction("Function Engine.Actor.SpecialHandling");

	Engine_SpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;
	ProcessEvent(pFnSpecialHandling,NULL,&SpecialHandling_Parms,NULL);
	return SpecialHandling_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void AActor::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Actor.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_SetOwner_Parms
{
	class AActor*                                      NewOwner;                                         		// 0x000000 (0x0004)              
};

void AActor::SetOwner(class AActor* NewOwner)
{
	static UFieldFunc* pFnSetOwner = NULL;
	if(!pFnSetOwner)
		pFnSetOwner = UObject::FindFunction("Function Engine.Actor.SetOwner");

	Engine_SetOwner_Parms SetOwner_Parms;
	SetOwner_Parms.NewOwner = NewOwner;

	unsigned short NativeIndex = pFnSetOwner->iNative;
	pFnSetOwner->iNative = 0;
	pFnSetOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOwner,NULL,&SetOwner_Parms,NULL);
	pFnSetOwner->FunctionFlags |= 0x400;
	pFnSetOwner->iNative = NativeIndex;
}

struct Engine_SetAlwaysRelevant_APB_Parms
{
	unsigned long                                      bNewAlwaysRelevant : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bForce : 1;                                       		// 0x000004 (0x0004) [0x00000001] 
};

void AActor::SetAlwaysRelevant_APB(bool bNewAlwaysRelevant,bool bForce)
{
	static UFieldFunc* pFnSetAlwaysRelevant_APB = NULL;
	if(!pFnSetAlwaysRelevant_APB)
		pFnSetAlwaysRelevant_APB = UObject::FindFunction("Function Engine.Actor.SetAlwaysRelevant_APB");

	Engine_SetAlwaysRelevant_APB_Parms SetAlwaysRelevant_APB_Parms;
	SetAlwaysRelevant_APB_Parms.bNewAlwaysRelevant = bNewAlwaysRelevant;
	SetAlwaysRelevant_APB_Parms.bForce = bForce;
	pFnSetAlwaysRelevant_APB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAlwaysRelevant_APB,NULL,&SetAlwaysRelevant_APB_Parms,NULL);
	pFnSetAlwaysRelevant_APB->FunctionFlags |= 0x400;
}

struct Engine_RigidBodyCollision_Parms
{
	class UPrimitiveComponent*                         HitComponent;                                     		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComponent;                                   		// 0x000004 (0x0004)              
	struct FCollisionImpactData                        RigidCollisionData;                               		// 0x000008 (0x0024)              
	int                                                ContactIndex;                                     		// 0x00002C (0x0004)              
};

void AActor::RigidBodyCollision(class UPrimitiveComponent* HitComponent,class UPrimitiveComponent* OtherComponent,struct FCollisionImpactData* RigidCollisionData,int ContactIndex)
{
	static UFieldFunc* pFnRigidBodyCollision = NULL;
	if(!pFnRigidBodyCollision)
		pFnRigidBodyCollision = UObject::FindFunction("Function Engine.Actor.RigidBodyCollision");

	Engine_RigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;
	ProcessEvent(pFnRigidBodyCollision,NULL,&RigidBodyCollision_Parms,NULL);
	if(RigidCollisionData)
		memcpy(RigidCollisionData,&RigidBodyCollision_Parms.RigidCollisionData,0x24);
}

struct Engine_IsInVolume_Parms
{
	class AVolume*                                     aVolume;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//class AVolume*                                     V;                                                		// 0x000008 (0x0004)              
};

bool AActor::IsInVolume(class AVolume* aVolume)
{
	static UFieldFunc* pFnIsInVolume = NULL;
	if(!pFnIsInVolume)
		pFnIsInVolume = UObject::FindFunction("Function Engine.Actor.IsInVolume");

	Engine_IsInVolume_Parms IsInVolume_Parms;
	IsInVolume_Parms.aVolume = aVolume;
	ProcessEvent(pFnIsInVolume,NULL,&IsInVolume_Parms,NULL);
	return IsInVolume_Parms.ReturnValue;
}

struct Engine_BroadcastLocalizedMessage_Parms
{
	class UClass*                                      InMessageClass;                                   		// 0x000000 (0x0004)              
	int                                                Switch;                                           		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
};

void AActor::BroadcastLocalizedMessage(class UClass* InMessageClass,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnBroadcastLocalizedMessage = NULL;
	if(!pFnBroadcastLocalizedMessage)
		pFnBroadcastLocalizedMessage = UObject::FindFunction("Function Engine.Actor.BroadcastLocalizedMessage");

	Engine_BroadcastLocalizedMessage_Parms BroadcastLocalizedMessage_Parms;
	BroadcastLocalizedMessage_Parms.InMessageClass = InMessageClass;
	BroadcastLocalizedMessage_Parms.Switch = Switch;
	BroadcastLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalizedMessage_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnBroadcastLocalizedMessage,NULL,&BroadcastLocalizedMessage_Parms,NULL);
}

struct Engine_PickedUpBy_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void AActor::PickedUpBy(class APawn* P)
{
	static UFieldFunc* pFnPickedUpBy = NULL;
	if(!pFnPickedUpBy)
		pFnPickedUpBy = UObject::FindFunction("Function Engine.Actor.PickedUpBy");

	Engine_PickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;
	ProcessEvent(pFnPickedUpBy,NULL,&PickedUpBy_Parms,NULL);
}

struct Engine_VisibleActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
	float                                              Radius;                                           		// 0x000008 (0x0004)              
	FVector3                                           Loc;                                              		// 0x00000C (0x000C)              
};

void AActor::VisibleActors(class UClass* BaseClass,class AActor** Actor,float Radius,FVector3 Loc)
{
	static UFieldFunc* pFnVisibleActors = NULL;
	if(!pFnVisibleActors)
		pFnVisibleActors = UObject::FindFunction("Function Engine.Actor.VisibleActors");

	Engine_VisibleActors_Parms VisibleActors_Parms;
	VisibleActors_Parms.BaseClass = BaseClass;
	VisibleActors_Parms.Radius = Radius;
	memcpy(&VisibleActors_Parms.Loc,&Loc,0xC);

	unsigned short NativeIndex = pFnVisibleActors->iNative;
	pFnVisibleActors->iNative = 0;
	pFnVisibleActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnVisibleActors,NULL,&VisibleActors_Parms,NULL);
	pFnVisibleActors->FunctionFlags |= 0x400;
	pFnVisibleActors->iNative = NativeIndex;
	if(Actor)
		*Actor = VisibleActors_Parms.Actor;
}

struct Engine_SetAnimPosition_Parms
{
	struct FName                                       SlotName;                                         		// 0x000000 (0x0008)              
	int                                                ChannelIndex;                                     		// 0x000008 (0x0004)              
	struct FName                                       InAnimSeqName;                                    		// 0x00000C (0x0008)              
	float                                              InPosition;                                       		// 0x000014 (0x0004)              
	unsigned long                                      bFireNotifies : 1;                                		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bLooping : 1;                                     		// 0x00001C (0x0004) [0x00000001] 
};

void AActor::SetAnimPosition(struct FName SlotName,int ChannelIndex,struct FName InAnimSeqName,float InPosition,bool bFireNotifies,bool bLooping)
{
	static UFieldFunc* pFnSetAnimPosition = NULL;
	if(!pFnSetAnimPosition)
		pFnSetAnimPosition = UObject::FindFunction("Function Engine.Actor.SetAnimPosition");

	Engine_SetAnimPosition_Parms SetAnimPosition_Parms;
	memcpy(&SetAnimPosition_Parms.SlotName,&SlotName,0x8);
	SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy(&SetAnimPosition_Parms.InAnimSeqName,&InAnimSeqName,0x8);
	SetAnimPosition_Parms.InPosition = InPosition;
	SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	SetAnimPosition_Parms.bLooping = bLooping;
	ProcessEvent(pFnSetAnimPosition,NULL,&SetAnimPosition_Parms,NULL);
}

struct Engine_AllActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
};

void AActor::AllActors(class UClass* BaseClass,class AActor** Actor)
{
	static UFieldFunc* pFnAllActors = NULL;
	if(!pFnAllActors)
		pFnAllActors = UObject::FindFunction("Function Engine.Actor.AllActors");

	Engine_AllActors_Parms AllActors_Parms;
	AllActors_Parms.BaseClass = BaseClass;

	unsigned short NativeIndex = pFnAllActors->iNative;
	pFnAllActors->iNative = 0;
	pFnAllActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllActors,NULL,&AllActors_Parms,NULL);
	pFnAllActors->FunctionFlags |= 0x400;
	pFnAllActors->iNative = NativeIndex;
	if(Actor)
		*Actor = AllActors_Parms.Actor;
}

struct Engine_IsUsingGrid_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::IsUsingGrid()
{
	static UFieldFunc* pFnIsUsingGrid = NULL;
	if(!pFnIsUsingGrid)
		pFnIsUsingGrid = UObject::FindFunction("Function Engine.Actor.IsUsingGrid");

	Engine_IsUsingGrid_Parms IsUsingGrid_Parms;
	pFnIsUsingGrid->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsUsingGrid,NULL,&IsUsingGrid_Parms,NULL);
	pFnIsUsingGrid->FunctionFlags |= 0x400;
	return IsUsingGrid_Parms.ReturnValue;
}

struct Engine_CreateAudioComponent_Parms
{
	class USoundCue*                                   InSoundCue;                                       		// 0x000000 (0x0004)              
	unsigned long                                      bPlay : 1;                                        		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bStopWhenOwnerDestroyed : 1;                      		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bUseLocation : 1;                                 		// 0x00000C (0x0004) [0x00000001] 
	FVector3                                           SourceLocation;                                   		// 0x000010 (0x000C)              
	unsigned long                                      bAttachToSelf : 1;                                		// 0x00001C (0x0004) [0x00000001] 
	class UAudioComponent*                             ReturnValue;                                      		// 0x000020 (0x0004)              
};

class UAudioComponent* AActor::CreateAudioComponent(class USoundCue* InSoundCue,bool bPlay,bool bStopWhenOwnerDestroyed,bool bUseLocation,FVector3 SourceLocation,bool bAttachToSelf)
{
	static UFieldFunc* pFnCreateAudioComponent = NULL;
	if(!pFnCreateAudioComponent)
		pFnCreateAudioComponent = UObject::FindFunction("Function Engine.Actor.CreateAudioComponent");

	Engine_CreateAudioComponent_Parms CreateAudioComponent_Parms;
	CreateAudioComponent_Parms.InSoundCue = InSoundCue;
	CreateAudioComponent_Parms.bPlay = bPlay;
	CreateAudioComponent_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	CreateAudioComponent_Parms.bUseLocation = bUseLocation;
	memcpy(&CreateAudioComponent_Parms.SourceLocation,&SourceLocation,0xC);
	CreateAudioComponent_Parms.bAttachToSelf = bAttachToSelf;
	pFnCreateAudioComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateAudioComponent,NULL,&CreateAudioComponent_Parms,NULL);
	pFnCreateAudioComponent->FunctionFlags |= 0x400;
	return CreateAudioComponent_Parms.ReturnValue;
}

struct Engine_IsBasedOn_Parms
{
	class AActor*                                      TestActor;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::IsBasedOn(class AActor* TestActor)
{
	static UFieldFunc* pFnIsBasedOn = NULL;
	if(!pFnIsBasedOn)
		pFnIsBasedOn = UObject::FindFunction("Function Engine.Actor.IsBasedOn");

	Engine_IsBasedOn_Parms IsBasedOn_Parms;
	IsBasedOn_Parms.TestActor = TestActor;
	pFnIsBasedOn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsBasedOn,NULL,&IsBasedOn_Parms,NULL);
	pFnIsBasedOn->FunctionFlags |= 0x400;
	return IsBasedOn_Parms.ReturnValue;
}

struct Engine_ShutDown_Parms
{
};

void AActor::ShutDown()
{
	static UFieldFunc* pFnShutDown = NULL;
	if(!pFnShutDown)
		pFnShutDown = UObject::FindFunction("Function Engine.Actor.ShutDown");

	Engine_ShutDown_Parms ShutDown_Parms;
	ProcessEvent(pFnShutDown,NULL,&ShutDown_Parms,NULL);
}

struct Engine_IsPlayerOwned_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::IsPlayerOwned()
{
	static UFieldFunc* pFnIsPlayerOwned = NULL;
	if(!pFnIsPlayerOwned)
		pFnIsPlayerOwned = UObject::FindFunction("Function Engine.Actor.IsPlayerOwned");

	Engine_IsPlayerOwned_Parms IsPlayerOwned_Parms;
	pFnIsPlayerOwned->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPlayerOwned,NULL,&IsPlayerOwned_Parms,NULL);
	pFnIsPlayerOwned->FunctionFlags |= 0x400;
	return IsPlayerOwned_Parms.ReturnValue;
}

struct Engine_SetBase_Parms
{
	class AActor*                                      NewBase;                                          		// 0x000000 (0x0004)              
	FVector3                                           NewFloor;                                         		// 0x000004 (0x000C)              
	class USkeletalMeshComponent*                      SkelComp;                                         		// 0x000010 (0x0004)              
	struct FName                                       AttachName;                                       		// 0x000014 (0x0008)              
};

void AActor::SetBase(class AActor* NewBase,FVector3 NewFloor,class USkeletalMeshComponent* SkelComp,struct FName AttachName)
{
	static UFieldFunc* pFnSetBase = NULL;
	if(!pFnSetBase)
		pFnSetBase = UObject::FindFunction("Function Engine.Actor.SetBase");

	Engine_SetBase_Parms SetBase_Parms;
	SetBase_Parms.NewBase = NewBase;
	memcpy(&SetBase_Parms.NewFloor,&NewFloor,0xC);
	SetBase_Parms.SkelComp = SkelComp;
	memcpy(&SetBase_Parms.AttachName,&AttachName,0x8);

	unsigned short NativeIndex = pFnSetBase->iNative;
	pFnSetBase->iNative = 0;
	pFnSetBase->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBase,NULL,&SetBase_Parms,NULL);
	pFnSetBase->FunctionFlags |= 0x400;
	pFnSetBase->iNative = NativeIndex;
}

struct Engine_SetGRI_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x000000 (0x0004)              
};

void AActor::SetGRI(class AGameReplicationInfo* GRI)
{
	static UFieldFunc* pFnSetGRI = NULL;
	if(!pFnSetGRI)
		pFnSetGRI = UObject::FindFunction("Function Engine.Actor.SetGRI");

	Engine_SetGRI_Parms SetGRI_Parms;
	SetGRI_Parms.GRI = GRI;
	ProcessEvent(pFnSetGRI,NULL,&SetGRI_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AActor::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Actor.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_OnSetBlockRigidBody_Parms
{
	class USeqAct_SetBlockRigidBody*                   Action;                                           		// 0x000000 (0x0004)              
};

void AActor::OnSetBlockRigidBody(class USeqAct_SetBlockRigidBody* Action)
{
	static UFieldFunc* pFnOnSetBlockRigidBody = NULL;
	if(!pFnOnSetBlockRigidBody)
		pFnOnSetBlockRigidBody = UObject::FindFunction("Function Engine.Actor.OnSetBlockRigidBody");

	Engine_OnSetBlockRigidBody_Parms OnSetBlockRigidBody_Parms;
	OnSetBlockRigidBody_Parms.Action = Action;
	ProcessEvent(pFnOnSetBlockRigidBody,NULL,&OnSetBlockRigidBody_Parms,NULL);
}

struct Engine_Sleep_Parms
{
	float                                              Seconds;                                          		// 0x000000 (0x0004)              
};

void AActor::Sleep(float Seconds)
{
	static UFieldFunc* pFnSleep = NULL;
	if(!pFnSleep)
		pFnSleep = UObject::FindFunction("Function Engine.Actor.Sleep");

	Engine_Sleep_Parms Sleep_Parms;
	Sleep_Parms.Seconds = Seconds;

	unsigned short NativeIndex = pFnSleep->iNative;
	pFnSleep->iNative = 0;
	pFnSleep->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSleep,NULL,&Sleep_Parms,NULL);
	pFnSleep->FunctionFlags |= 0x400;
	pFnSleep->iNative = NativeIndex;
}

struct Engine_IsOverlapping_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::IsOverlapping(class AActor* A)
{
	static UFieldFunc* pFnIsOverlapping = NULL;
	if(!pFnIsOverlapping)
		pFnIsOverlapping = UObject::FindFunction("Function Engine.Actor.IsOverlapping");

	Engine_IsOverlapping_Parms IsOverlapping_Parms;
	IsOverlapping_Parms.A = A;
	pFnIsOverlapping->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsOverlapping,NULL,&IsOverlapping_Parms,NULL);
	pFnIsOverlapping->FunctionFlags |= 0x400;
	return IsOverlapping_Parms.ReturnValue;
}

struct Engine_TimeSince_Parms
{
	double                                             Time;                                             		// 0x000000 (0x0008)              
	double                                             ReturnValue;                                      		// 0x000008 (0x0008)              
};

double AActor::TimeSince(double Time)
{
	static UFieldFunc* pFnTimeSince = NULL;
	if(!pFnTimeSince)
		pFnTimeSince = UObject::FindFunction("Function Engine.Actor.TimeSince");

	Engine_TimeSince_Parms TimeSince_Parms;
	TimeSince_Parms.Time = Time;
	ProcessEvent(pFnTimeSince,NULL,&TimeSince_Parms,NULL);
	return TimeSince_Parms.ReturnValue;
}

struct Engine_SetRelativeRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::SetRelativeRotation(FRotator NewRotation)
{
	static UFieldFunc* pFnSetRelativeRotation = NULL;
	if(!pFnSetRelativeRotation)
		pFnSetRelativeRotation = UObject::FindFunction("Function Engine.Actor.SetRelativeRotation");

	Engine_SetRelativeRotation_Parms SetRelativeRotation_Parms;
	memcpy(&SetRelativeRotation_Parms.NewRotation,&NewRotation,0xC);
	pFnSetRelativeRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRelativeRotation,NULL,&SetRelativeRotation_Parms,NULL);
	pFnSetRelativeRotation->FunctionFlags |= 0x400;
	return SetRelativeRotation_Parms.ReturnValue;
}

struct Engine_SetOnlyOwnerSee_Parms
{
	unsigned long                                      bNewOnlyOwnerSee : 1;                             		// 0x000000 (0x0004) [0x00000001] 
};

void AActor::SetOnlyOwnerSee(bool bNewOnlyOwnerSee)
{
	static UFieldFunc* pFnSetOnlyOwnerSee = NULL;
	if(!pFnSetOnlyOwnerSee)
		pFnSetOnlyOwnerSee = UObject::FindFunction("Function Engine.Actor.SetOnlyOwnerSee");

	Engine_SetOnlyOwnerSee_Parms SetOnlyOwnerSee_Parms;
	SetOnlyOwnerSee_Parms.bNewOnlyOwnerSee = bNewOnlyOwnerSee;
	pFnSetOnlyOwnerSee->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOnlyOwnerSee,NULL,&SetOnlyOwnerSee_Parms,NULL);
	pFnSetOnlyOwnerSee->FunctionFlags |= 0x400;
}

struct Engine_MakeNoise_Parms
{
	float                                              Loudness;                                         		// 0x000000 (0x0004)              
	struct FName                                       NoiseType;                                        		// 0x000004 (0x0008)              
};

void AActor::MakeNoise(float Loudness,struct FName NoiseType)
{
	static UFieldFunc* pFnMakeNoise = NULL;
	if(!pFnMakeNoise)
		pFnMakeNoise = UObject::FindFunction("Function Engine.Actor.MakeNoise");

	Engine_MakeNoise_Parms MakeNoise_Parms;
	MakeNoise_Parms.Loudness = Loudness;
	memcpy(&MakeNoise_Parms.NoiseType,&NoiseType,0x8);

	unsigned short NativeIndex = pFnMakeNoise->iNative;
	pFnMakeNoise->iNative = 0;
	pFnMakeNoise->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMakeNoise,NULL,&MakeNoise_Parms,NULL);
	pFnMakeNoise->FunctionFlags |= 0x400;
	pFnMakeNoise->iNative = NativeIndex;
}

struct Engine_ModifyHearSoundComponent_Parms
{
	class UAudioComponent*                             AC;                                               		// 0x000000 (0x0004)              
};

void AActor::ModifyHearSoundComponent(class UAudioComponent* AC)
{
	static UFieldFunc* pFnModifyHearSoundComponent = NULL;
	if(!pFnModifyHearSoundComponent)
		pFnModifyHearSoundComponent = UObject::FindFunction("Function Engine.Actor.ModifyHearSoundComponent");

	Engine_ModifyHearSoundComponent_Parms ModifyHearSoundComponent_Parms;
	ModifyHearSoundComponent_Parms.AC = AC;
	ProcessEvent(pFnModifyHearSoundComponent,NULL,&ModifyHearSoundComponent_Parms,NULL);
}

struct Engine_GetActorFaceFXAsset_Parms
{
	class UFaceFXAsset*                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFaceFXAsset* AActor::GetActorFaceFXAsset()
{
	static UFieldFunc* pFnGetActorFaceFXAsset = NULL;
	if(!pFnGetActorFaceFXAsset)
		pFnGetActorFaceFXAsset = UObject::FindFunction("Function Engine.Actor.GetActorFaceFXAsset");

	Engine_GetActorFaceFXAsset_Parms GetActorFaceFXAsset_Parms;
	ProcessEvent(pFnGetActorFaceFXAsset,NULL,&GetActorFaceFXAsset_Parms,NULL);
	return GetActorFaceFXAsset_Parms.ReturnValue;
}

struct Engine_Bump_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitNormal;                                        		// 0x000008 (0x000C)              
};

void AActor::Bump(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitNormal)
{
	static UFieldFunc* pFnBump = NULL;
	if(!pFnBump)
		pFnBump = UObject::FindFunction("Function Engine.Actor.Bump");

	Engine_Bump_Parms Bump_Parms;
	Bump_Parms.Other = Other;
	Bump_Parms.OtherComp = OtherComp;
	memcpy(&Bump_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnBump,NULL,&Bump_Parms,NULL);
}

struct Engine_DEBUGBREAKPOINT_Parms
{
};

void AActor::DEBUGBREAKPOINT()
{
	static UFieldFunc* pFnDEBUGBREAKPOINT = NULL;
	if(!pFnDEBUGBREAKPOINT)
		pFnDEBUGBREAKPOINT = UObject::FindFunction("Function Engine.Actor.DEBUGBREAKPOINT");

	Engine_DEBUGBREAKPOINT_Parms DEBUGBREAKPOINT_Parms;
	pFnDEBUGBREAKPOINT->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDEBUGBREAKPOINT,NULL,&DEBUGBREAKPOINT_Parms,NULL);
	pFnDEBUGBREAKPOINT->FunctionFlags |= 0x400;
}

struct Engine_ForceUpdateComponents_Parms
{
	unsigned long                                      bCollisionUpdate : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bTransformOnly : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void AActor::ForceUpdateComponents(bool bCollisionUpdate,bool bTransformOnly)
{
	static UFieldFunc* pFnForceUpdateComponents = NULL;
	if(!pFnForceUpdateComponents)
		pFnForceUpdateComponents = UObject::FindFunction("Function Engine.Actor.ForceUpdateComponents");

	Engine_ForceUpdateComponents_Parms ForceUpdateComponents_Parms;
	ForceUpdateComponents_Parms.bCollisionUpdate = bCollisionUpdate;
	ForceUpdateComponents_Parms.bTransformOnly = bTransformOnly;
	pFnForceUpdateComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceUpdateComponents,NULL,&ForceUpdateComponents_Parms,NULL);
	pFnForceUpdateComponents->FunctionFlags |= 0x400;
}

struct Engine_ClearLatentAction_Parms
{
	class UClass*                                      actionClass;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bAborted : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	class USeqAct_Latent*                              exceptionAction;                                  		// 0x000008 (0x0004)              
	//int                                                Idx;                                              		// 0x00000C (0x0004)              
};

void AActor::ClearLatentAction(class UClass* actionClass,bool bAborted,class USeqAct_Latent* exceptionAction)
{
	static UFieldFunc* pFnClearLatentAction = NULL;
	if(!pFnClearLatentAction)
		pFnClearLatentAction = UObject::FindFunction("Function Engine.Actor.ClearLatentAction");

	Engine_ClearLatentAction_Parms ClearLatentAction_Parms;
	ClearLatentAction_Parms.actionClass = actionClass;
	ClearLatentAction_Parms.bAborted = bAborted;
	ClearLatentAction_Parms.exceptionAction = exceptionAction;
	ProcessEvent(pFnClearLatentAction,NULL,&ClearLatentAction_Parms,NULL);
}

struct Engine_BasedActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
};

void AActor::BasedActors(class UClass* BaseClass,class AActor** Actor)
{
	static UFieldFunc* pFnBasedActors = NULL;
	if(!pFnBasedActors)
		pFnBasedActors = UObject::FindFunction("Function Engine.Actor.BasedActors");

	Engine_BasedActors_Parms BasedActors_Parms;
	BasedActors_Parms.BaseClass = BaseClass;

	unsigned short NativeIndex = pFnBasedActors->iNative;
	pFnBasedActors->iNative = 0;
	pFnBasedActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBasedActors,NULL,&BasedActors_Parms,NULL);
	pFnBasedActors->FunctionFlags |= 0x400;
	pFnBasedActors->iNative = NativeIndex;
	if(Actor)
		*Actor = BasedActors_Parms.Actor;
}

struct Engine_BaseChange_Parms
{
};

void AActor::BaseChange()
{
	static UFieldFunc* pFnBaseChange = NULL;
	if(!pFnBaseChange)
		pFnBaseChange = UObject::FindFunction("Function Engine.Actor.BaseChange");

	Engine_BaseChange_Parms BaseChange_Parms;
	ProcessEvent(pFnBaseChange,NULL,&BaseChange_Parms,NULL);
}

struct Engine_PlayTeleportEffect_Parms
{
	unsigned long                                      bOut : 1;                                         		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bSound : 1;                                       		// 0x000004 (0x0004) [0x00000001] 
};

void AActor::PlayTeleportEffect(bool bOut,bool bSound)
{
	static UFieldFunc* pFnPlayTeleportEffect = NULL;
	if(!pFnPlayTeleportEffect)
		pFnPlayTeleportEffect = UObject::FindFunction("Function Engine.Actor.PlayTeleportEffect");

	Engine_PlayTeleportEffect_Parms PlayTeleportEffect_Parms;
	PlayTeleportEffect_Parms.bOut = bOut;
	PlayTeleportEffect_Parms.bSound = bSound;
	ProcessEvent(pFnPlayTeleportEffect,NULL,&PlayTeleportEffect_Parms,NULL);
}

struct Engine_GetGravityZ_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AActor::GetGravityZ()
{
	static UFieldFunc* pFnGetGravityZ = NULL;
	if(!pFnGetGravityZ)
		pFnGetGravityZ = UObject::FindFunction("Function Engine.Actor.GetGravityZ");

	Engine_GetGravityZ_Parms GetGravityZ_Parms;
	pFnGetGravityZ->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGravityZ,NULL,&GetGravityZ_Parms,NULL);
	pFnGetGravityZ->FunctionFlags |= 0x400;
	return GetGravityZ_Parms.ReturnValue;
}

struct Engine_PawnBaseDied_Parms
{
};

void AActor::PawnBaseDied()
{
	static UFieldFunc* pFnPawnBaseDied = NULL;
	if(!pFnPawnBaseDied)
		pFnPawnBaseDied = UObject::FindFunction("Function Engine.Actor.PawnBaseDied");

	Engine_PawnBaseDied_Parms PawnBaseDied_Parms;
	ProcessEvent(pFnPawnBaseDied,NULL,&PawnBaseDied_Parms,NULL);
}

struct Engine_SetRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::SetRotation(FRotator NewRotation)
{
	static UFieldFunc* pFnSetRotation = NULL;
	if(!pFnSetRotation)
		pFnSetRotation = UObject::FindFunction("Function Engine.Actor.SetRotation");

	Engine_SetRotation_Parms SetRotation_Parms;
	memcpy(&SetRotation_Parms.NewRotation,&NewRotation,0xC);

	unsigned short NativeIndex = pFnSetRotation->iNative;
	pFnSetRotation->iNative = 0;
	pFnSetRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRotation,NULL,&SetRotation_Parms,NULL);
	pFnSetRotation->FunctionFlags |= 0x400;
	pFnSetRotation->iNative = NativeIndex;
	return SetRotation_Parms.ReturnValue;
}

struct Engine_PostRenderFor_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	class UCanvas*                                     Canvas;                                           		// 0x000004 (0x0004)              
	FVector3                                           CameraPosition;                                   		// 0x000008 (0x000C)              
	FVector3                                           CameraDir;                                        		// 0x000014 (0x000C)              
};

void AActor::PostRenderFor(class APlayerController* PC,class UCanvas* Canvas,FVector3 CameraPosition,FVector3 CameraDir)
{
	static UFieldFunc* pFnPostRenderFor = NULL;
	if(!pFnPostRenderFor)
		pFnPostRenderFor = UObject::FindFunction("Function Engine.Actor.PostRenderFor");

	Engine_PostRenderFor_Parms PostRenderFor_Parms;
	PostRenderFor_Parms.PC = PC;
	PostRenderFor_Parms.Canvas = Canvas;
	memcpy(&PostRenderFor_Parms.CameraPosition,&CameraPosition,0xC);
	memcpy(&PostRenderFor_Parms.CameraDir,&CameraDir,0xC);
	ProcessEvent(pFnPostRenderFor,NULL,&PostRenderFor_Parms,NULL);
}

struct Engine_SetStasis_Parms
{
	unsigned long                                      bNewStasis : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bSimpleWakeUpEvent : 1;                           		// 0x000004 (0x0004) [0x00000001] 
};

void AActor::SetStasis(bool bNewStasis,bool bSimpleWakeUpEvent)
{
	static UFieldFunc* pFnSetStasis = NULL;
	if(!pFnSetStasis)
		pFnSetStasis = UObject::FindFunction("Function Engine.Actor.SetStasis");

	Engine_SetStasis_Parms SetStasis_Parms;
	SetStasis_Parms.bNewStasis = bNewStasis;
	SetStasis_Parms.bSimpleWakeUpEvent = bSimpleWakeUpEvent;
	pFnSetStasis->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStasis,NULL,&SetStasis_Parms,NULL);
	pFnSetStasis->FunctionFlags |= 0x400;
}

struct Engine_MoveActorFast_Parms
{
	FVector3                                           pr_vLocation;                                     		// 0x000000 (0x000C)              
	FRotator                                           pr_rRotation;                                     		// 0x00000C (0x000C)              
	FVector3                                           pr_vMoveBy;                                       		// 0x000018 (0x000C)              
};

void AActor::MoveActorFast(FVector3 pr_vLocation,FRotator pr_rRotation,FVector3 pr_vMoveBy)
{
	static UFieldFunc* pFnMoveActorFast = NULL;
	if(!pFnMoveActorFast)
		pFnMoveActorFast = UObject::FindFunction("Function Engine.Actor.MoveActorFast");

	Engine_MoveActorFast_Parms MoveActorFast_Parms;
	memcpy(&MoveActorFast_Parms.pr_vLocation,&pr_vLocation,0xC);
	memcpy(&MoveActorFast_Parms.pr_rRotation,&pr_rRotation,0xC);
	memcpy(&MoveActorFast_Parms.pr_vMoveBy,&pr_vMoveBy,0xC);
	pFnMoveActorFast->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMoveActorFast,NULL,&MoveActorFast_Parms,NULL);
	pFnMoveActorFast->FunctionFlags |= 0x400;
}

struct Engine_Destroy_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::Destroy()
{
	static UFieldFunc* pFnDestroy = NULL;
	if(!pFnDestroy)
		pFnDestroy = UObject::FindFunction("Function Engine.Actor.Destroy");

	Engine_Destroy_Parms Destroy_Parms;

	unsigned short NativeIndex = pFnDestroy->iNative;
	pFnDestroy->iNative = 0;
	pFnDestroy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDestroy,NULL,&Destroy_Parms,NULL);
	pFnDestroy->FunctionFlags |= 0x400;
	pFnDestroy->iNative = NativeIndex;
	return Destroy_Parms.ReturnValue;
}

struct Engine_PostTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::PostTouch(class AActor* Other)
{
	static UFieldFunc* pFnPostTouch = NULL;
	if(!pFnPostTouch)
		pFnPostTouch = UObject::FindFunction("Function Engine.Actor.PostTouch");

	Engine_PostTouch_Parms PostTouch_Parms;
	PostTouch_Parms.Other = Other;
	pFnPostTouch->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPostTouch,NULL,&PostTouch_Parms,NULL);
	pFnPostTouch->FunctionFlags |= 0x400;
}

struct Engine_Trace_Parms
{
	FVector3                                           HitLocation;                                      		// 0x000000 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x00000C (0x000C)              
	FVector3                                           TraceEnd;                                         		// 0x000018 (0x000C)              
	FVector3                                           TraceStart;                                       		// 0x000024 (0x000C)              
	unsigned long                                      bTraceActors : 1;                                 		// 0x000030 (0x0004) [0x00000001] 
	FVector3                                           Extent;                                           		// 0x000034 (0x000C)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x000040 (0x001C)              
	int                                                ExtraTraceFlags;                                  		// 0x00005C (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000060 (0x0004)              
};

class AActor* AActor::Trace(FVector3* HitLocation,FVector3* HitNormal,FVector3 TraceEnd,FVector3 TraceStart,bool bTraceActors,FVector3 Extent,struct FTraceHitInfo* HitInfo,int ExtraTraceFlags)
{
	static UFieldFunc* pFnTrace = NULL;
	if(!pFnTrace)
		pFnTrace = UObject::FindFunction("Function Engine.Actor.Trace");

	Engine_Trace_Parms Trace_Parms;
	memcpy(&Trace_Parms.TraceEnd,&TraceEnd,0xC);
	memcpy(&Trace_Parms.TraceStart,&TraceStart,0xC);
	Trace_Parms.bTraceActors = bTraceActors;
	memcpy(&Trace_Parms.Extent,&Extent,0xC);
	Trace_Parms.ExtraTraceFlags = ExtraTraceFlags;

	unsigned short NativeIndex = pFnTrace->iNative;
	pFnTrace->iNative = 0;
	pFnTrace->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTrace,NULL,&Trace_Parms,NULL);
	pFnTrace->FunctionFlags |= 0x400;
	pFnTrace->iNative = NativeIndex;
	if(HitLocation)
		memcpy(HitLocation,&Trace_Parms.HitLocation,0xC);
	if(HitNormal)
		memcpy(HitNormal,&Trace_Parms.HitNormal,0xC);
	if(HitInfo)
		memcpy(HitInfo,&Trace_Parms.HitInfo,0x1C);
	return Trace_Parms.ReturnValue;
}

struct Engine_SetSkelControlScale_Parms
{
	struct FName                                       SkelControlName;                                  		// 0x000000 (0x0008)              
	float                                              Scale;                                            		// 0x000008 (0x0004)              
};

void AActor::SetSkelControlScale(struct FName SkelControlName,float Scale)
{
	static UFieldFunc* pFnSetSkelControlScale = NULL;
	if(!pFnSetSkelControlScale)
		pFnSetSkelControlScale = UObject::FindFunction("Function Engine.Actor.SetSkelControlScale");

	Engine_SetSkelControlScale_Parms SetSkelControlScale_Parms;
	memcpy(&SetSkelControlScale_Parms.SkelControlName,&SkelControlName,0x8);
	SetSkelControlScale_Parms.Scale = Scale;
	ProcessEvent(pFnSetSkelControlScale,NULL,&SetSkelControlScale_Parms,NULL);
}

struct Engine_GetTimerCount_Parms
{
	struct FScriptDelegate                             InTimerFunc;                                      		// 0x000000 (0x000C)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float AActor::GetTimerCount(struct FScriptDelegate InTimerFunc)
{
	static UFieldFunc* pFnGetTimerCount = NULL;
	if(!pFnGetTimerCount)
		pFnGetTimerCount = UObject::FindFunction("Function Engine.Actor.GetTimerCount");

	Engine_GetTimerCount_Parms GetTimerCount_Parms;
	memcpy(&GetTimerCount_Parms.InTimerFunc,&InTimerFunc,0xC);
	pFnGetTimerCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTimerCount,NULL,&GetTimerCount_Parms,NULL);
	pFnGetTimerCount->FunctionFlags |= 0x400;
	return GetTimerCount_Parms.ReturnValue;
}

struct Engine_DynamicActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
};

void AActor::DynamicActors(class UClass* BaseClass,class AActor** Actor)
{
	static UFieldFunc* pFnDynamicActors = NULL;
	if(!pFnDynamicActors)
		pFnDynamicActors = UObject::FindFunction("Function Engine.Actor.DynamicActors");

	Engine_DynamicActors_Parms DynamicActors_Parms;
	DynamicActors_Parms.BaseClass = BaseClass;

	unsigned short NativeIndex = pFnDynamicActors->iNative;
	pFnDynamicActors->iNative = 0;
	pFnDynamicActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDynamicActors,NULL,&DynamicActors_Parms,NULL);
	pFnDynamicActors->FunctionFlags |= 0x400;
	pFnDynamicActors->iNative = NativeIndex;
	if(Actor)
		*Actor = DynamicActors_Parms.Actor;
}

struct Engine_RadiusActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
	float                                              Radius;                                           		// 0x000008 (0x0004)              
	FVector3                                           Loc;                                              		// 0x00000C (0x000C)              
};

void AActor::RadiusActors(class UClass* BaseClass,class AActor** Actor,float Radius,FVector3 Loc)
{
	static UFieldFunc* pFnRadiusActors = NULL;
	if(!pFnRadiusActors)
		pFnRadiusActors = UObject::FindFunction("Function Engine.Actor.RadiusActors");

	Engine_RadiusActors_Parms RadiusActors_Parms;
	RadiusActors_Parms.BaseClass = BaseClass;
	RadiusActors_Parms.Radius = Radius;
	memcpy(&RadiusActors_Parms.Loc,&Loc,0xC);

	unsigned short NativeIndex = pFnRadiusActors->iNative;
	pFnRadiusActors->iNative = 0;
	pFnRadiusActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRadiusActors,NULL,&RadiusActors_Parms,NULL);
	pFnRadiusActors->FunctionFlags |= 0x400;
	pFnRadiusActors->iNative = NativeIndex;
	if(Actor)
		*Actor = RadiusActors_Parms.Actor;
}

struct Engine_SetDrawScale3D_Parms
{
	FVector3                                           NewScale3D;                                       		// 0x000000 (0x000C)              
};

void AActor::SetDrawScale3D(FVector3 NewScale3D)
{
	static UFieldFunc* pFnSetDrawScale3D = NULL;
	if(!pFnSetDrawScale3D)
		pFnSetDrawScale3D = UObject::FindFunction("Function Engine.Actor.SetDrawScale3D");

	Engine_SetDrawScale3D_Parms SetDrawScale3D_Parms;
	memcpy(&SetDrawScale3D_Parms.NewScale3D,&NewScale3D,0xC);
	pFnSetDrawScale3D->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDrawScale3D,NULL,&SetDrawScale3D_Parms,NULL);
	pFnSetDrawScale3D->FunctionFlags |= 0x400;
}

struct Engine_GetLocationStringFor_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString AActor::GetLocationStringFor(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnGetLocationStringFor = NULL;
	if(!pFnGetLocationStringFor)
		pFnGetLocationStringFor = UObject::FindFunction("Function Engine.Actor.GetLocationStringFor");

	Engine_GetLocationStringFor_Parms GetLocationStringFor_Parms;
	GetLocationStringFor_Parms.PRI = PRI;
	ProcessEvent(pFnGetLocationStringFor,NULL,&GetLocationStringFor_Parms,NULL);
	return GetLocationStringFor_Parms.ReturnValue;
}

struct Engine_CancelInteractionWithProp_Parms
{
	class UActorComponent*                             pr_pProp;                                         		// 0x000000 (0x0004)              
};

void AActor::CancelInteractionWithProp(class UActorComponent* pr_pProp)
{
	static UFieldFunc* pFnCancelInteractionWithProp = NULL;
	if(!pFnCancelInteractionWithProp)
		pFnCancelInteractionWithProp = UObject::FindFunction("Function Engine.Actor.CancelInteractionWithProp");

	Engine_CancelInteractionWithProp_Parms CancelInteractionWithProp_Parms;
	CancelInteractionWithProp_Parms.pr_pProp = pr_pProp;
	pFnCancelInteractionWithProp->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCancelInteractionWithProp,NULL,&CancelInteractionWithProp_Parms,NULL);
	pFnCancelInteractionWithProp->FunctionFlags |= 0x400;
}

struct Engine_TouchingActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
};

void AActor::TouchingActors(class UClass* BaseClass,class AActor** Actor)
{
	static UFieldFunc* pFnTouchingActors = NULL;
	if(!pFnTouchingActors)
		pFnTouchingActors = UObject::FindFunction("Function Engine.Actor.TouchingActors");

	Engine_TouchingActors_Parms TouchingActors_Parms;
	TouchingActors_Parms.BaseClass = BaseClass;

	unsigned short NativeIndex = pFnTouchingActors->iNative;
	pFnTouchingActors->iNative = 0;
	pFnTouchingActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTouchingActors,NULL,&TouchingActors_Parms,NULL);
	pFnTouchingActors->FunctionFlags |= 0x400;
	pFnTouchingActors->iNative = NativeIndex;
	if(Actor)
		*Actor = TouchingActors_Parms.Actor;
}

struct Engine_RotateActorFast_Parms
{
	FRotator                                           pr_rRotation;                                     		// 0x000000 (0x000C)              
};

void AActor::RotateActorFast(FRotator pr_rRotation)
{
	static UFieldFunc* pFnRotateActorFast = NULL;
	if(!pFnRotateActorFast)
		pFnRotateActorFast = UObject::FindFunction("Function Engine.Actor.RotateActorFast");

	Engine_RotateActorFast_Parms RotateActorFast_Parms;
	memcpy(&RotateActorFast_Parms.pr_rRotation,&pr_rRotation,0xC);
	pFnRotateActorFast->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRotateActorFast,NULL,&RotateActorFast_Parms,NULL);
	pFnRotateActorFast->FunctionFlags |= 0x400;
}

struct Engine_TraceComponent_Parms
{
	FVector3                                           HitLocation;                                      		// 0x000000 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x00000C (0x000C)              
	class UPrimitiveComponent*                         InComponent;                                      		// 0x000018 (0x0004)              
	FVector3                                           TraceEnd;                                         		// 0x00001C (0x000C)              
	FVector3                                           TraceStart;                                       		// 0x000028 (0x000C)              
	FVector3                                           Extent;                                           		// 0x000034 (0x000C)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x000040 (0x001C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00005C (0x0004) [0x00000001] 
};

bool AActor::TraceComponent(FVector3* HitLocation,FVector3* HitNormal,class UPrimitiveComponent* InComponent,FVector3 TraceEnd,FVector3 TraceStart,FVector3 Extent,struct FTraceHitInfo* HitInfo)
{
	static UFieldFunc* pFnTraceComponent = NULL;
	if(!pFnTraceComponent)
		pFnTraceComponent = UObject::FindFunction("Function Engine.Actor.TraceComponent");

	Engine_TraceComponent_Parms TraceComponent_Parms;
	TraceComponent_Parms.InComponent = InComponent;
	memcpy(&TraceComponent_Parms.TraceEnd,&TraceEnd,0xC);
	memcpy(&TraceComponent_Parms.TraceStart,&TraceStart,0xC);
	memcpy(&TraceComponent_Parms.Extent,&Extent,0xC);
	pFnTraceComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTraceComponent,NULL,&TraceComponent_Parms,NULL);
	pFnTraceComponent->FunctionFlags |= 0x400;
	if(HitLocation)
		memcpy(HitLocation,&TraceComponent_Parms.HitLocation,0xC);
	if(HitNormal)
		memcpy(HitNormal,&TraceComponent_Parms.HitNormal,0xC);
	if(HitInfo)
		memcpy(HitInfo,&TraceComponent_Parms.HitInfo,0x1C);
	return TraceComponent_Parms.ReturnValue;
}

struct Engine_ComponentList_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class UActorComponent*                             out_Component;                                    		// 0x000004 (0x0004)              
};

void AActor::ComponentList(class UClass* BaseClass,class UActorComponent** out_Component)
{
	static UFieldFunc* pFnComponentList = NULL;
	if(!pFnComponentList)
		pFnComponentList = UObject::FindFunction("Function Engine.Actor.ComponentList");

	Engine_ComponentList_Parms ComponentList_Parms;
	ComponentList_Parms.BaseClass = BaseClass;
	pFnComponentList->FunctionFlags |= ~0x400;
	ProcessEvent(pFnComponentList,NULL,&ComponentList_Parms,NULL);
	pFnComponentList->FunctionFlags |= 0x400;
	if(out_Component)
		*out_Component = ComponentList_Parms.out_Component;
}

struct Engine_MovingWhichWay_Parms
{
	float                                              Amount;                                           		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char AActor::MovingWhichWay(float* Amount)
{
	static UFieldFunc* pFnMovingWhichWay = NULL;
	if(!pFnMovingWhichWay)
		pFnMovingWhichWay = UObject::FindFunction("Function Engine.Actor.MovingWhichWay");

	Engine_MovingWhichWay_Parms MovingWhichWay_Parms;
	pFnMovingWhichWay->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMovingWhichWay,NULL,&MovingWhichWay_Parms,NULL);
	pFnMovingWhichWay->FunctionFlags |= 0x400;
	if(Amount)
		*Amount = MovingWhichWay_Parms.Amount;
	return MovingWhichWay_Parms.ReturnValue;
}

struct Engine_Tick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void AActor::Tick(float DeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.Actor.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_CanSplash_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::CanSplash()
{
	static UFieldFunc* pFnCanSplash = NULL;
	if(!pFnCanSplash)
		pFnCanSplash = UObject::FindFunction("Function Engine.Actor.CanSplash");

	Engine_CanSplash_Parms CanSplash_Parms;
	ProcessEvent(pFnCanSplash,NULL,&CanSplash_Parms,NULL);
	return CanSplash_Parms.ReturnValue;
}

struct Engine_GetURLMap_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AActor::GetURLMap()
{
	static UFieldFunc* pFnGetURLMap = NULL;
	if(!pFnGetURLMap)
		pFnGetURLMap = UObject::FindFunction("Function Engine.Actor.GetURLMap");

	Engine_GetURLMap_Parms GetURLMap_Parms;

	unsigned short NativeIndex = pFnGetURLMap->iNative;
	pFnGetURLMap->iNative = 0;
	pFnGetURLMap->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetURLMap,NULL,&GetURLMap_Parms,NULL);
	pFnGetURLMap->FunctionFlags |= 0x400;
	pFnGetURLMap->iNative = NativeIndex;
	return GetURLMap_Parms.ReturnValue;
}

struct Engine_OnAnimPlay_Parms
{
	class UAnimNodeSequence*                           SeqNode;                                          		// 0x000000 (0x0004)              
};

void AActor::OnAnimPlay(class UAnimNodeSequence* SeqNode)
{
	static UFieldFunc* pFnOnAnimPlay = NULL;
	if(!pFnOnAnimPlay)
		pFnOnAnimPlay = UObject::FindFunction("Function Engine.Actor.OnAnimPlay");

	Engine_OnAnimPlay_Parms OnAnimPlay_Parms;
	OnAnimPlay_Parms.SeqNode = SeqNode;
	ProcessEvent(pFnOnAnimPlay,NULL,&OnAnimPlay_Parms,NULL);
}

struct Engine_Move_Parms
{
	FVector3                                           Delta;                                            		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::Move(FVector3 Delta)
{
	static UFieldFunc* pFnMove = NULL;
	if(!pFnMove)
		pFnMove = UObject::FindFunction("Function Engine.Actor.Move");

	Engine_Move_Parms Move_Parms;
	memcpy(&Move_Parms.Delta,&Delta,0xC);

	unsigned short NativeIndex = pFnMove->iNative;
	pFnMove->iNative = 0;
	pFnMove->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMove,NULL,&Move_Parms,NULL);
	pFnMove->FunctionFlags |= 0x400;
	pFnMove->iNative = NativeIndex;
	return Move_Parms.ReturnValue;
}

struct Engine_PointCheckComponent_Parms
{
	class UPrimitiveComponent*                         InComponent;                                      		// 0x000000 (0x0004)              
	FVector3                                           PointLocation;                                    		// 0x000004 (0x000C)              
	FVector3                                           PointExtent;                                      		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool AActor::PointCheckComponent(class UPrimitiveComponent* InComponent,FVector3 PointLocation,FVector3 PointExtent)
{
	static UFieldFunc* pFnPointCheckComponent = NULL;
	if(!pFnPointCheckComponent)
		pFnPointCheckComponent = UObject::FindFunction("Function Engine.Actor.PointCheckComponent");

	Engine_PointCheckComponent_Parms PointCheckComponent_Parms;
	PointCheckComponent_Parms.InComponent = InComponent;
	memcpy(&PointCheckComponent_Parms.PointLocation,&PointLocation,0xC);
	memcpy(&PointCheckComponent_Parms.PointExtent,&PointExtent,0xC);
	pFnPointCheckComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPointCheckComponent,NULL,&PointCheckComponent_Parms,NULL);
	pFnPointCheckComponent->FunctionFlags |= 0x400;
	return PointCheckComponent_Parms.ReturnValue;
}

struct Engine_InterpolationChanged_Parms
{
	class USeqAct_Interp*                              InterpAction;                                     		// 0x000000 (0x0004)              
};

void AActor::InterpolationChanged(class USeqAct_Interp* InterpAction)
{
	static UFieldFunc* pFnInterpolationChanged = NULL;
	if(!pFnInterpolationChanged)
		pFnInterpolationChanged = UObject::FindFunction("Function Engine.Actor.InterpolationChanged");

	Engine_InterpolationChanged_Parms InterpolationChanged_Parms;
	InterpolationChanged_Parms.InterpAction = InterpAction;
	ProcessEvent(pFnInterpolationChanged,NULL,&InterpolationChanged_Parms,NULL);
}

struct Engine_CheckForErrors_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::CheckForErrors()
{
	static UFieldFunc* pFnCheckForErrors = NULL;
	if(!pFnCheckForErrors)
		pFnCheckForErrors = UObject::FindFunction("Function Engine.Actor.CheckForErrors");

	Engine_CheckForErrors_Parms CheckForErrors_Parms;
	ProcessEvent(pFnCheckForErrors,NULL,&CheckForErrors_Parms,NULL);
	return CheckForErrors_Parms.ReturnValue;
}

struct Engine_RootMotionExtracted_Parms
{
	class USkeletalMeshComponent*                      SkelComp;                                         		// 0x000000 (0x0004)              
	unsigned char                                      _0x000004[0xC];                                   		// 0x000004 (0x000C) MISSED OFFSET
	struct FBoneAtom                                   ExtractedRootMotionDelta;                         		// 0x000010 (0x0030)              
};

void AActor::RootMotionExtracted(class USkeletalMeshComponent* SkelComp,struct FBoneAtom* ExtractedRootMotionDelta)
{
	static UFieldFunc* pFnRootMotionExtracted = NULL;
	if(!pFnRootMotionExtracted)
		pFnRootMotionExtracted = UObject::FindFunction("Function Engine.Actor.RootMotionExtracted");

	Engine_RootMotionExtracted_Parms RootMotionExtracted_Parms;
	RootMotionExtracted_Parms.SkelComp = SkelComp;
	ProcessEvent(pFnRootMotionExtracted,NULL,&RootMotionExtracted_Parms,NULL);
	if(ExtractedRootMotionDelta)
		memcpy(ExtractedRootMotionDelta,&RootMotionExtracted_Parms.ExtractedRootMotionDelta,0x30);
}

struct Engine_GetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char AActor::GetTeamNum()
{
	static UFieldFunc* pFnGetTeamNum = NULL;
	if(!pFnGetTeamNum)
		pFnGetTeamNum = UObject::FindFunction("Function Engine.Actor.GetTeamNum");

	Engine_GetTeamNum_Parms GetTeamNum_Parms;
	pFnGetTeamNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTeamNum,NULL,&GetTeamNum_Parms,NULL);
	pFnGetTeamNum->FunctionFlags |= 0x400;
	return GetTeamNum_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

void AActor::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.Actor.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_GainedChild_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::GainedChild(class AActor* Other)
{
	static UFieldFunc* pFnGainedChild = NULL;
	if(!pFnGainedChild)
		pFnGainedChild = UObject::FindFunction("Function Engine.Actor.GainedChild");

	Engine_GainedChild_Parms GainedChild_Parms;
	GainedChild_Parms.Other = Other;
	ProcessEvent(pFnGainedChild,NULL,&GainedChild_Parms,NULL);
}

struct Engine_PhysicsVolumeChange_Parms
{
	class APhysicsVolume*                              NewVolume;                                        		// 0x000000 (0x0004)              
};

void AActor::PhysicsVolumeChange(class APhysicsVolume* NewVolume)
{
	static UFieldFunc* pFnPhysicsVolumeChange = NULL;
	if(!pFnPhysicsVolumeChange)
		pFnPhysicsVolumeChange = UObject::FindFunction("Function Engine.Actor.PhysicsVolumeChange");

	Engine_PhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;
	PhysicsVolumeChange_Parms.NewVolume = NewVolume;
	ProcessEvent(pFnPhysicsVolumeChange,NULL,&PhysicsVolumeChange_Parms,NULL);
}

struct Engine_OverlappingActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      out_Actor;                                        		// 0x000004 (0x0004)              
	float                                              Radius;                                           		// 0x000008 (0x0004)              
	FVector3                                           Loc;                                              		// 0x00000C (0x000C)              
	unsigned long                                      bIgnoreHidden : 1;                                		// 0x000018 (0x0004) [0x00000001] 
};

void AActor::OverlappingActors(class UClass* BaseClass,class AActor** out_Actor,float Radius,FVector3 Loc,bool bIgnoreHidden)
{
	static UFieldFunc* pFnOverlappingActors = NULL;
	if(!pFnOverlappingActors)
		pFnOverlappingActors = UObject::FindFunction("Function Engine.Actor.OverlappingActors");

	Engine_OverlappingActors_Parms OverlappingActors_Parms;
	OverlappingActors_Parms.BaseClass = BaseClass;
	OverlappingActors_Parms.Radius = Radius;
	memcpy(&OverlappingActors_Parms.Loc,&Loc,0xC);
	OverlappingActors_Parms.bIgnoreHidden = bIgnoreHidden;
	pFnOverlappingActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOverlappingActors,NULL,&OverlappingActors_Parms,NULL);
	pFnOverlappingActors->FunctionFlags |= 0x400;
	if(out_Actor)
		*out_Actor = OverlappingActors_Parms.out_Actor;
}

struct Engine_SetHidden_Parms
{
	unsigned long                                      bNewHidden : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void AActor::SetHidden(bool bNewHidden)
{
	static UFieldFunc* pFnSetHidden = NULL;
	if(!pFnSetHidden)
		pFnSetHidden = UObject::FindFunction("Function Engine.Actor.SetHidden");

	Engine_SetHidden_Parms SetHidden_Parms;
	SetHidden_Parms.bNewHidden = bNewHidden;
	pFnSetHidden->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHidden,NULL,&SetHidden_Parms,NULL);
	pFnSetHidden->FunctionFlags |= 0x400;
}

struct Engine_SuggestTossVelocity_Parms
{
	FVector3                                           TossVelocity;                                     		// 0x000000 (0x000C)              
	FVector3                                           Destination;                                      		// 0x00000C (0x000C)              
	FVector3                                           Start;                                            		// 0x000018 (0x000C)              
	float                                              TossSpeed;                                        		// 0x000024 (0x0004)              
	float                                              BaseTossZ;                                        		// 0x000028 (0x0004)              
	float                                              DesiredZPct;                                      		// 0x00002C (0x0004)              
	FVector3                                           CollisionSize;                                    		// 0x000030 (0x000C)              
	float                                              TerminalVelocity;                                 		// 0x00003C (0x0004)              
	float                                              OverrideGravityZ;                                 		// 0x000040 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000044 (0x0004) [0x00000001] 
};

bool AActor::SuggestTossVelocity(FVector3* TossVelocity,FVector3 Destination,FVector3 Start,float TossSpeed,float BaseTossZ,float DesiredZPct,FVector3 CollisionSize,float TerminalVelocity,float OverrideGravityZ)
{
	static UFieldFunc* pFnSuggestTossVelocity = NULL;
	if(!pFnSuggestTossVelocity)
		pFnSuggestTossVelocity = UObject::FindFunction("Function Engine.Actor.SuggestTossVelocity");

	Engine_SuggestTossVelocity_Parms SuggestTossVelocity_Parms;
	memcpy(&SuggestTossVelocity_Parms.Destination,&Destination,0xC);
	memcpy(&SuggestTossVelocity_Parms.Start,&Start,0xC);
	SuggestTossVelocity_Parms.TossSpeed = TossSpeed;
	SuggestTossVelocity_Parms.BaseTossZ = BaseTossZ;
	SuggestTossVelocity_Parms.DesiredZPct = DesiredZPct;
	memcpy(&SuggestTossVelocity_Parms.CollisionSize,&CollisionSize,0xC);
	SuggestTossVelocity_Parms.TerminalVelocity = TerminalVelocity;
	SuggestTossVelocity_Parms.OverrideGravityZ = OverrideGravityZ;
	pFnSuggestTossVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSuggestTossVelocity,NULL,&SuggestTossVelocity_Parms,NULL);
	pFnSuggestTossVelocity->FunctionFlags |= 0x400;
	if(TossVelocity)
		memcpy(TossVelocity,&SuggestTossVelocity_Parms.TossVelocity,0xC);
	return SuggestTossVelocity_Parms.ReturnValue;
}

struct Engine_OnToggleHidden_Parms
{
	class USeqAct_ToggleHidden*                        Action;                                           		// 0x000000 (0x0004)              
};

void AActor::OnToggleHidden(class USeqAct_ToggleHidden* Action)
{
	static UFieldFunc* pFnOnToggleHidden = NULL;
	if(!pFnOnToggleHidden)
		pFnOnToggleHidden = UObject::FindFunction("Function Engine.Actor.OnToggleHidden");

	Engine_OnToggleHidden_Parms OnToggleHidden_Parms;
	OnToggleHidden_Parms.Action = Action;
	ProcessEvent(pFnOnToggleHidden,NULL,&OnToggleHidden_Parms,NULL);
}

struct Engine_ReplaceText_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
	struct FString                                     Replace;                                          		// 0x00000C (0x000C)              
	struct FString                                     With;                                             		// 0x000018 (0x000C)              
	//int                                                I;                                                		// 0x000024 (0x0004)              
	//struct FString                                     Input;                                            		// 0x000028 (0x000C)              
};

void AActor::ReplaceText(struct FString* Text,struct FString Replace,struct FString With)
{
	static UFieldFunc* pFnReplaceText = NULL;
	if(!pFnReplaceText)
		pFnReplaceText = UObject::FindFunction("Function Engine.Actor.ReplaceText");

	Engine_ReplaceText_Parms ReplaceText_Parms;
	memcpy(&ReplaceText_Parms.Replace,&Replace,0xC);
	memcpy(&ReplaceText_Parms.With,&With,0xC);
	ProcessEvent(pFnReplaceText,NULL,&ReplaceText_Parms,NULL);
	if(Text)
		memcpy(Text,&ReplaceText_Parms.Text,0xC);
}

struct Engine_PostTeleport_Parms
{
	class ATeleporter*                                 OutTeleporter;                                    		// 0x000000 (0x0004)              
};

void AActor::PostTeleport(class ATeleporter* OutTeleporter)
{
	static UFieldFunc* pFnPostTeleport = NULL;
	if(!pFnPostTeleport)
		pFnPostTeleport = UObject::FindFunction("Function Engine.Actor.PostTeleport");

	Engine_PostTeleport_Parms PostTeleport_Parms;
	PostTeleport_Parms.OutTeleporter = OutTeleporter;
	ProcessEvent(pFnPostTeleport,NULL,&PostTeleport_Parms,NULL);
}

struct Engine_ConstraintBrokenNotify_Parms
{
	class AActor*                                      ConOwner;                                         		// 0x000000 (0x0004)              
	class URB_ConstraintSetup*                         ConSetup;                                         		// 0x000004 (0x0004)              
	class URB_ConstraintInstance*                      ConInstance;                                      		// 0x000008 (0x0004)              
};

void AActor::ConstraintBrokenNotify(class AActor* ConOwner,class URB_ConstraintSetup* ConSetup,class URB_ConstraintInstance* ConInstance)
{
	static UFieldFunc* pFnConstraintBrokenNotify = NULL;
	if(!pFnConstraintBrokenNotify)
		pFnConstraintBrokenNotify = UObject::FindFunction("Function Engine.Actor.ConstraintBrokenNotify");

	Engine_ConstraintBrokenNotify_Parms ConstraintBrokenNotify_Parms;
	ConstraintBrokenNotify_Parms.ConOwner = ConOwner;
	ConstraintBrokenNotify_Parms.ConSetup = ConSetup;
	ConstraintBrokenNotify_Parms.ConInstance = ConInstance;
	ProcessEvent(pFnConstraintBrokenNotify,NULL,&ConstraintBrokenNotify_Parms,NULL);
}

struct Engine_NativePostRenderFor_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	class UCanvas*                                     Canvas;                                           		// 0x000004 (0x0004)              
	FVector3                                           CameraPosition;                                   		// 0x000008 (0x000C)              
	FVector3                                           CameraDir;                                        		// 0x000014 (0x000C)              
};

void AActor::NativePostRenderFor(class APlayerController* PC,class UCanvas* Canvas,FVector3 CameraPosition,FVector3 CameraDir)
{
	static UFieldFunc* pFnNativePostRenderFor = NULL;
	if(!pFnNativePostRenderFor)
		pFnNativePostRenderFor = UObject::FindFunction("Function Engine.Actor.NativePostRenderFor");

	Engine_NativePostRenderFor_Parms NativePostRenderFor_Parms;
	NativePostRenderFor_Parms.PC = PC;
	NativePostRenderFor_Parms.Canvas = Canvas;
	memcpy(&NativePostRenderFor_Parms.CameraPosition,&CameraPosition,0xC);
	memcpy(&NativePostRenderFor_Parms.CameraDir,&CameraDir,0xC);
	pFnNativePostRenderFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNativePostRenderFor,NULL,&NativePostRenderFor_Parms,NULL);
	pFnNativePostRenderFor->FunctionFlags |= 0x400;
}

struct Engine_ActivateEventClass_Parms
{
	class UClass*                                      InClass;                                          		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	TArray<class USequenceEvent*>                      EventList;                                        		// 0x000008 (0x000C)              
	TArray<int>                                        ActivateIndices;                                  		// 0x000014 (0x000C)              
	unsigned long                                      bTest : 1;                                        		// 0x000020 (0x0004) [0x00000001] 
	TArray<class USequenceEvent*>                      ActivatedEvents;                                  		// 0x000024 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000030 (0x0004) [0x00000001] 
	//class USequenceEvent*                              Evt;                                              		// 0x000034 (0x0004)              
};

bool AActor::ActivateEventClass(class UClass* InClass,class AActor* InInstigator,TArray<class USequenceEvent*>* EventList,TArray<int>* ActivateIndices,bool bTest,TArray<class USequenceEvent*>* ActivatedEvents)
{
	static UFieldFunc* pFnActivateEventClass = NULL;
	if(!pFnActivateEventClass)
		pFnActivateEventClass = UObject::FindFunction("Function Engine.Actor.ActivateEventClass");

	Engine_ActivateEventClass_Parms ActivateEventClass_Parms;
	ActivateEventClass_Parms.InClass = InClass;
	ActivateEventClass_Parms.InInstigator = InInstigator;
	ActivateEventClass_Parms.bTest = bTest;
	ProcessEvent(pFnActivateEventClass,NULL,&ActivateEventClass_Parms,NULL);
	if(EventList)
		memcpy(EventList,&ActivateEventClass_Parms.EventList,0xC);
	if(ActivateIndices)
		memcpy(ActivateIndices,&ActivateEventClass_Parms.ActivateIndices,0xC);
	if(ActivatedEvents)
		memcpy(ActivatedEvents,&ActivateEventClass_Parms.ActivatedEvents,0xC);
	return ActivateEventClass_Parms.ReturnValue;
}

struct Engine_Falling_Parms
{
};

void AActor::Falling()
{
	static UFieldFunc* pFnFalling = NULL;
	if(!pFnFalling)
		pFnFalling = UObject::FindFunction("Function Engine.Actor.Falling");

	Engine_Falling_Parms Falling_Parms;
	pFnFalling->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFalling,NULL,&Falling_Parms,NULL);
	pFnFalling->FunctionFlags |= 0x400;
}

struct Engine_HurtRadius_Parms
{
	float                                              BaseDamage;                                       		// 0x000000 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
	float                                              Momentum;                                         		// 0x00000C (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000010 (0x000C)              
	class AActor*                                      IgnoredActor;                                     		// 0x00001C (0x0004)              
	class AController*                                 InstigatedByController;                           		// 0x000020 (0x0004)              
	unsigned long                                      bDoFullDamage : 1;                                		// 0x000024 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
	//class AActor*                                      Victim;                                           		// 0x00002C (0x0004)              
	//unsigned long                                      bCausedDamage : 1;                                		// 0x000030 (0x0004) [0x00000001] 
};

bool AActor::HurtRadius(float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,class AActor* IgnoredActor,class AController* InstigatedByController,bool bDoFullDamage)
{
	static UFieldFunc* pFnHurtRadius = NULL;
	if(!pFnHurtRadius)
		pFnHurtRadius = UObject::FindFunction("Function Engine.Actor.HurtRadius");

	Engine_HurtRadius_Parms HurtRadius_Parms;
	HurtRadius_Parms.BaseDamage = BaseDamage;
	HurtRadius_Parms.DamageRadius = DamageRadius;
	HurtRadius_Parms.DamageType = DamageType;
	HurtRadius_Parms.Momentum = Momentum;
	memcpy(&HurtRadius_Parms.HurtOrigin,&HurtOrigin,0xC);
	HurtRadius_Parms.IgnoredActor = IgnoredActor;
	HurtRadius_Parms.InstigatedByController = InstigatedByController;
	HurtRadius_Parms.bDoFullDamage = bDoFullDamage;
	ProcessEvent(pFnHurtRadius,NULL,&HurtRadius_Parms,NULL);
	return HurtRadius_Parms.ReturnValue;
}

struct Engine_GetComponentsBoundingBox_Parms
{
	struct FBox                                        ActorBox;                                         		// 0x000000 (0x001C)              
};

void AActor::GetComponentsBoundingBox(struct FBox* ActorBox)
{
	static UFieldFunc* pFnGetComponentsBoundingBox = NULL;
	if(!pFnGetComponentsBoundingBox)
		pFnGetComponentsBoundingBox = UObject::FindFunction("Function Engine.Actor.GetComponentsBoundingBox");

	Engine_GetComponentsBoundingBox_Parms GetComponentsBoundingBox_Parms;
	pFnGetComponentsBoundingBox->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetComponentsBoundingBox,NULL,&GetComponentsBoundingBox_Parms,NULL);
	pFnGetComponentsBoundingBox->FunctionFlags |= 0x400;
	if(ActorBox)
		memcpy(ActorBox,&GetComponentsBoundingBox_Parms.ActorBox,0x1C);
}

struct Engine_GetDestination_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	FVector3                                           ReturnValue;                                      		// 0x000004 (0x000C)              
};

FVector3 AActor::GetDestination(class AController* C)
{
	static UFieldFunc* pFnGetDestination = NULL;
	if(!pFnGetDestination)
		pFnGetDestination = UObject::FindFunction("Function Engine.Actor.GetDestination");

	Engine_GetDestination_Parms GetDestination_Parms;
	GetDestination_Parms.C = C;
	pFnGetDestination->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDestination,NULL,&GetDestination_Parms,NULL);
	pFnGetDestination->FunctionFlags |= 0x400;
	return GetDestination_Parms.ReturnValue;
}

struct Engine_GetActorEyesViewPoint_Parms
{
	FVector3                                           out_Location;                                     		// 0x000000 (0x000C)              
	FRotator                                           out_Rotation;                                     		// 0x00000C (0x000C)              
};

void AActor::GetActorEyesViewPoint(FVector3* out_Location,FRotator* out_Rotation)
{
	static UFieldFunc* pFnGetActorEyesViewPoint = NULL;
	if(!pFnGetActorEyesViewPoint)
		pFnGetActorEyesViewPoint = UObject::FindFunction("Function Engine.Actor.GetActorEyesViewPoint");

	Engine_GetActorEyesViewPoint_Parms GetActorEyesViewPoint_Parms;
	pFnGetActorEyesViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActorEyesViewPoint,NULL,&GetActorEyesViewPoint_Parms,NULL);
	pFnGetActorEyesViewPoint->FunctionFlags |= 0x400;
	if(out_Location)
		memcpy(out_Location,&GetActorEyesViewPoint_Parms.out_Location,0xC);
	if(out_Rotation)
		memcpy(out_Rotation,&GetActorEyesViewPoint_Parms.out_Rotation,0xC);
}

struct Engine_SetHUDLocation_Parms
{
	FVector3                                           NewHUDLocation;                                   		// 0x000000 (0x000C)              
};

void AActor::SetHUDLocation(FVector3 NewHUDLocation)
{
	static UFieldFunc* pFnSetHUDLocation = NULL;
	if(!pFnSetHUDLocation)
		pFnSetHUDLocation = UObject::FindFunction("Function Engine.Actor.SetHUDLocation");

	Engine_SetHUDLocation_Parms SetHUDLocation_Parms;
	memcpy(&SetHUDLocation_Parms.NewHUDLocation,&NewHUDLocation,0xC);
	pFnSetHUDLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHUDLocation,NULL,&SetHUDLocation_Parms,NULL);
	pFnSetHUDLocation->FunctionFlags |= 0x400;
}

struct Engine_BroadcastLocalizedTeamMessage_Parms
{
	int                                                TeamIndex;                                        		// 0x000000 (0x0004)              
	class UClass*                                      InMessageClass;                                   		// 0x000004 (0x0004)              
	int                                                Switch;                                           		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000010 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000014 (0x0004)              
};

void AActor::BroadcastLocalizedTeamMessage(int TeamIndex,class UClass* InMessageClass,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnBroadcastLocalizedTeamMessage = NULL;
	if(!pFnBroadcastLocalizedTeamMessage)
		pFnBroadcastLocalizedTeamMessage = UObject::FindFunction("Function Engine.Actor.BroadcastLocalizedTeamMessage");

	Engine_BroadcastLocalizedTeamMessage_Parms BroadcastLocalizedTeamMessage_Parms;
	BroadcastLocalizedTeamMessage_Parms.TeamIndex = TeamIndex;
	BroadcastLocalizedTeamMessage_Parms.InMessageClass = InMessageClass;
	BroadcastLocalizedTeamMessage_Parms.Switch = Switch;
	BroadcastLocalizedTeamMessage_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalizedTeamMessage_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalizedTeamMessage_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnBroadcastLocalizedTeamMessage,NULL,&BroadcastLocalizedTeamMessage_Parms,NULL);
}

struct Engine_FindActorsOfClass_Parms
{
	class UClass*                                      ActorClass;                                       		// 0x000000 (0x0004)              
	TArray<class AActor*>                              out_Actors;                                       		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//class AActor*                                      TestActor;                                        		// 0x000014 (0x0004)              
};

bool AActor::FindActorsOfClass(class UClass* ActorClass,TArray<class AActor*>* out_Actors)
{
	static UFieldFunc* pFnFindActorsOfClass = NULL;
	if(!pFnFindActorsOfClass)
		pFnFindActorsOfClass = UObject::FindFunction("Function Engine.Actor.FindActorsOfClass");

	Engine_FindActorsOfClass_Parms FindActorsOfClass_Parms;
	FindActorsOfClass_Parms.ActorClass = ActorClass;
	ProcessEvent(pFnFindActorsOfClass,NULL,&FindActorsOfClass_Parms,NULL);
	if(out_Actors)
		memcpy(out_Actors,&FindActorsOfClass_Parms.out_Actors,0xC);
	return FindActorsOfClass_Parms.ReturnValue;
}

struct Engine_FellOutOfWorld_Parms
{
	class UClass*                                      dmgType;                                          		// 0x000000 (0x0004)              
};

void AActor::FellOutOfWorld(class UClass* dmgType)
{
	static UFieldFunc* pFnFellOutOfWorld = NULL;
	if(!pFnFellOutOfWorld)
		pFnFellOutOfWorld = UObject::FindFunction("Function Engine.Actor.FellOutOfWorld");

	Engine_FellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;
	ProcessEvent(pFnFellOutOfWorld,NULL,&FellOutOfWorld_Parms,NULL);
}

struct Engine_DrawDebugCoordinateSystem_Parms
{
	FVector3                                           AxisLoc;                                          		// 0x000000 (0x000C)              
	FRotator                                           AxisRot;                                          		// 0x00000C (0x000C)              
	float                                              Scale;                                            		// 0x000018 (0x0004)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x00001C (0x0004) [0x00000001] 
};

void AActor::DrawDebugCoordinateSystem(FVector3 AxisLoc,FRotator AxisRot,float Scale,bool bPersistentLines)
{
	static UFieldFunc* pFnDrawDebugCoordinateSystem = NULL;
	if(!pFnDrawDebugCoordinateSystem)
		pFnDrawDebugCoordinateSystem = UObject::FindFunction("Function Engine.Actor.DrawDebugCoordinateSystem");

	Engine_DrawDebugCoordinateSystem_Parms DrawDebugCoordinateSystem_Parms;
	memcpy(&DrawDebugCoordinateSystem_Parms.AxisLoc,&AxisLoc,0xC);
	memcpy(&DrawDebugCoordinateSystem_Parms.AxisRot,&AxisRot,0xC);
	DrawDebugCoordinateSystem_Parms.Scale = Scale;
	DrawDebugCoordinateSystem_Parms.bPersistentLines = bPersistentLines;
	pFnDrawDebugCoordinateSystem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawDebugCoordinateSystem,NULL,&DrawDebugCoordinateSystem_Parms,NULL);
	pFnDrawDebugCoordinateSystem->FunctionFlags |= 0x400;
}

struct Engine_GetBoundingCylinder_Parms
{
	float                                              CollisionRadius;                                  		// 0x000000 (0x0004)              
	float                                              CollisionHeight;                                  		// 0x000004 (0x0004)              
};

void AActor::GetBoundingCylinder(float* CollisionRadius,float* CollisionHeight)
{
	static UFieldFunc* pFnGetBoundingCylinder = NULL;
	if(!pFnGetBoundingCylinder)
		pFnGetBoundingCylinder = UObject::FindFunction("Function Engine.Actor.GetBoundingCylinder");

	Engine_GetBoundingCylinder_Parms GetBoundingCylinder_Parms;
	pFnGetBoundingCylinder->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundingCylinder,NULL,&GetBoundingCylinder_Parms,NULL);
	pFnGetBoundingCylinder->FunctionFlags |= 0x400;
	if(CollisionRadius)
		*CollisionRadius = GetBoundingCylinder_Parms.CollisionRadius;
	if(CollisionHeight)
		*CollisionHeight = GetBoundingCylinder_Parms.CollisionHeight;
}

struct Engine_Clock_Parms
{
	float                                              Time;                                             		// 0x000000 (0x0004)              
};

void AActor::Clock(float* Time)
{
	static UFieldFunc* pFnClock = NULL;
	if(!pFnClock)
		pFnClock = UObject::FindFunction("Function Engine.Actor.Clock");

	Engine_Clock_Parms Clock_Parms;
	pFnClock->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClock,NULL,&Clock_Parms,NULL);
	pFnClock->FunctionFlags |= 0x400;
	if(Time)
		*Time = Clock_Parms.Time;
}

struct Engine_GetPhysicsName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AActor::GetPhysicsName()
{
	static UFieldFunc* pFnGetPhysicsName = NULL;
	if(!pFnGetPhysicsName)
		pFnGetPhysicsName = UObject::FindFunction("Function Engine.Actor.GetPhysicsName");

	Engine_GetPhysicsName_Parms GetPhysicsName_Parms;
	ProcessEvent(pFnGetPhysicsName,NULL,&GetPhysicsName_Parms,NULL);
	return GetPhysicsName_Parms.ReturnValue;
}

struct Engine_FastTrace_Parms
{
	FVector3                                           TraceEnd;                                         		// 0x000000 (0x000C)              
	FVector3                                           TraceStart;                                       		// 0x00000C (0x000C)              
	FVector3                                           BoxExtent;                                        		// 0x000018 (0x000C)              
	unsigned long                                      bTraceBullet : 1;                                 		// 0x000024 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool AActor::FastTrace(FVector3 TraceEnd,FVector3 TraceStart,FVector3 BoxExtent,bool bTraceBullet)
{
	static UFieldFunc* pFnFastTrace = NULL;
	if(!pFnFastTrace)
		pFnFastTrace = UObject::FindFunction("Function Engine.Actor.FastTrace");

	Engine_FastTrace_Parms FastTrace_Parms;
	memcpy(&FastTrace_Parms.TraceEnd,&TraceEnd,0xC);
	memcpy(&FastTrace_Parms.TraceStart,&TraceStart,0xC);
	memcpy(&FastTrace_Parms.BoxExtent,&BoxExtent,0xC);
	FastTrace_Parms.bTraceBullet = bTraceBullet;

	unsigned short NativeIndex = pFnFastTrace->iNative;
	pFnFastTrace->iNative = 0;
	pFnFastTrace->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFastTrace,NULL,&FastTrace_Parms,NULL);
	pFnFastTrace->FunctionFlags |= 0x400;
	pFnFastTrace->iNative = NativeIndex;
	return FastTrace_Parms.ReturnValue;
}

struct Engine_ConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x000000 (0x000C)              
	unsigned long                                      bWriteToLog : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000010 (0x000C)              
};

struct FString AActor::ConsoleCommand(struct FString Command,bool bWriteToLog)
{
	static UFieldFunc* pFnConsoleCommand = NULL;
	if(!pFnConsoleCommand)
		pFnConsoleCommand = UObject::FindFunction("Function Engine.Actor.ConsoleCommand");

	Engine_ConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy(&ConsoleCommand_Parms.Command,&Command,0xC);
	ConsoleCommand_Parms.bWriteToLog = bWriteToLog;
	pFnConsoleCommand->FunctionFlags |= ~0x400;
	ProcessEvent(pFnConsoleCommand,NULL,&ConsoleCommand_Parms,NULL);
	pFnConsoleCommand->FunctionFlags |= 0x400;
	return ConsoleCommand_Parms.ReturnValue;
}

struct Engine_RanInto_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::RanInto(class AActor* Other)
{
	static UFieldFunc* pFnRanInto = NULL;
	if(!pFnRanInto)
		pFnRanInto = UObject::FindFunction("Function Engine.Actor.RanInto");

	Engine_RanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;
	ProcessEvent(pFnRanInto,NULL,&RanInto_Parms,NULL);
}

struct Engine_CallSuperReplicated_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AActor::CallSuperReplicated(struct FName VarName)
{
	static UFieldFunc* pFnCallSuperReplicated = NULL;
	if(!pFnCallSuperReplicated)
		pFnCallSuperReplicated = UObject::FindFunction("Function Engine.Actor.CallSuperReplicated");

	Engine_CallSuperReplicated_Parms CallSuperReplicated_Parms;
	memcpy(&CallSuperReplicated_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnCallSuperReplicated,NULL,&CallSuperReplicated_Parms,NULL);
}

struct Engine_OverRotated_Parms
{
	FRotator                                           out_Desired;                                      		// 0x000000 (0x000C)              
	FRotator                                           out_Actual;                                       		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AActor::OverRotated(FRotator* out_Desired,FRotator* out_Actual)
{
	static UFieldFunc* pFnOverRotated = NULL;
	if(!pFnOverRotated)
		pFnOverRotated = UObject::FindFunction("Function Engine.Actor.OverRotated");

	Engine_OverRotated_Parms OverRotated_Parms;
	ProcessEvent(pFnOverRotated,NULL,&OverRotated_Parms,NULL);
	if(out_Desired)
		memcpy(out_Desired,&OverRotated_Parms.out_Desired,0xC);
	if(out_Actual)
		memcpy(out_Actual,&OverRotated_Parms.out_Actual,0xC);
	return OverRotated_Parms.ReturnValue;
}

struct Engine_CheckMaxEffectDistance_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	FVector3                                           SpawnLocation;                                    		// 0x000004 (0x000C)              
	float                                              CullDistance;                                     		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//float                                              Dist;                                             		// 0x000018 (0x0004)              
};

bool AActor::CheckMaxEffectDistance(class APlayerController* P,FVector3 SpawnLocation,float CullDistance)
{
	static UFieldFunc* pFnCheckMaxEffectDistance = NULL;
	if(!pFnCheckMaxEffectDistance)
		pFnCheckMaxEffectDistance = UObject::FindFunction("Function Engine.Actor.CheckMaxEffectDistance");

	Engine_CheckMaxEffectDistance_Parms CheckMaxEffectDistance_Parms;
	CheckMaxEffectDistance_Parms.P = P;
	memcpy(&CheckMaxEffectDistance_Parms.SpawnLocation,&SpawnLocation,0xC);
	CheckMaxEffectDistance_Parms.CullDistance = CullDistance;
	ProcessEvent(pFnCheckMaxEffectDistance,NULL,&CheckMaxEffectDistance_Parms,NULL);
	return CheckMaxEffectDistance_Parms.ReturnValue;
}

struct Engine_Attach_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::Attach(class AActor* Other)
{
	static UFieldFunc* pFnAttach = NULL;
	if(!pFnAttach)
		pFnAttach = UObject::FindFunction("Function Engine.Actor.Attach");

	Engine_Attach_Parms Attach_Parms;
	Attach_Parms.Other = Other;
	ProcessEvent(pFnAttach,NULL,&Attach_Parms,NULL);
}

struct Engine_AttachComponent_Parms
{
	class UActorComponent*                             NewComponent;                                     		// 0x000000 (0x0004)              
};

void AActor::AttachComponent(class UActorComponent* NewComponent)
{
	static UFieldFunc* pFnAttachComponent = NULL;
	if(!pFnAttachComponent)
		pFnAttachComponent = UObject::FindFunction("Function Engine.Actor.AttachComponent");

	Engine_AttachComponent_Parms AttachComponent_Parms;
	AttachComponent_Parms.NewComponent = NewComponent;
	pFnAttachComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAttachComponent,NULL,&AttachComponent_Parms,NULL);
	pFnAttachComponent->FunctionFlags |= 0x400;
}

struct Engine_PreTeleport_Parms
{
	class ATeleporter*                                 InTeleporter;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::PreTeleport(class ATeleporter* InTeleporter)
{
	static UFieldFunc* pFnPreTeleport = NULL;
	if(!pFnPreTeleport)
		pFnPreTeleport = UObject::FindFunction("Function Engine.Actor.PreTeleport");

	Engine_PreTeleport_Parms PreTeleport_Parms;
	PreTeleport_Parms.InTeleporter = InTeleporter;
	ProcessEvent(pFnPreTeleport,NULL,&PreTeleport_Parms,NULL);
	return PreTeleport_Parms.ReturnValue;
}

struct Engine_OutsideWorldBounds_Parms
{
};

void AActor::OutsideWorldBounds()
{
	static UFieldFunc* pFnOutsideWorldBounds = NULL;
	if(!pFnOutsideWorldBounds)
		pFnOutsideWorldBounds = UObject::FindFunction("Function Engine.Actor.OutsideWorldBounds");

	Engine_OutsideWorldBounds_Parms OutsideWorldBounds_Parms;
	ProcessEvent(pFnOutsideWorldBounds,NULL,&OutsideWorldBounds_Parms,NULL);
}

struct Engine_IsOwnedBy_Parms
{
	class AActor*                                      TestActor;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::IsOwnedBy(class AActor* TestActor)
{
	static UFieldFunc* pFnIsOwnedBy = NULL;
	if(!pFnIsOwnedBy)
		pFnIsOwnedBy = UObject::FindFunction("Function Engine.Actor.IsOwnedBy");

	Engine_IsOwnedBy_Parms IsOwnedBy_Parms;
	IsOwnedBy_Parms.TestActor = TestActor;
	pFnIsOwnedBy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsOwnedBy,NULL,&IsOwnedBy_Parms,NULL);
	pFnIsOwnedBy->FunctionFlags |= 0x400;
	return IsOwnedBy_Parms.ReturnValue;
}

struct Engine_GetTerminalVelocity_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AActor::GetTerminalVelocity()
{
	static UFieldFunc* pFnGetTerminalVelocity = NULL;
	if(!pFnGetTerminalVelocity)
		pFnGetTerminalVelocity = UObject::FindFunction("Function Engine.Actor.GetTerminalVelocity");

	Engine_GetTerminalVelocity_Parms GetTerminalVelocity_Parms;
	pFnGetTerminalVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTerminalVelocity,NULL,&GetTerminalVelocity_Parms,NULL);
	pFnGetTerminalVelocity->FunctionFlags |= 0x400;
	return GetTerminalVelocity_Parms.ReturnValue;
}

struct Engine_PreBeginPlay_Parms
{
};

void AActor::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.Actor.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_SetForcedInitialReplicatedProperty_Parms
{
	class UField*                                      PropToReplicate;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bAdd : 1;                                         		// 0x000004 (0x0004) [0x00000001] 
};

void AActor::SetForcedInitialReplicatedProperty(class UField* PropToReplicate,bool bAdd)
{
	static UFieldFunc* pFnSetForcedInitialReplicatedProperty = NULL;
	if(!pFnSetForcedInitialReplicatedProperty)
		pFnSetForcedInitialReplicatedProperty = UObject::FindFunction("Function Engine.Actor.SetForcedInitialReplicatedProperty");

	Engine_SetForcedInitialReplicatedProperty_Parms SetForcedInitialReplicatedProperty_Parms;
	SetForcedInitialReplicatedProperty_Parms.PropToReplicate = PropToReplicate;
	SetForcedInitialReplicatedProperty_Parms.bAdd = bAdd;
	pFnSetForcedInitialReplicatedProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetForcedInitialReplicatedProperty,NULL,&SetForcedInitialReplicatedProperty_Parms,NULL);
	pFnSetForcedInitialReplicatedProperty->FunctionFlags |= 0x400;
}

struct Engine_GetFaceFXAudioComponent_Parms
{
	class UAudioComponent*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAudioComponent* AActor::GetFaceFXAudioComponent()
{
	static UFieldFunc* pFnGetFaceFXAudioComponent = NULL;
	if(!pFnGetFaceFXAudioComponent)
		pFnGetFaceFXAudioComponent = UObject::FindFunction("Function Engine.Actor.GetFaceFXAudioComponent");

	Engine_GetFaceFXAudioComponent_Parms GetFaceFXAudioComponent_Parms;
	ProcessEvent(pFnGetFaceFXAudioComponent,NULL,&GetFaceFXAudioComponent_Parms,NULL);
	return GetFaceFXAudioComponent_Parms.ReturnValue;
}

struct Engine_EffectIsRelevant_Parms
{
	FVector3                                           SpawnLocation;                                    		// 0x000000 (0x000C)              
	unsigned long                                      bForceDedicated : 1;                              		// 0x00000C (0x0004) [0x00000001] 
	float                                              CullDistance;                                     		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//class APlayerController*                           P;                                                		// 0x000018 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
};

bool AActor::EffectIsRelevant(FVector3 SpawnLocation,bool bForceDedicated,float CullDistance)
{
	static UFieldFunc* pFnEffectIsRelevant = NULL;
	if(!pFnEffectIsRelevant)
		pFnEffectIsRelevant = UObject::FindFunction("Function Engine.Actor.EffectIsRelevant");

	Engine_EffectIsRelevant_Parms EffectIsRelevant_Parms;
	memcpy(&EffectIsRelevant_Parms.SpawnLocation,&SpawnLocation,0xC);
	EffectIsRelevant_Parms.bForceDedicated = bForceDedicated;
	EffectIsRelevant_Parms.CullDistance = CullDistance;
	ProcessEvent(pFnEffectIsRelevant,NULL,&EffectIsRelevant_Parms,NULL);
	return EffectIsRelevant_Parms.ReturnValue;
}

struct Engine_GetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AActor::GetHumanReadableName()
{
	static UFieldFunc* pFnGetHumanReadableName = NULL;
	if(!pFnGetHumanReadableName)
		pFnGetHumanReadableName = UObject::FindFunction("Function Engine.Actor.GetHumanReadableName");

	Engine_GetHumanReadableName_Parms GetHumanReadableName_Parms;
	ProcessEvent(pFnGetHumanReadableName,NULL,&GetHumanReadableName_Parms,NULL);
	return GetHumanReadableName_Parms.ReturnValue;
}

struct Engine_LostChild_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::LostChild(class AActor* Other)
{
	static UFieldFunc* pFnLostChild = NULL;
	if(!pFnLostChild)
		pFnLostChild = UObject::FindFunction("Function Engine.Actor.LostChild");

	Engine_LostChild_Parms LostChild_Parms;
	LostChild_Parms.Other = Other;
	ProcessEvent(pFnLostChild,NULL,&LostChild_Parms,NULL);
}

struct Engine_RootMotionModeChanged_Parms
{
	class USkeletalMeshComponent*                      SkelComp;                                         		// 0x000000 (0x0004)              
};

void AActor::RootMotionModeChanged(class USkeletalMeshComponent* SkelComp)
{
	static UFieldFunc* pFnRootMotionModeChanged = NULL;
	if(!pFnRootMotionModeChanged)
		pFnRootMotionModeChanged = UObject::FindFunction("Function Engine.Actor.RootMotionModeChanged");

	Engine_RootMotionModeChanged_Parms RootMotionModeChanged_Parms;
	RootMotionModeChanged_Parms.SkelComp = SkelComp;
	ProcessEvent(pFnRootMotionModeChanged,NULL,&RootMotionModeChanged_Parms,NULL);
}

struct Engine_ReplicationEnded_Parms
{
};

void AActor::ReplicationEnded()
{
	static UFieldFunc* pFnReplicationEnded = NULL;
	if(!pFnReplicationEnded)
		pFnReplicationEnded = UObject::FindFunction("Function Engine.Actor.ReplicationEnded");

	Engine_ReplicationEnded_Parms ReplicationEnded_Parms;
	ProcessEvent(pFnReplicationEnded,NULL,&ReplicationEnded_Parms,NULL);
}

struct Engine_SetZone_Parms
{
	unsigned long                                      bForceRefresh : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void AActor::SetZone(bool bForceRefresh)
{
	static UFieldFunc* pFnSetZone = NULL;
	if(!pFnSetZone)
		pFnSetZone = UObject::FindFunction("Function Engine.Actor.SetZone");

	Engine_SetZone_Parms SetZone_Parms;
	SetZone_Parms.bForceRefresh = bForceRefresh;
	pFnSetZone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetZone,NULL,&SetZone_Parms,NULL);
	pFnSetZone->FunctionFlags |= 0x400;
}

struct Engine_HealDamage_Parms
{
	int                                                Amount;                                           		// 0x000000 (0x0004)              
	class AController*                                 Healer;                                           		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::HealDamage(int Amount,class AController* Healer,class UClass* DamageType)
{
	static UFieldFunc* pFnHealDamage = NULL;
	if(!pFnHealDamage)
		pFnHealDamage = UObject::FindFunction("Function Engine.Actor.HealDamage");

	Engine_HealDamage_Parms HealDamage_Parms;
	HealDamage_Parms.Amount = Amount;
	HealDamage_Parms.Healer = Healer;
	HealDamage_Parms.DamageType = DamageType;
	ProcessEvent(pFnHealDamage,NULL,&HealDamage_Parms,NULL);
	return HealDamage_Parms.ReturnValue;
}

struct Engine_SetAnimWeights_Parms
{
	TArray<struct FAnimSlotInfo>                       SlotInfos;                                        		// 0x000000 (0x000C)              
};

void AActor::SetAnimWeights(TArray<struct FAnimSlotInfo> SlotInfos)
{
	static UFieldFunc* pFnSetAnimWeights = NULL;
	if(!pFnSetAnimWeights)
		pFnSetAnimWeights = UObject::FindFunction("Function Engine.Actor.SetAnimWeights");

	Engine_SetAnimWeights_Parms SetAnimWeights_Parms;
	memcpy(&SetAnimWeights_Parms.SlotInfos,&SlotInfos,0xC);
	ProcessEvent(pFnSetAnimWeights,NULL,&SetAnimWeights_Parms,NULL);
}

struct Engine_TornOff_Parms
{
};

void AActor::TornOff()
{
	static UFieldFunc* pFnTornOff = NULL;
	if(!pFnTornOff)
		pFnTornOff = UObject::FindFunction("Function Engine.Actor.TornOff");

	Engine_TornOff_Parms TornOff_Parms;
	ProcessEvent(pFnTornOff,NULL,&TornOff_Parms,NULL);
}

struct Engine_ContainsPoint_Parms
{
	FVector3                                           Spot;                                             		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::ContainsPoint(FVector3 Spot)
{
	static UFieldFunc* pFnContainsPoint = NULL;
	if(!pFnContainsPoint)
		pFnContainsPoint = UObject::FindFunction("Function Engine.Actor.ContainsPoint");

	Engine_ContainsPoint_Parms ContainsPoint_Parms;
	memcpy(&ContainsPoint_Parms.Spot,&Spot,0xC);
	pFnContainsPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnContainsPoint,NULL,&ContainsPoint_Parms,NULL);
	pFnContainsPoint->FunctionFlags |= 0x400;
	return ContainsPoint_Parms.ReturnValue;
}

struct Engine_FindBase_Parms
{
};

void AActor::FindBase()
{
	static UFieldFunc* pFnFindBase = NULL;
	if(!pFnFindBase)
		pFnFindBase = UObject::FindFunction("Function Engine.Actor.FindBase");

	Engine_FindBase_Parms FindBase_Parms;
	pFnFindBase->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindBase,NULL,&FindBase_Parms,NULL);
	pFnFindBase->FunctionFlags |= 0x400;
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//struct FString                                     T;                                                		// 0x00000C (0x000C)              
	//class AActor*                                      A;                                                		// 0x000018 (0x0004)              
	//float                                              MyRadius;                                         		// 0x00001C (0x0004)              
	//float                                              MyHeight;                                         		// 0x000020 (0x0004)              
	//class UCanvas*                                     Canvas;                                           		// 0x000024 (0x0004)              
};

void AActor::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Actor.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_NotifyLocalPlayerTeamReceived_Parms
{
};

void AActor::NotifyLocalPlayerTeamReceived()
{
	static UFieldFunc* pFnNotifyLocalPlayerTeamReceived = NULL;
	if(!pFnNotifyLocalPlayerTeamReceived)
		pFnNotifyLocalPlayerTeamReceived = UObject::FindFunction("Function Engine.Actor.NotifyLocalPlayerTeamReceived");

	Engine_NotifyLocalPlayerTeamReceived_Parms NotifyLocalPlayerTeamReceived_Parms;
	ProcessEvent(pFnNotifyLocalPlayerTeamReceived,NULL,&NotifyLocalPlayerTeamReceived_Parms,NULL);
}

struct Engine_SetUseGrid_Parms
{
	unsigned long                                      bNewUseGrid : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void AActor::SetUseGrid(bool bNewUseGrid)
{
	static UFieldFunc* pFnSetUseGrid = NULL;
	if(!pFnSetUseGrid)
		pFnSetUseGrid = UObject::FindFunction("Function Engine.Actor.SetUseGrid");

	Engine_SetUseGrid_Parms SetUseGrid_Parms;
	SetUseGrid_Parms.bNewUseGrid = bNewUseGrid;
	pFnSetUseGrid->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetUseGrid,NULL,&SetUseGrid_Parms,NULL);
	pFnSetUseGrid->FunctionFlags |= 0x400;
}

struct Engine_PlayActorFaceFXAnim_Parms
{
	class UFaceFXAnimSet*                              AnimSet;                                          		// 0x000000 (0x0004)              
	struct FString                                     GroupName;                                        		// 0x000004 (0x000C)              
	struct FString                                     SeqName;                                          		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool AActor::PlayActorFaceFXAnim(class UFaceFXAnimSet* AnimSet,struct FString GroupName,struct FString SeqName)
{
	static UFieldFunc* pFnPlayActorFaceFXAnim = NULL;
	if(!pFnPlayActorFaceFXAnim)
		pFnPlayActorFaceFXAnim = UObject::FindFunction("Function Engine.Actor.PlayActorFaceFXAnim");

	Engine_PlayActorFaceFXAnim_Parms PlayActorFaceFXAnim_Parms;
	PlayActorFaceFXAnim_Parms.AnimSet = AnimSet;
	memcpy(&PlayActorFaceFXAnim_Parms.GroupName,&GroupName,0xC);
	memcpy(&PlayActorFaceFXAnim_Parms.SeqName,&SeqName,0xC);
	ProcessEvent(pFnPlayActorFaceFXAnim,NULL,&PlayActorFaceFXAnim_Parms,NULL);
	return PlayActorFaceFXAnim_Parms.ReturnValue;
}

struct Engine_AllOwnedComponents_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class UActorComponent*                             OutComponent;                                     		// 0x000004 (0x0004)              
};

void AActor::AllOwnedComponents(class UClass* BaseClass,class UActorComponent** OutComponent)
{
	static UFieldFunc* pFnAllOwnedComponents = NULL;
	if(!pFnAllOwnedComponents)
		pFnAllOwnedComponents = UObject::FindFunction("Function Engine.Actor.AllOwnedComponents");

	Engine_AllOwnedComponents_Parms AllOwnedComponents_Parms;
	AllOwnedComponents_Parms.BaseClass = BaseClass;
	pFnAllOwnedComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllOwnedComponents,NULL,&AllOwnedComponents_Parms,NULL);
	pFnAllOwnedComponents->FunctionFlags |= 0x400;
	if(OutComponent)
		*OutComponent = AllOwnedComponents_Parms.OutComponent;
}

struct Engine_SpawnedByKismet_Parms
{
};

void AActor::SpawnedByKismet()
{
	static UFieldFunc* pFnSpawnedByKismet = NULL;
	if(!pFnSpawnedByKismet)
		pFnSpawnedByKismet = UObject::FindFunction("Function Engine.Actor.SpawnedByKismet");

	Engine_SpawnedByKismet_Parms SpawnedByKismet_Parms;
	ProcessEvent(pFnSpawnedByKismet,NULL,&SpawnedByKismet_Parms,NULL);
}

struct Engine_SetMorphWeight_Parms
{
	struct FName                                       MorphNodeName;                                    		// 0x000000 (0x0008)              
	float                                              MorphWeight;                                      		// 0x000008 (0x0004)              
};

void AActor::SetMorphWeight(struct FName MorphNodeName,float MorphWeight)
{
	static UFieldFunc* pFnSetMorphWeight = NULL;
	if(!pFnSetMorphWeight)
		pFnSetMorphWeight = UObject::FindFunction("Function Engine.Actor.SetMorphWeight");

	Engine_SetMorphWeight_Parms SetMorphWeight_Parms;
	memcpy(&SetMorphWeight_Parms.MorphNodeName,&MorphNodeName,0x8);
	SetMorphWeight_Parms.MorphWeight = MorphWeight;
	ProcessEvent(pFnSetMorphWeight,NULL,&SetMorphWeight_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.Actor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_NotifySkelControlBeyondLimit_Parms
{
	class USkelControlLookAt*                          LookAt;                                           		// 0x000000 (0x0004)              
};

void AActor::NotifySkelControlBeyondLimit(class USkelControlLookAt* LookAt)
{
	static UFieldFunc* pFnNotifySkelControlBeyondLimit = NULL;
	if(!pFnNotifySkelControlBeyondLimit)
		pFnNotifySkelControlBeyondLimit = UObject::FindFunction("Function Engine.Actor.NotifySkelControlBeyondLimit");

	Engine_NotifySkelControlBeyondLimit_Parms NotifySkelControlBeyondLimit_Parms;
	NotifySkelControlBeyondLimit_Parms.LookAt = LookAt;
	ProcessEvent(pFnNotifySkelControlBeyondLimit,NULL,&NotifySkelControlBeyondLimit_Parms,NULL);
}

struct Engine_OnSetPhysics_Parms
{
	class USeqAct_SetPhysics*                          Action;                                           		// 0x000000 (0x0004)              
};

void AActor::OnSetPhysics(class USeqAct_SetPhysics* Action)
{
	static UFieldFunc* pFnOnSetPhysics = NULL;
	if(!pFnOnSetPhysics)
		pFnOnSetPhysics = UObject::FindFunction("Function Engine.Actor.OnSetPhysics");

	Engine_OnSetPhysics_Parms OnSetPhysics_Parms;
	OnSetPhysics_Parms.Action = Action;
	ProcessEvent(pFnOnSetPhysics,NULL,&OnSetPhysics_Parms,NULL);
}

struct Engine_InterpolationFinished_Parms
{
	class USeqAct_Interp*                              InterpAction;                                     		// 0x000000 (0x0004)              
};

void AActor::InterpolationFinished(class USeqAct_Interp* InterpAction)
{
	static UFieldFunc* pFnInterpolationFinished = NULL;
	if(!pFnInterpolationFinished)
		pFnInterpolationFinished = UObject::FindFunction("Function Engine.Actor.InterpolationFinished");

	Engine_InterpolationFinished_Parms InterpolationFinished_Parms;
	InterpolationFinished_Parms.InterpAction = InterpAction;
	ProcessEvent(pFnInterpolationFinished,NULL,&InterpolationFinished_Parms,NULL);
}

struct Engine_EncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::EncroachedBy(class AActor* Other)
{
	static UFieldFunc* pFnEncroachedBy = NULL;
	if(!pFnEncroachedBy)
		pFnEncroachedBy = UObject::FindFunction("Function Engine.Actor.EncroachedBy");

	Engine_EncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;
	ProcessEvent(pFnEncroachedBy,NULL,&EncroachedBy_Parms,NULL);
}

struct Engine_OnAnimEnd_Parms
{
	class UAnimNodeSequence*                           SeqNode;                                          		// 0x000000 (0x0004)              
	float                                              PlayedTime;                                       		// 0x000004 (0x0004)              
	float                                              ExcessTime;                                       		// 0x000008 (0x0004)              
};

void AActor::OnAnimEnd(class UAnimNodeSequence* SeqNode,float PlayedTime,float ExcessTime)
{
	static UFieldFunc* pFnOnAnimEnd = NULL;
	if(!pFnOnAnimEnd)
		pFnOnAnimEnd = UObject::FindFunction("Function Engine.Actor.OnAnimEnd");

	Engine_OnAnimEnd_Parms OnAnimEnd_Parms;
	OnAnimEnd_Parms.SeqNode = SeqNode;
	OnAnimEnd_Parms.PlayedTime = PlayedTime;
	OnAnimEnd_Parms.ExcessTime = ExcessTime;
	ProcessEvent(pFnOnAnimEnd,NULL,&OnAnimEnd_Parms,NULL);
}

struct Engine_CalcCamera_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
	FVector3                                           out_CamLoc;                                       		// 0x000004 (0x000C)              
	FRotator                                           out_CamRot;                                       		// 0x000010 (0x000C)              
	float                                              out_FOV;                                          		// 0x00001C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool AActor::CalcCamera(float fDeltaTime,FVector3* out_CamLoc,FRotator* out_CamRot,float* out_FOV)
{
	static UFieldFunc* pFnCalcCamera = NULL;
	if(!pFnCalcCamera)
		pFnCalcCamera = UObject::FindFunction("Function Engine.Actor.CalcCamera");

	Engine_CalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;
	pFnCalcCamera->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalcCamera,NULL,&CalcCamera_Parms,NULL);
	pFnCalcCamera->FunctionFlags |= 0x400;
	if(out_CamLoc)
		memcpy(out_CamLoc,&CalcCamera_Parms.out_CamLoc,0xC);
	if(out_CamRot)
		memcpy(out_CamRot,&CalcCamera_Parms.out_CamRot,0xC);
	if(out_FOV)
		*out_FOV = CalcCamera_Parms.out_FOV;
	return CalcCamera_Parms.ReturnValue;
}

struct Engine_FlushPersistentDebugLines_Parms
{
};

void AActor::FlushPersistentDebugLines()
{
	static UFieldFunc* pFnFlushPersistentDebugLines = NULL;
	if(!pFnFlushPersistentDebugLines)
		pFnFlushPersistentDebugLines = UObject::FindFunction("Function Engine.Actor.FlushPersistentDebugLines");

	Engine_FlushPersistentDebugLines_Parms FlushPersistentDebugLines_Parms;
	pFnFlushPersistentDebugLines->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFlushPersistentDebugLines,NULL,&FlushPersistentDebugLines_Parms,NULL);
	pFnFlushPersistentDebugLines->FunctionFlags |= 0x400;
}

struct Engine_SetTimer_Parms
{
	float                                              InRate;                                           		// 0x000000 (0x0004)              
	unsigned long                                      inbLoop : 1;                                      		// 0x000004 (0x0004) [0x00000001] 
	struct FScriptDelegate                             InTimerFunc;                                      		// 0x000008 (0x000C)              
};

void AActor::SetTimer(float InRate,bool inbLoop,struct FScriptDelegate InTimerFunc)
{
	static UFieldFunc* pFnSetTimer = NULL;
	if(!pFnSetTimer)
		pFnSetTimer = UObject::FindFunction("Function Engine.Actor.SetTimer");

	Engine_SetTimer_Parms SetTimer_Parms;
	SetTimer_Parms.InRate = InRate;
	SetTimer_Parms.inbLoop = inbLoop;
	memcpy(&SetTimer_Parms.InTimerFunc,&InTimerFunc,0xC);

	unsigned short NativeIndex = pFnSetTimer->iNative;
	pFnSetTimer->iNative = 0;
	pFnSetTimer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTimer,NULL,&SetTimer_Parms,NULL);
	pFnSetTimer->FunctionFlags |= 0x400;
	pFnSetTimer->iNative = NativeIndex;
}

struct Engine_Detach_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AActor::Detach(class AActor* Other)
{
	static UFieldFunc* pFnDetach = NULL;
	if(!pFnDetach)
		pFnDetach = UObject::FindFunction("Function Engine.Actor.Detach");

	Engine_Detach_Parms Detach_Parms;
	Detach_Parms.Other = Other;
	ProcessEvent(pFnDetach,NULL,&Detach_Parms,NULL);
}

struct Engine_DebugFreezeGame_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AActor::DebugFreezeGame()
{
	static UFieldFunc* pFnDebugFreezeGame = NULL;
	if(!pFnDebugFreezeGame)
		pFnDebugFreezeGame = UObject::FindFunction("Function Engine.Actor.DebugFreezeGame");

	Engine_DebugFreezeGame_Parms DebugFreezeGame_Parms;
	ProcessEvent(pFnDebugFreezeGame,NULL,&DebugFreezeGame_Parms,NULL);
}

struct Engine_SetCollisionSize_Parms
{
	float                                              NewRadius;                                        		// 0x000000 (0x0004)              
	float                                              NewHeight;                                        		// 0x000004 (0x0004)              
};

void AActor::SetCollisionSize(float NewRadius,float NewHeight)
{
	static UFieldFunc* pFnSetCollisionSize = NULL;
	if(!pFnSetCollisionSize)
		pFnSetCollisionSize = UObject::FindFunction("Function Engine.Actor.SetCollisionSize");

	Engine_SetCollisionSize_Parms SetCollisionSize_Parms;
	SetCollisionSize_Parms.NewRadius = NewRadius;
	SetCollisionSize_Parms.NewHeight = NewHeight;

	unsigned short NativeIndex = pFnSetCollisionSize->iNative;
	pFnSetCollisionSize->iNative = 0;
	pFnSetCollisionSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCollisionSize,NULL,&SetCollisionSize_Parms,NULL);
	pFnSetCollisionSize->FunctionFlags |= 0x400;
	pFnSetCollisionSize->iNative = NativeIndex;
}

struct Engine_AutonomousPhysicsPhysNone_Parms
{
	float                                              fDeltaSeconds;                                    		// 0x000000 (0x0004)              
};

void AActor::AutonomousPhysicsPhysNone(float fDeltaSeconds)
{
	static UFieldFunc* pFnAutonomousPhysicsPhysNone = NULL;
	if(!pFnAutonomousPhysicsPhysNone)
		pFnAutonomousPhysicsPhysNone = UObject::FindFunction("Function Engine.Actor.AutonomousPhysicsPhysNone");

	Engine_AutonomousPhysicsPhysNone_Parms AutonomousPhysicsPhysNone_Parms;
	AutonomousPhysicsPhysNone_Parms.fDeltaSeconds = fDeltaSeconds;
	pFnAutonomousPhysicsPhysNone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAutonomousPhysicsPhysNone,NULL,&AutonomousPhysicsPhysNone_Parms,NULL);
	pFnAutonomousPhysicsPhysNone->FunctionFlags |= 0x400;
}

struct Engine_ChartData_Parms
{
	struct FString                                     DataName;                                         		// 0x000000 (0x000C)              
	float                                              DataValue;                                        		// 0x00000C (0x0004)              
};

void AActor::ChartData(struct FString DataName,float DataValue)
{
	static UFieldFunc* pFnChartData = NULL;
	if(!pFnChartData)
		pFnChartData = UObject::FindFunction("Function Engine.Actor.ChartData");

	Engine_ChartData_Parms ChartData_Parms;
	memcpy(&ChartData_Parms.DataName,&DataName,0xC);
	ChartData_Parms.DataValue = DataValue;
	pFnChartData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnChartData,NULL,&ChartData_Parms,NULL);
	pFnChartData->FunctionFlags |= 0x400;
}

struct Engine_IsStationary_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::IsStationary()
{
	static UFieldFunc* pFnIsStationary = NULL;
	if(!pFnIsStationary)
		pFnIsStationary = UObject::FindFunction("Function Engine.Actor.IsStationary");

	Engine_IsStationary_Parms IsStationary_Parms;
	ProcessEvent(pFnIsStationary,NULL,&IsStationary_Parms,NULL);
	return IsStationary_Parms.ReturnValue;
}

struct Engine_OnTeleport_Parms
{
	class USeqAct_Teleport*                            Action;                                           		// 0x000000 (0x0004)              
	//TArray<class UObject*>                             objVars;                                          		// 0x000004 (0x000C)              
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//class AActor*                                      destActor;                                        		// 0x000014 (0x0004)              
	//class AController*                                 C;                                                		// 0x000018 (0x0004)              
};

void AActor::OnTeleport(class USeqAct_Teleport* Action)
{
	static UFieldFunc* pFnOnTeleport = NULL;
	if(!pFnOnTeleport)
		pFnOnTeleport = UObject::FindFunction("Function Engine.Actor.OnTeleport");

	Engine_OnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;
	ProcessEvent(pFnOnTeleport,NULL,&OnTeleport_Parms,NULL);
}

struct Engine_TriggerEventClass_Parms
{
	class UClass*                                      InEventClass;                                     		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	int                                                ActivateIndex;                                    		// 0x000008 (0x0004)              
	unsigned long                                      bTest : 1;                                        		// 0x00000C (0x0004) [0x00000001] 
	TArray<class USequenceEvent*>                      ActivatedEvents;                                  		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//TArray<int>                                        ActivateIndices;                                  		// 0x000020 (0x000C)              
};

bool AActor::TriggerEventClass(class UClass* InEventClass,class AActor* InInstigator,int ActivateIndex,bool bTest,TArray<class USequenceEvent*>* ActivatedEvents)
{
	static UFieldFunc* pFnTriggerEventClass = NULL;
	if(!pFnTriggerEventClass)
		pFnTriggerEventClass = UObject::FindFunction("Function Engine.Actor.TriggerEventClass");

	Engine_TriggerEventClass_Parms TriggerEventClass_Parms;
	TriggerEventClass_Parms.InEventClass = InEventClass;
	TriggerEventClass_Parms.InInstigator = InInstigator;
	TriggerEventClass_Parms.ActivateIndex = ActivateIndex;
	TriggerEventClass_Parms.bTest = bTest;
	ProcessEvent(pFnTriggerEventClass,NULL,&TriggerEventClass_Parms,NULL);
	if(ActivatedEvents)
		memcpy(ActivatedEvents,&TriggerEventClass_Parms.ActivatedEvents,0xC);
	return TriggerEventClass_Parms.ReturnValue;
}

struct Engine_Timer_Parms
{
};

void AActor::Timer()
{
	static UFieldFunc* pFnTimer = NULL;
	if(!pFnTimer)
		pFnTimer = UObject::FindFunction("Function Engine.Actor.Timer");

	Engine_Timer_Parms Timer_Parms;
	ProcessEvent(pFnTimer,NULL,&Timer_Parms,NULL);
}

struct Engine_IsActorPlayingFaceFXAnim_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::IsActorPlayingFaceFXAnim()
{
	static UFieldFunc* pFnIsActorPlayingFaceFXAnim = NULL;
	if(!pFnIsActorPlayingFaceFXAnim)
		pFnIsActorPlayingFaceFXAnim = UObject::FindFunction("Function Engine.Actor.IsActorPlayingFaceFXAnim");

	Engine_IsActorPlayingFaceFXAnim_Parms IsActorPlayingFaceFXAnim_Parms;
	ProcessEvent(pFnIsActorPlayingFaceFXAnim,NULL,&IsActorPlayingFaceFXAnim_Parms,NULL);
	return IsActorPlayingFaceFXAnim_Parms.ReturnValue;
}

struct Engine_SetCollision_Parms
{
	unsigned long                                      bNewColActors : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bNewBlockActors : 1;                              		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bNewIgnoreEncroachers : 1;                        		// 0x000008 (0x0004) [0x00000001] 
};

void AActor::SetCollision(bool bNewColActors,bool bNewBlockActors,bool bNewIgnoreEncroachers)
{
	static UFieldFunc* pFnSetCollision = NULL;
	if(!pFnSetCollision)
		pFnSetCollision = UObject::FindFunction("Function Engine.Actor.SetCollision");

	Engine_SetCollision_Parms SetCollision_Parms;
	SetCollision_Parms.bNewColActors = bNewColActors;
	SetCollision_Parms.bNewBlockActors = bNewBlockActors;
	SetCollision_Parms.bNewIgnoreEncroachers = bNewIgnoreEncroachers;

	unsigned short NativeIndex = pFnSetCollision->iNative;
	pFnSetCollision->iNative = 0;
	pFnSetCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCollision,NULL,&SetCollision_Parms,NULL);
	pFnSetCollision->FunctionFlags |= 0x400;
	pFnSetCollision->iNative = NativeIndex;
}

struct Engine_PostInitAnimTree_Parms
{
	class USkeletalMeshComponent*                      SkelComp;                                         		// 0x000000 (0x0004)              
};

void AActor::PostInitAnimTree(class USkeletalMeshComponent* SkelComp)
{
	static UFieldFunc* pFnPostInitAnimTree = NULL;
	if(!pFnPostInitAnimTree)
		pFnPostInitAnimTree = UObject::FindFunction("Function Engine.Actor.PostInitAnimTree");

	Engine_PostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;
	ProcessEvent(pFnPostInitAnimTree,NULL,&PostInitAnimTree_Parms,NULL);
}

struct Engine_OnMakeNoise_Parms
{
	class USeqAct_MakeNoise*                           Action;                                           		// 0x000000 (0x0004)              
};

void AActor::OnMakeNoise(class USeqAct_MakeNoise* Action)
{
	static UFieldFunc* pFnOnMakeNoise = NULL;
	if(!pFnOnMakeNoise)
		pFnOnMakeNoise = UObject::FindFunction("Function Engine.Actor.OnMakeNoise");

	Engine_OnMakeNoise_Parms OnMakeNoise_Parms;
	OnMakeNoise_Parms.Action = Action;
	ProcessEvent(pFnOnMakeNoise,NULL,&OnMakeNoise_Parms,NULL);
}

struct Engine_SetLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::SetLocation(FVector3 NewLocation)
{
	static UFieldFunc* pFnSetLocation = NULL;
	if(!pFnSetLocation)
		pFnSetLocation = UObject::FindFunction("Function Engine.Actor.SetLocation");

	Engine_SetLocation_Parms SetLocation_Parms;
	memcpy(&SetLocation_Parms.NewLocation,&NewLocation,0xC);

	unsigned short NativeIndex = pFnSetLocation->iNative;
	pFnSetLocation->iNative = 0;
	pFnSetLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLocation,NULL,&SetLocation_Parms,NULL);
	pFnSetLocation->FunctionFlags |= 0x400;
	pFnSetLocation->iNative = NativeIndex;
	return SetLocation_Parms.ReturnValue;
}

struct Engine_FindGoodEndView_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	FRotator                                           GoodRotation;                                     		// 0x000004 (0x000C)              
};

void AActor::FindGoodEndView(class APlayerController* PC,FRotator* GoodRotation)
{
	static UFieldFunc* pFnFindGoodEndView = NULL;
	if(!pFnFindGoodEndView)
		pFnFindGoodEndView = UObject::FindFunction("Function Engine.Actor.FindGoodEndView");

	Engine_FindGoodEndView_Parms FindGoodEndView_Parms;
	FindGoodEndView_Parms.PC = PC;
	ProcessEvent(pFnFindGoodEndView,NULL,&FindGoodEndView_Parms,NULL);
	if(GoodRotation)
		memcpy(GoodRotation,&FindGoodEndView_Parms.GoodRotation,0xC);
}

struct Engine_PlayerCanSeeMe_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AActor::PlayerCanSeeMe()
{
	static UFieldFunc* pFnPlayerCanSeeMe = NULL;
	if(!pFnPlayerCanSeeMe)
		pFnPlayerCanSeeMe = UObject::FindFunction("Function Engine.Actor.PlayerCanSeeMe");

	Engine_PlayerCanSeeMe_Parms PlayerCanSeeMe_Parms;

	unsigned short NativeIndex = pFnPlayerCanSeeMe->iNative;
	pFnPlayerCanSeeMe->iNative = 0;
	pFnPlayerCanSeeMe->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayerCanSeeMe,NULL,&PlayerCanSeeMe_Parms,NULL);
	pFnPlayerCanSeeMe->FunctionFlags |= 0x400;
	pFnPlayerCanSeeMe->iNative = NativeIndex;
	return PlayerCanSeeMe_Parms.ReturnValue;
}

struct Engine_ClearTimer_Parms
{
	struct FScriptDelegate                             InTimerFunc;                                      		// 0x000000 (0x000C)              
};

void AActor::ClearTimer(struct FScriptDelegate InTimerFunc)
{
	static UFieldFunc* pFnClearTimer = NULL;
	if(!pFnClearTimer)
		pFnClearTimer = UObject::FindFunction("Function Engine.Actor.ClearTimer");

	Engine_ClearTimer_Parms ClearTimer_Parms;
	memcpy(&ClearTimer_Parms.InTimerFunc,&InTimerFunc,0xC);
	pFnClearTimer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearTimer,NULL,&ClearTimer_Parms,NULL);
	pFnClearTimer->FunctionFlags |= 0x400;
}

struct Engine_ChildActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
};

void AActor::ChildActors(class UClass* BaseClass,class AActor** Actor)
{
	static UFieldFunc* pFnChildActors = NULL;
	if(!pFnChildActors)
		pFnChildActors = UObject::FindFunction("Function Engine.Actor.ChildActors");

	Engine_ChildActors_Parms ChildActors_Parms;
	ChildActors_Parms.BaseClass = BaseClass;

	unsigned short NativeIndex = pFnChildActors->iNative;
	pFnChildActors->iNative = 0;
	pFnChildActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnChildActors,NULL,&ChildActors_Parms,NULL);
	pFnChildActors->FunctionFlags |= 0x400;
	pFnChildActors->iNative = NativeIndex;
	if(Actor)
		*Actor = ChildActors_Parms.Actor;
}

struct Engine_IsTimerActive_Parms
{
	struct FScriptDelegate                             InTimerFunc;                                      		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::IsTimerActive(struct FScriptDelegate InTimerFunc)
{
	static UFieldFunc* pFnIsTimerActive = NULL;
	if(!pFnIsTimerActive)
		pFnIsTimerActive = UObject::FindFunction("Function Engine.Actor.IsTimerActive");

	Engine_IsTimerActive_Parms IsTimerActive_Parms;
	memcpy(&IsTimerActive_Parms.InTimerFunc,&InTimerFunc,0xC);
	pFnIsTimerActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsTimerActive,NULL,&IsTimerActive_Parms,NULL);
	pFnIsTimerActive->FunctionFlags |= 0x400;
	return IsTimerActive_Parms.ReturnValue;
}

struct Engine_PostDemoRewind_Parms
{
};

void AActor::PostDemoRewind()
{
	static UFieldFunc* pFnPostDemoRewind = NULL;
	if(!pFnPostDemoRewind)
		pFnPostDemoRewind = UObject::FindFunction("Function Engine.Actor.PostDemoRewind");

	Engine_PostDemoRewind_Parms PostDemoRewind_Parms;
	ProcessEvent(pFnPostDemoRewind,NULL,&PostDemoRewind_Parms,NULL);
}

struct Engine_ReplicatedArrayEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
	int                                                nElement;                                         		// 0x000008 (0x0004)              
};

void AActor::ReplicatedArrayEvent(struct FName VarName,int nElement)
{
	static UFieldFunc* pFnReplicatedArrayEvent = NULL;
	if(!pFnReplicatedArrayEvent)
		pFnReplicatedArrayEvent = UObject::FindFunction("Function Engine.Actor.ReplicatedArrayEvent");

	Engine_ReplicatedArrayEvent_Parms ReplicatedArrayEvent_Parms;
	memcpy(&ReplicatedArrayEvent_Parms.VarName,&VarName,0x8);
	ReplicatedArrayEvent_Parms.nElement = nElement;
	ProcessEvent(pFnReplicatedArrayEvent,NULL,&ReplicatedArrayEvent_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void AActor::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.Actor.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_MatchStarting_Parms
{
};

void AActor::MatchStarting()
{
	static UFieldFunc* pFnMatchStarting = NULL;
	if(!pFnMatchStarting)
		pFnMatchStarting = UObject::FindFunction("Function Engine.Actor.MatchStarting");

	Engine_MatchStarting_Parms MatchStarting_Parms;
	ProcessEvent(pFnMatchStarting,NULL,&MatchStarting_Parms,NULL);
}

struct Engine_SetInitialState_Parms
{
};

void AActor::SetInitialState()
{
	static UFieldFunc* pFnSetInitialState = NULL;
	if(!pFnSetInitialState)
		pFnSetInitialState = UObject::FindFunction("Function Engine.Actor.SetInitialState");

	Engine_SetInitialState_Parms SetInitialState_Parms;
	ProcessEvent(pFnSetInitialState,NULL,&SetInitialState_Parms,NULL);
}

struct Engine_StopsProjectile_Parms
{
	class AProjectile*                                 P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::StopsProjectile(class AProjectile* P)
{
	static UFieldFunc* pFnStopsProjectile = NULL;
	if(!pFnStopsProjectile)
		pFnStopsProjectile = UObject::FindFunction("Function Engine.Actor.StopsProjectile");

	Engine_StopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;
	ProcessEvent(pFnStopsProjectile,NULL,&StopsProjectile_Parms,NULL);
	return StopsProjectile_Parms.ReturnValue;
}

struct Engine_SetNetUpdateTime_Parms
{
	double                                             NewUpdateTime;                                    		// 0x000000 (0x0008)              
};

void AActor::SetNetUpdateTime(double NewUpdateTime)
{
	static UFieldFunc* pFnSetNetUpdateTime = NULL;
	if(!pFnSetNetUpdateTime)
		pFnSetNetUpdateTime = UObject::FindFunction("Function Engine.Actor.SetNetUpdateTime");

	Engine_SetNetUpdateTime_Parms SetNetUpdateTime_Parms;
	SetNetUpdateTime_Parms.NewUpdateTime = NewUpdateTime;
	pFnSetNetUpdateTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNetUpdateTime,NULL,&SetNetUpdateTime_Parms,NULL);
	pFnSetNetUpdateTime->FunctionFlags |= 0x400;
}

struct Engine_TraceActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
	FVector3                                           HitLoc;                                           		// 0x000008 (0x000C)              
	FVector3                                           HitNorm;                                          		// 0x000014 (0x000C)              
	FVector3                                           End;                                              		// 0x000020 (0x000C)              
	FVector3                                           Start;                                            		// 0x00002C (0x000C)              
	FVector3                                           Extent;                                           		// 0x000038 (0x000C)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x000044 (0x001C)              
	int                                                ExtraTraceFlags;                                  		// 0x000060 (0x0004)              
};

void AActor::TraceActors(class UClass* BaseClass,class AActor** Actor,FVector3* HitLoc,FVector3* HitNorm,FVector3 End,FVector3 Start,FVector3 Extent,struct FTraceHitInfo* HitInfo,int ExtraTraceFlags)
{
	static UFieldFunc* pFnTraceActors = NULL;
	if(!pFnTraceActors)
		pFnTraceActors = UObject::FindFunction("Function Engine.Actor.TraceActors");

	Engine_TraceActors_Parms TraceActors_Parms;
	TraceActors_Parms.BaseClass = BaseClass;
	memcpy(&TraceActors_Parms.End,&End,0xC);
	memcpy(&TraceActors_Parms.Start,&Start,0xC);
	memcpy(&TraceActors_Parms.Extent,&Extent,0xC);
	TraceActors_Parms.ExtraTraceFlags = ExtraTraceFlags;

	unsigned short NativeIndex = pFnTraceActors->iNative;
	pFnTraceActors->iNative = 0;
	pFnTraceActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTraceActors,NULL,&TraceActors_Parms,NULL);
	pFnTraceActors->FunctionFlags |= 0x400;
	pFnTraceActors->iNative = NativeIndex;
	if(Actor)
		*Actor = TraceActors_Parms.Actor;
	if(HitLoc)
		memcpy(HitLoc,&TraceActors_Parms.HitLoc,0xC);
	if(HitNorm)
		memcpy(HitNorm,&TraceActors_Parms.HitNorm,0xC);
	if(HitInfo)
		memcpy(HitInfo,&TraceActors_Parms.HitInfo,0x1C);
}

struct Engine_SetTickGroup_Parms
{
	unsigned char                                      NewTickGroup;                                     		// 0x000000 (0x0001)              
};

void AActor::SetTickGroup(unsigned char NewTickGroup)
{
	static UFieldFunc* pFnSetTickGroup = NULL;
	if(!pFnSetTickGroup)
		pFnSetTickGroup = UObject::FindFunction("Function Engine.Actor.SetTickGroup");

	Engine_SetTickGroup_Parms SetTickGroup_Parms;
	SetTickGroup_Parms.NewTickGroup = NewTickGroup;
	pFnSetTickGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTickGroup,NULL,&SetTickGroup_Parms,NULL);
	pFnSetTickGroup->FunctionFlags |= 0x400;
}

struct Engine_DrawDebugCone_Parms
{
	FVector3                                           Origin;                                           		// 0x000000 (0x000C)              
	FVector3                                           Direction;                                        		// 0x00000C (0x000C)              
	float                                              Length;                                           		// 0x000018 (0x0004)              
	float                                              AngleWidth;                                       		// 0x00001C (0x0004)              
	float                                              AngleHeight;                                      		// 0x000020 (0x0004)              
	int                                                NumSides;                                         		// 0x000024 (0x0004)              
	DWORD                                              DrawColor;                                        		// 0x000028 (0x0004)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x00002C (0x0004) [0x00000001] 
};

void AActor::DrawDebugCone(FVector3 Origin,FVector3 Direction,float Length,float AngleWidth,float AngleHeight,int NumSides,DWORD DrawColor,bool bPersistentLines)
{
	static UFieldFunc* pFnDrawDebugCone = NULL;
	if(!pFnDrawDebugCone)
		pFnDrawDebugCone = UObject::FindFunction("Function Engine.Actor.DrawDebugCone");

	Engine_DrawDebugCone_Parms DrawDebugCone_Parms;
	memcpy(&DrawDebugCone_Parms.Origin,&Origin,0xC);
	memcpy(&DrawDebugCone_Parms.Direction,&Direction,0xC);
	DrawDebugCone_Parms.Length = Length;
	DrawDebugCone_Parms.AngleWidth = AngleWidth;
	DrawDebugCone_Parms.AngleHeight = AngleHeight;
	DrawDebugCone_Parms.NumSides = NumSides;
	memcpy(&DrawDebugCone_Parms.DrawColor,&DrawColor,0x4);
	DrawDebugCone_Parms.bPersistentLines = bPersistentLines;
	pFnDrawDebugCone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawDebugCone,NULL,&DrawDebugCone_Parms,NULL);
	pFnDrawDebugCone->FunctionFlags |= 0x400;
}

struct Engine_ServerIllegalLocation_APB_Parms
{
	struct FString                                     sErrorMessage;                                    		// 0x000000 (0x000C)              
};

void AActor::ServerIllegalLocation_APB(struct FString sErrorMessage)
{
	static UFieldFunc* pFnServerIllegalLocation_APB = NULL;
	if(!pFnServerIllegalLocation_APB)
		pFnServerIllegalLocation_APB = UObject::FindFunction("Function Engine.Actor.ServerIllegalLocation_APB");

	Engine_ServerIllegalLocation_APB_Parms ServerIllegalLocation_APB_Parms;
	memcpy(&ServerIllegalLocation_APB_Parms.sErrorMessage,&sErrorMessage,0xC);
	pFnServerIllegalLocation_APB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerIllegalLocation_APB,NULL,&ServerIllegalLocation_APB_Parms,NULL);
	pFnServerIllegalLocation_APB->FunctionFlags |= 0x400;
}

struct Engine_UsedBy_Parms
{
	class APawn*                                       User;                                             		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AActor::UsedBy(class APawn* User)
{
	static UFieldFunc* pFnUsedBy = NULL;
	if(!pFnUsedBy)
		pFnUsedBy = UObject::FindFunction("Function Engine.Actor.UsedBy");

	Engine_UsedBy_Parms UsedBy_Parms;
	UsedBy_Parms.User = User;
	ProcessEvent(pFnUsedBy,NULL,&UsedBy_Parms,NULL);
	return UsedBy_Parms.ReturnValue;
}

struct Engine_GetTimerRate_Parms
{
	struct FScriptDelegate                             InTimerFunc;                                      		// 0x000000 (0x000C)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float AActor::GetTimerRate(struct FScriptDelegate InTimerFunc)
{
	static UFieldFunc* pFnGetTimerRate = NULL;
	if(!pFnGetTimerRate)
		pFnGetTimerRate = UObject::FindFunction("Function Engine.Actor.GetTimerRate");

	Engine_GetTimerRate_Parms GetTimerRate_Parms;
	memcpy(&GetTimerRate_Parms.InTimerFunc,&InTimerFunc,0xC);
	pFnGetTimerRate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTimerRate,NULL,&GetTimerRate_Parms,NULL);
	pFnGetTimerRate->FunctionFlags |= 0x400;
	return GetTimerRate_Parms.ReturnValue;
}

struct Engine_GetItemName_Parms
{
	struct FString                                     FullName;                                         		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
	//int                                                pos;                                              		// 0x000018 (0x0004)              
};

struct FString AActor::GetItemName(struct FString FullName)
{
	static UFieldFunc* pFnGetItemName = NULL;
	if(!pFnGetItemName)
		pFnGetItemName = UObject::FindFunction("Function Engine.Actor.GetItemName");

	Engine_GetItemName_Parms GetItemName_Parms;
	memcpy(&GetItemName_Parms.FullName,&FullName,0xC);
	ProcessEvent(pFnGetItemName,NULL,&GetItemName_Parms,NULL);
	return GetItemName_Parms.ReturnValue;
}

struct Engine_ScriptGetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char AActor::ScriptGetTeamNum()
{
	static UFieldFunc* pFnScriptGetTeamNum = NULL;
	if(!pFnScriptGetTeamNum)
		pFnScriptGetTeamNum = UObject::FindFunction("Function Engine.Actor.ScriptGetTeamNum");

	Engine_ScriptGetTeamNum_Parms ScriptGetTeamNum_Parms;
	ProcessEvent(pFnScriptGetTeamNum,NULL,&ScriptGetTeamNum_Parms,NULL);
	return ScriptGetTeamNum_Parms.ReturnValue;
}

struct Engine_OnChangeCollision_Parms
{
	class USeqAct_ChangeCollision*                     Action;                                           		// 0x000000 (0x0004)              
};

void AActor::OnChangeCollision(class USeqAct_ChangeCollision* Action)
{
	static UFieldFunc* pFnOnChangeCollision = NULL;
	if(!pFnOnChangeCollision)
		pFnOnChangeCollision = UObject::FindFunction("Function Engine.Actor.OnChangeCollision");

	Engine_OnChangeCollision_Parms OnChangeCollision_Parms;
	OnChangeCollision_Parms.Action = Action;
	ProcessEvent(pFnOnChangeCollision,NULL,&OnChangeCollision_Parms,NULL);
}

struct Engine_GetPackageGuid_Parms
{
	struct FName                                       PackageName;                                      		// 0x000000 (0x0008)              
	struct FGuid                                       ReturnValue;                                      		// 0x000008 (0x0010)              
};

struct FGuid AActor::GetPackageGuid(struct FName PackageName)
{
	static UFieldFunc* pFnGetPackageGuid = NULL;
	if(!pFnGetPackageGuid)
		pFnGetPackageGuid = UObject::FindFunction("Function Engine.Actor.GetPackageGuid");

	Engine_GetPackageGuid_Parms GetPackageGuid_Parms;
	memcpy(&GetPackageGuid_Parms.PackageName,&PackageName,0x8);
	pFnGetPackageGuid->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPackageGuid,NULL,&GetPackageGuid_Parms,NULL);
	pFnGetPackageGuid->FunctionFlags |= 0x400;
	return GetPackageGuid_Parms.ReturnValue;
}

struct Engine_TakeRadiusDamage_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	float                                              BaseDamage;                                       		// 0x000004 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000014 (0x000C)              
	unsigned long                                      bFullDamage : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	class AActor*                                      DamageCauser;                                     		// 0x000024 (0x0004)              
	//float                                              ColRadius;                                        		// 0x000028 (0x0004)              
	//float                                              ColHeight;                                        		// 0x00002C (0x0004)              
	//float                                              DamageScale;                                      		// 0x000030 (0x0004)              
	//float                                              Dist;                                             		// 0x000034 (0x0004)              
	//FVector3                                           Dir;                                              		// 0x000038 (0x000C)              
};

void AActor::TakeRadiusDamage(class AController* InstigatedBy,float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,bool bFullDamage,class AActor* DamageCauser)
{
	static UFieldFunc* pFnTakeRadiusDamage = NULL;
	if(!pFnTakeRadiusDamage)
		pFnTakeRadiusDamage = UObject::FindFunction("Function Engine.Actor.TakeRadiusDamage");

	Engine_TakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy(&TakeRadiusDamage_Parms.HurtOrigin,&HurtOrigin,0xC);
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	ProcessEvent(pFnTakeRadiusDamage,NULL,&TakeRadiusDamage_Parms,NULL);
}

struct Engine_ClampRotation_Parms
{
	FRotator                                           out_Rot;                                          		// 0x000000 (0x000C)              
	FRotator                                           rBase;                                            		// 0x00000C (0x000C)              
	FRotator                                           rUpperLimits;                                     		// 0x000018 (0x000C)              
	FRotator                                           rLowerLimits;                                     		// 0x000024 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000030 (0x0004) [0x00000001] 
};

bool AActor::ClampRotation(FRotator* out_Rot,FRotator rBase,FRotator rUpperLimits,FRotator rLowerLimits)
{
	static UFieldFunc* pFnClampRotation = NULL;
	if(!pFnClampRotation)
		pFnClampRotation = UObject::FindFunction("Function Engine.Actor.ClampRotation");

	Engine_ClampRotation_Parms ClampRotation_Parms;
	memcpy(&ClampRotation_Parms.rBase,&rBase,0xC);
	memcpy(&ClampRotation_Parms.rUpperLimits,&rUpperLimits,0xC);
	memcpy(&ClampRotation_Parms.rLowerLimits,&rLowerLimits,0xC);
	pFnClampRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClampRotation,NULL,&ClampRotation_Parms,NULL);
	pFnClampRotation->FunctionFlags |= 0x400;
	if(out_Rot)
		memcpy(out_Rot,&ClampRotation_Parms.out_Rot,0xC);
	return ClampRotation_Parms.ReturnValue;
}

struct Engine_FindEventsOfClass_Parms
{
	class UClass*                                      EventClass;                                       		// 0x000000 (0x0004)              
	TArray<class USequenceEvent*>                      out_EventList;                                    		// 0x000004 (0x000C)              
	unsigned long                                      bIncludeDisabled : 1;                             		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//class USequenceEvent*                              Evt;                                              		// 0x000018 (0x0004)              
	//unsigned long                                      bFoundEvent : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool AActor::FindEventsOfClass(class UClass* EventClass,TArray<class USequenceEvent*>* out_EventList,bool bIncludeDisabled)
{
	static UFieldFunc* pFnFindEventsOfClass = NULL;
	if(!pFnFindEventsOfClass)
		pFnFindEventsOfClass = UObject::FindFunction("Function Engine.Actor.FindEventsOfClass");

	Engine_FindEventsOfClass_Parms FindEventsOfClass_Parms;
	FindEventsOfClass_Parms.EventClass = EventClass;
	FindEventsOfClass_Parms.bIncludeDisabled = bIncludeDisabled;
	ProcessEvent(pFnFindEventsOfClass,NULL,&FindEventsOfClass_Parms,NULL);
	if(out_EventList)
		memcpy(out_EventList,&FindEventsOfClass_Parms.out_EventList,0xC);
	return FindEventsOfClass_Parms.ReturnValue;
}

struct Engine_MoveSmooth_Parms
{
	FVector3                                           Delta;                                            		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::MoveSmooth(FVector3 Delta)
{
	static UFieldFunc* pFnMoveSmooth = NULL;
	if(!pFnMoveSmooth)
		pFnMoveSmooth = UObject::FindFunction("Function Engine.Actor.MoveSmooth");

	Engine_MoveSmooth_Parms MoveSmooth_Parms;
	memcpy(&MoveSmooth_Parms.Delta,&Delta,0xC);

	unsigned short NativeIndex = pFnMoveSmooth->iNative;
	pFnMoveSmooth->iNative = 0;
	pFnMoveSmooth->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMoveSmooth,NULL,&MoveSmooth_Parms,NULL);
	pFnMoveSmooth->FunctionFlags |= 0x400;
	pFnMoveSmooth->iNative = NativeIndex;
	return MoveSmooth_Parms.ReturnValue;
}

struct Engine_DEBUGBREAKPOINT2_Parms
{
};

void AActor::DEBUGBREAKPOINT2()
{
	static UFieldFunc* pFnDEBUGBREAKPOINT2 = NULL;
	if(!pFnDEBUGBREAKPOINT2)
		pFnDEBUGBREAKPOINT2 = UObject::FindFunction("Function Engine.Actor.DEBUGBREAKPOINT2");

	Engine_DEBUGBREAKPOINT2_Parms DEBUGBREAKPOINT2_Parms;
	pFnDEBUGBREAKPOINT2->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDEBUGBREAKPOINT2,NULL,&DEBUGBREAKPOINT2_Parms,NULL);
	pFnDEBUGBREAKPOINT2->FunctionFlags |= 0x400;
}

struct Engine_AutonomousPhysics_Parms
{
	float                                              DeltaSeconds;                                     		// 0x000000 (0x0004)              
};

void AActor::AutonomousPhysics(float DeltaSeconds)
{
	static UFieldFunc* pFnAutonomousPhysics = NULL;
	if(!pFnAutonomousPhysics)
		pFnAutonomousPhysics = UObject::FindFunction("Function Engine.Actor.AutonomousPhysics");

	Engine_AutonomousPhysics_Parms AutonomousPhysics_Parms;
	AutonomousPhysics_Parms.DeltaSeconds = DeltaSeconds;

	unsigned short NativeIndex = pFnAutonomousPhysics->iNative;
	pFnAutonomousPhysics->iNative = 0;
	pFnAutonomousPhysics->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAutonomousPhysics,NULL,&AutonomousPhysics_Parms,NULL);
	pFnAutonomousPhysics->FunctionFlags |= 0x400;
	pFnAutonomousPhysics->iNative = NativeIndex;
}

struct Engine_SetRelativeLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AActor::SetRelativeLocation(FVector3 NewLocation)
{
	static UFieldFunc* pFnSetRelativeLocation = NULL;
	if(!pFnSetRelativeLocation)
		pFnSetRelativeLocation = UObject::FindFunction("Function Engine.Actor.SetRelativeLocation");

	Engine_SetRelativeLocation_Parms SetRelativeLocation_Parms;
	memcpy(&SetRelativeLocation_Parms.NewLocation,&NewLocation,0xC);
	pFnSetRelativeLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRelativeLocation,NULL,&SetRelativeLocation_Parms,NULL);
	pFnSetRelativeLocation->FunctionFlags |= 0x400;
	return SetRelativeLocation_Parms.ReturnValue;
}

struct Engine_IsInPain_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APhysicsVolume*                              V;                                                		// 0x000004 (0x0004)              
};

bool AActor::IsInPain()
{
	static UFieldFunc* pFnIsInPain = NULL;
	if(!pFnIsInPain)
		pFnIsInPain = UObject::FindFunction("Function Engine.Actor.IsInPain");

	Engine_IsInPain_Parms IsInPain_Parms;
	ProcessEvent(pFnIsInPain,NULL,&IsInPain_Parms,NULL);
	return IsInPain_Parms.ReturnValue;
}

struct Engine_DrawDebugCylinder_Parms
{
	FVector3                                           Start;                                            		// 0x000000 (0x000C)              
	FVector3                                           End;                                              		// 0x00000C (0x000C)              
	float                                              Radius;                                           		// 0x000018 (0x0004)              
	int                                                Segments;                                         		// 0x00001C (0x0004)              
	unsigned char                                      R;                                                		// 0x000020 (0x0001)              
	unsigned char                                      G;                                                		// 0x000021 (0x0001)              
	unsigned char                                      B;                                                		// 0x000022 (0x0001)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x000024 (0x0004) [0x00000001] 
};

void AActor::DrawDebugCylinder(FVector3 Start,FVector3 End,float Radius,int Segments,unsigned char R,unsigned char G,unsigned char B,bool bPersistentLines)
{
	static UFieldFunc* pFnDrawDebugCylinder = NULL;
	if(!pFnDrawDebugCylinder)
		pFnDrawDebugCylinder = UObject::FindFunction("Function Engine.Actor.DrawDebugCylinder");

	Engine_DrawDebugCylinder_Parms DrawDebugCylinder_Parms;
	memcpy(&DrawDebugCylinder_Parms.Start,&Start,0xC);
	memcpy(&DrawDebugCylinder_Parms.End,&End,0xC);
	DrawDebugCylinder_Parms.Radius = Radius;
	DrawDebugCylinder_Parms.Segments = Segments;
	DrawDebugCylinder_Parms.R = R;
	DrawDebugCylinder_Parms.G = G;
	DrawDebugCylinder_Parms.B = B;
	DrawDebugCylinder_Parms.bPersistentLines = bPersistentLines;
	pFnDrawDebugCylinder->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawDebugCylinder,NULL,&DrawDebugCylinder_Parms,NULL);
	pFnDrawDebugCylinder->FunctionFlags |= 0x400;
}

struct Engine_SetPhysics_Parms
{
	unsigned char                                      newPhysics;                                       		// 0x000000 (0x0001)              
};

void AActor::SetPhysics(unsigned char newPhysics)
{
	static UFieldFunc* pFnSetPhysics = NULL;
	if(!pFnSetPhysics)
		pFnSetPhysics = UObject::FindFunction("Function Engine.Actor.SetPhysics");

	Engine_SetPhysics_Parms SetPhysics_Parms;
	SetPhysics_Parms.newPhysics = newPhysics;

	unsigned short NativeIndex = pFnSetPhysics->iNative;
	pFnSetPhysics->iNative = 0;
	pFnSetPhysics->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPhysics,NULL,&SetPhysics_Parms,NULL);
	pFnSetPhysics->FunctionFlags |= 0x400;
	pFnSetPhysics->iNative = NativeIndex;
}

struct Engine_SetHardAttach_Parms
{
	unsigned long                                      bNewHardAttach : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void AActor::SetHardAttach(bool bNewHardAttach)
{
	static UFieldFunc* pFnSetHardAttach = NULL;
	if(!pFnSetHardAttach)
		pFnSetHardAttach = UObject::FindFunction("Function Engine.Actor.SetHardAttach");

	Engine_SetHardAttach_Parms SetHardAttach_Parms;
	SetHardAttach_Parms.bNewHardAttach = bNewHardAttach;
	pFnSetHardAttach->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHardAttach,NULL,&SetHardAttach_Parms,NULL);
	pFnSetHardAttach->FunctionFlags |= 0x400;
}

struct Engine_VisibleCollidingActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Actor;                                            		// 0x000004 (0x0004)              
	float                                              Radius;                                           		// 0x000008 (0x0004)              
	FVector3                                           Loc;                                              		// 0x00000C (0x000C)              
	unsigned long                                      bIgnoreHidden : 1;                                		// 0x000018 (0x0004) [0x00000001] 
};

void AActor::VisibleCollidingActors(class UClass* BaseClass,class AActor** Actor,float Radius,FVector3 Loc,bool bIgnoreHidden)
{
	static UFieldFunc* pFnVisibleCollidingActors = NULL;
	if(!pFnVisibleCollidingActors)
		pFnVisibleCollidingActors = UObject::FindFunction("Function Engine.Actor.VisibleCollidingActors");

	Engine_VisibleCollidingActors_Parms VisibleCollidingActors_Parms;
	VisibleCollidingActors_Parms.BaseClass = BaseClass;
	VisibleCollidingActors_Parms.Radius = Radius;
	memcpy(&VisibleCollidingActors_Parms.Loc,&Loc,0xC);
	VisibleCollidingActors_Parms.bIgnoreHidden = bIgnoreHidden;

	unsigned short NativeIndex = pFnVisibleCollidingActors->iNative;
	pFnVisibleCollidingActors->iNative = 0;
	pFnVisibleCollidingActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnVisibleCollidingActors,NULL,&VisibleCollidingActors_Parms,NULL);
	pFnVisibleCollidingActors->FunctionFlags |= 0x400;
	pFnVisibleCollidingActors->iNative = NativeIndex;
	if(Actor)
		*Actor = VisibleCollidingActors_Parms.Actor;
}

struct Engine_FinishAnimControl_Parms
{
};

void AActor::FinishAnimControl()
{
	static UFieldFunc* pFnFinishAnimControl = NULL;
	if(!pFnFinishAnimControl)
		pFnFinishAnimControl = UObject::FindFunction("Function Engine.Actor.FinishAnimControl");

	Engine_FinishAnimControl_Parms FinishAnimControl_Parms;
	ProcessEvent(pFnFinishAnimControl,NULL,&FinishAnimControl_Parms,NULL);
}

struct Engine_DoKismetAttachment_Parms
{
	class AActor*                                      Attachment;                                       		// 0x000000 (0x0004)              
	class USeqAct_AttachToActor*                       Action;                                           		// 0x000004 (0x0004)              
	//unsigned long                                      bOldCollideActors : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bOldBlockActors : 1;                              		// 0x00000C (0x0004) [0x00000001] 
	//FVector3                                           X;                                                		// 0x000010 (0x000C)              
	//FVector3                                           Y;                                                		// 0x00001C (0x000C)              
	//FVector3                                           Z;                                                		// 0x000028 (0x000C)              
};

void AActor::DoKismetAttachment(class AActor* Attachment,class USeqAct_AttachToActor* Action)
{
	static UFieldFunc* pFnDoKismetAttachment = NULL;
	if(!pFnDoKismetAttachment)
		pFnDoKismetAttachment = UObject::FindFunction("Function Engine.Actor.DoKismetAttachment");

	Engine_DoKismetAttachment_Parms DoKismetAttachment_Parms;
	DoKismetAttachment_Parms.Attachment = Attachment;
	DoKismetAttachment_Parms.Action = Action;
	ProcessEvent(pFnDoKismetAttachment,NULL,&DoKismetAttachment_Parms,NULL);
}

struct Engine_BeginAnimControl_Parms
{
	TArray<class UAnimSet*>                            InAnimSets;                                       		// 0x000000 (0x000C)              
};

void AActor::BeginAnimControl(TArray<class UAnimSet*> InAnimSets)
{
	static UFieldFunc* pFnBeginAnimControl = NULL;
	if(!pFnBeginAnimControl)
		pFnBeginAnimControl = UObject::FindFunction("Function Engine.Actor.BeginAnimControl");

	Engine_BeginAnimControl_Parms BeginAnimControl_Parms;
	memcpy(&BeginAnimControl_Parms.InAnimSets,&InAnimSets,0xC);
	ProcessEvent(pFnBeginAnimControl,NULL,&BeginAnimControl_Parms,NULL);
}

struct Engine_ClientIllegalLocation_APB_Parms
{
	struct FString                                     sErrorMessage;                                    		// 0x000000 (0x000C)              
};

void AActor::ClientIllegalLocation_APB(struct FString sErrorMessage)
{
	static UFieldFunc* pFnClientIllegalLocation_APB = NULL;
	if(!pFnClientIllegalLocation_APB)
		pFnClientIllegalLocation_APB = UObject::FindFunction("Function Engine.Actor.ClientIllegalLocation_APB");

	Engine_ClientIllegalLocation_APB_Parms ClientIllegalLocation_APB_Parms;
	memcpy(&ClientIllegalLocation_APB_Parms.sErrorMessage,&sErrorMessage,0xC);
	pFnClientIllegalLocation_APB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientIllegalLocation_APB,NULL,&ClientIllegalLocation_APB_Parms,NULL);
	pFnClientIllegalLocation_APB->FunctionFlags |= 0x400;
}

struct Engine_SetDrawScale_Parms
{
	float                                              NewScale;                                         		// 0x000000 (0x0004)              
};

void AActor::SetDrawScale(float NewScale)
{
	static UFieldFunc* pFnSetDrawScale = NULL;
	if(!pFnSetDrawScale)
		pFnSetDrawScale = UObject::FindFunction("Function Engine.Actor.SetDrawScale");

	Engine_SetDrawScale_Parms SetDrawScale_Parms;
	SetDrawScale_Parms.NewScale = NewScale;
	pFnSetDrawScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDrawScale,NULL,&SetDrawScale_Parms,NULL);
	pFnSetDrawScale->FunctionFlags |= 0x400;
}

struct Engine_KilledBy_Parms
{
	class APawn*                                       EventInstigator;                                  		// 0x000000 (0x0004)              
};

void AActor::KilledBy(class APawn* EventInstigator)
{
	static UFieldFunc* pFnKilledBy = NULL;
	if(!pFnKilledBy)
		pFnKilledBy = UObject::FindFunction("Function Engine.Actor.KilledBy");

	Engine_KilledBy_Parms KilledBy_Parms;
	KilledBy_Parms.EventInstigator = EventInstigator;
	ProcessEvent(pFnKilledBy,NULL,&KilledBy_Parms,NULL);
}

struct Engine_GetDebugName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AActor::GetDebugName()
{
	static UFieldFunc* pFnGetDebugName = NULL;
	if(!pFnGetDebugName)
		pFnGetDebugName = UObject::FindFunction("Function Engine.Actor.GetDebugName");

	Engine_GetDebugName_Parms GetDebugName_Parms;
	ProcessEvent(pFnGetDebugName,NULL,&GetDebugName_Parms,NULL);
	return GetDebugName_Parms.ReturnValue;
}

struct Engine_GetLocalString_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString AActor::GetLocalString(int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI)
{
	static UFieldFunc* pFnGetLocalString = NULL;
	if(!pFnGetLocalString)
		pFnGetLocalString = UObject::FindFunction("Function Engine.Actor.GetLocalString");

	Engine_GetLocalString_Parms GetLocalString_Parms;
	GetLocalString_Parms.Switch = Switch;
	GetLocalString_Parms.RelatedPRI = RelatedPRI;
	GetLocalString_Parms.RelatedPRI = RelatedPRI;
	ProcessEvent(pFnGetLocalString,NULL,&GetLocalString_Parms,NULL);
	return GetLocalString_Parms.ReturnValue;
}

struct Engine_SetCollisionType_Parms
{
	unsigned char                                      NewCollisionType;                                 		// 0x000000 (0x0001)              
};

void AActor::SetCollisionType(unsigned char NewCollisionType)
{
	static UFieldFunc* pFnSetCollisionType = NULL;
	if(!pFnSetCollisionType)
		pFnSetCollisionType = UObject::FindFunction("Function Engine.Actor.SetCollisionType");

	Engine_SetCollisionType_Parms SetCollisionType_Parms;
	SetCollisionType_Parms.NewCollisionType = NewCollisionType;
	pFnSetCollisionType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCollisionType,NULL,&SetCollisionType_Parms,NULL);
	pFnSetCollisionType->FunctionFlags |= 0x400;
}

struct Engine_DrawDebugBox_Parms
{
	FVector3                                           Center;                                           		// 0x000000 (0x000C)              
	FVector3                                           Extent;                                           		// 0x00000C (0x000C)              
	unsigned char                                      R;                                                		// 0x000018 (0x0001)              
	unsigned char                                      G;                                                		// 0x000019 (0x0001)              
	unsigned char                                      B;                                                		// 0x00001A (0x0001)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x00001C (0x0004) [0x00000001] 
};

void AActor::DrawDebugBox(FVector3 Center,FVector3 Extent,unsigned char R,unsigned char G,unsigned char B,bool bPersistentLines)
{
	static UFieldFunc* pFnDrawDebugBox = NULL;
	if(!pFnDrawDebugBox)
		pFnDrawDebugBox = UObject::FindFunction("Function Engine.Actor.DrawDebugBox");

	Engine_DrawDebugBox_Parms DrawDebugBox_Parms;
	memcpy(&DrawDebugBox_Parms.Center,&Center,0xC);
	memcpy(&DrawDebugBox_Parms.Extent,&Extent,0xC);
	DrawDebugBox_Parms.R = R;
	DrawDebugBox_Parms.G = G;
	DrawDebugBox_Parms.B = B;
	DrawDebugBox_Parms.bPersistentLines = bPersistentLines;
	pFnDrawDebugBox->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawDebugBox,NULL,&DrawDebugBox_Parms,NULL);
	pFnDrawDebugBox->FunctionFlags |= 0x400;
}

struct Engine_Spawn_Parms
{
	class UClass*                                      SpawnClass;                                       		// 0x000000 (0x0004)              
	class AActor*                                      SpawnOwner;                                       		// 0x000004 (0x0004)              
	struct FName                                       SpawnTag;                                         		// 0x000008 (0x0008)              
	FVector3                                           SpawnLocation;                                    		// 0x000010 (0x000C)              
	FRotator                                           SpawnRotation;                                    		// 0x00001C (0x000C)              
	class AActor*                                      ActorTemplate;                                    		// 0x000028 (0x0004)              
	unsigned long                                      bNoCollisionFail : 1;                             		// 0x00002C (0x0004) [0x00000001] 
	class AActor*                                      ReturnValue;                                      		// 0x000030 (0x0004)              
};

class AActor* AActor::Spawn(class UClass* SpawnClass,class AActor* SpawnOwner,struct FName SpawnTag,FVector3 SpawnLocation,FRotator SpawnRotation,class AActor* ActorTemplate,bool bNoCollisionFail)
{
	static UFieldFunc* pFnSpawn = NULL;
	if(!pFnSpawn)
		pFnSpawn = UObject::FindFunction("Function Engine.Actor.Spawn");

	Engine_Spawn_Parms Spawn_Parms;
	Spawn_Parms.SpawnClass = SpawnClass;
	Spawn_Parms.SpawnOwner = SpawnOwner;
	memcpy(&Spawn_Parms.SpawnTag,&SpawnTag,0x8);
	memcpy(&Spawn_Parms.SpawnLocation,&SpawnLocation,0xC);
	memcpy(&Spawn_Parms.SpawnRotation,&SpawnRotation,0xC);
	Spawn_Parms.ActorTemplate = ActorTemplate;
	Spawn_Parms.bNoCollisionFail = bNoCollisionFail;
	pFnSpawn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSpawn,NULL,&Spawn_Parms,NULL);
	pFnSpawn->FunctionFlags |= 0x400;
	return Spawn_Parms.ReturnValue;
}

struct Engine_SetAPBCollision_Parms
{
	struct FsAPBCollision                              newAPBCollision;                                  		// 0x000000 (0x0014)              
};

void AActor::SetAPBCollision(struct FsAPBCollision newAPBCollision)
{
	static UFieldFunc* pFnSetAPBCollision = NULL;
	if(!pFnSetAPBCollision)
		pFnSetAPBCollision = UObject::FindFunction("Function Engine.Actor.SetAPBCollision");

	Engine_SetAPBCollision_Parms SetAPBCollision_Parms;
	memcpy(&SetAPBCollision_Parms.newAPBCollision,&newAPBCollision,0x14);
	pFnSetAPBCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAPBCollision,NULL,&SetAPBCollision_Parms,NULL);
	pFnSetAPBCollision->FunctionFlags |= 0x400;
}

struct Engine_OnAttachToActor_Parms
{
	class USeqAct_AttachToActor*                       Action;                                           		// 0x000000 (0x0004)              
	//int                                                Idx;                                              		// 0x000004 (0x0004)              
	//class AActor*                                      Attachment;                                       		// 0x000008 (0x0004)              
	//class AController*                                 C;                                                		// 0x00000C (0x0004)              
	//TArray<class UObject*>                             objVars;                                          		// 0x000010 (0x000C)              
};

void AActor::OnAttachToActor(class USeqAct_AttachToActor* Action)
{
	static UFieldFunc* pFnOnAttachToActor = NULL;
	if(!pFnOnAttachToActor)
		pFnOnAttachToActor = UObject::FindFunction("Function Engine.Actor.OnAttachToActor");

	Engine_OnAttachToActor_Parms OnAttachToActor_Parms;
	OnAttachToActor_Parms.Action = Action;
	ProcessEvent(pFnOnAttachToActor,NULL,&OnAttachToActor_Parms,NULL);
}

struct Engine_OnCauseDamage_Parms
{
	class USeqAct_CauseDamage*                         Action;                                           		// 0x000000 (0x0004)              
	//class AController*                                 InstigatorController;                             		// 0x000004 (0x0004)              
	//class APawn*                                       InstigatorPawn;                                   		// 0x000008 (0x0004)              
};

void AActor::OnCauseDamage(class USeqAct_CauseDamage* Action)
{
	static UFieldFunc* pFnOnCauseDamage = NULL;
	if(!pFnOnCauseDamage)
		pFnOnCauseDamage = UObject::FindFunction("Function Engine.Actor.OnCauseDamage");

	Engine_OnCauseDamage_Parms OnCauseDamage_Parms;
	OnCauseDamage_Parms.Action = Action;
	ProcessEvent(pFnOnCauseDamage,NULL,&OnCauseDamage_Parms,NULL);
}

struct Engine_InterpolationStarted_Parms
{
	class USeqAct_Interp*                              InterpAction;                                     		// 0x000000 (0x0004)              
};

void AActor::InterpolationStarted(class USeqAct_Interp* InterpAction)
{
	static UFieldFunc* pFnInterpolationStarted = NULL;
	if(!pFnInterpolationStarted)
		pFnInterpolationStarted = UObject::FindFunction("Function Engine.Actor.InterpolationStarted");

	Engine_InterpolationStarted_Parms InterpolationStarted_Parms;
	InterpolationStarted_Parms.InterpAction = InterpAction;
	ProcessEvent(pFnInterpolationStarted,NULL,&InterpolationStarted_Parms,NULL);
}

struct Engine_PlaySound_Parms
{
	class USoundCue*                                   InSoundCue;                                       		// 0x000000 (0x0004)              
	unsigned long                                      bNotReplicated : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bNoRepToOwner : 1;                                		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bStopWhenOwnerDestroyed : 1;                      		// 0x00000C (0x0004) [0x00000001] 
	FVector3                                           SoundLocation;                                    		// 0x000010 (0x000C)              
	unsigned long                                      bNoRepToRelevant : 1;                             		// 0x00001C (0x0004) [0x00000001] 
};

void AActor::PlaySound(class USoundCue* InSoundCue,bool bNotReplicated,bool bNoRepToOwner,bool bStopWhenOwnerDestroyed,FVector3 SoundLocation,bool bNoRepToRelevant)
{
	static UFieldFunc* pFnPlaySound = NULL;
	if(!pFnPlaySound)
		pFnPlaySound = UObject::FindFunction("Function Engine.Actor.PlaySound");

	Engine_PlaySound_Parms PlaySound_Parms;
	PlaySound_Parms.InSoundCue = InSoundCue;
	PlaySound_Parms.bNotReplicated = bNotReplicated;
	PlaySound_Parms.bNoRepToOwner = bNoRepToOwner;
	PlaySound_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	memcpy(&PlaySound_Parms.SoundLocation,&SoundLocation,0xC);
	PlaySound_Parms.bNoRepToRelevant = bNoRepToRelevant;
	pFnPlaySound->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlaySound,NULL,&PlaySound_Parms,NULL);
	pFnPlaySound->FunctionFlags |= 0x400;
}

struct Engine_GetBaseMost_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AActor* AActor::GetBaseMost()
{
	static UFieldFunc* pFnGetBaseMost = NULL;
	if(!pFnGetBaseMost)
		pFnGetBaseMost = UObject::FindFunction("Function Engine.Actor.GetBaseMost");

	Engine_GetBaseMost_Parms GetBaseMost_Parms;
	pFnGetBaseMost->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBaseMost,NULL,&GetBaseMost_Parms,NULL);
	pFnGetBaseMost->FunctionFlags |= 0x400;
	return GetBaseMost_Parms.ReturnValue;
}

struct Engine_DrawDebugLine_Parms
{
	FVector3                                           LineStart;                                        		// 0x000000 (0x000C)              
	FVector3                                           LineEnd;                                          		// 0x00000C (0x000C)              
	unsigned char                                      R;                                                		// 0x000018 (0x0001)              
	unsigned char                                      G;                                                		// 0x000019 (0x0001)              
	unsigned char                                      B;                                                		// 0x00001A (0x0001)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x00001C (0x0004) [0x00000001] 
};

void AActor::DrawDebugLine(FVector3 LineStart,FVector3 LineEnd,unsigned char R,unsigned char G,unsigned char B,bool bPersistentLines)
{
	static UFieldFunc* pFnDrawDebugLine = NULL;
	if(!pFnDrawDebugLine)
		pFnDrawDebugLine = UObject::FindFunction("Function Engine.Actor.DrawDebugLine");

	Engine_DrawDebugLine_Parms DrawDebugLine_Parms;
	memcpy(&DrawDebugLine_Parms.LineStart,&LineStart,0xC);
	memcpy(&DrawDebugLine_Parms.LineEnd,&LineEnd,0xC);
	DrawDebugLine_Parms.R = R;
	DrawDebugLine_Parms.G = G;
	DrawDebugLine_Parms.B = B;
	DrawDebugLine_Parms.bPersistentLines = bPersistentLines;
	pFnDrawDebugLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawDebugLine,NULL,&DrawDebugLine_Parms,NULL);
	pFnDrawDebugLine->FunctionFlags |= 0x400;
}

struct Engine_DetachComponent_Parms
{
	class UActorComponent*                             ExComponent;                                      		// 0x000000 (0x0004)              
};

void AActor::DetachComponent(class UActorComponent* ExComponent)
{
	static UFieldFunc* pFnDetachComponent = NULL;
	if(!pFnDetachComponent)
		pFnDetachComponent = UObject::FindFunction("Function Engine.Actor.DetachComponent");

	Engine_DetachComponent_Parms DetachComponent_Parms;
	DetachComponent_Parms.ExComponent = ExComponent;
	pFnDetachComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDetachComponent,NULL,&DetachComponent_Parms,NULL);
	pFnDetachComponent->FunctionFlags |= 0x400;
}

struct Engine_StopActorFaceFXAnim_Parms
{
};

void AActor::StopActorFaceFXAnim()
{
	static UFieldFunc* pFnStopActorFaceFXAnim = NULL;
	if(!pFnStopActorFaceFXAnim)
		pFnStopActorFaceFXAnim = UObject::FindFunction("Function Engine.Actor.StopActorFaceFXAnim");

	Engine_StopActorFaceFXAnim_Parms StopActorFaceFXAnim_Parms;
	ProcessEvent(pFnStopActorFaceFXAnim,NULL,&StopActorFaceFXAnim_Parms,NULL);
}

struct Engine_CollisionChanged_Parms
{
};

void AVolume::CollisionChanged()
{
	static UFieldFunc* pFnCollisionChanged = NULL;
	if(!pFnCollisionChanged)
		pFnCollisionChanged = UObject::FindFunction("Function Engine.Volume.CollisionChanged");

	Engine_CollisionChanged_Parms CollisionChanged_Parms;
	ProcessEvent(pFnCollisionChanged,NULL,&CollisionChanged_Parms,NULL);
}

struct Engine_Encompasses_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AVolume::Encompasses(class AActor* Other)
{
	static UFieldFunc* pFnEncompasses = NULL;
	if(!pFnEncompasses)
		pFnEncompasses = UObject::FindFunction("Function Engine.Volume.Encompasses");

	Engine_Encompasses_Parms Encompasses_Parms;
	Encompasses_Parms.Other = Other;
	pFnEncompasses->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEncompasses,NULL,&Encompasses_Parms,NULL);
	pFnEncompasses->FunctionFlags |= 0x400;
	return Encompasses_Parms.ReturnValue;
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
};

void AVolume::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Volume.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_PostBeginPlay_Parms
{
};

void AVolume::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Volume.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AVolume::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.Volume.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AVolume::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.Volume.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_ProcessActorSetVolume_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AVolume::ProcessActorSetVolume(class AActor* Other)
{
	static UFieldFunc* pFnProcessActorSetVolume = NULL;
	if(!pFnProcessActorSetVolume)
		pFnProcessActorSetVolume = UObject::FindFunction("Function Engine.Volume.ProcessActorSetVolume");

	Engine_ProcessActorSetVolume_Parms ProcessActorSetVolume_Parms;
	ProcessActorSetVolume_Parms.Other = Other;
	ProcessEvent(pFnProcessActorSetVolume,NULL,&ProcessActorSetVolume_Parms,NULL);
}

struct Engine_GetLocationStringFor_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString AVolume::GetLocationStringFor(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnGetLocationStringFor = NULL;
	if(!pFnGetLocationStringFor)
		pFnGetLocationStringFor = UObject::FindFunction("Function Engine.Volume.GetLocationStringFor");

	Engine_GetLocationStringFor_Parms GetLocationStringFor_Parms;
	GetLocationStringFor_Parms.PRI = PRI;
	ProcessEvent(pFnGetLocationStringFor,NULL,&GetLocationStringFor_Parms,NULL);
	return GetLocationStringFor_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void ALevelStreamingVolume::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.LevelStreamingVolume.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void APhysicsVolume::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.PhysicsVolume.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

void APhysicsVolume::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.PhysicsVolume.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_PawnEnteredVolume_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
};

void APhysicsVolume::PawnEnteredVolume(class APawn* Other)
{
	static UFieldFunc* pFnPawnEnteredVolume = NULL;
	if(!pFnPawnEnteredVolume)
		pFnPawnEnteredVolume = UObject::FindFunction("Function Engine.PhysicsVolume.PawnEnteredVolume");

	Engine_PawnEnteredVolume_Parms PawnEnteredVolume_Parms;
	PawnEnteredVolume_Parms.Other = Other;
	ProcessEvent(pFnPawnEnteredVolume,NULL,&PawnEnteredVolume_Parms,NULL);
}

struct Engine_ModifyPlayer_Parms
{
	class APawn*                                       PlayerPawn;                                       		// 0x000000 (0x0004)              
};

void APhysicsVolume::ModifyPlayer(class APawn* PlayerPawn)
{
	static UFieldFunc* pFnModifyPlayer = NULL;
	if(!pFnModifyPlayer)
		pFnModifyPlayer = UObject::FindFunction("Function Engine.PhysicsVolume.ModifyPlayer");

	Engine_ModifyPlayer_Parms ModifyPlayer_Parms;
	ModifyPlayer_Parms.PlayerPawn = PlayerPawn;
	ProcessEvent(pFnModifyPlayer,NULL,&ModifyPlayer_Parms,NULL);
}

struct Engine_CausePainTo_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void APhysicsVolume::CausePainTo(class AActor* Other)
{
	static UFieldFunc* pFnCausePainTo = NULL;
	if(!pFnCausePainTo)
		pFnCausePainTo = UObject::FindFunction("Function Engine.PhysicsVolume.CausePainTo");

	Engine_CausePainTo_Parms CausePainTo_Parms;
	CausePainTo_Parms.Other = Other;
	ProcessEvent(pFnCausePainTo,NULL,&CausePainTo_Parms,NULL);
}

struct Engine_GetGravityZ_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APhysicsVolume::GetGravityZ()
{
	static UFieldFunc* pFnGetGravityZ = NULL;
	if(!pFnGetGravityZ)
		pFnGetGravityZ = UObject::FindFunction("Function Engine.PhysicsVolume.GetGravityZ");

	Engine_GetGravityZ_Parms GetGravityZ_Parms;
	pFnGetGravityZ->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGravityZ,NULL,&GetGravityZ_Parms,NULL);
	pFnGetGravityZ->FunctionFlags |= 0x400;
	return GetGravityZ_Parms.ReturnValue;
}

struct Engine_TimerPop_Parms
{
	class AVolumeTimer*                                T;                                                		// 0x000000 (0x0004)              
	//class AActor*                                      A;                                                		// 0x000004 (0x0004)              
};

void APhysicsVolume::TimerPop(class AVolumeTimer* T)
{
	static UFieldFunc* pFnTimerPop = NULL;
	if(!pFnTimerPop)
		pFnTimerPop = UObject::FindFunction("Function Engine.PhysicsVolume.TimerPop");

	Engine_TimerPop_Parms TimerPop_Parms;
	TimerPop_Parms.T = T;
	ProcessEvent(pFnTimerPop,NULL,&TimerPop_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APhysicsVolume::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.PhysicsVolume.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_PawnLeavingVolume_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
};

void APhysicsVolume::PawnLeavingVolume(class APawn* Other)
{
	static UFieldFunc* pFnPawnLeavingVolume = NULL;
	if(!pFnPawnLeavingVolume)
		pFnPawnLeavingVolume = UObject::FindFunction("Function Engine.PhysicsVolume.PawnLeavingVolume");

	Engine_PawnLeavingVolume_Parms PawnLeavingVolume_Parms;
	PawnLeavingVolume_Parms.Other = Other;
	ProcessEvent(pFnPawnLeavingVolume,NULL,&PawnLeavingVolume_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void APhysicsVolume::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.PhysicsVolume.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_ActorEnteredVolume_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void APhysicsVolume::ActorEnteredVolume(class AActor* Other)
{
	static UFieldFunc* pFnActorEnteredVolume = NULL;
	if(!pFnActorEnteredVolume)
		pFnActorEnteredVolume = UObject::FindFunction("Function Engine.PhysicsVolume.ActorEnteredVolume");

	Engine_ActorEnteredVolume_Parms ActorEnteredVolume_Parms;
	ActorEnteredVolume_Parms.Other = Other;
	ProcessEvent(pFnActorEnteredVolume,NULL,&ActorEnteredVolume_Parms,NULL);
}

struct Engine_ActorLeavingVolume_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void APhysicsVolume::ActorLeavingVolume(class AActor* Other)
{
	static UFieldFunc* pFnActorLeavingVolume = NULL;
	if(!pFnActorLeavingVolume)
		pFnActorLeavingVolume = UObject::FindFunction("Function Engine.PhysicsVolume.ActorLeavingVolume");

	Engine_ActorLeavingVolume_Parms ActorLeavingVolume_Parms;
	ActorLeavingVolume_Parms.Other = Other;
	ProcessEvent(pFnActorLeavingVolume,NULL,&ActorLeavingVolume_Parms,NULL);
}

struct Engine_OnSetDamageInstigator_Parms
{
	class USeqAct_SetDamageInstigator*                 Action;                                           		// 0x000000 (0x0004)              
};

void APhysicsVolume::OnSetDamageInstigator(class USeqAct_SetDamageInstigator* Action)
{
	static UFieldFunc* pFnOnSetDamageInstigator = NULL;
	if(!pFnOnSetDamageInstigator)
		pFnOnSetDamageInstigator = UObject::FindFunction("Function Engine.PhysicsVolume.OnSetDamageInstigator");

	Engine_OnSetDamageInstigator_Parms OnSetDamageInstigator_Parms;
	OnSetDamageInstigator_Parms.Action = Action;
	ProcessEvent(pFnOnSetDamageInstigator,NULL,&OnSetDamageInstigator_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void APhysicsVolume::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.PhysicsVolume.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void ADefaultPhysicsVolume::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.DefaultPhysicsVolume.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void APostProcessVolume::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.PostProcessVolume.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void ATriggerVolume::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.TriggerVolume.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_StopsProjectile_Parms
{
	class AProjectile*                                 P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ATriggerVolume::StopsProjectile(class AProjectile* P)
{
	static UFieldFunc* pFnStopsProjectile = NULL;
	if(!pFnStopsProjectile)
		pFnStopsProjectile = UObject::FindFunction("Function Engine.TriggerVolume.StopsProjectile");

	Engine_StopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;
	ProcessEvent(pFnStopsProjectile,NULL,&StopsProjectile_Parms,NULL);
	return StopsProjectile_Parms.ReturnValue;
}

struct Engine_SetViewTarget_Parms
{
	class AActor*                                      NewViewTarget;                                    		// 0x000000 (0x0004)              
	struct FViewTargetTransitionParams                 TransitionParams;                                 		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool ACamera::SetViewTarget(class AActor* NewViewTarget,struct FViewTargetTransitionParams TransitionParams)
{
	static UFieldFunc* pFnSetViewTarget = NULL;
	if(!pFnSetViewTarget)
		pFnSetViewTarget = UObject::FindFunction("Function Engine.Camera.SetViewTarget");

	Engine_SetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy(&SetViewTarget_Parms.TransitionParams,&TransitionParams,0xC);
	pFnSetViewTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetViewTarget,NULL,&SetViewTarget_Parms,NULL);
	pFnSetViewTarget->FunctionFlags |= 0x400;
	return SetViewTarget_Parms.ReturnValue;
}

struct Engine_SetFOV_Parms
{
	float                                              NewFOV;                                           		// 0x000000 (0x0004)              
};

void ACamera::SetFOV(float NewFOV)
{
	static UFieldFunc* pFnSetFOV = NULL;
	if(!pFnSetFOV)
		pFnSetFOV = UObject::FindFunction("Function Engine.Camera.SetFOV");

	Engine_SetFOV_Parms SetFOV_Parms;
	SetFOV_Parms.NewFOV = NewFOV;
	pFnSetFOV->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFOV,NULL,&SetFOV_Parms,NULL);
	pFnSetFOV->FunctionFlags |= 0x400;
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//FVector3                                           EyesLoc;                                          		// 0x00000C (0x000C)              
	//FRotator                                           EyesRot;                                          		// 0x000018 (0x000C)              
	//class UCanvas*                                     Canvas;                                           		// 0x000024 (0x0004)              
};

void ACamera::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Camera.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_SetDesiredColorScale_Parms
{
	FVector3                                           NewColorScale;                                    		// 0x000000 (0x000C)              
	float                                              InterpTime;                                       		// 0x00000C (0x0004)              
};

void ACamera::SetDesiredColorScale(FVector3 NewColorScale,float InterpTime)
{
	static UFieldFunc* pFnSetDesiredColorScale = NULL;
	if(!pFnSetDesiredColorScale)
		pFnSetDesiredColorScale = UObject::FindFunction("Function Engine.Camera.SetDesiredColorScale");

	Engine_SetDesiredColorScale_Parms SetDesiredColorScale_Parms;
	memcpy(&SetDesiredColorScale_Parms.NewColorScale,&NewColorScale,0xC);
	SetDesiredColorScale_Parms.InterpTime = InterpTime;
	pFnSetDesiredColorScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDesiredColorScale,NULL,&SetDesiredColorScale_Parms,NULL);
	pFnSetDesiredColorScale->FunctionFlags |= 0x400;
}

struct Engine_GetViewTarget_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AActor* ACamera::GetViewTarget()
{
	static UFieldFunc* pFnGetViewTarget = NULL;
	if(!pFnGetViewTarget)
		pFnGetViewTarget = UObject::FindFunction("Function Engine.Camera.GetViewTarget");

	Engine_GetViewTarget_Parms GetViewTarget_Parms;
	pFnGetViewTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewTarget,NULL,&GetViewTarget_Parms,NULL);
	pFnGetViewTarget->FunctionFlags |= 0x400;
	return GetViewTarget_Parms.ReturnValue;
}

struct Engine_ApplyCameraModifiers_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	struct FTPOV                                       OutPOV;                                           		// 0x000004 (0x001C)              
};

void ACamera::ApplyCameraModifiers(float DeltaTime,struct FTPOV* OutPOV)
{
	static UFieldFunc* pFnApplyCameraModifiers = NULL;
	if(!pFnApplyCameraModifiers)
		pFnApplyCameraModifiers = UObject::FindFunction("Function Engine.Camera.ApplyCameraModifiers");

	Engine_ApplyCameraModifiers_Parms ApplyCameraModifiers_Parms;
	ApplyCameraModifiers_Parms.DeltaTime = DeltaTime;
	pFnApplyCameraModifiers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnApplyCameraModifiers,NULL,&ApplyCameraModifiers_Parms,NULL);
	pFnApplyCameraModifiers->FunctionFlags |= 0x400;
	if(OutPOV)
		memcpy(OutPOV,&ApplyCameraModifiers_Parms.OutPOV,0x1C);
}

struct Engine_UpdateCamera_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void ACamera::UpdateCamera(float DeltaTime)
{
	static UFieldFunc* pFnUpdateCamera = NULL;
	if(!pFnUpdateCamera)
		pFnUpdateCamera = UObject::FindFunction("Function Engine.Camera.UpdateCamera");

	Engine_UpdateCamera_Parms UpdateCamera_Parms;
	UpdateCamera_Parms.DeltaTime = DeltaTime;
	pFnUpdateCamera->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateCamera,NULL,&UpdateCamera_Parms,NULL);
	pFnUpdateCamera->FunctionFlags |= 0x400;
}

struct Engine_GetFOVAngle_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float ACamera::GetFOVAngle()
{
	static UFieldFunc* pFnGetFOVAngle = NULL;
	if(!pFnGetFOVAngle)
		pFnGetFOVAngle = UObject::FindFunction("Function Engine.Camera.GetFOVAngle");

	Engine_GetFOVAngle_Parms GetFOVAngle_Parms;
	pFnGetFOVAngle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFOVAngle,NULL,&GetFOVAngle_Parms,NULL);
	pFnGetFOVAngle->FunctionFlags |= 0x400;
	return GetFOVAngle_Parms.ReturnValue;
}

struct Engine_StopCameraAnim_Parms
{
	class UCameraAnimInst*                             AnimInst;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bImmediate : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
};

void AAnimatedCamera::StopCameraAnim(class UCameraAnimInst* AnimInst,bool bImmediate)
{
	static UFieldFunc* pFnStopCameraAnim = NULL;
	if(!pFnStopCameraAnim)
		pFnStopCameraAnim = UObject::FindFunction("Function Engine.AnimatedCamera.StopCameraAnim");

	Engine_StopCameraAnim_Parms StopCameraAnim_Parms;
	StopCameraAnim_Parms.AnimInst = AnimInst;
	StopCameraAnim_Parms.bImmediate = bImmediate;
	pFnStopCameraAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopCameraAnim,NULL,&StopCameraAnim_Parms,NULL);
	pFnStopCameraAnim->FunctionFlags |= 0x400;
}

struct Engine_PlayCameraAnim_Parms
{
	class UCameraAnim*                                 Anim;                                             		// 0x000000 (0x0004)              
	float                                              Rate;                                             		// 0x000004 (0x0004)              
	float                                              Scale;                                            		// 0x000008 (0x0004)              
	float                                              BlendInTime;                                      		// 0x00000C (0x0004)              
	float                                              BlendOutTime;                                     		// 0x000010 (0x0004)              
	unsigned long                                      bLoop : 1;                                        		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bRandomStartTime : 1;                             		// 0x000018 (0x0004) [0x00000001] 
	float                                              Duration;                                         		// 0x00001C (0x0004)              
	class UCameraAnimInst*                             ReturnValue;                                      		// 0x000020 (0x0004)              
};

class UCameraAnimInst* AAnimatedCamera::PlayCameraAnim(class UCameraAnim* Anim,float Rate,float Scale,float BlendInTime,float BlendOutTime,bool bLoop,bool bRandomStartTime,float Duration)
{
	static UFieldFunc* pFnPlayCameraAnim = NULL;
	if(!pFnPlayCameraAnim)
		pFnPlayCameraAnim = UObject::FindFunction("Function Engine.AnimatedCamera.PlayCameraAnim");

	Engine_PlayCameraAnim_Parms PlayCameraAnim_Parms;
	PlayCameraAnim_Parms.Anim = Anim;
	PlayCameraAnim_Parms.Rate = Rate;
	PlayCameraAnim_Parms.Scale = Scale;
	PlayCameraAnim_Parms.BlendInTime = BlendInTime;
	PlayCameraAnim_Parms.BlendOutTime = BlendOutTime;
	PlayCameraAnim_Parms.bLoop = bLoop;
	PlayCameraAnim_Parms.bRandomStartTime = bRandomStartTime;
	PlayCameraAnim_Parms.Duration = Duration;
	pFnPlayCameraAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayCameraAnim,NULL,&PlayCameraAnim_Parms,NULL);
	pFnPlayCameraAnim->FunctionFlags |= 0x400;
	return PlayCameraAnim_Parms.ReturnValue;
}

struct Engine_Destroyed_Parms
{
};

void AAnimatedCamera::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.AnimatedCamera.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_ApplyCameraModifiersNative_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	struct FTPOV                                       OutPOV;                                           		// 0x000004 (0x001C)              
};

void AAnimatedCamera::ApplyCameraModifiersNative(float DeltaTime,struct FTPOV* OutPOV)
{
	static UFieldFunc* pFnApplyCameraModifiersNative = NULL;
	if(!pFnApplyCameraModifiersNative)
		pFnApplyCameraModifiersNative = UObject::FindFunction("Function Engine.AnimatedCamera.ApplyCameraModifiersNative");

	Engine_ApplyCameraModifiersNative_Parms ApplyCameraModifiersNative_Parms;
	ApplyCameraModifiersNative_Parms.DeltaTime = DeltaTime;
	pFnApplyCameraModifiersNative->FunctionFlags |= ~0x400;
	ProcessEvent(pFnApplyCameraModifiersNative,NULL,&ApplyCameraModifiersNative_Parms,NULL);
	pFnApplyCameraModifiersNative->FunctionFlags |= 0x400;
	if(OutPOV)
		memcpy(OutPOV,&ApplyCameraModifiersNative_Parms.OutPOV,0x1C);
}

struct Engine_StopAllCameraAnimsByType_Parms
{
	class UCameraAnim*                                 Anim;                                             		// 0x000000 (0x0004)              
	unsigned long                                      bImmediate : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
};

void AAnimatedCamera::StopAllCameraAnimsByType(class UCameraAnim* Anim,bool bImmediate)
{
	static UFieldFunc* pFnStopAllCameraAnimsByType = NULL;
	if(!pFnStopAllCameraAnimsByType)
		pFnStopAllCameraAnimsByType = UObject::FindFunction("Function Engine.AnimatedCamera.StopAllCameraAnimsByType");

	Engine_StopAllCameraAnimsByType_Parms StopAllCameraAnimsByType_Parms;
	StopAllCameraAnimsByType_Parms.Anim = Anim;
	StopAllCameraAnimsByType_Parms.bImmediate = bImmediate;
	pFnStopAllCameraAnimsByType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopAllCameraAnimsByType,NULL,&StopAllCameraAnimsByType_Parms,NULL);
	pFnStopAllCameraAnimsByType->FunctionFlags |= 0x400;
}

struct Engine_PostBeginPlay_Parms
{
	//int                                                Idx;                                              		// 0x000000 (0x0004)              
};

void AAnimatedCamera::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.AnimatedCamera.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_ApplyCameraModifiers_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	struct FTPOV                                       OutPOV;                                           		// 0x000004 (0x001C)              
};

void AAnimatedCamera::ApplyCameraModifiers(float DeltaTime,struct FTPOV* OutPOV)
{
	static UFieldFunc* pFnApplyCameraModifiers = NULL;
	if(!pFnApplyCameraModifiers)
		pFnApplyCameraModifiers = UObject::FindFunction("Function Engine.AnimatedCamera.ApplyCameraModifiers");

	Engine_ApplyCameraModifiers_Parms ApplyCameraModifiers_Parms;
	ApplyCameraModifiers_Parms.DeltaTime = DeltaTime;
	pFnApplyCameraModifiers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnApplyCameraModifiers,NULL,&ApplyCameraModifiers_Parms,NULL);
	pFnApplyCameraModifiers->FunctionFlags |= 0x400;
	if(OutPOV)
		memcpy(OutPOV,&ApplyCameraModifiers_Parms.OutPOV,0x1C);
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//float                                              XL;                                               		// 0x00000C (0x0004)              
	//class UCanvas*                                     Canvas;                                           		// 0x000010 (0x0004)              
};

void ACameraActor::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.CameraActor.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       sVariableName;                                    		// 0x000000 (0x0008)              
};

void AcEngineClientServerDebugManager::ReplicatedEvent(struct FName sVariableName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.cEngineClientServerDebugManager.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.sVariableName,&sVariableName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_GetPlayerViewPoint_Parms
{
	FVector3                                           out_Location;                                     		// 0x000000 (0x000C)              
	FRotator                                           out_Rotation;                                     		// 0x00000C (0x000C)              
};

void AController::GetPlayerViewPoint(FVector3* out_Location,FRotator* out_Rotation)
{
	static UFieldFunc* pFnGetPlayerViewPoint = NULL;
	if(!pFnGetPlayerViewPoint)
		pFnGetPlayerViewPoint = UObject::FindFunction("Function Engine.Controller.GetPlayerViewPoint");

	Engine_GetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;
	pFnGetPlayerViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerViewPoint,NULL,&GetPlayerViewPoint_Parms,NULL);
	pFnGetPlayerViewPoint->FunctionFlags |= 0x400;
	if(out_Location)
		memcpy(out_Location,&GetPlayerViewPoint_Parms.out_Location,0xC);
	if(out_Rotation)
		memcpy(out_Rotation,&GetPlayerViewPoint_Parms.out_Rotation,0xC);
}

struct Engine_ClientSetLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
	FRotator                                           NewRotation;                                      		// 0x00000C (0x000C)              
};

void AController::ClientSetLocation(FVector3 NewLocation,FRotator NewRotation)
{
	static UFieldFunc* pFnClientSetLocation = NULL;
	if(!pFnClientSetLocation)
		pFnClientSetLocation = UObject::FindFunction("Function Engine.Controller.ClientSetLocation");

	Engine_ClientSetLocation_Parms ClientSetLocation_Parms;
	memcpy(&ClientSetLocation_Parms.NewLocation,&NewLocation,0xC);
	memcpy(&ClientSetLocation_Parms.NewRotation,&NewRotation,0xC);
	ProcessEvent(pFnClientSetLocation,NULL,&ClientSetLocation_Parms,NULL);
}

struct Engine_CanSeeByPoints_Parms
{
	FVector3                                           ViewLocation;                                     		// 0x000000 (0x000C)              
	FVector3                                           TestLocation;                                     		// 0x00000C (0x000C)              
	FRotator                                           ViewRotation;                                     		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool AController::CanSeeByPoints(FVector3 ViewLocation,FVector3 TestLocation,FRotator ViewRotation)
{
	static UFieldFunc* pFnCanSeeByPoints = NULL;
	if(!pFnCanSeeByPoints)
		pFnCanSeeByPoints = UObject::FindFunction("Function Engine.Controller.CanSeeByPoints");

	Engine_CanSeeByPoints_Parms CanSeeByPoints_Parms;
	memcpy(&CanSeeByPoints_Parms.ViewLocation,&ViewLocation,0xC);
	memcpy(&CanSeeByPoints_Parms.TestLocation,&TestLocation,0xC);
	memcpy(&CanSeeByPoints_Parms.ViewRotation,&ViewRotation,0xC);

	unsigned short NativeIndex = pFnCanSeeByPoints->iNative;
	pFnCanSeeByPoints->iNative = 0;
	pFnCanSeeByPoints->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanSeeByPoints,NULL,&CanSeeByPoints_Parms,NULL);
	pFnCanSeeByPoints->FunctionFlags |= 0x400;
	pFnCanSeeByPoints->iNative = NativeIndex;
	return CanSeeByPoints_Parms.ReturnValue;
}

struct Engine_ClientSetRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
	unsigned long                                      bResetCamera : 1;                                 		// 0x00000C (0x0004) [0x00000001] 
};

void AController::ClientSetRotation(FRotator NewRotation,bool bResetCamera)
{
	static UFieldFunc* pFnClientSetRotation = NULL;
	if(!pFnClientSetRotation)
		pFnClientSetRotation = UObject::FindFunction("Function Engine.Controller.ClientSetRotation");

	Engine_ClientSetRotation_Parms ClientSetRotation_Parms;
	memcpy(&ClientSetRotation_Parms.NewRotation,&NewRotation,0xC);
	ClientSetRotation_Parms.bResetCamera = bResetCamera;
	ProcessEvent(pFnClientSetRotation,NULL,&ClientSetRotation_Parms,NULL);
}

struct Engine_ReceiveProjectileWarning_Parms
{
	class AProjectile*                                 Proj;                                             		// 0x000000 (0x0004)              
};

void AController::ReceiveProjectileWarning(class AProjectile* Proj)
{
	static UFieldFunc* pFnReceiveProjectileWarning = NULL;
	if(!pFnReceiveProjectileWarning)
		pFnReceiveProjectileWarning = UObject::FindFunction("Function Engine.Controller.ReceiveProjectileWarning");

	Engine_ReceiveProjectileWarning_Parms ReceiveProjectileWarning_Parms;
	ReceiveProjectileWarning_Parms.Proj = Proj;
	ProcessEvent(pFnReceiveProjectileWarning,NULL,&ReceiveProjectileWarning_Parms,NULL);
}

struct Engine_RouteCache_InsertItem_Parms
{
	class ANavigationPoint*                            Nav;                                              		// 0x000000 (0x0004)              
	int                                                Idx;                                              		// 0x000004 (0x0004)              
};

void AController::RouteCache_InsertItem(class ANavigationPoint* Nav,int Idx)
{
	static UFieldFunc* pFnRouteCache_InsertItem = NULL;
	if(!pFnRouteCache_InsertItem)
		pFnRouteCache_InsertItem = UObject::FindFunction("Function Engine.Controller.RouteCache_InsertItem");

	Engine_RouteCache_InsertItem_Parms RouteCache_InsertItem_Parms;
	RouteCache_InsertItem_Parms.Nav = Nav;
	RouteCache_InsertItem_Parms.Idx = Idx;
	pFnRouteCache_InsertItem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRouteCache_InsertItem,NULL,&RouteCache_InsertItem_Parms,NULL);
	pFnRouteCache_InsertItem->FunctionFlags |= 0x400;
}

struct Engine_SeeMonster_Parms
{
	class APawn*                                       Seen;                                             		// 0x000000 (0x0004)              
};

void AController::SeeMonster(class APawn* Seen)
{
	static UFieldFunc* pFnSeeMonster = NULL;
	if(!pFnSeeMonster)
		pFnSeeMonster = UObject::FindFunction("Function Engine.Controller.SeeMonster");

	Engine_SeeMonster_Parms SeeMonster_Parms;
	SeeMonster_Parms.Seen = Seen;
	ProcessEvent(pFnSeeMonster,NULL,&SeeMonster_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.Controller.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_RouteCache_RemoveIndex_Parms
{
	int                                                InIndex;                                          		// 0x000000 (0x0004)              
	int                                                Count;                                            		// 0x000004 (0x0004)              
};

void AController::RouteCache_RemoveIndex(int InIndex,int Count)
{
	static UFieldFunc* pFnRouteCache_RemoveIndex = NULL;
	if(!pFnRouteCache_RemoveIndex)
		pFnRouteCache_RemoveIndex = UObject::FindFunction("Function Engine.Controller.RouteCache_RemoveIndex");

	Engine_RouteCache_RemoveIndex_Parms RouteCache_RemoveIndex_Parms;
	RouteCache_RemoveIndex_Parms.InIndex = InIndex;
	RouteCache_RemoveIndex_Parms.Count = Count;
	pFnRouteCache_RemoveIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRouteCache_RemoveIndex,NULL,&RouteCache_RemoveIndex_Parms,NULL);
	pFnRouteCache_RemoveIndex->FunctionFlags |= 0x400;
}

struct Engine_GetActorEyesViewPoint_Parms
{
	FVector3                                           out_Location;                                     		// 0x000000 (0x000C)              
	FRotator                                           out_Rotation;                                     		// 0x00000C (0x000C)              
};

void AController::GetActorEyesViewPoint(FVector3* out_Location,FRotator* out_Rotation)
{
	static UFieldFunc* pFnGetActorEyesViewPoint = NULL;
	if(!pFnGetActorEyesViewPoint)
		pFnGetActorEyesViewPoint = UObject::FindFunction("Function Engine.Controller.GetActorEyesViewPoint");

	Engine_GetActorEyesViewPoint_Parms GetActorEyesViewPoint_Parms;
	pFnGetActorEyesViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActorEyesViewPoint,NULL,&GetActorEyesViewPoint_Parms,NULL);
	pFnGetActorEyesViewPoint->FunctionFlags |= 0x400;
	if(out_Location)
		memcpy(out_Location,&GetActorEyesViewPoint_Parms.out_Location,0xC);
	if(out_Rotation)
		memcpy(out_Rotation,&GetActorEyesViewPoint_Parms.out_Rotation,0xC);
}

struct Engine_NotifyKilled_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 Killed;                                           		// 0x000004 (0x0004)              
	class APawn*                                       KilledPawn;                                       		// 0x000008 (0x0004)              
};

void AController::NotifyKilled(class AController* Killer,class AController* Killed,class APawn* KilledPawn)
{
	static UFieldFunc* pFnNotifyKilled = NULL;
	if(!pFnNotifyKilled)
		pFnNotifyKilled = UObject::FindFunction("Function Engine.Controller.NotifyKilled");

	Engine_NotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.Killed = Killed;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	ProcessEvent(pFnNotifyKilled,NULL,&NotifyKilled_Parms,NULL);
}

struct Engine_RoundHasEnded_Parms
{
	class AActor*                                      EndRoundFocus;                                    		// 0x000000 (0x0004)              
};

void AController::RoundHasEnded(class AActor* EndRoundFocus)
{
	static UFieldFunc* pFnRoundHasEnded = NULL;
	if(!pFnRoundHasEnded)
		pFnRoundHasEnded = UObject::FindFunction("Function Engine.Controller.RoundHasEnded");

	Engine_RoundHasEnded_Parms RoundHasEnded_Parms;
	RoundHasEnded_Parms.EndRoundFocus = EndRoundFocus;
	ProcessEvent(pFnRoundHasEnded,NULL,&RoundHasEnded_Parms,NULL);
}

struct Engine_NotifyJumpApex_Parms
{
};

void AController::NotifyJumpApex()
{
	static UFieldFunc* pFnNotifyJumpApex = NULL;
	if(!pFnNotifyJumpApex)
		pFnNotifyJumpApex = UObject::FindFunction("Function Engine.Controller.NotifyJumpApex");

	Engine_NotifyJumpApex_Parms NotifyJumpApex_Parms;
	ProcessEvent(pFnNotifyJumpApex,NULL,&NotifyJumpApex_Parms,NULL);
}

struct Engine_WaitForLanding_Parms
{
	float                                              waitDuration;                                     		// 0x000000 (0x0004)              
};

void AController::WaitForLanding(float waitDuration)
{
	static UFieldFunc* pFnWaitForLanding = NULL;
	if(!pFnWaitForLanding)
		pFnWaitForLanding = UObject::FindFunction("Function Engine.Controller.WaitForLanding");

	Engine_WaitForLanding_Parms WaitForLanding_Parms;
	WaitForLanding_Parms.waitDuration = waitDuration;

	unsigned short NativeIndex = pFnWaitForLanding->iNative;
	pFnWaitForLanding->iNative = 0;
	pFnWaitForLanding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnWaitForLanding,NULL,&WaitForLanding_Parms,NULL);
	pFnWaitForLanding->FunctionFlags |= 0x400;
	pFnWaitForLanding->iNative = NativeIndex;
}

struct Engine_GetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AController::GetHumanReadableName()
{
	static UFieldFunc* pFnGetHumanReadableName = NULL;
	if(!pFnGetHumanReadableName)
		pFnGetHumanReadableName = UObject::FindFunction("Function Engine.Controller.GetHumanReadableName");

	Engine_GetHumanReadableName_Parms GetHumanReadableName_Parms;
	ProcessEvent(pFnGetHumanReadableName,NULL,&GetHumanReadableName_Parms,NULL);
	return GetHumanReadableName_Parms.ReturnValue;
}

struct Engine_IsDead_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AController::IsDead()
{
	static UFieldFunc* pFnIsDead = NULL;
	if(!pFnIsDead)
		pFnIsDead = UObject::FindFunction("Function Engine.Controller.IsDead");

	Engine_IsDead_Parms IsDead_Parms;
	ProcessEvent(pFnIsDead,NULL,&IsDead_Parms,NULL);
	return IsDead_Parms.ReturnValue;
}

struct Engine_RetCameraLocationAndReticuleDirection_Parms
{
	FVector3                                           CameraLocationOut;                                		// 0x000000 (0x000C)              
	FVector3                                           ReticuleDirectionOut;                             		// 0x00000C (0x000C)              
};

void AController::RetCameraLocationAndReticuleDirection(FVector3* CameraLocationOut,FVector3* ReticuleDirectionOut)
{
	static UFieldFunc* pFnRetCameraLocationAndReticuleDirection = NULL;
	if(!pFnRetCameraLocationAndReticuleDirection)
		pFnRetCameraLocationAndReticuleDirection = UObject::FindFunction("Function Engine.Controller.RetCameraLocationAndReticuleDirection");

	Engine_RetCameraLocationAndReticuleDirection_Parms RetCameraLocationAndReticuleDirection_Parms;
	pFnRetCameraLocationAndReticuleDirection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRetCameraLocationAndReticuleDirection,NULL,&RetCameraLocationAndReticuleDirection_Parms,NULL);
	pFnRetCameraLocationAndReticuleDirection->FunctionFlags |= 0x400;
	if(CameraLocationOut)
		memcpy(CameraLocationOut,&RetCameraLocationAndReticuleDirection_Parms.CameraLocationOut,0xC);
	if(ReticuleDirectionOut)
		memcpy(ReticuleDirectionOut,&RetCameraLocationAndReticuleDirection_Parms.ReticuleDirectionOut,0xC);
}

struct Engine_MoverFinished_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AController::MoverFinished()
{
	static UFieldFunc* pFnMoverFinished = NULL;
	if(!pFnMoverFinished)
		pFnMoverFinished = UObject::FindFunction("Function Engine.Controller.MoverFinished");

	Engine_MoverFinished_Parms MoverFinished_Parms;
	ProcessEvent(pFnMoverFinished,NULL,&MoverFinished_Parms,NULL);
	return MoverFinished_Parms.ReturnValue;
}

struct Engine_PickTarget_Parms
{
	class UClass*                                      TargetClass;                                      		// 0x000000 (0x0004)              
	float                                              bestAim;                                          		// 0x000004 (0x0004)              
	float                                              bestDist;                                         		// 0x000008 (0x0004)              
	FVector3                                           FireDir;                                          		// 0x00000C (0x000C)              
	FVector3                                           projStart;                                        		// 0x000018 (0x000C)              
	float                                              MaxRange;                                         		// 0x000024 (0x0004)              
	class APawn*                                       ReturnValue;                                      		// 0x000028 (0x0004)              
};

class APawn* AController::PickTarget(class UClass* TargetClass,float* bestAim,float* bestDist,FVector3 FireDir,FVector3 projStart,float MaxRange)
{
	static UFieldFunc* pFnPickTarget = NULL;
	if(!pFnPickTarget)
		pFnPickTarget = UObject::FindFunction("Function Engine.Controller.PickTarget");

	Engine_PickTarget_Parms PickTarget_Parms;
	PickTarget_Parms.TargetClass = TargetClass;
	memcpy(&PickTarget_Parms.FireDir,&FireDir,0xC);
	memcpy(&PickTarget_Parms.projStart,&projStart,0xC);
	PickTarget_Parms.MaxRange = MaxRange;

	unsigned short NativeIndex = pFnPickTarget->iNative;
	pFnPickTarget->iNative = 0;
	pFnPickTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPickTarget,NULL,&PickTarget_Parms,NULL);
	pFnPickTarget->FunctionFlags |= 0x400;
	pFnPickTarget->iNative = NativeIndex;
	if(bestAim)
		*bestAim = PickTarget_Parms.bestAim;
	if(bestDist)
		*bestDist = PickTarget_Parms.bestDist;
	return PickTarget_Parms.ReturnValue;
}

struct Engine_MoveToward_Parms
{
	class AActor*                                      NewTarget;                                        		// 0x000000 (0x0004)              
	class AActor*                                      ViewFocus;                                        		// 0x000004 (0x0004)              
	float                                              DestinationOffset;                                		// 0x000008 (0x0004)              
	unsigned long                                      bUseStrafing : 1;                                 		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bShouldWalk : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

void AController::MoveToward(class AActor* NewTarget,class AActor* ViewFocus,float DestinationOffset,bool bUseStrafing,bool bShouldWalk)
{
	static UFieldFunc* pFnMoveToward = NULL;
	if(!pFnMoveToward)
		pFnMoveToward = UObject::FindFunction("Function Engine.Controller.MoveToward");

	Engine_MoveToward_Parms MoveToward_Parms;
	MoveToward_Parms.NewTarget = NewTarget;
	MoveToward_Parms.ViewFocus = ViewFocus;
	MoveToward_Parms.DestinationOffset = DestinationOffset;
	MoveToward_Parms.bUseStrafing = bUseStrafing;
	MoveToward_Parms.bShouldWalk = bShouldWalk;

	unsigned short NativeIndex = pFnMoveToward->iNative;
	pFnMoveToward->iNative = 0;
	pFnMoveToward->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMoveToward,NULL,&MoveToward_Parms,NULL);
	pFnMoveToward->FunctionFlags |= 0x400;
	pFnMoveToward->iNative = NativeIndex;
}

struct Engine_StopFiring_Parms
{
};

void AController::StopFiring()
{
	static UFieldFunc* pFnStopFiring = NULL;
	if(!pFnStopFiring)
		pFnStopFiring = UObject::FindFunction("Function Engine.Controller.StopFiring");

	Engine_StopFiring_Parms StopFiring_Parms;
	ProcessEvent(pFnStopFiring,NULL,&StopFiring_Parms,NULL);
}

struct Engine_CurrentLevelUnloaded_Parms
{
};

void AController::CurrentLevelUnloaded()
{
	static UFieldFunc* pFnCurrentLevelUnloaded = NULL;
	if(!pFnCurrentLevelUnloaded)
		pFnCurrentLevelUnloaded = UObject::FindFunction("Function Engine.Controller.CurrentLevelUnloaded");

	Engine_CurrentLevelUnloaded_Parms CurrentLevelUnloaded_Parms;
	ProcessEvent(pFnCurrentLevelUnloaded,NULL,&CurrentLevelUnloaded_Parms,NULL);
}

struct Engine_StopLatentExecution_Parms
{
};

void AController::StopLatentExecution()
{
	static UFieldFunc* pFnStopLatentExecution = NULL;
	if(!pFnStopLatentExecution)
		pFnStopLatentExecution = UObject::FindFunction("Function Engine.Controller.StopLatentExecution");

	Engine_StopLatentExecution_Parms StopLatentExecution_Parms;
	pFnStopLatentExecution->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopLatentExecution,NULL,&StopLatentExecution_Parms,NULL);
	pFnStopLatentExecution->FunctionFlags |= 0x400;
}

struct Engine_PointReachable_Parms
{
	FVector3                                           aPoint;                                           		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AController::PointReachable(FVector3 aPoint)
{
	static UFieldFunc* pFnPointReachable = NULL;
	if(!pFnPointReachable)
		pFnPointReachable = UObject::FindFunction("Function Engine.Controller.PointReachable");

	Engine_PointReachable_Parms PointReachable_Parms;
	memcpy(&PointReachable_Parms.aPoint,&aPoint,0xC);

	unsigned short NativeIndex = pFnPointReachable->iNative;
	pFnPointReachable->iNative = 0;
	pFnPointReachable->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPointReachable,NULL,&PointReachable_Parms,NULL);
	pFnPointReachable->FunctionFlags |= 0x400;
	pFnPointReachable->iNative = NativeIndex;
	return PointReachable_Parms.ReturnValue;
}

struct Engine_NotifyCoverClaimViolation_Parms
{
	class AController*                                 NewClaim;                                         		// 0x000000 (0x0004)              
	class ACoverLink*                                  Link;                                             		// 0x000004 (0x0004)              
	int                                                SlotIdx;                                          		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AController::NotifyCoverClaimViolation(class AController* NewClaim,class ACoverLink* Link,int SlotIdx)
{
	static UFieldFunc* pFnNotifyCoverClaimViolation = NULL;
	if(!pFnNotifyCoverClaimViolation)
		pFnNotifyCoverClaimViolation = UObject::FindFunction("Function Engine.Controller.NotifyCoverClaimViolation");

	Engine_NotifyCoverClaimViolation_Parms NotifyCoverClaimViolation_Parms;
	NotifyCoverClaimViolation_Parms.NewClaim = NewClaim;
	NotifyCoverClaimViolation_Parms.Link = Link;
	NotifyCoverClaimViolation_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnNotifyCoverClaimViolation,NULL,&NotifyCoverClaimViolation_Parms,NULL);
	return NotifyCoverClaimViolation_Parms.ReturnValue;
}

struct Engine_GetKillerController_Parms
{
	class AController*                                 ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AController* AController::GetKillerController()
{
	static UFieldFunc* pFnGetKillerController = NULL;
	if(!pFnGetKillerController)
		pFnGetKillerController = UObject::FindFunction("Function Engine.Controller.GetKillerController");

	Engine_GetKillerController_Parms GetKillerController_Parms;
	ProcessEvent(pFnGetKillerController,NULL,&GetKillerController_Parms,NULL);
	return GetKillerController_Parms.ReturnValue;
}

struct Engine_EnemyNotVisible_Parms
{
};

void AController::EnemyNotVisible()
{
	static UFieldFunc* pFnEnemyNotVisible = NULL;
	if(!pFnEnemyNotVisible)
		pFnEnemyNotVisible = UObject::FindFunction("Function Engine.Controller.EnemyNotVisible");

	Engine_EnemyNotVisible_Parms EnemyNotVisible_Parms;
	ProcessEvent(pFnEnemyNotVisible,NULL,&EnemyNotVisible_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AController::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.Controller.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//class UCanvas*                                     Canvas;                                           		// 0x00000C (0x0004)              
};

void AController::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Controller.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_ServerGivePawn_Parms
{
};

void AController::ServerGivePawn()
{
	static UFieldFunc* pFnServerGivePawn = NULL;
	if(!pFnServerGivePawn)
		pFnServerGivePawn = UObject::FindFunction("Function Engine.Controller.ServerGivePawn");

	Engine_ServerGivePawn_Parms ServerGivePawn_Parms;
	ProcessEvent(pFnServerGivePawn,NULL,&ServerGivePawn_Parms,NULL);
}

struct Engine_FindPathTo_Parms
{
	FVector3                                           aPoint;                                           		// 0x000000 (0x000C)              
	int                                                MaxPathLength;                                    		// 0x00000C (0x0004)              
	unsigned long                                      bReturnPartial : 1;                               		// 0x000010 (0x0004) [0x00000001] 
	class AActor*                                      ReturnValue;                                      		// 0x000014 (0x0004)              
};

class AActor* AController::FindPathTo(FVector3 aPoint,int MaxPathLength,bool bReturnPartial)
{
	static UFieldFunc* pFnFindPathTo = NULL;
	if(!pFnFindPathTo)
		pFnFindPathTo = UObject::FindFunction("Function Engine.Controller.FindPathTo");

	Engine_FindPathTo_Parms FindPathTo_Parms;
	memcpy(&FindPathTo_Parms.aPoint,&aPoint,0xC);
	FindPathTo_Parms.MaxPathLength = MaxPathLength;
	FindPathTo_Parms.bReturnPartial = bReturnPartial;

	unsigned short NativeIndex = pFnFindPathTo->iNative;
	pFnFindPathTo->iNative = 0;
	pFnFindPathTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindPathTo,NULL,&FindPathTo_Parms,NULL);
	pFnFindPathTo->FunctionFlags |= 0x400;
	pFnFindPathTo->iNative = NativeIndex;
	return FindPathTo_Parms.ReturnValue;
}

struct Engine_RouteCache_AddItem_Parms
{
	class ANavigationPoint*                            Nav;                                              		// 0x000000 (0x0004)              
};

void AController::RouteCache_AddItem(class ANavigationPoint* Nav)
{
	static UFieldFunc* pFnRouteCache_AddItem = NULL;
	if(!pFnRouteCache_AddItem)
		pFnRouteCache_AddItem = UObject::FindFunction("Function Engine.Controller.RouteCache_AddItem");

	Engine_RouteCache_AddItem_Parms RouteCache_AddItem_Parms;
	RouteCache_AddItem_Parms.Nav = Nav;
	pFnRouteCache_AddItem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRouteCache_AddItem,NULL,&RouteCache_AddItem_Parms,NULL);
	pFnRouteCache_AddItem->FunctionFlags |= 0x400;
}

struct Engine_WarnProjExplode_Parms
{
	class AProjectile*                                 Proj;                                             		// 0x000000 (0x0004)              
};

void AController::WarnProjExplode(class AProjectile* Proj)
{
	static UFieldFunc* pFnWarnProjExplode = NULL;
	if(!pFnWarnProjExplode)
		pFnWarnProjExplode = UObject::FindFunction("Function Engine.Controller.WarnProjExplode");

	Engine_WarnProjExplode_Parms WarnProjExplode_Parms;
	WarnProjExplode_Parms.Proj = Proj;
	ProcessEvent(pFnWarnProjExplode,NULL,&WarnProjExplode_Parms,NULL);
}

struct Engine_ActorReachable_Parms
{
	class AActor*                                      anActor;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::ActorReachable(class AActor* anActor)
{
	static UFieldFunc* pFnActorReachable = NULL;
	if(!pFnActorReachable)
		pFnActorReachable = UObject::FindFunction("Function Engine.Controller.ActorReachable");

	Engine_ActorReachable_Parms ActorReachable_Parms;
	ActorReachable_Parms.anActor = anActor;

	unsigned short NativeIndex = pFnActorReachable->iNative;
	pFnActorReachable->iNative = 0;
	pFnActorReachable->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActorReachable,NULL,&ActorReachable_Parms,NULL);
	pFnActorReachable->FunctionFlags |= 0x400;
	pFnActorReachable->iNative = NativeIndex;
	return ActorReachable_Parms.ReturnValue;
}

struct Engine_LongFall_Parms
{
};

void AController::LongFall()
{
	static UFieldFunc* pFnLongFall = NULL;
	if(!pFnLongFall)
		pFnLongFall = UObject::FindFunction("Function Engine.Controller.LongFall");

	Engine_LongFall_Parms LongFall_Parms;
	ProcessEvent(pFnLongFall,NULL,&LongFall_Parms,NULL);
}

struct Engine_BeyondFogDistance_Parms
{
	FVector3                                           ViewPoint;                                        		// 0x000000 (0x000C)              
	FVector3                                           OtherPoint;                                       		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AController::BeyondFogDistance(FVector3 ViewPoint,FVector3 OtherPoint)
{
	static UFieldFunc* pFnBeyondFogDistance = NULL;
	if(!pFnBeyondFogDistance)
		pFnBeyondFogDistance = UObject::FindFunction("Function Engine.Controller.BeyondFogDistance");

	Engine_BeyondFogDistance_Parms BeyondFogDistance_Parms;
	memcpy(&BeyondFogDistance_Parms.ViewPoint,&ViewPoint,0xC);
	memcpy(&BeyondFogDistance_Parms.OtherPoint,&OtherPoint,0xC);
	pFnBeyondFogDistance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBeyondFogDistance,NULL,&BeyondFogDistance_Parms,NULL);
	pFnBeyondFogDistance->FunctionFlags |= 0x400;
	return BeyondFogDistance_Parms.ReturnValue;
}

struct Engine_LandingShake_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AController::LandingShake()
{
	static UFieldFunc* pFnLandingShake = NULL;
	if(!pFnLandingShake)
		pFnLandingShake = UObject::FindFunction("Function Engine.Controller.LandingShake");

	Engine_LandingShake_Parms LandingShake_Parms;
	ProcessEvent(pFnLandingShake,NULL,&LandingShake_Parms,NULL);
	return LandingShake_Parms.ReturnValue;
}

struct Engine_SeePlayer_Parms
{
	class APawn*                                       Seen;                                             		// 0x000000 (0x0004)              
};

void AController::SeePlayer(class APawn* Seen)
{
	static UFieldFunc* pFnSeePlayer = NULL;
	if(!pFnSeePlayer)
		pFnSeePlayer = UObject::FindFunction("Function Engine.Controller.SeePlayer");

	Engine_SeePlayer_Parms SeePlayer_Parms;
	SeePlayer_Parms.Seen = Seen;
	ProcessEvent(pFnSeePlayer,NULL,&SeePlayer_Parms,NULL);
}

struct Engine_LineOfSightTo_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	FVector3                                           chkLocation;                                      		// 0x000004 (0x000C)              
	unsigned long                                      bTryAlternateTargetLoc : 1;                       		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool AController::LineOfSightTo(class AActor* Other,FVector3 chkLocation,bool bTryAlternateTargetLoc)
{
	static UFieldFunc* pFnLineOfSightTo = NULL;
	if(!pFnLineOfSightTo)
		pFnLineOfSightTo = UObject::FindFunction("Function Engine.Controller.LineOfSightTo");

	Engine_LineOfSightTo_Parms LineOfSightTo_Parms;
	LineOfSightTo_Parms.Other = Other;
	memcpy(&LineOfSightTo_Parms.chkLocation,&chkLocation,0xC);
	LineOfSightTo_Parms.bTryAlternateTargetLoc = bTryAlternateTargetLoc;

	unsigned short NativeIndex = pFnLineOfSightTo->iNative;
	pFnLineOfSightTo->iNative = 0;
	pFnLineOfSightTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLineOfSightTo,NULL,&LineOfSightTo_Parms,NULL);
	pFnLineOfSightTo->FunctionFlags |= 0x400;
	pFnLineOfSightTo->iNative = NativeIndex;
	return LineOfSightTo_Parms.ReturnValue;
}

struct Engine_OnTeleport_Parms
{
	class USeqAct_Teleport*                            Action;                                           		// 0x000000 (0x0004)              
};

void AController::OnTeleport(class USeqAct_Teleport* Action)
{
	static UFieldFunc* pFnOnTeleport = NULL;
	if(!pFnOnTeleport)
		pFnOnTeleport = UObject::FindFunction("Function Engine.Controller.OnTeleport");

	Engine_OnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;
	ProcessEvent(pFnOnTeleport,NULL,&OnTeleport_Parms,NULL);
}

struct Engine_AllowDetourTo_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::AllowDetourTo(class ANavigationPoint* N)
{
	static UFieldFunc* pFnAllowDetourTo = NULL;
	if(!pFnAllowDetourTo)
		pFnAllowDetourTo = UObject::FindFunction("Function Engine.Controller.AllowDetourTo");

	Engine_AllowDetourTo_Parms AllowDetourTo_Parms;
	AllowDetourTo_Parms.N = N;
	ProcessEvent(pFnAllowDetourTo,NULL,&AllowDetourTo_Parms,NULL);
	return AllowDetourTo_Parms.ReturnValue;
}

struct Engine_PawnDied_Parms
{
	class APawn*                                       inPawn;                                           		// 0x000000 (0x0004)              
	//int                                                Idx;                                              		// 0x000004 (0x0004)              
};

void AController::PawnDied(class APawn* inPawn)
{
	static UFieldFunc* pFnPawnDied = NULL;
	if(!pFnPawnDied)
		pFnPawnDied = UObject::FindFunction("Function Engine.Controller.PawnDied");

	Engine_PawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.inPawn = inPawn;
	ProcessEvent(pFnPawnDied,NULL,&PawnDied_Parms,NULL);
}

struct Engine_NotifyMissedJump_Parms
{
};

void AController::NotifyMissedJump()
{
	static UFieldFunc* pFnNotifyMissedJump = NULL;
	if(!pFnNotifyMissedJump)
		pFnNotifyMissedJump = UObject::FindFunction("Function Engine.Controller.NotifyMissedJump");

	Engine_NotifyMissedJump_Parms NotifyMissedJump_Parms;
	ProcessEvent(pFnNotifyMissedJump,NULL,&NotifyMissedJump_Parms,NULL);
}

struct Engine_GameHasEnded_Parms
{
	class AActor*                                      EndGameFocus;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bIsWinner : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void AController::GameHasEnded(class AActor* EndGameFocus,bool bIsWinner)
{
	static UFieldFunc* pFnGameHasEnded = NULL;
	if(!pFnGameHasEnded)
		pFnGameHasEnded = UObject::FindFunction("Function Engine.Controller.GameHasEnded");

	Engine_GameHasEnded_Parms GameHasEnded_Parms;
	GameHasEnded_Parms.EndGameFocus = EndGameFocus;
	GameHasEnded_Parms.bIsWinner = bIsWinner;
	ProcessEvent(pFnGameHasEnded,NULL,&GameHasEnded_Parms,NULL);
}

struct Engine_IsSpectating_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AController::IsSpectating()
{
	static UFieldFunc* pFnIsSpectating = NULL;
	if(!pFnIsSpectating)
		pFnIsSpectating = UObject::FindFunction("Function Engine.Controller.IsSpectating");

	Engine_IsSpectating_Parms IsSpectating_Parms;
	ProcessEvent(pFnIsSpectating,NULL,&IsSpectating_Parms,NULL);
	return IsSpectating_Parms.ReturnValue;
}

struct Engine_InLatentExecution_Parms
{
	int                                                LatentActionNumber;                               		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::InLatentExecution(int LatentActionNumber)
{
	static UFieldFunc* pFnInLatentExecution = NULL;
	if(!pFnInLatentExecution)
		pFnInLatentExecution = UObject::FindFunction("Function Engine.Controller.InLatentExecution");

	Engine_InLatentExecution_Parms InLatentExecution_Parms;
	InLatentExecution_Parms.LatentActionNumber = LatentActionNumber;
	pFnInLatentExecution->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInLatentExecution,NULL,&InLatentExecution_Parms,NULL);
	pFnInLatentExecution->FunctionFlags |= 0x400;
	return InLatentExecution_Parms.ReturnValue;
}

struct Engine_IsLocalPlayerController_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AController::IsLocalPlayerController()
{
	static UFieldFunc* pFnIsLocalPlayerController = NULL;
	if(!pFnIsLocalPlayerController)
		pFnIsLocalPlayerController = UObject::FindFunction("Function Engine.Controller.IsLocalPlayerController");

	Engine_IsLocalPlayerController_Parms IsLocalPlayerController_Parms;
	pFnIsLocalPlayerController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsLocalPlayerController,NULL,&IsLocalPlayerController_Parms,NULL);
	pFnIsLocalPlayerController->FunctionFlags |= 0x400;
	return IsLocalPlayerController_Parms.ReturnValue;
}

struct Engine_OnToggleAffectedByHitEffects_Parms
{
	class USeqAct_ToggleAffectedByHitEffects*          inAction;                                         		// 0x000000 (0x0004)              
};

void AController::OnToggleAffectedByHitEffects(class USeqAct_ToggleAffectedByHitEffects* inAction)
{
	static UFieldFunc* pFnOnToggleAffectedByHitEffects = NULL;
	if(!pFnOnToggleAffectedByHitEffects)
		pFnOnToggleAffectedByHitEffects = UObject::FindFunction("Function Engine.Controller.OnToggleAffectedByHitEffects");

	Engine_OnToggleAffectedByHitEffects_Parms OnToggleAffectedByHitEffects_Parms;
	OnToggleAffectedByHitEffects_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggleAffectedByHitEffects,NULL,&OnToggleAffectedByHitEffects_Parms,NULL);
}

struct Engine_RouteCache_RemoveItem_Parms
{
	class ANavigationPoint*                            Nav;                                              		// 0x000000 (0x0004)              
};

void AController::RouteCache_RemoveItem(class ANavigationPoint* Nav)
{
	static UFieldFunc* pFnRouteCache_RemoveItem = NULL;
	if(!pFnRouteCache_RemoveItem)
		pFnRouteCache_RemoveItem = UObject::FindFunction("Function Engine.Controller.RouteCache_RemoveItem");

	Engine_RouteCache_RemoveItem_Parms RouteCache_RemoveItem_Parms;
	RouteCache_RemoveItem_Parms.Nav = Nav;
	pFnRouteCache_RemoveItem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRouteCache_RemoveItem,NULL,&RouteCache_RemoveItem_Parms,NULL);
	pFnRouteCache_RemoveItem->FunctionFlags |= 0x400;
}

struct Engine_IsInCombat_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AController::IsInCombat()
{
	static UFieldFunc* pFnIsInCombat = NULL;
	if(!pFnIsInCombat)
		pFnIsInCombat = UObject::FindFunction("Function Engine.Controller.IsInCombat");

	Engine_IsInCombat_Parms IsInCombat_Parms;
	ProcessEvent(pFnIsInCombat,NULL,&IsInCombat_Parms,NULL);
	return IsInCombat_Parms.ReturnValue;
}

struct Engine_NotifyProjLanded_Parms
{
	class AProjectile*                                 Proj;                                             		// 0x000000 (0x0004)              
};

void AController::NotifyProjLanded(class AProjectile* Proj)
{
	static UFieldFunc* pFnNotifyProjLanded = NULL;
	if(!pFnNotifyProjLanded)
		pFnNotifyProjLanded = UObject::FindFunction("Function Engine.Controller.NotifyProjLanded");

	Engine_NotifyProjLanded_Parms NotifyProjLanded_Parms;
	NotifyProjLanded_Parms.Proj = Proj;
	ProcessEvent(pFnNotifyProjLanded,NULL,&NotifyProjLanded_Parms,NULL);
}

struct Engine_FindPathTowardNearest_Parms
{
	class UClass*                                      GoalClass;                                        		// 0x000000 (0x0004)              
	unsigned long                                      bWeightDetours : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	int                                                MaxPathLength;                                    		// 0x000008 (0x0004)              
	unsigned long                                      bReturnPartial : 1;                               		// 0x00000C (0x0004) [0x00000001] 
	class AActor*                                      ReturnValue;                                      		// 0x000010 (0x0004)              
};

class AActor* AController::FindPathTowardNearest(class UClass* GoalClass,bool bWeightDetours,int MaxPathLength,bool bReturnPartial)
{
	static UFieldFunc* pFnFindPathTowardNearest = NULL;
	if(!pFnFindPathTowardNearest)
		pFnFindPathTowardNearest = UObject::FindFunction("Function Engine.Controller.FindPathTowardNearest");

	Engine_FindPathTowardNearest_Parms FindPathTowardNearest_Parms;
	FindPathTowardNearest_Parms.GoalClass = GoalClass;
	FindPathTowardNearest_Parms.bWeightDetours = bWeightDetours;
	FindPathTowardNearest_Parms.MaxPathLength = MaxPathLength;
	FindPathTowardNearest_Parms.bReturnPartial = bReturnPartial;
	pFnFindPathTowardNearest->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindPathTowardNearest,NULL,&FindPathTowardNearest_Parms,NULL);
	pFnFindPathTowardNearest->FunctionFlags |= 0x400;
	return FindPathTowardNearest_Parms.ReturnValue;
}

struct Engine_MoveUnreachable_Parms
{
	FVector3                                           AttemptedDest;                                    		// 0x000000 (0x000C)              
	class AActor*                                      AttemptedTarget;                                  		// 0x00000C (0x0004)              
};

void AController::MoveUnreachable(FVector3 AttemptedDest,class AActor* AttemptedTarget)
{
	static UFieldFunc* pFnMoveUnreachable = NULL;
	if(!pFnMoveUnreachable)
		pFnMoveUnreachable = UObject::FindFunction("Function Engine.Controller.MoveUnreachable");

	Engine_MoveUnreachable_Parms MoveUnreachable_Parms;
	memcpy(&MoveUnreachable_Parms.AttemptedDest,&AttemptedDest,0xC);
	MoveUnreachable_Parms.AttemptedTarget = AttemptedTarget;
	ProcessEvent(pFnMoveUnreachable,NULL,&MoveUnreachable_Parms,NULL);
}

struct Engine_WaitForMover_Parms
{
	class AInterpActor*                                M;                                                		// 0x000000 (0x0004)              
};

void AController::WaitForMover(class AInterpActor* M)
{
	static UFieldFunc* pFnWaitForMover = NULL;
	if(!pFnWaitForMover)
		pFnWaitForMover = UObject::FindFunction("Function Engine.Controller.WaitForMover");

	Engine_WaitForMover_Parms WaitForMover_Parms;
	WaitForMover_Parms.M = M;
	ProcessEvent(pFnWaitForMover,NULL,&WaitForMover_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AController::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Controller.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_GetRouteGoalAfter_Parms
{
	int                                                RouteIdx;                                         		// 0x000000 (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class AActor* AController::GetRouteGoalAfter(int RouteIdx)
{
	static UFieldFunc* pFnGetRouteGoalAfter = NULL;
	if(!pFnGetRouteGoalAfter)
		pFnGetRouteGoalAfter = UObject::FindFunction("Function Engine.Controller.GetRouteGoalAfter");

	Engine_GetRouteGoalAfter_Parms GetRouteGoalAfter_Parms;
	GetRouteGoalAfter_Parms.RouteIdx = RouteIdx;
	ProcessEvent(pFnGetRouteGoalAfter,NULL,&GetRouteGoalAfter_Parms,NULL);
	return GetRouteGoalAfter_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void AController::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Controller.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_UnderLift_Parms
{
	class ALiftCenter*                                 Lift;                                             		// 0x000000 (0x0004)              
};

void AController::UnderLift(class ALiftCenter* Lift)
{
	static UFieldFunc* pFnUnderLift = NULL;
	if(!pFnUnderLift)
		pFnUnderLift = UObject::FindFunction("Function Engine.Controller.UnderLift");

	Engine_UnderLift_Parms UnderLift_Parms;
	UnderLift_Parms.Lift = Lift;
	ProcessEvent(pFnUnderLift,NULL,&UnderLift_Parms,NULL);
}

struct Engine_CanSee_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::CanSee(class APawn* Other)
{
	static UFieldFunc* pFnCanSee = NULL;
	if(!pFnCanSee)
		pFnCanSee = UObject::FindFunction("Function Engine.Controller.CanSee");

	Engine_CanSee_Parms CanSee_Parms;
	CanSee_Parms.Other = Other;

	unsigned short NativeIndex = pFnCanSee->iNative;
	pFnCanSee->iNative = 0;
	pFnCanSee->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanSee,NULL,&CanSee_Parms,NULL);
	pFnCanSee->FunctionFlags |= 0x400;
	pFnCanSee->iNative = NativeIndex;
	return CanSee_Parms.ReturnValue;
}

struct Engine_OnToggleHidden_Parms
{
	class USeqAct_ToggleHidden*                        Action;                                           		// 0x000000 (0x0004)              
};

void AController::OnToggleHidden(class USeqAct_ToggleHidden* Action)
{
	static UFieldFunc* pFnOnToggleHidden = NULL;
	if(!pFnOnToggleHidden)
		pFnOnToggleHidden = UObject::FindFunction("Function Engine.Controller.OnToggleHidden");

	Engine_OnToggleHidden_Parms OnToggleHidden_Parms;
	OnToggleHidden_Parms.Action = Action;
	ProcessEvent(pFnOnToggleHidden,NULL,&OnToggleHidden_Parms,NULL);
}

struct Engine_RouteCache_Empty_Parms
{
};

void AController::RouteCache_Empty()
{
	static UFieldFunc* pFnRouteCache_Empty = NULL;
	if(!pFnRouteCache_Empty)
		pFnRouteCache_Empty = UObject::FindFunction("Function Engine.Controller.RouteCache_Empty");

	Engine_RouteCache_Empty_Parms RouteCache_Empty_Parms;
	pFnRouteCache_Empty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRouteCache_Empty,NULL,&RouteCache_Empty_Parms,NULL);
	pFnRouteCache_Empty->FunctionFlags |= 0x400;
}

struct Engine_HandlePathObstruction_Parms
{
	class AActor*                                      BlockedBy;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::HandlePathObstruction(class AActor* BlockedBy)
{
	static UFieldFunc* pFnHandlePathObstruction = NULL;
	if(!pFnHandlePathObstruction)
		pFnHandlePathObstruction = UObject::FindFunction("Function Engine.Controller.HandlePathObstruction");

	Engine_HandlePathObstruction_Parms HandlePathObstruction_Parms;
	HandlePathObstruction_Parms.BlockedBy = BlockedBy;
	ProcessEvent(pFnHandlePathObstruction,NULL,&HandlePathObstruction_Parms,NULL);
	return HandlePathObstruction_Parms.ReturnValue;
}

struct Engine_Possess_Parms
{
	class APawn*                                       inPawn;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000004 (0x0004) [0x00000001] 
};

void AController::Possess(class APawn* inPawn,bool bVehicleTransition)
{
	static UFieldFunc* pFnPossess = NULL;
	if(!pFnPossess)
		pFnPossess = UObject::FindFunction("Function Engine.Controller.Possess");

	Engine_Possess_Parms Possess_Parms;
	Possess_Parms.inPawn = inPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnPossess,NULL,&Possess_Parms,NULL);
}

struct Engine_HearNoise_Parms
{
	float                                              Loudness;                                         		// 0x000000 (0x0004)              
	class AActor*                                      NoiseMaker;                                       		// 0x000004 (0x0004)              
	struct FName                                       NoiseType;                                        		// 0x000008 (0x0008)              
};

void AController::HearNoise(float Loudness,class AActor* NoiseMaker,struct FName NoiseType)
{
	static UFieldFunc* pFnHearNoise = NULL;
	if(!pFnHearNoise)
		pFnHearNoise = UObject::FindFunction("Function Engine.Controller.HearNoise");

	Engine_HearNoise_Parms HearNoise_Parms;
	HearNoise_Parms.Loudness = Loudness;
	HearNoise_Parms.NoiseMaker = NoiseMaker;
	memcpy(&HearNoise_Parms.NoiseType,&NoiseType,0x8);
	ProcessEvent(pFnHearNoise,NULL,&HearNoise_Parms,NULL);
}

struct Engine_CheckNearMiss_Parms
{
	class APawn*                                       Shooter;                                          		// 0x000000 (0x0004)              
	class AWeapon*                                     W;                                                		// 0x000004 (0x0004)              
	FVector3                                           WeapLoc;                                          		// 0x000008 (0x000C)              
	FVector3                                           LineDir;                                          		// 0x000014 (0x000C)              
	FVector3                                           HitLocation;                                      		// 0x000020 (0x000C)              
	class UClass*                                      InDamageType;                                     		// 0x00002C (0x0004)              
};

void AController::CheckNearMiss(class APawn* Shooter,class AWeapon* W,FVector3 WeapLoc,FVector3 LineDir,FVector3 HitLocation,class UClass* InDamageType)
{
	static UFieldFunc* pFnCheckNearMiss = NULL;
	if(!pFnCheckNearMiss)
		pFnCheckNearMiss = UObject::FindFunction("Function Engine.Controller.CheckNearMiss");

	Engine_CheckNearMiss_Parms CheckNearMiss_Parms;
	CheckNearMiss_Parms.Shooter = Shooter;
	CheckNearMiss_Parms.W = W;
	memcpy(&CheckNearMiss_Parms.WeapLoc,&WeapLoc,0xC);
	memcpy(&CheckNearMiss_Parms.LineDir,&LineDir,0xC);
	memcpy(&CheckNearMiss_Parms.HitLocation,&HitLocation,0xC);
	CheckNearMiss_Parms.InDamageType = InDamageType;
	ProcessEvent(pFnCheckNearMiss,NULL,&CheckNearMiss_Parms,NULL);
}

struct Engine_OnMakeNoise_Parms
{
	class USeqAct_MakeNoise*                           Action;                                           		// 0x000000 (0x0004)              
};

void AController::OnMakeNoise(class USeqAct_MakeNoise* Action)
{
	static UFieldFunc* pFnOnMakeNoise = NULL;
	if(!pFnOnMakeNoise)
		pFnOnMakeNoise = UObject::FindFunction("Function Engine.Controller.OnMakeNoise");

	Engine_OnMakeNoise_Parms OnMakeNoise_Parms;
	OnMakeNoise_Parms.Action = Action;
	ProcessEvent(pFnOnMakeNoise,NULL,&OnMakeNoise_Parms,NULL);
}

struct Engine_FireWeaponAt_Parms
{
	class AActor*                                      inActor;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AController::FireWeaponAt(class AActor* inActor)
{
	static UFieldFunc* pFnFireWeaponAt = NULL;
	if(!pFnFireWeaponAt)
		pFnFireWeaponAt = UObject::FindFunction("Function Engine.Controller.FireWeaponAt");

	Engine_FireWeaponAt_Parms FireWeaponAt_Parms;
	FireWeaponAt_Parms.inActor = inActor;
	ProcessEvent(pFnFireWeaponAt,NULL,&FireWeaponAt_Parms,NULL);
	return FireWeaponAt_Parms.ReturnValue;
}

struct Engine_FindPathToIntercept_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	class AActor*                                      InRouteGoal;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bWeightDetours : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	int                                                MaxPathLength;                                    		// 0x00000C (0x0004)              
	unsigned long                                      bReturnPartial : 1;                               		// 0x000010 (0x0004) [0x00000001] 
	class AActor*                                      ReturnValue;                                      		// 0x000014 (0x0004)              
};

class AActor* AController::FindPathToIntercept(class APawn* P,class AActor* InRouteGoal,bool bWeightDetours,int MaxPathLength,bool bReturnPartial)
{
	static UFieldFunc* pFnFindPathToIntercept = NULL;
	if(!pFnFindPathToIntercept)
		pFnFindPathToIntercept = UObject::FindFunction("Function Engine.Controller.FindPathToIntercept");

	Engine_FindPathToIntercept_Parms FindPathToIntercept_Parms;
	FindPathToIntercept_Parms.P = P;
	FindPathToIntercept_Parms.InRouteGoal = InRouteGoal;
	FindPathToIntercept_Parms.bWeightDetours = bWeightDetours;
	FindPathToIntercept_Parms.MaxPathLength = MaxPathLength;
	FindPathToIntercept_Parms.bReturnPartial = bReturnPartial;
	pFnFindPathToIntercept->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindPathToIntercept,NULL,&FindPathToIntercept_Parms,NULL);
	pFnFindPathToIntercept->FunctionFlags |= 0x400;
	return FindPathToIntercept_Parms.ReturnValue;
}

struct Engine_OnCauseDamage_Parms
{
	class USeqAct_CauseDamage*                         Action;                                           		// 0x000000 (0x0004)              
};

void AController::OnCauseDamage(class USeqAct_CauseDamage* Action)
{
	static UFieldFunc* pFnOnCauseDamage = NULL;
	if(!pFnOnCauseDamage)
		pFnOnCauseDamage = UObject::FindFunction("Function Engine.Controller.OnCauseDamage");

	Engine_OnCauseDamage_Parms OnCauseDamage_Parms;
	OnCauseDamage_Parms.Action = Action;
	ProcessEvent(pFnOnCauseDamage,NULL,&OnCauseDamage_Parms,NULL);
}

struct Engine_GetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char AController::GetTeamNum()
{
	static UFieldFunc* pFnGetTeamNum = NULL;
	if(!pFnGetTeamNum)
		pFnGetTeamNum = UObject::FindFunction("Function Engine.Controller.GetTeamNum");

	Engine_GetTeamNum_Parms GetTeamNum_Parms;
	pFnGetTeamNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTeamNum,NULL,&GetTeamNum_Parms,NULL);
	pFnGetTeamNum->FunctionFlags |= 0x400;
	return GetTeamNum_Parms.ReturnValue;
}

struct Engine_PickWallAdjust_Parms
{
	FVector3                                           HitNormal;                                        		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AController::PickWallAdjust(FVector3 HitNormal)
{
	static UFieldFunc* pFnPickWallAdjust = NULL;
	if(!pFnPickWallAdjust)
		pFnPickWallAdjust = UObject::FindFunction("Function Engine.Controller.PickWallAdjust");

	Engine_PickWallAdjust_Parms PickWallAdjust_Parms;
	memcpy(&PickWallAdjust_Parms.HitNormal,&HitNormal,0xC);

	unsigned short NativeIndex = pFnPickWallAdjust->iNative;
	pFnPickWallAdjust->iNative = 0;
	pFnPickWallAdjust->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPickWallAdjust,NULL,&PickWallAdjust_Parms,NULL);
	pFnPickWallAdjust->FunctionFlags |= 0x400;
	pFnPickWallAdjust->iNative = NativeIndex;
	return PickWallAdjust_Parms.ReturnValue;
}

struct Engine_Restart_Parms
{
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void AController::Restart(bool bVehicleTransition)
{
	static UFieldFunc* pFnRestart = NULL;
	if(!pFnRestart)
		pFnRestart = UObject::FindFunction("Function Engine.Controller.Restart");

	Engine_Restart_Parms Restart_Parms;
	Restart_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnRestart,NULL,&Restart_Parms,NULL);
}

struct Engine_FinishRotation_Parms
{
};

void AController::FinishRotation()
{
	static UFieldFunc* pFnFinishRotation = NULL;
	if(!pFnFinishRotation)
		pFnFinishRotation = UObject::FindFunction("Function Engine.Controller.FinishRotation");

	Engine_FinishRotation_Parms FinishRotation_Parms;

	unsigned short NativeIndex = pFnFinishRotation->iNative;
	pFnFinishRotation->iNative = 0;
	pFnFinishRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFinishRotation,NULL,&FinishRotation_Parms,NULL);
	pFnFinishRotation->FunctionFlags |= 0x400;
	pFnFinishRotation->iNative = NativeIndex;
}

struct Engine_MoveTo_Parms
{
	FVector3                                           NewDestination;                                   		// 0x000000 (0x000C)              
	class AActor*                                      ViewFocus;                                        		// 0x00000C (0x0004)              
	unsigned long                                      bShouldWalk : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

void AController::MoveTo(FVector3 NewDestination,class AActor* ViewFocus,bool bShouldWalk)
{
	static UFieldFunc* pFnMoveTo = NULL;
	if(!pFnMoveTo)
		pFnMoveTo = UObject::FindFunction("Function Engine.Controller.MoveTo");

	Engine_MoveTo_Parms MoveTo_Parms;
	memcpy(&MoveTo_Parms.NewDestination,&NewDestination,0xC);
	MoveTo_Parms.ViewFocus = ViewFocus;
	MoveTo_Parms.bShouldWalk = bShouldWalk;

	unsigned short NativeIndex = pFnMoveTo->iNative;
	pFnMoveTo->iNative = 0;
	pFnMoveTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMoveTo,NULL,&MoveTo_Parms,NULL);
	pFnMoveTo->FunctionFlags |= 0x400;
	pFnMoveTo->iNative = NativeIndex;
}

struct Engine_EnemyJustTeleported_Parms
{
};

void AController::EnemyJustTeleported()
{
	static UFieldFunc* pFnEnemyJustTeleported = NULL;
	if(!pFnEnemyJustTeleported)
		pFnEnemyJustTeleported = UObject::FindFunction("Function Engine.Controller.EnemyJustTeleported");

	Engine_EnemyJustTeleported_Parms EnemyJustTeleported_Parms;
	ProcessEvent(pFnEnemyJustTeleported,NULL,&EnemyJustTeleported_Parms,NULL);
}

struct Engine_InitPlayerReplicationInfo_Parms
{
};

void AController::InitPlayerReplicationInfo()
{
	static UFieldFunc* pFnInitPlayerReplicationInfo = NULL;
	if(!pFnInitPlayerReplicationInfo)
		pFnInitPlayerReplicationInfo = UObject::FindFunction("Function Engine.Controller.InitPlayerReplicationInfo");

	Engine_InitPlayerReplicationInfo_Parms InitPlayerReplicationInfo_Parms;
	ProcessEvent(pFnInitPlayerReplicationInfo,NULL,&InitPlayerReplicationInfo_Parms,NULL);
}

struct Engine_FindRandomDest_Parms
{
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class ANavigationPoint* AController::FindRandomDest()
{
	static UFieldFunc* pFnFindRandomDest = NULL;
	if(!pFnFindRandomDest)
		pFnFindRandomDest = UObject::FindFunction("Function Engine.Controller.FindRandomDest");

	Engine_FindRandomDest_Parms FindRandomDest_Parms;

	unsigned short NativeIndex = pFnFindRandomDest->iNative;
	pFnFindRandomDest->iNative = 0;
	pFnFindRandomDest->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindRandomDest,NULL,&FindRandomDest_Parms,NULL);
	pFnFindRandomDest->FunctionFlags |= 0x400;
	pFnFindRandomDest->iNative = NativeIndex;
	return FindRandomDest_Parms.ReturnValue;
}

struct Engine_NotifyCoverDisabled_Parms
{
	class ACoverLink*                                  Link;                                             		// 0x000000 (0x0004)              
	int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
};

void AController::NotifyCoverDisabled(class ACoverLink* Link,int SlotIdx)
{
	static UFieldFunc* pFnNotifyCoverDisabled = NULL;
	if(!pFnNotifyCoverDisabled)
		pFnNotifyCoverDisabled = UObject::FindFunction("Function Engine.Controller.NotifyCoverDisabled");

	Engine_NotifyCoverDisabled_Parms NotifyCoverDisabled_Parms;
	NotifyCoverDisabled_Parms.Link = Link;
	NotifyCoverDisabled_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnNotifyCoverDisabled,NULL,&NotifyCoverDisabled_Parms,NULL);
}

struct Engine_SetupSpecialPathAbilities_Parms
{
};

void AController::SetupSpecialPathAbilities()
{
	static UFieldFunc* pFnSetupSpecialPathAbilities = NULL;
	if(!pFnSetupSpecialPathAbilities)
		pFnSetupSpecialPathAbilities = UObject::FindFunction("Function Engine.Controller.SetupSpecialPathAbilities");

	Engine_SetupSpecialPathAbilities_Parms SetupSpecialPathAbilities_Parms;
	ProcessEvent(pFnSetupSpecialPathAbilities,NULL,&SetupSpecialPathAbilities_Parms,NULL);
}

struct Engine_FindPathToward_Parms
{
	class AActor*                                      anActor;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bWeightDetours : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	int                                                MaxPathLength;                                    		// 0x000008 (0x0004)              
	unsigned long                                      bReturnPartial : 1;                               		// 0x00000C (0x0004) [0x00000001] 
	class AActor*                                      ReturnValue;                                      		// 0x000010 (0x0004)              
};

class AActor* AController::FindPathToward(class AActor* anActor,bool bWeightDetours,int MaxPathLength,bool bReturnPartial)
{
	static UFieldFunc* pFnFindPathToward = NULL;
	if(!pFnFindPathToward)
		pFnFindPathToward = UObject::FindFunction("Function Engine.Controller.FindPathToward");

	Engine_FindPathToward_Parms FindPathToward_Parms;
	FindPathToward_Parms.anActor = anActor;
	FindPathToward_Parms.bWeightDetours = bWeightDetours;
	FindPathToward_Parms.MaxPathLength = MaxPathLength;
	FindPathToward_Parms.bReturnPartial = bReturnPartial;

	unsigned short NativeIndex = pFnFindPathToward->iNative;
	pFnFindPathToward->iNative = 0;
	pFnFindPathToward->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindPathToward,NULL,&FindPathToward_Parms,NULL);
	pFnFindPathToward->FunctionFlags |= 0x400;
	pFnFindPathToward->iNative = NativeIndex;
	return FindPathToward_Parms.ReturnValue;
}

struct Engine_ServerRestartPlayer_Parms
{
};

void AController::ServerRestartPlayer()
{
	static UFieldFunc* pFnServerRestartPlayer = NULL;
	if(!pFnServerRestartPlayer)
		pFnServerRestartPlayer = UObject::FindFunction("Function Engine.Controller.ServerRestartPlayer");

	Engine_ServerRestartPlayer_Parms ServerRestartPlayer_Parms;
	ProcessEvent(pFnServerRestartPlayer,NULL,&ServerRestartPlayer_Parms,NULL);
}

struct Engine_NotifyTakeHit_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000004 (0x000C)              
	int                                                Damage;                                           		// 0x000010 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000014 (0x0004)              
	FVector3                                           Momentum;                                         		// 0x000018 (0x000C)              
};

void AController::NotifyTakeHit(class AController* InstigatedBy,FVector3 HitLocation,int Damage,class UClass* DamageType,FVector3 Momentum)
{
	static UFieldFunc* pFnNotifyTakeHit = NULL;
	if(!pFnNotifyTakeHit)
		pFnNotifyTakeHit = UObject::FindFunction("Function Engine.Controller.NotifyTakeHit");

	Engine_NotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy(&NotifyTakeHit_Parms.HitLocation,&HitLocation,0xC);
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy(&NotifyTakeHit_Parms.Momentum,&Momentum,0xC);
	ProcessEvent(pFnNotifyTakeHit,NULL,&NotifyTakeHit_Parms,NULL);
}

struct Engine_UpdateSex_Parms
{
};

void AController::UpdateSex()
{
	static UFieldFunc* pFnUpdateSex = NULL;
	if(!pFnUpdateSex)
		pFnUpdateSex = UObject::FindFunction("Function Engine.Controller.UpdateSex");

	Engine_UpdateSex_Parms UpdateSex_Parms;
	ProcessEvent(pFnUpdateSex,NULL,&UpdateSex_Parms,NULL);
}

struct Engine_IsAimingAt_Parms
{
	class AActor*                                      ATarget;                                          		// 0x000000 (0x0004)              
	float                                              Epsilon;                                          		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//FVector3                                           Loc;                                              		// 0x00000C (0x000C)              
	//FRotator                                           Rot;                                              		// 0x000018 (0x000C)              
};

bool AController::IsAimingAt(class AActor* ATarget,float Epsilon)
{
	static UFieldFunc* pFnIsAimingAt = NULL;
	if(!pFnIsAimingAt)
		pFnIsAimingAt = UObject::FindFunction("Function Engine.Controller.IsAimingAt");

	Engine_IsAimingAt_Parms IsAimingAt_Parms;
	IsAimingAt_Parms.ATarget = ATarget;
	IsAimingAt_Parms.Epsilon = Epsilon;
	ProcessEvent(pFnIsAimingAt,NULL,&IsAimingAt_Parms,NULL);
	return IsAimingAt_Parms.ReturnValue;
}

struct Engine_SetCharacter_Parms
{
	struct FString                                     inCharacter;                                      		// 0x000000 (0x000C)              
};

void AController::SetCharacter(struct FString inCharacter)
{
	static UFieldFunc* pFnSetCharacter = NULL;
	if(!pFnSetCharacter)
		pFnSetCharacter = UObject::FindFunction("Function Engine.Controller.SetCharacter");

	Engine_SetCharacter_Parms SetCharacter_Parms;
	memcpy(&SetCharacter_Parms.inCharacter,&inCharacter,0xC);
	ProcessEvent(pFnSetCharacter,NULL,&SetCharacter_Parms,NULL);
}

struct Engine_OnPossess_Parms
{
	class USeqAct_Possess*                             inAction;                                         		// 0x000000 (0x0004)              
	//class APawn*                                       OldPawn;                                          		// 0x000004 (0x0004)              
	//class AVehicle*                                    V;                                                		// 0x000008 (0x0004)              
};

void AController::OnPossess(class USeqAct_Possess* inAction)
{
	static UFieldFunc* pFnOnPossess = NULL;
	if(!pFnOnPossess)
		pFnOnPossess = UObject::FindFunction("Function Engine.Controller.OnPossess");

	Engine_OnPossess_Parms OnPossess_Parms;
	OnPossess_Parms.inAction = inAction;
	ProcessEvent(pFnOnPossess,NULL,&OnPossess_Parms,NULL);
}

struct Engine_SendMessage_Parms
{
	class APlayerReplicationInfo*                      Recipient;                                        		// 0x000000 (0x0004)              
	struct FName                                       MessageType;                                      		// 0x000004 (0x0008)              
	float                                              Wait;                                             		// 0x00000C (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000010 (0x0004)              
};

void AController::SendMessage(class APlayerReplicationInfo* Recipient,struct FName MessageType,float Wait,class UClass* DamageType)
{
	static UFieldFunc* pFnSendMessage = NULL;
	if(!pFnSendMessage)
		pFnSendMessage = UObject::FindFunction("Function Engine.Controller.SendMessage");

	Engine_SendMessage_Parms SendMessage_Parms;
	SendMessage_Parms.Recipient = Recipient;
	memcpy(&SendMessage_Parms.MessageType,&MessageType,0x8);
	SendMessage_Parms.Wait = Wait;
	SendMessage_Parms.DamageType = DamageType;
	ProcessEvent(pFnSendMessage,NULL,&SendMessage_Parms,NULL);
}

struct Engine_ReceiveWarning_Parms
{
	class APawn*                                       Shooter;                                          		// 0x000000 (0x0004)              
	float                                              projSpeed;                                        		// 0x000004 (0x0004)              
	FVector3                                           FireDir;                                          		// 0x000008 (0x000C)              
};

void AController::ReceiveWarning(class APawn* Shooter,float projSpeed,FVector3 FireDir)
{
	static UFieldFunc* pFnReceiveWarning = NULL;
	if(!pFnReceiveWarning)
		pFnReceiveWarning = UObject::FindFunction("Function Engine.Controller.ReceiveWarning");

	Engine_ReceiveWarning_Parms ReceiveWarning_Parms;
	ReceiveWarning_Parms.Shooter = Shooter;
	ReceiveWarning_Parms.projSpeed = projSpeed;
	memcpy(&ReceiveWarning_Parms.FireDir,&FireDir,0xC);
	ProcessEvent(pFnReceiveWarning,NULL,&ReceiveWarning_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void AController::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.Controller.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_NotifyCoverAdjusted_Parms
{
};

void AController::NotifyCoverAdjusted()
{
	static UFieldFunc* pFnNotifyCoverAdjusted = NULL;
	if(!pFnNotifyCoverAdjusted)
		pFnNotifyCoverAdjusted = UObject::FindFunction("Function Engine.Controller.NotifyCoverAdjusted");

	Engine_NotifyCoverAdjusted_Parms NotifyCoverAdjusted_Parms;
	ProcessEvent(pFnNotifyCoverAdjusted,NULL,&NotifyCoverAdjusted_Parms,NULL);
}

struct Engine_NotifyPhysicsVolumeChange_Parms
{
	class APhysicsVolume*                              NewVolume;                                        		// 0x000000 (0x0004)              
};

void AController::NotifyPhysicsVolumeChange(class APhysicsVolume* NewVolume)
{
	static UFieldFunc* pFnNotifyPhysicsVolumeChange = NULL;
	if(!pFnNotifyPhysicsVolumeChange)
		pFnNotifyPhysicsVolumeChange = UObject::FindFunction("Function Engine.Controller.NotifyPhysicsVolumeChange");

	Engine_NotifyPhysicsVolumeChange_Parms NotifyPhysicsVolumeChange_Parms;
	NotifyPhysicsVolumeChange_Parms.NewVolume = NewVolume;
	ProcessEvent(pFnNotifyPhysicsVolumeChange,NULL,&NotifyPhysicsVolumeChange_Parms,NULL);
}

struct Engine_UnPossess_Parms
{
};

void AController::UnPossess()
{
	static UFieldFunc* pFnUnPossess = NULL;
	if(!pFnUnPossess)
		pFnUnPossess = UObject::FindFunction("Function Engine.Controller.UnPossess");

	Engine_UnPossess_Parms UnPossess_Parms;
	ProcessEvent(pFnUnPossess,NULL,&UnPossess_Parms,NULL);
}

struct Engine_OnToggleGodMode_Parms
{
	class USeqAct_ToggleGodMode*                       inAction;                                         		// 0x000000 (0x0004)              
};

void AController::OnToggleGodMode(class USeqAct_ToggleGodMode* inAction)
{
	static UFieldFunc* pFnOnToggleGodMode = NULL;
	if(!pFnOnToggleGodMode)
		pFnOnToggleGodMode = UObject::FindFunction("Function Engine.Controller.OnToggleGodMode");

	Engine_OnToggleGodMode_Parms OnToggleGodMode_Parms;
	OnToggleGodMode_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggleGodMode,NULL,&OnToggleGodMode_Parms,NULL);
}

struct Engine_CleanupPRI_Parms
{
};

void AController::CleanupPRI()
{
	static UFieldFunc* pFnCleanupPRI = NULL;
	if(!pFnCleanupPRI)
		pFnCleanupPRI = UObject::FindFunction("Function Engine.Controller.CleanupPRI");

	Engine_CleanupPRI_Parms CleanupPRI_Parms;
	ProcessEvent(pFnCleanupPRI,NULL,&CleanupPRI_Parms,NULL);
}

struct Engine_NotifyBump_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	FVector3                                           HitNormal;                                        		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool AController::NotifyBump(class AActor* Other,FVector3 HitNormal)
{
	static UFieldFunc* pFnNotifyBump = NULL;
	if(!pFnNotifyBump)
		pFnNotifyBump = UObject::FindFunction("Function Engine.Controller.NotifyBump");

	Engine_NotifyBump_Parms NotifyBump_Parms;
	NotifyBump_Parms.Other = Other;
	memcpy(&NotifyBump_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnNotifyBump,NULL,&NotifyBump_Parms,NULL);
	return NotifyBump_Parms.ReturnValue;
}

struct Engine_ClientStartNetworkedVoice_Parms
{
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000000 (0x0004)              
};

void APlayerController::ClientStartNetworkedVoice()
{
	static UFieldFunc* pFnClientStartNetworkedVoice = NULL;
	if(!pFnClientStartNetworkedVoice)
		pFnClientStartNetworkedVoice = UObject::FindFunction("Function Engine.PlayerController.ClientStartNetworkedVoice");

	Engine_ClientStartNetworkedVoice_Parms ClientStartNetworkedVoice_Parms;
	ProcessEvent(pFnClientStartNetworkedVoice,NULL,&ClientStartNetworkedVoice_Parms,NULL);
}

struct Engine_OnJoinMigratedGame_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void APlayerController::OnJoinMigratedGame(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnJoinMigratedGame = NULL;
	if(!pFnOnJoinMigratedGame)
		pFnOnJoinMigratedGame = UObject::FindFunction("Function Engine.PlayerController.OnJoinMigratedGame");

	Engine_OnJoinMigratedGame_Parms OnJoinMigratedGame_Parms;
	memcpy(&OnJoinMigratedGame_Parms.SessionName,&SessionName,0x8);
	OnJoinMigratedGame_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnJoinMigratedGame,NULL,&OnJoinMigratedGame_Parms,NULL);
}

struct Engine_SoakPause_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void APlayerController::SoakPause(class APawn* P)
{
	static UFieldFunc* pFnSoakPause = NULL;
	if(!pFnSoakPause)
		pFnSoakPause = UObject::FindFunction("Function Engine.PlayerController.SoakPause");

	Engine_SoakPause_Parms SoakPause_Parms;
	SoakPause_Parms.P = P;
	ProcessEvent(pFnSoakPause,NULL,&SoakPause_Parms,NULL);
}

struct Engine_FixFOV_Parms
{
};

void APlayerController::FixFOV()
{
	static UFieldFunc* pFnFixFOV = NULL;
	if(!pFnFixFOV)
		pFnFixFOV = UObject::FindFunction("Function Engine.PlayerController.FixFOV");

	Engine_FixFOV_Parms FixFOV_Parms;
	ProcessEvent(pFnFixFOV,NULL,&FixFOV_Parms,NULL);
}

struct Engine_ServerViewPrevPlayer_Parms
{
};

void APlayerController::ServerViewPrevPlayer()
{
	static UFieldFunc* pFnServerViewPrevPlayer = NULL;
	if(!pFnServerViewPrevPlayer)
		pFnServerViewPrevPlayer = UObject::FindFunction("Function Engine.PlayerController.ServerViewPrevPlayer");

	Engine_ServerViewPrevPlayer_Parms ServerViewPrevPlayer_Parms;
	ProcessEvent(pFnServerViewPrevPlayer,NULL,&ServerViewPrevPlayer_Parms,NULL);
}

struct Engine_SaveClassConfig_Parms
{
	struct FString                                     ClassName;                                        		// 0x000000 (0x000C)              
	//class UClass*                                      saveClass;                                        		// 0x00000C (0x0004)              
};

void APlayerController::SaveClassConfig(struct FString ClassName)
{
	static UFieldFunc* pFnSaveClassConfig = NULL;
	if(!pFnSaveClassConfig)
		pFnSaveClassConfig = UObject::FindFunction("Function Engine.PlayerController.SaveClassConfig");

	Engine_SaveClassConfig_Parms SaveClassConfig_Parms;
	memcpy(&SaveClassConfig_Parms.ClassName,&ClassName,0xC);
	ProcessEvent(pFnSaveClassConfig,NULL,&SaveClassConfig_Parms,NULL);
}

struct Engine_QuickSave_Parms
{
};

void APlayerController::QuickSave()
{
	static UFieldFunc* pFnQuickSave = NULL;
	if(!pFnQuickSave)
		pFnQuickSave = UObject::FindFunction("Function Engine.PlayerController.QuickSave");

	Engine_QuickSave_Parms QuickSave_Parms;
	ProcessEvent(pFnQuickSave,NULL,&QuickSave_Parms,NULL);
}

struct Engine_ClientClearProgressMessages_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void APlayerController::ClientClearProgressMessages()
{
	static UFieldFunc* pFnClientClearProgressMessages = NULL;
	if(!pFnClientClearProgressMessages)
		pFnClientClearProgressMessages = UObject::FindFunction("Function Engine.PlayerController.ClientClearProgressMessages");

	Engine_ClientClearProgressMessages_Parms ClientClearProgressMessages_Parms;
	ProcessEvent(pFnClientClearProgressMessages,NULL,&ClientClearProgressMessages_Parms,NULL);
}

struct Engine_RemoveDebugText_Parms
{
	class AActor*                                      SrcActor;                                         		// 0x000000 (0x0004)              
	//int                                                Idx;                                              		// 0x000004 (0x0004)              
};

void APlayerController::RemoveDebugText(class AActor* SrcActor)
{
	static UFieldFunc* pFnRemoveDebugText = NULL;
	if(!pFnRemoveDebugText)
		pFnRemoveDebugText = UObject::FindFunction("Function Engine.PlayerController.RemoveDebugText");

	Engine_RemoveDebugText_Parms RemoveDebugText_Parms;
	RemoveDebugText_Parms.SrcActor = SrcActor;
	ProcessEvent(pFnRemoveDebugText,NULL,&RemoveDebugText_Parms,NULL);
}

struct Engine_ClientWriteOnlinePlayerScores_Parms
{
	int                                                LeaderboardId;                                    		// 0x000000 (0x0004)              
	//class AGameReplicationInfo*                        GRI;                                              		// 0x000004 (0x0004)              
	//int                                                Index;                                            		// 0x000008 (0x0004)              
	//TArray<struct FOnlinePlayerScore>                  PlayerScores;                                     		// 0x00000C (0x000C)              
	//struct FUniqueNetId                                ZeroUniqueId;                                     		// 0x000018 (0x0008)              
	//unsigned long                                      bIsTeamGame : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	//int                                                ScoreIndex;                                       		// 0x000024 (0x0004)              
};

void APlayerController::ClientWriteOnlinePlayerScores(int LeaderboardId)
{
	static UFieldFunc* pFnClientWriteOnlinePlayerScores = NULL;
	if(!pFnClientWriteOnlinePlayerScores)
		pFnClientWriteOnlinePlayerScores = UObject::FindFunction("Function Engine.PlayerController.ClientWriteOnlinePlayerScores");

	Engine_ClientWriteOnlinePlayerScores_Parms ClientWriteOnlinePlayerScores_Parms;
	ClientWriteOnlinePlayerScores_Parms.LeaderboardId = LeaderboardId;
	ProcessEvent(pFnClientWriteOnlinePlayerScores,NULL,&ClientWriteOnlinePlayerScores_Parms,NULL);
}

struct Engine_ResetPlayerMovementInput_Parms
{
};

void APlayerController::ResetPlayerMovementInput()
{
	static UFieldFunc* pFnResetPlayerMovementInput = NULL;
	if(!pFnResetPlayerMovementInput)
		pFnResetPlayerMovementInput = UObject::FindFunction("Function Engine.PlayerController.ResetPlayerMovementInput");

	Engine_ResetPlayerMovementInput_Parms ResetPlayerMovementInput_Parms;
	ProcessEvent(pFnResetPlayerMovementInput,NULL,&ResetPlayerMovementInput_Parms,NULL);
}

struct Engine_ViewShake_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void APlayerController::ViewShake(float DeltaTime)
{
	static UFieldFunc* pFnViewShake = NULL;
	if(!pFnViewShake)
		pFnViewShake = UObject::FindFunction("Function Engine.PlayerController.ViewShake");

	Engine_ViewShake_Parms ViewShake_Parms;
	ViewShake_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnViewShake,NULL,&ViewShake_Parms,NULL);
}

struct Engine_ClientRestart_Parms
{
	class APawn*                                       NewPawn;                                          		// 0x000000 (0x0004)              
};

void APlayerController::ClientRestart(class APawn* NewPawn)
{
	static UFieldFunc* pFnClientRestart = NULL;
	if(!pFnClientRestart)
		pFnClientRestart = UObject::FindFunction("Function Engine.PlayerController.ClientRestart");

	Engine_ClientRestart_Parms ClientRestart_Parms;
	ClientRestart_Parms.NewPawn = NewPawn;
	ProcessEvent(pFnClientRestart,NULL,&ClientRestart_Parms,NULL);
}

struct Engine_OnSetCameraTarget_Parms
{
	class USeqAct_SetCameraTarget*                     inAction;                                         		// 0x000000 (0x0004)              
	//class AActor*                                      RealCameraTarget;                                 		// 0x000004 (0x0004)              
};

void APlayerController::OnSetCameraTarget(class USeqAct_SetCameraTarget* inAction)
{
	static UFieldFunc* pFnOnSetCameraTarget = NULL;
	if(!pFnOnSetCameraTarget)
		pFnOnSetCameraTarget = UObject::FindFunction("Function Engine.PlayerController.OnSetCameraTarget");

	Engine_OnSetCameraTarget_Parms OnSetCameraTarget_Parms;
	OnSetCameraTarget_Parms.inAction = inAction;
	ProcessEvent(pFnOnSetCameraTarget,NULL,&OnSetCameraTarget_Parms,NULL);
}

struct Engine_UnrealiableClientGotoState_Parms
{
	struct FName                                       StateName;                                        		// 0x000000 (0x0008)              
};

void APlayerController::UnrealiableClientGotoState(struct FName StateName)
{
	static UFieldFunc* pFnUnrealiableClientGotoState = NULL;
	if(!pFnUnrealiableClientGotoState)
		pFnUnrealiableClientGotoState = UObject::FindFunction("Function Engine.PlayerController.UnrealiableClientGotoState");

	Engine_UnrealiableClientGotoState_Parms UnrealiableClientGotoState_Parms;
	memcpy(&UnrealiableClientGotoState_Parms.StateName,&StateName,0x8);
	ProcessEvent(pFnUnrealiableClientGotoState,NULL,&UnrealiableClientGotoState_Parms,NULL);
}

struct Engine_ProcessMoveBaseSpectatingState_Parms
{
	float                                              DeltaRot;                                         		// 0x000000 (0x0004)              
	FVector3                                           outNewAccel;                                      		// 0x000004 (0x000C)              
};

void APlayerController::ProcessMoveBaseSpectatingState(float DeltaRot,FVector3* outNewAccel)
{
	static UFieldFunc* pFnProcessMoveBaseSpectatingState = NULL;
	if(!pFnProcessMoveBaseSpectatingState)
		pFnProcessMoveBaseSpectatingState = UObject::FindFunction("Function Engine.PlayerController.ProcessMoveBaseSpectatingState");

	Engine_ProcessMoveBaseSpectatingState_Parms ProcessMoveBaseSpectatingState_Parms;
	ProcessMoveBaseSpectatingState_Parms.DeltaRot = DeltaRot;
	pFnProcessMoveBaseSpectatingState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProcessMoveBaseSpectatingState,NULL,&ProcessMoveBaseSpectatingState_Parms,NULL);
	pFnProcessMoveBaseSpectatingState->FunctionFlags |= 0x400;
	if(outNewAccel)
		memcpy(outNewAccel,&ProcessMoveBaseSpectatingState_Parms.outNewAccel,0xC);
}

struct Engine_ClientSetHUD_Parms
{
	class UClass*                                      newHUDType;                                       		// 0x000000 (0x0004)              
	class UClass*                                      newScoringType;                                   		// 0x000004 (0x0004)              
};

void APlayerController::ClientSetHUD(class UClass* newHUDType,class UClass* newScoringType)
{
	static UFieldFunc* pFnClientSetHUD = NULL;
	if(!pFnClientSetHUD)
		pFnClientSetHUD = UObject::FindFunction("Function Engine.PlayerController.ClientSetHUD");

	Engine_ClientSetHUD_Parms ClientSetHUD_Parms;
	ClientSetHUD_Parms.newHUDType = newHUDType;
	ClientSetHUD_Parms.newScoringType = newScoringType;
	ProcessEvent(pFnClientSetHUD,NULL,&ClientSetHUD_Parms,NULL);
}

struct Engine_NotifyPeerDisconnectHost_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	//int                                                PeerIdx;                                          		// 0x000008 (0x0004)              
};

void APlayerController::NotifyPeerDisconnectHost(struct FUniqueNetId PeerNetId)
{
	static UFieldFunc* pFnNotifyPeerDisconnectHost = NULL;
	if(!pFnNotifyPeerDisconnectHost)
		pFnNotifyPeerDisconnectHost = UObject::FindFunction("Function Engine.PlayerController.NotifyPeerDisconnectHost");

	Engine_NotifyPeerDisconnectHost_Parms NotifyPeerDisconnectHost_Parms;
	memcpy(&NotifyPeerDisconnectHost_Parms.PeerNetId,&PeerNetId,0x8);
	ProcessEvent(pFnNotifyPeerDisconnectHost,NULL,&NotifyPeerDisconnectHost_Parms,NULL);
}

struct Engine_GetRegisteredPlayersInSession_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	TArray<struct FUniqueNetId>                        OutRegisteredPlayers;                             		// 0x000008 (0x000C)              
};

void APlayerController::GetRegisteredPlayersInSession(struct FName SessionName,TArray<struct FUniqueNetId>* OutRegisteredPlayers)
{
	static UFieldFunc* pFnGetRegisteredPlayersInSession = NULL;
	if(!pFnGetRegisteredPlayersInSession)
		pFnGetRegisteredPlayersInSession = UObject::FindFunction("Function Engine.PlayerController.GetRegisteredPlayersInSession");

	Engine_GetRegisteredPlayersInSession_Parms GetRegisteredPlayersInSession_Parms;
	memcpy(&GetRegisteredPlayersInSession_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnGetRegisteredPlayersInSession,NULL,&GetRegisteredPlayersInSession_Parms,NULL);
	if(OutRegisteredPlayers)
		memcpy(OutRegisteredPlayers,&GetRegisteredPlayersInSession_Parms.OutRegisteredPlayers,0xC);
}

struct Engine_ClientIgnoreMoveInput_Parms
{
	unsigned long                                      bIgnore : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::ClientIgnoreMoveInput(bool bIgnore)
{
	static UFieldFunc* pFnClientIgnoreMoveInput = NULL;
	if(!pFnClientIgnoreMoveInput)
		pFnClientIgnoreMoveInput = UObject::FindFunction("Function Engine.PlayerController.ClientIgnoreMoveInput");

	Engine_ClientIgnoreMoveInput_Parms ClientIgnoreMoveInput_Parms;
	ClientIgnoreMoveInput_Parms.bIgnore = bIgnore;
	ProcessEvent(pFnClientIgnoreMoveInput,NULL,&ClientIgnoreMoveInput_Parms,NULL);
}

struct Engine_IsControllerTiltActive_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsControllerTiltActive()
{
	static UFieldFunc* pFnIsControllerTiltActive = NULL;
	if(!pFnIsControllerTiltActive)
		pFnIsControllerTiltActive = UObject::FindFunction("Function Engine.PlayerController.IsControllerTiltActive");

	Engine_IsControllerTiltActive_Parms IsControllerTiltActive_Parms;
	pFnIsControllerTiltActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsControllerTiltActive,NULL,&IsControllerTiltActive_Parms,NULL);
	pFnIsControllerTiltActive->FunctionFlags |= 0x400;
	return IsControllerTiltActive_Parms.ReturnValue;
}

struct Engine_GetPooledAudioComponent_Parms
{
	class USoundCue*                                   ASound;                                           		// 0x000000 (0x0004)              
	class AActor*                                      SourceActor;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bStopWhenOwnerDestroyed : 1;                      		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bUseLocation : 1;                                 		// 0x00000C (0x0004) [0x00000001] 
	FVector3                                           SourceLocation;                                   		// 0x000010 (0x000C)              
	class UAudioComponent*                             ReturnValue;                                      		// 0x00001C (0x0004)              
};

class UAudioComponent* APlayerController::GetPooledAudioComponent(class USoundCue* ASound,class AActor* SourceActor,bool bStopWhenOwnerDestroyed,bool bUseLocation,FVector3 SourceLocation)
{
	static UFieldFunc* pFnGetPooledAudioComponent = NULL;
	if(!pFnGetPooledAudioComponent)
		pFnGetPooledAudioComponent = UObject::FindFunction("Function Engine.PlayerController.GetPooledAudioComponent");

	Engine_GetPooledAudioComponent_Parms GetPooledAudioComponent_Parms;
	GetPooledAudioComponent_Parms.ASound = ASound;
	GetPooledAudioComponent_Parms.SourceActor = SourceActor;
	GetPooledAudioComponent_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	GetPooledAudioComponent_Parms.bUseLocation = bUseLocation;
	memcpy(&GetPooledAudioComponent_Parms.SourceLocation,&SourceLocation,0xC);
	pFnGetPooledAudioComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPooledAudioComponent,NULL,&GetPooledAudioComponent_Parms,NULL);
	pFnGetPooledAudioComponent->FunctionFlags |= 0x400;
	return GetPooledAudioComponent_Parms.ReturnValue;
}

struct Engine_LocalTravel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void APlayerController::LocalTravel(struct FString URL)
{
	static UFieldFunc* pFnLocalTravel = NULL;
	if(!pFnLocalTravel)
		pFnLocalTravel = UObject::FindFunction("Function Engine.PlayerController.LocalTravel");

	Engine_LocalTravel_Parms LocalTravel_Parms;
	memcpy(&LocalTravel_Parms.URL,&URL,0xC);
	ProcessEvent(pFnLocalTravel,NULL,&LocalTravel_Parms,NULL);
}

struct Engine_LimitViewRotation_Parms
{
	FRotator                                           ViewRotation;                                     		// 0x000000 (0x000C)              
	float                                              ViewPitchMin;                                     		// 0x00000C (0x0004)              
	float                                              ViewPitchMax;                                     		// 0x000010 (0x0004)              
	FRotator                                           ReturnValue;                                      		// 0x000014 (0x000C)              
};

FRotator APlayerController::LimitViewRotation(FRotator ViewRotation,float ViewPitchMin,float ViewPitchMax)
{
	static UFieldFunc* pFnLimitViewRotation = NULL;
	if(!pFnLimitViewRotation)
		pFnLimitViewRotation = UObject::FindFunction("Function Engine.PlayerController.LimitViewRotation");

	Engine_LimitViewRotation_Parms LimitViewRotation_Parms;
	memcpy(&LimitViewRotation_Parms.ViewRotation,&ViewRotation,0xC);
	LimitViewRotation_Parms.ViewPitchMin = ViewPitchMin;
	LimitViewRotation_Parms.ViewPitchMax = ViewPitchMax;
	ProcessEvent(pFnLimitViewRotation,NULL,&LimitViewRotation_Parms,NULL);
	return LimitViewRotation_Parms.ReturnValue;
}

struct Engine_IsLookInputIgnored_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsLookInputIgnored()
{
	static UFieldFunc* pFnIsLookInputIgnored = NULL;
	if(!pFnIsLookInputIgnored)
		pFnIsLookInputIgnored = UObject::FindFunction("Function Engine.PlayerController.IsLookInputIgnored");

	Engine_IsLookInputIgnored_Parms IsLookInputIgnored_Parms;
	pFnIsLookInputIgnored->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsLookInputIgnored,NULL,&IsLookInputIgnored_Parms,NULL);
	pFnIsLookInputIgnored->FunctionFlags |= 0x400;
	return IsLookInputIgnored_Parms.ReturnValue;
}

struct Engine_IsMoveInputIgnored_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsMoveInputIgnored()
{
	static UFieldFunc* pFnIsMoveInputIgnored = NULL;
	if(!pFnIsMoveInputIgnored)
		pFnIsMoveInputIgnored = UObject::FindFunction("Function Engine.PlayerController.IsMoveInputIgnored");

	Engine_IsMoveInputIgnored_Parms IsMoveInputIgnored_Parms;
	pFnIsMoveInputIgnored->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsMoveInputIgnored,NULL,&IsMoveInputIgnored_Parms,NULL);
	pFnIsMoveInputIgnored->FunctionFlags |= 0x400;
	return IsMoveInputIgnored_Parms.ReturnValue;
}

struct Engine_AddCheats_Parms
{
};

void APlayerController::AddCheats()
{
	static UFieldFunc* pFnAddCheats = NULL;
	if(!pFnAddCheats)
		pFnAddCheats = UObject::FindFunction("Function Engine.PlayerController.AddCheats");

	Engine_AddCheats_Parms AddCheats_Parms;
	ProcessEvent(pFnAddCheats,NULL,&AddCheats_Parms,NULL);
}

struct Engine_ViewAPlayer_Parms
{
	int                                                Dir;                                              		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//int                                                CurrentIndex;                                     		// 0x000008 (0x0004)              
	//int                                                NewIndex;                                         		// 0x00000C (0x0004)              
	//class APlayerReplicationInfo*                      PRI;                                              		// 0x000010 (0x0004)              
	//unsigned long                                      bSuccess : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
};

void APlayerController::ViewAPlayer(int Dir)
{
	static UFieldFunc* pFnViewAPlayer = NULL;
	if(!pFnViewAPlayer)
		pFnViewAPlayer = UObject::FindFunction("Function Engine.PlayerController.ViewAPlayer");

	Engine_ViewAPlayer_Parms ViewAPlayer_Parms;
	ViewAPlayer_Parms.Dir = Dir;
	ProcessEvent(pFnViewAPlayer,NULL,&ViewAPlayer_Parms,NULL);
}

struct Engine_ClientConvolve_Parms
{
	struct FString                                     C;                                                		// 0x000000 (0x000C)              
	int                                                H;                                                		// 0x00000C (0x0004)              
};

void APlayerController::ClientConvolve(struct FString C,int H)
{
	static UFieldFunc* pFnClientConvolve = NULL;
	if(!pFnClientConvolve)
		pFnClientConvolve = UObject::FindFunction("Function Engine.PlayerController.ClientConvolve");

	Engine_ClientConvolve_Parms ClientConvolve_Parms;
	memcpy(&ClientConvolve_Parms.C,&C,0xC);
	ClientConvolve_Parms.H = H;
	pFnClientConvolve->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientConvolve,NULL,&ClientConvolve_Parms,NULL);
	pFnClientConvolve->FunctionFlags |= 0x400;
}

struct Engine_GetPartyGameTypeName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerController::GetPartyGameTypeName()
{
	static UFieldFunc* pFnGetPartyGameTypeName = NULL;
	if(!pFnGetPartyGameTypeName)
		pFnGetPartyGameTypeName = UObject::FindFunction("Function Engine.PlayerController.GetPartyGameTypeName");

	Engine_GetPartyGameTypeName_Parms GetPartyGameTypeName_Parms;
	ProcessEvent(pFnGetPartyGameTypeName,NULL,&GetPartyGameTypeName_Parms,NULL);
	return GetPartyGameTypeName_Parms.ReturnValue;
}

struct Engine_ShowGameState_Parms
{
};

void APlayerController::ShowGameState()
{
	static UFieldFunc* pFnShowGameState = NULL;
	if(!pFnShowGameState)
		pFnShowGameState = UObject::FindFunction("Function Engine.PlayerController.ShowGameState");

	Engine_ShowGameState_Parms ShowGameState_Parms;
	ProcessEvent(pFnShowGameState,NULL,&ShowGameState_Parms,NULL);
}

struct Engine_ServerCauseEvent_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
};

void APlayerController::ServerCauseEvent(struct FString EventName)
{
	static UFieldFunc* pFnServerCauseEvent = NULL;
	if(!pFnServerCauseEvent)
		pFnServerCauseEvent = UObject::FindFunction("Function Engine.PlayerController.ServerCauseEvent");

	Engine_ServerCauseEvent_Parms ServerCauseEvent_Parms;
	memcpy(&ServerCauseEvent_Parms.EventName,&EventName,0xC);
	ProcessEvent(pFnServerCauseEvent,NULL,&ServerCauseEvent_Parms,NULL);
}

struct Engine_ClientReset_Parms
{
};

void APlayerController::ClientReset()
{
	static UFieldFunc* pFnClientReset = NULL;
	if(!pFnClientReset)
		pFnClientReset = UObject::FindFunction("Function Engine.PlayerController.ClientReset");

	Engine_ClientReset_Parms ClientReset_Parms;
	ProcessEvent(pFnClientReset,NULL,&ClientReset_Parms,NULL);
}

struct Engine_ClientRegisterHostStatGuid_Parms
{
	struct FString                                     StatGuid;                                         		// 0x000000 (0x000C)              
};

void APlayerController::ClientRegisterHostStatGuid(struct FString StatGuid)
{
	static UFieldFunc* pFnClientRegisterHostStatGuid = NULL;
	if(!pFnClientRegisterHostStatGuid)
		pFnClientRegisterHostStatGuid = UObject::FindFunction("Function Engine.PlayerController.ClientRegisterHostStatGuid");

	Engine_ClientRegisterHostStatGuid_Parms ClientRegisterHostStatGuid_Parms;
	memcpy(&ClientRegisterHostStatGuid_Parms.StatGuid,&StatGuid,0xC);
	ProcessEvent(pFnClientRegisterHostStatGuid,NULL,&ClientRegisterHostStatGuid_Parms,NULL);
}

struct Engine_SetCinematicMode_Parms
{
	unsigned long                                      bInCinematicMode : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bHidePlayer : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bAffectsHUD : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bAffectsMovement : 1;                             		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bAffectsTurning : 1;                              		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      bAffectsButtons : 1;                              		// 0x000014 (0x0004) [0x00000001] 
	//unsigned long                                      bAdjustMoveInput : 1;                             		// 0x000018 (0x0004) [0x00000001] 
	//unsigned long                                      bAdjustLookInput : 1;                             		// 0x00001C (0x0004) [0x00000001] 
};

void APlayerController::SetCinematicMode(bool bInCinematicMode,bool bHidePlayer,bool bAffectsHUD,bool bAffectsMovement,bool bAffectsTurning,bool bAffectsButtons)
{
	static UFieldFunc* pFnSetCinematicMode = NULL;
	if(!pFnSetCinematicMode)
		pFnSetCinematicMode = UObject::FindFunction("Function Engine.PlayerController.SetCinematicMode");

	Engine_SetCinematicMode_Parms SetCinematicMode_Parms;
	SetCinematicMode_Parms.bInCinematicMode = bInCinematicMode;
	SetCinematicMode_Parms.bHidePlayer = bHidePlayer;
	SetCinematicMode_Parms.bAffectsHUD = bAffectsHUD;
	SetCinematicMode_Parms.bAffectsMovement = bAffectsMovement;
	SetCinematicMode_Parms.bAffectsTurning = bAffectsTurning;
	SetCinematicMode_Parms.bAffectsButtons = bAffectsButtons;
	ProcessEvent(pFnSetCinematicMode,NULL,&SetCinematicMode_Parms,NULL);
}

struct Engine_CommandManagerBridge_Server_Parms
{
	struct FString                                     str;                                              		// 0x000000 (0x000C)              
};

void APlayerController::CommandManagerBridge_Server(struct FString str)
{
	static UFieldFunc* pFnCommandManagerBridge_Server = NULL;
	if(!pFnCommandManagerBridge_Server)
		pFnCommandManagerBridge_Server = UObject::FindFunction("Function Engine.PlayerController.CommandManagerBridge_Server");

	Engine_CommandManagerBridge_Server_Parms CommandManagerBridge_Server_Parms;
	memcpy(&CommandManagerBridge_Server_Parms.str,&str,0xC);
	pFnCommandManagerBridge_Server->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCommandManagerBridge_Server,NULL,&CommandManagerBridge_Server_Parms,NULL);
	pFnCommandManagerBridge_Server->FunctionFlags |= 0x400;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void APlayerController::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.PlayerController.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_IsLocalPlayerController_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsLocalPlayerController()
{
	static UFieldFunc* pFnIsLocalPlayerController = NULL;
	if(!pFnIsLocalPlayerController)
		pFnIsLocalPlayerController = UObject::FindFunction("Function Engine.PlayerController.IsLocalPlayerController");

	Engine_IsLocalPlayerController_Parms IsLocalPlayerController_Parms;
	pFnIsLocalPlayerController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsLocalPlayerController,NULL,&IsLocalPlayerController_Parms,NULL);
	pFnIsLocalPlayerController->FunctionFlags |= 0x400;
	return IsLocalPlayerController_Parms.ReturnValue;
}

struct Engine_DelayedPrepareMapChange_Parms
{
};

void APlayerController::DelayedPrepareMapChange()
{
	static UFieldFunc* pFnDelayedPrepareMapChange = NULL;
	if(!pFnDelayedPrepareMapChange)
		pFnDelayedPrepareMapChange = UObject::FindFunction("Function Engine.PlayerController.DelayedPrepareMapChange");

	Engine_DelayedPrepareMapChange_Parms DelayedPrepareMapChange_Parms;
	ProcessEvent(pFnDelayedPrepareMapChange,NULL,&DelayedPrepareMapChange_Parms,NULL);
}

struct Engine_InitUniquePlayerId_Parms
{
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000000 (0x0004)              
	//class UOnlineGameSettings*                         GameSettings;                                     		// 0x000004 (0x0004)              
};

void APlayerController::InitUniquePlayerId()
{
	static UFieldFunc* pFnInitUniquePlayerId = NULL;
	if(!pFnInitUniquePlayerId)
		pFnInitUniquePlayerId = UObject::FindFunction("Function Engine.PlayerController.InitUniquePlayerId");

	Engine_InitUniquePlayerId_Parms InitUniquePlayerId_Parms;
	ProcessEvent(pFnInitUniquePlayerId,NULL,&InitUniquePlayerId_Parms,NULL);
}

struct Engine_ClientRegisterForArbitration_Parms
{
};

void APlayerController::ClientRegisterForArbitration()
{
	static UFieldFunc* pFnClientRegisterForArbitration = NULL;
	if(!pFnClientRegisterForArbitration)
		pFnClientRegisterForArbitration = UObject::FindFunction("Function Engine.PlayerController.ClientRegisterForArbitration");

	Engine_ClientRegisterForArbitration_Parms ClientRegisterForArbitration_Parms;
	ProcessEvent(pFnClientRegisterForArbitration,NULL,&ClientRegisterForArbitration_Parms,NULL);
}

struct Engine_Suicide_Parms
{
};

void APlayerController::Suicide()
{
	static UFieldFunc* pFnSuicide = NULL;
	if(!pFnSuicide)
		pFnSuicide = UObject::FindFunction("Function Engine.PlayerController.Suicide");

	Engine_Suicide_Parms Suicide_Parms;
	ProcessEvent(pFnSuicide,NULL,&Suicide_Parms,NULL);
}

struct Engine_SyncState_Parms
{
	unsigned long                                      bForce : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SyncState(bool bForce)
{
	static UFieldFunc* pFnSyncState = NULL;
	if(!pFnSyncState)
		pFnSyncState = UObject::FindFunction("Function Engine.PlayerController.SyncState");

	Engine_SyncState_Parms SyncState_Parms;
	SyncState_Parms.bForce = bForce;
	ProcessEvent(pFnSyncState,NULL,&SyncState_Parms,NULL);
}

struct Engine_ClientAckGoodMove_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
};

void APlayerController::ClientAckGoodMove(double TimeStamp)
{
	static UFieldFunc* pFnClientAckGoodMove = NULL;
	if(!pFnClientAckGoodMove)
		pFnClientAckGoodMove = UObject::FindFunction("Function Engine.PlayerController.ClientAckGoodMove");

	Engine_ClientAckGoodMove_Parms ClientAckGoodMove_Parms;
	ClientAckGoodMove_Parms.TimeStamp = TimeStamp;
	ProcessEvent(pFnClientAckGoodMove,NULL,&ClientAckGoodMove_Parms,NULL);
}

struct Engine_Restart_Parms
{
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::Restart(bool bVehicleTransition)
{
	static UFieldFunc* pFnRestart = NULL;
	if(!pFnRestart)
		pFnRestart = UObject::FindFunction("Function Engine.PlayerController.Restart");

	Engine_Restart_Parms Restart_Parms;
	Restart_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnRestart,NULL,&Restart_Parms,NULL);
}

struct Engine_ClientVoiceMessage_Parms
{
	class APlayerReplicationInfo*                      Sender;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      Recipient;                                        		// 0x000004 (0x0004)              
	struct FName                                       MessageType;                                      		// 0x000008 (0x0008)              
	unsigned char                                      messageID;                                        		// 0x000010 (0x0001)              
};

void APlayerController::ClientVoiceMessage(class APlayerReplicationInfo* Sender,class APlayerReplicationInfo* Recipient,struct FName MessageType,unsigned char messageID)
{
	static UFieldFunc* pFnClientVoiceMessage = NULL;
	if(!pFnClientVoiceMessage)
		pFnClientVoiceMessage = UObject::FindFunction("Function Engine.PlayerController.ClientVoiceMessage");

	Engine_ClientVoiceMessage_Parms ClientVoiceMessage_Parms;
	ClientVoiceMessage_Parms.Sender = Sender;
	ClientVoiceMessage_Parms.Recipient = Recipient;
	memcpy(&ClientVoiceMessage_Parms.MessageType,&MessageType,0x8);
	ClientVoiceMessage_Parms.messageID = messageID;
	ProcessEvent(pFnClientVoiceMessage,NULL,&ClientVoiceMessage_Parms,NULL);
}

struct Engine_PlayerMove_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void APlayerController::PlayerMove(float DeltaTime)
{
	static UFieldFunc* pFnPlayerMove = NULL;
	if(!pFnPlayerMove)
		pFnPlayerMove = UObject::FindFunction("Function Engine.PlayerController.PlayerMove");

	Engine_PlayerMove_Parms PlayerMove_Parms;
	PlayerMove_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnPlayerMove,NULL,&PlayerMove_Parms,NULL);
}

struct Engine_CE_Parms
{
	struct FName                                       EventName;                                        		// 0x000000 (0x0008)              
};

void APlayerController::CE(struct FName EventName)
{
	static UFieldFunc* pFnCE = NULL;
	if(!pFnCE)
		pFnCE = UObject::FindFunction("Function Engine.PlayerController.CE");

	Engine_CE_Parms CE_Parms;
	memcpy(&CE_Parms.EventName,&EventName,0x8);
	ProcessEvent(pFnCE,NULL,&CE_Parms,NULL);
}

struct Engine_AllowTextMessage_Parms
{
	struct FString                                     msg;                                              		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000010 (0x0004)              
};

bool APlayerController::AllowTextMessage(struct FString msg)
{
	static UFieldFunc* pFnAllowTextMessage = NULL;
	if(!pFnAllowTextMessage)
		pFnAllowTextMessage = UObject::FindFunction("Function Engine.PlayerController.AllowTextMessage");

	Engine_AllowTextMessage_Parms AllowTextMessage_Parms;
	memcpy(&AllowTextMessage_Parms.msg,&msg,0xC);
	ProcessEvent(pFnAllowTextMessage,NULL,&AllowTextMessage_Parms,NULL);
	return AllowTextMessage_Parms.ReturnValue;
}

struct Engine_SetOnlyUseControllerTiltInput_Parms
{
	unsigned long                                      bActive : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SetOnlyUseControllerTiltInput(bool bActive)
{
	static UFieldFunc* pFnSetOnlyUseControllerTiltInput = NULL;
	if(!pFnSetOnlyUseControllerTiltInput)
		pFnSetOnlyUseControllerTiltInput = UObject::FindFunction("Function Engine.PlayerController.SetOnlyUseControllerTiltInput");

	Engine_SetOnlyUseControllerTiltInput_Parms SetOnlyUseControllerTiltInput_Parms;
	SetOnlyUseControllerTiltInput_Parms.bActive = bActive;
	pFnSetOnlyUseControllerTiltInput->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOnlyUseControllerTiltInput,NULL,&SetOnlyUseControllerTiltInput_Parms,NULL);
	pFnSetOnlyUseControllerTiltInput->FunctionFlags |= 0x400;
}

struct Engine_OnDestroy_Parms
{
	class USeqAct_Destroy*                             Action;                                           		// 0x000000 (0x0004)              
};

void APlayerController::OnDestroy(class USeqAct_Destroy* Action)
{
	static UFieldFunc* pFnOnDestroy = NULL;
	if(!pFnOnDestroy)
		pFnOnDestroy = UObject::FindFunction("Function Engine.PlayerController.OnDestroy");

	Engine_OnDestroy_Parms OnDestroy_Parms;
	OnDestroy_Parms.Action = Action;
	ProcessEvent(pFnOnDestroy,NULL,&OnDestroy_Parms,NULL);
}

struct Engine_PathClear_Parms
{
};

void APlayerController::PathClear()
{
	static UFieldFunc* pFnPathClear = NULL;
	if(!pFnPathClear)
		pFnPathClear = UObject::FindFunction("Function Engine.PlayerController.PathClear");

	Engine_PathClear_Parms PathClear_Parms;
	ProcessEvent(pFnPathClear,NULL,&PathClear_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void APlayerController::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.PlayerController.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_GetRumbleScale_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
	//float                                              retval;                                           		// 0x000004 (0x0004)              
};

float APlayerController::GetRumbleScale()
{
	static UFieldFunc* pFnGetRumbleScale = NULL;
	if(!pFnGetRumbleScale)
		pFnGetRumbleScale = UObject::FindFunction("Function Engine.PlayerController.GetRumbleScale");

	Engine_GetRumbleScale_Parms GetRumbleScale_Parms;
	ProcessEvent(pFnGetRumbleScale,NULL,&GetRumbleScale_Parms,NULL);
	return GetRumbleScale_Parms.ReturnValue;
}

struct Engine_NotifyTakeHit_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000004 (0x000C)              
	int                                                Damage;                                           		// 0x000010 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000014 (0x0004)              
	FVector3                                           Momentum;                                         		// 0x000018 (0x000C)              
};

void APlayerController::NotifyTakeHit(class AController* InstigatedBy,FVector3 HitLocation,int Damage,class UClass* DamageType,FVector3 Momentum)
{
	static UFieldFunc* pFnNotifyTakeHit = NULL;
	if(!pFnNotifyTakeHit)
		pFnNotifyTakeHit = UObject::FindFunction("Function Engine.PlayerController.NotifyTakeHit");

	Engine_NotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy(&NotifyTakeHit_Parms.HitLocation,&HitLocation,0xC);
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy(&NotifyTakeHit_Parms.Momentum,&Momentum,0xC);
	ProcessEvent(pFnNotifyTakeHit,NULL,&NotifyTakeHit_Parms,NULL);
}

struct Engine_NotifyNotAllPlayersCanJoinInvite_Parms
{
};

void APlayerController::NotifyNotAllPlayersCanJoinInvite()
{
	static UFieldFunc* pFnNotifyNotAllPlayersCanJoinInvite = NULL;
	if(!pFnNotifyNotAllPlayersCanJoinInvite)
		pFnNotifyNotAllPlayersCanJoinInvite = UObject::FindFunction("Function Engine.PlayerController.NotifyNotAllPlayersCanJoinInvite");

	Engine_NotifyNotAllPlayersCanJoinInvite_Parms NotifyNotAllPlayersCanJoinInvite_Parms;
	ProcessEvent(pFnNotifyNotAllPlayersCanJoinInvite,NULL,&NotifyNotAllPlayersCanJoinInvite_Parms,NULL);
}

struct Engine_HearSoundFinished_Parms
{
	class UAudioComponent*                             AC;                                               		// 0x000000 (0x0004)              
};

void APlayerController::HearSoundFinished(class UAudioComponent* AC)
{
	static UFieldFunc* pFnHearSoundFinished = NULL;
	if(!pFnHearSoundFinished)
		pFnHearSoundFinished = UObject::FindFunction("Function Engine.PlayerController.HearSoundFinished");

	Engine_HearSoundFinished_Parms HearSoundFinished_Parms;
	HearSoundFinished_Parms.AC = AC;
	ProcessEvent(pFnHearSoundFinished,NULL,&HearSoundFinished_Parms,NULL);
}

struct Engine_SpawnDefaultHUD_Parms
{
};

void APlayerController::SpawnDefaultHUD()
{
	static UFieldFunc* pFnSpawnDefaultHUD = NULL;
	if(!pFnSpawnDefaultHUD)
		pFnSpawnDefaultHUD = UObject::FindFunction("Function Engine.PlayerController.SpawnDefaultHUD");

	Engine_SpawnDefaultHUD_Parms SpawnDefaultHUD_Parms;
	ProcessEvent(pFnSpawnDefaultHUD,NULL,&SpawnDefaultHUD_Parms,NULL);
}

struct Engine_ServerRegisteredForArbitration_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::ServerRegisteredForArbitration(bool bWasSuccessful)
{
	static UFieldFunc* pFnServerRegisteredForArbitration = NULL;
	if(!pFnServerRegisteredForArbitration)
		pFnServerRegisteredForArbitration = UObject::FindFunction("Function Engine.PlayerController.ServerRegisteredForArbitration");

	Engine_ServerRegisteredForArbitration_Parms ServerRegisteredForArbitration_Parms;
	ServerRegisteredForArbitration_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnServerRegisteredForArbitration,NULL,&ServerRegisteredForArbitration_Parms,NULL);
}

struct Engine_GetSyncStateTimeout_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APlayerController::GetSyncStateTimeout()
{
	static UFieldFunc* pFnGetSyncStateTimeout = NULL;
	if(!pFnGetSyncStateTimeout)
		pFnGetSyncStateTimeout = UObject::FindFunction("Function Engine.PlayerController.GetSyncStateTimeout");

	Engine_GetSyncStateTimeout_Parms GetSyncStateTimeout_Parms;
	ProcessEvent(pFnGetSyncStateTimeout,NULL,&GetSyncStateTimeout_Parms,NULL);
	return GetSyncStateTimeout_Parms.ReturnValue;
}

struct Engine_StartFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void APlayerController::StartFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStartFire = NULL;
	if(!pFnStartFire)
		pFnStartFire = UObject::FindFunction("Function Engine.PlayerController.StartFire");

	Engine_StartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStartFire,NULL,&StartFire_Parms,NULL);
}

struct Engine_SeamlessTravelTo_Parms
{
	class APlayerController*                           NewPC;                                            		// 0x000000 (0x0004)              
};

void APlayerController::SeamlessTravelTo(class APlayerController* NewPC)
{
	static UFieldFunc* pFnSeamlessTravelTo = NULL;
	if(!pFnSeamlessTravelTo)
		pFnSeamlessTravelTo = UObject::FindFunction("Function Engine.PlayerController.SeamlessTravelTo");

	Engine_SeamlessTravelTo_Parms SeamlessTravelTo_Parms;
	SeamlessTravelTo_Parms.NewPC = NewPC;
	ProcessEvent(pFnSeamlessTravelTo,NULL,&SeamlessTravelTo_Parms,NULL);
}

struct Engine_Mutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x000000 (0x000C)              
};

void APlayerController::Mutate(struct FString MutateString)
{
	static UFieldFunc* pFnMutate = NULL;
	if(!pFnMutate)
		pFnMutate = UObject::FindFunction("Function Engine.PlayerController.Mutate");

	Engine_Mutate_Parms Mutate_Parms;
	memcpy(&Mutate_Parms.MutateString,&MutateString,0xC);
	ProcessEvent(pFnMutate,NULL,&Mutate_Parms,NULL);
}

struct Engine_ClientIgnoreLookInput_Parms
{
	unsigned long                                      bIgnore : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::ClientIgnoreLookInput(bool bIgnore)
{
	static UFieldFunc* pFnClientIgnoreLookInput = NULL;
	if(!pFnClientIgnoreLookInput)
		pFnClientIgnoreLookInput = UObject::FindFunction("Function Engine.PlayerController.ClientIgnoreLookInput");

	Engine_ClientIgnoreLookInput_Parms ClientIgnoreLookInput_Parms;
	ClientIgnoreLookInput_Parms.bIgnore = bIgnore;
	ProcessEvent(pFnClientIgnoreLookInput,NULL,&ClientIgnoreLookInput_Parms,NULL);
}

struct Engine_ClientUpdatePosition_Parms
{
};

void APlayerController::ClientUpdatePosition()
{
	static UFieldFunc* pFnClientUpdatePosition = NULL;
	if(!pFnClientUpdatePosition)
		pFnClientUpdatePosition = UObject::FindFunction("Function Engine.PlayerController.ClientUpdatePosition");

	Engine_ClientUpdatePosition_Parms ClientUpdatePosition_Parms;
	pFnClientUpdatePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientUpdatePosition,NULL,&ClientUpdatePosition_Parms,NULL);
	pFnClientUpdatePosition->FunctionFlags |= 0x400;
}

struct Engine_SetRumbleScale_Parms
{
	float                                              ScaleBy;                                          		// 0x000000 (0x0004)              
};

void APlayerController::SetRumbleScale(float ScaleBy)
{
	static UFieldFunc* pFnSetRumbleScale = NULL;
	if(!pFnSetRumbleScale)
		pFnSetRumbleScale = UObject::FindFunction("Function Engine.PlayerController.SetRumbleScale");

	Engine_SetRumbleScale_Parms SetRumbleScale_Parms;
	SetRumbleScale_Parms.ScaleBy = ScaleBy;
	ProcessEvent(pFnSetRumbleScale,NULL,&SetRumbleScale_Parms,NULL);
}

struct Engine_ClientMutePlayer_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000008 (0x0004)              
};

void APlayerController::ClientMutePlayer(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnClientMutePlayer = NULL;
	if(!pFnClientMutePlayer)
		pFnClientMutePlayer = UObject::FindFunction("Function Engine.PlayerController.ClientMutePlayer");

	Engine_ClientMutePlayer_Parms ClientMutePlayer_Parms;
	memcpy(&ClientMutePlayer_Parms.PlayerNetId,&PlayerNetId,0x8);
	ProcessEvent(pFnClientMutePlayer,NULL,&ClientMutePlayer_Parms,NULL);
}

struct Engine_PawnDied_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void APlayerController::PawnDied(class APawn* P)
{
	static UFieldFunc* pFnPawnDied = NULL;
	if(!pFnPawnDied)
		pFnPawnDied = UObject::FindFunction("Function Engine.PlayerController.PawnDied");

	Engine_PawnDied_Parms PawnDied_Parms;
	PawnDied_Parms.P = P;
	ProcessEvent(pFnPawnDied,NULL,&PawnDied_Parms,NULL);
}

struct Engine_GetFOVAngle_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APlayerController::GetFOVAngle()
{
	static UFieldFunc* pFnGetFOVAngle = NULL;
	if(!pFnGetFOVAngle)
		pFnGetFOVAngle = UObject::FindFunction("Function Engine.PlayerController.GetFOVAngle");

	Engine_GetFOVAngle_Parms GetFOVAngle_Parms;
	pFnGetFOVAngle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFOVAngle,NULL,&GetFOVAngle_Parms,NULL);
	pFnGetFOVAngle->FunctionFlags |= 0x400;
	return GetFOVAngle_Parms.ReturnValue;
}

struct Engine_WrapGivePawn_Parms
{
	class APawn*                                       NewPawn;                                          		// 0x000000 (0x0004)              
};

void APlayerController::WrapGivePawn(class APawn* NewPawn)
{
	static UFieldFunc* pFnWrapGivePawn = NULL;
	if(!pFnWrapGivePawn)
		pFnWrapGivePawn = UObject::FindFunction("Function Engine.PlayerController.WrapGivePawn");

	Engine_WrapGivePawn_Parms WrapGivePawn_Parms;
	WrapGivePawn_Parms.NewPawn = NewPawn;
	ProcessEvent(pFnWrapGivePawn,NULL,&WrapGivePawn_Parms,NULL);
}

struct Engine_CanRestartPlayer_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::CanRestartPlayer()
{
	static UFieldFunc* pFnCanRestartPlayer = NULL;
	if(!pFnCanRestartPlayer)
		pFnCanRestartPlayer = UObject::FindFunction("Function Engine.PlayerController.CanRestartPlayer");

	Engine_CanRestartPlayer_Parms CanRestartPlayer_Parms;
	ProcessEvent(pFnCanRestartPlayer,NULL,&CanRestartPlayer_Parms,NULL);
	return CanRestartPlayer_Parms.ReturnValue;
}

struct Engine_CleanUpAudioComponents_Parms
{
};

void APlayerController::CleanUpAudioComponents()
{
	static UFieldFunc* pFnCleanUpAudioComponents = NULL;
	if(!pFnCleanUpAudioComponents)
		pFnCleanUpAudioComponents = UObject::FindFunction("Function Engine.PlayerController.CleanUpAudioComponents");

	Engine_CleanUpAudioComponents_Parms CleanUpAudioComponents_Parms;
	pFnCleanUpAudioComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCleanUpAudioComponents,NULL,&CleanUpAudioComponents_Parms,NULL);
	pFnCleanUpAudioComponents->FunctionFlags |= 0x400;
}

struct Engine_ClientTravelToSession_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	class UClass*                                      SearchClass;                                      		// 0x000008 (0x0004)              
	unsigned char                                      PlatformSpecificInfo[0x50];                       		// 0x00000C (0x0050)              
	//class UOnlineGameSearch*                           Search;                                           		// 0x00005C (0x0004)              
	//class ULocalPlayer*                                LP;                                               		// 0x000060 (0x0004)              
	//struct FOnlineGameSearchResult                     SessionToJoin;                                    		// 0x000064 (0x0008)              
};

void APlayerController::ClientTravelToSession(struct FName SessionName,class UClass* SearchClass,unsigned char* PlatformSpecificInfo)
{
	static UFieldFunc* pFnClientTravelToSession = NULL;
	if(!pFnClientTravelToSession)
		pFnClientTravelToSession = UObject::FindFunction("Function Engine.PlayerController.ClientTravelToSession");

	Engine_ClientTravelToSession_Parms ClientTravelToSession_Parms;
	memcpy(&ClientTravelToSession_Parms.SessionName,&SessionName,0x8);
	ClientTravelToSession_Parms.SearchClass = SearchClass;
	memcpy(&ClientTravelToSession_Parms.PlatformSpecificInfo,&PlatformSpecificInfo,0x50);
	ProcessEvent(pFnClientTravelToSession,NULL,&ClientTravelToSession_Parms,NULL);
}

struct Engine_ClientArbitratedMatchEnded_Parms
{
};

void APlayerController::ClientArbitratedMatchEnded()
{
	static UFieldFunc* pFnClientArbitratedMatchEnded = NULL;
	if(!pFnClientArbitratedMatchEnded)
		pFnClientArbitratedMatchEnded = UObject::FindFunction("Function Engine.PlayerController.ClientArbitratedMatchEnded");

	Engine_ClientArbitratedMatchEnded_Parms ClientArbitratedMatchEnded_Parms;
	ProcessEvent(pFnClientArbitratedMatchEnded,NULL,&ClientArbitratedMatchEnded_Parms,NULL);
}

struct Engine_LevelStreamingStatusChanged_Parms
{
	class ULevelStreaming*                             LevelObject;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bNewShouldBeLoaded : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bNewShouldBeVisible : 1;                          		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bNewShouldBlockOnLoad : 1;                        		// 0x00000C (0x0004) [0x00000001] 
};

void APlayerController::LevelStreamingStatusChanged(class ULevelStreaming* LevelObject,bool bNewShouldBeLoaded,bool bNewShouldBeVisible,bool bNewShouldBlockOnLoad)
{
	static UFieldFunc* pFnLevelStreamingStatusChanged = NULL;
	if(!pFnLevelStreamingStatusChanged)
		pFnLevelStreamingStatusChanged = UObject::FindFunction("Function Engine.PlayerController.LevelStreamingStatusChanged");

	Engine_LevelStreamingStatusChanged_Parms LevelStreamingStatusChanged_Parms;
	LevelStreamingStatusChanged_Parms.LevelObject = LevelObject;
	LevelStreamingStatusChanged_Parms.bNewShouldBeLoaded = bNewShouldBeLoaded;
	LevelStreamingStatusChanged_Parms.bNewShouldBeVisible = bNewShouldBeVisible;
	LevelStreamingStatusChanged_Parms.bNewShouldBlockOnLoad = bNewShouldBlockOnLoad;
	ProcessEvent(pFnLevelStreamingStatusChanged,NULL,&LevelStreamingStatusChanged_Parms,NULL);
}

struct Engine_ClientDrawCoordinateSystem_Parms
{
	FVector3                                           AxisLoc;                                          		// 0x000000 (0x000C)              
	FRotator                                           AxisRot;                                          		// 0x00000C (0x000C)              
	float                                              Scale;                                            		// 0x000018 (0x0004)              
	unsigned long                                      bPersistentLines : 1;                             		// 0x00001C (0x0004) [0x00000001] 
};

void APlayerController::ClientDrawCoordinateSystem(FVector3 AxisLoc,FRotator AxisRot,float Scale,bool bPersistentLines)
{
	static UFieldFunc* pFnClientDrawCoordinateSystem = NULL;
	if(!pFnClientDrawCoordinateSystem)
		pFnClientDrawCoordinateSystem = UObject::FindFunction("Function Engine.PlayerController.ClientDrawCoordinateSystem");

	Engine_ClientDrawCoordinateSystem_Parms ClientDrawCoordinateSystem_Parms;
	memcpy(&ClientDrawCoordinateSystem_Parms.AxisLoc,&AxisLoc,0xC);
	memcpy(&ClientDrawCoordinateSystem_Parms.AxisRot,&AxisRot,0xC);
	ClientDrawCoordinateSystem_Parms.Scale = Scale;
	ClientDrawCoordinateSystem_Parms.bPersistentLines = bPersistentLines;
	ProcessEvent(pFnClientDrawCoordinateSystem,NULL,&ClientDrawCoordinateSystem_Parms,NULL);
}

struct Engine_MovementKeyIsUpOnServer_Parms
{
};

void APlayerController::MovementKeyIsUpOnServer()
{
	static UFieldFunc* pFnMovementKeyIsUpOnServer = NULL;
	if(!pFnMovementKeyIsUpOnServer)
		pFnMovementKeyIsUpOnServer = UObject::FindFunction("Function Engine.PlayerController.MovementKeyIsUpOnServer");

	Engine_MovementKeyIsUpOnServer_Parms MovementKeyIsUpOnServer_Parms;
	pFnMovementKeyIsUpOnServer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMovementKeyIsUpOnServer,NULL,&MovementKeyIsUpOnServer_Parms,NULL);
	pFnMovementKeyIsUpOnServer->FunctionFlags |= 0x400;
}

struct Engine_EnableCheats_Parms
{
};

void APlayerController::EnableCheats()
{
	static UFieldFunc* pFnEnableCheats = NULL;
	if(!pFnEnableCheats)
		pFnEnableCheats = UObject::FindFunction("Function Engine.PlayerController.EnableCheats");

	Engine_EnableCheats_Parms EnableCheats_Parms;
	ProcessEvent(pFnEnableCheats,NULL,&EnableCheats_Parms,NULL);
}

struct Engine_ServerViewNextPlayer_Parms
{
};

void APlayerController::ServerViewNextPlayer()
{
	static UFieldFunc* pFnServerViewNextPlayer = NULL;
	if(!pFnServerViewNextPlayer)
		pFnServerViewNextPlayer = UObject::FindFunction("Function Engine.PlayerController.ServerViewNextPlayer");

	Engine_ServerViewNextPlayer_Parms ServerViewNextPlayer_Parms;
	ProcessEvent(pFnServerViewNextPlayer,NULL,&ServerViewNextPlayer_Parms,NULL);
}

struct Engine_PeerReceivedMigratedSession_Parms
{
	struct FUniqueNetId                                FromPeerNetId;                                    		// 0x000000 (0x0008)              
	struct FName                                       SessionName;                                      		// 0x000008 (0x0008)              
	class UClass*                                      SearchClass;                                      		// 0x000010 (0x0004)              
	unsigned char                                      PlatformSpecificInfo[0x50];                       		// 0x000014 (0x0050)              
	//struct FOnlineGameSearchResult                     SessionToJoin;                                    		// 0x000064 (0x0008)              
	//class ULocalPlayer*                                LP;                                               		// 0x00006C (0x0004)              
};

void APlayerController::PeerReceivedMigratedSession(struct FUniqueNetId FromPeerNetId,struct FName SessionName,class UClass* SearchClass,unsigned char* PlatformSpecificInfo)
{
	static UFieldFunc* pFnPeerReceivedMigratedSession = NULL;
	if(!pFnPeerReceivedMigratedSession)
		pFnPeerReceivedMigratedSession = UObject::FindFunction("Function Engine.PlayerController.PeerReceivedMigratedSession");

	Engine_PeerReceivedMigratedSession_Parms PeerReceivedMigratedSession_Parms;
	memcpy(&PeerReceivedMigratedSession_Parms.FromPeerNetId,&FromPeerNetId,0x8);
	memcpy(&PeerReceivedMigratedSession_Parms.SessionName,&SessionName,0x8);
	PeerReceivedMigratedSession_Parms.SearchClass = SearchClass;
	memcpy(&PeerReceivedMigratedSession_Parms.PlatformSpecificInfo,&PlatformSpecificInfo,0x50);
	ProcessEvent(pFnPeerReceivedMigratedSession,NULL,&PeerReceivedMigratedSession_Parms,NULL);
}

struct Engine_IsShowingSubtitles_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsShowingSubtitles()
{
	static UFieldFunc* pFnIsShowingSubtitles = NULL;
	if(!pFnIsShowingSubtitles)
		pFnIsShowingSubtitles = UObject::FindFunction("Function Engine.PlayerController.IsShowingSubtitles");

	Engine_IsShowingSubtitles_Parms IsShowingSubtitles_Parms;
	pFnIsShowingSubtitles->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsShowingSubtitles,NULL,&IsShowingSubtitles_Parms,NULL);
	pFnIsShowingSubtitles->FunctionFlags |= 0x400;
	return IsShowingSubtitles_Parms.ReturnValue;
}

struct Engine_ServerRestartGame_Parms
{
};

void APlayerController::ServerRestartGame()
{
	static UFieldFunc* pFnServerRestartGame = NULL;
	if(!pFnServerRestartGame)
		pFnServerRestartGame = UObject::FindFunction("Function Engine.PlayerController.ServerRestartGame");

	Engine_ServerRestartGame_Parms ServerRestartGame_Parms;
	ProcessEvent(pFnServerRestartGame,NULL,&ServerRestartGame_Parms,NULL);
}

struct Engine_MoveAutonomous_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	unsigned char                                      CompressedFlags;                                  		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	FVector3                                           newAccel;                                         		// 0x000008 (0x000C)              
	FRotator                                           DeltaRot;                                         		// 0x000014 (0x000C)              
};

void APlayerController::MoveAutonomous(float DeltaTime,unsigned char CompressedFlags,FVector3 newAccel,FRotator DeltaRot)
{
	static UFieldFunc* pFnMoveAutonomous = NULL;
	if(!pFnMoveAutonomous)
		pFnMoveAutonomous = UObject::FindFunction("Function Engine.PlayerController.MoveAutonomous");

	Engine_MoveAutonomous_Parms MoveAutonomous_Parms;
	MoveAutonomous_Parms.DeltaTime = DeltaTime;
	MoveAutonomous_Parms.CompressedFlags = CompressedFlags;
	memcpy(&MoveAutonomous_Parms.newAccel,&newAccel,0xC);
	memcpy(&MoveAutonomous_Parms.DeltaRot,&DeltaRot,0xC);
	pFnMoveAutonomous->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMoveAutonomous,NULL,&MoveAutonomous_Parms,NULL);
	pFnMoveAutonomous->FunctionFlags |= 0x400;
}

struct Engine_ClientWasKicked_Parms
{
};

void APlayerController::ClientWasKicked()
{
	static UFieldFunc* pFnClientWasKicked = NULL;
	if(!pFnClientWasKicked)
		pFnClientWasKicked = UObject::FindFunction("Function Engine.PlayerController.ClientWasKicked");

	Engine_ClientWasKicked_Parms ClientWasKicked_Parms;
	ProcessEvent(pFnClientWasKicked,NULL,&ClientWasKicked_Parms,NULL);
}

struct Engine_ServerChangeName_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void APlayerController::ServerChangeName(struct FString S)
{
	static UFieldFunc* pFnServerChangeName = NULL;
	if(!pFnServerChangeName)
		pFnServerChangeName = UObject::FindFunction("Function Engine.PlayerController.ServerChangeName");

	Engine_ServerChangeName_Parms ServerChangeName_Parms;
	memcpy(&ServerChangeName_Parms.S,&S,0xC);
	ProcessEvent(pFnServerChangeName,NULL,&ServerChangeName_Parms,NULL);
}

struct Engine_AdjustFOV_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void APlayerController::AdjustFOV(float DeltaTime)
{
	static UFieldFunc* pFnAdjustFOV = NULL;
	if(!pFnAdjustFOV)
		pFnAdjustFOV = UObject::FindFunction("Function Engine.PlayerController.AdjustFOV");

	Engine_AdjustFOV_Parms AdjustFOV_Parms;
	AdjustFOV_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnAdjustFOV,NULL,&AdjustFOV_Parms,NULL);
}

struct Engine_GetRollRotationDelta_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float APlayerController::GetRollRotationDelta(float fDeltaTime)
{
	static UFieldFunc* pFnGetRollRotationDelta = NULL;
	if(!pFnGetRollRotationDelta)
		pFnGetRollRotationDelta = UObject::FindFunction("Function Engine.PlayerController.GetRollRotationDelta");

	Engine_GetRollRotationDelta_Parms GetRollRotationDelta_Parms;
	GetRollRotationDelta_Parms.fDeltaTime = fDeltaTime;
	ProcessEvent(pFnGetRollRotationDelta,NULL,&GetRollRotationDelta_Parms,NULL);
	return GetRollRotationDelta_Parms.ReturnValue;
}

struct Engine_OnControllerChanged_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bIsConnected : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000008 (0x0004)              
};

void APlayerController::OnControllerChanged(int ControllerId,bool bIsConnected)
{
	static UFieldFunc* pFnOnControllerChanged = NULL;
	if(!pFnOnControllerChanged)
		pFnOnControllerChanged = UObject::FindFunction("Function Engine.PlayerController.OnControllerChanged");

	Engine_OnControllerChanged_Parms OnControllerChanged_Parms;
	OnControllerChanged_Parms.ControllerId = ControllerId;
	OnControllerChanged_Parms.bIsConnected = bIsConnected;
	ProcessEvent(pFnOnControllerChanged,NULL,&OnControllerChanged_Parms,NULL);
}

struct Engine_OnConsoleCommand_Parms
{
	class USeqAct_ConsoleCommand*                      inAction;                                         		// 0x000000 (0x0004)              
	//struct FString                                     Command;                                          		// 0x000004 (0x000C)              
};

void APlayerController::OnConsoleCommand(class USeqAct_ConsoleCommand* inAction)
{
	static UFieldFunc* pFnOnConsoleCommand = NULL;
	if(!pFnOnConsoleCommand)
		pFnOnConsoleCommand = UObject::FindFunction("Function Engine.PlayerController.OnConsoleCommand");

	Engine_OnConsoleCommand_Parms OnConsoleCommand_Parms;
	OnConsoleCommand_Parms.inAction = inAction;
	ProcessEvent(pFnOnConsoleCommand,NULL,&OnConsoleCommand_Parms,NULL);
}

struct Engine_SetPlayerDataProvider_Parms
{
	class UPlayerDataProvider*                         DataProvider;                                     		// 0x000000 (0x0004)              
	//struct FString                                     PlayerName;                                       		// 0x000004 (0x000C)              
};

void APlayerController::SetPlayerDataProvider(class UPlayerDataProvider* DataProvider)
{
	static UFieldFunc* pFnSetPlayerDataProvider = NULL;
	if(!pFnSetPlayerDataProvider)
		pFnSetPlayerDataProvider = UObject::FindFunction("Function Engine.PlayerController.SetPlayerDataProvider");

	Engine_SetPlayerDataProvider_Parms SetPlayerDataProvider_Parms;
	SetPlayerDataProvider_Parms.DataProvider = DataProvider;
	ProcessEvent(pFnSetPlayerDataProvider,NULL,&SetPlayerDataProvider_Parms,NULL);
}

struct Engine_QuickLoad_Parms
{
};

void APlayerController::QuickLoad()
{
	static UFieldFunc* pFnQuickLoad = NULL;
	if(!pFnQuickLoad)
		pFnQuickLoad = UObject::FindFunction("Function Engine.PlayerController.QuickLoad");

	Engine_QuickLoad_Parms QuickLoad_Parms;
	ProcessEvent(pFnQuickLoad,NULL,&QuickLoad_Parms,NULL);
}

struct Engine_OnToggleCinematicMode_Parms
{
	class USeqAct_ToggleCinematicMode*                 Action;                                           		// 0x000000 (0x0004)              
	//unsigned long                                      bNewCinematicMode : 1;                            		// 0x000004 (0x0004) [0x00000001] 
};

void APlayerController::OnToggleCinematicMode(class USeqAct_ToggleCinematicMode* Action)
{
	static UFieldFunc* pFnOnToggleCinematicMode = NULL;
	if(!pFnOnToggleCinematicMode)
		pFnOnToggleCinematicMode = UObject::FindFunction("Function Engine.PlayerController.OnToggleCinematicMode");

	Engine_OnToggleCinematicMode_Parms OnToggleCinematicMode_Parms;
	OnToggleCinematicMode_Parms.Action = Action;
	ProcessEvent(pFnOnToggleCinematicMode,NULL,&OnToggleCinematicMode_Parms,NULL);
}

struct Engine_IgnoreLookInput_Parms
{
	unsigned long                                      bNewLookInput : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::IgnoreLookInput(bool bNewLookInput)
{
	static UFieldFunc* pFnIgnoreLookInput = NULL;
	if(!pFnIgnoreLookInput)
		pFnIgnoreLookInput = UObject::FindFunction("Function Engine.PlayerController.IgnoreLookInput");

	Engine_IgnoreLookInput_Parms IgnoreLookInput_Parms;
	IgnoreLookInput_Parms.bNewLookInput = bNewLookInput;
	ProcessEvent(pFnIgnoreLookInput,NULL,&IgnoreLookInput_Parms,NULL);
}

struct Engine_ServerGivePawn_Parms
{
};

void APlayerController::ServerGivePawn()
{
	static UFieldFunc* pFnServerGivePawn = NULL;
	if(!pFnServerGivePawn)
		pFnServerGivePawn = UObject::FindFunction("Function Engine.PlayerController.ServerGivePawn");

	Engine_ServerGivePawn_Parms ServerGivePawn_Parms;
	ProcessEvent(pFnServerGivePawn,NULL,&ServerGivePawn_Parms,NULL);
}

struct Engine_OnToggleHUD_Parms
{
	class USeqAct_ToggleHUD*                           inAction;                                         		// 0x000000 (0x0004)              
};

void APlayerController::OnToggleHUD(class USeqAct_ToggleHUD* inAction)
{
	static UFieldFunc* pFnOnToggleHUD = NULL;
	if(!pFnOnToggleHUD)
		pFnOnToggleHUD = UObject::FindFunction("Function Engine.PlayerController.OnToggleHUD");

	Engine_OnToggleHUD_Parms OnToggleHUD_Parms;
	OnToggleHUD_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggleHUD,NULL,&OnToggleHUD_Parms,NULL);
}

struct Engine_CheckSpeedHack_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APlayerController::CheckSpeedHack(float DeltaTime)
{
	static UFieldFunc* pFnCheckSpeedHack = NULL;
	if(!pFnCheckSpeedHack)
		pFnCheckSpeedHack = UObject::FindFunction("Function Engine.PlayerController.CheckSpeedHack");

	Engine_CheckSpeedHack_Parms CheckSpeedHack_Parms;
	CheckSpeedHack_Parms.DeltaTime = DeltaTime;
	pFnCheckSpeedHack->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCheckSpeedHack,NULL,&CheckSpeedHack_Parms,NULL);
	pFnCheckSpeedHack->FunctionFlags |= 0x400;
	return CheckSpeedHack_Parms.ReturnValue;
}

struct Engine_ServerSpeech_Parms
{
	struct FString                                     Type;                                             		// 0x000000 (0x000C)              
	int                                                Index;                                            		// 0x00000C (0x0004)              
	struct FString                                     Callsign;                                         		// 0x000010 (0x000C)              
};

void APlayerController::ServerSpeech(struct FString Type,int Index,struct FString Callsign)
{
	static UFieldFunc* pFnServerSpeech = NULL;
	if(!pFnServerSpeech)
		pFnServerSpeech = UObject::FindFunction("Function Engine.PlayerController.ServerSpeech");

	Engine_ServerSpeech_Parms ServerSpeech_Parms;
	memcpy(&ServerSpeech_Parms.Type,&Type,0xC);
	ServerSpeech_Parms.Index = Index;
	memcpy(&ServerSpeech_Parms.Callsign,&Callsign,0xC);
	ProcessEvent(pFnServerSpeech,NULL,&ServerSpeech_Parms,NULL);
}

struct Engine_ClientPlaySound_Parms
{
	class USoundCue*                                   ASound;                                           		// 0x000000 (0x0004)              
};

void APlayerController::ClientPlaySound(class USoundCue* ASound)
{
	static UFieldFunc* pFnClientPlaySound = NULL;
	if(!pFnClientPlaySound)
		pFnClientPlaySound = UObject::FindFunction("Function Engine.PlayerController.ClientPlaySound");

	Engine_ClientPlaySound_Parms ClientPlaySound_Parms;
	ClientPlaySound_Parms.ASound = ASound;
	ProcessEvent(pFnClientPlaySound,NULL,&ClientPlaySound_Parms,NULL);
}

struct Engine_ServerSendMusicInfo_Parms
{
};

void APlayerController::ServerSendMusicInfo()
{
	static UFieldFunc* pFnServerSendMusicInfo = NULL;
	if(!pFnServerSendMusicInfo)
		pFnServerSendMusicInfo = UObject::FindFunction("Function Engine.PlayerController.ServerSendMusicInfo");

	Engine_ServerSendMusicInfo_Parms ServerSendMusicInfo_Parms;
	ProcessEvent(pFnServerSendMusicInfo,NULL,&ServerSendMusicInfo_Parms,NULL);
}

struct Engine_ServerUpdateLevelVisibilityIndex_Parms
{
	int                                                PackageNameIndex;                                 		// 0x000000 (0x0004)              
	unsigned long                                      bIsVisible : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
};

void APlayerController::ServerUpdateLevelVisibilityIndex(int PackageNameIndex,bool bIsVisible)
{
	static UFieldFunc* pFnServerUpdateLevelVisibilityIndex = NULL;
	if(!pFnServerUpdateLevelVisibilityIndex)
		pFnServerUpdateLevelVisibilityIndex = UObject::FindFunction("Function Engine.PlayerController.ServerUpdateLevelVisibilityIndex");

	Engine_ServerUpdateLevelVisibilityIndex_Parms ServerUpdateLevelVisibilityIndex_Parms;
	ServerUpdateLevelVisibilityIndex_Parms.PackageNameIndex = PackageNameIndex;
	ServerUpdateLevelVisibilityIndex_Parms.bIsVisible = bIsVisible;
	pFnServerUpdateLevelVisibilityIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerUpdateLevelVisibilityIndex,NULL,&ServerUpdateLevelVisibilityIndex_Parms,NULL);
	pFnServerUpdateLevelVisibilityIndex->FunctionFlags |= 0x400;
}

struct Engine_NotifyLoadedWorld_Parms
{
	struct FName                                       WorldPackageName;                                 		// 0x000000 (0x0008)              
	unsigned long                                      bFinalDest : 1;                                   		// 0x000008 (0x0004) [0x00000001] 
	//class APlayerStart*                                P;                                                		// 0x00000C (0x0004)              
	//FRotator                                           SpawnRotation;                                    		// 0x000010 (0x000C)              
};

void APlayerController::NotifyLoadedWorld(struct FName WorldPackageName,bool bFinalDest)
{
	static UFieldFunc* pFnNotifyLoadedWorld = NULL;
	if(!pFnNotifyLoadedWorld)
		pFnNotifyLoadedWorld = UObject::FindFunction("Function Engine.PlayerController.NotifyLoadedWorld");

	Engine_NotifyLoadedWorld_Parms NotifyLoadedWorld_Parms;
	memcpy(&NotifyLoadedWorld_Parms.WorldPackageName,&WorldPackageName,0x8);
	NotifyLoadedWorld_Parms.bFinalDest = bFinalDest;
	ProcessEvent(pFnNotifyLoadedWorld,NULL,&NotifyLoadedWorld_Parms,NULL);
}

struct Engine_SetCameraMode_Parms
{
	struct FName                                       NewCamMode;                                       		// 0x000000 (0x0008)              
};

void APlayerController::SetCameraMode(struct FName NewCamMode)
{
	static UFieldFunc* pFnSetCameraMode = NULL;
	if(!pFnSetCameraMode)
		pFnSetCameraMode = UObject::FindFunction("Function Engine.PlayerController.SetCameraMode");

	Engine_SetCameraMode_Parms SetCameraMode_Parms;
	memcpy(&SetCameraMode_Parms.NewCamMode,&NewCamMode,0x8);
	pFnSetCameraMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCameraMode,NULL,&SetCameraMode_Parms,NULL);
	pFnSetCameraMode->FunctionFlags |= 0x400;
}

struct Engine_ServerUnmutePlayer_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
	//class APlayerController*                           Other;                                            		// 0x000008 (0x0004)              
	//int                                                RemoveIndex;                                      		// 0x00000C (0x0004)              
};

void APlayerController::ServerUnmutePlayer(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnServerUnmutePlayer = NULL;
	if(!pFnServerUnmutePlayer)
		pFnServerUnmutePlayer = UObject::FindFunction("Function Engine.PlayerController.ServerUnmutePlayer");

	Engine_ServerUnmutePlayer_Parms ServerUnmutePlayer_Parms;
	memcpy(&ServerUnmutePlayer_Parms.PlayerNetId,&PlayerNetId,0x8);
	ProcessEvent(pFnServerUnmutePlayer,NULL,&ServerUnmutePlayer_Parms,NULL);
}

struct Engine_ServerViewSelf_Parms
{
};

void APlayerController::ServerViewSelf()
{
	static UFieldFunc* pFnServerViewSelf = NULL;
	if(!pFnServerViewSelf)
		pFnServerViewSelf = UObject::FindFunction("Function Engine.PlayerController.ServerViewSelf");

	Engine_ServerViewSelf_Parms ServerViewSelf_Parms;
	ProcessEvent(pFnServerViewSelf,NULL,&ServerViewSelf_Parms,NULL);
}

struct Engine_PreClientTravel_Parms
{
	struct FString                                     PendingURL;                                       		// 0x000000 (0x000C)              
	unsigned char                                      TravelType;                                       		// 0x00000C (0x0001)              
	unsigned long                                      bIsSeamlessTravel : 1;                            		// 0x000010 (0x0004) [0x00000001] 
	//class UUIInteraction*                              UIController;                                     		// 0x000014 (0x0004)              
	//class UGameUISceneClient*                          GameSceneClient;                                  		// 0x000018 (0x0004)              
};

void APlayerController::PreClientTravel(struct FString PendingURL,unsigned char TravelType,bool bIsSeamlessTravel)
{
	static UFieldFunc* pFnPreClientTravel = NULL;
	if(!pFnPreClientTravel)
		pFnPreClientTravel = UObject::FindFunction("Function Engine.PlayerController.PreClientTravel");

	Engine_PreClientTravel_Parms PreClientTravel_Parms;
	memcpy(&PreClientTravel_Parms.PendingURL,&PendingURL,0xC);
	PreClientTravel_Parms.TravelType = TravelType;
	PreClientTravel_Parms.bIsSeamlessTravel = bIsSeamlessTravel;
	ProcessEvent(pFnPreClientTravel,NULL,&PreClientTravel_Parms,NULL);
}

struct Engine_StopAltFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void APlayerController::StopAltFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStopAltFire = NULL;
	if(!pFnStopAltFire)
		pFnStopAltFire = UObject::FindFunction("Function Engine.PlayerController.StopAltFire");

	Engine_StopAltFire_Parms StopAltFire_Parms;
	StopAltFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStopAltFire,NULL,&StopAltFire_Parms,NULL);
}

struct Engine_ClientCapBandwidth_Parms
{
	int                                                Cap;                                              		// 0x000000 (0x0004)              
};

void APlayerController::ClientCapBandwidth(int Cap)
{
	static UFieldFunc* pFnClientCapBandwidth = NULL;
	if(!pFnClientCapBandwidth)
		pFnClientCapBandwidth = UObject::FindFunction("Function Engine.PlayerController.ClientCapBandwidth");

	Engine_ClientCapBandwidth_Parms ClientCapBandwidth_Parms;
	ClientCapBandwidth_Parms.Cap = Cap;
	ProcessEvent(pFnClientCapBandwidth,NULL,&ClientCapBandwidth_Parms,NULL);
}

struct Engine_ServerMutePlayer_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
	//class APlayerController*                           Other;                                            		// 0x000008 (0x0004)              
};

void APlayerController::ServerMutePlayer(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnServerMutePlayer = NULL;
	if(!pFnServerMutePlayer)
		pFnServerMutePlayer = UObject::FindFunction("Function Engine.PlayerController.ServerMutePlayer");

	Engine_ServerMutePlayer_Parms ServerMutePlayer_Parms;
	memcpy(&ServerMutePlayer_Parms.PlayerNetId,&PlayerNetId,0x8);
	ProcessEvent(pFnServerMutePlayer,NULL,&ServerMutePlayer_Parms,NULL);
}

struct Engine_GameHasEnded_Parms
{
	class AActor*                                      EndGameFocus;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bIsWinner : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void APlayerController::GameHasEnded(class AActor* EndGameFocus,bool bIsWinner)
{
	static UFieldFunc* pFnGameHasEnded = NULL;
	if(!pFnGameHasEnded)
		pFnGameHasEnded = UObject::FindFunction("Function Engine.PlayerController.GameHasEnded");

	Engine_GameHasEnded_Parms GameHasEnded_Parms;
	GameHasEnded_Parms.EndGameFocus = EndGameFocus;
	GameHasEnded_Parms.bIsWinner = bIsWinner;
	ProcessEvent(pFnGameHasEnded,NULL,&GameHasEnded_Parms,NULL);
}

struct Engine_OnArbitrationRegisterComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void APlayerController::OnArbitrationRegisterComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnArbitrationRegisterComplete = NULL;
	if(!pFnOnArbitrationRegisterComplete)
		pFnOnArbitrationRegisterComplete = UObject::FindFunction("Function Engine.PlayerController.OnArbitrationRegisterComplete");

	Engine_OnArbitrationRegisterComplete_Parms OnArbitrationRegisterComplete_Parms;
	memcpy(&OnArbitrationRegisterComplete_Parms.SessionName,&SessionName,0x8);
	OnArbitrationRegisterComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnArbitrationRegisterComplete,NULL,&OnArbitrationRegisterComplete_Parms,NULL);
}

struct Engine_CauseEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x000000 (0x0008)              
};

void APlayerController::CauseEvent(struct FName EventName)
{
	static UFieldFunc* pFnCauseEvent = NULL;
	if(!pFnCauseEvent)
		pFnCauseEvent = UObject::FindFunction("Function Engine.PlayerController.CauseEvent");

	Engine_CauseEvent_Parms CauseEvent_Parms;
	memcpy(&CauseEvent_Parms.EventName,&EventName,0x8);
	ProcessEvent(pFnCauseEvent,NULL,&CauseEvent_Parms,NULL);
}

struct Engine_DualServerMove_Parms
{
	double                                             TimeStamp0;                                       		// 0x000000 (0x0008)              
	FVector3                                           InAccel0;                                         		// 0x000008 (0x000C)              
	unsigned char                                      PendingFlags;                                     		// 0x000014 (0x0001)              
	unsigned char                                      _0x000015[0x3];                                   		// 0x000015 (0x0003) ALIGNEMENT
	int                                                View0;                                            		// 0x000018 (0x0004)              
	double                                             TimeStamp;                                        		// 0x00001C (0x0008)              
	FVector3                                           InAccel;                                          		// 0x000024 (0x000C)              
	FVector3                                           ClientLoc;                                        		// 0x000030 (0x000C)              
	unsigned char                                      NewFlags;                                         		// 0x00003C (0x0001)              
	unsigned char                                      ClientRoll;                                       		// 0x00003D (0x0001)              
	unsigned char                                      _0x00003E[0x2];                                   		// 0x00003E (0x0002) ALIGNEMENT
	int                                                View;                                             		// 0x000040 (0x0004)              
};

void APlayerController::DualServerMove(double TimeStamp0,FVector3 InAccel0,unsigned char PendingFlags,int View0,double TimeStamp,FVector3 InAccel,FVector3 ClientLoc,unsigned char NewFlags,unsigned char ClientRoll,int View)
{
	static UFieldFunc* pFnDualServerMove = NULL;
	if(!pFnDualServerMove)
		pFnDualServerMove = UObject::FindFunction("Function Engine.PlayerController.DualServerMove");

	Engine_DualServerMove_Parms DualServerMove_Parms;
	DualServerMove_Parms.TimeStamp0 = TimeStamp0;
	memcpy(&DualServerMove_Parms.InAccel0,&InAccel0,0xC);
	DualServerMove_Parms.PendingFlags = PendingFlags;
	DualServerMove_Parms.View0 = View0;
	DualServerMove_Parms.TimeStamp = TimeStamp;
	memcpy(&DualServerMove_Parms.InAccel,&InAccel,0xC);
	memcpy(&DualServerMove_Parms.ClientLoc,&ClientLoc,0xC);
	DualServerMove_Parms.NewFlags = NewFlags;
	DualServerMove_Parms.ClientRoll = ClientRoll;
	DualServerMove_Parms.View = View;
	pFnDualServerMove->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDualServerMove,NULL,&DualServerMove_Parms,NULL);
	pFnDualServerMove->FunctionFlags |= 0x400;
}

struct Engine_OnToggleInput_Parms
{
	class USeqAct_ToggleInput*                         inAction;                                         		// 0x000000 (0x0004)              
	//unsigned long                                      bNewValue : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void APlayerController::OnToggleInput(class USeqAct_ToggleInput* inAction)
{
	static UFieldFunc* pFnOnToggleInput = NULL;
	if(!pFnOnToggleInput)
		pFnOnToggleInput = UObject::FindFunction("Function Engine.PlayerController.OnToggleInput");

	Engine_OnToggleInput_Parms OnToggleInput_Parms;
	OnToggleInput_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggleInput,NULL,&OnToggleInput_Parms,NULL);
}

struct Engine_DebugPause_Parms
{
};

void APlayerController::DebugPause()
{
	static UFieldFunc* pFnDebugPause = NULL;
	if(!pFnDebugPause)
		pFnDebugPause = UObject::FindFunction("Function Engine.PlayerController.DebugPause");

	Engine_DebugPause_Parms DebugPause_Parms;
	ProcessEvent(pFnDebugPause,NULL,&DebugPause_Parms,NULL);
}

struct Engine_PlayBeepSound_Parms
{
};

void APlayerController::PlayBeepSound()
{
	static UFieldFunc* pFnPlayBeepSound = NULL;
	if(!pFnPlayBeepSound)
		pFnPlayBeepSound = UObject::FindFunction("Function Engine.PlayerController.PlayBeepSound");

	Engine_PlayBeepSound_Parms PlayBeepSound_Parms;
	ProcessEvent(pFnPlayBeepSound,NULL,&PlayBeepSound_Parms,NULL);
}

struct Engine_Pause_Parms
{
};

void APlayerController::Pause()
{
	static UFieldFunc* pFnPause = NULL;
	if(!pFnPause)
		pFnPause = UObject::FindFunction("Function Engine.PlayerController.Pause");

	Engine_Pause_Parms Pause_Parms;
	ProcessEvent(pFnPause,NULL,&Pause_Parms,NULL);
}

struct Engine_ClientSetHostUniqueId_Parms
{
	struct FUniqueNetId                                InHostId;                                         		// 0x000000 (0x0008)              
};

void APlayerController::ClientSetHostUniqueId(struct FUniqueNetId InHostId)
{
	static UFieldFunc* pFnClientSetHostUniqueId = NULL;
	if(!pFnClientSetHostUniqueId)
		pFnClientSetHostUniqueId = UObject::FindFunction("Function Engine.PlayerController.ClientSetHostUniqueId");

	Engine_ClientSetHostUniqueId_Parms ClientSetHostUniqueId_Parms;
	memcpy(&ClientSetHostUniqueId_Parms.InHostId,&InHostId,0x8);
	ProcessEvent(pFnClientSetHostUniqueId,NULL,&ClientSetHostUniqueId_Parms,NULL);
}

struct Engine_InviteHasEnoughSpace_Parms
{
	class UOnlineGameSettings*                         InviteSettings;                                   		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                NumLocalPlayers;                                  		// 0x000008 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x00000C (0x0004)              
};

bool APlayerController::InviteHasEnoughSpace(class UOnlineGameSettings* InviteSettings)
{
	static UFieldFunc* pFnInviteHasEnoughSpace = NULL;
	if(!pFnInviteHasEnoughSpace)
		pFnInviteHasEnoughSpace = UObject::FindFunction("Function Engine.PlayerController.InviteHasEnoughSpace");

	Engine_InviteHasEnoughSpace_Parms InviteHasEnoughSpace_Parms;
	InviteHasEnoughSpace_Parms.InviteSettings = InviteSettings;
	ProcessEvent(pFnInviteHasEnoughSpace,NULL,&InviteHasEnoughSpace_Parms,NULL);
	return InviteHasEnoughSpace_Parms.ReturnValue;
}

struct Engine_ResetCameraMode_Parms
{
};

void APlayerController::ResetCameraMode()
{
	static UFieldFunc* pFnResetCameraMode = NULL;
	if(!pFnResetCameraMode)
		pFnResetCameraMode = UObject::FindFunction("Function Engine.PlayerController.ResetCameraMode");

	Engine_ResetCameraMode_Parms ResetCameraMode_Parms;
	pFnResetCameraMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetCameraMode,NULL,&ResetCameraMode_Parms,NULL);
	pFnResetCameraMode->FunctionFlags |= 0x400;
}

struct Engine_ServerPause_Parms
{
};

void APlayerController::ServerPause()
{
	static UFieldFunc* pFnServerPause = NULL;
	if(!pFnServerPause)
		pFnServerPause = UObject::FindFunction("Function Engine.PlayerController.ServerPause");

	Engine_ServerPause_Parms ServerPause_Parms;
	ProcessEvent(pFnServerPause,NULL,&ServerPause_Parms,NULL);
}

struct Engine_IsPrimaryPlayer_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//int                                                SSIndex;                                          		// 0x000004 (0x0004)              
};

bool APlayerController::IsPrimaryPlayer()
{
	static UFieldFunc* pFnIsPrimaryPlayer = NULL;
	if(!pFnIsPrimaryPlayer)
		pFnIsPrimaryPlayer = UObject::FindFunction("Function Engine.PlayerController.IsPrimaryPlayer");

	Engine_IsPrimaryPlayer_Parms IsPrimaryPlayer_Parms;
	ProcessEvent(pFnIsPrimaryPlayer,NULL,&IsPrimaryPlayer_Parms,NULL);
	return IsPrimaryPlayer_Parms.ReturnValue;
}

struct Engine_InitInputSystem_Parms
{
	//class UClass*                                      FFManagerClass;                                   		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//class USequence*                                   GameSeq;                                          		// 0x000008 (0x0004)              
	//TArray<class USequenceObject*>                     AllInterpActions;                                 		// 0x00000C (0x000C)              
};

void APlayerController::InitInputSystem()
{
	static UFieldFunc* pFnInitInputSystem = NULL;
	if(!pFnInitInputSystem)
		pFnInitInputSystem = UObject::FindFunction("Function Engine.PlayerController.InitInputSystem");

	Engine_InitInputSystem_Parms InitInputSystem_Parms;
	ProcessEvent(pFnInitInputSystem,NULL,&InitInputSystem_Parms,NULL);
}

struct Engine_ResetTimeMargin_Parms
{
};

void APlayerController::ResetTimeMargin()
{
	static UFieldFunc* pFnResetTimeMargin = NULL;
	if(!pFnResetTimeMargin)
		pFnResetTimeMargin = UObject::FindFunction("Function Engine.PlayerController.ResetTimeMargin");

	Engine_ResetTimeMargin_Parms ResetTimeMargin_Parms;
	ProcessEvent(pFnResetTimeMargin,NULL,&ResetTimeMargin_Parms,NULL);
}

struct Engine_IsSplitscreenPlayer_Parms
{
	int                                                out_SplitscreenPlayerIndex;                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
	//class ULocalPlayer*                                LP;                                               		// 0x00000C (0x0004)              
	//class UNetConnection*                              RemoteConnection;                                 		// 0x000010 (0x0004)              
	//class UChildConnection*                            ChildRemoteConnection;                            		// 0x000014 (0x0004)              
};

bool APlayerController::IsSplitscreenPlayer(int* out_SplitscreenPlayerIndex)
{
	static UFieldFunc* pFnIsSplitscreenPlayer = NULL;
	if(!pFnIsSplitscreenPlayer)
		pFnIsSplitscreenPlayer = UObject::FindFunction("Function Engine.PlayerController.IsSplitscreenPlayer");

	Engine_IsSplitscreenPlayer_Parms IsSplitscreenPlayer_Parms;
	ProcessEvent(pFnIsSplitscreenPlayer,NULL,&IsSplitscreenPlayer_Parms,NULL);
	if(out_SplitscreenPlayerIndex)
		*out_SplitscreenPlayerIndex = IsSplitscreenPlayer_Parms.out_SplitscreenPlayerIndex;
	return IsSplitscreenPlayer_Parms.ReturnValue;
}

struct Engine_CanUnpauseControllerConnected_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::CanUnpauseControllerConnected()
{
	static UFieldFunc* pFnCanUnpauseControllerConnected = NULL;
	if(!pFnCanUnpauseControllerConnected)
		pFnCanUnpauseControllerConnected = UObject::FindFunction("Function Engine.PlayerController.CanUnpauseControllerConnected");

	Engine_CanUnpauseControllerConnected_Parms CanUnpauseControllerConnected_Parms;
	ProcessEvent(pFnCanUnpauseControllerConnected,NULL,&CanUnpauseControllerConnected_Parms,NULL);
	return CanUnpauseControllerConnected_Parms.ReturnValue;
}

struct Engine_ClientSetProgressMessage_Parms
{
	unsigned char                                      MessageType;                                      		// 0x000000 (0x0001)              
	struct FString                                     Message;                                          		// 0x000004 (0x000C)              
	struct FString                                     Title;                                            		// 0x000010 (0x000C)              
	unsigned long                                      bIgnoreFutureNetworkMessages : 1;                 		// 0x00001C (0x0004) [0x00000001] 
};

void APlayerController::ClientSetProgressMessage(unsigned char MessageType,struct FString Message,struct FString Title,bool bIgnoreFutureNetworkMessages)
{
	static UFieldFunc* pFnClientSetProgressMessage = NULL;
	if(!pFnClientSetProgressMessage)
		pFnClientSetProgressMessage = UObject::FindFunction("Function Engine.PlayerController.ClientSetProgressMessage");

	Engine_ClientSetProgressMessage_Parms ClientSetProgressMessage_Parms;
	ClientSetProgressMessage_Parms.MessageType = MessageType;
	memcpy(&ClientSetProgressMessage_Parms.Message,&Message,0xC);
	memcpy(&ClientSetProgressMessage_Parms.Title,&Title,0xC);
	ClientSetProgressMessage_Parms.bIgnoreFutureNetworkMessages = bIgnoreFutureNetworkMessages;
	ProcessEvent(pFnClientSetProgressMessage,NULL,&ClientSetProgressMessage_Parms,NULL);
}

struct Engine_OnInviteJoinComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	//struct FString                                     URL;                                              		// 0x00000C (0x000C)              
	//struct FString                                     ConnectPassword;                                  		// 0x000018 (0x000C)              
};

void APlayerController::OnInviteJoinComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnInviteJoinComplete = NULL;
	if(!pFnOnInviteJoinComplete)
		pFnOnInviteJoinComplete = UObject::FindFunction("Function Engine.PlayerController.OnInviteJoinComplete");

	Engine_OnInviteJoinComplete_Parms OnInviteJoinComplete_Parms;
	memcpy(&OnInviteJoinComplete_Parms.SessionName,&SessionName,0x8);
	OnInviteJoinComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnInviteJoinComplete,NULL,&OnInviteJoinComplete_Parms,NULL);
}

struct Engine_CanUnpause_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::CanUnpause()
{
	static UFieldFunc* pFnCanUnpause = NULL;
	if(!pFnCanUnpause)
		pFnCanUnpause = UObject::FindFunction("Function Engine.PlayerController.CanUnpause");

	Engine_CanUnpause_Parms CanUnpause_Parms;
	ProcessEvent(pFnCanUnpause,NULL,&CanUnpause_Parms,NULL);
	return CanUnpause_Parms.ReturnValue;
}

struct Engine_ClearInviteDelegates_Parms
{
};

void APlayerController::ClearInviteDelegates()
{
	static UFieldFunc* pFnClearInviteDelegates = NULL;
	if(!pFnClearInviteDelegates)
		pFnClearInviteDelegates = UObject::FindFunction("Function Engine.PlayerController.ClearInviteDelegates");

	Engine_ClearInviteDelegates_Parms ClearInviteDelegates_Parms;
	ProcessEvent(pFnClearInviteDelegates,NULL,&ClearInviteDelegates_Parms,NULL);
}

struct Engine_IsPlayerMuted_Parms
{
	struct FUniqueNetId                                Sender;                                           		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool APlayerController::IsPlayerMuted(struct FUniqueNetId* Sender)
{
	static UFieldFunc* pFnIsPlayerMuted = NULL;
	if(!pFnIsPlayerMuted)
		pFnIsPlayerMuted = UObject::FindFunction("Function Engine.PlayerController.IsPlayerMuted");

	Engine_IsPlayerMuted_Parms IsPlayerMuted_Parms;
	pFnIsPlayerMuted->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPlayerMuted,NULL,&IsPlayerMuted_Parms,NULL);
	pFnIsPlayerMuted->FunctionFlags |= 0x400;
	if(Sender)
		memcpy(Sender,&IsPlayerMuted_Parms.Sender,0x8);
	return IsPlayerMuted_Parms.ReturnValue;
}

struct Engine_Kismet_ClientStopSound_Parms
{
	class USoundCue*                                   ASound;                                           		// 0x000000 (0x0004)              
	class AActor*                                      SourceActor;                                      		// 0x000004 (0x0004)              
	float                                              FadeOutTime;                                      		// 0x000008 (0x0004)              
	//class UAudioComponent*                             AC;                                               		// 0x00000C (0x0004)              
	//class UAudioComponent*                             CheckAC;                                          		// 0x000010 (0x0004)              
};

void APlayerController::Kismet_ClientStopSound(class USoundCue* ASound,class AActor* SourceActor,float FadeOutTime)
{
	static UFieldFunc* pFnKismet_ClientStopSound = NULL;
	if(!pFnKismet_ClientStopSound)
		pFnKismet_ClientStopSound = UObject::FindFunction("Function Engine.PlayerController.Kismet_ClientStopSound");

	Engine_Kismet_ClientStopSound_Parms Kismet_ClientStopSound_Parms;
	Kismet_ClientStopSound_Parms.ASound = ASound;
	Kismet_ClientStopSound_Parms.SourceActor = SourceActor;
	Kismet_ClientStopSound_Parms.FadeOutTime = FadeOutTime;
	ProcessEvent(pFnKismet_ClientStopSound,NULL,&Kismet_ClientStopSound_Parms,NULL);
}

struct Engine_ServerVerifyViewTarget_Parms
{
};

void APlayerController::ServerVerifyViewTarget()
{
	static UFieldFunc* pFnServerVerifyViewTarget = NULL;
	if(!pFnServerVerifyViewTarget)
		pFnServerVerifyViewTarget = UObject::FindFunction("Function Engine.PlayerController.ServerVerifyViewTarget");

	Engine_ServerVerifyViewTarget_Parms ServerVerifyViewTarget_Parms;
	pFnServerVerifyViewTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerVerifyViewTarget,NULL,&ServerVerifyViewTarget_Parms,NULL);
	pFnServerVerifyViewTarget->FunctionFlags |= 0x400;
}

struct Engine_ClientUnmutePlayer_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000008 (0x0004)              
};

void APlayerController::ClientUnmutePlayer(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnClientUnmutePlayer = NULL;
	if(!pFnClientUnmutePlayer)
		pFnClientUnmutePlayer = UObject::FindFunction("Function Engine.PlayerController.ClientUnmutePlayer");

	Engine_ClientUnmutePlayer_Parms ClientUnmutePlayer_Parms;
	memcpy(&ClientUnmutePlayer_Parms.PlayerNetId,&PlayerNetId,0x8);
	ProcessEvent(pFnClientUnmutePlayer,NULL,&ClientUnmutePlayer_Parms,NULL);
}

struct Engine_ServerRemovePeer_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	//struct FUniqueNetId                                ZeroId;                                           		// 0x000008 (0x0008)              
	//int                                                PeerIdx;                                          		// 0x000010 (0x0004)              
};

void APlayerController::ServerRemovePeer(struct FUniqueNetId PeerNetId)
{
	static UFieldFunc* pFnServerRemovePeer = NULL;
	if(!pFnServerRemovePeer)
		pFnServerRemovePeer = UObject::FindFunction("Function Engine.PlayerController.ServerRemovePeer");

	Engine_ServerRemovePeer_Parms ServerRemovePeer_Parms;
	memcpy(&ServerRemovePeer_Parms.PeerNetId,&PeerNetId,0x8);
	ProcessEvent(pFnServerRemovePeer,NULL,&ServerRemovePeer_Parms,NULL);
}

struct Engine_NotifyInviteFailed_Parms
{
};

void APlayerController::NotifyInviteFailed()
{
	static UFieldFunc* pFnNotifyInviteFailed = NULL;
	if(!pFnNotifyInviteFailed)
		pFnNotifyInviteFailed = UObject::FindFunction("Function Engine.PlayerController.NotifyInviteFailed");

	Engine_NotifyInviteFailed_Parms NotifyInviteFailed_Parms;
	ProcessEvent(pFnNotifyInviteFailed,NULL,&NotifyInviteFailed_Parms,NULL);
}

struct Engine_HasClientLoadedCurrentWorld_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::HasClientLoadedCurrentWorld()
{
	static UFieldFunc* pFnHasClientLoadedCurrentWorld = NULL;
	if(!pFnHasClientLoadedCurrentWorld)
		pFnHasClientLoadedCurrentWorld = UObject::FindFunction("Function Engine.PlayerController.HasClientLoadedCurrentWorld");

	Engine_HasClientLoadedCurrentWorld_Parms HasClientLoadedCurrentWorld_Parms;
	pFnHasClientLoadedCurrentWorld->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasClientLoadedCurrentWorld,NULL,&HasClientLoadedCurrentWorld_Parms,NULL);
	pFnHasClientLoadedCurrentWorld->FunctionFlags |= 0x400;
	return HasClientLoadedCurrentWorld_Parms.ReturnValue;
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
};

void APlayerController::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.PlayerController.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_GameplayUnmutePlayer_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
	//int                                                RemoveIndex;                                      		// 0x000008 (0x0004)              
	//class APlayerController*                           Other;                                            		// 0x00000C (0x0004)              
};

void APlayerController::GameplayUnmutePlayer(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnGameplayUnmutePlayer = NULL;
	if(!pFnGameplayUnmutePlayer)
		pFnGameplayUnmutePlayer = UObject::FindFunction("Function Engine.PlayerController.GameplayUnmutePlayer");

	Engine_GameplayUnmutePlayer_Parms GameplayUnmutePlayer_Parms;
	memcpy(&GameplayUnmutePlayer_Parms.PlayerNetId,&PlayerNetId,0x8);
	ProcessEvent(pFnGameplayUnmutePlayer,NULL,&GameplayUnmutePlayer_Parms,NULL);
}

struct Engine_Speech_Parms
{
	struct FName                                       Type;                                             		// 0x000000 (0x0008)              
	int                                                Index;                                            		// 0x000008 (0x0004)              
	struct FString                                     Callsign;                                         		// 0x00000C (0x000C)              
};

void APlayerController::Speech(struct FName Type,int Index,struct FString Callsign)
{
	static UFieldFunc* pFnSpeech = NULL;
	if(!pFnSpeech)
		pFnSpeech = UObject::FindFunction("Function Engine.PlayerController.Speech");

	Engine_Speech_Parms Speech_Parms;
	memcpy(&Speech_Parms.Type,&Type,0x8);
	Speech_Parms.Index = Index;
	memcpy(&Speech_Parms.Callsign,&Callsign,0xC);
	ProcessEvent(pFnSpeech,NULL,&Speech_Parms,NULL);
}

struct Engine_ConsoleKey_Parms
{
	struct FName                                       Key;                                              		// 0x000000 (0x0008)              
};

void APlayerController::ConsoleKey(struct FName Key)
{
	static UFieldFunc* pFnConsoleKey = NULL;
	if(!pFnConsoleKey)
		pFnConsoleKey = UObject::FindFunction("Function Engine.PlayerController.ConsoleKey");

	Engine_ConsoleKey_Parms ConsoleKey_Parms;
	memcpy(&ConsoleKey_Parms.Key,&Key,0x8);
	ProcessEvent(pFnConsoleKey,NULL,&ConsoleKey_Parms,NULL);
}

struct Engine_ClientReturnToParty_Parms
{
	//class UOnlineGameSettings*                         PartySettings;                                    		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                LP;                                               		// 0x000004 (0x0004)              
	//struct FString                                     URL;                                              		// 0x000008 (0x000C)              
};

void APlayerController::ClientReturnToParty()
{
	static UFieldFunc* pFnClientReturnToParty = NULL;
	if(!pFnClientReturnToParty)
		pFnClientReturnToParty = UObject::FindFunction("Function Engine.PlayerController.ClientReturnToParty");

	Engine_ClientReturnToParty_Parms ClientReturnToParty_Parms;
	ProcessEvent(pFnClientReturnToParty,NULL,&ClientReturnToParty_Parms,NULL);
}

struct Engine_SwitchLevel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void APlayerController::SwitchLevel(struct FString URL)
{
	static UFieldFunc* pFnSwitchLevel = NULL;
	if(!pFnSwitchLevel)
		pFnSwitchLevel = UObject::FindFunction("Function Engine.PlayerController.SwitchLevel");

	Engine_SwitchLevel_Parms SwitchLevel_Parms;
	memcpy(&SwitchLevel_Parms.URL,&URL,0xC);
	ProcessEvent(pFnSwitchLevel,NULL,&SwitchLevel_Parms,NULL);
}

struct Engine_ConditionalPause_Parms
{
	unsigned long                                      bDesiredPauseState : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::ConditionalPause(bool bDesiredPauseState)
{
	static UFieldFunc* pFnConditionalPause = NULL;
	if(!pFnConditionalPause)
		pFnConditionalPause = UObject::FindFunction("Function Engine.PlayerController.ConditionalPause");

	Engine_ConditionalPause_Parms ConditionalPause_Parms;
	ConditionalPause_Parms.bDesiredPauseState = bDesiredPauseState;
	ProcessEvent(pFnConditionalPause,NULL,&ConditionalPause_Parms,NULL);
}

struct Engine_NotifyConnectionError_Parms
{
	struct FString                                     Message;                                          		// 0x000000 (0x000C)              
	struct FString                                     Title;                                            		// 0x00000C (0x000C)              
};

void APlayerController::NotifyConnectionError(struct FString Message,struct FString Title)
{
	static UFieldFunc* pFnNotifyConnectionError = NULL;
	if(!pFnNotifyConnectionError)
		pFnNotifyConnectionError = UObject::FindFunction("Function Engine.PlayerController.NotifyConnectionError");

	Engine_NotifyConnectionError_Parms NotifyConnectionError_Parms;
	memcpy(&NotifyConnectionError_Parms.Message,&Message,0xC);
	memcpy(&NotifyConnectionError_Parms.Title,&Title,0xC);
	ProcessEvent(pFnNotifyConnectionError,NULL,&NotifyConnectionError_Parms,NULL);
}

struct Engine_ClientSetCameraMode_Parms
{
	struct FName                                       NewCamMode;                                       		// 0x000000 (0x0008)              
};

void APlayerController::ClientSetCameraMode(struct FName NewCamMode)
{
	static UFieldFunc* pFnClientSetCameraMode = NULL;
	if(!pFnClientSetCameraMode)
		pFnClientSetCameraMode = UObject::FindFunction("Function Engine.PlayerController.ClientSetCameraMode");

	Engine_ClientSetCameraMode_Parms ClientSetCameraMode_Parms;
	memcpy(&ClientSetCameraMode_Parms.NewCamMode,&NewCamMode,0x8);
	pFnClientSetCameraMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientSetCameraMode,NULL,&ClientSetCameraMode_Parms,NULL);
	pFnClientSetCameraMode->FunctionFlags |= 0x400;
}

struct Engine_MovementKeyIsDownOnServer_Parms
{
};

void APlayerController::MovementKeyIsDownOnServer()
{
	static UFieldFunc* pFnMovementKeyIsDownOnServer = NULL;
	if(!pFnMovementKeyIsDownOnServer)
		pFnMovementKeyIsDownOnServer = UObject::FindFunction("Function Engine.PlayerController.MovementKeyIsDownOnServer");

	Engine_MovementKeyIsDownOnServer_Parms MovementKeyIsDownOnServer_Parms;
	pFnMovementKeyIsDownOnServer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMovementKeyIsDownOnServer,NULL,&MovementKeyIsDownOnServer_Parms,NULL);
	pFnMovementKeyIsDownOnServer->FunctionFlags |= 0x400;
}

struct Engine_ClientStopNetworkedVoice_Parms
{
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000000 (0x0004)              
};

void APlayerController::ClientStopNetworkedVoice()
{
	static UFieldFunc* pFnClientStopNetworkedVoice = NULL;
	if(!pFnClientStopNetworkedVoice)
		pFnClientStopNetworkedVoice = UObject::FindFunction("Function Engine.PlayerController.ClientStopNetworkedVoice");

	Engine_ClientStopNetworkedVoice_Parms ClientStopNetworkedVoice_Parms;
	ProcessEvent(pFnClientStopNetworkedVoice,NULL,&ClientStopNetworkedVoice_Parms,NULL);
}

struct Engine_GetServerNetworkAddress_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerController::GetServerNetworkAddress()
{
	static UFieldFunc* pFnGetServerNetworkAddress = NULL;
	if(!pFnGetServerNetworkAddress)
		pFnGetServerNetworkAddress = UObject::FindFunction("Function Engine.PlayerController.GetServerNetworkAddress");

	Engine_GetServerNetworkAddress_Parms GetServerNetworkAddress_Parms;
	pFnGetServerNetworkAddress->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetServerNetworkAddress,NULL,&GetServerNetworkAddress_Parms,NULL);
	pFnGetServerNetworkAddress->FunctionFlags |= 0x400;
	return GetServerNetworkAddress_Parms.ReturnValue;
}

struct Engine_ServerMutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x000000 (0x000C)              
};

void APlayerController::ServerMutate(struct FString MutateString)
{
	static UFieldFunc* pFnServerMutate = NULL;
	if(!pFnServerMutate)
		pFnServerMutate = UObject::FindFunction("Function Engine.PlayerController.ServerMutate");

	Engine_ServerMutate_Parms ServerMutate_Parms;
	memcpy(&ServerMutate_Parms.MutateString,&MutateString,0xC);
	ProcessEvent(pFnServerMutate,NULL,&ServerMutate_Parms,NULL);
}

struct Engine_ServerAcknowledgePossession_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void APlayerController::ServerAcknowledgePossession(class APawn* P)
{
	static UFieldFunc* pFnServerAcknowledgePossession = NULL;
	if(!pFnServerAcknowledgePossession)
		pFnServerAcknowledgePossession = UObject::FindFunction("Function Engine.PlayerController.ServerAcknowledgePossession");

	Engine_ServerAcknowledgePossession_Parms ServerAcknowledgePossession_Parms;
	ServerAcknowledgePossession_Parms.P = P;
	ProcessEvent(pFnServerAcknowledgePossession,NULL,&ServerAcknowledgePossession_Parms,NULL);
}

struct Engine_ServerSuicide_Parms
{
};

void APlayerController::ServerSuicide()
{
	static UFieldFunc* pFnServerSuicide = NULL;
	if(!pFnServerSuicide)
		pFnServerSuicide = UObject::FindFunction("Function Engine.PlayerController.ServerSuicide");

	Engine_ServerSuicide_Parms ServerSuicide_Parms;
	ProcessEvent(pFnServerSuicide,NULL,&ServerSuicide_Parms,NULL);
}

struct Engine_SetPause_Parms
{
	unsigned long                                      bPause : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
	struct FScriptDelegate                             CanUnpauseDelegate;                               		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
};

bool APlayerController::SetPause(bool bPause,struct FScriptDelegate CanUnpauseDelegate)
{
	static UFieldFunc* pFnSetPause = NULL;
	if(!pFnSetPause)
		pFnSetPause = UObject::FindFunction("Function Engine.PlayerController.SetPause");

	Engine_SetPause_Parms SetPause_Parms;
	SetPause_Parms.bPause = bPause;
	memcpy(&SetPause_Parms.CanUnpauseDelegate,&CanUnpauseDelegate,0xC);
	ProcessEvent(pFnSetPause,NULL,&SetPause_Parms,NULL);
	return SetPause_Parms.ReturnValue;
}

struct Engine_ClientForceGarbageCollection_Parms
{
};

void APlayerController::ClientForceGarbageCollection()
{
	static UFieldFunc* pFnClientForceGarbageCollection = NULL;
	if(!pFnClientForceGarbageCollection)
		pFnClientForceGarbageCollection = UObject::FindFunction("Function Engine.PlayerController.ClientForceGarbageCollection");

	Engine_ClientForceGarbageCollection_Parms ClientForceGarbageCollection_Parms;
	ProcessEvent(pFnClientForceGarbageCollection,NULL,&ClientForceGarbageCollection_Parms,NULL);
}

struct Engine_NotifyHostMigrationStarted_Parms
{
};

void APlayerController::NotifyHostMigrationStarted()
{
	static UFieldFunc* pFnNotifyHostMigrationStarted = NULL;
	if(!pFnNotifyHostMigrationStarted)
		pFnNotifyHostMigrationStarted = UObject::FindFunction("Function Engine.PlayerController.NotifyHostMigrationStarted");

	Engine_NotifyHostMigrationStarted_Parms NotifyHostMigrationStarted_Parms;
	ProcessEvent(pFnNotifyHostMigrationStarted,NULL,&NotifyHostMigrationStarted_Parms,NULL);
}

struct Engine_ServerMove_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
	FVector3                                           InAccel;                                          		// 0x000008 (0x000C)              
	FVector3                                           ClientLoc;                                        		// 0x000014 (0x000C)              
	unsigned char                                      MoveFlags;                                        		// 0x000020 (0x0001)              
	unsigned char                                      ClientRoll;                                       		// 0x000021 (0x0001)              
	unsigned char                                      _0x000022[0x2];                                   		// 0x000022 (0x0002) ALIGNEMENT
	int                                                View;                                             		// 0x000024 (0x0004)              
};

void APlayerController::ServerMove(double TimeStamp,FVector3 InAccel,FVector3 ClientLoc,unsigned char MoveFlags,unsigned char ClientRoll,int View)
{
	static UFieldFunc* pFnServerMove = NULL;
	if(!pFnServerMove)
		pFnServerMove = UObject::FindFunction("Function Engine.PlayerController.ServerMove");

	Engine_ServerMove_Parms ServerMove_Parms;
	ServerMove_Parms.TimeStamp = TimeStamp;
	memcpy(&ServerMove_Parms.InAccel,&InAccel,0xC);
	memcpy(&ServerMove_Parms.ClientLoc,&ClientLoc,0xC);
	ServerMove_Parms.MoveFlags = MoveFlags;
	ServerMove_Parms.ClientRoll = ClientRoll;
	ServerMove_Parms.View = View;
	pFnServerMove->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerMove,NULL,&ServerMove_Parms,NULL);
	pFnServerMove->FunctionFlags |= 0x400;
}

struct Engine_ResetFOV_Parms
{
};

void APlayerController::ResetFOV()
{
	static UFieldFunc* pFnResetFOV = NULL;
	if(!pFnResetFOV)
		pFnResetFOV = UObject::FindFunction("Function Engine.PlayerController.ResetFOV");

	Engine_ResetFOV_Parms ResetFOV_Parms;
	ProcessEvent(pFnResetFOV,NULL,&ResetFOV_Parms,NULL);
}

struct Engine_DrawDebugTextList_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
	float                                              RenderDelta;                                      		// 0x000004 (0x0004)              
	//FVector3                                           cameraLoc;                                        		// 0x000008 (0x000C)              
	//FVector3                                           ScreenLoc;                                        		// 0x000014 (0x000C)              
	//FVector3                                           Offset;                                           		// 0x000020 (0x000C)              
	//FRotator                                           cameraRot;                                        		// 0x00002C (0x000C)              
	//int                                                Idx;                                              		// 0x000038 (0x0004)              
};

void APlayerController::DrawDebugTextList(class UCanvas* Canvas,float RenderDelta)
{
	static UFieldFunc* pFnDrawDebugTextList = NULL;
	if(!pFnDrawDebugTextList)
		pFnDrawDebugTextList = UObject::FindFunction("Function Engine.PlayerController.DrawDebugTextList");

	Engine_DrawDebugTextList_Parms DrawDebugTextList_Parms;
	DrawDebugTextList_Parms.Canvas = Canvas;
	DrawDebugTextList_Parms.RenderDelta = RenderDelta;
	ProcessEvent(pFnDrawDebugTextList,NULL,&DrawDebugTextList_Parms,NULL);
}

struct Engine_AlterPlayerWalkingAccel_Parms
{
	FVector3                                           out_NewAccel;                                     		// 0x000000 (0x000C)              
};

void APlayerController::AlterPlayerWalkingAccel(FVector3* out_NewAccel)
{
	static UFieldFunc* pFnAlterPlayerWalkingAccel = NULL;
	if(!pFnAlterPlayerWalkingAccel)
		pFnAlterPlayerWalkingAccel = UObject::FindFunction("Function Engine.PlayerController.AlterPlayerWalkingAccel");

	Engine_AlterPlayerWalkingAccel_Parms AlterPlayerWalkingAccel_Parms;
	ProcessEvent(pFnAlterPlayerWalkingAccel,NULL,&AlterPlayerWalkingAccel_Parms,NULL);
	if(out_NewAccel)
		memcpy(out_NewAccel,&AlterPlayerWalkingAccel_Parms.out_NewAccel,0xC);
}

struct Engine_ClientCommitMapChange_Parms
{
	unsigned long                                      bShouldSkipLevelStartupEvent : 1;                 		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bShouldSkipLevelBeginningEvent : 1;               		// 0x000004 (0x0004) [0x00000001] 
};

void APlayerController::ClientCommitMapChange(bool bShouldSkipLevelStartupEvent,bool bShouldSkipLevelBeginningEvent)
{
	static UFieldFunc* pFnClientCommitMapChange = NULL;
	if(!pFnClientCommitMapChange)
		pFnClientCommitMapChange = UObject::FindFunction("Function Engine.PlayerController.ClientCommitMapChange");

	Engine_ClientCommitMapChange_Parms ClientCommitMapChange_Parms;
	ClientCommitMapChange_Parms.bShouldSkipLevelStartupEvent = bShouldSkipLevelStartupEvent;
	ClientCommitMapChange_Parms.bShouldSkipLevelBeginningEvent = bShouldSkipLevelBeginningEvent;
	ProcessEvent(pFnClientCommitMapChange,NULL,&ClientCommitMapChange_Parms,NULL);
}

struct Engine_ClientAdjustMusicTrackVolume_Parms
{
	class USeqAct_CrossFadeMusicTracks*                MusicAction;                                      		// 0x000000 (0x0004)              
	float                                              AdjustVolumeDuration;                             		// 0x000004 (0x0004)              
	float                                              AdjustVolumeLevel;                                		// 0x000008 (0x0004)              
};

void APlayerController::ClientAdjustMusicTrackVolume(class USeqAct_CrossFadeMusicTracks* MusicAction,float AdjustVolumeDuration,float AdjustVolumeLevel)
{
	static UFieldFunc* pFnClientAdjustMusicTrackVolume = NULL;
	if(!pFnClientAdjustMusicTrackVolume)
		pFnClientAdjustMusicTrackVolume = UObject::FindFunction("Function Engine.PlayerController.ClientAdjustMusicTrackVolume");

	Engine_ClientAdjustMusicTrackVolume_Parms ClientAdjustMusicTrackVolume_Parms;
	ClientAdjustMusicTrackVolume_Parms.MusicAction = MusicAction;
	ClientAdjustMusicTrackVolume_Parms.AdjustVolumeDuration = AdjustVolumeDuration;
	ClientAdjustMusicTrackVolume_Parms.AdjustVolumeLevel = AdjustVolumeLevel;
	ProcessEvent(pFnClientAdjustMusicTrackVolume,NULL,&ClientAdjustMusicTrackVolume_Parms,NULL);
}

struct Engine_AddDebugText_Parms
{
	struct FString                                     DebugText;                                        		// 0x000000 (0x000C)              
	class AActor*                                      SrcActor;                                         		// 0x00000C (0x0004)              
	float                                              Duration;                                         		// 0x000010 (0x0004)              
	FVector3                                           Offset;                                           		// 0x000014 (0x000C)              
	FVector3                                           DesiredOffset;                                    		// 0x000020 (0x000C)              
	DWORD                                              TextColor;                                        		// 0x00002C (0x0004)              
	unsigned long                                      bSkipOverwriteCheck : 1;                          		// 0x000030 (0x0004) [0x00000001] 
	//int                                                Idx;                                              		// 0x000034 (0x0004)              
};

void APlayerController::AddDebugText(struct FString DebugText,class AActor* SrcActor,float Duration,FVector3 Offset,FVector3 DesiredOffset,DWORD TextColor,bool bSkipOverwriteCheck)
{
	static UFieldFunc* pFnAddDebugText = NULL;
	if(!pFnAddDebugText)
		pFnAddDebugText = UObject::FindFunction("Function Engine.PlayerController.AddDebugText");

	Engine_AddDebugText_Parms AddDebugText_Parms;
	memcpy(&AddDebugText_Parms.DebugText,&DebugText,0xC);
	AddDebugText_Parms.SrcActor = SrcActor;
	AddDebugText_Parms.Duration = Duration;
	memcpy(&AddDebugText_Parms.Offset,&Offset,0xC);
	memcpy(&AddDebugText_Parms.DesiredOffset,&DesiredOffset,0xC);
	memcpy(&AddDebugText_Parms.TextColor,&TextColor,0x4);
	AddDebugText_Parms.bSkipOverwriteCheck = bSkipOverwriteCheck;
	ProcessEvent(pFnAddDebugText,NULL,&AddDebugText_Parms,NULL);
}

struct Engine_UpdateStateFromAdjustment_Parms
{
	struct FName                                       NewState;                                         		// 0x000000 (0x0008)              
};

void APlayerController::UpdateStateFromAdjustment(struct FName NewState)
{
	static UFieldFunc* pFnUpdateStateFromAdjustment = NULL;
	if(!pFnUpdateStateFromAdjustment)
		pFnUpdateStateFromAdjustment = UObject::FindFunction("Function Engine.PlayerController.UpdateStateFromAdjustment");

	Engine_UpdateStateFromAdjustment_Parms UpdateStateFromAdjustment_Parms;
	memcpy(&UpdateStateFromAdjustment_Parms.NewState,&NewState,0x8);
	pFnUpdateStateFromAdjustment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateStateFromAdjustment,NULL,&UpdateStateFromAdjustment_Parms,NULL);
	pFnUpdateStateFromAdjustment->FunctionFlags |= 0x400;
}

struct Engine_ClientGameEnded_Parms
{
	class AActor*                                      EndGameFocus;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bIsWinner : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void APlayerController::ClientGameEnded(class AActor* EndGameFocus,bool bIsWinner)
{
	static UFieldFunc* pFnClientGameEnded = NULL;
	if(!pFnClientGameEnded)
		pFnClientGameEnded = UObject::FindFunction("Function Engine.PlayerController.ClientGameEnded");

	Engine_ClientGameEnded_Parms ClientGameEnded_Parms;
	ClientGameEnded_Parms.EndGameFocus = EndGameFocus;
	ClientGameEnded_Parms.bIsWinner = bIsWinner;
	ProcessEvent(pFnClientGameEnded,NULL,&ClientGameEnded_Parms,NULL);
}

struct Engine_FindStairRotation_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int APlayerController::FindStairRotation(float DeltaTime)
{
	static UFieldFunc* pFnFindStairRotation = NULL;
	if(!pFnFindStairRotation)
		pFnFindStairRotation = UObject::FindFunction("Function Engine.PlayerController.FindStairRotation");

	Engine_FindStairRotation_Parms FindStairRotation_Parms;
	FindStairRotation_Parms.DeltaTime = DeltaTime;

	unsigned short NativeIndex = pFnFindStairRotation->iNative;
	pFnFindStairRotation->iNative = 0;
	pFnFindStairRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindStairRotation,NULL,&FindStairRotation_Parms,NULL);
	pFnFindStairRotation->FunctionFlags |= 0x400;
	pFnFindStairRotation->iNative = NativeIndex;
	return FindStairRotation_Parms.ReturnValue;
}

struct Engine_GetViewTarget_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AActor* APlayerController::GetViewTarget()
{
	static UFieldFunc* pFnGetViewTarget = NULL;
	if(!pFnGetViewTarget)
		pFnGetViewTarget = UObject::FindFunction("Function Engine.PlayerController.GetViewTarget");

	Engine_GetViewTarget_Parms GetViewTarget_Parms;
	pFnGetViewTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewTarget,NULL,&GetViewTarget_Parms,NULL);
	pFnGetViewTarget->FunctionFlags |= 0x400;
	return GetViewTarget_Parms.ReturnValue;
}

struct Engine_EnterStartState_Parms
{
	//struct FName                                       NewState;                                         		// 0x000000 (0x0008)              
};

void APlayerController::EnterStartState()
{
	static UFieldFunc* pFnEnterStartState = NULL;
	if(!pFnEnterStartState)
		pFnEnterStartState = UObject::FindFunction("Function Engine.PlayerController.EnterStartState");

	Engine_EnterStartState_Parms EnterStartState_Parms;
	ProcessEvent(pFnEnterStartState,NULL,&EnterStartState_Parms,NULL);
}

struct Engine_IsSpectating_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsSpectating()
{
	static UFieldFunc* pFnIsSpectating = NULL;
	if(!pFnIsSpectating)
		pFnIsSpectating = UObject::FindFunction("Function Engine.PlayerController.IsSpectating");

	Engine_IsSpectating_Parms IsSpectating_Parms;
	ProcessEvent(pFnIsSpectating,NULL,&IsSpectating_Parms,NULL);
	return IsSpectating_Parms.ReturnValue;
}

struct Engine_SetProgressMessage_Parms
{
	unsigned char                                      MessageType;                                      		// 0x000000 (0x0001)              
	struct FString                                     Message;                                          		// 0x000004 (0x000C)              
	struct FString                                     Title;                                            		// 0x000010 (0x000C)              
};

void APlayerController::SetProgressMessage(unsigned char MessageType,struct FString Message,struct FString Title)
{
	static UFieldFunc* pFnSetProgressMessage = NULL;
	if(!pFnSetProgressMessage)
		pFnSetProgressMessage = UObject::FindFunction("Function Engine.PlayerController.SetProgressMessage");

	Engine_SetProgressMessage_Parms SetProgressMessage_Parms;
	SetProgressMessage_Parms.MessageType = MessageType;
	memcpy(&SetProgressMessage_Parms.Message,&Message,0xC);
	memcpy(&SetProgressMessage_Parms.Title,&Title,0xC);
	ProcessEvent(pFnSetProgressMessage,NULL,&SetProgressMessage_Parms,NULL);
}

struct Engine_OnDestroyForInviteComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void APlayerController::OnDestroyForInviteComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnDestroyForInviteComplete = NULL;
	if(!pFnOnDestroyForInviteComplete)
		pFnOnDestroyForInviteComplete = UObject::FindFunction("Function Engine.PlayerController.OnDestroyForInviteComplete");

	Engine_OnDestroyForInviteComplete_Parms OnDestroyForInviteComplete_Parms;
	memcpy(&OnDestroyForInviteComplete_Parms.SessionName,&SessionName,0x8);
	OnDestroyForInviteComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnDestroyForInviteComplete,NULL,&OnDestroyForInviteComplete_Parms,NULL);
}

struct Engine_RestartLevel_Parms
{
};

void APlayerController::RestartLevel()
{
	static UFieldFunc* pFnRestartLevel = NULL;
	if(!pFnRestartLevel)
		pFnRestartLevel = UObject::FindFunction("Function Engine.PlayerController.RestartLevel");

	Engine_RestartLevel_Parms RestartLevel_Parms;
	ProcessEvent(pFnRestartLevel,NULL,&RestartLevel_Parms,NULL);
}

struct Engine_PathChild_Parms
{
	int                                                Cnt;                                              		// 0x000000 (0x0004)              
};

void APlayerController::PathChild(int Cnt)
{
	static UFieldFunc* pFnPathChild = NULL;
	if(!pFnPathChild)
		pFnPathChild = UObject::FindFunction("Function Engine.PlayerController.PathChild");

	Engine_PathChild_Parms PathChild_Parms;
	PathChild_Parms.Cnt = Cnt;
	ProcessEvent(pFnPathChild,NULL,&PathChild_Parms,NULL);
}

struct Engine_ClientInitializeDataStores_Parms
{
};

void APlayerController::ClientInitializeDataStores()
{
	static UFieldFunc* pFnClientInitializeDataStores = NULL;
	if(!pFnClientInitializeDataStores)
		pFnClientInitializeDataStores = UObject::FindFunction("Function Engine.PlayerController.ClientInitializeDataStores");

	Engine_ClientInitializeDataStores_Parms ClientInitializeDataStores_Parms;
	ProcessEvent(pFnClientInitializeDataStores,NULL,&ClientInitializeDataStores_Parms,NULL);
}

struct Engine_PeerDesignatedAsClient_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	//struct FString                                     URL;                                              		// 0x000008 (0x000C)              
};

void APlayerController::PeerDesignatedAsClient(struct FName SessionName)
{
	static UFieldFunc* pFnPeerDesignatedAsClient = NULL;
	if(!pFnPeerDesignatedAsClient)
		pFnPeerDesignatedAsClient = UObject::FindFunction("Function Engine.PlayerController.PeerDesignatedAsClient");

	Engine_PeerDesignatedAsClient_Parms PeerDesignatedAsClient_Parms;
	memcpy(&PeerDesignatedAsClient_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnPeerDesignatedAsClient,NULL,&PeerDesignatedAsClient_Parms,NULL);
}

struct Engine_AcknowledgePossession_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void APlayerController::AcknowledgePossession(class APawn* P)
{
	static UFieldFunc* pFnAcknowledgePossession = NULL;
	if(!pFnAcknowledgePossession)
		pFnAcknowledgePossession = UObject::FindFunction("Function Engine.PlayerController.AcknowledgePossession");

	Engine_AcknowledgePossession_Parms AcknowledgePossession_Parms;
	AcknowledgePossession_Parms.P = P;
	ProcessEvent(pFnAcknowledgePossession,NULL,&AcknowledgePossession_Parms,NULL);
}

struct Engine_ServerUpdateLevelVisibilityString_Parms
{
	struct FString                                     PackageName;                                      		// 0x000000 (0x000C)              
	unsigned long                                      bIsVisible : 1;                                   		// 0x00000C (0x0004) [0x00000001] 
};

void APlayerController::ServerUpdateLevelVisibilityString(struct FString PackageName,bool bIsVisible)
{
	static UFieldFunc* pFnServerUpdateLevelVisibilityString = NULL;
	if(!pFnServerUpdateLevelVisibilityString)
		pFnServerUpdateLevelVisibilityString = UObject::FindFunction("Function Engine.PlayerController.ServerUpdateLevelVisibilityString");

	Engine_ServerUpdateLevelVisibilityString_Parms ServerUpdateLevelVisibilityString_Parms;
	memcpy(&ServerUpdateLevelVisibilityString_Parms.PackageName,&PackageName,0xC);
	ServerUpdateLevelVisibilityString_Parms.bIsVisible = bIsVisible;
	pFnServerUpdateLevelVisibilityString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerUpdateLevelVisibilityString,NULL,&ServerUpdateLevelVisibilityString_Parms,NULL);
	pFnServerUpdateLevelVisibilityString->FunctionFlags |= 0x400;
}

struct Engine_CommandManagerBridge_Client_Parms
{
	struct FString                                     str;                                              		// 0x000000 (0x000C)              
};

void APlayerController::CommandManagerBridge_Client(struct FString str)
{
	static UFieldFunc* pFnCommandManagerBridge_Client = NULL;
	if(!pFnCommandManagerBridge_Client)
		pFnCommandManagerBridge_Client = UObject::FindFunction("Function Engine.PlayerController.CommandManagerBridge_Client");

	Engine_CommandManagerBridge_Client_Parms CommandManagerBridge_Client_Parms;
	memcpy(&CommandManagerBridge_Client_Parms.str,&str,0xC);
	pFnCommandManagerBridge_Client->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCommandManagerBridge_Client,NULL,&CommandManagerBridge_Client_Parms,NULL);
	pFnCommandManagerBridge_Client->FunctionFlags |= 0x400;
}

struct Engine_ReceivedPlayer_Parms
{
};

void APlayerController::ReceivedPlayer()
{
	static UFieldFunc* pFnReceivedPlayer = NULL;
	if(!pFnReceivedPlayer)
		pFnReceivedPlayer = UObject::FindFunction("Function Engine.PlayerController.ReceivedPlayer");

	Engine_ReceivedPlayer_Parms ReceivedPlayer_Parms;
	ProcessEvent(pFnReceivedPlayer,NULL,&ReceivedPlayer_Parms,NULL);
}

struct Engine_ShowSurvey_Parms
{
	struct FString                                     QuestionId;                                       		// 0x000000 (0x000C)              
	struct FString                                     Context;                                          		// 0x00000C (0x000C)              
};

void APlayerController::ShowSurvey(struct FString QuestionId,struct FString Context)
{
	static UFieldFunc* pFnShowSurvey = NULL;
	if(!pFnShowSurvey)
		pFnShowSurvey = UObject::FindFunction("Function Engine.PlayerController.ShowSurvey");

	Engine_ShowSurvey_Parms ShowSurvey_Parms;
	memcpy(&ShowSurvey_Parms.QuestionId,&QuestionId,0xC);
	memcpy(&ShowSurvey_Parms.Context,&Context,0xC);
	pFnShowSurvey->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShowSurvey,NULL,&ShowSurvey_Parms,NULL);
	pFnShowSurvey->FunctionFlags |= 0x400;
}

struct Engine_ClientSetBlockOnAsyncLoading_Parms
{
};

void APlayerController::ClientSetBlockOnAsyncLoading()
{
	static UFieldFunc* pFnClientSetBlockOnAsyncLoading = NULL;
	if(!pFnClientSetBlockOnAsyncLoading)
		pFnClientSetBlockOnAsyncLoading = UObject::FindFunction("Function Engine.PlayerController.ClientSetBlockOnAsyncLoading");

	Engine_ClientSetBlockOnAsyncLoading_Parms ClientSetBlockOnAsyncLoading_Parms;
	ProcessEvent(pFnClientSetBlockOnAsyncLoading,NULL,&ClientSetBlockOnAsyncLoading_Parms,NULL);
}

struct Engine_ReplicateMovePlayerController_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FVector3                                           newAccel;                                         		// 0x000004 (0x000C)              
	FRotator                                           DeltaRot;                                         		// 0x000010 (0x000C)              
};

void APlayerController::ReplicateMovePlayerController(float DeltaTime,FVector3* newAccel,FRotator* DeltaRot)
{
	static UFieldFunc* pFnReplicateMovePlayerController = NULL;
	if(!pFnReplicateMovePlayerController)
		pFnReplicateMovePlayerController = UObject::FindFunction("Function Engine.PlayerController.ReplicateMovePlayerController");

	Engine_ReplicateMovePlayerController_Parms ReplicateMovePlayerController_Parms;
	ReplicateMovePlayerController_Parms.DeltaTime = DeltaTime;
	pFnReplicateMovePlayerController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReplicateMovePlayerController,NULL,&ReplicateMovePlayerController_Parms,NULL);
	pFnReplicateMovePlayerController->FunctionFlags |= 0x400;
	if(newAccel)
		memcpy(newAccel,&ReplicateMovePlayerController_Parms.newAccel,0xC);
	if(DeltaRot)
		memcpy(DeltaRot,&ReplicateMovePlayerController_Parms.DeltaRot,0xC);
}

struct Engine_SendToConsole_Parms
{
	struct FString                                     Command;                                          		// 0x000000 (0x000C)              
};

void APlayerController::SendToConsole(struct FString Command)
{
	static UFieldFunc* pFnSendToConsole = NULL;
	if(!pFnSendToConsole)
		pFnSendToConsole = UObject::FindFunction("Function Engine.PlayerController.SendToConsole");

	Engine_SendToConsole_Parms SendToConsole_Parms;
	memcpy(&SendToConsole_Parms.Command,&Command,0xC);
	ProcessEvent(pFnSendToConsole,NULL,&SendToConsole_Parms,NULL);
}

struct Engine_PathStep_Parms
{
	int                                                Cnt;                                              		// 0x000000 (0x0004)              
};

void APlayerController::PathStep(int Cnt)
{
	static UFieldFunc* pFnPathStep = NULL;
	if(!pFnPathStep)
		pFnPathStep = UObject::FindFunction("Function Engine.PlayerController.PathStep");

	Engine_PathStep_Parms PathStep_Parms;
	PathStep_Parms.Cnt = Cnt;
	ProcessEvent(pFnPathStep,NULL,&PathStep_Parms,NULL);
}

struct Engine_SpawnCoverReplicator_Parms
{
	class ACoverReplicator*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class ACoverReplicator* APlayerController::SpawnCoverReplicator()
{
	static UFieldFunc* pFnSpawnCoverReplicator = NULL;
	if(!pFnSpawnCoverReplicator)
		pFnSpawnCoverReplicator = UObject::FindFunction("Function Engine.PlayerController.SpawnCoverReplicator");

	Engine_SpawnCoverReplicator_Parms SpawnCoverReplicator_Parms;
	ProcessEvent(pFnSpawnCoverReplicator,NULL,&SpawnCoverReplicator_Parms,NULL);
	return SpawnCoverReplicator_Parms.ReturnValue;
}

struct Engine_SetUseTiltForwardAndBack_Parms
{
	unsigned long                                      bActive : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SetUseTiltForwardAndBack(bool bActive)
{
	static UFieldFunc* pFnSetUseTiltForwardAndBack = NULL;
	if(!pFnSetUseTiltForwardAndBack)
		pFnSetUseTiltForwardAndBack = UObject::FindFunction("Function Engine.PlayerController.SetUseTiltForwardAndBack");

	Engine_SetUseTiltForwardAndBack_Parms SetUseTiltForwardAndBack_Parms;
	SetUseTiltForwardAndBack_Parms.bActive = bActive;
	pFnSetUseTiltForwardAndBack->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetUseTiltForwardAndBack,NULL,&SetUseTiltForwardAndBack_Parms,NULL);
	pFnSetUseTiltForwardAndBack->FunctionFlags |= 0x400;
}

struct Engine_GetPartyMapName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerController::GetPartyMapName()
{
	static UFieldFunc* pFnGetPartyMapName = NULL;
	if(!pFnGetPartyMapName)
		pFnGetPartyMapName = UObject::FindFunction("Function Engine.PlayerController.GetPartyMapName");

	Engine_GetPartyMapName_Parms GetPartyMapName_Parms;
	ProcessEvent(pFnGetPartyMapName,NULL,&GetPartyMapName_Parms,NULL);
	return GetPartyMapName_Parms.ReturnValue;
}

struct Engine_CanUnpauseExternalUI_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::CanUnpauseExternalUI()
{
	static UFieldFunc* pFnCanUnpauseExternalUI = NULL;
	if(!pFnCanUnpauseExternalUI)
		pFnCanUnpauseExternalUI = UObject::FindFunction("Function Engine.PlayerController.CanUnpauseExternalUI");

	Engine_CanUnpauseExternalUI_Parms CanUnpauseExternalUI_Parms;
	ProcessEvent(pFnCanUnpauseExternalUI,NULL,&CanUnpauseExternalUI_Parms,NULL);
	return CanUnpauseExternalUI_Parms.ReturnValue;
}

struct Engine_ClientUpdateLevelStreamingStatus_Parms
{
	struct FName                                       PackageName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bNewShouldBeLoaded : 1;                           		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bNewShouldBeVisible : 1;                          		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bNewShouldBlockOnLoad : 1;                        		// 0x000010 (0x0004) [0x00000001] 
};

void APlayerController::ClientUpdateLevelStreamingStatus(struct FName PackageName,bool bNewShouldBeLoaded,bool bNewShouldBeVisible,bool bNewShouldBlockOnLoad)
{
	static UFieldFunc* pFnClientUpdateLevelStreamingStatus = NULL;
	if(!pFnClientUpdateLevelStreamingStatus)
		pFnClientUpdateLevelStreamingStatus = UObject::FindFunction("Function Engine.PlayerController.ClientUpdateLevelStreamingStatus");

	Engine_ClientUpdateLevelStreamingStatus_Parms ClientUpdateLevelStreamingStatus_Parms;
	memcpy(&ClientUpdateLevelStreamingStatus_Parms.PackageName,&PackageName,0x8);
	ClientUpdateLevelStreamingStatus_Parms.bNewShouldBeLoaded = bNewShouldBeLoaded;
	ClientUpdateLevelStreamingStatus_Parms.bNewShouldBeVisible = bNewShouldBeVisible;
	ClientUpdateLevelStreamingStatus_Parms.bNewShouldBlockOnLoad = bNewShouldBlockOnLoad;
	pFnClientUpdateLevelStreamingStatus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientUpdateLevelStreamingStatus,NULL,&ClientUpdateLevelStreamingStatus_Parms,NULL);
	pFnClientUpdateLevelStreamingStatus->FunctionFlags |= 0x400;
}

struct Engine_ClientSetOnlineStatus_Parms
{
};

void APlayerController::ClientSetOnlineStatus()
{
	static UFieldFunc* pFnClientSetOnlineStatus = NULL;
	if(!pFnClientSetOnlineStatus)
		pFnClientSetOnlineStatus = UObject::FindFunction("Function Engine.PlayerController.ClientSetOnlineStatus");

	Engine_ClientSetOnlineStatus_Parms ClientSetOnlineStatus_Parms;
	ProcessEvent(pFnClientSetOnlineStatus,NULL,&ClientSetOnlineStatus_Parms,NULL);
}

struct Engine_OnGameInviteAccepted_Parms
{
	struct FOnlineGameSearchResult                     InviteResult;                                     		// 0x000000 (0x0008)              
	//class UOnlineGameSettings*                         GameInviteSettings;                               		// 0x000008 (0x0004)              
};

void APlayerController::OnGameInviteAccepted(struct FOnlineGameSearchResult* InviteResult)
{
	static UFieldFunc* pFnOnGameInviteAccepted = NULL;
	if(!pFnOnGameInviteAccepted)
		pFnOnGameInviteAccepted = UObject::FindFunction("Function Engine.PlayerController.OnGameInviteAccepted");

	Engine_OnGameInviteAccepted_Parms OnGameInviteAccepted_Parms;
	ProcessEvent(pFnOnGameInviteAccepted,NULL,&OnGameInviteAccepted_Parms,NULL);
	if(InviteResult)
		memcpy(InviteResult,&OnGameInviteAccepted_Parms.InviteResult,0x8);
}

struct Engine_PrevWeapon_Parms
{
};

void APlayerController::PrevWeapon()
{
	static UFieldFunc* pFnPrevWeapon = NULL;
	if(!pFnPrevWeapon)
		pFnPrevWeapon = UObject::FindFunction("Function Engine.PlayerController.PrevWeapon");

	Engine_PrevWeapon_Parms PrevWeapon_Parms;
	ProcessEvent(pFnPrevWeapon,NULL,&PrevWeapon_Parms,NULL);
}

struct Engine_SeamlessTravelFrom_Parms
{
	class APlayerController*                           OldPC;                                            		// 0x000000 (0x0004)              
};

void APlayerController::SeamlessTravelFrom(class APlayerController* OldPC)
{
	static UFieldFunc* pFnSeamlessTravelFrom = NULL;
	if(!pFnSeamlessTravelFrom)
		pFnSeamlessTravelFrom = UObject::FindFunction("Function Engine.PlayerController.SeamlessTravelFrom");

	Engine_SeamlessTravelFrom_Parms SeamlessTravelFrom_Parms;
	SeamlessTravelFrom_Parms.OldPC = OldPC;
	ProcessEvent(pFnSeamlessTravelFrom,NULL,&SeamlessTravelFrom_Parms,NULL);
}

struct Engine_HasPeerConnection_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool APlayerController::HasPeerConnection(struct FUniqueNetId* PeerNetId)
{
	static UFieldFunc* pFnHasPeerConnection = NULL;
	if(!pFnHasPeerConnection)
		pFnHasPeerConnection = UObject::FindFunction("Function Engine.PlayerController.HasPeerConnection");

	Engine_HasPeerConnection_Parms HasPeerConnection_Parms;
	pFnHasPeerConnection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasPeerConnection,NULL,&HasPeerConnection_Parms,NULL);
	pFnHasPeerConnection->FunctionFlags |= 0x400;
	if(PeerNetId)
		memcpy(PeerNetId,&HasPeerConnection_Parms.PeerNetId,0x8);
	return HasPeerConnection_Parms.ReturnValue;
}

struct Engine_GetGameModeURLString_Parms
{
	unsigned long                                      bIsSessionHost : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString APlayerController::GetGameModeURLString(bool bIsSessionHost)
{
	static UFieldFunc* pFnGetGameModeURLString = NULL;
	if(!pFnGetGameModeURLString)
		pFnGetGameModeURLString = UObject::FindFunction("Function Engine.PlayerController.GetGameModeURLString");

	Engine_GetGameModeURLString_Parms GetGameModeURLString_Parms;
	GetGameModeURLString_Parms.bIsSessionHost = bIsSessionHost;
	ProcessEvent(pFnGetGameModeURLString,NULL,&GetGameModeURLString_Parms,NULL);
	return GetGameModeURLString_Parms.ReturnValue;
}

struct Engine_PlayerTick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void APlayerController::PlayerTick(float DeltaTime)
{
	static UFieldFunc* pFnPlayerTick = NULL;
	if(!pFnPlayerTick)
		pFnPlayerTick = UObject::FindFunction("Function Engine.PlayerController.PlayerTick");

	Engine_PlayerTick_Parms PlayerTick_Parms;
	PlayerTick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnPlayerTick,NULL,&PlayerTick_Parms,NULL);
}

struct Engine_SetName_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
	//struct FString                                     NewName;                                          		// 0x00000C (0x000C)              
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000018 (0x0004)              
};

void APlayerController::SetName(struct FString S)
{
	static UFieldFunc* pFnSetName = NULL;
	if(!pFnSetName)
		pFnSetName = UObject::FindFunction("Function Engine.PlayerController.SetName");

	Engine_SetName_Parms SetName_Parms;
	memcpy(&SetName_Parms.S,&S,0xC);
	ProcessEvent(pFnSetName,NULL,&SetName_Parms,NULL);
}

struct Engine_APB_AckGoodStart_Parms
{
};

void APlayerController::APB_AckGoodStart()
{
	static UFieldFunc* pFnAPB_AckGoodStart = NULL;
	if(!pFnAPB_AckGoodStart)
		pFnAPB_AckGoodStart = UObject::FindFunction("Function Engine.PlayerController.APB_AckGoodStart");

	Engine_APB_AckGoodStart_Parms APB_AckGoodStart_Parms;
	pFnAPB_AckGoodStart->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAPB_AckGoodStart,NULL,&APB_AckGoodStart_Parms,NULL);
	pFnAPB_AckGoodStart->FunctionFlags |= 0x400;
}

struct Engine_IncrementNumberOfMatchesPlayed_Parms
{
};

void APlayerController::IncrementNumberOfMatchesPlayed()
{
	static UFieldFunc* pFnIncrementNumberOfMatchesPlayed = NULL;
	if(!pFnIncrementNumberOfMatchesPlayed)
		pFnIncrementNumberOfMatchesPlayed = UObject::FindFunction("Function Engine.PlayerController.IncrementNumberOfMatchesPlayed");

	Engine_IncrementNumberOfMatchesPlayed_Parms IncrementNumberOfMatchesPlayed_Parms;
	ProcessEvent(pFnIncrementNumberOfMatchesPlayed,NULL,&IncrementNumberOfMatchesPlayed_Parms,NULL);
}

struct Engine_GetUIController_Parms
{
	class UUIInteraction*                              ReturnValue;                                      		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                LP;                                               		// 0x000004 (0x0004)              
	//class UUIInteraction*                              Result;                                           		// 0x000008 (0x0004)              
};

class UUIInteraction* APlayerController::GetUIController()
{
	static UFieldFunc* pFnGetUIController = NULL;
	if(!pFnGetUIController)
		pFnGetUIController = UObject::FindFunction("Function Engine.PlayerController.GetUIController");

	Engine_GetUIController_Parms GetUIController_Parms;
	ProcessEvent(pFnGetUIController,NULL,&GetUIController_Parms,NULL);
	return GetUIController_Parms.ReturnValue;
}

struct Engine_GetPlayerViewPoint_Parms
{
	FVector3                                           out_Location;                                     		// 0x000000 (0x000C)              
	FRotator                                           out_Rotation;                                     		// 0x00000C (0x000C)              
};

void APlayerController::GetPlayerViewPoint(FVector3* out_Location,FRotator* out_Rotation)
{
	static UFieldFunc* pFnGetPlayerViewPoint = NULL;
	if(!pFnGetPlayerViewPoint)
		pFnGetPlayerViewPoint = UObject::FindFunction("Function Engine.PlayerController.GetPlayerViewPoint");

	Engine_GetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;
	pFnGetPlayerViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerViewPoint,NULL,&GetPlayerViewPoint_Parms,NULL);
	pFnGetPlayerViewPoint->FunctionFlags |= 0x400;
	if(out_Location)
		memcpy(out_Location,&GetPlayerViewPoint_Parms.out_Location,0xC);
	if(out_Rotation)
		memcpy(out_Rotation,&GetPlayerViewPoint_Parms.out_Rotation,0xC);
}

struct Engine_GetPlayerNetworkAddress_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerController::GetPlayerNetworkAddress()
{
	static UFieldFunc* pFnGetPlayerNetworkAddress = NULL;
	if(!pFnGetPlayerNetworkAddress)
		pFnGetPlayerNetworkAddress = UObject::FindFunction("Function Engine.PlayerController.GetPlayerNetworkAddress");

	Engine_GetPlayerNetworkAddress_Parms GetPlayerNetworkAddress_Parms;
	pFnGetPlayerNetworkAddress->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerNetworkAddress,NULL,&GetPlayerNetworkAddress_Parms,NULL);
	pFnGetPlayerNetworkAddress->FunctionFlags |= 0x400;
	return GetPlayerNetworkAddress_Parms.ReturnValue;
}

struct Engine_GetPlayerControllerFromNetId_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
	class APlayerController*                           ReturnValue;                                      		// 0x000008 (0x0004)              
};

class APlayerController* APlayerController::GetPlayerControllerFromNetId(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnGetPlayerControllerFromNetId = NULL;
	if(!pFnGetPlayerControllerFromNetId)
		pFnGetPlayerControllerFromNetId = UObject::FindFunction("Function Engine.PlayerController.GetPlayerControllerFromNetId");

	Engine_GetPlayerControllerFromNetId_Parms GetPlayerControllerFromNetId_Parms;
	memcpy(&GetPlayerControllerFromNetId_Parms.PlayerNetId,&PlayerNetId,0x8);
	pFnGetPlayerControllerFromNetId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerControllerFromNetId,NULL,&GetPlayerControllerFromNetId_Parms,NULL);
	pFnGetPlayerControllerFromNetId->FunctionFlags |= 0x400;
	return GetPlayerControllerFromNetId_Parms.ReturnValue;
}

struct Engine_NotifyDirectorControl_Parms
{
	unsigned long                                      bNowControlling : 1;                              		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::NotifyDirectorControl(bool bNowControlling)
{
	static UFieldFunc* pFnNotifyDirectorControl = NULL;
	if(!pFnNotifyDirectorControl)
		pFnNotifyDirectorControl = UObject::FindFunction("Function Engine.PlayerController.NotifyDirectorControl");

	Engine_NotifyDirectorControl_Parms NotifyDirectorControl_Parms;
	NotifyDirectorControl_Parms.bNowControlling = bNowControlling;
	ProcessEvent(pFnNotifyDirectorControl,NULL,&NotifyDirectorControl_Parms,NULL);
}

struct Engine_ClientPlayForceFeedbackWaveform_Parms
{
	class UForceFeedbackWaveform*                      FFWaveform;                                       		// 0x000000 (0x0004)              
};

void APlayerController::ClientPlayForceFeedbackWaveform(class UForceFeedbackWaveform* FFWaveform)
{
	static UFieldFunc* pFnClientPlayForceFeedbackWaveform = NULL;
	if(!pFnClientPlayForceFeedbackWaveform)
		pFnClientPlayForceFeedbackWaveform = UObject::FindFunction("Function Engine.PlayerController.ClientPlayForceFeedbackWaveform");

	Engine_ClientPlayForceFeedbackWaveform_Parms ClientPlayForceFeedbackWaveform_Parms;
	ClientPlayForceFeedbackWaveform_Parms.FFWaveform = FFWaveform;
	ProcessEvent(pFnClientPlayForceFeedbackWaveform,NULL,&ClientPlayForceFeedbackWaveform_Parms,NULL);
}

struct Engine_NotifyNotEnoughSpaceInInvite_Parms
{
};

void APlayerController::NotifyNotEnoughSpaceInInvite()
{
	static UFieldFunc* pFnNotifyNotEnoughSpaceInInvite = NULL;
	if(!pFnNotifyNotEnoughSpaceInInvite)
		pFnNotifyNotEnoughSpaceInInvite = UObject::FindFunction("Function Engine.PlayerController.NotifyNotEnoughSpaceInInvite");

	Engine_NotifyNotEnoughSpaceInInvite_Parms NotifyNotEnoughSpaceInInvite_Parms;
	ProcessEvent(pFnNotifyNotEnoughSpaceInInvite,NULL,&NotifyNotEnoughSpaceInInvite_Parms,NULL);
}

struct Engine_WrapResetTimeMargin_Parms
{
};

void APlayerController::WrapResetTimeMargin()
{
	static UFieldFunc* pFnWrapResetTimeMargin = NULL;
	if(!pFnWrapResetTimeMargin)
		pFnWrapResetTimeMargin = UObject::FindFunction("Function Engine.PlayerController.WrapResetTimeMargin");

	Engine_WrapResetTimeMargin_Parms WrapResetTimeMargin_Parms;
	ProcessEvent(pFnWrapResetTimeMargin,NULL,&WrapResetTimeMargin_Parms,NULL);
}

struct Engine_ReceiveLocalizedMessage_Parms
{
	class UClass*                                      Message;                                          		// 0x000000 (0x0004)              
	int                                                Switch;                                           		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
};

void APlayerController::ReceiveLocalizedMessage(class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnReceiveLocalizedMessage = NULL;
	if(!pFnReceiveLocalizedMessage)
		pFnReceiveLocalizedMessage = UObject::FindFunction("Function Engine.PlayerController.ReceiveLocalizedMessage");

	Engine_ReceiveLocalizedMessage_Parms ReceiveLocalizedMessage_Parms;
	ReceiveLocalizedMessage_Parms.Message = Message;
	ReceiveLocalizedMessage_Parms.Switch = Switch;
	ReceiveLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	ReceiveLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	ReceiveLocalizedMessage_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnReceiveLocalizedMessage,NULL,&ReceiveLocalizedMessage_Parms,NULL);
}

struct Engine_ProcessViewRotation_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FRotator                                           out_ViewRotation;                                 		// 0x000004 (0x000C)              
	FRotator                                           DeltaRot;                                         		// 0x000010 (0x000C)              
};

void APlayerController::ProcessViewRotation(float DeltaTime,FRotator* out_ViewRotation,FRotator DeltaRot)
{
	static UFieldFunc* pFnProcessViewRotation = NULL;
	if(!pFnProcessViewRotation)
		pFnProcessViewRotation = UObject::FindFunction("Function Engine.PlayerController.ProcessViewRotation");

	Engine_ProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;
	memcpy(&ProcessViewRotation_Parms.DeltaRot,&DeltaRot,0xC);
	ProcessEvent(pFnProcessViewRotation,NULL,&ProcessViewRotation_Parms,NULL);
	if(out_ViewRotation)
		memcpy(out_ViewRotation,&ProcessViewRotation_Parms.out_ViewRotation,0xC);
}

struct Engine_ShortClientAdjustPosition_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
	struct FName                                       NewState;                                         		// 0x000008 (0x0008)              
	unsigned char                                      newPhysics;                                       		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	float                                              NewLocX;                                          		// 0x000014 (0x0004)              
	float                                              NewLocY;                                          		// 0x000018 (0x0004)              
	float                                              NewLocZ;                                          		// 0x00001C (0x0004)              
	class AActor*                                      NewBase;                                          		// 0x000020 (0x0004)              
	//FVector3                                           Floor;                                            		// 0x000024 (0x000C)              
};

void APlayerController::ShortClientAdjustPosition(double TimeStamp,struct FName NewState,unsigned char newPhysics,float NewLocX,float NewLocY,float NewLocZ,class AActor* NewBase)
{
	static UFieldFunc* pFnShortClientAdjustPosition = NULL;
	if(!pFnShortClientAdjustPosition)
		pFnShortClientAdjustPosition = UObject::FindFunction("Function Engine.PlayerController.ShortClientAdjustPosition");

	Engine_ShortClientAdjustPosition_Parms ShortClientAdjustPosition_Parms;
	ShortClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy(&ShortClientAdjustPosition_Parms.NewState,&NewState,0x8);
	ShortClientAdjustPosition_Parms.newPhysics = newPhysics;
	ShortClientAdjustPosition_Parms.NewLocX = NewLocX;
	ShortClientAdjustPosition_Parms.NewLocY = NewLocY;
	ShortClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	ShortClientAdjustPosition_Parms.NewBase = NewBase;
	ProcessEvent(pFnShortClientAdjustPosition,NULL,&ShortClientAdjustPosition_Parms,NULL);
}

struct Engine_ClientCrossFadeMusicTrack_PlayTrack_Parms
{
	class USeqAct_CrossFadeMusicTracks*                MusicAction;                                      		// 0x000000 (0x0004)              
	struct FMusicTrackStruct                           MusicTrack;                                       		// 0x000004 (0x0024)              
};

void APlayerController::ClientCrossFadeMusicTrack_PlayTrack(class USeqAct_CrossFadeMusicTracks* MusicAction,struct FMusicTrackStruct MusicTrack)
{
	static UFieldFunc* pFnClientCrossFadeMusicTrack_PlayTrack = NULL;
	if(!pFnClientCrossFadeMusicTrack_PlayTrack)
		pFnClientCrossFadeMusicTrack_PlayTrack = UObject::FindFunction("Function Engine.PlayerController.ClientCrossFadeMusicTrack_PlayTrack");

	Engine_ClientCrossFadeMusicTrack_PlayTrack_Parms ClientCrossFadeMusicTrack_PlayTrack_Parms;
	ClientCrossFadeMusicTrack_PlayTrack_Parms.MusicAction = MusicAction;
	memcpy(&ClientCrossFadeMusicTrack_PlayTrack_Parms.MusicTrack,&MusicTrack,0x24);
	ProcessEvent(pFnClientCrossFadeMusicTrack_PlayTrack,NULL,&ClientCrossFadeMusicTrack_PlayTrack_Parms,NULL);
}

struct Engine_UsingFirstPersonCamera_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::UsingFirstPersonCamera()
{
	static UFieldFunc* pFnUsingFirstPersonCamera = NULL;
	if(!pFnUsingFirstPersonCamera)
		pFnUsingFirstPersonCamera = UObject::FindFunction("Function Engine.PlayerController.UsingFirstPersonCamera");

	Engine_UsingFirstPersonCamera_Parms UsingFirstPersonCamera_Parms;
	ProcessEvent(pFnUsingFirstPersonCamera,NULL,&UsingFirstPersonCamera_Parms,NULL);
	return UsingFirstPersonCamera_Parms.ReturnValue;
}

struct Engine_SetControllerTiltDesiredIfAvailable_Parms
{
	unsigned long                                      bActive : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SetControllerTiltDesiredIfAvailable(bool bActive)
{
	static UFieldFunc* pFnSetControllerTiltDesiredIfAvailable = NULL;
	if(!pFnSetControllerTiltDesiredIfAvailable)
		pFnSetControllerTiltDesiredIfAvailable = UObject::FindFunction("Function Engine.PlayerController.SetControllerTiltDesiredIfAvailable");

	Engine_SetControllerTiltDesiredIfAvailable_Parms SetControllerTiltDesiredIfAvailable_Parms;
	SetControllerTiltDesiredIfAvailable_Parms.bActive = bActive;
	pFnSetControllerTiltDesiredIfAvailable->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetControllerTiltDesiredIfAvailable,NULL,&SetControllerTiltDesiredIfAvailable_Parms,NULL);
	pFnSetControllerTiltDesiredIfAvailable->FunctionFlags |= 0x400;
}

struct Engine_GetDefaultURL_Parms
{
	struct FString                                     Option;                                           		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString APlayerController::GetDefaultURL(struct FString Option)
{
	static UFieldFunc* pFnGetDefaultURL = NULL;
	if(!pFnGetDefaultURL)
		pFnGetDefaultURL = UObject::FindFunction("Function Engine.PlayerController.GetDefaultURL");

	Engine_GetDefaultURL_Parms GetDefaultURL_Parms;
	memcpy(&GetDefaultURL_Parms.Option,&Option,0xC);
	pFnGetDefaultURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultURL,NULL,&GetDefaultURL_Parms,NULL);
	pFnGetDefaultURL->FunctionFlags |= 0x400;
	return GetDefaultURL_Parms.ReturnValue;
}

struct Engine_RemovePeer_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	//struct FUniqueNetId                                ZeroId;                                           		// 0x000008 (0x0008)              
	//int                                                PeerIdx;                                          		// 0x000010 (0x0004)              
};

void APlayerController::RemovePeer(struct FUniqueNetId PeerNetId)
{
	static UFieldFunc* pFnRemovePeer = NULL;
	if(!pFnRemovePeer)
		pFnRemovePeer = UObject::FindFunction("Function Engine.PlayerController.RemovePeer");

	Engine_RemovePeer_Parms RemovePeer_Parms;
	memcpy(&RemovePeer_Parms.PeerNetId,&PeerNetId,0x8);
	ProcessEvent(pFnRemovePeer,NULL,&RemovePeer_Parms,NULL);
}

struct Engine_APB_LCAPStop_Parms
{
};

void APlayerController::APB_LCAPStop()
{
	static UFieldFunc* pFnAPB_LCAPStop = NULL;
	if(!pFnAPB_LCAPStop)
		pFnAPB_LCAPStop = UObject::FindFunction("Function Engine.PlayerController.APB_LCAPStop");

	Engine_APB_LCAPStop_Parms APB_LCAPStop_Parms;
	pFnAPB_LCAPStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAPB_LCAPStop,NULL,&APB_LCAPStop_Parms,NULL);
	pFnAPB_LCAPStop->FunctionFlags |= 0x400;
}

struct Engine_OnMissingPeersUnregistered_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000008 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000010 (0x0004) [0x00000001] 
};

void APlayerController::OnMissingPeersUnregistered(struct FName SessionName,struct FUniqueNetId PlayerID,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnMissingPeersUnregistered = NULL;
	if(!pFnOnMissingPeersUnregistered)
		pFnOnMissingPeersUnregistered = UObject::FindFunction("Function Engine.PlayerController.OnMissingPeersUnregistered");

	Engine_OnMissingPeersUnregistered_Parms OnMissingPeersUnregistered_Parms;
	memcpy(&OnMissingPeersUnregistered_Parms.SessionName,&SessionName,0x8);
	memcpy(&OnMissingPeersUnregistered_Parms.PlayerID,&PlayerID,0x8);
	OnMissingPeersUnregistered_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnMissingPeersUnregistered,NULL,&OnMissingPeersUnregistered_Parms,NULL);
}

struct Engine_LongClientAdjustPosition_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
	struct FName                                       NewState;                                         		// 0x000008 (0x0008)              
	unsigned char                                      newPhysics;                                       		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	float                                              NewLocX;                                          		// 0x000014 (0x0004)              
	float                                              NewLocY;                                          		// 0x000018 (0x0004)              
	float                                              NewLocZ;                                          		// 0x00001C (0x0004)              
	float                                              NewVelX;                                          		// 0x000020 (0x0004)              
	float                                              NewVelY;                                          		// 0x000024 (0x0004)              
	float                                              NewVelZ;                                          		// 0x000028 (0x0004)              
	class AActor*                                      NewBase;                                          		// 0x00002C (0x0004)              
	float                                              NewFloorX;                                        		// 0x000030 (0x0004)              
	float                                              NewFloorY;                                        		// 0x000034 (0x0004)              
	float                                              NewFloorZ;                                        		// 0x000038 (0x0004)              
};

void APlayerController::LongClientAdjustPosition(double TimeStamp,struct FName NewState,unsigned char newPhysics,float NewLocX,float NewLocY,float NewLocZ,float NewVelX,float NewVelY,float NewVelZ,class AActor* NewBase,float NewFloorX,float NewFloorY,float NewFloorZ)
{
	static UFieldFunc* pFnLongClientAdjustPosition = NULL;
	if(!pFnLongClientAdjustPosition)
		pFnLongClientAdjustPosition = UObject::FindFunction("Function Engine.PlayerController.LongClientAdjustPosition");

	Engine_LongClientAdjustPosition_Parms LongClientAdjustPosition_Parms;
	LongClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy(&LongClientAdjustPosition_Parms.NewState,&NewState,0x8);
	LongClientAdjustPosition_Parms.newPhysics = newPhysics;
	LongClientAdjustPosition_Parms.NewLocX = NewLocX;
	LongClientAdjustPosition_Parms.NewLocY = NewLocY;
	LongClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	LongClientAdjustPosition_Parms.NewVelX = NewVelX;
	LongClientAdjustPosition_Parms.NewVelY = NewVelY;
	LongClientAdjustPosition_Parms.NewVelZ = NewVelZ;
	LongClientAdjustPosition_Parms.NewBase = NewBase;
	LongClientAdjustPosition_Parms.NewFloorX = NewFloorX;
	LongClientAdjustPosition_Parms.NewFloorY = NewFloorY;
	LongClientAdjustPosition_Parms.NewFloorZ = NewFloorZ;
	ProcessEvent(pFnLongClientAdjustPosition,NULL,&LongClientAdjustPosition_Parms,NULL);
}

struct Engine_AimHelpDot_Parms
{
	unsigned long                                      bInstantHit : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float APlayerController::AimHelpDot(bool bInstantHit)
{
	static UFieldFunc* pFnAimHelpDot = NULL;
	if(!pFnAimHelpDot)
		pFnAimHelpDot = UObject::FindFunction("Function Engine.PlayerController.AimHelpDot");

	Engine_AimHelpDot_Parms AimHelpDot_Parms;
	AimHelpDot_Parms.bInstantHit = bInstantHit;
	ProcessEvent(pFnAimHelpDot,NULL,&AimHelpDot_Parms,NULL);
	return AimHelpDot_Parms.ReturnValue;
}

struct Engine_OnEndForInviteComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void APlayerController::OnEndForInviteComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnEndForInviteComplete = NULL;
	if(!pFnOnEndForInviteComplete)
		pFnOnEndForInviteComplete = UObject::FindFunction("Function Engine.PlayerController.OnEndForInviteComplete");

	Engine_OnEndForInviteComplete_Parms OnEndForInviteComplete_Parms;
	memcpy(&OnEndForInviteComplete_Parms.SessionName,&SessionName,0x8);
	OnEndForInviteComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnEndForInviteComplete,NULL,&OnEndForInviteComplete_Parms,NULL);
}

struct Engine_ClientPlayActorFaceFXAnim_Parms
{
	class AActor*                                      SourceActor;                                      		// 0x000000 (0x0004)              
	class UFaceFXAnimSet*                              AnimSet;                                          		// 0x000004 (0x0004)              
	struct FString                                     GroupName;                                        		// 0x000008 (0x000C)              
	struct FString                                     SeqName;                                          		// 0x000014 (0x000C)              
};

void APlayerController::ClientPlayActorFaceFXAnim(class AActor* SourceActor,class UFaceFXAnimSet* AnimSet,struct FString GroupName,struct FString SeqName)
{
	static UFieldFunc* pFnClientPlayActorFaceFXAnim = NULL;
	if(!pFnClientPlayActorFaceFXAnim)
		pFnClientPlayActorFaceFXAnim = UObject::FindFunction("Function Engine.PlayerController.ClientPlayActorFaceFXAnim");

	Engine_ClientPlayActorFaceFXAnim_Parms ClientPlayActorFaceFXAnim_Parms;
	ClientPlayActorFaceFXAnim_Parms.SourceActor = SourceActor;
	ClientPlayActorFaceFXAnim_Parms.AnimSet = AnimSet;
	memcpy(&ClientPlayActorFaceFXAnim_Parms.GroupName,&GroupName,0xC);
	memcpy(&ClientPlayActorFaceFXAnim_Parms.SeqName,&SeqName,0xC);
	ProcessEvent(pFnClientPlayActorFaceFXAnim,NULL,&ClientPlayActorFaceFXAnim_Parms,NULL);
}

struct Engine_GetPRIFromNetId_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	class APlayerReplicationInfo*                      ReturnValue;                                      		// 0x000008 (0x0004)              
	//class APlayerReplicationInfo*                      CurrentPRI;                                       		// 0x00000C (0x0004)              
};

class APlayerReplicationInfo* APlayerController::GetPRIFromNetId(struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnGetPRIFromNetId = NULL;
	if(!pFnGetPRIFromNetId)
		pFnGetPRIFromNetId = UObject::FindFunction("Function Engine.PlayerController.GetPRIFromNetId");

	Engine_GetPRIFromNetId_Parms GetPRIFromNetId_Parms;
	memcpy(&GetPRIFromNetId_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnGetPRIFromNetId,NULL,&GetPRIFromNetId_Parms,NULL);
	return GetPRIFromNetId_Parms.ReturnValue;
}

struct Engine_KickWarning_Parms
{
};

void APlayerController::KickWarning()
{
	static UFieldFunc* pFnKickWarning = NULL;
	if(!pFnKickWarning)
		pFnKickWarning = UObject::FindFunction("Function Engine.PlayerController.KickWarning");

	Engine_KickWarning_Parms KickWarning_Parms;
	ProcessEvent(pFnKickWarning,NULL,&KickWarning_Parms,NULL);
}

struct Engine_ClientPrepareMapChange_Parms
{
	struct FName                                       LevelName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      bFirst : 1;                                       		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bLast : 1;                                        		// 0x00000C (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000010 (0x0004)              
};

void APlayerController::ClientPrepareMapChange(struct FName LevelName,bool bFirst,bool bLast)
{
	static UFieldFunc* pFnClientPrepareMapChange = NULL;
	if(!pFnClientPrepareMapChange)
		pFnClientPrepareMapChange = UObject::FindFunction("Function Engine.PlayerController.ClientPrepareMapChange");

	Engine_ClientPrepareMapChange_Parms ClientPrepareMapChange_Parms;
	memcpy(&ClientPrepareMapChange_Parms.LevelName,&LevelName,0x8);
	ClientPrepareMapChange_Parms.bFirst = bFirst;
	ClientPrepareMapChange_Parms.bLast = bLast;
	ProcessEvent(pFnClientPrepareMapChange,NULL,&ClientPrepareMapChange_Parms,NULL);
}

struct Engine_ClearAckedMoves_Parms
{
};

void APlayerController::ClearAckedMoves()
{
	static UFieldFunc* pFnClearAckedMoves = NULL;
	if(!pFnClearAckedMoves)
		pFnClearAckedMoves = UObject::FindFunction("Function Engine.PlayerController.ClearAckedMoves");

	Engine_ClearAckedMoves_Parms ClearAckedMoves_Parms;
	pFnClearAckedMoves->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearAckedMoves,NULL,&ClearAckedMoves_Parms,NULL);
	pFnClearAckedMoves->FunctionFlags |= 0x400;
}

struct Engine_ForceDeathUpdate_Parms
{
};

void APlayerController::ForceDeathUpdate()
{
	static UFieldFunc* pFnForceDeathUpdate = NULL;
	if(!pFnForceDeathUpdate)
		pFnForceDeathUpdate = UObject::FindFunction("Function Engine.PlayerController.ForceDeathUpdate");

	Engine_ForceDeathUpdate_Parms ForceDeathUpdate_Parms;
	ProcessEvent(pFnForceDeathUpdate,NULL,&ForceDeathUpdate_Parms,NULL);
}

struct Engine_FellOutOfWorld_Parms
{
	class UClass*                                      dmgType;                                          		// 0x000000 (0x0004)              
};

void APlayerController::FellOutOfWorld(class UClass* dmgType)
{
	static UFieldFunc* pFnFellOutOfWorld = NULL;
	if(!pFnFellOutOfWorld)
		pFnFellOutOfWorld = UObject::FindFunction("Function Engine.PlayerController.FellOutOfWorld");

	Engine_FellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;
	ProcessEvent(pFnFellOutOfWorld,NULL,&FellOutOfWorld_Parms,NULL);
}

struct Engine_ClientFlushLevelStreaming_Parms
{
};

void APlayerController::ClientFlushLevelStreaming()
{
	static UFieldFunc* pFnClientFlushLevelStreaming = NULL;
	if(!pFnClientFlushLevelStreaming)
		pFnClientFlushLevelStreaming = UObject::FindFunction("Function Engine.PlayerController.ClientFlushLevelStreaming");

	Engine_ClientFlushLevelStreaming_Parms ClientFlushLevelStreaming_Parms;
	pFnClientFlushLevelStreaming->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientFlushLevelStreaming,NULL,&ClientFlushLevelStreaming_Parms,NULL);
	pFnClientFlushLevelStreaming->FunctionFlags |= 0x400;
}

struct Engine_CopyToClipboard_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void APlayerController::CopyToClipboard(struct FString Text)
{
	static UFieldFunc* pFnCopyToClipboard = NULL;
	if(!pFnCopyToClipboard)
		pFnCopyToClipboard = UObject::FindFunction("Function Engine.PlayerController.CopyToClipboard");

	Engine_CopyToClipboard_Parms CopyToClipboard_Parms;
	memcpy(&CopyToClipboard_Parms.Text,&Text,0xC);
	pFnCopyToClipboard->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCopyToClipboard,NULL,&CopyToClipboard_Parms,NULL);
	pFnCopyToClipboard->FunctionFlags |= 0x400;
}

struct Engine_ServerUTrace_Parms
{
};

void APlayerController::ServerUTrace()
{
	static UFieldFunc* pFnServerUTrace = NULL;
	if(!pFnServerUTrace)
		pFnServerUTrace = UObject::FindFunction("Function Engine.PlayerController.ServerUTrace");

	Engine_ServerUTrace_Parms ServerUTrace_Parms;
	ProcessEvent(pFnServerUTrace,NULL,&ServerUTrace_Parms,NULL);
}

struct Engine_FindConnectedPeerIndex_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                PeerIdx;                                          		// 0x00000C (0x0004)              
};

int APlayerController::FindConnectedPeerIndex(struct FUniqueNetId PeerNetId)
{
	static UFieldFunc* pFnFindConnectedPeerIndex = NULL;
	if(!pFnFindConnectedPeerIndex)
		pFnFindConnectedPeerIndex = UObject::FindFunction("Function Engine.PlayerController.FindConnectedPeerIndex");

	Engine_FindConnectedPeerIndex_Parms FindConnectedPeerIndex_Parms;
	memcpy(&FindConnectedPeerIndex_Parms.PeerNetId,&PeerNetId,0x8);
	ProcessEvent(pFnFindConnectedPeerIndex,NULL,&FindConnectedPeerIndex_Parms,NULL);
	return FindConnectedPeerIndex_Parms.ReturnValue;
}

struct Engine_ServerCamera_Parms
{
	struct FString                                     r_NewMode;                                        		// 0x000000 (0x000C)              
	//struct FName                                       NewMode;                                          		// 0x00000C (0x0008)              
};

void APlayerController::ServerCamera(struct FString r_NewMode)
{
	static UFieldFunc* pFnServerCamera = NULL;
	if(!pFnServerCamera)
		pFnServerCamera = UObject::FindFunction("Function Engine.PlayerController.ServerCamera");

	Engine_ServerCamera_Parms ServerCamera_Parms;
	memcpy(&ServerCamera_Parms.r_NewMode,&r_NewMode,0xC);
	ProcessEvent(pFnServerCamera,NULL,&ServerCamera_Parms,NULL);
}

struct Engine_ClientShowSurvey_Parms
{
	struct FString                                     QuestionId;                                       		// 0x000000 (0x000C)              
	struct FString                                     Context;                                          		// 0x00000C (0x000C)              
};

void APlayerController::ClientShowSurvey(struct FString QuestionId,struct FString Context)
{
	static UFieldFunc* pFnClientShowSurvey = NULL;
	if(!pFnClientShowSurvey)
		pFnClientShowSurvey = UObject::FindFunction("Function Engine.PlayerController.ClientShowSurvey");

	Engine_ClientShowSurvey_Parms ClientShowSurvey_Parms;
	memcpy(&ClientShowSurvey_Parms.QuestionId,&QuestionId,0xC);
	memcpy(&ClientShowSurvey_Parms.Context,&Context,0xC);
	ProcessEvent(pFnClientShowSurvey,NULL,&ClientShowSurvey_Parms,NULL);
}

struct Engine_ServerAddPeer_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	unsigned char                                      NatType;                                          		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	//struct FUniqueNetId                                ZeroId;                                           		// 0x00000C (0x0008)              
	//struct FConnectedPeerInfo                          NewPeerInfo;                                      		// 0x000014 (0x0010)              
};

void APlayerController::ServerAddPeer(struct FUniqueNetId PeerNetId,unsigned char NatType)
{
	static UFieldFunc* pFnServerAddPeer = NULL;
	if(!pFnServerAddPeer)
		pFnServerAddPeer = UObject::FindFunction("Function Engine.PlayerController.ServerAddPeer");

	Engine_ServerAddPeer_Parms ServerAddPeer_Parms;
	memcpy(&ServerAddPeer_Parms.PeerNetId,&PeerNetId,0x8);
	ServerAddPeer_Parms.NatType = NatType;
	ProcessEvent(pFnServerAddPeer,NULL,&ServerAddPeer_Parms,NULL);
}

struct Engine_ProcessMovePlayerWalkingState_Parms
{
	float                                              DeltaRot;                                         		// 0x000000 (0x0004)              
	FVector3                                           outNewAccel;                                      		// 0x000004 (0x000C)              
};

void APlayerController::ProcessMovePlayerWalkingState(float DeltaRot,FVector3* outNewAccel)
{
	static UFieldFunc* pFnProcessMovePlayerWalkingState = NULL;
	if(!pFnProcessMovePlayerWalkingState)
		pFnProcessMovePlayerWalkingState = UObject::FindFunction("Function Engine.PlayerController.ProcessMovePlayerWalkingState");

	Engine_ProcessMovePlayerWalkingState_Parms ProcessMovePlayerWalkingState_Parms;
	ProcessMovePlayerWalkingState_Parms.DeltaRot = DeltaRot;
	pFnProcessMovePlayerWalkingState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProcessMovePlayerWalkingState,NULL,&ProcessMovePlayerWalkingState_Parms,NULL);
	pFnProcessMovePlayerWalkingState->FunctionFlags |= 0x400;
	if(outNewAccel)
		memcpy(outNewAccel,&ProcessMovePlayerWalkingState_Parms.outNewAccel,0xC);
}

struct Engine_SetFOV_Parms
{
	float                                              NewFOV;                                           		// 0x000000 (0x0004)              
};

void APlayerController::SetFOV(float NewFOV)
{
	static UFieldFunc* pFnSetFOV = NULL;
	if(!pFnSetFOV)
		pFnSetFOV = UObject::FindFunction("Function Engine.PlayerController.SetFOV");

	Engine_SetFOV_Parms SetFOV_Parms;
	SetFOV_Parms.NewFOV = NewFOV;
	ProcessEvent(pFnSetFOV,NULL,&SetFOV_Parms,NULL);
}

struct Engine_OnRegisterHostStatGuidComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	//struct FString                                     StatGuid;                                         		// 0x000004 (0x000C)              
};

void APlayerController::OnRegisterHostStatGuidComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnRegisterHostStatGuidComplete = NULL;
	if(!pFnOnRegisterHostStatGuidComplete)
		pFnOnRegisterHostStatGuidComplete = UObject::FindFunction("Function Engine.PlayerController.OnRegisterHostStatGuidComplete");

	Engine_OnRegisterHostStatGuidComplete_Parms OnRegisterHostStatGuidComplete_Parms;
	OnRegisterHostStatGuidComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnRegisterHostStatGuidComplete,NULL,&OnRegisterHostStatGuidComplete_Parms,NULL);
}

struct Engine_ClientSetViewTarget_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	struct FViewTargetTransitionParams                 TransitionParams;                                 		// 0x000004 (0x000C)              
};

void APlayerController::ClientSetViewTarget(class AActor* A,struct FViewTargetTransitionParams TransitionParams)
{
	static UFieldFunc* pFnClientSetViewTarget = NULL;
	if(!pFnClientSetViewTarget)
		pFnClientSetViewTarget = UObject::FindFunction("Function Engine.PlayerController.ClientSetViewTarget");

	Engine_ClientSetViewTarget_Parms ClientSetViewTarget_Parms;
	ClientSetViewTarget_Parms.A = A;
	memcpy(&ClientSetViewTarget_Parms.TransitionParams,&TransitionParams,0xC);
	pFnClientSetViewTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientSetViewTarget,NULL,&ClientSetViewTarget_Parms,NULL);
	pFnClientSetViewTarget->FunctionFlags |= 0x400;
}

struct Engine_Destroyed_Parms
{
};

void APlayerController::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.PlayerController.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_NextWeapon_Parms
{
};

void APlayerController::NextWeapon()
{
	static UFieldFunc* pFnNextWeapon = NULL;
	if(!pFnNextWeapon)
		pFnNextWeapon = UObject::FindFunction("Function Engine.PlayerController.NextWeapon");

	Engine_NextWeapon_Parms NextWeapon_Parms;
	ProcessEvent(pFnNextWeapon,NULL,&NextWeapon_Parms,NULL);
}

struct Engine_UnregisterPlayerDataStores_Parms
{
	//class ULocalPlayer*                                LP;                                               		// 0x000000 (0x0004)              
	//class UDataStoreClient*                            DataStoreManager;                                 		// 0x000004 (0x0004)              
	//class UUIDataStore_OnlinePlayerData*               PlayerDataStore;                                  		// 0x000008 (0x0004)              
	//struct FString                                     PlayerName;                                       		// 0x00000C (0x000C)              
};

void APlayerController::UnregisterPlayerDataStores()
{
	static UFieldFunc* pFnUnregisterPlayerDataStores = NULL;
	if(!pFnUnregisterPlayerDataStores)
		pFnUnregisterPlayerDataStores = UObject::FindFunction("Function Engine.PlayerController.UnregisterPlayerDataStores");

	Engine_UnregisterPlayerDataStores_Parms UnregisterPlayerDataStores_Parms;
	ProcessEvent(pFnUnregisterPlayerDataStores,NULL,&UnregisterPlayerDataStores_Parms,NULL);
}

struct Engine_CameraShake_Parms
{
	float                                              Duration;                                         		// 0x000000 (0x0004)              
	FVector3                                           newRotAmplitude;                                  		// 0x000004 (0x000C)              
	FVector3                                           newRotFrequency;                                  		// 0x000010 (0x000C)              
	FVector3                                           newLocAmplitude;                                  		// 0x00001C (0x000C)              
	FVector3                                           newLocFrequency;                                  		// 0x000028 (0x000C)              
	float                                              newFOVAmplitude;                                  		// 0x000034 (0x0004)              
	float                                              newFOVFrequency;                                  		// 0x000038 (0x0004)              
};

void APlayerController::CameraShake(float Duration,FVector3 newRotAmplitude,FVector3 newRotFrequency,FVector3 newLocAmplitude,FVector3 newLocFrequency,float newFOVAmplitude,float newFOVFrequency)
{
	static UFieldFunc* pFnCameraShake = NULL;
	if(!pFnCameraShake)
		pFnCameraShake = UObject::FindFunction("Function Engine.PlayerController.CameraShake");

	Engine_CameraShake_Parms CameraShake_Parms;
	CameraShake_Parms.Duration = Duration;
	memcpy(&CameraShake_Parms.newRotAmplitude,&newRotAmplitude,0xC);
	memcpy(&CameraShake_Parms.newRotFrequency,&newRotFrequency,0xC);
	memcpy(&CameraShake_Parms.newLocAmplitude,&newLocAmplitude,0xC);
	memcpy(&CameraShake_Parms.newLocFrequency,&newLocFrequency,0xC);
	CameraShake_Parms.newFOVAmplitude = newFOVAmplitude;
	CameraShake_Parms.newFOVFrequency = newFOVFrequency;
	pFnCameraShake->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCameraShake,NULL,&CameraShake_Parms,NULL);
	pFnCameraShake->FunctionFlags |= 0x400;
}

struct Engine_OnUnregisterPlayerCompleteForJoinMigrate_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000008 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000010 (0x0004) [0x00000001] 
};

void APlayerController::OnUnregisterPlayerCompleteForJoinMigrate(struct FName SessionName,struct FUniqueNetId PlayerID,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnUnregisterPlayerCompleteForJoinMigrate = NULL;
	if(!pFnOnUnregisterPlayerCompleteForJoinMigrate)
		pFnOnUnregisterPlayerCompleteForJoinMigrate = UObject::FindFunction("Function Engine.PlayerController.OnUnregisterPlayerCompleteForJoinMigrate");

	Engine_OnUnregisterPlayerCompleteForJoinMigrate_Parms OnUnregisterPlayerCompleteForJoinMigrate_Parms;
	memcpy(&OnUnregisterPlayerCompleteForJoinMigrate_Parms.SessionName,&SessionName,0x8);
	memcpy(&OnUnregisterPlayerCompleteForJoinMigrate_Parms.PlayerID,&PlayerID,0x8);
	OnUnregisterPlayerCompleteForJoinMigrate_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnUnregisterPlayerCompleteForJoinMigrate,NULL,&OnUnregisterPlayerCompleteForJoinMigrate_Parms,NULL);
}

struct Engine_AskForPawn_Parms
{
};

void APlayerController::AskForPawn()
{
	static UFieldFunc* pFnAskForPawn = NULL;
	if(!pFnAskForPawn)
		pFnAskForPawn = UObject::FindFunction("Function Engine.PlayerController.AskForPawn");

	Engine_AskForPawn_Parms AskForPawn_Parms;
	ProcessEvent(pFnAskForPawn,NULL,&AskForPawn_Parms,NULL);
}

struct Engine_ClientStopForceFeedbackWaveform_Parms
{
	class UForceFeedbackWaveform*                      FFWaveform;                                       		// 0x000000 (0x0004)              
};

void APlayerController::ClientStopForceFeedbackWaveform(class UForceFeedbackWaveform* FFWaveform)
{
	static UFieldFunc* pFnClientStopForceFeedbackWaveform = NULL;
	if(!pFnClientStopForceFeedbackWaveform)
		pFnClientStopForceFeedbackWaveform = UObject::FindFunction("Function Engine.PlayerController.ClientStopForceFeedbackWaveform");

	Engine_ClientStopForceFeedbackWaveform_Parms ClientStopForceFeedbackWaveform_Parms;
	ClientStopForceFeedbackWaveform_Parms.FFWaveform = FFWaveform;
	ProcessEvent(pFnClientStopForceFeedbackWaveform,NULL,&ClientStopForceFeedbackWaveform_Parms,NULL);
}

struct Engine_ClearProgressMessages_Parms
{
};

void APlayerController::ClearProgressMessages()
{
	static UFieldFunc* pFnClearProgressMessages = NULL;
	if(!pFnClearProgressMessages)
		pFnClearProgressMessages = UObject::FindFunction("Function Engine.PlayerController.ClearProgressMessages");

	Engine_ClearProgressMessages_Parms ClearProgressMessages_Parms;
	ProcessEvent(pFnClearProgressMessages,NULL,&ClearProgressMessages_Parms,NULL);
}

struct Engine_PreRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void APlayerController::PreRender(class UCanvas* Canvas)
{
	static UFieldFunc* pFnPreRender = NULL;
	if(!pFnPreRender)
		pFnPreRender = UObject::FindFunction("Function Engine.PlayerController.PreRender");

	Engine_PreRender_Parms PreRender_Parms;
	PreRender_Parms.Canvas = Canvas;
	ProcessEvent(pFnPreRender,NULL,&PreRender_Parms,NULL);
}

struct Engine_SetViewTarget_Parms
{
	class AActor*                                      NewViewTarget;                                    		// 0x000000 (0x0004)              
	struct FViewTargetTransitionParams                 TransitionParams;                                 		// 0x000004 (0x000C)              
};

void APlayerController::SetViewTarget(class AActor* NewViewTarget,struct FViewTargetTransitionParams TransitionParams)
{
	static UFieldFunc* pFnSetViewTarget = NULL;
	if(!pFnSetViewTarget)
		pFnSetViewTarget = UObject::FindFunction("Function Engine.PlayerController.SetViewTarget");

	Engine_SetViewTarget_Parms SetViewTarget_Parms;
	SetViewTarget_Parms.NewViewTarget = NewViewTarget;
	memcpy(&SetViewTarget_Parms.TransitionParams,&TransitionParams,0xC);
	pFnSetViewTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetViewTarget,NULL,&SetViewTarget_Parms,NULL);
	pFnSetViewTarget->FunctionFlags |= 0x400;
}

struct Engine_ListCE_Parms
{
};

void APlayerController::ListCE()
{
	static UFieldFunc* pFnListCE = NULL;
	if(!pFnListCE)
		pFnListCE = UObject::FindFunction("Function Engine.PlayerController.ListCE");

	Engine_ListCE_Parms ListCE_Parms;
	ProcessEvent(pFnListCE,NULL,&ListCE_Parms,NULL);
}

struct Engine_CameraLookAtFinished_Parms
{
	class USeqAct_CameraLookAt*                        Action;                                           		// 0x000000 (0x0004)              
};

void APlayerController::CameraLookAtFinished(class USeqAct_CameraLookAt* Action)
{
	static UFieldFunc* pFnCameraLookAtFinished = NULL;
	if(!pFnCameraLookAtFinished)
		pFnCameraLookAtFinished = UObject::FindFunction("Function Engine.PlayerController.CameraLookAtFinished");

	Engine_CameraLookAtFinished_Parms CameraLookAtFinished_Parms;
	CameraLookAtFinished_Parms.Action = Action;
	ProcessEvent(pFnCameraLookAtFinished,NULL,&CameraLookAtFinished_Parms,NULL);
}

struct Engine_RegisterPlayerDataStores_Parms
{
	//class ULocalPlayer*                                LP;                                               		// 0x000000 (0x0004)              
	//class UDataStoreClient*                            DataStoreManager;                                 		// 0x000004 (0x0004)              
	//class UClass*                                      PlayerSettingsDataStoreClass;                     		// 0x000008 (0x0004)              
	//class UClass*                                      PlayerDataStoreClass;                             		// 0x00000C (0x0004)              
	//struct FString                                     PlayerName;                                       		// 0x000010 (0x000C)              
};

void APlayerController::RegisterPlayerDataStores()
{
	static UFieldFunc* pFnRegisterPlayerDataStores = NULL;
	if(!pFnRegisterPlayerDataStores)
		pFnRegisterPlayerDataStores = UObject::FindFunction("Function Engine.PlayerController.RegisterPlayerDataStores");

	Engine_RegisterPlayerDataStores_Parms RegisterPlayerDataStores_Parms;
	ProcessEvent(pFnRegisterPlayerDataStores,NULL,&RegisterPlayerDataStores_Parms,NULL);
}

struct Engine_ClientTravel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	unsigned char                                      TravelType;                                       		// 0x00000C (0x0001)              
	unsigned long                                      bSeamless : 1;                                    		// 0x000010 (0x0004) [0x00000001] 
	struct FGuid                                       MapPackageGuid;                                   		// 0x000014 (0x0010)              
};

void APlayerController::ClientTravel(struct FString URL,unsigned char TravelType,bool bSeamless,struct FGuid MapPackageGuid)
{
	static UFieldFunc* pFnClientTravel = NULL;
	if(!pFnClientTravel)
		pFnClientTravel = UObject::FindFunction("Function Engine.PlayerController.ClientTravel");

	Engine_ClientTravel_Parms ClientTravel_Parms;
	memcpy(&ClientTravel_Parms.URL,&URL,0xC);
	ClientTravel_Parms.TravelType = TravelType;
	ClientTravel_Parms.bSeamless = bSeamless;
	memcpy(&ClientTravel_Parms.MapPackageGuid,&MapPackageGuid,0x10);
	pFnClientTravel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientTravel,NULL,&ClientTravel_Parms,NULL);
	pFnClientTravel->FunctionFlags |= 0x400;
}

struct Engine_ListConsoleEvents_Parms
{
	//TArray<class USequenceObject*>                     ConsoleEvents;                                    		// 0x000000 (0x000C)              
	//class USeqEvent_Console*                           ConsoleEvt;                                       		// 0x00000C (0x0004)              
	//class USequence*                                   GameSeq;                                          		// 0x000010 (0x0004)              
	//int                                                Idx;                                              		// 0x000014 (0x0004)              
};

void APlayerController::ListConsoleEvents()
{
	static UFieldFunc* pFnListConsoleEvents = NULL;
	if(!pFnListConsoleEvents)
		pFnListConsoleEvents = UObject::FindFunction("Function Engine.PlayerController.ListConsoleEvents");

	Engine_ListConsoleEvents_Parms ListConsoleEvents_Parms;
	ProcessEvent(pFnListConsoleEvents,NULL,&ListConsoleEvents_Parms,NULL);
}

struct Engine_UpdateRotation_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	//FRotator                                           DeltaRot;                                         		// 0x000004 (0x000C)              
	//FRotator                                           NewRotation;                                      		// 0x000010 (0x000C)              
	//FRotator                                           ViewRotation;                                     		// 0x00001C (0x000C)              
};

void APlayerController::UpdateRotation(float DeltaTime)
{
	static UFieldFunc* pFnUpdateRotation = NULL;
	if(!pFnUpdateRotation)
		pFnUpdateRotation = UObject::FindFunction("Function Engine.PlayerController.UpdateRotation");

	Engine_UpdateRotation_Parms UpdateRotation_Parms;
	UpdateRotation_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnUpdateRotation,NULL,&UpdateRotation_Parms,NULL);
}

struct Engine_IsPaused_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsPaused()
{
	static UFieldFunc* pFnIsPaused = NULL;
	if(!pFnIsPaused)
		pFnIsPaused = UObject::FindFunction("Function Engine.PlayerController.IsPaused");

	Engine_IsPaused_Parms IsPaused_Parms;
	ProcessEvent(pFnIsPaused,NULL,&IsPaused_Parms,NULL);
	return IsPaused_Parms.ReturnValue;
}

struct Engine_ClientMessage_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
	struct FName                                       Type;                                             		// 0x00000C (0x0008)              
	float                                              MsgLifeTime;                                      		// 0x000014 (0x0004)              
};

void APlayerController::ClientMessage(struct FString S,struct FName Type,float MsgLifeTime)
{
	static UFieldFunc* pFnClientMessage = NULL;
	if(!pFnClientMessage)
		pFnClientMessage = UObject::FindFunction("Function Engine.PlayerController.ClientMessage");

	Engine_ClientMessage_Parms ClientMessage_Parms;
	memcpy(&ClientMessage_Parms.S,&S,0xC);
	memcpy(&ClientMessage_Parms.Type,&Type,0x8);
	ClientMessage_Parms.MsgLifeTime = MsgLifeTime;
	ProcessEvent(pFnClientMessage,NULL,&ClientMessage_Parms,NULL);
}

struct Engine_ServerNotifyLoadedWorld_Parms
{
	struct FString                                     WorldPackageName;                                 		// 0x000000 (0x000C)              
};

void APlayerController::ServerNotifyLoadedWorld(struct FString WorldPackageName)
{
	static UFieldFunc* pFnServerNotifyLoadedWorld = NULL;
	if(!pFnServerNotifyLoadedWorld)
		pFnServerNotifyLoadedWorld = UObject::FindFunction("Function Engine.PlayerController.ServerNotifyLoadedWorld");

	Engine_ServerNotifyLoadedWorld_Parms ServerNotifyLoadedWorld_Parms;
	memcpy(&ServerNotifyLoadedWorld_Parms.WorldPackageName,&WorldPackageName,0xC);
	pFnServerNotifyLoadedWorld->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerNotifyLoadedWorld,NULL,&ServerNotifyLoadedWorld_Parms,NULL);
	pFnServerNotifyLoadedWorld->FunctionFlags |= 0x400;
}

struct Engine_OldServerMove_Parms
{
	float                                              OldTimeStamp;                                     		// 0x000000 (0x0004)              
	unsigned char                                      OldAccelX;                                        		// 0x000004 (0x0001)              
	unsigned char                                      OldAccelY;                                        		// 0x000005 (0x0001)              
	unsigned char                                      OldAccelZ;                                        		// 0x000006 (0x0001)              
	unsigned char                                      OldMoveFlags;                                     		// 0x000007 (0x0001)              
};

void APlayerController::OldServerMove(float OldTimeStamp,unsigned char OldAccelX,unsigned char OldAccelY,unsigned char OldAccelZ,unsigned char OldMoveFlags)
{
	static UFieldFunc* pFnOldServerMove = NULL;
	if(!pFnOldServerMove)
		pFnOldServerMove = UObject::FindFunction("Function Engine.PlayerController.OldServerMove");

	Engine_OldServerMove_Parms OldServerMove_Parms;
	OldServerMove_Parms.OldTimeStamp = OldTimeStamp;
	OldServerMove_Parms.OldAccelX = OldAccelX;
	OldServerMove_Parms.OldAccelY = OldAccelY;
	OldServerMove_Parms.OldAccelZ = OldAccelZ;
	OldServerMove_Parms.OldMoveFlags = OldMoveFlags;
	pFnOldServerMove->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOldServerMove,NULL,&OldServerMove_Parms,NULL);
	pFnOldServerMove->FunctionFlags |= 0x400;
}

struct Engine_Kismet_ClientPlaySound_Parms
{
	class USoundCue*                                   ASound;                                           		// 0x000000 (0x0004)              
	class AActor*                                      SourceActor;                                      		// 0x000004 (0x0004)              
	float                                              VolumeMultiplier;                                 		// 0x000008 (0x0004)              
	float                                              PitchMultiplier;                                  		// 0x00000C (0x0004)              
	float                                              FadeInTime;                                       		// 0x000010 (0x0004)              
	unsigned long                                      bSuppressSubtitles : 1;                           		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bSuppressSpatialization : 1;                      		// 0x000018 (0x0004) [0x00000001] 
	//class UAudioComponent*                             AC;                                               		// 0x00001C (0x0004)              
};

void APlayerController::Kismet_ClientPlaySound(class USoundCue* ASound,class AActor* SourceActor,float VolumeMultiplier,float PitchMultiplier,float FadeInTime,bool bSuppressSubtitles,bool bSuppressSpatialization)
{
	static UFieldFunc* pFnKismet_ClientPlaySound = NULL;
	if(!pFnKismet_ClientPlaySound)
		pFnKismet_ClientPlaySound = UObject::FindFunction("Function Engine.PlayerController.Kismet_ClientPlaySound");

	Engine_Kismet_ClientPlaySound_Parms Kismet_ClientPlaySound_Parms;
	Kismet_ClientPlaySound_Parms.ASound = ASound;
	Kismet_ClientPlaySound_Parms.SourceActor = SourceActor;
	Kismet_ClientPlaySound_Parms.VolumeMultiplier = VolumeMultiplier;
	Kismet_ClientPlaySound_Parms.PitchMultiplier = PitchMultiplier;
	Kismet_ClientPlaySound_Parms.FadeInTime = FadeInTime;
	Kismet_ClientPlaySound_Parms.bSuppressSubtitles = bSuppressSubtitles;
	Kismet_ClientPlaySound_Parms.bSuppressSpatialization = bSuppressSpatialization;
	ProcessEvent(pFnKismet_ClientPlaySound,NULL,&Kismet_ClientPlaySound_Parms,NULL);
}

struct Engine_Camera_Parms
{
	struct FName                                       NewMode;                                          		// 0x000000 (0x0008)              
};

void APlayerController::Camera(struct FName NewMode)
{
	static UFieldFunc* pFnCamera = NULL;
	if(!pFnCamera)
		pFnCamera = UObject::FindFunction("Function Engine.PlayerController.Camera");

	Engine_Camera_Parms Camera_Parms;
	memcpy(&Camera_Parms.NewMode,&NewMode,0x8);
	ProcessEvent(pFnCamera,NULL,&Camera_Parms,NULL);
}

struct Engine_ShowPlayerState_Parms
{
};

void APlayerController::ShowPlayerState()
{
	static UFieldFunc* pFnShowPlayerState = NULL;
	if(!pFnShowPlayerState)
		pFnShowPlayerState = UObject::FindFunction("Function Engine.PlayerController.ShowPlayerState");

	Engine_ShowPlayerState_Parms ShowPlayerState_Parms;
	ProcessEvent(pFnShowPlayerState,NULL,&ShowPlayerState_Parms,NULL);
}

struct Engine_OnForceFeedback_Parms
{
	class USeqAct_ForceFeedback*                       Action;                                           		// 0x000000 (0x0004)              
};

void APlayerController::OnForceFeedback(class USeqAct_ForceFeedback* Action)
{
	static UFieldFunc* pFnOnForceFeedback = NULL;
	if(!pFnOnForceFeedback)
		pFnOnForceFeedback = UObject::FindFunction("Function Engine.PlayerController.OnForceFeedback");

	Engine_OnForceFeedback_Parms OnForceFeedback_Parms;
	OnForceFeedback_Parms.Action = Action;
	ProcessEvent(pFnOnForceFeedback,NULL,&OnForceFeedback_Parms,NULL);
}

struct Engine_ShowMenu_Parms
{
};

void APlayerController::ShowMenu()
{
	static UFieldFunc* pFnShowMenu = NULL;
	if(!pFnShowMenu)
		pFnShowMenu = UObject::FindFunction("Function Engine.PlayerController.ShowMenu");

	Engine_ShowMenu_Parms ShowMenu_Parms;
	ProcessEvent(pFnShowMenu,NULL,&ShowMenu_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APlayerController::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.PlayerController.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_ClearOnlineDelegates_Parms
{
	//class ULocalPlayer*                                LP;                                               		// 0x000000 (0x0004)              
};

void APlayerController::ClearOnlineDelegates()
{
	static UFieldFunc* pFnClearOnlineDelegates = NULL;
	if(!pFnClearOnlineDelegates)
		pFnClearOnlineDelegates = UObject::FindFunction("Function Engine.PlayerController.ClearOnlineDelegates");

	Engine_ClearOnlineDelegates_Parms ClearOnlineDelegates_Parms;
	ProcessEvent(pFnClearOnlineDelegates,NULL,&ClearOnlineDelegates_Parms,NULL);
}

struct Engine_APB_AckGoodStop_Parms
{
};

void APlayerController::APB_AckGoodStop()
{
	static UFieldFunc* pFnAPB_AckGoodStop = NULL;
	if(!pFnAPB_AckGoodStop)
		pFnAPB_AckGoodStop = UObject::FindFunction("Function Engine.PlayerController.APB_AckGoodStop");

	Engine_APB_AckGoodStop_Parms APB_AckGoodStop_Parms;
	pFnAPB_AckGoodStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAPB_AckGoodStop,NULL,&APB_AckGoodStop_Parms,NULL);
	pFnAPB_AckGoodStop->FunctionFlags |= 0x400;
}

struct Engine_UnPossess_Parms
{
};

void APlayerController::UnPossess()
{
	static UFieldFunc* pFnUnPossess = NULL;
	if(!pFnUnPossess)
		pFnUnPossess = UObject::FindFunction("Function Engine.PlayerController.UnPossess");

	Engine_UnPossess_Parms UnPossess_Parms;
	ProcessEvent(pFnUnPossess,NULL,&UnPossess_Parms,NULL);
}

struct Engine_ProcessDrive_Parms
{
	float                                              InForward;                                        		// 0x000000 (0x0004)              
	float                                              InStrafe;                                         		// 0x000004 (0x0004)              
	float                                              InUp;                                             		// 0x000008 (0x0004)              
	float                                              InSprint;                                         		// 0x00000C (0x0004)              
};

void APlayerController::ProcessDrive(float InForward,float InStrafe,float InUp,float InSprint)
{
	static UFieldFunc* pFnProcessDrive = NULL;
	if(!pFnProcessDrive)
		pFnProcessDrive = UObject::FindFunction("Function Engine.PlayerController.ProcessDrive");

	Engine_ProcessDrive_Parms ProcessDrive_Parms;
	ProcessDrive_Parms.InForward = InForward;
	ProcessDrive_Parms.InStrafe = InStrafe;
	ProcessDrive_Parms.InUp = InUp;
	ProcessDrive_Parms.InSprint = InSprint;
	pFnProcessDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProcessDrive,NULL,&ProcessDrive_Parms,NULL);
	pFnProcessDrive->FunctionFlags |= 0x400;
}

struct Engine_ServerSetUniquePlayerId_Parms
{
	struct FUniqueNetId                                UniqueId;                                         		// 0x000000 (0x0008)              
	unsigned long                                      bWasInvited : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//struct FUniqueNetId                                ZeroId;                                           		// 0x00000C (0x0008)              
};

void APlayerController::ServerSetUniquePlayerId(struct FUniqueNetId UniqueId,bool bWasInvited)
{
	static UFieldFunc* pFnServerSetUniquePlayerId = NULL;
	if(!pFnServerSetUniquePlayerId)
		pFnServerSetUniquePlayerId = UObject::FindFunction("Function Engine.PlayerController.ServerSetUniquePlayerId");

	Engine_ServerSetUniquePlayerId_Parms ServerSetUniquePlayerId_Parms;
	memcpy(&ServerSetUniquePlayerId_Parms.UniqueId,&UniqueId,0x8);
	ServerSetUniquePlayerId_Parms.bWasInvited = bWasInvited;
	ProcessEvent(pFnServerSetUniquePlayerId,NULL,&ServerSetUniquePlayerId_Parms,NULL);
}

struct Engine_SendClientAdjustment_Parms
{
};

void APlayerController::SendClientAdjustment()
{
	static UFieldFunc* pFnSendClientAdjustment = NULL;
	if(!pFnSendClientAdjustment)
		pFnSendClientAdjustment = UObject::FindFunction("Function Engine.PlayerController.SendClientAdjustment");

	Engine_SendClientAdjustment_Parms SendClientAdjustment_Parms;
	pFnSendClientAdjustment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSendClientAdjustment,NULL,&SendClientAdjustment_Parms,NULL);
	pFnSendClientAdjustment->FunctionFlags |= 0x400;
}

struct Engine_Possess_Parms
{
	class APawn*                                       aPawn;                                            		// 0x000000 (0x0004)              
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	//class AActor*                                      A;                                                		// 0x000008 (0x0004)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
	//class USeqEvent_Touch*                             TouchEvent;                                       		// 0x000010 (0x0004)              
};

void APlayerController::Possess(class APawn* aPawn,bool bVehicleTransition)
{
	static UFieldFunc* pFnPossess = NULL;
	if(!pFnPossess)
		pFnPossess = UObject::FindFunction("Function Engine.PlayerController.Possess");

	Engine_Possess_Parms Possess_Parms;
	Possess_Parms.aPawn = aPawn;
	Possess_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnPossess,NULL,&Possess_Parms,NULL);
}

struct Engine_GetSeamlessTravelActorList_Parms
{
	unsigned long                                      bToEntry : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	TArray<class AActor*>                              ActorList;                                        		// 0x000004 (0x000C)              
};

void APlayerController::GetSeamlessTravelActorList(bool bToEntry,TArray<class AActor*>* ActorList)
{
	static UFieldFunc* pFnGetSeamlessTravelActorList = NULL;
	if(!pFnGetSeamlessTravelActorList)
		pFnGetSeamlessTravelActorList = UObject::FindFunction("Function Engine.PlayerController.GetSeamlessTravelActorList");

	Engine_GetSeamlessTravelActorList_Parms GetSeamlessTravelActorList_Parms;
	GetSeamlessTravelActorList_Parms.bToEntry = bToEntry;
	ProcessEvent(pFnGetSeamlessTravelActorList,NULL,&GetSeamlessTravelActorList_Parms,NULL);
	if(ActorList)
		memcpy(ActorList,&GetSeamlessTravelActorList_Parms.ActorList,0xC);
}

struct Engine_CleanOutSavedMoves_Parms
{
};

void APlayerController::CleanOutSavedMoves()
{
	static UFieldFunc* pFnCleanOutSavedMoves = NULL;
	if(!pFnCleanOutSavedMoves)
		pFnCleanOutSavedMoves = UObject::FindFunction("Function Engine.PlayerController.CleanOutSavedMoves");

	Engine_CleanOutSavedMoves_Parms CleanOutSavedMoves_Parms;
	pFnCleanOutSavedMoves->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCleanOutSavedMoves,NULL,&CleanOutSavedMoves_Parms,NULL);
	pFnCleanOutSavedMoves->FunctionFlags |= 0x400;
}

struct Engine_IgnoreMoveInput_Parms
{
	unsigned long                                      bNewMoveInput : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::IgnoreMoveInput(bool bNewMoveInput)
{
	static UFieldFunc* pFnIgnoreMoveInput = NULL;
	if(!pFnIgnoreMoveInput)
		pFnIgnoreMoveInput = UObject::FindFunction("Function Engine.PlayerController.IgnoreMoveInput");

	Engine_IgnoreMoveInput_Parms IgnoreMoveInput_Parms;
	IgnoreMoveInput_Parms.bNewMoveInput = bNewMoveInput;
	ProcessEvent(pFnIgnoreMoveInput,NULL,&IgnoreMoveInput_Parms,NULL);
}

struct Engine_StopFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void APlayerController::StopFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStopFire = NULL;
	if(!pFnStopFire)
		pFnStopFire = UObject::FindFunction("Function Engine.PlayerController.StopFire");

	Engine_StopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStopFire,NULL,&StopFire_Parms,NULL);
}

struct Engine_SaveActorConfig_Parms
{
	struct FName                                       actorName;                                        		// 0x000000 (0x0008)              
	//class AActor*                                      chkActor;                                         		// 0x000008 (0x0004)              
};

void APlayerController::SaveActorConfig(struct FName actorName)
{
	static UFieldFunc* pFnSaveActorConfig = NULL;
	if(!pFnSaveActorConfig)
		pFnSaveActorConfig = UObject::FindFunction("Function Engine.PlayerController.SaveActorConfig");

	Engine_SaveActorConfig_Parms SaveActorConfig_Parms;
	memcpy(&SaveActorConfig_Parms.actorName,&actorName,0x8);
	ProcessEvent(pFnSaveActorConfig,NULL,&SaveActorConfig_Parms,NULL);
}

struct Engine_SetAllowMatureLanguage_Parms
{
	unsigned long                                      bAllowMatureLanguge : 1;                          		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SetAllowMatureLanguage(bool bAllowMatureLanguge)
{
	static UFieldFunc* pFnSetAllowMatureLanguage = NULL;
	if(!pFnSetAllowMatureLanguage)
		pFnSetAllowMatureLanguage = UObject::FindFunction("Function Engine.PlayerController.SetAllowMatureLanguage");

	Engine_SetAllowMatureLanguage_Parms SetAllowMatureLanguage_Parms;
	SetAllowMatureLanguage_Parms.bAllowMatureLanguge = bAllowMatureLanguge;
	pFnSetAllowMatureLanguage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAllowMatureLanguage,NULL,&SetAllowMatureLanguage_Parms,NULL);
	pFnSetAllowMatureLanguage->FunctionFlags |= 0x400;
}

struct Engine_ServerSetNetSpeed_Parms
{
	int                                                NewSpeed;                                         		// 0x000000 (0x0004)              
};

void APlayerController::ServerSetNetSpeed(int NewSpeed)
{
	static UFieldFunc* pFnServerSetNetSpeed = NULL;
	if(!pFnServerSetNetSpeed)
		pFnServerSetNetSpeed = UObject::FindFunction("Function Engine.PlayerController.ServerSetNetSpeed");

	Engine_ServerSetNetSpeed_Parms ServerSetNetSpeed_Parms;
	ServerSetNetSpeed_Parms.NewSpeed = NewSpeed;
	ProcessEvent(pFnServerSetNetSpeed,NULL,&ServerSetNetSpeed_Parms,NULL);
}

struct Engine_PasteFromClipboard_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerController::PasteFromClipboard()
{
	static UFieldFunc* pFnPasteFromClipboard = NULL;
	if(!pFnPasteFromClipboard)
		pFnPasteFromClipboard = UObject::FindFunction("Function Engine.PlayerController.PasteFromClipboard");

	Engine_PasteFromClipboard_Parms PasteFromClipboard_Parms;
	pFnPasteFromClipboard->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPasteFromClipboard,NULL,&PasteFromClipboard_Parms,NULL);
	pFnPasteFromClipboard->FunctionFlags |= 0x400;
	return PasteFromClipboard_Parms.ReturnValue;
}

struct Engine_GivePawn_Parms
{
	class APawn*                                       NewPawn;                                          		// 0x000000 (0x0004)              
};

void APlayerController::GivePawn(class APawn* NewPawn)
{
	static UFieldFunc* pFnGivePawn = NULL;
	if(!pFnGivePawn)
		pFnGivePawn = UObject::FindFunction("Function Engine.PlayerController.GivePawn");

	Engine_GivePawn_Parms GivePawn_Parms;
	GivePawn_Parms.NewPawn = NewPawn;
	ProcessEvent(pFnGivePawn,NULL,&GivePawn_Parms,NULL);
}

struct Engine_VeryShortClientAdjustPosition_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
	float                                              NewLocX;                                          		// 0x000008 (0x0004)              
	float                                              NewLocY;                                          		// 0x00000C (0x0004)              
	float                                              NewLocZ;                                          		// 0x000010 (0x0004)              
	class AActor*                                      NewBase;                                          		// 0x000014 (0x0004)              
	//FVector3                                           Floor;                                            		// 0x000018 (0x000C)              
};

void APlayerController::VeryShortClientAdjustPosition(double TimeStamp,float NewLocX,float NewLocY,float NewLocZ,class AActor* NewBase)
{
	static UFieldFunc* pFnVeryShortClientAdjustPosition = NULL;
	if(!pFnVeryShortClientAdjustPosition)
		pFnVeryShortClientAdjustPosition = UObject::FindFunction("Function Engine.PlayerController.VeryShortClientAdjustPosition");

	Engine_VeryShortClientAdjustPosition_Parms VeryShortClientAdjustPosition_Parms;
	VeryShortClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	VeryShortClientAdjustPosition_Parms.NewLocX = NewLocX;
	VeryShortClientAdjustPosition_Parms.NewLocY = NewLocY;
	VeryShortClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	VeryShortClientAdjustPosition_Parms.NewBase = NewBase;
	ProcessEvent(pFnVeryShortClientAdjustPosition,NULL,&VeryShortClientAdjustPosition_Parms,NULL);
}

struct Engine_LongClientAdjustPositionPlayerController_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
	struct FName                                       NewState;                                         		// 0x000008 (0x0008)              
	unsigned char                                      newPhysics;                                       		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	float                                              NewLocX;                                          		// 0x000014 (0x0004)              
	float                                              NewLocY;                                          		// 0x000018 (0x0004)              
	float                                              NewLocZ;                                          		// 0x00001C (0x0004)              
	float                                              NewVelX;                                          		// 0x000020 (0x0004)              
	float                                              NewVelY;                                          		// 0x000024 (0x0004)              
	float                                              NewVelZ;                                          		// 0x000028 (0x0004)              
	class AActor*                                      NewBase;                                          		// 0x00002C (0x0004)              
	float                                              NewFloorX;                                        		// 0x000030 (0x0004)              
	float                                              NewFloorY;                                        		// 0x000034 (0x0004)              
	float                                              NewFloorZ;                                        		// 0x000038 (0x0004)              
};

void APlayerController::LongClientAdjustPositionPlayerController(double TimeStamp,struct FName NewState,unsigned char newPhysics,float NewLocX,float NewLocY,float NewLocZ,float NewVelX,float NewVelY,float NewVelZ,class AActor* NewBase,float NewFloorX,float NewFloorY,float NewFloorZ)
{
	static UFieldFunc* pFnLongClientAdjustPositionPlayerController = NULL;
	if(!pFnLongClientAdjustPositionPlayerController)
		pFnLongClientAdjustPositionPlayerController = UObject::FindFunction("Function Engine.PlayerController.LongClientAdjustPositionPlayerController");

	Engine_LongClientAdjustPositionPlayerController_Parms LongClientAdjustPositionPlayerController_Parms;
	LongClientAdjustPositionPlayerController_Parms.TimeStamp = TimeStamp;
	memcpy(&LongClientAdjustPositionPlayerController_Parms.NewState,&NewState,0x8);
	LongClientAdjustPositionPlayerController_Parms.newPhysics = newPhysics;
	LongClientAdjustPositionPlayerController_Parms.NewLocX = NewLocX;
	LongClientAdjustPositionPlayerController_Parms.NewLocY = NewLocY;
	LongClientAdjustPositionPlayerController_Parms.NewLocZ = NewLocZ;
	LongClientAdjustPositionPlayerController_Parms.NewVelX = NewVelX;
	LongClientAdjustPositionPlayerController_Parms.NewVelY = NewVelY;
	LongClientAdjustPositionPlayerController_Parms.NewVelZ = NewVelZ;
	LongClientAdjustPositionPlayerController_Parms.NewBase = NewBase;
	LongClientAdjustPositionPlayerController_Parms.NewFloorX = NewFloorX;
	LongClientAdjustPositionPlayerController_Parms.NewFloorY = NewFloorY;
	LongClientAdjustPositionPlayerController_Parms.NewFloorZ = NewFloorZ;
	pFnLongClientAdjustPositionPlayerController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLongClientAdjustPositionPlayerController,NULL,&LongClientAdjustPositionPlayerController_Parms,NULL);
	pFnLongClientAdjustPositionPlayerController->FunctionFlags |= 0x400;
}

struct Engine_OnExternalUIChanged_Parms
{
	unsigned long                                      bIsOpening : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::OnExternalUIChanged(bool bIsOpening)
{
	static UFieldFunc* pFnOnExternalUIChanged = NULL;
	if(!pFnOnExternalUIChanged)
		pFnOnExternalUIChanged = UObject::FindFunction("Function Engine.PlayerController.OnExternalUIChanged");

	Engine_OnExternalUIChanged_Parms OnExternalUIChanged_Parms;
	OnExternalUIChanged_Parms.bIsOpening = bIsOpening;
	ProcessEvent(pFnOnExternalUIChanged,NULL,&OnExternalUIChanged_Parms,NULL);
}

struct Engine_ClientCancelPendingMapChange_Parms
{
};

void APlayerController::ClientCancelPendingMapChange()
{
	static UFieldFunc* pFnClientCancelPendingMapChange = NULL;
	if(!pFnClientCancelPendingMapChange)
		pFnClientCancelPendingMapChange = UObject::FindFunction("Function Engine.PlayerController.ClientCancelPendingMapChange");

	Engine_ClientCancelPendingMapChange_Parms ClientCancelPendingMapChange_Parms;
	ProcessEvent(pFnClientCancelPendingMapChange,NULL,&ClientCancelPendingMapChange_Parms,NULL);
}

struct Engine_APB_LCAPStart_Parms
{
};

void APlayerController::APB_LCAPStart()
{
	static UFieldFunc* pFnAPB_LCAPStart = NULL;
	if(!pFnAPB_LCAPStart)
		pFnAPB_LCAPStart = UObject::FindFunction("Function Engine.PlayerController.APB_LCAPStart");

	Engine_APB_LCAPStart_Parms APB_LCAPStart_Parms;
	pFnAPB_LCAPStart->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAPB_LCAPStart,NULL,&APB_LCAPStart_Parms,NULL);
	pFnAPB_LCAPStart->FunctionFlags |= 0x400;
}

struct Engine_ClientSetProgressTime_Parms
{
	float                                              T;                                                		// 0x000000 (0x0004)              
};

void APlayerController::ClientSetProgressTime(float T)
{
	static UFieldFunc* pFnClientSetProgressTime = NULL;
	if(!pFnClientSetProgressTime)
		pFnClientSetProgressTime = UObject::FindFunction("Function Engine.PlayerController.ClientSetProgressTime");

	Engine_ClientSetProgressTime_Parms ClientSetProgressTime_Parms;
	ClientSetProgressTime_Parms.T = T;
	ProcessEvent(pFnClientSetProgressTime,NULL,&ClientSetProgressTime_Parms,NULL);
}

struct Engine_ClientSetCinematicMode_Parms
{
	unsigned long                                      bInCinematicMode : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bAffectsMovement : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bAffectsTurning : 1;                              		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bAffectsHUD : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

void APlayerController::ClientSetCinematicMode(bool bInCinematicMode,bool bAffectsMovement,bool bAffectsTurning,bool bAffectsHUD)
{
	static UFieldFunc* pFnClientSetCinematicMode = NULL;
	if(!pFnClientSetCinematicMode)
		pFnClientSetCinematicMode = UObject::FindFunction("Function Engine.PlayerController.ClientSetCinematicMode");

	Engine_ClientSetCinematicMode_Parms ClientSetCinematicMode_Parms;
	ClientSetCinematicMode_Parms.bInCinematicMode = bInCinematicMode;
	ClientSetCinematicMode_Parms.bAffectsMovement = bAffectsMovement;
	ClientSetCinematicMode_Parms.bAffectsTurning = bAffectsTurning;
	ClientSetCinematicMode_Parms.bAffectsHUD = bAffectsHUD;
	ProcessEvent(pFnClientSetCinematicMode,NULL,&ClientSetCinematicMode_Parms,NULL);
}

struct Engine_AimingHelp_Parms
{
	unsigned long                                      bInstantHit : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APlayerController::AimingHelp(bool bInstantHit)
{
	static UFieldFunc* pFnAimingHelp = NULL;
	if(!pFnAimingHelp)
		pFnAimingHelp = UObject::FindFunction("Function Engine.PlayerController.AimingHelp");

	Engine_AimingHelp_Parms AimingHelp_Parms;
	AimingHelp_Parms.bInstantHit = bInstantHit;
	ProcessEvent(pFnAimingHelp,NULL,&AimingHelp_Parms,NULL);
	return AimingHelp_Parms.ReturnValue;
}

struct Engine_TeamMessage_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	struct FString                                     S;                                                		// 0x000004 (0x000C)              
	struct FName                                       Type;                                             		// 0x000010 (0x0008)              
	float                                              MsgLifeTime;                                      		// 0x000018 (0x0004)              
	//unsigned long                                      bIsUserCreated : 1;                               		// 0x00001C (0x0004) [0x00000001] 
};

void APlayerController::TeamMessage(class APlayerReplicationInfo* PRI,struct FString S,struct FName Type,float MsgLifeTime)
{
	static UFieldFunc* pFnTeamMessage = NULL;
	if(!pFnTeamMessage)
		pFnTeamMessage = UObject::FindFunction("Function Engine.PlayerController.TeamMessage");

	Engine_TeamMessage_Parms TeamMessage_Parms;
	TeamMessage_Parms.PRI = PRI;
	memcpy(&TeamMessage_Parms.S,&S,0xC);
	memcpy(&TeamMessage_Parms.Type,&Type,0x8);
	TeamMessage_Parms.MsgLifeTime = MsgLifeTime;
	ProcessEvent(pFnTeamMessage,NULL,&TeamMessage_Parms,NULL);
}

struct Engine_GameplayMutePlayer_Parms
{
	struct FUniqueNetId                                PlayerNetId;                                      		// 0x000000 (0x0008)              
};

void APlayerController::GameplayMutePlayer(struct FUniqueNetId PlayerNetId)
{
	static UFieldFunc* pFnGameplayMutePlayer = NULL;
	if(!pFnGameplayMutePlayer)
		pFnGameplayMutePlayer = UObject::FindFunction("Function Engine.PlayerController.GameplayMutePlayer");

	Engine_GameplayMutePlayer_Parms GameplayMutePlayer_Parms;
	memcpy(&GameplayMutePlayer_Parms.PlayerNetId,&PlayerNetId,0x8);
	ProcessEvent(pFnGameplayMutePlayer,NULL,&GameplayMutePlayer_Parms,NULL);
}

struct Engine_SimulatedCauseEvent_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//TArray<class USequenceObject*>                     AllConsoleEvents;                                 		// 0x000010 (0x000C)              
	//class USeqEvent_Console*                           ConsoleEvt;                                       		// 0x00001C (0x0004)              
	//class USequence*                                   GameSeq;                                          		// 0x000020 (0x0004)              
	//int                                                Idx;                                              		// 0x000024 (0x0004)              
	//unsigned long                                      bFoundEvt : 1;                                    		// 0x000028 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00002C (0x0004) [0x00000001] 
};

bool APlayerController::SimulatedCauseEvent(struct FString EventName)
{
	static UFieldFunc* pFnSimulatedCauseEvent = NULL;
	if(!pFnSimulatedCauseEvent)
		pFnSimulatedCauseEvent = UObject::FindFunction("Function Engine.PlayerController.SimulatedCauseEvent");

	Engine_SimulatedCauseEvent_Parms SimulatedCauseEvent_Parms;
	memcpy(&SimulatedCauseEvent_Parms.EventName,&EventName,0xC);
	ProcessEvent(pFnSimulatedCauseEvent,NULL,&SimulatedCauseEvent_Parms,NULL);
	return SimulatedCauseEvent_Parms.ReturnValue;
}

struct Engine_SetNetSpeed_Parms
{
	int                                                NewSpeed;                                         		// 0x000000 (0x0004)              
};

void APlayerController::SetNetSpeed(int NewSpeed)
{
	static UFieldFunc* pFnSetNetSpeed = NULL;
	if(!pFnSetNetSpeed)
		pFnSetNetSpeed = UObject::FindFunction("Function Engine.PlayerController.SetNetSpeed");

	Engine_SetNetSpeed_Parms SetNetSpeed_Parms;
	SetNetSpeed_Parms.NewSpeed = NewSpeed;
	pFnSetNetSpeed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNetSpeed,NULL,&SetNetSpeed_Parms,NULL);
	pFnSetNetSpeed->FunctionFlags |= 0x400;
}

struct Engine_DrawHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x000000 (0x0004)              
};

void APlayerController::DrawHUD(class AHUD* H)
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.PlayerController.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_ClientAdjustPosition_Parms
{
	double                                             TimeStamp;                                        		// 0x000000 (0x0008)              
	struct FName                                       NewState;                                         		// 0x000008 (0x0008)              
	unsigned char                                      newPhysics;                                       		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	float                                              NewLocX;                                          		// 0x000014 (0x0004)              
	float                                              NewLocY;                                          		// 0x000018 (0x0004)              
	float                                              NewLocZ;                                          		// 0x00001C (0x0004)              
	float                                              NewVelX;                                          		// 0x000020 (0x0004)              
	float                                              NewVelY;                                          		// 0x000024 (0x0004)              
	float                                              NewVelZ;                                          		// 0x000028 (0x0004)              
	class AActor*                                      NewBase;                                          		// 0x00002C (0x0004)              
	//FVector3                                           Floor;                                            		// 0x000030 (0x000C)              
};

void APlayerController::ClientAdjustPosition(double TimeStamp,struct FName NewState,unsigned char newPhysics,float NewLocX,float NewLocY,float NewLocZ,float NewVelX,float NewVelY,float NewVelZ,class AActor* NewBase)
{
	static UFieldFunc* pFnClientAdjustPosition = NULL;
	if(!pFnClientAdjustPosition)
		pFnClientAdjustPosition = UObject::FindFunction("Function Engine.PlayerController.ClientAdjustPosition");

	Engine_ClientAdjustPosition_Parms ClientAdjustPosition_Parms;
	ClientAdjustPosition_Parms.TimeStamp = TimeStamp;
	memcpy(&ClientAdjustPosition_Parms.NewState,&NewState,0x8);
	ClientAdjustPosition_Parms.newPhysics = newPhysics;
	ClientAdjustPosition_Parms.NewLocX = NewLocX;
	ClientAdjustPosition_Parms.NewLocY = NewLocY;
	ClientAdjustPosition_Parms.NewLocZ = NewLocZ;
	ClientAdjustPosition_Parms.NewVelX = NewVelX;
	ClientAdjustPosition_Parms.NewVelY = NewVelY;
	ClientAdjustPosition_Parms.NewVelZ = NewVelZ;
	ClientAdjustPosition_Parms.NewBase = NewBase;
	ProcessEvent(pFnClientAdjustPosition,NULL,&ClientAdjustPosition_Parms,NULL);
}

struct Engine_ReplicateMove_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FVector3                                           newAccel;                                         		// 0x000004 (0x000C)              
	FRotator                                           DeltaRot;                                         		// 0x000010 (0x000C)              
};

void APlayerController::ReplicateMove(float DeltaTime,FVector3 newAccel,FRotator DeltaRot)
{
	static UFieldFunc* pFnReplicateMove = NULL;
	if(!pFnReplicateMove)
		pFnReplicateMove = UObject::FindFunction("Function Engine.PlayerController.ReplicateMove");

	Engine_ReplicateMove_Parms ReplicateMove_Parms;
	ReplicateMove_Parms.DeltaTime = DeltaTime;
	memcpy(&ReplicateMove_Parms.newAccel,&newAccel,0xC);
	memcpy(&ReplicateMove_Parms.DeltaRot,&DeltaRot,0xC);
	ProcessEvent(pFnReplicateMove,NULL,&ReplicateMove_Parms,NULL);
}

struct Engine_SetProgressTime_Parms
{
	float                                              T;                                                		// 0x000000 (0x0004)              
};

void APlayerController::SetProgressTime(float T)
{
	static UFieldFunc* pFnSetProgressTime = NULL;
	if(!pFnSetProgressTime)
		pFnSetProgressTime = UObject::FindFunction("Function Engine.PlayerController.SetProgressTime");

	Engine_SetProgressTime_Parms SetProgressTime_Parms;
	SetProgressTime_Parms.T = T;
	ProcessEvent(pFnSetProgressTime,NULL,&SetProgressTime_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void APlayerController::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.PlayerController.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_FOV_Parms
{
	float                                              F;                                                		// 0x000000 (0x0004)              
};

void APlayerController::FOV(float F)
{
	static UFieldFunc* pFnFOV = NULL;
	if(!pFnFOV)
		pFnFOV = UObject::FindFunction("Function Engine.PlayerController.FOV");

	Engine_FOV_Parms FOV_Parms;
	FOV_Parms.F = F;
	ProcessEvent(pFnFOV,NULL,&FOV_Parms,NULL);
}

struct Engine_ServerSyncState_Parms
{
	struct FString                                     CurrentClientState;                               		// 0x000000 (0x000C)              
	//struct FName                                       CurrentServerState;                               		// 0x00000C (0x0008)              
};

void APlayerController::ServerSyncState(struct FString CurrentClientState)
{
	static UFieldFunc* pFnServerSyncState = NULL;
	if(!pFnServerSyncState)
		pFnServerSyncState = UObject::FindFunction("Function Engine.PlayerController.ServerSyncState");

	Engine_ServerSyncState_Parms ServerSyncState_Parms;
	memcpy(&ServerSyncState_Parms.CurrentClientState,&CurrentClientState,0xC);
	ProcessEvent(pFnServerSyncState,NULL,&ServerSyncState_Parms,NULL);
}

struct Engine_GetPartyModeURLString_Parms
{
	unsigned long                                      bIsPartyLeader : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString APlayerController::GetPartyModeURLString(bool bIsPartyLeader)
{
	static UFieldFunc* pFnGetPartyModeURLString = NULL;
	if(!pFnGetPartyModeURLString)
		pFnGetPartyModeURLString = UObject::FindFunction("Function Engine.PlayerController.GetPartyModeURLString");

	Engine_GetPartyModeURLString_Parms GetPartyModeURLString_Parms;
	GetPartyModeURLString_Parms.bIsPartyLeader = bIsPartyLeader;
	ProcessEvent(pFnGetPartyModeURLString,NULL,&GetPartyModeURLString_Parms,NULL);
	return GetPartyModeURLString_Parms.ReturnValue;
}

struct Engine_ServerShortTimeout_Parms
{
};

void APlayerController::ServerShortTimeout()
{
	static UFieldFunc* pFnServerShortTimeout = NULL;
	if(!pFnServerShortTimeout)
		pFnServerShortTimeout = UObject::FindFunction("Function Engine.PlayerController.ServerShortTimeout");

	Engine_ServerShortTimeout_Parms ServerShortTimeout_Parms;
	ProcessEvent(pFnServerShortTimeout,NULL,&ServerShortTimeout_Parms,NULL);
}

struct Engine_ServerRegisterClientStatGuid_Parms
{
	struct FString                                     StatGuid;                                         		// 0x000000 (0x000C)              
};

void APlayerController::ServerRegisterClientStatGuid(struct FString StatGuid)
{
	static UFieldFunc* pFnServerRegisterClientStatGuid = NULL;
	if(!pFnServerRegisterClientStatGuid)
		pFnServerRegisterClientStatGuid = UObject::FindFunction("Function Engine.PlayerController.ServerRegisterClientStatGuid");

	Engine_ServerRegisterClientStatGuid_Parms ServerRegisterClientStatGuid_Parms;
	memcpy(&ServerRegisterClientStatGuid_Parms.StatGuid,&StatGuid,0xC);
	ProcessEvent(pFnServerRegisterClientStatGuid,NULL,&ServerRegisterClientStatGuid_Parms,NULL);
}

struct Engine_IsMouseAvailable_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsMouseAvailable()
{
	static UFieldFunc* pFnIsMouseAvailable = NULL;
	if(!pFnIsMouseAvailable)
		pFnIsMouseAvailable = UObject::FindFunction("Function Engine.PlayerController.IsMouseAvailable");

	Engine_IsMouseAvailable_Parms IsMouseAvailable_Parms;
	pFnIsMouseAvailable->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsMouseAvailable,NULL,&IsMouseAvailable_Parms,NULL);
	pFnIsMouseAvailable->FunctionFlags |= 0x400;
	return IsMouseAvailable_Parms.ReturnValue;
}

struct Engine_CleanupPRI_Parms
{
};

void APlayerController::CleanupPRI()
{
	static UFieldFunc* pFnCleanupPRI = NULL;
	if(!pFnCleanupPRI)
		pFnCleanupPRI = UObject::FindFunction("Function Engine.PlayerController.CleanupPRI");

	Engine_CleanupPRI_Parms CleanupPRI_Parms;
	ProcessEvent(pFnCleanupPRI,NULL,&CleanupPRI_Parms,NULL);
}

struct Engine_CanAllPlayersPlayOnline_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000008 (0x0004)              
};

bool APlayerController::CanAllPlayersPlayOnline()
{
	static UFieldFunc* pFnCanAllPlayersPlayOnline = NULL;
	if(!pFnCanAllPlayersPlayOnline)
		pFnCanAllPlayersPlayOnline = UObject::FindFunction("Function Engine.PlayerController.CanAllPlayersPlayOnline");

	Engine_CanAllPlayersPlayOnline_Parms CanAllPlayersPlayOnline_Parms;
	ProcessEvent(pFnCanAllPlayersPlayOnline,NULL,&CanAllPlayersPlayOnline_Parms,NULL);
	return CanAllPlayersPlayOnline_Parms.ReturnValue;
}

struct Engine_EnableDebugCamera_Parms
{
	//class UPlayer*                                     P;                                                		// 0x000000 (0x0004)              
	//FVector3                                           eyeLoc;                                           		// 0x000004 (0x000C)              
	//FRotator                                           eyeRot;                                           		// 0x000010 (0x000C)              
};

void APlayerController::EnableDebugCamera()
{
	static UFieldFunc* pFnEnableDebugCamera = NULL;
	if(!pFnEnableDebugCamera)
		pFnEnableDebugCamera = UObject::FindFunction("Function Engine.PlayerController.EnableDebugCamera");

	Engine_EnableDebugCamera_Parms EnableDebugCamera_Parms;
	ProcessEvent(pFnEnableDebugCamera,NULL,&EnableDebugCamera_Parms,NULL);
}

struct Engine_SetControllerTiltActive_Parms
{
	unsigned long                                      bActive : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SetControllerTiltActive(bool bActive)
{
	static UFieldFunc* pFnSetControllerTiltActive = NULL;
	if(!pFnSetControllerTiltActive)
		pFnSetControllerTiltActive = UObject::FindFunction("Function Engine.PlayerController.SetControllerTiltActive");

	Engine_SetControllerTiltActive_Parms SetControllerTiltActive_Parms;
	SetControllerTiltActive_Parms.bActive = bActive;
	pFnSetControllerTiltActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetControllerTiltActive,NULL,&SetControllerTiltActive_Parms,NULL);
	pFnSetControllerTiltActive->FunctionFlags |= 0x400;
}

struct Engine_HandleWalking_Parms
{
};

void APlayerController::HandleWalking()
{
	static UFieldFunc* pFnHandleWalking = NULL;
	if(!pFnHandleWalking)
		pFnHandleWalking = UObject::FindFunction("Function Engine.PlayerController.HandleWalking");

	Engine_HandleWalking_Parms HandleWalking_Parms;
	ProcessEvent(pFnHandleWalking,NULL,&HandleWalking_Parms,NULL);
}

struct Engine_ServerWritenArbitrationEndGameData_Parms
{
};

void APlayerController::ServerWritenArbitrationEndGameData()
{
	static UFieldFunc* pFnServerWritenArbitrationEndGameData = NULL;
	if(!pFnServerWritenArbitrationEndGameData)
		pFnServerWritenArbitrationEndGameData = UObject::FindFunction("Function Engine.PlayerController.ServerWritenArbitrationEndGameData");

	Engine_ServerWritenArbitrationEndGameData_Parms ServerWritenArbitrationEndGameData_Parms;
	ProcessEvent(pFnServerWritenArbitrationEndGameData,NULL,&ServerWritenArbitrationEndGameData_Parms,NULL);
}

struct Engine_ServerProcessConvolve_Parms
{
	struct FString                                     C;                                                		// 0x000000 (0x000C)              
	int                                                H;                                                		// 0x00000C (0x0004)              
};

void APlayerController::ServerProcessConvolve(struct FString C,int H)
{
	static UFieldFunc* pFnServerProcessConvolve = NULL;
	if(!pFnServerProcessConvolve)
		pFnServerProcessConvolve = UObject::FindFunction("Function Engine.PlayerController.ServerProcessConvolve");

	Engine_ServerProcessConvolve_Parms ServerProcessConvolve_Parms;
	memcpy(&ServerProcessConvolve_Parms.C,&C,0xC);
	ServerProcessConvolve_Parms.H = H;
	pFnServerProcessConvolve->FunctionFlags |= ~0x400;
	ProcessEvent(pFnServerProcessConvolve,NULL,&ServerProcessConvolve_Parms,NULL);
	pFnServerProcessConvolve->FunctionFlags |= 0x400;
}

struct Engine_ClientFadeOutMusicTrack_Parms
{
	class USeqAct_CrossFadeMusicTracks*                MusicAction;                                      		// 0x000000 (0x0004)              
	float                                              FadeOutTime;                                      		// 0x000004 (0x0004)              
	float                                              FadeOutVolumeLevel;                               		// 0x000008 (0x0004)              
};

void APlayerController::ClientFadeOutMusicTrack(class USeqAct_CrossFadeMusicTracks* MusicAction,float FadeOutTime,float FadeOutVolumeLevel)
{
	static UFieldFunc* pFnClientFadeOutMusicTrack = NULL;
	if(!pFnClientFadeOutMusicTrack)
		pFnClientFadeOutMusicTrack = UObject::FindFunction("Function Engine.PlayerController.ClientFadeOutMusicTrack");

	Engine_ClientFadeOutMusicTrack_Parms ClientFadeOutMusicTrack_Parms;
	ClientFadeOutMusicTrack_Parms.MusicAction = MusicAction;
	ClientFadeOutMusicTrack_Parms.FadeOutTime = FadeOutTime;
	ClientFadeOutMusicTrack_Parms.FadeOutVolumeLevel = FadeOutVolumeLevel;
	ProcessEvent(pFnClientFadeOutMusicTrack,NULL,&ClientFadeOutMusicTrack_Parms,NULL);
}

struct Engine_RemoveMissingPeersFromSession_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FScriptDelegate                             UnregisterDelegate;                               		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//TArray<struct FUniqueNetId>                        RegisteredPlayers;                                		// 0x000018 (0x000C)              
	//struct FUniqueNetId                                ZeroId;                                           		// 0x000024 (0x0008)              
	//int                                                PlayerIdx;                                        		// 0x00002C (0x0004)              
	//class APlayerReplicationInfo*                      RegisteredPRI;                                    		// 0x000030 (0x0004)              
};

bool APlayerController::RemoveMissingPeersFromSession(struct FName SessionName,struct FScriptDelegate UnregisterDelegate)
{
	static UFieldFunc* pFnRemoveMissingPeersFromSession = NULL;
	if(!pFnRemoveMissingPeersFromSession)
		pFnRemoveMissingPeersFromSession = UObject::FindFunction("Function Engine.PlayerController.RemoveMissingPeersFromSession");

	Engine_RemoveMissingPeersFromSession_Parms RemoveMissingPeersFromSession_Parms;
	memcpy(&RemoveMissingPeersFromSession_Parms.SessionName,&SessionName,0x8);
	memcpy(&RemoveMissingPeersFromSession_Parms.UnregisterDelegate,&UnregisterDelegate,0xC);
	ProcessEvent(pFnRemoveMissingPeersFromSession,NULL,&RemoveMissingPeersFromSession_Parms,NULL);
	return RemoveMissingPeersFromSession_Parms.ReturnValue;
}

struct Engine_OnJoinTravelToSessionComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	//struct FString                                     URL;                                              		// 0x00000C (0x000C)              
};

void APlayerController::OnJoinTravelToSessionComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnJoinTravelToSessionComplete = NULL;
	if(!pFnOnJoinTravelToSessionComplete)
		pFnOnJoinTravelToSessionComplete = UObject::FindFunction("Function Engine.PlayerController.OnJoinTravelToSessionComplete");

	Engine_OnJoinTravelToSessionComplete_Parms OnJoinTravelToSessionComplete_Parms;
	memcpy(&OnJoinTravelToSessionComplete_Parms.SessionName,&SessionName,0x8);
	OnJoinTravelToSessionComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnJoinTravelToSessionComplete,NULL,&OnJoinTravelToSessionComplete_Parms,NULL);
}

struct Engine_ProcessMovePlayerController_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FVector3                                           newAccel;                                         		// 0x000004 (0x000C)              
};

void APlayerController::ProcessMovePlayerController(float DeltaTime,FVector3* newAccel)
{
	static UFieldFunc* pFnProcessMovePlayerController = NULL;
	if(!pFnProcessMovePlayerController)
		pFnProcessMovePlayerController = UObject::FindFunction("Function Engine.PlayerController.ProcessMovePlayerController");

	Engine_ProcessMovePlayerController_Parms ProcessMovePlayerController_Parms;
	ProcessMovePlayerController_Parms.DeltaTime = DeltaTime;
	pFnProcessMovePlayerController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProcessMovePlayerController,NULL,&ProcessMovePlayerController_Parms,NULL);
	pFnProcessMovePlayerController->FunctionFlags |= 0x400;
	if(newAccel)
		memcpy(newAccel,&ProcessMovePlayerController_Parms.newAccel,0xC);
}

struct Engine_ClientHearSound_Parms
{
	class USoundCue*                                   ASound;                                           		// 0x000000 (0x0004)              
	class AActor*                                      SourceActor;                                      		// 0x000004 (0x0004)              
	FVector3                                           SourceLocation;                                   		// 0x000008 (0x000C)              
	unsigned long                                      bStopWhenOwnerDestroyed : 1;                      		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bIsOccluded : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	//class UAudioComponent*                             AC;                                               		// 0x00001C (0x0004)              
};

void APlayerController::ClientHearSound(class USoundCue* ASound,class AActor* SourceActor,FVector3 SourceLocation,bool bStopWhenOwnerDestroyed,bool bIsOccluded)
{
	static UFieldFunc* pFnClientHearSound = NULL;
	if(!pFnClientHearSound)
		pFnClientHearSound = UObject::FindFunction("Function Engine.PlayerController.ClientHearSound");

	Engine_ClientHearSound_Parms ClientHearSound_Parms;
	ClientHearSound_Parms.ASound = ASound;
	ClientHearSound_Parms.SourceActor = SourceActor;
	memcpy(&ClientHearSound_Parms.SourceLocation,&SourceLocation,0xC);
	ClientHearSound_Parms.bStopWhenOwnerDestroyed = bStopWhenOwnerDestroyed;
	ClientHearSound_Parms.bIsOccluded = bIsOccluded;
	ProcessEvent(pFnClientHearSound,NULL,&ClientHearSound_Parms,NULL);
}

struct Engine_ConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x000000 (0x000C)              
	unsigned long                                      bWriteToLog : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000010 (0x000C)              
};

struct FString APlayerController::ConsoleCommand(struct FString Command,bool bWriteToLog)
{
	static UFieldFunc* pFnConsoleCommand = NULL;
	if(!pFnConsoleCommand)
		pFnConsoleCommand = UObject::FindFunction("Function Engine.PlayerController.ConsoleCommand");

	Engine_ConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy(&ConsoleCommand_Parms.Command,&Command,0xC);
	ConsoleCommand_Parms.bWriteToLog = bWriteToLog;
	pFnConsoleCommand->FunctionFlags |= ~0x400;
	ProcessEvent(pFnConsoleCommand,NULL,&ConsoleCommand_Parms,NULL);
	pFnConsoleCommand->FunctionFlags |= 0x400;
	return ConsoleCommand_Parms.ReturnValue;
}

struct Engine_StartAltFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void APlayerController::StartAltFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStartAltFire = NULL;
	if(!pFnStartAltFire)
		pFnStartAltFire = UObject::FindFunction("Function Engine.PlayerController.StartAltFire");

	Engine_StartAltFire_Parms StartAltFire_Parms;
	StartAltFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStartAltFire,NULL,&StartAltFire_Parms,NULL);
}

struct Engine_UpdateURL_Parms
{
	struct FString                                     NewOption;                                        		// 0x000000 (0x000C)              
	struct FString                                     NewValue;                                         		// 0x00000C (0x000C)              
	unsigned long                                      bSave1Default : 1;                                		// 0x000018 (0x0004) [0x00000001] 
};

void APlayerController::UpdateURL(struct FString NewOption,struct FString NewValue,bool bSave1Default)
{
	static UFieldFunc* pFnUpdateURL = NULL;
	if(!pFnUpdateURL)
		pFnUpdateURL = UObject::FindFunction("Function Engine.PlayerController.UpdateURL");

	Engine_UpdateURL_Parms UpdateURL_Parms;
	memcpy(&UpdateURL_Parms.NewOption,&NewOption,0xC);
	memcpy(&UpdateURL_Parms.NewValue,&NewValue,0xC);
	UpdateURL_Parms.bSave1Default = bSave1Default;

	unsigned short NativeIndex = pFnUpdateURL->iNative;
	pFnUpdateURL->iNative = 0;
	pFnUpdateURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateURL,NULL,&UpdateURL_Parms,NULL);
	pFnUpdateURL->FunctionFlags |= 0x400;
	pFnUpdateURL->iNative = NativeIndex;
}

struct Engine_CanViewUserCreatedContent_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000004 (0x0004)              
};

bool APlayerController::CanViewUserCreatedContent()
{
	static UFieldFunc* pFnCanViewUserCreatedContent = NULL;
	if(!pFnCanViewUserCreatedContent)
		pFnCanViewUserCreatedContent = UObject::FindFunction("Function Engine.PlayerController.CanViewUserCreatedContent");

	Engine_CanViewUserCreatedContent_Parms CanViewUserCreatedContent_Parms;
	ProcessEvent(pFnCanViewUserCreatedContent,NULL,&CanViewUserCreatedContent_Parms,NULL);
	return CanViewUserCreatedContent_Parms.ReturnValue;
}

struct Engine_IsKeyboardAvailable_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerController::IsKeyboardAvailable()
{
	static UFieldFunc* pFnIsKeyboardAvailable = NULL;
	if(!pFnIsKeyboardAvailable)
		pFnIsKeyboardAvailable = UObject::FindFunction("Function Engine.PlayerController.IsKeyboardAvailable");

	Engine_IsKeyboardAvailable_Parms IsKeyboardAvailable_Parms;
	pFnIsKeyboardAvailable->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsKeyboardAvailable,NULL,&IsKeyboardAvailable_Parms,NULL);
	pFnIsKeyboardAvailable->FunctionFlags |= 0x400;
	return IsKeyboardAvailable_Parms.ReturnValue;
}

struct Engine_ServerUpdatePing_Parms
{
	int                                                NewPing;                                          		// 0x000000 (0x0004)              
};

void APlayerController::ServerUpdatePing(int NewPing)
{
	static UFieldFunc* pFnServerUpdatePing = NULL;
	if(!pFnServerUpdatePing)
		pFnServerUpdatePing = UObject::FindFunction("Function Engine.PlayerController.ServerUpdatePing");

	Engine_ServerUpdatePing_Parms ServerUpdatePing_Parms;
	ServerUpdatePing_Parms.NewPing = NewPing;
	ProcessEvent(pFnServerUpdatePing,NULL,&ServerUpdatePing_Parms,NULL);
}

struct Engine_ProcessMove_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FVector3                                           newAccel;                                         		// 0x000004 (0x000C)              
	FRotator                                           DeltaRot;                                         		// 0x000010 (0x000C)              
};

void APlayerController::ProcessMove(float DeltaTime,FVector3 newAccel,FRotator DeltaRot)
{
	static UFieldFunc* pFnProcessMove = NULL;
	if(!pFnProcessMove)
		pFnProcessMove = UObject::FindFunction("Function Engine.PlayerController.ProcessMove");

	Engine_ProcessMove_Parms ProcessMove_Parms;
	ProcessMove_Parms.DeltaTime = DeltaTime;
	memcpy(&ProcessMove_Parms.newAccel,&newAccel,0xC);
	memcpy(&ProcessMove_Parms.DeltaRot,&DeltaRot,0xC);
	ProcessEvent(pFnProcessMove,NULL,&ProcessMove_Parms,NULL);
}

struct Engine_SetShowSubtitles_Parms
{
	unsigned long                                      bValue : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerController::SetShowSubtitles(bool bValue)
{
	static UFieldFunc* pFnSetShowSubtitles = NULL;
	if(!pFnSetShowSubtitles)
		pFnSetShowSubtitles = UObject::FindFunction("Function Engine.PlayerController.SetShowSubtitles");

	Engine_SetShowSubtitles_Parms SetShowSubtitles_Parms;
	SetShowSubtitles_Parms.bValue = bValue;
	pFnSetShowSubtitles->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetShowSubtitles,NULL,&SetShowSubtitles_Parms,NULL);
	pFnSetShowSubtitles->FunctionFlags |= 0x400;
}

struct Engine_AddPeer_Parms
{
	struct FUniqueNetId                                PeerNetId;                                        		// 0x000000 (0x0008)              
	unsigned char                                      NatType;                                          		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	//struct FUniqueNetId                                ZeroId;                                           		// 0x00000C (0x0008)              
	//struct FConnectedPeerInfo                          NewPeerInfo;                                      		// 0x000014 (0x0010)              
};

void APlayerController::AddPeer(struct FUniqueNetId PeerNetId,unsigned char NatType)
{
	static UFieldFunc* pFnAddPeer = NULL;
	if(!pFnAddPeer)
		pFnAddPeer = UObject::FindFunction("Function Engine.PlayerController.AddPeer");

	Engine_AddPeer_Parms AddPeer_Parms;
	memcpy(&AddPeer_Parms.PeerNetId,&PeerNetId,0x8);
	AddPeer_Parms.NatType = NatType;
	ProcessEvent(pFnAddPeer,NULL,&AddPeer_Parms,NULL);
}

struct Engine_UTrace_Parms
{
};

void APlayerController::UTrace()
{
	static UFieldFunc* pFnUTrace = NULL;
	if(!pFnUTrace)
		pFnUTrace = UObject::FindFunction("Function Engine.PlayerController.UTrace");

	Engine_UTrace_Parms UTrace_Parms;
	ProcessEvent(pFnUTrace,NULL,&UTrace_Parms,NULL);
}

struct Engine_ClientGotoState_Parms
{
	struct FName                                       NewState;                                         		// 0x000000 (0x0008)              
	struct FName                                       NewLabel;                                         		// 0x000008 (0x0008)              
};

void APlayerController::ClientGotoState(struct FName NewState,struct FName NewLabel)
{
	static UFieldFunc* pFnClientGotoState = NULL;
	if(!pFnClientGotoState)
		pFnClientGotoState = UObject::FindFunction("Function Engine.PlayerController.ClientGotoState");

	Engine_ClientGotoState_Parms ClientGotoState_Parms;
	memcpy(&ClientGotoState_Parms.NewState,&NewState,0x8);
	memcpy(&ClientGotoState_Parms.NewLabel,&NewLabel,0x8);
	ProcessEvent(pFnClientGotoState,NULL,&ClientGotoState_Parms,NULL);
}

struct Engine_SetAudioGroupVolume_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              Volume;                                           		// 0x000008 (0x0004)              
};

void APlayerController::SetAudioGroupVolume(struct FName GroupName,float Volume)
{
	static UFieldFunc* pFnSetAudioGroupVolume = NULL;
	if(!pFnSetAudioGroupVolume)
		pFnSetAudioGroupVolume = UObject::FindFunction("Function Engine.PlayerController.SetAudioGroupVolume");

	Engine_SetAudioGroupVolume_Parms SetAudioGroupVolume_Parms;
	memcpy(&SetAudioGroupVolume_Parms.GroupName,&GroupName,0x8);
	SetAudioGroupVolume_Parms.Volume = Volume;
	pFnSetAudioGroupVolume->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAudioGroupVolume,NULL,&SetAudioGroupVolume_Parms,NULL);
	pFnSetAudioGroupVolume->FunctionFlags |= 0x400;
}

struct Engine_PlayDeath_Parms
{
};

void ACrowdAgent::PlayDeath()
{
	static UFieldFunc* pFnPlayDeath = NULL;
	if(!pFnPlayDeath)
		pFnPlayDeath = UObject::FindFunction("Function Engine.CrowdAgent.PlayDeath");

	Engine_PlayDeath_Parms PlayDeath_Parms;
	pFnPlayDeath->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayDeath,NULL,&PlayDeath_Parms,NULL);
	pFnPlayDeath->FunctionFlags |= 0x400;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void ACrowdAttractor::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.CrowdAttractor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ACrowdAttractor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.CrowdAttractor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_EncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void ADroppedPickup::EncroachedBy(class AActor* Other)
{
	static UFieldFunc* pFnEncroachedBy = NULL;
	if(!pFnEncroachedBy)
		pFnEncroachedBy = UObject::FindFunction("Function Engine.DroppedPickup.EncroachedBy");

	Engine_EncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;
	ProcessEvent(pFnEncroachedBy,NULL,&EncroachedBy_Parms,NULL);
}

struct Engine_Landed_Parms
{
	FVector3                                           HitNormal;                                        		// 0x000000 (0x000C)              
	class AActor*                                      FloorActor;                                       		// 0x00000C (0x0004)              
};

void ADroppedPickup::Landed(FVector3 HitNormal,class AActor* FloorActor)
{
	static UFieldFunc* pFnLanded = NULL;
	if(!pFnLanded)
		pFnLanded = UObject::FindFunction("Function Engine.DroppedPickup.Landed");

	Engine_Landed_Parms Landed_Parms;
	memcpy(&Landed_Parms.HitNormal,&HitNormal,0xC);
	Landed_Parms.FloorActor = FloorActor;
	ProcessEvent(pFnLanded,NULL,&Landed_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void ADroppedPickup::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.DroppedPickup.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_RecheckValidTouch_Parms
{
};

void ADroppedPickup::RecheckValidTouch()
{
	static UFieldFunc* pFnRecheckValidTouch = NULL;
	if(!pFnRecheckValidTouch)
		pFnRecheckValidTouch = UObject::FindFunction("Function Engine.DroppedPickup.RecheckValidTouch");

	Engine_RecheckValidTouch_Parms RecheckValidTouch_Parms;
	ProcessEvent(pFnRecheckValidTouch,NULL,&RecheckValidTouch_Parms,NULL);
}

struct Engine_RemoveFromNavigation_Parms
{
};

void ADroppedPickup::RemoveFromNavigation()
{
	static UFieldFunc* pFnRemoveFromNavigation = NULL;
	if(!pFnRemoveFromNavigation)
		pFnRemoveFromNavigation = UObject::FindFunction("Function Engine.DroppedPickup.RemoveFromNavigation");

	Engine_RemoveFromNavigation_Parms RemoveFromNavigation_Parms;
	pFnRemoveFromNavigation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveFromNavigation,NULL,&RemoveFromNavigation_Parms,NULL);
	pFnRemoveFromNavigation->FunctionFlags |= 0x400;
}

struct Engine_SetPickupMesh_Parms
{
	class UPrimitiveComponent*                         PickupMesh;                                       		// 0x000000 (0x0004)              
	//class UActorComponent*                             Comp;                                             		// 0x000004 (0x0004)              
};

void ADroppedPickup::SetPickupMesh(class UPrimitiveComponent* PickupMesh)
{
	static UFieldFunc* pFnSetPickupMesh = NULL;
	if(!pFnSetPickupMesh)
		pFnSetPickupMesh = UObject::FindFunction("Function Engine.DroppedPickup.SetPickupMesh");

	Engine_SetPickupMesh_Parms SetPickupMesh_Parms;
	SetPickupMesh_Parms.PickupMesh = PickupMesh;
	ProcessEvent(pFnSetPickupMesh,NULL,&SetPickupMesh_Parms,NULL);
}

struct Engine_AddToNavigation_Parms
{
};

void ADroppedPickup::AddToNavigation()
{
	static UFieldFunc* pFnAddToNavigation = NULL;
	if(!pFnAddToNavigation)
		pFnAddToNavigation = UObject::FindFunction("Function Engine.DroppedPickup.AddToNavigation");

	Engine_AddToNavigation_Parms AddToNavigation_Parms;
	pFnAddToNavigation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddToNavigation,NULL,&AddToNavigation_Parms,NULL);
	pFnAddToNavigation->FunctionFlags |= 0x400;
}

struct Engine_GiveTo_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void ADroppedPickup::GiveTo(class APawn* P)
{
	static UFieldFunc* pFnGiveTo = NULL;
	if(!pFnGiveTo)
		pFnGiveTo = UObject::FindFunction("Function Engine.DroppedPickup.GiveTo");

	Engine_GiveTo_Parms GiveTo_Parms;
	GiveTo_Parms.P = P;
	ProcessEvent(pFnGiveTo,NULL,&GiveTo_Parms,NULL);
}

struct Engine_SetPickupParticles_Parms
{
	class UParticleSystemComponent*                    PickupParticles;                                  		// 0x000000 (0x0004)              
	//class UParticleSystemComponent*                    Comp;                                             		// 0x000004 (0x0004)              
};

void ADroppedPickup::SetPickupParticles(class UParticleSystemComponent* PickupParticles)
{
	static UFieldFunc* pFnSetPickupParticles = NULL;
	if(!pFnSetPickupParticles)
		pFnSetPickupParticles = UObject::FindFunction("Function Engine.DroppedPickup.SetPickupParticles");

	Engine_SetPickupParticles_Parms SetPickupParticles_Parms;
	SetPickupParticles_Parms.PickupParticles = PickupParticles;
	ProcessEvent(pFnSetPickupParticles,NULL,&SetPickupParticles_Parms,NULL);
}

struct Engine_PickedUpBy_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void ADroppedPickup::PickedUpBy(class APawn* P)
{
	static UFieldFunc* pFnPickedUpBy = NULL;
	if(!pFnPickedUpBy)
		pFnPickedUpBy = UObject::FindFunction("Function Engine.DroppedPickup.PickedUpBy");

	Engine_PickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;
	ProcessEvent(pFnPickedUpBy,NULL,&PickedUpBy_Parms,NULL);
}

struct Engine_CanBasePawn_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ADynamicSMActor::CanBasePawn(class APawn* P)
{
	static UFieldFunc* pFnCanBasePawn = NULL;
	if(!pFnCanBasePawn)
		pFnCanBasePawn = UObject::FindFunction("Function Engine.DynamicSMActor.CanBasePawn");

	Engine_CanBasePawn_Parms CanBasePawn_Parms;
	CanBasePawn_Parms.P = P;
	ProcessEvent(pFnCanBasePawn,NULL,&CanBasePawn_Parms,NULL);
	return CanBasePawn_Parms.ReturnValue;
}

struct Engine_Detach_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//int                                                Idx;                                              		// 0x000004 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
	//class APawn*                                       Test;                                             		// 0x00000C (0x0004)              
	//unsigned long                                      bResetPhysics : 1;                                		// 0x000010 (0x0004) [0x00000001] 
};

void ADynamicSMActor::Detach(class AActor* Other)
{
	static UFieldFunc* pFnDetach = NULL;
	if(!pFnDetach)
		pFnDetach = UObject::FindFunction("Function Engine.DynamicSMActor.Detach");

	Engine_Detach_Parms Detach_Parms;
	Detach_Parms.Other = Other;
	ProcessEvent(pFnDetach,NULL,&Detach_Parms,NULL);
}

struct Engine_OnSetStaticMesh_Parms
{
	class USeqAct_SetStaticMesh*                       Action;                                           		// 0x000000 (0x0004)              
};

void ADynamicSMActor::OnSetStaticMesh(class USeqAct_SetStaticMesh* Action)
{
	static UFieldFunc* pFnOnSetStaticMesh = NULL;
	if(!pFnOnSetStaticMesh)
		pFnOnSetStaticMesh = UObject::FindFunction("Function Engine.DynamicSMActor.OnSetStaticMesh");

	Engine_OnSetStaticMesh_Parms OnSetStaticMesh_Parms;
	OnSetStaticMesh_Parms.Action = Action;
	ProcessEvent(pFnOnSetStaticMesh,NULL,&OnSetStaticMesh_Parms,NULL);
}

struct Engine_SetStaticMesh_Parms
{
	class UStaticMesh*                                 NewMesh;                                          		// 0x000000 (0x0004)              
	FVector3                                           NewTranslation;                                   		// 0x000004 (0x000C)              
	FRotator                                           NewRotation;                                      		// 0x000010 (0x000C)              
	FVector3                                           NewScale3D;                                       		// 0x00001C (0x000C)              
};

void ADynamicSMActor::SetStaticMesh(class UStaticMesh* NewMesh,FVector3 NewTranslation,FRotator NewRotation,FVector3 NewScale3D)
{
	static UFieldFunc* pFnSetStaticMesh = NULL;
	if(!pFnSetStaticMesh)
		pFnSetStaticMesh = UObject::FindFunction("Function Engine.DynamicSMActor.SetStaticMesh");

	Engine_SetStaticMesh_Parms SetStaticMesh_Parms;
	SetStaticMesh_Parms.NewMesh = NewMesh;
	memcpy(&SetStaticMesh_Parms.NewTranslation,&NewTranslation,0xC);
	memcpy(&SetStaticMesh_Parms.NewRotation,&NewRotation,0xC);
	memcpy(&SetStaticMesh_Parms.NewScale3D,&NewScale3D,0xC);
	ProcessEvent(pFnSetStaticMesh,NULL,&SetStaticMesh_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ADynamicSMActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.DynamicSMActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnSetMaterial_Parms
{
	class USeqAct_SetMaterial*                         Action;                                           		// 0x000000 (0x0004)              
};

void ADynamicSMActor::OnSetMaterial(class USeqAct_SetMaterial* Action)
{
	static UFieldFunc* pFnOnSetMaterial = NULL;
	if(!pFnOnSetMaterial)
		pFnOnSetMaterial = UObject::FindFunction("Function Engine.DynamicSMActor.OnSetMaterial");

	Engine_OnSetMaterial_Parms OnSetMaterial_Parms;
	OnSetMaterial_Parms.Action = Action;
	ProcessEvent(pFnOnSetMaterial,NULL,&OnSetMaterial_Parms,NULL);
}

struct Engine_Attach_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000004 (0x0004)              
};

void ADynamicSMActor::Attach(class AActor* Other)
{
	static UFieldFunc* pFnAttach = NULL;
	if(!pFnAttach)
		pFnAttach = UObject::FindFunction("Function Engine.DynamicSMActor.Attach");

	Engine_Attach_Parms Attach_Parms;
	Attach_Parms.Other = Other;
	ProcessEvent(pFnAttach,NULL,&Attach_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void ADynamicSMActor::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.DynamicSMActor.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void ADynamicSMActor::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.DynamicSMActor.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_CreateCheckpointRecord_Parms
{
	struct FCheckpointRecord                           Record;                                           		// 0x000000 (0x001C)              
};

void AInterpActor::CreateCheckpointRecord(struct FCheckpointRecord* Record)
{
	static UFieldFunc* pFnCreateCheckpointRecord = NULL;
	if(!pFnCreateCheckpointRecord)
		pFnCreateCheckpointRecord = UObject::FindFunction("Function Engine.InterpActor.CreateCheckpointRecord");

	Engine_CreateCheckpointRecord_Parms CreateCheckpointRecord_Parms;
	ProcessEvent(pFnCreateCheckpointRecord,NULL,&CreateCheckpointRecord_Parms,NULL);
	if(Record)
		memcpy(Record,&CreateCheckpointRecord_Parms.Record,0x1C);
}

struct Engine_RanInto_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//class USeqEvent_Mover*                             MoverEvent;                                       		// 0x000008 (0x0004)              
};

void AInterpActor::RanInto(class AActor* Other)
{
	static UFieldFunc* pFnRanInto = NULL;
	if(!pFnRanInto)
		pFnRanInto = UObject::FindFunction("Function Engine.InterpActor.RanInto");

	Engine_RanInto_Parms RanInto_Parms;
	RanInto_Parms.Other = Other;
	ProcessEvent(pFnRanInto,NULL,&RanInto_Parms,NULL);
}

struct Engine_InterpolationStarted_Parms
{
	class USeqAct_Interp*                              InterpAction;                                     		// 0x000000 (0x0004)              
};

void AInterpActor::InterpolationStarted(class USeqAct_Interp* InterpAction)
{
	static UFieldFunc* pFnInterpolationStarted = NULL;
	if(!pFnInterpolationStarted)
		pFnInterpolationStarted = UObject::FindFunction("Function Engine.InterpActor.InterpolationStarted");

	Engine_InterpolationStarted_Parms InterpolationStarted_Parms;
	InterpolationStarted_Parms.InterpAction = InterpAction;
	ProcessEvent(pFnInterpolationStarted,NULL,&InterpolationStarted_Parms,NULL);
}

struct Engine_ShouldSaveForCheckpoint_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AInterpActor::ShouldSaveForCheckpoint()
{
	static UFieldFunc* pFnShouldSaveForCheckpoint = NULL;
	if(!pFnShouldSaveForCheckpoint)
		pFnShouldSaveForCheckpoint = UObject::FindFunction("Function Engine.InterpActor.ShouldSaveForCheckpoint");

	Engine_ShouldSaveForCheckpoint_Parms ShouldSaveForCheckpoint_Parms;
	ProcessEvent(pFnShouldSaveForCheckpoint,NULL,&ShouldSaveForCheckpoint_Parms,NULL);
	return ShouldSaveForCheckpoint_Parms.ReturnValue;
}

struct Engine_InterpolationChanged_Parms
{
	class USeqAct_Interp*                              InterpAction;                                     		// 0x000000 (0x0004)              
};

void AInterpActor::InterpolationChanged(class USeqAct_Interp* InterpAction)
{
	static UFieldFunc* pFnInterpolationChanged = NULL;
	if(!pFnInterpolationChanged)
		pFnInterpolationChanged = UObject::FindFunction("Function Engine.InterpActor.InterpolationChanged");

	Engine_InterpolationChanged_Parms InterpolationChanged_Parms;
	InterpolationChanged_Parms.InterpAction = InterpAction;
	ProcessEvent(pFnInterpolationChanged,NULL,&InterpolationChanged_Parms,NULL);
}

struct Engine_EncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//class USeqEvent_Mover*                             MoverEvent;                                       		// 0x00000C (0x0004)              
	//class APawn*                                       P;                                                		// 0x000010 (0x0004)              
	//FVector3                                           Height;                                           		// 0x000014 (0x000C)              
	//FVector3                                           HitLocation;                                      		// 0x000020 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x00002C (0x000C)              
	//unsigned long                                      bLandingPawn : 1;                                 		// 0x000038 (0x0004) [0x00000001] 
};

bool AInterpActor::EncroachingOn(class AActor* Other)
{
	static UFieldFunc* pFnEncroachingOn = NULL;
	if(!pFnEncroachingOn)
		pFnEncroachingOn = UObject::FindFunction("Function Engine.InterpActor.EncroachingOn");

	Engine_EncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;
	ProcessEvent(pFnEncroachingOn,NULL,&EncroachingOn_Parms,NULL);
	return EncroachingOn_Parms.ReturnValue;
}

struct Engine_Attach_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//class USeqEvent_Mover*                             MoverEvent;                                       		// 0x000008 (0x0004)              
};

void AInterpActor::Attach(class AActor* Other)
{
	static UFieldFunc* pFnAttach = NULL;
	if(!pFnAttach)
		pFnAttach = UObject::FindFunction("Function Engine.InterpActor.Attach");

	Engine_Attach_Parms Attach_Parms;
	Attach_Parms.Other = Other;
	ProcessEvent(pFnAttach,NULL,&Attach_Parms,NULL);
}

struct Engine_FinishedOpen_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//class USeqEvent_Mover*                             MoverEvent;                                       		// 0x000004 (0x0004)              
};

void AInterpActor::FinishedOpen()
{
	static UFieldFunc* pFnFinishedOpen = NULL;
	if(!pFnFinishedOpen)
		pFnFinishedOpen = UObject::FindFunction("Function Engine.InterpActor.FinishedOpen");

	Engine_FinishedOpen_Parms FinishedOpen_Parms;
	ProcessEvent(pFnFinishedOpen,NULL,&FinishedOpen_Parms,NULL);
}

struct Engine_Detach_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//class USeqEvent_Mover*                             MoverEvent;                                       		// 0x000008 (0x0004)              
};

void AInterpActor::Detach(class AActor* Other)
{
	static UFieldFunc* pFnDetach = NULL;
	if(!pFnDetach)
		pFnDetach = UObject::FindFunction("Function Engine.InterpActor.Detach");

	Engine_Detach_Parms Detach_Parms;
	Detach_Parms.Other = Other;
	ProcessEvent(pFnDetach,NULL,&Detach_Parms,NULL);
}

struct Engine_PlayMovingSound_Parms
{
	unsigned long                                      bClosing : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	//class USoundCue*                                   SoundToPlay;                                      		// 0x000004 (0x0004)              
	//class USoundCue*                                   AmbientToPlay;                                    		// 0x000008 (0x0004)              
};

void AInterpActor::PlayMovingSound(bool bClosing)
{
	static UFieldFunc* pFnPlayMovingSound = NULL;
	if(!pFnPlayMovingSound)
		pFnPlayMovingSound = UObject::FindFunction("Function Engine.InterpActor.PlayMovingSound");

	Engine_PlayMovingSound_Parms PlayMovingSound_Parms;
	PlayMovingSound_Parms.bClosing = bClosing;
	ProcessEvent(pFnPlayMovingSound,NULL,&PlayMovingSound_Parms,NULL);
}

struct Engine_Restart_Parms
{
	//class AActor*                                      A;                                                		// 0x000000 (0x0004)              
};

void AInterpActor::Restart()
{
	static UFieldFunc* pFnRestart = NULL;
	if(!pFnRestart)
		pFnRestart = UObject::FindFunction("Function Engine.InterpActor.Restart");

	Engine_Restart_Parms Restart_Parms;
	ProcessEvent(pFnRestart,NULL,&Restart_Parms,NULL);
}

struct Engine_InterpolationFinished_Parms
{
	class USeqAct_Interp*                              InterpAction;                                     		// 0x000000 (0x0004)              
	//class ADoorMarker*                                 DoorNav;                                          		// 0x000004 (0x0004)              
	//class AController*                                 C;                                                		// 0x000008 (0x0004)              
	//class USoundCue*                                   StoppedSound;                                     		// 0x00000C (0x0004)              
};

void AInterpActor::InterpolationFinished(class USeqAct_Interp* InterpAction)
{
	static UFieldFunc* pFnInterpolationFinished = NULL;
	if(!pFnInterpolationFinished)
		pFnInterpolationFinished = UObject::FindFunction("Function Engine.InterpActor.InterpolationFinished");

	Engine_InterpolationFinished_Parms InterpolationFinished_Parms;
	InterpolationFinished_Parms.InterpAction = InterpAction;
	ProcessEvent(pFnInterpolationFinished,NULL,&InterpolationFinished_Parms,NULL);
}

struct Engine_ApplyCheckpointRecord_Parms
{
	struct FCheckpointRecord                           Record;                                           		// 0x000000 (0x001C)              
};

void AInterpActor::ApplyCheckpointRecord(struct FCheckpointRecord* Record)
{
	static UFieldFunc* pFnApplyCheckpointRecord = NULL;
	if(!pFnApplyCheckpointRecord)
		pFnApplyCheckpointRecord = UObject::FindFunction("Function Engine.InterpActor.ApplyCheckpointRecord");

	Engine_ApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;
	ProcessEvent(pFnApplyCheckpointRecord,NULL,&ApplyCheckpointRecord_Parms,NULL);
	if(Record)
		memcpy(Record,&ApplyCheckpointRecord_Parms.Record,0x1C);
}

struct Engine_PostBeginPlay_Parms
{
};

void AInterpActor::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.InterpActor.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnParticleSystemFinished_Parms
{
	class UParticleSystemComponent*                    PSC;                                              		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void AEmitterPool::OnParticleSystemFinished(class UParticleSystemComponent* PSC)
{
	static UFieldFunc* pFnOnParticleSystemFinished = NULL;
	if(!pFnOnParticleSystemFinished)
		pFnOnParticleSystemFinished = UObject::FindFunction("Function Engine.EmitterPool.OnParticleSystemFinished");

	Engine_OnParticleSystemFinished_Parms OnParticleSystemFinished_Parms;
	OnParticleSystemFinished_Parms.PSC = PSC;
	ProcessEvent(pFnOnParticleSystemFinished,NULL,&OnParticleSystemFinished_Parms,NULL);
}

struct Engine_SpawnEmitter_Parms
{
	class UParticleSystem*                             EmitterTemplate;                                  		// 0x000000 (0x0004)              
	FVector3                                           SpawnLocation;                                    		// 0x000004 (0x000C)              
	FRotator                                           SpawnRotation;                                    		// 0x000010 (0x000C)              
	class AActor*                                      AttachToActor;                                    		// 0x00001C (0x0004)              
	class UParticleSystemComponent*                    ReturnValue;                                      		// 0x000020 (0x0004)              
	//int                                                I;                                                		// 0x000024 (0x0004)              
	//class UParticleSystemComponent*                    Result;                                           		// 0x000028 (0x0004)              
};

class UParticleSystemComponent* AEmitterPool::SpawnEmitter(class UParticleSystem* EmitterTemplate,FVector3 SpawnLocation,FRotator SpawnRotation,class AActor* AttachToActor)
{
	static UFieldFunc* pFnSpawnEmitter = NULL;
	if(!pFnSpawnEmitter)
		pFnSpawnEmitter = UObject::FindFunction("Function Engine.EmitterPool.SpawnEmitter");

	Engine_SpawnEmitter_Parms SpawnEmitter_Parms;
	SpawnEmitter_Parms.EmitterTemplate = EmitterTemplate;
	memcpy(&SpawnEmitter_Parms.SpawnLocation,&SpawnLocation,0xC);
	memcpy(&SpawnEmitter_Parms.SpawnRotation,&SpawnRotation,0xC);
	SpawnEmitter_Parms.AttachToActor = AttachToActor;
	ProcessEvent(pFnSpawnEmitter,NULL,&SpawnEmitter_Parms,NULL);
	return SpawnEmitter_Parms.ReturnValue;
}

struct Engine_GetFreeStaticMeshComponent_Parms
{
	unsigned long                                      bCreateNewObject : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	class UStaticMeshComponent*                        ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UStaticMeshComponent* AEmitterPool::GetFreeStaticMeshComponent(bool bCreateNewObject)
{
	static UFieldFunc* pFnGetFreeStaticMeshComponent = NULL;
	if(!pFnGetFreeStaticMeshComponent)
		pFnGetFreeStaticMeshComponent = UObject::FindFunction("Function Engine.EmitterPool.GetFreeStaticMeshComponent");

	Engine_GetFreeStaticMeshComponent_Parms GetFreeStaticMeshComponent_Parms;
	GetFreeStaticMeshComponent_Parms.bCreateNewObject = bCreateNewObject;
	pFnGetFreeStaticMeshComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFreeStaticMeshComponent,NULL,&GetFreeStaticMeshComponent_Parms,NULL);
	pFnGetFreeStaticMeshComponent->FunctionFlags |= 0x400;
	return GetFreeStaticMeshComponent_Parms.ReturnValue;
}

struct Engine_ReturnToPool_Parms
{
	class UParticleSystemComponent*                    PSC;                                              		// 0x000000 (0x0004)              
};

void AEmitterPool::ReturnToPool(class UParticleSystemComponent* PSC)
{
	static UFieldFunc* pFnReturnToPool = NULL;
	if(!pFnReturnToPool)
		pFnReturnToPool = UObject::FindFunction("Function Engine.EmitterPool.ReturnToPool");

	Engine_ReturnToPool_Parms ReturnToPool_Parms;
	ReturnToPool_Parms.PSC = PSC;
	pFnReturnToPool->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReturnToPool,NULL,&ReturnToPool_Parms,NULL);
	pFnReturnToPool->FunctionFlags |= 0x400;
}

struct Engine_FreeMaterialInstanceConstants_Parms
{
	class UStaticMeshComponent*                        SMC;                                              		// 0x000000 (0x0004)              
};

void AEmitterPool::FreeMaterialInstanceConstants(class UStaticMeshComponent* SMC)
{
	static UFieldFunc* pFnFreeMaterialInstanceConstants = NULL;
	if(!pFnFreeMaterialInstanceConstants)
		pFnFreeMaterialInstanceConstants = UObject::FindFunction("Function Engine.EmitterPool.FreeMaterialInstanceConstants");

	Engine_FreeMaterialInstanceConstants_Parms FreeMaterialInstanceConstants_Parms;
	FreeMaterialInstanceConstants_Parms.SMC = SMC;
	pFnFreeMaterialInstanceConstants->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFreeMaterialInstanceConstants,NULL,&FreeMaterialInstanceConstants_Parms,NULL);
	pFnFreeMaterialInstanceConstants->FunctionFlags |= 0x400;
}

struct Engine_GetPooledComponent_Parms
{
	class UParticleSystem*                             EmitterTemplate;                                  		// 0x000000 (0x0004)              
	class UParticleSystemComponent*                    ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UParticleSystemComponent* AEmitterPool::GetPooledComponent(class UParticleSystem* EmitterTemplate)
{
	static UFieldFunc* pFnGetPooledComponent = NULL;
	if(!pFnGetPooledComponent)
		pFnGetPooledComponent = UObject::FindFunction("Function Engine.EmitterPool.GetPooledComponent");

	Engine_GetPooledComponent_Parms GetPooledComponent_Parms;
	GetPooledComponent_Parms.EmitterTemplate = EmitterTemplate;
	pFnGetPooledComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPooledComponent,NULL,&GetPooledComponent_Parms,NULL);
	pFnGetPooledComponent->FunctionFlags |= 0x400;
	return GetPooledComponent_Parms.ReturnValue;
}

struct Engine_FreeStaticMeshComponents_Parms
{
	class UParticleSystemComponent*                    PSC;                                              		// 0x000000 (0x0004)              
};

void AEmitterPool::FreeStaticMeshComponents(class UParticleSystemComponent* PSC)
{
	static UFieldFunc* pFnFreeStaticMeshComponents = NULL;
	if(!pFnFreeStaticMeshComponents)
		pFnFreeStaticMeshComponents = UObject::FindFunction("Function Engine.EmitterPool.FreeStaticMeshComponents");

	Engine_FreeStaticMeshComponents_Parms FreeStaticMeshComponents_Parms;
	FreeStaticMeshComponents_Parms.PSC = PSC;
	pFnFreeStaticMeshComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFreeStaticMeshComponents,NULL,&FreeStaticMeshComponents_Parms,NULL);
	pFnFreeStaticMeshComponents->FunctionFlags |= 0x400;
}

struct Engine_SpawnEmitterCustomLifetime_Parms
{
	class UParticleSystem*                             EmitterTemplate;                                  		// 0x000000 (0x0004)              
	class UParticleSystemComponent*                    ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UParticleSystemComponent* AEmitterPool::SpawnEmitterCustomLifetime(class UParticleSystem* EmitterTemplate)
{
	static UFieldFunc* pFnSpawnEmitterCustomLifetime = NULL;
	if(!pFnSpawnEmitterCustomLifetime)
		pFnSpawnEmitterCustomLifetime = UObject::FindFunction("Function Engine.EmitterPool.SpawnEmitterCustomLifetime");

	Engine_SpawnEmitterCustomLifetime_Parms SpawnEmitterCustomLifetime_Parms;
	SpawnEmitterCustomLifetime_Parms.EmitterTemplate = EmitterTemplate;
	ProcessEvent(pFnSpawnEmitterCustomLifetime,NULL,&SpawnEmitterCustomLifetime_Parms,NULL);
	return SpawnEmitterCustomLifetime_Parms.ReturnValue;
}

struct Engine_GetFreeMatInstConsts_Parms
{
	unsigned long                                      bCreateNewObject : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	class UMaterialInstanceConstant*                   ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UMaterialInstanceConstant* AEmitterPool::GetFreeMatInstConsts(bool bCreateNewObject)
{
	static UFieldFunc* pFnGetFreeMatInstConsts = NULL;
	if(!pFnGetFreeMatInstConsts)
		pFnGetFreeMatInstConsts = UObject::FindFunction("Function Engine.EmitterPool.GetFreeMatInstConsts");

	Engine_GetFreeMatInstConsts_Parms GetFreeMatInstConsts_Parms;
	GetFreeMatInstConsts_Parms.bCreateNewObject = bCreateNewObject;
	pFnGetFreeMatInstConsts->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFreeMatInstConsts,NULL,&GetFreeMatInstConsts_Parms,NULL);
	pFnGetFreeMatInstConsts->FunctionFlags |= 0x400;
	return GetFreeMatInstConsts_Parms.ReturnValue;
}

struct Engine_ShouldDisplayDebug_Parms
{
	struct FName                                       DebugType;                                        		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x00000C (0x0004)              
};

bool AHUD::ShouldDisplayDebug(struct FName DebugType)
{
	static UFieldFunc* pFnShouldDisplayDebug = NULL;
	if(!pFnShouldDisplayDebug)
		pFnShouldDisplayDebug = UObject::FindFunction("Function Engine.HUD.ShouldDisplayDebug");

	Engine_ShouldDisplayDebug_Parms ShouldDisplayDebug_Parms;
	memcpy(&ShouldDisplayDebug_Parms.DebugType,&DebugType,0x8);
	ProcessEvent(pFnShouldDisplayDebug,NULL,&ShouldDisplayDebug_Parms,NULL);
	return ShouldDisplayDebug_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void AHUD::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.HUD.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_PreRender_Parms
{
};

void AHUD::PreRender()
{
	static UFieldFunc* pFnPreRender = NULL;
	if(!pFnPreRender)
		pFnPreRender = UObject::FindFunction("Function Engine.HUD.PreRender");

	Engine_PreRender_Parms PreRender_Parms;
	pFnPreRender->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPreRender,NULL,&PreRender_Parms,NULL);
	pFnPreRender->FunctionFlags |= 0x400;
}

struct Engine_ShowScores_Parms
{
};

void AHUD::ShowScores()
{
	static UFieldFunc* pFnShowScores = NULL;
	if(!pFnShowScores)
		pFnShowScores = UObject::FindFunction("Function Engine.HUD.ShowScores");

	Engine_ShowScores_Parms ShowScores_Parms;
	ProcessEvent(pFnShowScores,NULL,&ShowScores_Parms,NULL);
}

struct Engine_ShowDebug_Parms
{
	struct FName                                       DebugType;                                        		// 0x000000 (0x0008)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//unsigned long                                      bFound : 1;                                       		// 0x00000C (0x0004) [0x00000001] 
};

void AHUD::ShowDebug(struct FName DebugType)
{
	static UFieldFunc* pFnShowDebug = NULL;
	if(!pFnShowDebug)
		pFnShowDebug = UObject::FindFunction("Function Engine.HUD.ShowDebug");

	Engine_ShowDebug_Parms ShowDebug_Parms;
	memcpy(&ShowDebug_Parms.DebugType,&DebugType,0x8);
	ProcessEvent(pFnShowDebug,NULL,&ShowDebug_Parms,NULL);
}

struct Engine_DrawMessage_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	float                                              PosY;                                             		// 0x000004 (0x0004)              
	float                                              DX;                                               		// 0x000008 (0x0004)              
	float                                              DY;                                               		// 0x00000C (0x0004)              
	//float                                              FadeValue;                                        		// 0x000010 (0x0004)              
	//float                                              ScreenX;                                          		// 0x000014 (0x0004)              
	//float                                              ScreenY;                                          		// 0x000018 (0x0004)              
};

void AHUD::DrawMessage(int I,float PosY,float* DX,float* DY)
{
	static UFieldFunc* pFnDrawMessage = NULL;
	if(!pFnDrawMessage)
		pFnDrawMessage = UObject::FindFunction("Function Engine.HUD.DrawMessage");

	Engine_DrawMessage_Parms DrawMessage_Parms;
	DrawMessage_Parms.I = I;
	DrawMessage_Parms.PosY = PosY;
	ProcessEvent(pFnDrawMessage,NULL,&DrawMessage_Parms,NULL);
	if(DX)
		*DX = DrawMessage_Parms.DX;
	if(DY)
		*DY = DrawMessage_Parms.DY;
}

struct Engine_AddConsoleMessage_Parms
{
	struct FString                                     M;                                                		// 0x000000 (0x000C)              
	class UClass*                                      InMessageClass;                                   		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000010 (0x0004)              
	float                                              Lifetime;                                         		// 0x000014 (0x0004)              
	//int                                                Idx;                                              		// 0x000018 (0x0004)              
	//int                                                MsgIdx;                                           		// 0x00001C (0x0004)              
};

void AHUD::AddConsoleMessage(struct FString M,class UClass* InMessageClass,class APlayerReplicationInfo* PRI,float Lifetime)
{
	static UFieldFunc* pFnAddConsoleMessage = NULL;
	if(!pFnAddConsoleMessage)
		pFnAddConsoleMessage = UObject::FindFunction("Function Engine.HUD.AddConsoleMessage");

	Engine_AddConsoleMessage_Parms AddConsoleMessage_Parms;
	memcpy(&AddConsoleMessage_Parms.M,&M,0xC);
	AddConsoleMessage_Parms.InMessageClass = InMessageClass;
	AddConsoleMessage_Parms.PRI = PRI;
	AddConsoleMessage_Parms.Lifetime = Lifetime;
	ProcessEvent(pFnAddConsoleMessage,NULL,&AddConsoleMessage_Parms,NULL);
}

struct Engine_ShowHUD_Parms
{
};

void AHUD::ShowHUD()
{
	static UFieldFunc* pFnShowHUD = NULL;
	if(!pFnShowHUD)
		pFnShowHUD = UObject::FindFunction("Function Engine.HUD.ShowHUD");

	Engine_ShowHUD_Parms ShowHUD_Parms;
	ProcessEvent(pFnShowHUD,NULL,&ShowHUD_Parms,NULL);
}

struct Engine_DisplayConsoleMessages_Parms
{
	//int                                                Idx;                                              		// 0x000000 (0x0004)              
	//int                                                XPos;                                             		// 0x000004 (0x0004)              
	//int                                                YPos;                                             		// 0x000008 (0x0004)              
	//float                                              XL;                                               		// 0x00000C (0x0004)              
	//float                                              YL;                                               		// 0x000010 (0x0004)              
};

void AHUD::DisplayConsoleMessages()
{
	static UFieldFunc* pFnDisplayConsoleMessages = NULL;
	if(!pFnDisplayConsoleMessages)
		pFnDisplayConsoleMessages = UObject::FindFunction("Function Engine.HUD.DisplayConsoleMessages");

	Engine_DisplayConsoleMessages_Parms DisplayConsoleMessages_Parms;
	ProcessEvent(pFnDisplayConsoleMessages,NULL,&DisplayConsoleMessages_Parms,NULL);
}

struct Engine_SetShowScores_Parms
{
	unsigned long                                      bNewValue : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void AHUD::SetShowScores(bool bNewValue)
{
	static UFieldFunc* pFnSetShowScores = NULL;
	if(!pFnSetShowScores)
		pFnSetShowScores = UObject::FindFunction("Function Engine.HUD.SetShowScores");

	Engine_SetShowScores_Parms SetShowScores_Parms;
	SetShowScores_Parms.bNewValue = bNewValue;
	ProcessEvent(pFnSetShowScores,NULL,&SetShowScores_Parms,NULL);
}

struct Engine_DisplayLocalMessages_Parms
{
	//float                                              PosY;                                             		// 0x000000 (0x0004)              
	//float                                              DY;                                               		// 0x000004 (0x0004)              
	//float                                              DX;                                               		// 0x000008 (0x0004)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
	//int                                                J;                                                		// 0x000010 (0x0004)              
	//int                                                LocalMessagesArrayCount;                          		// 0x000014 (0x0004)              
	//int                                                AreaMessageCount;                                 		// 0x000018 (0x0004)              
	//float                                              FadeValue;                                        		// 0x00001C (0x0004)              
	//int                                                FontSize;                                         		// 0x000020 (0x0004)              
};

void AHUD::DisplayLocalMessages()
{
	static UFieldFunc* pFnDisplayLocalMessages = NULL;
	if(!pFnDisplayLocalMessages)
		pFnDisplayLocalMessages = UObject::FindFunction("Function Engine.HUD.DisplayLocalMessages");

	Engine_DisplayLocalMessages_Parms DisplayLocalMessages_Parms;
	ProcessEvent(pFnDisplayLocalMessages,NULL,&DisplayLocalMessages_Parms,NULL);
}

struct Engine_Draw3DLine_Parms
{
	FVector3                                           Start;                                            		// 0x000000 (0x000C)              
	FVector3                                           End;                                              		// 0x00000C (0x000C)              
	DWORD                                              LineColor;                                        		// 0x000018 (0x0004)              
};

void AHUD::Draw3DLine(FVector3 Start,FVector3 End,DWORD LineColor)
{
	static UFieldFunc* pFnDraw3DLine = NULL;
	if(!pFnDraw3DLine)
		pFnDraw3DLine = UObject::FindFunction("Function Engine.HUD.Draw3DLine");

	Engine_Draw3DLine_Parms Draw3DLine_Parms;
	memcpy(&Draw3DLine_Parms.Start,&Start,0xC);
	memcpy(&Draw3DLine_Parms.End,&End,0xC);
	memcpy(&Draw3DLine_Parms.LineColor,&LineColor,0x4);
	pFnDraw3DLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDraw3DLine,NULL,&Draw3DLine_Parms,NULL);
	pFnDraw3DLine->FunctionFlags |= 0x400;
}

struct Engine_OnLostFocusPause_Parms
{
	unsigned long                                      Enable : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void AHUD::OnLostFocusPause(bool Enable)
{
	static UFieldFunc* pFnOnLostFocusPause = NULL;
	if(!pFnOnLostFocusPause)
		pFnOnLostFocusPause = UObject::FindFunction("Function Engine.HUD.OnLostFocusPause");

	Engine_OnLostFocusPause_Parms OnLostFocusPause_Parms;
	OnLostFocusPause_Parms.Enable = Enable;
	ProcessEvent(pFnOnLostFocusPause,NULL,&OnLostFocusPause_Parms,NULL);
}

struct Engine_AddLocalizedMessage_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class UClass*                                      InMessageClass;                                   		// 0x000004 (0x0004)              
	struct FString                                     CriticalString;                                   		// 0x000008 (0x000C)              
	int                                                Switch;                                           		// 0x000014 (0x0004)              
	float                                              Position;                                         		// 0x000018 (0x0004)              
	float                                              Lifetime;                                         		// 0x00001C (0x0004)              
	int                                                FontSize;                                         		// 0x000020 (0x0004)              
	DWORD                                              DrawColor;                                        		// 0x000024 (0x0004)              
	int                                                MessageCount;                                     		// 0x000028 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x00002C (0x0004)              
};

void AHUD::AddLocalizedMessage(int Index,class UClass* InMessageClass,struct FString CriticalString,int Switch,float Position,float Lifetime,int FontSize,DWORD DrawColor,int MessageCount,class UObject* OptionalObject)
{
	static UFieldFunc* pFnAddLocalizedMessage = NULL;
	if(!pFnAddLocalizedMessage)
		pFnAddLocalizedMessage = UObject::FindFunction("Function Engine.HUD.AddLocalizedMessage");

	Engine_AddLocalizedMessage_Parms AddLocalizedMessage_Parms;
	AddLocalizedMessage_Parms.Index = Index;
	AddLocalizedMessage_Parms.InMessageClass = InMessageClass;
	memcpy(&AddLocalizedMessage_Parms.CriticalString,&CriticalString,0xC);
	AddLocalizedMessage_Parms.Switch = Switch;
	AddLocalizedMessage_Parms.Position = Position;
	AddLocalizedMessage_Parms.Lifetime = Lifetime;
	AddLocalizedMessage_Parms.FontSize = FontSize;
	memcpy(&AddLocalizedMessage_Parms.DrawColor,&DrawColor,0x4);
	AddLocalizedMessage_Parms.MessageCount = MessageCount;
	AddLocalizedMessage_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnAddLocalizedMessage,NULL,&AddLocalizedMessage_Parms,NULL);
}

struct Engine_DrawMessageText_Parms
{
	struct FHudLocalizedMessage                        LocalMessage;                                     		// 0x000000 (0x0044)              
	float                                              ScreenX;                                          		// 0x000044 (0x0004)              
	float                                              ScreenY;                                          		// 0x000048 (0x0004)              
};

void AHUD::DrawMessageText(struct FHudLocalizedMessage LocalMessage,float ScreenX,float ScreenY)
{
	static UFieldFunc* pFnDrawMessageText = NULL;
	if(!pFnDrawMessageText)
		pFnDrawMessageText = UObject::FindFunction("Function Engine.HUD.DrawMessageText");

	Engine_DrawMessageText_Parms DrawMessageText_Parms;
	memcpy(&DrawMessageText_Parms.LocalMessage,&LocalMessage,0x44);
	DrawMessageText_Parms.ScreenX = ScreenX;
	DrawMessageText_Parms.ScreenY = ScreenY;
	ProcessEvent(pFnDrawMessageText,NULL,&DrawMessageText_Parms,NULL);
}

struct Engine_LocalizedMessage_Parms
{
	class UClass*                                      InMessageClass;                                   		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000004 (0x0004)              
	struct FString                                     CriticalString;                                   		// 0x000008 (0x000C)              
	int                                                Switch;                                           		// 0x000014 (0x0004)              
	float                                              Position;                                         		// 0x000018 (0x0004)              
	float                                              Lifetime;                                         		// 0x00001C (0x0004)              
	int                                                FontSize;                                         		// 0x000020 (0x0004)              
	DWORD                                              DrawColor;                                        		// 0x000024 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000028 (0x0004)              
	//int                                                I;                                                		// 0x00002C (0x0004)              
	//int                                                LocalMessagesArrayCount;                          		// 0x000030 (0x0004)              
	//int                                                MessageCount;                                     		// 0x000034 (0x0004)              
};

void AHUD::LocalizedMessage(class UClass* InMessageClass,class APlayerReplicationInfo* RelatedPRI,struct FString CriticalString,int Switch,float Position,float Lifetime,int FontSize,DWORD DrawColor,class UObject* OptionalObject)
{
	static UFieldFunc* pFnLocalizedMessage = NULL;
	if(!pFnLocalizedMessage)
		pFnLocalizedMessage = UObject::FindFunction("Function Engine.HUD.LocalizedMessage");

	Engine_LocalizedMessage_Parms LocalizedMessage_Parms;
	LocalizedMessage_Parms.InMessageClass = InMessageClass;
	LocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	memcpy(&LocalizedMessage_Parms.CriticalString,&CriticalString,0xC);
	LocalizedMessage_Parms.Switch = Switch;
	LocalizedMessage_Parms.Position = Position;
	LocalizedMessage_Parms.Lifetime = Lifetime;
	LocalizedMessage_Parms.FontSize = FontSize;
	memcpy(&LocalizedMessage_Parms.DrawColor,&DrawColor,0x4);
	LocalizedMessage_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnLocalizedMessage,NULL,&LocalizedMessage_Parms,NULL);
}

struct Engine_PreCalcValues_Parms
{
};

void AHUD::PreCalcValues()
{
	static UFieldFunc* pFnPreCalcValues = NULL;
	if(!pFnPreCalcValues)
		pFnPreCalcValues = UObject::FindFunction("Function Engine.HUD.PreCalcValues");

	Engine_PreCalcValues_Parms PreCalcValues_Parms;
	ProcessEvent(pFnPreCalcValues,NULL,&PreCalcValues_Parms,NULL);
}

struct Engine_DrawHUD_Parms
{
};

void AHUD::DrawHUD()
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.HUD.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_DrawRoute_Parms
{
	class APawn*                                       Target;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//class AController*                                 C;                                                		// 0x000008 (0x0004)              
	//FVector3                                           Start;                                            		// 0x00000C (0x000C)              
	//FVector3                                           RealStart;                                        		// 0x000018 (0x000C)              
	//unsigned long                                      bPath : 1;                                        		// 0x000024 (0x0004) [0x00000001] 
	//class AActor*                                      FirstRouteCache;                                  		// 0x000028 (0x0004)              
};

void AHUD::DrawRoute(class APawn* Target)
{
	static UFieldFunc* pFnDrawRoute = NULL;
	if(!pFnDrawRoute)
		pFnDrawRoute = UObject::FindFunction("Function Engine.HUD.DrawRoute");

	Engine_DrawRoute_Parms DrawRoute_Parms;
	DrawRoute_Parms.Target = Target;
	ProcessEvent(pFnDrawRoute,NULL,&DrawRoute_Parms,NULL);
}

struct Engine_PlayerOwnerDied_Parms
{
};

void AHUD::PlayerOwnerDied()
{
	static UFieldFunc* pFnPlayerOwnerDied = NULL;
	if(!pFnPlayerOwnerDied)
		pFnPlayerOwnerDied = UObject::FindFunction("Function Engine.HUD.PlayerOwnerDied");

	Engine_PlayerOwnerDied_Parms PlayerOwnerDied_Parms;
	ProcessEvent(pFnPlayerOwnerDied,NULL,&PlayerOwnerDied_Parms,NULL);
}

struct Engine_FXStop_Parms
{
	class UClass*                                      aClass;                                           		// 0x000000 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	//class APawn*                                       ClosestPawn;                                      		// 0x000008 (0x0004)              
	//float                                              ThisDistance;                                     		// 0x00000C (0x0004)              
	//float                                              ClosestPawnDistance;                              		// 0x000010 (0x0004)              
};

void AHUD::FXStop(class UClass* aClass)
{
	static UFieldFunc* pFnFXStop = NULL;
	if(!pFnFXStop)
		pFnFXStop = UObject::FindFunction("Function Engine.HUD.FXStop");

	Engine_FXStop_Parms FXStop_Parms;
	FXStop_Parms.aClass = aClass;
	ProcessEvent(pFnFXStop,NULL,&FXStop_Parms,NULL);
}

struct Engine_Draw2DLine_Parms
{
	int                                                X1;                                               		// 0x000000 (0x0004)              
	int                                                Y1;                                               		// 0x000004 (0x0004)              
	int                                                X2;                                               		// 0x000008 (0x0004)              
	int                                                Y2;                                               		// 0x00000C (0x0004)              
	DWORD                                              LineColor;                                        		// 0x000010 (0x0004)              
};

void AHUD::Draw2DLine(int X1,int Y1,int X2,int Y2,DWORD LineColor)
{
	static UFieldFunc* pFnDraw2DLine = NULL;
	if(!pFnDraw2DLine)
		pFnDraw2DLine = UObject::FindFunction("Function Engine.HUD.Draw2DLine");

	Engine_Draw2DLine_Parms Draw2DLine_Parms;
	Draw2DLine_Parms.X1 = X1;
	Draw2DLine_Parms.Y1 = Y1;
	Draw2DLine_Parms.X2 = X2;
	Draw2DLine_Parms.Y2 = Y2;
	memcpy(&Draw2DLine_Parms.LineColor,&LineColor,0x4);
	pFnDraw2DLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDraw2DLine,NULL,&Draw2DLine_Parms,NULL);
	pFnDraw2DLine->FunctionFlags |= 0x400;
}

struct Engine_DisplayBadConnectionAlert_Parms
{
};

void AHUD::DisplayBadConnectionAlert()
{
	static UFieldFunc* pFnDisplayBadConnectionAlert = NULL;
	if(!pFnDisplayBadConnectionAlert)
		pFnDisplayBadConnectionAlert = UObject::FindFunction("Function Engine.HUD.DisplayBadConnectionAlert");

	Engine_DisplayBadConnectionAlert_Parms DisplayBadConnectionAlert_Parms;
	ProcessEvent(pFnDisplayBadConnectionAlert,NULL,&DisplayBadConnectionAlert_Parms,NULL);
}

struct Engine_ClearMessage_Parms
{
	struct FHudLocalizedMessage                        M;                                                		// 0x000000 (0x0044)              
};

void AHUD::ClearMessage(struct FHudLocalizedMessage* M)
{
	static UFieldFunc* pFnClearMessage = NULL;
	if(!pFnClearMessage)
		pFnClearMessage = UObject::FindFunction("Function Engine.HUD.ClearMessage");

	Engine_ClearMessage_Parms ClearMessage_Parms;
	ProcessEvent(pFnClearMessage,NULL,&ClearMessage_Parms,NULL);
	if(M)
		memcpy(M,&ClearMessage_Parms.M,0x44);
}

struct Engine_Message_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	struct FString                                     msg;                                              		// 0x000004 (0x000C)              
	struct FName                                       MsgType;                                          		// 0x000010 (0x0008)              
	float                                              Lifetime;                                         		// 0x000018 (0x0004)              
};

void AHUD::Message(class APlayerReplicationInfo* PRI,struct FString msg,struct FName MsgType,float Lifetime)
{
	static UFieldFunc* pFnMessage = NULL;
	if(!pFnMessage)
		pFnMessage = UObject::FindFunction("Function Engine.HUD.Message");

	Engine_Message_Parms Message_Parms;
	Message_Parms.PRI = PRI;
	memcpy(&Message_Parms.msg,&msg,0xC);
	memcpy(&Message_Parms.MsgType,&MsgType,0x8);
	Message_Parms.Lifetime = Lifetime;
	ProcessEvent(pFnMessage,NULL,&Message_Parms,NULL);
}

struct Engine_SpawnScoreBoard_Parms
{
	class UClass*                                      ScoringType;                                      		// 0x000000 (0x0004)              
};

void AHUD::SpawnScoreBoard(class UClass* ScoringType)
{
	static UFieldFunc* pFnSpawnScoreBoard = NULL;
	if(!pFnSpawnScoreBoard)
		pFnSpawnScoreBoard = UObject::FindFunction("Function Engine.HUD.SpawnScoreBoard");

	Engine_SpawnScoreBoard_Parms SpawnScoreBoard_Parms;
	SpawnScoreBoard_Parms.ScoringType = ScoringType;
	ProcessEvent(pFnSpawnScoreBoard,NULL,&SpawnScoreBoard_Parms,NULL);
}

struct Engine_GetRYGColorRamp_Parms
{
	float                                              Pct;                                              		// 0x000000 (0x0004)              
	DWORD                                              ReturnValue;                                      		// 0x000004 (0x0004)              
	//DWORD                                              GYRColor;                                         		// 0x000008 (0x0004)              
};

DWORD AHUD::GetRYGColorRamp(float Pct)
{
	static UFieldFunc* pFnGetRYGColorRamp = NULL;
	if(!pFnGetRYGColorRamp)
		pFnGetRYGColorRamp = UObject::FindFunction("Function Engine.HUD.GetRYGColorRamp");

	Engine_GetRYGColorRamp_Parms GetRYGColorRamp_Parms;
	GetRYGColorRamp_Parms.Pct = Pct;
	ProcessEvent(pFnGetRYGColorRamp,NULL,&GetRYGColorRamp_Parms,NULL);
	return GetRYGColorRamp_Parms.ReturnValue;
}

struct Engine_PostRender_Parms
{
};

void AHUD::PostRender()
{
	static UFieldFunc* pFnPostRender = NULL;
	if(!pFnPostRender)
		pFnPostRender = UObject::FindFunction("Function Engine.HUD.PostRender");

	Engine_PostRender_Parms PostRender_Parms;
	pFnPostRender->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPostRender,NULL,&PostRender_Parms,NULL);
	pFnPostRender->FunctionFlags |= 0x400;
}

struct Engine_GetScreenCoords_Parms
{
	float                                              PosY;                                             		// 0x000000 (0x0004)              
	float                                              ScreenX;                                          		// 0x000004 (0x0004)              
	float                                              ScreenY;                                          		// 0x000008 (0x0004)              
	struct FHudLocalizedMessage                        InMessage;                                        		// 0x00000C (0x0044)              
};

void AHUD::GetScreenCoords(float PosY,float* ScreenX,float* ScreenY,struct FHudLocalizedMessage* InMessage)
{
	static UFieldFunc* pFnGetScreenCoords = NULL;
	if(!pFnGetScreenCoords)
		pFnGetScreenCoords = UObject::FindFunction("Function Engine.HUD.GetScreenCoords");

	Engine_GetScreenCoords_Parms GetScreenCoords_Parms;
	GetScreenCoords_Parms.PosY = PosY;
	ProcessEvent(pFnGetScreenCoords,NULL,&GetScreenCoords_Parms,NULL);
	if(ScreenX)
		*ScreenX = GetScreenCoords_Parms.ScreenX;
	if(ScreenY)
		*ScreenY = GetScreenCoords_Parms.ScreenY;
	if(InMessage)
		memcpy(InMessage,&GetScreenCoords_Parms.InMessage,0x44);
}

struct Engine_DrawEngineHUD_Parms
{
};

void AHUD::DrawEngineHUD()
{
	static UFieldFunc* pFnDrawEngineHUD = NULL;
	if(!pFnDrawEngineHUD)
		pFnDrawEngineHUD = UObject::FindFunction("Function Engine.HUD.DrawEngineHUD");

	Engine_DrawEngineHUD_Parms DrawEngineHUD_Parms;
	ProcessEvent(pFnDrawEngineHUD,NULL,&DrawEngineHUD_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AHUD::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.HUD.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_ToggleHUD_Parms
{
};

void AHUD::ToggleHUD()
{
	static UFieldFunc* pFnToggleHUD = NULL;
	if(!pFnToggleHUD)
		pFnToggleHUD = UObject::FindFunction("Function Engine.HUD.ToggleHUD");

	Engine_ToggleHUD_Parms ToggleHUD_Parms;
	ProcessEvent(pFnToggleHUD,NULL,&ToggleHUD_Parms,NULL);
}

struct Engine_DrawDemoHUD_Parms
{
};

void AHUD::DrawDemoHUD()
{
	static UFieldFunc* pFnDrawDemoHUD = NULL;
	if(!pFnDrawDemoHUD)
		pFnDrawDemoHUD = UObject::FindFunction("Function Engine.HUD.DrawDemoHUD");

	Engine_DrawDemoHUD_Parms DrawDemoHUD_Parms;
	ProcessEvent(pFnDrawDemoHUD,NULL,&DrawDemoHUD_Parms,NULL);
}

struct Engine_GetFontSizeIndex_Parms
{
	int                                                FontSize;                                         		// 0x000000 (0x0004)              
	class UFont*                                       ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UFont* AHUD::GetFontSizeIndex(int FontSize)
{
	static UFieldFunc* pFnGetFontSizeIndex = NULL;
	if(!pFnGetFontSizeIndex)
		pFnGetFontSizeIndex = UObject::FindFunction("Function Engine.HUD.GetFontSizeIndex");

	Engine_GetFontSizeIndex_Parms GetFontSizeIndex_Parms;
	GetFontSizeIndex_Parms.FontSize = FontSize;
	ProcessEvent(pFnGetFontSizeIndex,NULL,&GetFontSizeIndex_Parms,NULL);
	return GetFontSizeIndex_Parms.ReturnValue;
}

struct Engine_FXPlay_Parms
{
	class UClass*                                      aClass;                                           		// 0x000000 (0x0004)              
	struct FString                                     FXAnimPath;                                       		// 0x000004 (0x000C)              
	//class APawn*                                       P;                                                		// 0x000010 (0x0004)              
	//class APawn*                                       ClosestPawn;                                      		// 0x000014 (0x0004)              
	//float                                              ThisDistance;                                     		// 0x000018 (0x0004)              
	//float                                              ClosestPawnDistance;                              		// 0x00001C (0x0004)              
	//struct FString                                     FxAnimGroup;                                      		// 0x000020 (0x000C)              
	//struct FString                                     FxAnimName;                                       		// 0x00002C (0x000C)              
	//int                                                dotPos;                                           		// 0x000038 (0x0004)              
};

void AHUD::FXPlay(class UClass* aClass,struct FString FXAnimPath)
{
	static UFieldFunc* pFnFXPlay = NULL;
	if(!pFnFXPlay)
		pFnFXPlay = UObject::FindFunction("Function Engine.HUD.FXPlay");

	Engine_FXPlay_Parms FXPlay_Parms;
	FXPlay_Parms.aClass = aClass;
	memcpy(&FXPlay_Parms.FXAnimPath,&FXAnimPath,0xC);
	ProcessEvent(pFnFXPlay,NULL,&FXPlay_Parms,NULL);
}

struct Engine_DisplayProgressMessage_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//int                                                LineCount;                                        		// 0x000004 (0x0004)              
	//float                                              FontDX;                                           		// 0x000008 (0x0004)              
	//float                                              FontDY;                                           		// 0x00000C (0x0004)              
	//float                                              X;                                                		// 0x000010 (0x0004)              
	//float                                              Y;                                                		// 0x000014 (0x0004)              
	//int                                                Alpha;                                            		// 0x000018 (0x0004)              
	//float                                              TimeLeft;                                         		// 0x00001C (0x0004)              
};

void AHUD::DisplayProgressMessage()
{
	static UFieldFunc* pFnDisplayProgressMessage = NULL;
	if(!pFnDisplayProgressMessage)
		pFnDisplayProgressMessage = UObject::FindFunction("Function Engine.HUD.DisplayProgressMessage");

	Engine_DisplayProgressMessage_Parms DisplayProgressMessage_Parms;
	ProcessEvent(pFnDisplayProgressMessage,NULL,&DisplayProgressMessage_Parms,NULL);
}

struct Engine_PostRenderScript_Parms
{
	//float                                              XL;                                               		// 0x000000 (0x0004)              
	//float                                              YL;                                               		// 0x000004 (0x0004)              
	//float                                              YPos;                                             		// 0x000008 (0x0004)              
};

void AHUD::PostRenderScript()
{
	static UFieldFunc* pFnPostRenderScript = NULL;
	if(!pFnPostRenderScript)
		pFnPostRenderScript = UObject::FindFunction("Function Engine.HUD.PostRenderScript");

	Engine_PostRenderScript_Parms PostRenderScript_Parms;
	ProcessEvent(pFnPostRenderScript,NULL,&PostRenderScript_Parms,NULL);
}

struct Engine_BroadcastText_Parms
{
	class APlayerReplicationInfo*                      SenderPRI;                                        		// 0x000000 (0x0004)              
	class APlayerController*                           Receiver;                                         		// 0x000004 (0x0004)              
	struct FString                                     msg;                                              		// 0x000008 (0x000C)              
	struct FName                                       Type;                                             		// 0x000014 (0x0008)              
};

void ABroadcastHandler::BroadcastText(class APlayerReplicationInfo* SenderPRI,class APlayerController* Receiver,struct FString msg,struct FName Type)
{
	static UFieldFunc* pFnBroadcastText = NULL;
	if(!pFnBroadcastText)
		pFnBroadcastText = UObject::FindFunction("Function Engine.BroadcastHandler.BroadcastText");

	Engine_BroadcastText_Parms BroadcastText_Parms;
	BroadcastText_Parms.SenderPRI = SenderPRI;
	BroadcastText_Parms.Receiver = Receiver;
	memcpy(&BroadcastText_Parms.msg,&msg,0xC);
	memcpy(&BroadcastText_Parms.Type,&Type,0x8);
	ProcessEvent(pFnBroadcastText,NULL,&BroadcastText_Parms,NULL);
}

struct Engine_AllowBroadcastLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x000000 (0x0004)              
	class UClass*                                      Message;                                          		// 0x000004 (0x0004)              
	int                                                Switch;                                           		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000010 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000014 (0x0004)              
	//class APlayerController*                           P;                                                		// 0x000018 (0x0004)              
};

void ABroadcastHandler::AllowBroadcastLocalized(class AActor* Sender,class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnAllowBroadcastLocalized = NULL;
	if(!pFnAllowBroadcastLocalized)
		pFnAllowBroadcastLocalized = UObject::FindFunction("Function Engine.BroadcastHandler.AllowBroadcastLocalized");

	Engine_AllowBroadcastLocalized_Parms AllowBroadcastLocalized_Parms;
	AllowBroadcastLocalized_Parms.Sender = Sender;
	AllowBroadcastLocalized_Parms.Message = Message;
	AllowBroadcastLocalized_Parms.Switch = Switch;
	AllowBroadcastLocalized_Parms.RelatedPRI = RelatedPRI;
	AllowBroadcastLocalized_Parms.RelatedPRI = RelatedPRI;
	AllowBroadcastLocalized_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnAllowBroadcastLocalized,NULL,&AllowBroadcastLocalized_Parms,NULL);
}

struct Engine_Broadcast_Parms
{
	class AActor*                                      Sender;                                           		// 0x000000 (0x0004)              
	struct FString                                     msg;                                              		// 0x000004 (0x000C)              
	struct FName                                       Type;                                             		// 0x000010 (0x0008)              
	//class APlayerController*                           P;                                                		// 0x000018 (0x0004)              
	//class APlayerReplicationInfo*                      PRI;                                              		// 0x00001C (0x0004)              
};

void ABroadcastHandler::Broadcast(class AActor* Sender,struct FString msg,struct FName Type)
{
	static UFieldFunc* pFnBroadcast = NULL;
	if(!pFnBroadcast)
		pFnBroadcast = UObject::FindFunction("Function Engine.BroadcastHandler.Broadcast");

	Engine_Broadcast_Parms Broadcast_Parms;
	Broadcast_Parms.Sender = Sender;
	memcpy(&Broadcast_Parms.msg,&msg,0xC);
	memcpy(&Broadcast_Parms.Type,&Type,0x8);
	ProcessEvent(pFnBroadcast,NULL,&Broadcast_Parms,NULL);
}

struct Engine_AllowBroadcastLocalizedTeam_Parms
{
	int                                                TeamIndex;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Sender;                                           		// 0x000004 (0x0004)              
	class UClass*                                      Message;                                          		// 0x000008 (0x0004)              
	int                                                Switch;                                           		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000010 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000014 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000018 (0x0004)              
	//class APlayerController*                           P;                                                		// 0x00001C (0x0004)              
};

void ABroadcastHandler::AllowBroadcastLocalizedTeam(int TeamIndex,class AActor* Sender,class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnAllowBroadcastLocalizedTeam = NULL;
	if(!pFnAllowBroadcastLocalizedTeam)
		pFnAllowBroadcastLocalizedTeam = UObject::FindFunction("Function Engine.BroadcastHandler.AllowBroadcastLocalizedTeam");

	Engine_AllowBroadcastLocalizedTeam_Parms AllowBroadcastLocalizedTeam_Parms;
	AllowBroadcastLocalizedTeam_Parms.TeamIndex = TeamIndex;
	AllowBroadcastLocalizedTeam_Parms.Sender = Sender;
	AllowBroadcastLocalizedTeam_Parms.Message = Message;
	AllowBroadcastLocalizedTeam_Parms.Switch = Switch;
	AllowBroadcastLocalizedTeam_Parms.RelatedPRI = RelatedPRI;
	AllowBroadcastLocalizedTeam_Parms.RelatedPRI = RelatedPRI;
	AllowBroadcastLocalizedTeam_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnAllowBroadcastLocalizedTeam,NULL,&AllowBroadcastLocalizedTeam_Parms,NULL);
}

struct Engine_BroadcastLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x000000 (0x0004)              
	class APlayerController*                           Receiver;                                         		// 0x000004 (0x0004)              
	class UClass*                                      Message;                                          		// 0x000008 (0x0004)              
	int                                                Switch;                                           		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000010 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000014 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000018 (0x0004)              
};

void ABroadcastHandler::BroadcastLocalized(class AActor* Sender,class APlayerController* Receiver,class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnBroadcastLocalized = NULL;
	if(!pFnBroadcastLocalized)
		pFnBroadcastLocalized = UObject::FindFunction("Function Engine.BroadcastHandler.BroadcastLocalized");

	Engine_BroadcastLocalized_Parms BroadcastLocalized_Parms;
	BroadcastLocalized_Parms.Sender = Sender;
	BroadcastLocalized_Parms.Receiver = Receiver;
	BroadcastLocalized_Parms.Message = Message;
	BroadcastLocalized_Parms.Switch = Switch;
	BroadcastLocalized_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalized_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalized_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnBroadcastLocalized,NULL,&BroadcastLocalized_Parms,NULL);
}

struct Engine_UpdateSentText_Parms
{
};

void ABroadcastHandler::UpdateSentText()
{
	static UFieldFunc* pFnUpdateSentText = NULL;
	if(!pFnUpdateSentText)
		pFnUpdateSentText = UObject::FindFunction("Function Engine.BroadcastHandler.UpdateSentText");

	Engine_UpdateSentText_Parms UpdateSentText_Parms;
	ProcessEvent(pFnUpdateSentText,NULL,&UpdateSentText_Parms,NULL);
}

struct Engine_AllowsBroadcast_Parms
{
	class AActor*                                      broadcaster;                                      		// 0x000000 (0x0004)              
	int                                                InLen;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool ABroadcastHandler::AllowsBroadcast(class AActor* broadcaster,int InLen)
{
	static UFieldFunc* pFnAllowsBroadcast = NULL;
	if(!pFnAllowsBroadcast)
		pFnAllowsBroadcast = UObject::FindFunction("Function Engine.BroadcastHandler.AllowsBroadcast");

	Engine_AllowsBroadcast_Parms AllowsBroadcast_Parms;
	AllowsBroadcast_Parms.broadcaster = broadcaster;
	AllowsBroadcast_Parms.InLen = InLen;
	ProcessEvent(pFnAllowsBroadcast,NULL,&AllowsBroadcast_Parms,NULL);
	return AllowsBroadcast_Parms.ReturnValue;
}

struct Engine_BroadcastTeam_Parms
{
	class AController*                                 Sender;                                           		// 0x000000 (0x0004)              
	struct FString                                     msg;                                              		// 0x000004 (0x000C)              
	struct FName                                       Type;                                             		// 0x000010 (0x0008)              
	//class APlayerController*                           P;                                                		// 0x000018 (0x0004)              
};

void ABroadcastHandler::BroadcastTeam(class AController* Sender,struct FString msg,struct FName Type)
{
	static UFieldFunc* pFnBroadcastTeam = NULL;
	if(!pFnBroadcastTeam)
		pFnBroadcastTeam = UObject::FindFunction("Function Engine.BroadcastHandler.BroadcastTeam");

	Engine_BroadcastTeam_Parms BroadcastTeam_Parms;
	BroadcastTeam_Parms.Sender = Sender;
	memcpy(&BroadcastTeam_Parms.msg,&msg,0xC);
	memcpy(&BroadcastTeam_Parms.Type,&Type,0x8);
	ProcessEvent(pFnBroadcastTeam,NULL,&BroadcastTeam_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void ACoverGroup::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.CoverGroup.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_DisableGroup_Parms
{
};

void ACoverGroup::DisableGroup()
{
	static UFieldFunc* pFnDisableGroup = NULL;
	if(!pFnDisableGroup)
		pFnDisableGroup = UObject::FindFunction("Function Engine.CoverGroup.DisableGroup");

	Engine_DisableGroup_Parms DisableGroup_Parms;
	pFnDisableGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableGroup,NULL,&DisableGroup_Parms,NULL);
	pFnDisableGroup->FunctionFlags |= 0x400;
}

struct Engine_ToggleGroup_Parms
{
};

void ACoverGroup::ToggleGroup()
{
	static UFieldFunc* pFnToggleGroup = NULL;
	if(!pFnToggleGroup)
		pFnToggleGroup = UObject::FindFunction("Function Engine.CoverGroup.ToggleGroup");

	Engine_ToggleGroup_Parms ToggleGroup_Parms;
	pFnToggleGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnToggleGroup,NULL,&ToggleGroup_Parms,NULL);
	pFnToggleGroup->FunctionFlags |= 0x400;
}

struct Engine_EnableGroup_Parms
{
};

void ACoverGroup::EnableGroup()
{
	static UFieldFunc* pFnEnableGroup = NULL;
	if(!pFnEnableGroup)
		pFnEnableGroup = UObject::FindFunction("Function Engine.CoverGroup.EnableGroup");

	Engine_EnableGroup_Parms EnableGroup_Parms;
	pFnEnableGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableGroup,NULL,&EnableGroup_Parms,NULL);
	pFnEnableGroup->FunctionFlags |= 0x400;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ACoverGroup::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.CoverGroup.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OpenFile_Parms
{
	struct FString                                     InFilename;                                       		// 0x000000 (0x000C)              
	unsigned char                                      InFileType;                                       		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	struct FString                                     InExtension;                                      		// 0x000010 (0x000C)              
	unsigned long                                      bUnique : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
	unsigned long                                      bIncludeTimeStamp : 1;                            		// 0x000020 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool AFileWriter::OpenFile(struct FString InFilename,unsigned char InFileType,struct FString InExtension,bool bUnique,bool bIncludeTimeStamp)
{
	static UFieldFunc* pFnOpenFile = NULL;
	if(!pFnOpenFile)
		pFnOpenFile = UObject::FindFunction("Function Engine.FileWriter.OpenFile");

	Engine_OpenFile_Parms OpenFile_Parms;
	memcpy(&OpenFile_Parms.InFilename,&InFilename,0xC);
	OpenFile_Parms.InFileType = InFileType;
	memcpy(&OpenFile_Parms.InExtension,&InExtension,0xC);
	OpenFile_Parms.bUnique = bUnique;
	OpenFile_Parms.bIncludeTimeStamp = bIncludeTimeStamp;
	pFnOpenFile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOpenFile,NULL,&OpenFile_Parms,NULL);
	pFnOpenFile->FunctionFlags |= 0x400;
	return OpenFile_Parms.ReturnValue;
}

struct Engine_Logf_Parms
{
	struct FString                                     logString;                                        		// 0x000000 (0x000C)              
};

void AFileWriter::Logf(struct FString logString)
{
	static UFieldFunc* pFnLogf = NULL;
	if(!pFnLogf)
		pFnLogf = UObject::FindFunction("Function Engine.FileWriter.Logf");

	Engine_Logf_Parms Logf_Parms;
	memcpy(&Logf_Parms.logString,&logString,0xC);
	pFnLogf->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogf,NULL,&Logf_Parms,NULL);
	pFnLogf->FunctionFlags |= 0x400;
}

struct Engine_CloseFile_Parms
{
};

void AFileWriter::CloseFile()
{
	static UFieldFunc* pFnCloseFile = NULL;
	if(!pFnCloseFile)
		pFnCloseFile = UObject::FindFunction("Function Engine.FileWriter.CloseFile");

	Engine_CloseFile_Parms CloseFile_Parms;
	pFnCloseFile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCloseFile,NULL,&CloseFile_Parms,NULL);
	pFnCloseFile->FunctionFlags |= 0x400;
}

struct Engine_Destroyed_Parms
{
};

void AFileWriter::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.FileWriter.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_OpenLog_Parms
{
	struct FString                                     LogFilename;                                      		// 0x000000 (0x000C)              
	struct FString                                     extension;                                        		// 0x00000C (0x000C)              
	unsigned long                                      bUnique : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
};

void AFileLog::OpenLog(struct FString LogFilename,struct FString extension,bool bUnique)
{
	static UFieldFunc* pFnOpenLog = NULL;
	if(!pFnOpenLog)
		pFnOpenLog = UObject::FindFunction("Function Engine.FileLog.OpenLog");

	Engine_OpenLog_Parms OpenLog_Parms;
	memcpy(&OpenLog_Parms.LogFilename,&LogFilename,0xC);
	memcpy(&OpenLog_Parms.extension,&extension,0xC);
	OpenLog_Parms.bUnique = bUnique;
	ProcessEvent(pFnOpenLog,NULL,&OpenLog_Parms,NULL);
}

struct Engine_CloseLog_Parms
{
};

void AFileLog::CloseLog()
{
	static UFieldFunc* pFnCloseLog = NULL;
	if(!pFnCloseLog)
		pFnCloseLog = UObject::FindFunction("Function Engine.FileLog.CloseLog");

	Engine_CloseLog_Parms CloseLog_Parms;
	ProcessEvent(pFnCloseLog,NULL,&CloseLog_Parms,NULL);
}

struct Engine_ProcessEndGameHandshake_Parms
{
};

void AGameInfo::ProcessEndGameHandshake()
{
	static UFieldFunc* pFnProcessEndGameHandshake = NULL;
	if(!pFnProcessEndGameHandshake)
		pFnProcessEndGameHandshake = UObject::FindFunction("Function Engine.GameInfo.ProcessEndGameHandshake");

	Engine_ProcessEndGameHandshake_Parms ProcessEndGameHandshake_Parms;
	ProcessEvent(pFnProcessEndGameHandshake,NULL,&ProcessEndGameHandshake_Parms,NULL);
}

struct Engine_ProcessServerTravel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	unsigned long                                      bAbsolute : 1;                                    		// 0x00000C (0x0004) [0x00000001] 
	//class APlayerController*                           LocalPlayer;                                      		// 0x000010 (0x0004)              
	//unsigned long                                      bSeamless : 1;                                    		// 0x000014 (0x0004) [0x00000001] 
	//struct FString                                     NextMap;                                          		// 0x000018 (0x000C)              
	//struct FGuid                                       NextMapGuid;                                      		// 0x000024 (0x0010)              
	//int                                                OptionStart;                                      		// 0x000034 (0x0004)              
};

void AGameInfo::ProcessServerTravel(struct FString URL,bool bAbsolute)
{
	static UFieldFunc* pFnProcessServerTravel = NULL;
	if(!pFnProcessServerTravel)
		pFnProcessServerTravel = UObject::FindFunction("Function Engine.GameInfo.ProcessServerTravel");

	Engine_ProcessServerTravel_Parms ProcessServerTravel_Parms;
	memcpy(&ProcessServerTravel_Parms.URL,&URL,0xC);
	ProcessServerTravel_Parms.bAbsolute = bAbsolute;
	ProcessEvent(pFnProcessServerTravel,NULL,&ProcessServerTravel_Parms,NULL);
}

struct Engine_RegisterServerForArbitration_Parms
{
};

void AGameInfo::RegisterServerForArbitration()
{
	static UFieldFunc* pFnRegisterServerForArbitration = NULL;
	if(!pFnRegisterServerForArbitration)
		pFnRegisterServerForArbitration = UObject::FindFunction("Function Engine.GameInfo.RegisterServerForArbitration");

	Engine_RegisterServerForArbitration_Parms RegisterServerForArbitration_Parms;
	ProcessEvent(pFnRegisterServerForArbitration,NULL,&RegisterServerForArbitration_Parms,NULL);
}

struct Engine_GrabOption_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     Result;                                           		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AGameInfo::GrabOption(struct FString* Options,struct FString* Result)
{
	static UFieldFunc* pFnGrabOption = NULL;
	if(!pFnGrabOption)
		pFnGrabOption = UObject::FindFunction("Function Engine.GameInfo.GrabOption");

	Engine_GrabOption_Parms GrabOption_Parms;
	ProcessEvent(pFnGrabOption,NULL,&GrabOption_Parms,NULL);
	if(Options)
		memcpy(Options,&GrabOption_Parms.Options,0xC);
	if(Result)
		memcpy(Result,&GrabOption_Parms.Result,0xC);
	return GrabOption_Parms.ReturnValue;
}

struct Engine_RatePlayerStart_Parms
{
	class APlayerStart*                                P;                                                		// 0x000000 (0x0004)              
	unsigned char                                      Team;                                             		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	class AController*                                 Player;                                           		// 0x000008 (0x0004)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float AGameInfo::RatePlayerStart(class APlayerStart* P,unsigned char Team,class AController* Player)
{
	static UFieldFunc* pFnRatePlayerStart = NULL;
	if(!pFnRatePlayerStart)
		pFnRatePlayerStart = UObject::FindFunction("Function Engine.GameInfo.RatePlayerStart");

	Engine_RatePlayerStart_Parms RatePlayerStart_Parms;
	RatePlayerStart_Parms.P = P;
	RatePlayerStart_Parms.Team = Team;
	RatePlayerStart_Parms.Player = Player;
	ProcessEvent(pFnRatePlayerStart,NULL,&RatePlayerStart_Parms,NULL);
	return RatePlayerStart_Parms.ReturnValue;
}

struct Engine_ClearAutoLoginDelegates_Parms
{
};

void AGameInfo::ClearAutoLoginDelegates()
{
	static UFieldFunc* pFnClearAutoLoginDelegates = NULL;
	if(!pFnClearAutoLoginDelegates)
		pFnClearAutoLoginDelegates = UObject::FindFunction("Function Engine.GameInfo.ClearAutoLoginDelegates");

	Engine_ClearAutoLoginDelegates_Parms ClearAutoLoginDelegates_Parms;
	ProcessEvent(pFnClearAutoLoginDelegates,NULL,&ClearAutoLoginDelegates_Parms,NULL);
}

struct Engine_UseLowGore_Parms
{
	class AWorldInfo*                                  WI;                                               		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::UseLowGore(class AWorldInfo* WI)
{
	static UFieldFunc* pFnUseLowGore = NULL;
	if(!pFnUseLowGore)
		pFnUseLowGore = UObject::FindFunction("Function Engine.GameInfo.UseLowGore");

	Engine_UseLowGore_Parms UseLowGore_Parms;
	UseLowGore_Parms.WI = WI;
	ProcessEvent(pFnUseLowGore,NULL,&UseLowGore_Parms,NULL);
	return UseLowGore_Parms.ReturnValue;
}

struct Engine_PlayerCanRestart_Parms
{
	class APlayerController*                           aPlayer;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::PlayerCanRestart(class APlayerController* aPlayer)
{
	static UFieldFunc* pFnPlayerCanRestart = NULL;
	if(!pFnPlayerCanRestart)
		pFnPlayerCanRestart = UObject::FindFunction("Function Engine.GameInfo.PlayerCanRestart");

	Engine_PlayerCanRestart_Parms PlayerCanRestart_Parms;
	PlayerCanRestart_Parms.aPlayer = aPlayer;
	ProcessEvent(pFnPlayerCanRestart,NULL,&PlayerCanRestart_Parms,NULL);
	return PlayerCanRestart_Parms.ReturnValue;
}

struct Engine_SendPlayer_Parms
{
	class APlayerController*                           aPlayer;                                          		// 0x000000 (0x0004)              
	struct FString                                     URL;                                              		// 0x000004 (0x000C)              
};

void AGameInfo::SendPlayer(class APlayerController* aPlayer,struct FString URL)
{
	static UFieldFunc* pFnSendPlayer = NULL;
	if(!pFnSendPlayer)
		pFnSendPlayer = UObject::FindFunction("Function Engine.GameInfo.SendPlayer");

	Engine_SendPlayer_Parms SendPlayer_Parms;
	SendPlayer_Parms.aPlayer = aPlayer;
	memcpy(&SendPlayer_Parms.URL,&URL,0xC);
	ProcessEvent(pFnSendPlayer,NULL,&SendPlayer_Parms,NULL);
}

struct Engine_StandbyCheatDetected_Parms
{
	unsigned char                                      StandbyType;                                      		// 0x000000 (0x0001)              
};

void AGameInfo::StandbyCheatDetected(unsigned char StandbyType)
{
	static UFieldFunc* pFnStandbyCheatDetected = NULL;
	if(!pFnStandbyCheatDetected)
		pFnStandbyCheatDetected = UObject::FindFunction("Function Engine.GameInfo.StandbyCheatDetected");

	Engine_StandbyCheatDetected_Parms StandbyCheatDetected_Parms;
	StandbyCheatDetected_Parms.StandbyType = StandbyType;
	ProcessEvent(pFnStandbyCheatDetected,NULL,&StandbyCheatDetected_Parms,NULL);
}

struct Engine_NativeRenderDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void AGameInfo::NativeRenderDebug(class UCanvas* Canvas)
{
	static UFieldFunc* pFnNativeRenderDebug = NULL;
	if(!pFnNativeRenderDebug)
		pFnNativeRenderDebug = UObject::FindFunction("Function Engine.GameInfo.NativeRenderDebug");

	Engine_NativeRenderDebug_Parms NativeRenderDebug_Parms;
	NativeRenderDebug_Parms.Canvas = Canvas;
	pFnNativeRenderDebug->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNativeRenderDebug,NULL,&NativeRenderDebug_Parms,NULL);
	pFnNativeRenderDebug->FunctionFlags |= 0x400;
}

struct Engine_AtCapacity_Parms
{
	unsigned long                                      bSpectator : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::AtCapacity(bool bSpectator)
{
	static UFieldFunc* pFnAtCapacity = NULL;
	if(!pFnAtCapacity)
		pFnAtCapacity = UObject::FindFunction("Function Engine.GameInfo.AtCapacity");

	Engine_AtCapacity_Parms AtCapacity_Parms;
	AtCapacity_Parms.bSpectator = bSpectator;
	pFnAtCapacity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAtCapacity,NULL,&AtCapacity_Parms,NULL);
	pFnAtCapacity->FunctionFlags |= 0x400;
	return AtCapacity_Parms.ReturnValue;
}

struct Engine_AllowCheats_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::AllowCheats(class APlayerController* P)
{
	static UFieldFunc* pFnAllowCheats = NULL;
	if(!pFnAllowCheats)
		pFnAllowCheats = UObject::FindFunction("Function Engine.GameInfo.AllowCheats");

	Engine_AllowCheats_Parms AllowCheats_Parms;
	AllowCheats_Parms.P = P;
	ProcessEvent(pFnAllowCheats,NULL,&AllowCheats_Parms,NULL);
	return AllowCheats_Parms.ReturnValue;
}

struct Engine_PostLogin_Parms
{
	class APlayerController*                           NewPlayer;                                        		// 0x000000 (0x0004)              
};

void AGameInfo::PostLogin(class APlayerController* NewPlayer)
{
	static UFieldFunc* pFnPostLogin = NULL;
	if(!pFnPostLogin)
		pFnPostLogin = UObject::FindFunction("Function Engine.GameInfo.PostLogin");

	Engine_PostLogin_Parms PostLogin_Parms;
	PostLogin_Parms.NewPlayer = NewPlayer;
	pFnPostLogin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPostLogin,NULL,&PostLogin_Parms,NULL);
	pFnPostLogin->FunctionFlags |= 0x400;
}

struct Engine_ScoreObjective_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x000000 (0x0004)              
	int                                                Score;                                            		// 0x000004 (0x0004)              
};

void AGameInfo::ScoreObjective(class APlayerReplicationInfo* Scorer,int Score)
{
	static UFieldFunc* pFnScoreObjective = NULL;
	if(!pFnScoreObjective)
		pFnScoreObjective = UObject::FindFunction("Function Engine.GameInfo.ScoreObjective");

	Engine_ScoreObjective_Parms ScoreObjective_Parms;
	ScoreObjective_Parms.Scorer = Scorer;
	ScoreObjective_Parms.Score = Score;
	ProcessEvent(pFnScoreObjective,NULL,&ScoreObjective_Parms,NULL);
}

struct Engine_TellClientsToReturnToPartyHost_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AGameInfo::TellClientsToReturnToPartyHost()
{
	static UFieldFunc* pFnTellClientsToReturnToPartyHost = NULL;
	if(!pFnTellClientsToReturnToPartyHost)
		pFnTellClientsToReturnToPartyHost = UObject::FindFunction("Function Engine.GameInfo.TellClientsToReturnToPartyHost");

	Engine_TellClientsToReturnToPartyHost_Parms TellClientsToReturnToPartyHost_Parms;
	ProcessEvent(pFnTellClientsToReturnToPartyHost,NULL,&TellClientsToReturnToPartyHost_Parms,NULL);
}

struct Engine_EndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x000000 (0x0004)              
	struct FString                                     Reason;                                           		// 0x000004 (0x000C)              
	//int                                                Index;                                            		// 0x000010 (0x0004)              
};

void AGameInfo::EndGame(class APlayerReplicationInfo* Winner,struct FString Reason)
{
	static UFieldFunc* pFnEndGame = NULL;
	if(!pFnEndGame)
		pFnEndGame = UObject::FindFunction("Function Engine.GameInfo.EndGame");

	Engine_EndGame_Parms EndGame_Parms;
	EndGame_Parms.Winner = Winner;
	memcpy(&EndGame_Parms.Reason,&Reason,0xC);
	ProcessEvent(pFnEndGame,NULL,&EndGame_Parms,NULL);
}

struct Engine_HasOption_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     InKey;                                            		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	//struct FString                                     Pair;                                             		// 0x00001C (0x000C)              
	//struct FString                                     Key;                                              		// 0x000028 (0x000C)              
	//struct FString                                     Value;                                            		// 0x000034 (0x000C)              
};

bool AGameInfo::HasOption(struct FString Options,struct FString InKey)
{
	static UFieldFunc* pFnHasOption = NULL;
	if(!pFnHasOption)
		pFnHasOption = UObject::FindFunction("Function Engine.GameInfo.HasOption");

	Engine_HasOption_Parms HasOption_Parms;
	memcpy(&HasOption_Parms.Options,&Options,0xC);
	memcpy(&HasOption_Parms.InKey,&InKey,0xC);
	ProcessEvent(pFnHasOption,NULL,&HasOption_Parms,NULL);
	return HasOption_Parms.ReturnValue;
}

struct Engine_RegisterServer_Parms
{
};

void AGameInfo::RegisterServer()
{
	static UFieldFunc* pFnRegisterServer = NULL;
	if(!pFnRegisterServer)
		pFnRegisterServer = UObject::FindFunction("Function Engine.GameInfo.RegisterServer");

	Engine_RegisterServer_Parms RegisterServer_Parms;
	ProcessEvent(pFnRegisterServer,NULL,&RegisterServer_Parms,NULL);
}

struct Engine_SetGameType_Parms
{
	struct FString                                     MapName;                                          		// 0x000000 (0x000C)              
	struct FString                                     Options;                                          		// 0x00000C (0x000C)              
	struct FString                                     Portal;                                           		// 0x000018 (0x000C)              
	class UClass*                                      ReturnValue;                                      		// 0x000024 (0x0004)              
};

class UClass* AGameInfo::SetGameType(struct FString MapName,struct FString Options,struct FString Portal)
{
	static UFieldFunc* pFnSetGameType = NULL;
	if(!pFnSetGameType)
		pFnSetGameType = UObject::FindFunction("Function Engine.GameInfo.SetGameType");

	Engine_SetGameType_Parms SetGameType_Parms;
	memcpy(&SetGameType_Parms.MapName,&MapName,0xC);
	memcpy(&SetGameType_Parms.Options,&Options,0xC);
	memcpy(&SetGameType_Parms.Portal,&Portal,0xC);
	ProcessEvent(pFnSetGameType,NULL,&SetGameType_Parms,NULL);
	return SetGameType_Parms.ReturnValue;
}

struct Engine_WriteOnlineStats_Parms
{
};

void AGameInfo::WriteOnlineStats()
{
	static UFieldFunc* pFnWriteOnlineStats = NULL;
	if(!pFnWriteOnlineStats)
		pFnWriteOnlineStats = UObject::FindFunction("Function Engine.GameInfo.WriteOnlineStats");

	Engine_WriteOnlineStats_Parms WriteOnlineStats_Parms;
	ProcessEvent(pFnWriteOnlineStats,NULL,&WriteOnlineStats_Parms,NULL);
}

struct Engine_NotifyPendingConnectionLost_Parms
{
};

void AGameInfo::NotifyPendingConnectionLost()
{
	static UFieldFunc* pFnNotifyPendingConnectionLost = NULL;
	if(!pFnNotifyPendingConnectionLost)
		pFnNotifyPendingConnectionLost = UObject::FindFunction("Function Engine.GameInfo.NotifyPendingConnectionLost");

	Engine_NotifyPendingConnectionLost_Parms NotifyPendingConnectionLost_Parms;
	ProcessEvent(pFnNotifyPendingConnectionLost,NULL,&NotifyPendingConnectionLost_Parms,NULL);
}

struct Engine_GetDefaultPlayerClass_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	class UClass*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UClass* AGameInfo::GetDefaultPlayerClass(class AController* C)
{
	static UFieldFunc* pFnGetDefaultPlayerClass = NULL;
	if(!pFnGetDefaultPlayerClass)
		pFnGetDefaultPlayerClass = UObject::FindFunction("Function Engine.GameInfo.GetDefaultPlayerClass");

	Engine_GetDefaultPlayerClass_Parms GetDefaultPlayerClass_Parms;
	GetDefaultPlayerClass_Parms.C = C;
	ProcessEvent(pFnGetDefaultPlayerClass,NULL,&GetDefaultPlayerClass_Parms,NULL);
	return GetDefaultPlayerClass_Parms.ReturnValue;
}

struct Engine_MatineeCancelled_Parms
{
};

void AGameInfo::MatineeCancelled()
{
	static UFieldFunc* pFnMatineeCancelled = NULL;
	if(!pFnMatineeCancelled)
		pFnMatineeCancelled = UObject::FindFunction("Function Engine.GameInfo.MatineeCancelled");

	Engine_MatineeCancelled_Parms MatineeCancelled_Parms;
	ProcessEvent(pFnMatineeCancelled,NULL,&MatineeCancelled_Parms,NULL);
}

struct Engine_OnServerCreateComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void AGameInfo::OnServerCreateComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnServerCreateComplete = NULL;
	if(!pFnOnServerCreateComplete)
		pFnOnServerCreateComplete = UObject::FindFunction("Function Engine.GameInfo.OnServerCreateComplete");

	Engine_OnServerCreateComplete_Parms OnServerCreateComplete_Parms;
	memcpy(&OnServerCreateComplete_Parms.SessionName,&SessionName,0x8);
	OnServerCreateComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnServerCreateComplete,NULL,&OnServerCreateComplete_Parms,NULL);
}

struct Engine_GetKeyValue_Parms
{
	struct FString                                     Pair;                                             		// 0x000000 (0x000C)              
	struct FString                                     Key;                                              		// 0x00000C (0x000C)              
	struct FString                                     Value;                                            		// 0x000018 (0x000C)              
};

void AGameInfo::GetKeyValue(struct FString Pair,struct FString* Key,struct FString* Value)
{
	static UFieldFunc* pFnGetKeyValue = NULL;
	if(!pFnGetKeyValue)
		pFnGetKeyValue = UObject::FindFunction("Function Engine.GameInfo.GetKeyValue");

	Engine_GetKeyValue_Parms GetKeyValue_Parms;
	memcpy(&GetKeyValue_Parms.Pair,&Pair,0xC);
	ProcessEvent(pFnGetKeyValue,NULL,&GetKeyValue_Parms,NULL);
	if(Key)
		memcpy(Key,&GetKeyValue_Parms.Key,0xC);
	if(Value)
		memcpy(Value,&GetKeyValue_Parms.Value,0xC);
}

struct Engine_ProcessClientDataWriteCompletion_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	//int                                                FoundIndex;                                       		// 0x000004 (0x0004)              
};

void AGameInfo::ProcessClientDataWriteCompletion(class APlayerController* PC)
{
	static UFieldFunc* pFnProcessClientDataWriteCompletion = NULL;
	if(!pFnProcessClientDataWriteCompletion)
		pFnProcessClientDataWriteCompletion = UObject::FindFunction("Function Engine.GameInfo.ProcessClientDataWriteCompletion");

	Engine_ProcessClientDataWriteCompletion_Parms ProcessClientDataWriteCompletion_Parms;
	ProcessClientDataWriteCompletion_Parms.PC = PC;
	ProcessEvent(pFnProcessClientDataWriteCompletion,NULL,&ProcessClientDataWriteCompletion_Parms,NULL);
}

struct Engine_UpdateGameplayMuteList_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AGameInfo::UpdateGameplayMuteList(class APlayerController* PC)
{
	static UFieldFunc* pFnUpdateGameplayMuteList = NULL;
	if(!pFnUpdateGameplayMuteList)
		pFnUpdateGameplayMuteList = UObject::FindFunction("Function Engine.GameInfo.UpdateGameplayMuteList");

	Engine_UpdateGameplayMuteList_Parms UpdateGameplayMuteList_Parms;
	UpdateGameplayMuteList_Parms.PC = PC;
	ProcessEvent(pFnUpdateGameplayMuteList,NULL,&UpdateGameplayMuteList_Parms,NULL);
}

struct Engine_StartArbitrationRegistration_Parms
{
};

void AGameInfo::StartArbitrationRegistration()
{
	static UFieldFunc* pFnStartArbitrationRegistration = NULL;
	if(!pFnStartArbitrationRegistration)
		pFnStartArbitrationRegistration = UObject::FindFunction("Function Engine.GameInfo.StartArbitrationRegistration");

	Engine_StartArbitrationRegistration_Parms StartArbitrationRegistration_Parms;
	ProcessEvent(pFnStartArbitrationRegistration,NULL,&StartArbitrationRegistration_Parms,NULL);
}

struct Engine_GetNumPlayers_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int AGameInfo::GetNumPlayers()
{
	static UFieldFunc* pFnGetNumPlayers = NULL;
	if(!pFnGetNumPlayers)
		pFnGetNumPlayers = UObject::FindFunction("Function Engine.GameInfo.GetNumPlayers");

	Engine_GetNumPlayers_Parms GetNumPlayers_Parms;
	ProcessEvent(pFnGetNumPlayers,NULL,&GetNumPlayers_Parms,NULL);
	return GetNumPlayers_Parms.ReturnValue;
}

struct Engine_ProcessClientRegistrationCompletion_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void AGameInfo::ProcessClientRegistrationCompletion(class APlayerController* PC,bool bWasSuccessful)
{
	static UFieldFunc* pFnProcessClientRegistrationCompletion = NULL;
	if(!pFnProcessClientRegistrationCompletion)
		pFnProcessClientRegistrationCompletion = UObject::FindFunction("Function Engine.GameInfo.ProcessClientRegistrationCompletion");

	Engine_ProcessClientRegistrationCompletion_Parms ProcessClientRegistrationCompletion_Parms;
	ProcessClientRegistrationCompletion_Parms.PC = PC;
	ProcessClientRegistrationCompletion_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnProcessClientRegistrationCompletion,NULL,&ProcessClientRegistrationCompletion_Parms,NULL);
}

struct Engine_StartAutomatedMapTestTimer_Parms
{
};

void AGameInfo::StartAutomatedMapTestTimer()
{
	static UFieldFunc* pFnStartAutomatedMapTestTimer = NULL;
	if(!pFnStartAutomatedMapTestTimer)
		pFnStartAutomatedMapTestTimer = UObject::FindFunction("Function Engine.GameInfo.StartAutomatedMapTestTimer");

	Engine_StartAutomatedMapTestTimer_Parms StartAutomatedMapTestTimer_Parms;
	ProcessEvent(pFnStartAutomatedMapTestTimer,NULL,&StartAutomatedMapTestTimer_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AGameInfo::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.GameInfo.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_GetIntOption_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     ParseString;                                      		// 0x00000C (0x000C)              
	int                                                CurrentValue;                                     		// 0x000018 (0x0004)              
	int                                                ReturnValue;                                      		// 0x00001C (0x0004)              
	//struct FString                                     InOpt;                                            		// 0x000020 (0x000C)              
};

int AGameInfo::GetIntOption(struct FString Options,struct FString ParseString,int CurrentValue)
{
	static UFieldFunc* pFnGetIntOption = NULL;
	if(!pFnGetIntOption)
		pFnGetIntOption = UObject::FindFunction("Function Engine.GameInfo.GetIntOption");

	Engine_GetIntOption_Parms GetIntOption_Parms;
	memcpy(&GetIntOption_Parms.Options,&Options,0xC);
	memcpy(&GetIntOption_Parms.ParseString,&ParseString,0xC);
	GetIntOption_Parms.CurrentValue = CurrentValue;
	ProcessEvent(pFnGetIntOption,NULL,&GetIntOption_Parms,NULL);
	return GetIntOption_Parms.ReturnValue;
}

struct Engine_OnStartOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x00000C (0x0004)              
	//struct FString                                     StatGuid;                                         		// 0x000010 (0x000C)              
};

void AGameInfo::OnStartOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnStartOnlineGameComplete = NULL;
	if(!pFnOnStartOnlineGameComplete)
		pFnOnStartOnlineGameComplete = UObject::FindFunction("Function Engine.GameInfo.OnStartOnlineGameComplete");

	Engine_OnStartOnlineGameComplete_Parms OnStartOnlineGameComplete_Parms;
	memcpy(&OnStartOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnStartOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnStartOnlineGameComplete,NULL,&OnStartOnlineGameComplete_Parms,NULL);
}

struct Engine_GetServerPort_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
	//struct FString                                     S;                                                		// 0x000004 (0x000C)              
	//int                                                I;                                                		// 0x000010 (0x0004)              
};

int AGameInfo::GetServerPort()
{
	static UFieldFunc* pFnGetServerPort = NULL;
	if(!pFnGetServerPort)
		pFnGetServerPort = UObject::FindFunction("Function Engine.GameInfo.GetServerPort");

	Engine_GetServerPort_Parms GetServerPort_Parms;
	ProcessEvent(pFnGetServerPort,NULL,&GetServerPort_Parms,NULL);
	return GetServerPort_Parms.ReturnValue;
}

struct Engine_GetNetworkNumber_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AGameInfo::GetNetworkNumber()
{
	static UFieldFunc* pFnGetNetworkNumber = NULL;
	if(!pFnGetNetworkNumber)
		pFnGetNetworkNumber = UObject::FindFunction("Function Engine.GameInfo.GetNetworkNumber");

	Engine_GetNetworkNumber_Parms GetNetworkNumber_Parms;
	pFnGetNetworkNumber->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNetworkNumber,NULL,&GetNetworkNumber_Parms,NULL);
	pFnGetNetworkNumber->FunctionFlags |= 0x400;
	return GetNetworkNumber_Parms.ReturnValue;
}

struct Engine_ParseOption_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     InKey;                                            		// 0x00000C (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x000018 (0x000C)              
	//struct FString                                     Pair;                                             		// 0x000024 (0x000C)              
	//struct FString                                     Key;                                              		// 0x000030 (0x000C)              
	//struct FString                                     Value;                                            		// 0x00003C (0x000C)              
};

struct FString AGameInfo::ParseOption(struct FString Options,struct FString InKey)
{
	static UFieldFunc* pFnParseOption = NULL;
	if(!pFnParseOption)
		pFnParseOption = UObject::FindFunction("Function Engine.GameInfo.ParseOption");

	Engine_ParseOption_Parms ParseOption_Parms;
	memcpy(&ParseOption_Parms.Options,&Options,0xC);
	memcpy(&ParseOption_Parms.InKey,&InKey,0xC);
	ProcessEvent(pFnParseOption,NULL,&ParseOption_Parms,NULL);
	return ParseOption_Parms.ReturnValue;
}

struct Engine_AcceptInventory_Parms
{
	class APawn*                                       PlayerPawn;                                       		// 0x000000 (0x0004)              
};

void AGameInfo::AcceptInventory(class APawn* PlayerPawn)
{
	static UFieldFunc* pFnAcceptInventory = NULL;
	if(!pFnAcceptInventory)
		pFnAcceptInventory = UObject::FindFunction("Function Engine.GameInfo.AcceptInventory");

	Engine_AcceptInventory_Parms AcceptInventory_Parms;
	AcceptInventory_Parms.PlayerPawn = PlayerPawn;
	ProcessEvent(pFnAcceptInventory,NULL,&AcceptInventory_Parms,NULL);
}

struct Engine_CheckEndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x000000 (0x0004)              
	struct FString                                     Reason;                                           		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//class AController*                                 P;                                                		// 0x000014 (0x0004)              
};

bool AGameInfo::CheckEndGame(class APlayerReplicationInfo* Winner,struct FString Reason)
{
	static UFieldFunc* pFnCheckEndGame = NULL;
	if(!pFnCheckEndGame)
		pFnCheckEndGame = UObject::FindFunction("Function Engine.GameInfo.CheckEndGame");

	Engine_CheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy(&CheckEndGame_Parms.Reason,&Reason,0xC);
	ProcessEvent(pFnCheckEndGame,NULL,&CheckEndGame_Parms,NULL);
	return CheckEndGame_Parms.ReturnValue;
}

struct Engine_FindPlayerStart_Parms
{
	class AController*                                 Player;                                           		// 0x000000 (0x0004)              
	unsigned char                                      InTeam;                                           		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	struct FString                                     IncomingName;                                     		// 0x000008 (0x000C)              
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000014 (0x0004)              
	//class ANavigationPoint*                            N;                                                		// 0x000018 (0x0004)              
	//class ANavigationPoint*                            BestStart;                                        		// 0x00001C (0x0004)              
	//class ATeleporter*                                 Tel;                                              		// 0x000020 (0x0004)              
};

class ANavigationPoint* AGameInfo::FindPlayerStart(class AController* Player,unsigned char InTeam,struct FString IncomingName)
{
	static UFieldFunc* pFnFindPlayerStart = NULL;
	if(!pFnFindPlayerStart)
		pFnFindPlayerStart = UObject::FindFunction("Function Engine.GameInfo.FindPlayerStart");

	Engine_FindPlayerStart_Parms FindPlayerStart_Parms;
	FindPlayerStart_Parms.Player = Player;
	FindPlayerStart_Parms.InTeam = InTeam;
	memcpy(&FindPlayerStart_Parms.IncomingName,&IncomingName,0xC);
	ProcessEvent(pFnFindPlayerStart,NULL,&FindPlayerStart_Parms,NULL);
	return FindPlayerStart_Parms.ReturnValue;
}

struct Engine_RequiresPassword_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameInfo::RequiresPassword()
{
	static UFieldFunc* pFnRequiresPassword = NULL;
	if(!pFnRequiresPassword)
		pFnRequiresPassword = UObject::FindFunction("Function Engine.GameInfo.RequiresPassword");

	Engine_RequiresPassword_Parms RequiresPassword_Parms;
	ProcessEvent(pFnRequiresPassword,NULL,&RequiresPassword_Parms,NULL);
	return RequiresPassword_Parms.ReturnValue;
}

struct Engine_CheckModifiedEndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x000000 (0x0004)              
	struct FString                                     Reason;                                           		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool AGameInfo::CheckModifiedEndGame(class APlayerReplicationInfo* Winner,struct FString Reason)
{
	static UFieldFunc* pFnCheckModifiedEndGame = NULL;
	if(!pFnCheckModifiedEndGame)
		pFnCheckModifiedEndGame = UObject::FindFunction("Function Engine.GameInfo.CheckModifiedEndGame");

	Engine_CheckModifiedEndGame_Parms CheckModifiedEndGame_Parms;
	CheckModifiedEndGame_Parms.Winner = Winner;
	memcpy(&CheckModifiedEndGame_Parms.Reason,&Reason,0xC);
	ProcessEvent(pFnCheckModifiedEndGame,NULL,&CheckModifiedEndGame_Parms,NULL);
	return CheckModifiedEndGame_Parms.ReturnValue;
}

struct Engine_ShowSurveyForAllClients_Parms
{
	struct FString                                     QuestionId;                                       		// 0x000000 (0x000C)              
	struct FString                                     Context;                                          		// 0x00000C (0x000C)              
	//class APlayerController*                           PC;                                               		// 0x000018 (0x0004)              
};

void AGameInfo::ShowSurveyForAllClients(struct FString QuestionId,struct FString Context)
{
	static UFieldFunc* pFnShowSurveyForAllClients = NULL;
	if(!pFnShowSurveyForAllClients)
		pFnShowSurveyForAllClients = UObject::FindFunction("Function Engine.GameInfo.ShowSurveyForAllClients");

	Engine_ShowSurveyForAllClients_Parms ShowSurveyForAllClients_Parms;
	memcpy(&ShowSurveyForAllClients_Parms.QuestionId,&QuestionId,0xC);
	memcpy(&ShowSurveyForAllClients_Parms.Context,&Context,0xC);
	ProcessEvent(pFnShowSurveyForAllClients,NULL,&ShowSurveyForAllClients_Parms,NULL);
}

struct Engine_StartMatch_Parms
{
	//class AActor*                                      A;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::StartMatch()
{
	static UFieldFunc* pFnStartMatch = NULL;
	if(!pFnStartMatch)
		pFnStartMatch = UObject::FindFunction("Function Engine.GameInfo.StartMatch");

	Engine_StartMatch_Parms StartMatch_Parms;
	ProcessEvent(pFnStartMatch,NULL,&StartMatch_Parms,NULL);
}

struct Engine_ClearPause_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
	//struct FScriptDelegate                             CanUnpauseCriteriaMet;                            		// 0x000004 (0x000C)              
};

void AGameInfo::ClearPause()
{
	static UFieldFunc* pFnClearPause = NULL;
	if(!pFnClearPause)
		pFnClearPause = UObject::FindFunction("Function Engine.GameInfo.ClearPause");

	Engine_ClearPause_Parms ClearPause_Parms;
	ProcessEvent(pFnClearPause,NULL,&ClearPause_Parms,NULL);
}

struct Engine_ProcessServerLogin_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameInfo::ProcessServerLogin()
{
	static UFieldFunc* pFnProcessServerLogin = NULL;
	if(!pFnProcessServerLogin)
		pFnProcessServerLogin = UObject::FindFunction("Function Engine.GameInfo.ProcessServerLogin");

	Engine_ProcessServerLogin_Parms ProcessServerLogin_Parms;
	ProcessEvent(pFnProcessServerLogin,NULL,&ProcessServerLogin_Parms,NULL);
	return ProcessServerLogin_Parms.ReturnValue;
}

struct Engine_BroadcastLocalizedTeam_Parms
{
	int                                                TeamIndex;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Sender;                                           		// 0x000004 (0x0004)              
	class UClass*                                      Message;                                          		// 0x000008 (0x0004)              
	int                                                Switch;                                           		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000010 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000014 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000018 (0x0004)              
};

void AGameInfo::BroadcastLocalizedTeam(int TeamIndex,class AActor* Sender,class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnBroadcastLocalizedTeam = NULL;
	if(!pFnBroadcastLocalizedTeam)
		pFnBroadcastLocalizedTeam = UObject::FindFunction("Function Engine.GameInfo.BroadcastLocalizedTeam");

	Engine_BroadcastLocalizedTeam_Parms BroadcastLocalizedTeam_Parms;
	BroadcastLocalizedTeam_Parms.TeamIndex = TeamIndex;
	BroadcastLocalizedTeam_Parms.Sender = Sender;
	BroadcastLocalizedTeam_Parms.Message = Message;
	BroadcastLocalizedTeam_Parms.Switch = Switch;
	BroadcastLocalizedTeam_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalizedTeam_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalizedTeam_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnBroadcastLocalizedTeam,NULL,&BroadcastLocalizedTeam_Parms,NULL);
}

struct Engine_RemoveMutator_Parms
{
	class AMutator*                                    MutatorToRemove;                                  		// 0x000000 (0x0004)              
	//class AMutator*                                    M;                                                		// 0x000004 (0x0004)              
};

void AGameInfo::RemoveMutator(class AMutator* MutatorToRemove)
{
	static UFieldFunc* pFnRemoveMutator = NULL;
	if(!pFnRemoveMutator)
		pFnRemoveMutator = UObject::FindFunction("Function Engine.GameInfo.RemoveMutator");

	Engine_RemoveMutator_Parms RemoveMutator_Parms;
	RemoveMutator_Parms.MutatorToRemove = MutatorToRemove;
	ProcessEvent(pFnRemoveMutator,NULL,&RemoveMutator_Parms,NULL);
}

struct Engine_KickBan_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void AGameInfo::KickBan(struct FString S)
{
	static UFieldFunc* pFnKickBan = NULL;
	if(!pFnKickBan)
		pFnKickBan = UObject::FindFunction("Function Engine.GameInfo.KickBan");

	Engine_KickBan_Parms KickBan_Parms;
	memcpy(&KickBan_Parms.S,&S,0xC);
	ProcessEvent(pFnKickBan,NULL,&KickBan_Parms,NULL);
}

struct Engine_FindInactivePRI_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//struct FString                                     NewNetworkAddress;                                		// 0x000008 (0x000C)              
	//struct FString                                     NewName;                                          		// 0x000014 (0x000C)              
	//int                                                I;                                                		// 0x000020 (0x0004)              
	//class APlayerReplicationInfo*                      OldPRI;                                           		// 0x000024 (0x0004)              
	//unsigned long                                      bIsConsole : 1;                                   		// 0x000028 (0x0004) [0x00000001] 
};

bool AGameInfo::FindInactivePRI(class APlayerController* PC)
{
	static UFieldFunc* pFnFindInactivePRI = NULL;
	if(!pFnFindInactivePRI)
		pFnFindInactivePRI = UObject::FindFunction("Function Engine.GameInfo.FindInactivePRI");

	Engine_FindInactivePRI_Parms FindInactivePRI_Parms;
	FindInactivePRI_Parms.PC = PC;
	ProcessEvent(pFnFindInactivePRI,NULL,&FindInactivePRI_Parms,NULL);
	return FindInactivePRI_Parms.ReturnValue;
}

struct Engine_Reset_Parms
{
};

void AGameInfo::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.GameInfo.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_ChangeName_Parms
{
	class AController*                                 Other;                                            		// 0x000000 (0x0004)              
	struct FString                                     S;                                                		// 0x000004 (0x000C)              
	unsigned long                                      bNameChange : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

void AGameInfo::ChangeName(class AController* Other,struct FString S,bool bNameChange)
{
	static UFieldFunc* pFnChangeName = NULL;
	if(!pFnChangeName)
		pFnChangeName = UObject::FindFunction("Function Engine.GameInfo.ChangeName");

	Engine_ChangeName_Parms ChangeName_Parms;
	ChangeName_Parms.Other = Other;
	memcpy(&ChangeName_Parms.S,&S,0xC);
	ChangeName_Parms.bNameChange = bNameChange;
	ProcessEvent(pFnChangeName,NULL,&ChangeName_Parms,NULL);
}

struct Engine_UpdateGameSettings_Parms
{
};

void AGameInfo::UpdateGameSettings()
{
	static UFieldFunc* pFnUpdateGameSettings = NULL;
	if(!pFnUpdateGameSettings)
		pFnUpdateGameSettings = UObject::FindFunction("Function Engine.GameInfo.UpdateGameSettings");

	Engine_UpdateGameSettings_Parms UpdateGameSettings_Parms;
	ProcessEvent(pFnUpdateGameSettings,NULL,&UpdateGameSettings_Parms,NULL);
}

struct Engine_ReplicateStreamingStatus_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AGameInfo::ReplicateStreamingStatus(class APlayerController* PC)
{
	static UFieldFunc* pFnReplicateStreamingStatus = NULL;
	if(!pFnReplicateStreamingStatus)
		pFnReplicateStreamingStatus = UObject::FindFunction("Function Engine.GameInfo.ReplicateStreamingStatus");

	Engine_ReplicateStreamingStatus_Parms ReplicateStreamingStatus_Parms;
	ReplicateStreamingStatus_Parms.PC = PC;
	pFnReplicateStreamingStatus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReplicateStreamingStatus,NULL,&ReplicateStreamingStatus_Parms,NULL);
	pFnReplicateStreamingStatus->FunctionFlags |= 0x400;
}

struct Engine_NotifyNavigationChanged_Parms
{
	class ANavigationPoint*                            N;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::NotifyNavigationChanged(class ANavigationPoint* N)
{
	static UFieldFunc* pFnNotifyNavigationChanged = NULL;
	if(!pFnNotifyNavigationChanged)
		pFnNotifyNavigationChanged = UObject::FindFunction("Function Engine.GameInfo.NotifyNavigationChanged");

	Engine_NotifyNavigationChanged_Parms NotifyNavigationChanged_Parms;
	NotifyNavigationChanged_Parms.N = N;
	ProcessEvent(pFnNotifyNavigationChanged,NULL,&NotifyNavigationChanged_Parms,NULL);
}

struct Engine_UpdateGameSettingsCounts_Parms
{
};

void AGameInfo::UpdateGameSettingsCounts()
{
	static UFieldFunc* pFnUpdateGameSettingsCounts = NULL;
	if(!pFnUpdateGameSettingsCounts)
		pFnUpdateGameSettingsCounts = UObject::FindFunction("Function Engine.GameInfo.UpdateGameSettingsCounts");

	Engine_UpdateGameSettingsCounts_Parms UpdateGameSettingsCounts_Parms;
	ProcessEvent(pFnUpdateGameSettingsCounts,NULL,&UpdateGameSettingsCounts_Parms,NULL);
}

struct Engine_CloseAutomatedMapTestTimer_Parms
{
};

void AGameInfo::CloseAutomatedMapTestTimer()
{
	static UFieldFunc* pFnCloseAutomatedMapTestTimer = NULL;
	if(!pFnCloseAutomatedMapTestTimer)
		pFnCloseAutomatedMapTestTimer = UObject::FindFunction("Function Engine.GameInfo.CloseAutomatedMapTestTimer");

	Engine_CloseAutomatedMapTestTimer_Parms CloseAutomatedMapTestTimer_Parms;
	ProcessEvent(pFnCloseAutomatedMapTestTimer,NULL,&CloseAutomatedMapTestTimer_Parms,NULL);
}

struct Engine_GetTravelType_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameInfo::GetTravelType()
{
	static UFieldFunc* pFnGetTravelType = NULL;
	if(!pFnGetTravelType)
		pFnGetTravelType = UObject::FindFunction("Function Engine.GameInfo.GetTravelType");

	Engine_GetTravelType_Parms GetTravelType_Parms;
	ProcessEvent(pFnGetTravelType,NULL,&GetTravelType_Parms,NULL);
	return GetTravelType_Parms.ReturnValue;
}

struct Engine_PreCommitMapChange_Parms
{
	struct FString                                     PreviousMapName;                                  		// 0x000000 (0x000C)              
	struct FString                                     NextMapName;                                      		// 0x00000C (0x000C)              
};

void AGameInfo::PreCommitMapChange(struct FString PreviousMapName,struct FString NextMapName)
{
	static UFieldFunc* pFnPreCommitMapChange = NULL;
	if(!pFnPreCommitMapChange)
		pFnPreCommitMapChange = UObject::FindFunction("Function Engine.GameInfo.PreCommitMapChange");

	Engine_PreCommitMapChange_Parms PreCommitMapChange_Parms;
	memcpy(&PreCommitMapChange_Parms.PreviousMapName,&PreviousMapName,0xC);
	memcpy(&PreCommitMapChange_Parms.NextMapName,&NextMapName,0xC);
	ProcessEvent(pFnPreCommitMapChange,NULL,&PreCommitMapChange_Parms,NULL);
}

struct Engine_OnLoginChange_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
};

void AGameInfo::OnLoginChange(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChange = NULL;
	if(!pFnOnLoginChange)
		pFnOnLoginChange = UObject::FindFunction("Function Engine.GameInfo.OnLoginChange");

	Engine_OnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChange,NULL,&OnLoginChange_Parms,NULL);
}

struct Engine_Killed_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 KilledPlayer;                                     		// 0x000004 (0x0004)              
	class APawn*                                       KilledPawn;                                       		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	int                                                nWeaponType;                                      		// 0x000010 (0x0004)              
};

void AGameInfo::Killed(class AController* Killer,class AController* KilledPlayer,class APawn* KilledPawn,class UClass* DamageType,int nWeaponType)
{
	static UFieldFunc* pFnKilled = NULL;
	if(!pFnKilled)
		pFnKilled = UObject::FindFunction("Function Engine.GameInfo.Killed");

	Engine_Killed_Parms Killed_Parms;
	Killed_Parms.Killer = Killer;
	Killed_Parms.KilledPlayer = KilledPlayer;
	Killed_Parms.KilledPawn = KilledPawn;
	Killed_Parms.DamageType = DamageType;
	Killed_Parms.nWeaponType = nWeaponType;
	pFnKilled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnKilled,NULL,&Killed_Parms,NULL);
	pFnKilled->FunctionFlags |= 0x400;
}

struct Engine_Logout_Parms
{
	class AController*                                 Exiting;                                          		// 0x000000 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
	//int                                                PCIndex;                                          		// 0x000008 (0x0004)              
};

void AGameInfo::Logout(class AController* Exiting)
{
	static UFieldFunc* pFnLogout = NULL;
	if(!pFnLogout)
		pFnLogout = UObject::FindFunction("Function Engine.GameInfo.Logout");

	Engine_Logout_Parms Logout_Parms;
	Logout_Parms.Exiting = Exiting;
	ProcessEvent(pFnLogout,NULL,&Logout_Parms,NULL);
}

struct Engine_ProcessClientTravel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	struct FGuid                                       NextMapGuid;                                      		// 0x00000C (0x0010)              
	unsigned long                                      bSeamless : 1;                                    		// 0x00001C (0x0004) [0x00000001] 
	unsigned long                                      bAbsolute : 1;                                    		// 0x000020 (0x0004) [0x00000001] 
	class APlayerController*                           ReturnValue;                                      		// 0x000024 (0x0004)              
	//class APlayerController*                           P;                                                		// 0x000028 (0x0004)              
	//class APlayerController*                           LP;                                               		// 0x00002C (0x0004)              
};

class APlayerController* AGameInfo::ProcessClientTravel(struct FString* URL,struct FGuid NextMapGuid,bool bSeamless,bool bAbsolute)
{
	static UFieldFunc* pFnProcessClientTravel = NULL;
	if(!pFnProcessClientTravel)
		pFnProcessClientTravel = UObject::FindFunction("Function Engine.GameInfo.ProcessClientTravel");

	Engine_ProcessClientTravel_Parms ProcessClientTravel_Parms;
	memcpy(&ProcessClientTravel_Parms.NextMapGuid,&NextMapGuid,0x10);
	ProcessClientTravel_Parms.bSeamless = bSeamless;
	ProcessClientTravel_Parms.bAbsolute = bAbsolute;
	ProcessEvent(pFnProcessClientTravel,NULL,&ProcessClientTravel_Parms,NULL);
	if(URL)
		memcpy(URL,&ProcessClientTravel_Parms.URL,0xC);
	return ProcessClientTravel_Parms.ReturnValue;
}

struct Engine_BroadcastDeathMessage_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 Other;                                            		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
};

void AGameInfo::BroadcastDeathMessage(class AController* Killer,class AController* Other,class UClass* DamageType)
{
	static UFieldFunc* pFnBroadcastDeathMessage = NULL;
	if(!pFnBroadcastDeathMessage)
		pFnBroadcastDeathMessage = UObject::FindFunction("Function Engine.GameInfo.BroadcastDeathMessage");

	Engine_BroadcastDeathMessage_Parms BroadcastDeathMessage_Parms;
	BroadcastDeathMessage_Parms.Killer = Killer;
	BroadcastDeathMessage_Parms.Other = Other;
	BroadcastDeathMessage_Parms.DamageType = DamageType;
	ProcessEvent(pFnBroadcastDeathMessage,NULL,&BroadcastDeathMessage_Parms,NULL);
}

struct Engine_KillBots_Parms
{
};

void AGameInfo::KillBots()
{
	static UFieldFunc* pFnKillBots = NULL;
	if(!pFnKillBots)
		pFnKillBots = UObject::FindFunction("Function Engine.GameInfo.KillBots");

	Engine_KillBots_Parms KillBots_Parms;
	ProcessEvent(pFnKillBots,NULL,&KillBots_Parms,NULL);
}

struct Engine_Kick_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void AGameInfo::Kick(struct FString S)
{
	static UFieldFunc* pFnKick = NULL;
	if(!pFnKick)
		pFnKick = UObject::FindFunction("Function Engine.GameInfo.Kick");

	Engine_Kick_Parms Kick_Parms;
	memcpy(&Kick_Parms.S,&S,0xC);
	ProcessEvent(pFnKick,NULL,&Kick_Parms,NULL);
}

struct Engine_RestartGame_Parms
{
	//struct FString                                     NextMap;                                          		// 0x000000 (0x000C)              
	//struct FString                                     TransitionMapCmdLine;                             		// 0x00000C (0x000C)              
	//struct FString                                     URLString;                                        		// 0x000018 (0x000C)              
	//int                                                URLMapLen;                                        		// 0x000024 (0x0004)              
	//int                                                MapNameLen;                                       		// 0x000028 (0x0004)              
};

void AGameInfo::RestartGame()
{
	static UFieldFunc* pFnRestartGame = NULL;
	if(!pFnRestartGame)
		pFnRestartGame = UObject::FindFunction("Function Engine.GameInfo.RestartGame");

	Engine_RestartGame_Parms RestartGame_Parms;
	ProcessEvent(pFnRestartGame,NULL,&RestartGame_Parms,NULL);
}

struct Engine_GetNextMap_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AGameInfo::GetNextMap()
{
	static UFieldFunc* pFnGetNextMap = NULL;
	if(!pFnGetNextMap)
		pFnGetNextMap = UObject::FindFunction("Function Engine.GameInfo.GetNextMap");

	Engine_GetNextMap_Parms GetNextMap_Parms;
	ProcessEvent(pFnGetNextMap,NULL,&GetNextMap_Parms,NULL);
	return GetNextMap_Parms.ReturnValue;
}

struct Engine_TellClientsToTravelToSession_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	class UClass*                                      SearchClass;                                      		// 0x000008 (0x0004)              
	unsigned char                                      PlatformSpecificInfo[0x50];                       		// 0x00000C (0x0050)              
	//class APlayerController*                           PC;                                               		// 0x00005C (0x0004)              
};

void AGameInfo::TellClientsToTravelToSession(struct FName SessionName,class UClass* SearchClass,unsigned char* PlatformSpecificInfo)
{
	static UFieldFunc* pFnTellClientsToTravelToSession = NULL;
	if(!pFnTellClientsToTravelToSession)
		pFnTellClientsToTravelToSession = UObject::FindFunction("Function Engine.GameInfo.TellClientsToTravelToSession");

	Engine_TellClientsToTravelToSession_Parms TellClientsToTravelToSession_Parms;
	memcpy(&TellClientsToTravelToSession_Parms.SessionName,&SessionName,0x8);
	TellClientsToTravelToSession_Parms.SearchClass = SearchClass;
	memcpy(&TellClientsToTravelToSession_Parms.PlatformSpecificInfo,&PlatformSpecificInfo,0x50);
	ProcessEvent(pFnTellClientsToTravelToSession,NULL,&TellClientsToTravelToSession_Parms,NULL);
}

struct Engine_WriteOnlinePlayerScores_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AGameInfo::WriteOnlinePlayerScores()
{
	static UFieldFunc* pFnWriteOnlinePlayerScores = NULL;
	if(!pFnWriteOnlinePlayerScores)
		pFnWriteOnlinePlayerScores = UObject::FindFunction("Function Engine.GameInfo.WriteOnlinePlayerScores");

	Engine_WriteOnlinePlayerScores_Parms WriteOnlinePlayerScores_Parms;
	ProcessEvent(pFnWriteOnlinePlayerScores,NULL,&WriteOnlinePlayerScores_Parms,NULL);
}

struct Engine_ParseMessageString_Parms
{
	class AController*                                 Who;                                              		// 0x000000 (0x0004)              
	struct FString                                     Message;                                          		// 0x000004 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x000010 (0x000C)              
};

struct FString AGameInfo::ParseMessageString(class AController* Who,struct FString Message)
{
	static UFieldFunc* pFnParseMessageString = NULL;
	if(!pFnParseMessageString)
		pFnParseMessageString = UObject::FindFunction("Function Engine.GameInfo.ParseMessageString");

	Engine_ParseMessageString_Parms ParseMessageString_Parms;
	ParseMessageString_Parms.Who = Who;
	memcpy(&ParseMessageString_Parms.Message,&Message,0xC);
	ProcessEvent(pFnParseMessageString,NULL,&ParseMessageString_Parms,NULL);
	return ParseMessageString_Parms.ReturnValue;
}

struct Engine_AddDefaultInventory_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::AddDefaultInventory(class APawn* P)
{
	static UFieldFunc* pFnAddDefaultInventory = NULL;
	if(!pFnAddDefaultInventory)
		pFnAddDefaultInventory = UObject::FindFunction("Function Engine.GameInfo.AddDefaultInventory");

	Engine_AddDefaultInventory_Parms AddDefaultInventory_Parms;
	AddDefaultInventory_Parms.P = P;
	ProcessEvent(pFnAddDefaultInventory,NULL,&AddDefaultInventory_Parms,NULL);
}

struct Engine_ParseKillMessage_Parms
{
	struct FString                                     KillerName;                                       		// 0x000000 (0x000C)              
	struct FString                                     VictimName;                                       		// 0x00000C (0x000C)              
	struct FString                                     DeathMessage;                                     		// 0x000018 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x000024 (0x000C)              
};

struct FString AGameInfo::ParseKillMessage(struct FString KillerName,struct FString VictimName,struct FString DeathMessage)
{
	static UFieldFunc* pFnParseKillMessage = NULL;
	if(!pFnParseKillMessage)
		pFnParseKillMessage = UObject::FindFunction("Function Engine.GameInfo.ParseKillMessage");

	Engine_ParseKillMessage_Parms ParseKillMessage_Parms;
	memcpy(&ParseKillMessage_Parms.KillerName,&KillerName,0xC);
	memcpy(&ParseKillMessage_Parms.VictimName,&VictimName,0xC);
	memcpy(&ParseKillMessage_Parms.DeathMessage,&DeathMessage,0xC);
	ProcessEvent(pFnParseKillMessage,NULL,&ParseKillMessage_Parms,NULL);
	return ParseKillMessage_Parms.ReturnValue;
}

struct Engine_SetGameSpeed_Parms
{
	float                                              T;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::SetGameSpeed(float T)
{
	static UFieldFunc* pFnSetGameSpeed = NULL;
	if(!pFnSetGameSpeed)
		pFnSetGameSpeed = UObject::FindFunction("Function Engine.GameInfo.SetGameSpeed");

	Engine_SetGameSpeed_Parms SetGameSpeed_Parms;
	SetGameSpeed_Parms.T = T;
	ProcessEvent(pFnSetGameSpeed,NULL,&SetGameSpeed_Parms,NULL);
}

struct Engine_InitGame_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     ErrorMessage;                                     		// 0x00000C (0x000C)              
	//struct FString                                     InOpt;                                            		// 0x000018 (0x000C)              
	//struct FString                                     LeftOpt;                                          		// 0x000024 (0x000C)              
	//int                                                pos;                                              		// 0x000030 (0x0004)              
	//class UClass*                                      ACClass;                                          		// 0x000034 (0x0004)              
};

void AGameInfo::InitGame(struct FString Options,struct FString* ErrorMessage)
{
	static UFieldFunc* pFnInitGame = NULL;
	if(!pFnInitGame)
		pFnInitGame = UObject::FindFunction("Function Engine.GameInfo.InitGame");

	Engine_InitGame_Parms InitGame_Parms;
	memcpy(&InitGame_Parms.Options,&Options,0xC);
	ProcessEvent(pFnInitGame,NULL,&InitGame_Parms,NULL);
	if(ErrorMessage)
		memcpy(ErrorMessage,&InitGame_Parms.ErrorMessage,0xC);
}

struct Engine_SwapPlayerControllers_Parms
{
	class APlayerController*                           OldPC;                                            		// 0x000000 (0x0004)              
	class APlayerController*                           NewPC;                                            		// 0x000004 (0x0004)              
};

void AGameInfo::SwapPlayerControllers(class APlayerController* OldPC,class APlayerController* NewPC)
{
	static UFieldFunc* pFnSwapPlayerControllers = NULL;
	if(!pFnSwapPlayerControllers)
		pFnSwapPlayerControllers = UObject::FindFunction("Function Engine.GameInfo.SwapPlayerControllers");

	Engine_SwapPlayerControllers_Parms SwapPlayerControllers_Parms;
	SwapPlayerControllers_Parms.OldPC = OldPC;
	SwapPlayerControllers_Parms.NewPC = NewPC;
	pFnSwapPlayerControllers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSwapPlayerControllers,NULL,&SwapPlayerControllers_Parms,NULL);
	pFnSwapPlayerControllers->FunctionFlags |= 0x400;
}

struct Engine_PreLogin_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     Address;                                          		// 0x00000C (0x000C)              
	struct FString                                     ErrorMessage;                                     		// 0x000018 (0x000C)              
	//unsigned long                                      bSpectator : 1;                                   		// 0x000024 (0x0004) [0x00000001] 
	//unsigned long                                      bPerfTesting : 1;                                 		// 0x000028 (0x0004) [0x00000001] 
};

void AGameInfo::PreLogin(struct FString Options,struct FString Address,struct FString* ErrorMessage)
{
	static UFieldFunc* pFnPreLogin = NULL;
	if(!pFnPreLogin)
		pFnPreLogin = UObject::FindFunction("Function Engine.GameInfo.PreLogin");

	Engine_PreLogin_Parms PreLogin_Parms;
	memcpy(&PreLogin_Parms.Options,&Options,0xC);
	memcpy(&PreLogin_Parms.Address,&Address,0xC);
	ProcessEvent(pFnPreLogin,NULL,&PreLogin_Parms,NULL);
	if(ErrorMessage)
		memcpy(ErrorMessage,&PreLogin_Parms.ErrorMessage,0xC);
}

struct Engine_CheckRelevance_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::CheckRelevance(class AActor* Other)
{
	static UFieldFunc* pFnCheckRelevance = NULL;
	if(!pFnCheckRelevance)
		pFnCheckRelevance = UObject::FindFunction("Function Engine.GameInfo.CheckRelevance");

	Engine_CheckRelevance_Parms CheckRelevance_Parms;
	CheckRelevance_Parms.Other = Other;
	ProcessEvent(pFnCheckRelevance,NULL,&CheckRelevance_Parms,NULL);
	return CheckRelevance_Parms.ReturnValue;
}

struct Engine_PostCommitMapChange_Parms
{
};

void AGameInfo::PostCommitMapChange()
{
	static UFieldFunc* pFnPostCommitMapChange = NULL;
	if(!pFnPostCommitMapChange)
		pFnPostCommitMapChange = UObject::FindFunction("Function Engine.GameInfo.PostCommitMapChange");

	Engine_PostCommitMapChange_Parms PostCommitMapChange_Parms;
	ProcessEvent(pFnPostCommitMapChange,NULL,&PostCommitMapChange_Parms,NULL);
}

struct Engine_MatchIsInProgress_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameInfo::MatchIsInProgress()
{
	static UFieldFunc* pFnMatchIsInProgress = NULL;
	if(!pFnMatchIsInProgress)
		pFnMatchIsInProgress = UObject::FindFunction("Function Engine.GameInfo.MatchIsInProgress");

	Engine_MatchIsInProgress_Parms MatchIsInProgress_Parms;
	ProcessEvent(pFnMatchIsInProgress,NULL,&MatchIsInProgress_Parms,NULL);
	return MatchIsInProgress_Parms.ReturnValue;
}

struct Engine_DiscardInventory_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	class AController*                                 Killer;                                           		// 0x000004 (0x0004)              
};

void AGameInfo::DiscardInventory(class APawn* Other,class AController* Killer)
{
	static UFieldFunc* pFnDiscardInventory = NULL;
	if(!pFnDiscardInventory)
		pFnDiscardInventory = UObject::FindFunction("Function Engine.GameInfo.DiscardInventory");

	Engine_DiscardInventory_Parms DiscardInventory_Parms;
	DiscardInventory_Parms.Other = Other;
	DiscardInventory_Parms.Killer = Killer;
	ProcessEvent(pFnDiscardInventory,NULL,&DiscardInventory_Parms,NULL);
}

struct Engine_ParseAutomatedTestingOptions_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	//struct FString                                     InOpt;                                            		// 0x00000C (0x000C)              
};

void AGameInfo::ParseAutomatedTestingOptions(struct FString Options)
{
	static UFieldFunc* pFnParseAutomatedTestingOptions = NULL;
	if(!pFnParseAutomatedTestingOptions)
		pFnParseAutomatedTestingOptions = UObject::FindFunction("Function Engine.GameInfo.ParseAutomatedTestingOptions");

	Engine_ParseAutomatedTestingOptions_Parms ParseAutomatedTestingOptions_Parms;
	memcpy(&ParseAutomatedTestingOptions_Parms.Options,&Options,0xC);
	ProcessEvent(pFnParseAutomatedTestingOptions,NULL,&ParseAutomatedTestingOptions_Parms,NULL);
}

struct Engine_GetCoverReplicator_Parms
{
	class ACoverReplicator*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class ACoverReplicator* AGameInfo::GetCoverReplicator()
{
	static UFieldFunc* pFnGetCoverReplicator = NULL;
	if(!pFnGetCoverReplicator)
		pFnGetCoverReplicator = UObject::FindFunction("Function Engine.GameInfo.GetCoverReplicator");

	Engine_GetCoverReplicator_Parms GetCoverReplicator_Parms;
	ProcessEvent(pFnGetCoverReplicator,NULL,&GetCoverReplicator_Parms,NULL);
	return GetCoverReplicator_Parms.ReturnValue;
}

struct Engine_ResetLevel_Parms
{
	//class AController*                                 C;                                                		// 0x000000 (0x0004)              
	//class AActor*                                      A;                                                		// 0x000004 (0x0004)              
	//class USequence*                                   GameSeq;                                          		// 0x000008 (0x0004)              
	//TArray<class USequenceObject*>                     AllSeqEvents;                                     		// 0x00000C (0x000C)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void AGameInfo::ResetLevel()
{
	static UFieldFunc* pFnResetLevel = NULL;
	if(!pFnResetLevel)
		pFnResetLevel = UObject::FindFunction("Function Engine.GameInfo.ResetLevel");

	Engine_ResetLevel_Parms ResetLevel_Parms;
	ProcessEvent(pFnResetLevel,NULL,&ResetLevel_Parms,NULL);
}

struct Engine_PreBeginPlay_Parms
{
};

void AGameInfo::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.GameInfo.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_Login_Parms
{
	struct FString                                     Portal;                                           		// 0x000000 (0x000C)              
	struct FString                                     Options;                                          		// 0x00000C (0x000C)              
	struct FString                                     ErrorMessage;                                     		// 0x000018 (0x000C)              
	class APlayerController*                           ReturnValue;                                      		// 0x000024 (0x0004)              
};

class APlayerController* AGameInfo::Login(struct FString Portal,struct FString Options,struct FString* ErrorMessage)
{
	static UFieldFunc* pFnLogin = NULL;
	if(!pFnLogin)
		pFnLogin = UObject::FindFunction("Function Engine.GameInfo.Login");

	Engine_Login_Parms Login_Parms;
	memcpy(&Login_Parms.Portal,&Portal,0xC);
	memcpy(&Login_Parms.Options,&Options,0xC);
	pFnLogin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogin,NULL,&Login_Parms,NULL);
	pFnLogin->FunctionFlags |= 0x400;
	if(ErrorMessage)
		memcpy(ErrorMessage,&Login_Parms.ErrorMessage,0xC);
	return Login_Parms.ReturnValue;
}

struct Engine_ServerWriteArbitrationEndGameData_Parms
{
};

void AGameInfo::ServerWriteArbitrationEndGameData()
{
	static UFieldFunc* pFnServerWriteArbitrationEndGameData = NULL;
	if(!pFnServerWriteArbitrationEndGameData)
		pFnServerWriteArbitrationEndGameData = UObject::FindFunction("Function Engine.GameInfo.ServerWriteArbitrationEndGameData");

	Engine_ServerWriteArbitrationEndGameData_Parms ServerWriteArbitrationEndGameData_Parms;
	ProcessEvent(pFnServerWriteArbitrationEndGameData,NULL,&ServerWriteArbitrationEndGameData_Parms,NULL);
}

struct Engine_CanSpectate_Parms
{
	class APlayerController*                           Viewer;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      ViewTarget;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AGameInfo::CanSpectate(class APlayerController* Viewer,class APlayerReplicationInfo* ViewTarget)
{
	static UFieldFunc* pFnCanSpectate = NULL;
	if(!pFnCanSpectate)
		pFnCanSpectate = UObject::FindFunction("Function Engine.GameInfo.CanSpectate");

	Engine_CanSpectate_Parms CanSpectate_Parms;
	CanSpectate_Parms.Viewer = Viewer;
	CanSpectate_Parms.ViewTarget = ViewTarget;
	ProcessEvent(pFnCanSpectate,NULL,&CanSpectate_Parms,NULL);
	return CanSpectate_Parms.ReturnValue;
}

struct Engine_StartHumans_Parms
{
	//class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::StartHumans()
{
	static UFieldFunc* pFnStartHumans = NULL;
	if(!pFnStartHumans)
		pFnStartHumans = UObject::FindFunction("Function Engine.GameInfo.StartHumans");

	Engine_StartHumans_Parms StartHumans_Parms;
	ProcessEvent(pFnStartHumans,NULL,&StartHumans_Parms,NULL);
}

struct Engine_AddInactivePRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//class APlayerReplicationInfo*                      NewPRI;                                           		// 0x00000C (0x0004)              
	//unsigned long                                      bIsConsole : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
};

void AGameInfo::AddInactivePRI(class APlayerReplicationInfo* PRI,class APlayerController* PC)
{
	static UFieldFunc* pFnAddInactivePRI = NULL;
	if(!pFnAddInactivePRI)
		pFnAddInactivePRI = UObject::FindFunction("Function Engine.GameInfo.AddInactivePRI");

	Engine_AddInactivePRI_Parms AddInactivePRI_Parms;
	AddInactivePRI_Parms.PRI = PRI;
	AddInactivePRI_Parms.PC = PC;
	ProcessEvent(pFnAddInactivePRI,NULL,&AddInactivePRI_Parms,NULL);
}

struct Engine_CheckScore_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::CheckScore(class APlayerReplicationInfo* Scorer)
{
	static UFieldFunc* pFnCheckScore = NULL;
	if(!pFnCheckScore)
		pFnCheckScore = UObject::FindFunction("Function Engine.GameInfo.CheckScore");

	Engine_CheckScore_Parms CheckScore_Parms;
	CheckScore_Parms.Scorer = Scorer;
	ProcessEvent(pFnCheckScore,NULL,&CheckScore_Parms,NULL);
	return CheckScore_Parms.ReturnValue;
}

struct Engine_AddObjectiveScore_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x000000 (0x0004)              
	int                                                Score;                                            		// 0x000004 (0x0004)              
};

void AGameInfo::AddObjectiveScore(class APlayerReplicationInfo* Scorer,int Score)
{
	static UFieldFunc* pFnAddObjectiveScore = NULL;
	if(!pFnAddObjectiveScore)
		pFnAddObjectiveScore = UObject::FindFunction("Function Engine.GameInfo.AddObjectiveScore");

	Engine_AddObjectiveScore_Parms AddObjectiveScore_Parms;
	AddObjectiveScore_Parms.Scorer = Scorer;
	AddObjectiveScore_Parms.Score = Score;
	ProcessEvent(pFnAddObjectiveScore,NULL,&AddObjectiveScore_Parms,NULL);
}

struct Engine_ChoosePlayerStart_Parms
{
	class AController*                                 Player;                                           		// 0x000000 (0x0004)              
	unsigned char                                      InTeam;                                           		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	class APlayerStart*                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//class APlayerStart*                                P;                                                		// 0x00000C (0x0004)              
	//class APlayerStart*                                BestStart;                                        		// 0x000010 (0x0004)              
	//float                                              BestRating;                                       		// 0x000014 (0x0004)              
	//float                                              NewRating;                                        		// 0x000018 (0x0004)              
	//unsigned char                                      Team;                                             		// 0x00001C (0x0001)              
};

class APlayerStart* AGameInfo::ChoosePlayerStart(class AController* Player,unsigned char InTeam)
{
	static UFieldFunc* pFnChoosePlayerStart = NULL;
	if(!pFnChoosePlayerStart)
		pFnChoosePlayerStart = UObject::FindFunction("Function Engine.GameInfo.ChoosePlayerStart");

	Engine_ChoosePlayerStart_Parms ChoosePlayerStart_Parms;
	ChoosePlayerStart_Parms.Player = Player;
	ChoosePlayerStart_Parms.InTeam = InTeam;
	ProcessEvent(pFnChoosePlayerStart,NULL,&ChoosePlayerStart_Parms,NULL);
	return ChoosePlayerStart_Parms.ReturnValue;
}

struct Engine_Timer_Parms
{
};

void AGameInfo::Timer()
{
	static UFieldFunc* pFnTimer = NULL;
	if(!pFnTimer)
		pFnTimer = UObject::FindFunction("Function Engine.GameInfo.Timer");

	Engine_Timer_Parms Timer_Parms;
	ProcessEvent(pFnTimer,NULL,&Timer_Parms,NULL);
}

struct Engine_CanUnpause_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameInfo::CanUnpause()
{
	static UFieldFunc* pFnCanUnpause = NULL;
	if(!pFnCanUnpause)
		pFnCanUnpause = UObject::FindFunction("Function Engine.GameInfo.CanUnpause");

	Engine_CanUnpause_Parms CanUnpause_Parms;
	ProcessEvent(pFnCanUnpause,NULL,&CanUnpause_Parms,NULL);
	return CanUnpause_Parms.ReturnValue;
}

struct Engine_PlayerCanRestartGame_Parms
{
	class APlayerController*                           aPlayer;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::PlayerCanRestartGame(class APlayerController* aPlayer)
{
	static UFieldFunc* pFnPlayerCanRestartGame = NULL;
	if(!pFnPlayerCanRestartGame)
		pFnPlayerCanRestartGame = UObject::FindFunction("Function Engine.GameInfo.PlayerCanRestartGame");

	Engine_PlayerCanRestartGame_Parms PlayerCanRestartGame_Parms;
	PlayerCanRestartGame_Parms.aPlayer = aPlayer;
	ProcessEvent(pFnPlayerCanRestartGame,NULL,&PlayerCanRestartGame_Parms,NULL);
	return PlayerCanRestartGame_Parms.ReturnValue;
}

struct Engine_BroadcastLocalized_Parms
{
	class AActor*                                      Sender;                                           		// 0x000000 (0x0004)              
	class UClass*                                      Message;                                          		// 0x000004 (0x0004)              
	int                                                Switch;                                           		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000010 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000014 (0x0004)              
};

void AGameInfo::BroadcastLocalized(class AActor* Sender,class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnBroadcastLocalized = NULL;
	if(!pFnBroadcastLocalized)
		pFnBroadcastLocalized = UObject::FindFunction("Function Engine.GameInfo.BroadcastLocalized");

	Engine_BroadcastLocalized_Parms BroadcastLocalized_Parms;
	BroadcastLocalized_Parms.Sender = Sender;
	BroadcastLocalized_Parms.Message = Message;
	BroadcastLocalized_Parms.Switch = Switch;
	BroadcastLocalized_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalized_Parms.RelatedPRI = RelatedPRI;
	BroadcastLocalized_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnBroadcastLocalized,NULL,&BroadcastLocalized_Parms,NULL);
}

struct Engine_IncrementNumberOfMatchesPlayed_Parms
{
};

void AGameInfo::IncrementNumberOfMatchesPlayed()
{
	static UFieldFunc* pFnIncrementNumberOfMatchesPlayed = NULL;
	if(!pFnIncrementNumberOfMatchesPlayed)
		pFnIncrementNumberOfMatchesPlayed = UObject::FindFunction("Function Engine.GameInfo.IncrementNumberOfMatchesPlayed");

	Engine_IncrementNumberOfMatchesPlayed_Parms IncrementNumberOfMatchesPlayed_Parms;
	ProcessEvent(pFnIncrementNumberOfMatchesPlayed,NULL,&IncrementNumberOfMatchesPlayed_Parms,NULL);
}

struct Engine_InitGameReplicationInfo_Parms
{
};

void AGameInfo::InitGameReplicationInfo()
{
	static UFieldFunc* pFnInitGameReplicationInfo = NULL;
	if(!pFnInitGameReplicationInfo)
		pFnInitGameReplicationInfo = UObject::FindFunction("Function Engine.GameInfo.InitGameReplicationInfo");

	Engine_InitGameReplicationInfo_Parms InitGameReplicationInfo_Parms;
	ProcessEvent(pFnInitGameReplicationInfo,NULL,&InitGameReplicationInfo_Parms,NULL);
}

struct Engine_PreExit_Parms
{
};

void AGameInfo::PreExit()
{
	static UFieldFunc* pFnPreExit = NULL;
	if(!pFnPreExit)
		pFnPreExit = UObject::FindFunction("Function Engine.GameInfo.PreExit");

	Engine_PreExit_Parms PreExit_Parms;
	ProcessEvent(pFnPreExit,NULL,&PreExit_Parms,NULL);
}

struct Engine_ReduceDamage_Parms
{
	int                                                Damage;                                           		// 0x000000 (0x0004)              
	class APawn*                                       injured;                                          		// 0x000004 (0x0004)              
	class AController*                                 InstigatedBy;                                     		// 0x000008 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x00000C (0x000C)              
	FVector3                                           Momentum;                                         		// 0x000018 (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000024 (0x0004)              
	//int                                                OriginalDamage;                                   		// 0x000028 (0x0004)              
};

void AGameInfo::ReduceDamage(int* Damage,class APawn* injured,class AController* InstigatedBy,FVector3 HitLocation,FVector3* Momentum,class UClass* DamageType)
{
	static UFieldFunc* pFnReduceDamage = NULL;
	if(!pFnReduceDamage)
		pFnReduceDamage = UObject::FindFunction("Function Engine.GameInfo.ReduceDamage");

	Engine_ReduceDamage_Parms ReduceDamage_Parms;
	ReduceDamage_Parms.injured = injured;
	ReduceDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy(&ReduceDamage_Parms.HitLocation,&HitLocation,0xC);
	ReduceDamage_Parms.DamageType = DamageType;
	ProcessEvent(pFnReduceDamage,NULL,&ReduceDamage_Parms,NULL);
	if(Damage)
		*Damage = ReduceDamage_Parms.Damage;
	if(Momentum)
		memcpy(Momentum,&ReduceDamage_Parms.Momentum,0xC);
}

struct Engine_ChangeTeam_Parms
{
	class AController*                                 Other;                                            		// 0x000000 (0x0004)              
	int                                                N;                                                		// 0x000004 (0x0004)              
	unsigned long                                      bNewTeam : 1;                                     		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AGameInfo::ChangeTeam(class AController* Other,int N,bool bNewTeam)
{
	static UFieldFunc* pFnChangeTeam = NULL;
	if(!pFnChangeTeam)
		pFnChangeTeam = UObject::FindFunction("Function Engine.GameInfo.ChangeTeam");

	Engine_ChangeTeam_Parms ChangeTeam_Parms;
	ChangeTeam_Parms.Other = Other;
	ChangeTeam_Parms.N = N;
	ChangeTeam_Parms.bNewTeam = bNewTeam;
	ProcessEvent(pFnChangeTeam,NULL,&ChangeTeam_Parms,NULL);
	return ChangeTeam_Parms.ReturnValue;
}

struct Engine_CanLeaveVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AGameInfo::CanLeaveVehicle(class AVehicle* V,class APawn* P)
{
	static UFieldFunc* pFnCanLeaveVehicle = NULL;
	if(!pFnCanLeaveVehicle)
		pFnCanLeaveVehicle = UObject::FindFunction("Function Engine.GameInfo.CanLeaveVehicle");

	Engine_CanLeaveVehicle_Parms CanLeaveVehicle_Parms;
	CanLeaveVehicle_Parms.V = V;
	CanLeaveVehicle_Parms.P = P;
	ProcessEvent(pFnCanLeaveVehicle,NULL,&CanLeaveVehicle_Parms,NULL);
	return CanLeaveVehicle_Parms.ReturnValue;
}

struct Engine_Broadcast_Parms
{
	class AActor*                                      Sender;                                           		// 0x000000 (0x0004)              
	struct FString                                     msg;                                              		// 0x000004 (0x000C)              
	struct FName                                       Type;                                             		// 0x000010 (0x0008)              
};

void AGameInfo::Broadcast(class AActor* Sender,struct FString msg,struct FName Type)
{
	static UFieldFunc* pFnBroadcast = NULL;
	if(!pFnBroadcast)
		pFnBroadcast = UObject::FindFunction("Function Engine.GameInfo.Broadcast");

	Engine_Broadcast_Parms Broadcast_Parms;
	Broadcast_Parms.Sender = Sender;
	memcpy(&Broadcast_Parms.msg,&msg,0xC);
	memcpy(&Broadcast_Parms.Type,&Type,0x8);
	ProcessEvent(pFnBroadcast,NULL,&Broadcast_Parms,NULL);
}

struct Engine_EndLogging_Parms
{
	struct FString                                     Reason;                                           		// 0x000000 (0x000C)              
};

void AGameInfo::EndLogging(struct FString Reason)
{
	static UFieldFunc* pFnEndLogging = NULL;
	if(!pFnEndLogging)
		pFnEndLogging = UObject::FindFunction("Function Engine.GameInfo.EndLogging");

	Engine_EndLogging_Parms EndLogging_Parms;
	memcpy(&EndLogging_Parms.Reason,&Reason,0xC);
	ProcessEvent(pFnEndLogging,NULL,&EndLogging_Parms,NULL);
}

struct Engine_StartArbitratedMatch_Parms
{
};

void AGameInfo::StartArbitratedMatch()
{
	static UFieldFunc* pFnStartArbitratedMatch = NULL;
	if(!pFnStartArbitratedMatch)
		pFnStartArbitratedMatch = UObject::FindFunction("Function Engine.GameInfo.StartArbitratedMatch");

	Engine_StartArbitratedMatch_Parms StartArbitratedMatch_Parms;
	ProcessEvent(pFnStartArbitratedMatch,NULL,&StartArbitratedMatch_Parms,NULL);
}

struct Engine_NotifyKilled_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 Killed;                                           		// 0x000004 (0x0004)              
	class APawn*                                       KilledPawn;                                       		// 0x000008 (0x0004)              
	//class AController*                                 C;                                                		// 0x00000C (0x0004)              
};

void AGameInfo::NotifyKilled(class AController* Killer,class AController* Killed,class APawn* KilledPawn)
{
	static UFieldFunc* pFnNotifyKilled = NULL;
	if(!pFnNotifyKilled)
		pFnNotifyKilled = UObject::FindFunction("Function Engine.GameInfo.NotifyKilled");

	Engine_NotifyKilled_Parms NotifyKilled_Parms;
	NotifyKilled_Parms.Killer = Killer;
	NotifyKilled_Parms.Killed = Killed;
	NotifyKilled_Parms.KilledPawn = KilledPawn;
	ProcessEvent(pFnNotifyKilled,NULL,&NotifyKilled_Parms,NULL);
}

struct Engine_ArbitrationRegistrationComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void AGameInfo::ArbitrationRegistrationComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnArbitrationRegistrationComplete = NULL;
	if(!pFnArbitrationRegistrationComplete)
		pFnArbitrationRegistrationComplete = UObject::FindFunction("Function Engine.GameInfo.ArbitrationRegistrationComplete");

	Engine_ArbitrationRegistrationComplete_Parms ArbitrationRegistrationComplete_Parms;
	memcpy(&ArbitrationRegistrationComplete_Parms.SessionName,&SessionName,0x8);
	ArbitrationRegistrationComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnArbitrationRegistrationComplete,NULL,&ArbitrationRegistrationComplete_Parms,NULL);
}

struct Engine_ModifyScoreKill_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 Other;                                            		// 0x000004 (0x0004)              
};

void AGameInfo::ModifyScoreKill(class AController* Killer,class AController* Other)
{
	static UFieldFunc* pFnModifyScoreKill = NULL;
	if(!pFnModifyScoreKill)
		pFnModifyScoreKill = UObject::FindFunction("Function Engine.GameInfo.ModifyScoreKill");

	Engine_ModifyScoreKill_Parms ModifyScoreKill_Parms;
	ModifyScoreKill_Parms.Killer = Killer;
	ModifyScoreKill_Parms.Other = Other;
	ProcessEvent(pFnModifyScoreKill,NULL,&ModifyScoreKill_Parms,NULL);
}

struct Engine_StartOnlineGame_Parms
{
};

void AGameInfo::StartOnlineGame()
{
	static UFieldFunc* pFnStartOnlineGame = NULL;
	if(!pFnStartOnlineGame)
		pFnStartOnlineGame = UObject::FindFunction("Function Engine.GameInfo.StartOnlineGame");

	Engine_StartOnlineGame_Parms StartOnlineGame_Parms;
	ProcessEvent(pFnStartOnlineGame,NULL,&StartOnlineGame_Parms,NULL);
}

struct Engine_PostSeamlessTravel_Parms
{
	//class AController*                                 C;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::PostSeamlessTravel()
{
	static UFieldFunc* pFnPostSeamlessTravel = NULL;
	if(!pFnPostSeamlessTravel)
		pFnPostSeamlessTravel = UObject::FindFunction("Function Engine.GameInfo.PostSeamlessTravel");

	Engine_PostSeamlessTravel_Parms PostSeamlessTravel_Parms;
	ProcessEvent(pFnPostSeamlessTravel,NULL,&PostSeamlessTravel_Parms,NULL);
}

struct Engine_AddGameRules_Parms
{
	class UClass*                                      GRClass;                                          		// 0x000000 (0x0004)              
};

void AGameInfo::AddGameRules(class UClass* GRClass)
{
	static UFieldFunc* pFnAddGameRules = NULL;
	if(!pFnAddGameRules)
		pFnAddGameRules = UObject::FindFunction("Function Engine.GameInfo.AddGameRules");

	Engine_AddGameRules_Parms AddGameRules_Parms;
	AddGameRules_Parms.GRClass = GRClass;
	ProcessEvent(pFnAddGameRules,NULL,&AddGameRules_Parms,NULL);
}

struct Engine_DoNavFearCostFallOff_Parms
{
};

void AGameInfo::DoNavFearCostFallOff()
{
	static UFieldFunc* pFnDoNavFearCostFallOff = NULL;
	if(!pFnDoNavFearCostFallOff)
		pFnDoNavFearCostFallOff = UObject::FindFunction("Function Engine.GameInfo.DoNavFearCostFallOff");

	Engine_DoNavFearCostFallOff_Parms DoNavFearCostFallOff_Parms;
	pFnDoNavFearCostFallOff->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDoNavFearCostFallOff,NULL,&DoNavFearCostFallOff_Parms,NULL);
	pFnDoNavFearCostFallOff->FunctionFlags |= 0x400;
}

struct Engine_ScoreKill_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 Other;                                            		// 0x000004 (0x0004)              
};

void AGameInfo::ScoreKill(class AController* Killer,class AController* Other)
{
	static UFieldFunc* pFnScoreKill = NULL;
	if(!pFnScoreKill)
		pFnScoreKill = UObject::FindFunction("Function Engine.GameInfo.ScoreKill");

	Engine_ScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Other = Other;
	ProcessEvent(pFnScoreKill,NULL,&ScoreKill_Parms,NULL);
}

struct Engine_GetSeamlessTravelActorList_Parms
{
	unsigned long                                      bToEntry : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	TArray<class AActor*>                              ActorList;                                        		// 0x000004 (0x000C)              
	//int                                                I;                                                		// 0x000010 (0x0004)              
};

void AGameInfo::GetSeamlessTravelActorList(bool bToEntry,TArray<class AActor*>* ActorList)
{
	static UFieldFunc* pFnGetSeamlessTravelActorList = NULL;
	if(!pFnGetSeamlessTravelActorList)
		pFnGetSeamlessTravelActorList = UObject::FindFunction("Function Engine.GameInfo.GetSeamlessTravelActorList");

	Engine_GetSeamlessTravelActorList_Parms GetSeamlessTravelActorList_Parms;
	GetSeamlessTravelActorList_Parms.bToEntry = bToEntry;
	ProcessEvent(pFnGetSeamlessTravelActorList,NULL,&GetSeamlessTravelActorList_Parms,NULL);
	if(ActorList)
		memcpy(ActorList,&GetSeamlessTravelActorList_Parms.ActorList,0xC);
}

struct Engine_IncrementAutomatedTestingMapIndex_Parms
{
};

void AGameInfo::IncrementAutomatedTestingMapIndex()
{
	static UFieldFunc* pFnIncrementAutomatedTestingMapIndex = NULL;
	if(!pFnIncrementAutomatedTestingMapIndex)
		pFnIncrementAutomatedTestingMapIndex = UObject::FindFunction("Function Engine.GameInfo.IncrementAutomatedTestingMapIndex");

	Engine_IncrementAutomatedTestingMapIndex_Parms IncrementAutomatedTestingMapIndex_Parms;
	ProcessEvent(pFnIncrementAutomatedTestingMapIndex,NULL,&IncrementAutomatedTestingMapIndex_Parms,NULL);
}

struct Engine_StartBots_Parms
{
	//class AController*                                 P;                                                		// 0x000000 (0x0004)              
};

void AGameInfo::StartBots()
{
	static UFieldFunc* pFnStartBots = NULL;
	if(!pFnStartBots)
		pFnStartBots = UObject::FindFunction("Function Engine.GameInfo.StartBots");

	Engine_StartBots_Parms StartBots_Parms;
	ProcessEvent(pFnStartBots,NULL,&StartBots_Parms,NULL);
}

struct Engine_RecalculateSkillRating_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
	//TArray<struct FUniqueNetId>                        Players;                                          		// 0x000004 (0x000C)              
	//struct FUniqueNetId                                ZeroId;                                           		// 0x000010 (0x0008)              
};

void AGameInfo::RecalculateSkillRating()
{
	static UFieldFunc* pFnRecalculateSkillRating = NULL;
	if(!pFnRecalculateSkillRating)
		pFnRecalculateSkillRating = UObject::FindFunction("Function Engine.GameInfo.RecalculateSkillRating");

	Engine_RecalculateSkillRating_Parms RecalculateSkillRating_Parms;
	ProcessEvent(pFnRecalculateSkillRating,NULL,&RecalculateSkillRating_Parms,NULL);
}

struct Engine_PickTeam_Parms
{
	unsigned char                                      Current;                                          		// 0x000000 (0x0001)              
	class AController*                                 C;                                                		// 0x000004 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000008 (0x0001)              
};

unsigned char AGameInfo::PickTeam(unsigned char Current,class AController* C)
{
	static UFieldFunc* pFnPickTeam = NULL;
	if(!pFnPickTeam)
		pFnPickTeam = UObject::FindFunction("Function Engine.GameInfo.PickTeam");

	Engine_PickTeam_Parms PickTeam_Parms;
	PickTeam_Parms.Current = Current;
	PickTeam_Parms.C = C;
	ProcessEvent(pFnPickTeam,NULL,&PickTeam_Parms,NULL);
	return PickTeam_Parms.ReturnValue;
}

struct Engine_DriverLeftVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
};

void AGameInfo::DriverLeftVehicle(class AVehicle* V,class APawn* P)
{
	static UFieldFunc* pFnDriverLeftVehicle = NULL;
	if(!pFnDriverLeftVehicle)
		pFnDriverLeftVehicle = UObject::FindFunction("Function Engine.GameInfo.DriverLeftVehicle");

	Engine_DriverLeftVehicle_Parms DriverLeftVehicle_Parms;
	DriverLeftVehicle_Parms.V = V;
	DriverLeftVehicle_Parms.P = P;
	ProcessEvent(pFnDriverLeftVehicle,NULL,&DriverLeftVehicle_Parms,NULL);
}

struct Engine_DebugPause_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
	//struct FScriptDelegate                             CanUnpauseCriteriaMet;                            		// 0x000004 (0x000C)              
};

void AGameInfo::DebugPause()
{
	static UFieldFunc* pFnDebugPause = NULL;
	if(!pFnDebugPause)
		pFnDebugPause = UObject::FindFunction("Function Engine.GameInfo.DebugPause");

	Engine_DebugPause_Parms DebugPause_Parms;
	ProcessEvent(pFnDebugPause,NULL,&DebugPause_Parms,NULL);
}

struct Engine_SetPause_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	struct FScriptDelegate                             CanUnpauseDelegate;                               		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//int                                                FoundIndex;                                       		// 0x000014 (0x0004)              
};

bool AGameInfo::SetPause(class APlayerController* PC,struct FScriptDelegate CanUnpauseDelegate)
{
	static UFieldFunc* pFnSetPause = NULL;
	if(!pFnSetPause)
		pFnSetPause = UObject::FindFunction("Function Engine.GameInfo.SetPause");

	Engine_SetPause_Parms SetPause_Parms;
	SetPause_Parms.PC = PC;
	memcpy(&SetPause_Parms.CanUnpauseDelegate,&CanUnpauseDelegate,0xC);
	ProcessEvent(pFnSetPause,NULL,&SetPause_Parms,NULL);
	return SetPause_Parms.ReturnValue;
}

struct Engine_PreventDeath_Parms
{
	class APawn*                                       KilledPawn;                                       		// 0x000000 (0x0004)              
	class AController*                                 Killer;                                           		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AGameInfo::PreventDeath(class APawn* KilledPawn,class AController* Killer,class UClass* DamageType,FVector3 HitLocation)
{
	static UFieldFunc* pFnPreventDeath = NULL;
	if(!pFnPreventDeath)
		pFnPreventDeath = UObject::FindFunction("Function Engine.GameInfo.PreventDeath");

	Engine_PreventDeath_Parms PreventDeath_Parms;
	PreventDeath_Parms.KilledPawn = KilledPawn;
	PreventDeath_Parms.Killer = Killer;
	PreventDeath_Parms.DamageType = DamageType;
	memcpy(&PreventDeath_Parms.HitLocation,&HitLocation,0xC);
	ProcessEvent(pFnPreventDeath,NULL,&PreventDeath_Parms,NULL);
	return PreventDeath_Parms.ReturnValue;
}

struct Engine_Mutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x000000 (0x000C)              
	class APlayerController*                           Sender;                                           		// 0x00000C (0x0004)              
};

void AGameInfo::Mutate(struct FString MutateString,class APlayerController* Sender)
{
	static UFieldFunc* pFnMutate = NULL;
	if(!pFnMutate)
		pFnMutate = UObject::FindFunction("Function Engine.GameInfo.Mutate");

	Engine_Mutate_Parms Mutate_Parms;
	memcpy(&Mutate_Parms.MutateString,&MutateString,0xC);
	Mutate_Parms.Sender = Sender;
	ProcessEvent(pFnMutate,NULL,&Mutate_Parms,NULL);
}

struct Engine_SetPlayerDefaults_Parms
{
	class APawn*                                       PlayerPawn;                                       		// 0x000000 (0x0004)              
};

void AGameInfo::SetPlayerDefaults(class APawn* PlayerPawn)
{
	static UFieldFunc* pFnSetPlayerDefaults = NULL;
	if(!pFnSetPlayerDefaults)
		pFnSetPlayerDefaults = UObject::FindFunction("Function Engine.GameInfo.SetPlayerDefaults");

	Engine_SetPlayerDefaults_Parms SetPlayerDefaults_Parms;
	SetPlayerDefaults_Parms.PlayerPawn = PlayerPawn;
	ProcessEvent(pFnSetPlayerDefaults,NULL,&SetPlayerDefaults_Parms,NULL);
}

struct Engine_OnLoginFailed_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ErrorCode;                                        		// 0x000001 (0x0001)              
};

void AGameInfo::OnLoginFailed(unsigned char LocalUserNum,unsigned char ErrorCode)
{
	static UFieldFunc* pFnOnLoginFailed = NULL;
	if(!pFnOnLoginFailed)
		pFnOnLoginFailed = UObject::FindFunction("Function Engine.GameInfo.OnLoginFailed");

	Engine_OnLoginFailed_Parms OnLoginFailed_Parms;
	OnLoginFailed_Parms.LocalUserNum = LocalUserNum;
	OnLoginFailed_Parms.ErrorCode = ErrorCode;
	ProcessEvent(pFnOnLoginFailed,NULL,&OnLoginFailed_Parms,NULL);
}

struct Engine_KickIdler_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AGameInfo::KickIdler(class APlayerController* PC)
{
	static UFieldFunc* pFnKickIdler = NULL;
	if(!pFnKickIdler)
		pFnKickIdler = UObject::FindFunction("Function Engine.GameInfo.KickIdler");

	Engine_KickIdler_Parms KickIdler_Parms;
	KickIdler_Parms.PC = PC;
	ProcessEvent(pFnKickIdler,NULL,&KickIdler_Parms,NULL);
}

struct Engine_FindPlayerByID_Parms
{
	int                                                PlayerID;                                         		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
	//class APlayerReplicationInfo*                      PRI;                                              		// 0x000010 (0x0004)              
};

struct FString AGameInfo::FindPlayerByID(int PlayerID)
{
	static UFieldFunc* pFnFindPlayerByID = NULL;
	if(!pFnFindPlayerByID)
		pFnFindPlayerByID = UObject::FindFunction("Function Engine.GameInfo.FindPlayerByID");

	Engine_FindPlayerByID_Parms FindPlayerByID_Parms;
	FindPlayerByID_Parms.PlayerID = PlayerID;
	ProcessEvent(pFnFindPlayerByID,NULL,&FindPlayerByID_Parms,NULL);
	return FindPlayerByID_Parms.ReturnValue;
}

struct Engine_AllowMutator_Parms
{
	struct FString                                     MutatorClassName;                                 		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AGameInfo::AllowMutator(struct FString MutatorClassName)
{
	static UFieldFunc* pFnAllowMutator = NULL;
	if(!pFnAllowMutator)
		pFnAllowMutator = UObject::FindFunction("Function Engine.GameInfo.AllowMutator");

	Engine_AllowMutator_Parms AllowMutator_Parms;
	memcpy(&AllowMutator_Parms.MutatorClassName,&MutatorClassName,0xC);
	ProcessEvent(pFnAllowMutator,NULL,&AllowMutator_Parms,NULL);
	return AllowMutator_Parms.ReturnValue;
}

struct Engine_RestartPlayer_Parms
{
	class AController*                                 NewPlayer;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//class ANavigationPoint*                            StartSpot;                                        		// 0x000008 (0x0004)              
	//int                                                TeamNum;                                          		// 0x00000C (0x0004)              
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//TArray<class USequenceObject*>                     Events;                                           		// 0x000014 (0x000C)              
	//class USeqEvent_PlayerSpawned*                     SpawnedEvent;                                     		// 0x000020 (0x0004)              
};

bool AGameInfo::RestartPlayer(class AController* NewPlayer)
{
	static UFieldFunc* pFnRestartPlayer = NULL;
	if(!pFnRestartPlayer)
		pFnRestartPlayer = UObject::FindFunction("Function Engine.GameInfo.RestartPlayer");

	Engine_RestartPlayer_Parms RestartPlayer_Parms;
	RestartPlayer_Parms.NewPlayer = NewPlayer;
	ProcessEvent(pFnRestartPlayer,NULL,&RestartPlayer_Parms,NULL);
	return RestartPlayer_Parms.ReturnValue;
}

struct Engine_GameEnding_Parms
{
};

void AGameInfo::GameEnding()
{
	static UFieldFunc* pFnGameEnding = NULL;
	if(!pFnGameEnding)
		pFnGameEnding = UObject::FindFunction("Function Engine.GameInfo.GameEnding");

	Engine_GameEnding_Parms GameEnding_Parms;
	ProcessEvent(pFnGameEnding,NULL,&GameEnding_Parms,NULL);
}

struct Engine_NotifyArbitratedMatchEnd_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void AGameInfo::NotifyArbitratedMatchEnd()
{
	static UFieldFunc* pFnNotifyArbitratedMatchEnd = NULL;
	if(!pFnNotifyArbitratedMatchEnd)
		pFnNotifyArbitratedMatchEnd = UObject::FindFunction("Function Engine.GameInfo.NotifyArbitratedMatchEnd");

	Engine_NotifyArbitratedMatchEnd_Parms NotifyArbitratedMatchEnd_Parms;
	ProcessEvent(pFnNotifyArbitratedMatchEnd,NULL,&NotifyArbitratedMatchEnd_Parms,NULL);
}

struct Engine_ShouldSpawnAtStartSpot_Parms
{
	class AController*                                 Player;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::ShouldSpawnAtStartSpot(class AController* Player)
{
	static UFieldFunc* pFnShouldSpawnAtStartSpot = NULL;
	if(!pFnShouldSpawnAtStartSpot)
		pFnShouldSpawnAtStartSpot = UObject::FindFunction("Function Engine.GameInfo.ShouldSpawnAtStartSpot");

	Engine_ShouldSpawnAtStartSpot_Parms ShouldSpawnAtStartSpot_Parms;
	ShouldSpawnAtStartSpot_Parms.Player = Player;
	ProcessEvent(pFnShouldSpawnAtStartSpot,NULL,&ShouldSpawnAtStartSpot_Parms,NULL);
	return ShouldSpawnAtStartSpot_Parms.ReturnValue;
}

struct Engine_GetBeaconText_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AGameInfo::GetBeaconText()
{
	static UFieldFunc* pFnGetBeaconText = NULL;
	if(!pFnGetBeaconText)
		pFnGetBeaconText = UObject::FindFunction("Function Engine.GameInfo.GetBeaconText");

	Engine_GetBeaconText_Parms GetBeaconText_Parms;
	ProcessEvent(pFnGetBeaconText,NULL,&GetBeaconText_Parms,NULL);
	return GetBeaconText_Parms.ReturnValue;
}

struct Engine_SpawnDefaultPawnFor_Parms
{
	class AController*                                 NewPlayer;                                        		// 0x000000 (0x0004)              
	class ANavigationPoint*                            StartSpot;                                        		// 0x000004 (0x0004)              
	class APawn*                                       ReturnValue;                                      		// 0x000008 (0x0004)              
	//class UClass*                                      DefaultPlayerClass;                               		// 0x00000C (0x0004)              
	//FRotator                                           StartRotation;                                    		// 0x000010 (0x000C)              
	//class APawn*                                       ResultPawn;                                       		// 0x00001C (0x0004)              
};

class APawn* AGameInfo::SpawnDefaultPawnFor(class AController* NewPlayer,class ANavigationPoint* StartSpot)
{
	static UFieldFunc* pFnSpawnDefaultPawnFor = NULL;
	if(!pFnSpawnDefaultPawnFor)
		pFnSpawnDefaultPawnFor = UObject::FindFunction("Function Engine.GameInfo.SpawnDefaultPawnFor");

	Engine_SpawnDefaultPawnFor_Parms SpawnDefaultPawnFor_Parms;
	SpawnDefaultPawnFor_Parms.NewPlayer = NewPlayer;
	SpawnDefaultPawnFor_Parms.StartSpot = StartSpot;
	ProcessEvent(pFnSpawnDefaultPawnFor,NULL,&SpawnDefaultPawnFor_Parms,NULL);
	return SpawnDefaultPawnFor_Parms.ReturnValue;
}

struct Engine_HandleSeamlessTravelPlayer_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	//FRotator                                           StartRotation;                                    		// 0x000004 (0x000C)              
	//class ANavigationPoint*                            StartSpot;                                        		// 0x000010 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000014 (0x0004)              
	//class APlayerController*                           NewPC;                                            		// 0x000018 (0x0004)              
	//class APlayerReplicationInfo*                      OldPRI;                                           		// 0x00001C (0x0004)              
};

void AGameInfo::HandleSeamlessTravelPlayer(class AController** C)
{
	static UFieldFunc* pFnHandleSeamlessTravelPlayer = NULL;
	if(!pFnHandleSeamlessTravelPlayer)
		pFnHandleSeamlessTravelPlayer = UObject::FindFunction("Function Engine.GameInfo.HandleSeamlessTravelPlayer");

	Engine_HandleSeamlessTravelPlayer_Parms HandleSeamlessTravelPlayer_Parms;
	ProcessEvent(pFnHandleSeamlessTravelPlayer,NULL,&HandleSeamlessTravelPlayer_Parms,NULL);
	if(C)
		*C = HandleSeamlessTravelPlayer_Parms.C;
}

struct Engine_OverridePRI_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      OldPRI;                                           		// 0x000004 (0x0004)              
};

void AGameInfo::OverridePRI(class APlayerController* PC,class APlayerReplicationInfo* OldPRI)
{
	static UFieldFunc* pFnOverridePRI = NULL;
	if(!pFnOverridePRI)
		pFnOverridePRI = UObject::FindFunction("Function Engine.GameInfo.OverridePRI");

	Engine_OverridePRI_Parms OverridePRI_Parms;
	OverridePRI_Parms.PC = PC;
	OverridePRI_Parms.OldPRI = OldPRI;
	ProcessEvent(pFnOverridePRI,NULL,&OverridePRI_Parms,NULL);
}

struct Engine_AddMutator_Parms
{
	struct FString                                     mutname;                                          		// 0x000000 (0x000C)              
	unsigned long                                      bUserAdded : 1;                                   		// 0x00000C (0x0004) [0x00000001] 
	//class UClass*                                      mutClass;                                         		// 0x000010 (0x0004)              
	//class AMutator*                                    mut;                                              		// 0x000014 (0x0004)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void AGameInfo::AddMutator(struct FString mutname,bool bUserAdded)
{
	static UFieldFunc* pFnAddMutator = NULL;
	if(!pFnAddMutator)
		pFnAddMutator = UObject::FindFunction("Function Engine.GameInfo.AddMutator");

	Engine_AddMutator_Parms AddMutator_Parms;
	memcpy(&AddMutator_Parms.mutname,&mutname,0xC);
	AddMutator_Parms.bUserAdded = bUserAdded;
	ProcessEvent(pFnAddMutator,NULL,&AddMutator_Parms,NULL);
}

struct Engine_DriverEnteredVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
};

void AGameInfo::DriverEnteredVehicle(class AVehicle* V,class APawn* P)
{
	static UFieldFunc* pFnDriverEnteredVehicle = NULL;
	if(!pFnDriverEnteredVehicle)
		pFnDriverEnteredVehicle = UObject::FindFunction("Function Engine.GameInfo.DriverEnteredVehicle");

	Engine_DriverEnteredVehicle_Parms DriverEnteredVehicle_Parms;
	DriverEnteredVehicle_Parms.V = V;
	DriverEnteredVehicle_Parms.P = P;
	ProcessEvent(pFnDriverEnteredVehicle,NULL,&DriverEnteredVehicle_Parms,NULL);
}

struct Engine_ShouldReset_Parms
{
	class AActor*                                      ActorToReset;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::ShouldReset(class AActor* ActorToReset)
{
	static UFieldFunc* pFnShouldReset = NULL;
	if(!pFnShouldReset)
		pFnShouldReset = UObject::FindFunction("Function Engine.GameInfo.ShouldReset");

	Engine_ShouldReset_Parms ShouldReset_Parms;
	ShouldReset_Parms.ActorToReset = ActorToReset;
	ProcessEvent(pFnShouldReset,NULL,&ShouldReset_Parms,NULL);
	return ShouldReset_Parms.ReturnValue;
}

struct Engine_GetNextAutomatedTestingMap_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
	//struct FString                                     MapName;                                          		// 0x00000C (0x000C)              
	//class APlayerController*                           PC;                                               		// 0x000018 (0x0004)              
	//unsigned long                                      bResetMapIndex : 1;                               		// 0x00001C (0x0004) [0x00000001] 
};

struct FString AGameInfo::GetNextAutomatedTestingMap()
{
	static UFieldFunc* pFnGetNextAutomatedTestingMap = NULL;
	if(!pFnGetNextAutomatedTestingMap)
		pFnGetNextAutomatedTestingMap = UObject::FindFunction("Function Engine.GameInfo.GetNextAutomatedTestingMap");

	Engine_GetNextAutomatedTestingMap_Parms GetNextAutomatedTestingMap_Parms;
	ProcessEvent(pFnGetNextAutomatedTestingMap,NULL,&GetNextAutomatedTestingMap_Parms,NULL);
	return GetNextAutomatedTestingMap_Parms.ReturnValue;
}

struct Engine_BroadcastTeam_Parms
{
	class AController*                                 Sender;                                           		// 0x000000 (0x0004)              
	struct FString                                     msg;                                              		// 0x000004 (0x000C)              
	struct FName                                       Type;                                             		// 0x000010 (0x0008)              
};

void AGameInfo::BroadcastTeam(class AController* Sender,struct FString msg,struct FName Type)
{
	static UFieldFunc* pFnBroadcastTeam = NULL;
	if(!pFnBroadcastTeam)
		pFnBroadcastTeam = UObject::FindFunction("Function Engine.GameInfo.BroadcastTeam");

	Engine_BroadcastTeam_Parms BroadcastTeam_Parms;
	BroadcastTeam_Parms.Sender = Sender;
	memcpy(&BroadcastTeam_Parms.msg,&msg,0xC);
	memcpy(&BroadcastTeam_Parms.Type,&Type,0x8);
	ProcessEvent(pFnBroadcastTeam,NULL,&BroadcastTeam_Parms,NULL);
}

struct Engine_ShouldRespawn_Parms
{
	class APickupFactory*                              Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AGameInfo::ShouldRespawn(class APickupFactory* Other)
{
	static UFieldFunc* pFnShouldRespawn = NULL;
	if(!pFnShouldRespawn)
		pFnShouldRespawn = UObject::FindFunction("Function Engine.GameInfo.ShouldRespawn");

	Engine_ShouldRespawn_Parms ShouldRespawn_Parms;
	ShouldRespawn_Parms.Other = Other;
	ProcessEvent(pFnShouldRespawn,NULL,&ShouldRespawn_Parms,NULL);
	return ShouldRespawn_Parms.ReturnValue;
}

struct Engine_GetBeaconAddress_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString AInternetInfo::GetBeaconAddress(int I)
{
	static UFieldFunc* pFnGetBeaconAddress = NULL;
	if(!pFnGetBeaconAddress)
		pFnGetBeaconAddress = UObject::FindFunction("Function Engine.InternetInfo.GetBeaconAddress");

	Engine_GetBeaconAddress_Parms GetBeaconAddress_Parms;
	GetBeaconAddress_Parms.I = I;
	ProcessEvent(pFnGetBeaconAddress,NULL,&GetBeaconAddress_Parms,NULL);
	return GetBeaconAddress_Parms.ReturnValue;
}

struct Engine_GetBeaconText_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString AInternetInfo::GetBeaconText(int I)
{
	static UFieldFunc* pFnGetBeaconText = NULL;
	if(!pFnGetBeaconText)
		pFnGetBeaconText = UObject::FindFunction("Function Engine.InternetInfo.GetBeaconText");

	Engine_GetBeaconText_Parms GetBeaconText_Parms;
	GetBeaconText_Parms.I = I;
	ProcessEvent(pFnGetBeaconText,NULL,&GetBeaconText_Parms,NULL);
	return GetBeaconText_Parms.ReturnValue;
}

struct Engine_CheckReplacement_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AMutator::CheckReplacement(class AActor* Other)
{
	static UFieldFunc* pFnCheckReplacement = NULL;
	if(!pFnCheckReplacement)
		pFnCheckReplacement = UObject::FindFunction("Function Engine.Mutator.CheckReplacement");

	Engine_CheckReplacement_Parms CheckReplacement_Parms;
	CheckReplacement_Parms.Other = Other;
	ProcessEvent(pFnCheckReplacement,NULL,&CheckReplacement_Parms,NULL);
	return CheckReplacement_Parms.ReturnValue;
}

struct Engine_NotifyLogout_Parms
{
	class AController*                                 Exiting;                                          		// 0x000000 (0x0004)              
};

void AMutator::NotifyLogout(class AController* Exiting)
{
	static UFieldFunc* pFnNotifyLogout = NULL;
	if(!pFnNotifyLogout)
		pFnNotifyLogout = UObject::FindFunction("Function Engine.Mutator.NotifyLogout");

	Engine_NotifyLogout_Parms NotifyLogout_Parms;
	NotifyLogout_Parms.Exiting = Exiting;
	ProcessEvent(pFnNotifyLogout,NULL,&NotifyLogout_Parms,NULL);
}

struct Engine_InitMutator_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     ErrorMessage;                                     		// 0x00000C (0x000C)              
};

void AMutator::InitMutator(struct FString Options,struct FString* ErrorMessage)
{
	static UFieldFunc* pFnInitMutator = NULL;
	if(!pFnInitMutator)
		pFnInitMutator = UObject::FindFunction("Function Engine.Mutator.InitMutator");

	Engine_InitMutator_Parms InitMutator_Parms;
	memcpy(&InitMutator_Parms.Options,&Options,0xC);
	ProcessEvent(pFnInitMutator,NULL,&InitMutator_Parms,NULL);
	if(ErrorMessage)
		memcpy(ErrorMessage,&InitMutator_Parms.ErrorMessage,0xC);
}

struct Engine_PreBeginPlay_Parms
{
};

void AMutator::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.Mutator.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_GetServerPlayers_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x000000 (0x0060)              
};

void AMutator::GetServerPlayers(struct FServerResponseLine* ServerState)
{
	static UFieldFunc* pFnGetServerPlayers = NULL;
	if(!pFnGetServerPlayers)
		pFnGetServerPlayers = UObject::FindFunction("Function Engine.Mutator.GetServerPlayers");

	Engine_GetServerPlayers_Parms GetServerPlayers_Parms;
	ProcessEvent(pFnGetServerPlayers,NULL,&GetServerPlayers_Parms,NULL);
	if(ServerState)
		memcpy(ServerState,&GetServerPlayers_Parms.ServerState,0x60);
}

struct Engine_NotifyLogin_Parms
{
	class AController*                                 NewPlayer;                                        		// 0x000000 (0x0004)              
};

void AMutator::NotifyLogin(class AController* NewPlayer)
{
	static UFieldFunc* pFnNotifyLogin = NULL;
	if(!pFnNotifyLogin)
		pFnNotifyLogin = UObject::FindFunction("Function Engine.Mutator.NotifyLogin");

	Engine_NotifyLogin_Parms NotifyLogin_Parms;
	NotifyLogin_Parms.NewPlayer = NewPlayer;
	ProcessEvent(pFnNotifyLogin,NULL,&NotifyLogin_Parms,NULL);
}

struct Engine_AddMutator_Parms
{
	class AMutator*                                    M;                                                		// 0x000000 (0x0004)              
};

void AMutator::AddMutator(class AMutator* M)
{
	static UFieldFunc* pFnAddMutator = NULL;
	if(!pFnAddMutator)
		pFnAddMutator = UObject::FindFunction("Function Engine.Mutator.AddMutator");

	Engine_AddMutator_Parms AddMutator_Parms;
	AddMutator_Parms.M = M;
	ProcessEvent(pFnAddMutator,NULL,&AddMutator_Parms,NULL);
}

struct Engine_ParseChatPercVar_Parms
{
	class AController*                                 Who;                                              		// 0x000000 (0x0004)              
	struct FString                                     Cmd;                                              		// 0x000004 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x000010 (0x000C)              
};

struct FString AMutator::ParseChatPercVar(class AController* Who,struct FString Cmd)
{
	static UFieldFunc* pFnParseChatPercVar = NULL;
	if(!pFnParseChatPercVar)
		pFnParseChatPercVar = UObject::FindFunction("Function Engine.Mutator.ParseChatPercVar");

	Engine_ParseChatPercVar_Parms ParseChatPercVar_Parms;
	ParseChatPercVar_Parms.Who = Who;
	memcpy(&ParseChatPercVar_Parms.Cmd,&Cmd,0xC);
	ProcessEvent(pFnParseChatPercVar,NULL,&ParseChatPercVar_Parms,NULL);
	return ParseChatPercVar_Parms.ReturnValue;
}

struct Engine_CheckRelevance_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

bool AMutator::CheckRelevance(class AActor* Other)
{
	static UFieldFunc* pFnCheckRelevance = NULL;
	if(!pFnCheckRelevance)
		pFnCheckRelevance = UObject::FindFunction("Function Engine.Mutator.CheckRelevance");

	Engine_CheckRelevance_Parms CheckRelevance_Parms;
	CheckRelevance_Parms.Other = Other;
	ProcessEvent(pFnCheckRelevance,NULL,&CheckRelevance_Parms,NULL);
	return CheckRelevance_Parms.ReturnValue;
}

struct Engine_GetSeamlessTravelActorList_Parms
{
	unsigned long                                      bToEntry : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	TArray<class AActor*>                              ActorList;                                        		// 0x000004 (0x000C)              
};

void AMutator::GetSeamlessTravelActorList(bool bToEntry,TArray<class AActor*>* ActorList)
{
	static UFieldFunc* pFnGetSeamlessTravelActorList = NULL;
	if(!pFnGetSeamlessTravelActorList)
		pFnGetSeamlessTravelActorList = UObject::FindFunction("Function Engine.Mutator.GetSeamlessTravelActorList");

	Engine_GetSeamlessTravelActorList_Parms GetSeamlessTravelActorList_Parms;
	GetSeamlessTravelActorList_Parms.bToEntry = bToEntry;
	ProcessEvent(pFnGetSeamlessTravelActorList,NULL,&GetSeamlessTravelActorList_Parms,NULL);
	if(ActorList)
		memcpy(ActorList,&GetSeamlessTravelActorList_Parms.ActorList,0xC);
}

struct Engine_ModifyPlayer_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
};

void AMutator::ModifyPlayer(class APawn* Other)
{
	static UFieldFunc* pFnModifyPlayer = NULL;
	if(!pFnModifyPlayer)
		pFnModifyPlayer = UObject::FindFunction("Function Engine.Mutator.ModifyPlayer");

	Engine_ModifyPlayer_Parms ModifyPlayer_Parms;
	ModifyPlayer_Parms.Other = Other;
	ProcessEvent(pFnModifyPlayer,NULL,&ModifyPlayer_Parms,NULL);
}

struct Engine_IsRelevant_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

bool AMutator::IsRelevant(class AActor* Other)
{
	static UFieldFunc* pFnIsRelevant = NULL;
	if(!pFnIsRelevant)
		pFnIsRelevant = UObject::FindFunction("Function Engine.Mutator.IsRelevant");

	Engine_IsRelevant_Parms IsRelevant_Parms;
	IsRelevant_Parms.Other = Other;
	ProcessEvent(pFnIsRelevant,NULL,&IsRelevant_Parms,NULL);
	return IsRelevant_Parms.ReturnValue;
}

struct Engine_GetServerDetails_Parms
{
	struct FServerResponseLine                         ServerState;                                      		// 0x000000 (0x0060)              
	//int                                                I;                                                		// 0x000060 (0x0004)              
};

void AMutator::GetServerDetails(struct FServerResponseLine* ServerState)
{
	static UFieldFunc* pFnGetServerDetails = NULL;
	if(!pFnGetServerDetails)
		pFnGetServerDetails = UObject::FindFunction("Function Engine.Mutator.GetServerDetails");

	Engine_GetServerDetails_Parms GetServerDetails_Parms;
	ProcessEvent(pFnGetServerDetails,NULL,&GetServerDetails_Parms,NULL);
	if(ServerState)
		memcpy(ServerState,&GetServerDetails_Parms.ServerState,0x60);
}

struct Engine_DriverLeftVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
};

void AMutator::DriverLeftVehicle(class AVehicle* V,class APawn* P)
{
	static UFieldFunc* pFnDriverLeftVehicle = NULL;
	if(!pFnDriverLeftVehicle)
		pFnDriverLeftVehicle = UObject::FindFunction("Function Engine.Mutator.DriverLeftVehicle");

	Engine_DriverLeftVehicle_Parms DriverLeftVehicle_Parms;
	DriverLeftVehicle_Parms.V = V;
	DriverLeftVehicle_Parms.P = P;
	ProcessEvent(pFnDriverLeftVehicle,NULL,&DriverLeftVehicle_Parms,NULL);
}

struct Engine_ModifyLogin_Parms
{
	struct FString                                     Portal;                                           		// 0x000000 (0x000C)              
	struct FString                                     Options;                                          		// 0x00000C (0x000C)              
};

void AMutator::ModifyLogin(struct FString* Portal,struct FString* Options)
{
	static UFieldFunc* pFnModifyLogin = NULL;
	if(!pFnModifyLogin)
		pFnModifyLogin = UObject::FindFunction("Function Engine.Mutator.ModifyLogin");

	Engine_ModifyLogin_Parms ModifyLogin_Parms;
	ProcessEvent(pFnModifyLogin,NULL,&ModifyLogin_Parms,NULL);
	if(Portal)
		memcpy(Portal,&ModifyLogin_Parms.Portal,0xC);
	if(Options)
		memcpy(Options,&ModifyLogin_Parms.Options,0xC);
}

struct Engine_DriverEnteredVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
};

void AMutator::DriverEnteredVehicle(class AVehicle* V,class APawn* P)
{
	static UFieldFunc* pFnDriverEnteredVehicle = NULL;
	if(!pFnDriverEnteredVehicle)
		pFnDriverEnteredVehicle = UObject::FindFunction("Function Engine.Mutator.DriverEnteredVehicle");

	Engine_DriverEnteredVehicle_Parms DriverEnteredVehicle_Parms;
	DriverEnteredVehicle_Parms.V = V;
	DriverEnteredVehicle_Parms.P = P;
	ProcessEvent(pFnDriverEnteredVehicle,NULL,&DriverEnteredVehicle_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AMutator::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Mutator.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_CanLeaveVehicle_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AMutator::CanLeaveVehicle(class AVehicle* V,class APawn* P)
{
	static UFieldFunc* pFnCanLeaveVehicle = NULL;
	if(!pFnCanLeaveVehicle)
		pFnCanLeaveVehicle = UObject::FindFunction("Function Engine.Mutator.CanLeaveVehicle");

	Engine_CanLeaveVehicle_Parms CanLeaveVehicle_Parms;
	CanLeaveVehicle_Parms.V = V;
	CanLeaveVehicle_Parms.P = P;
	ProcessEvent(pFnCanLeaveVehicle,NULL,&CanLeaveVehicle_Parms,NULL);
	return CanLeaveVehicle_Parms.ReturnValue;
}

struct Engine_MutatorIsAllowed_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AMutator::MutatorIsAllowed()
{
	static UFieldFunc* pFnMutatorIsAllowed = NULL;
	if(!pFnMutatorIsAllowed)
		pFnMutatorIsAllowed = UObject::FindFunction("Function Engine.Mutator.MutatorIsAllowed");

	Engine_MutatorIsAllowed_Parms MutatorIsAllowed_Parms;
	ProcessEvent(pFnMutatorIsAllowed,NULL,&MutatorIsAllowed_Parms,NULL);
	return MutatorIsAllowed_Parms.ReturnValue;
}

struct Engine_Mutate_Parms
{
	struct FString                                     MutateString;                                     		// 0x000000 (0x000C)              
	class APlayerController*                           Sender;                                           		// 0x00000C (0x0004)              
};

void AMutator::Mutate(struct FString MutateString,class APlayerController* Sender)
{
	static UFieldFunc* pFnMutate = NULL;
	if(!pFnMutate)
		pFnMutate = UObject::FindFunction("Function Engine.Mutator.Mutate");

	Engine_Mutate_Parms Mutate_Parms;
	memcpy(&Mutate_Parms.MutateString,&MutateString,0xC);
	Mutate_Parms.Sender = Sender;
	ProcessEvent(pFnMutate,NULL,&Mutate_Parms,NULL);
}

struct Engine_AlwaysKeep_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AMutator::AlwaysKeep(class AActor* Other)
{
	static UFieldFunc* pFnAlwaysKeep = NULL;
	if(!pFnAlwaysKeep)
		pFnAlwaysKeep = UObject::FindFunction("Function Engine.Mutator.AlwaysKeep");

	Engine_AlwaysKeep_Parms AlwaysKeep_Parms;
	AlwaysKeep_Parms.Other = Other;
	ProcessEvent(pFnAlwaysKeep,NULL,&AlwaysKeep_Parms,NULL);
	return AlwaysKeep_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
	//class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	//class ATeamInfo*                                   TI;                                               		// 0x000004 (0x0004)              
};

void AGameReplicationInfo::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.GameReplicationInfo.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AGameReplicationInfo::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.GameReplicationInfo.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_EndGame_Parms
{
};

void AGameReplicationInfo::EndGame()
{
	static UFieldFunc* pFnEndGame = NULL;
	if(!pFnEndGame)
		pFnEndGame = UObject::FindFunction("Function Engine.GameReplicationInfo.EndGame");

	Engine_EndGame_Parms EndGame_Parms;
	ProcessEvent(pFnEndGame,NULL,&EndGame_Parms,NULL);
}

struct Engine_UpdateServerFrameTime_Parms
{
};

void AGameReplicationInfo::UpdateServerFrameTime()
{
	static UFieldFunc* pFnUpdateServerFrameTime = NULL;
	if(!pFnUpdateServerFrameTime)
		pFnUpdateServerFrameTime = UObject::FindFunction("Function Engine.GameReplicationInfo.UpdateServerFrameTime");

	Engine_UpdateServerFrameTime_Parms UpdateServerFrameTime_Parms;
	pFnUpdateServerFrameTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateServerFrameTime,NULL,&UpdateServerFrameTime_Parms,NULL);
	pFnUpdateServerFrameTime->FunctionFlags |= 0x400;
}

struct Engine_GetGfxMemStatsInterval_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AGameReplicationInfo::GetGfxMemStatsInterval()
{
	static UFieldFunc* pFnGetGfxMemStatsInterval = NULL;
	if(!pFnGetGfxMemStatsInterval)
		pFnGetGfxMemStatsInterval = UObject::FindFunction("Function Engine.GameReplicationInfo.GetGfxMemStatsInterval");

	Engine_GetGfxMemStatsInterval_Parms GetGfxMemStatsInterval_Parms;
	pFnGetGfxMemStatsInterval->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGfxMemStatsInterval,NULL,&GetGfxMemStatsInterval_Parms,NULL);
	pFnGetGfxMemStatsInterval->FunctionFlags |= 0x400;
	return GetGfxMemStatsInterval_Parms.ReturnValue;
}

struct Engine_StartMatch_Parms
{
};

void AGameReplicationInfo::StartMatch()
{
	static UFieldFunc* pFnStartMatch = NULL;
	if(!pFnStartMatch)
		pFnStartMatch = UObject::FindFunction("Function Engine.GameReplicationInfo.StartMatch");

	Engine_StartMatch_Parms StartMatch_Parms;
	ProcessEvent(pFnStartMatch,NULL,&StartMatch_Parms,NULL);
}

struct Engine_SetTeam_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class ATeamInfo*                                   TI;                                               		// 0x000004 (0x0004)              
};

void AGameReplicationInfo::SetTeam(int Index,class ATeamInfo* TI)
{
	static UFieldFunc* pFnSetTeam = NULL;
	if(!pFnSetTeam)
		pFnSetTeam = UObject::FindFunction("Function Engine.GameReplicationInfo.SetTeam");

	Engine_SetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.Index = Index;
	SetTeam_Parms.TI = TI;
	ProcessEvent(pFnSetTeam,NULL,&SetTeam_Parms,NULL);
}

struct Engine_DoGfxMemStats_Parms
{
};

void AGameReplicationInfo::DoGfxMemStats()
{
	static UFieldFunc* pFnDoGfxMemStats = NULL;
	if(!pFnDoGfxMemStats)
		pFnDoGfxMemStats = UObject::FindFunction("Function Engine.GameReplicationInfo.DoGfxMemStats");

	Engine_DoGfxMemStats_Parms DoGfxMemStats_Parms;
	pFnDoGfxMemStats->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDoGfxMemStats,NULL,&DoGfxMemStats_Parms,NULL);
	pFnDoGfxMemStats->FunctionFlags |= 0x400;
}

struct Engine_Reset_Parms
{
};

void AGameReplicationInfo::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.GameReplicationInfo.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_InOrder_Parms
{
	class APlayerReplicationInfo*                      P1;                                               		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      P2;                                               		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AGameReplicationInfo::InOrder(class APlayerReplicationInfo* P1,class APlayerReplicationInfo* P2)
{
	static UFieldFunc* pFnInOrder = NULL;
	if(!pFnInOrder)
		pFnInOrder = UObject::FindFunction("Function Engine.GameReplicationInfo.InOrder");

	Engine_InOrder_Parms InOrder_Parms;
	InOrder_Parms.P1 = P1;
	InOrder_Parms.P2 = P2;
	ProcessEvent(pFnInOrder,NULL,&InOrder_Parms,NULL);
	return InOrder_Parms.ReturnValue;
}

struct Engine_GetOnlineGameInterface_Parms
{
	class UOnlineGameInterface*                        ReturnValue;                                      		// 0x000000 (0x0008)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000008 (0x0004)              
};

class UOnlineGameInterface* AGameReplicationInfo::GetOnlineGameInterface()
{
	static UFieldFunc* pFnGetOnlineGameInterface = NULL;
	if(!pFnGetOnlineGameInterface)
		pFnGetOnlineGameInterface = UObject::FindFunction("Function Engine.GameReplicationInfo.GetOnlineGameInterface");

	Engine_GetOnlineGameInterface_Parms GetOnlineGameInterface_Parms;
	ProcessEvent(pFnGetOnlineGameInterface,NULL,&GetOnlineGameInterface_Parms,NULL);
	return GetOnlineGameInterface_Parms.ReturnValue;
}

struct Engine_AddPRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void AGameReplicationInfo::AddPRI(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnAddPRI = NULL;
	if(!pFnAddPRI)
		pFnAddPRI = UObject::FindFunction("Function Engine.GameReplicationInfo.AddPRI");

	Engine_AddPRI_Parms AddPRI_Parms;
	AddPRI_Parms.PRI = PRI;
	ProcessEvent(pFnAddPRI,NULL,&AddPRI_Parms,NULL);
}

struct Engine_InitializeGameDataStore_Parms
{
	//class UDataStoreClient*                            DataStoreManager;                                 		// 0x000000 (0x0004)              
};

void AGameReplicationInfo::InitializeGameDataStore()
{
	static UFieldFunc* pFnInitializeGameDataStore = NULL;
	if(!pFnInitializeGameDataStore)
		pFnInitializeGameDataStore = UObject::FindFunction("Function Engine.GameReplicationInfo.InitializeGameDataStore");

	Engine_InitializeGameDataStore_Parms InitializeGameDataStore_Parms;
	ProcessEvent(pFnInitializeGameDataStore,NULL,&InitializeGameDataStore_Parms,NULL);
}

struct Engine_Timer_Parms
{
};

void AGameReplicationInfo::Timer()
{
	static UFieldFunc* pFnTimer = NULL;
	if(!pFnTimer)
		pFnTimer = UObject::FindFunction("Function Engine.GameReplicationInfo.Timer");

	Engine_Timer_Parms Timer_Parms;
	ProcessEvent(pFnTimer,NULL,&Timer_Parms,NULL);
}

struct Engine_UpdateClientFrameTime_Parms
{
};

void AGameReplicationInfo::UpdateClientFrameTime()
{
	static UFieldFunc* pFnUpdateClientFrameTime = NULL;
	if(!pFnUpdateClientFrameTime)
		pFnUpdateClientFrameTime = UObject::FindFunction("Function Engine.GameReplicationInfo.UpdateClientFrameTime");

	Engine_UpdateClientFrameTime_Parms UpdateClientFrameTime_Parms;
	pFnUpdateClientFrameTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateClientFrameTime,NULL,&UpdateClientFrameTime_Parms,NULL);
	pFnUpdateClientFrameTime->FunctionFlags |= 0x400;
}

struct Engine_DoSysMemStats_Parms
{
};

void AGameReplicationInfo::DoSysMemStats()
{
	static UFieldFunc* pFnDoSysMemStats = NULL;
	if(!pFnDoSysMemStats)
		pFnDoSysMemStats = UObject::FindFunction("Function Engine.GameReplicationInfo.DoSysMemStats");

	Engine_DoSysMemStats_Parms DoSysMemStats_Parms;
	pFnDoSysMemStats->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDoSysMemStats,NULL,&DoSysMemStats_Parms,NULL);
	pFnDoSysMemStats->FunctionFlags |= 0x400;
}

struct Engine_OnlineSession_StartMatch_Parms
{
	//class UOnlineGameInterface*                        GI;                                               		// 0x000000 (0x0008)              
};

void AGameReplicationInfo::OnlineSession_StartMatch()
{
	static UFieldFunc* pFnOnlineSession_StartMatch = NULL;
	if(!pFnOnlineSession_StartMatch)
		pFnOnlineSession_StartMatch = UObject::FindFunction("Function Engine.GameReplicationInfo.OnlineSession_StartMatch");

	Engine_OnlineSession_StartMatch_Parms OnlineSession_StartMatch_Parms;
	ProcessEvent(pFnOnlineSession_StartMatch,NULL,&OnlineSession_StartMatch_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AGameReplicationInfo::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.GameReplicationInfo.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnlineSession_EndMatch_Parms
{
	//class UOnlineGameInterface*                        GI;                                               		// 0x000000 (0x0008)              
};

void AGameReplicationInfo::OnlineSession_EndMatch()
{
	static UFieldFunc* pFnOnlineSession_EndMatch = NULL;
	if(!pFnOnlineSession_EndMatch)
		pFnOnlineSession_EndMatch = UObject::FindFunction("Function Engine.GameReplicationInfo.OnlineSession_EndMatch");

	Engine_OnlineSession_EndMatch_Parms OnlineSession_EndMatch_Parms;
	ProcessEvent(pFnOnlineSession_EndMatch,NULL,&OnlineSession_EndMatch_Parms,NULL);
}

struct Engine_OnSameTeam_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	class AActor*                                      B;                                                		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AGameReplicationInfo::OnSameTeam(class AActor* A,class AActor* B)
{
	static UFieldFunc* pFnOnSameTeam = NULL;
	if(!pFnOnSameTeam)
		pFnOnSameTeam = UObject::FindFunction("Function Engine.GameReplicationInfo.OnSameTeam");

	Engine_OnSameTeam_Parms OnSameTeam_Parms;
	OnSameTeam_Parms.A = A;
	OnSameTeam_Parms.B = B;
	pFnOnSameTeam->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnSameTeam,NULL,&OnSameTeam_Parms,NULL);
	pFnOnSameTeam->FunctionFlags |= 0x400;
	return OnSameTeam_Parms.ReturnValue;
}

struct Engine_AllocateEngineDebugManager_Parms
{
};

void AGameReplicationInfo::AllocateEngineDebugManager()
{
	static UFieldFunc* pFnAllocateEngineDebugManager = NULL;
	if(!pFnAllocateEngineDebugManager)
		pFnAllocateEngineDebugManager = UObject::FindFunction("Function Engine.GameReplicationInfo.AllocateEngineDebugManager");

	Engine_AllocateEngineDebugManager_Parms AllocateEngineDebugManager_Parms;
	pFnAllocateEngineDebugManager->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllocateEngineDebugManager,NULL,&AllocateEngineDebugManager_Parms,NULL);
	pFnAllocateEngineDebugManager->FunctionFlags |= 0x400;
}

struct Engine_IsMultiplayerGame_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameReplicationInfo::IsMultiplayerGame()
{
	static UFieldFunc* pFnIsMultiplayerGame = NULL;
	if(!pFnIsMultiplayerGame)
		pFnIsMultiplayerGame = UObject::FindFunction("Function Engine.GameReplicationInfo.IsMultiplayerGame");

	Engine_IsMultiplayerGame_Parms IsMultiplayerGame_Parms;
	ProcessEvent(pFnIsMultiplayerGame,NULL,&IsMultiplayerGame_Parms,NULL);
	return IsMultiplayerGame_Parms.ReturnValue;
}

struct Engine_IsCoopMultiplayerGame_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameReplicationInfo::IsCoopMultiplayerGame()
{
	static UFieldFunc* pFnIsCoopMultiplayerGame = NULL;
	if(!pFnIsCoopMultiplayerGame)
		pFnIsCoopMultiplayerGame = UObject::FindFunction("Function Engine.GameReplicationInfo.IsCoopMultiplayerGame");

	Engine_IsCoopMultiplayerGame_Parms IsCoopMultiplayerGame_Parms;
	ProcessEvent(pFnIsCoopMultiplayerGame,NULL,&IsCoopMultiplayerGame_Parms,NULL);
	return IsCoopMultiplayerGame_Parms.ReturnValue;
}

struct Engine_FinishedBlockedLoads_Parms
{
};

void AGameReplicationInfo::FinishedBlockedLoads()
{
	static UFieldFunc* pFnFinishedBlockedLoads = NULL;
	if(!pFnFinishedBlockedLoads)
		pFnFinishedBlockedLoads = UObject::FindFunction("Function Engine.GameReplicationInfo.FinishedBlockedLoads");

	Engine_FinishedBlockedLoads_Parms FinishedBlockedLoads_Parms;
	ProcessEvent(pFnFinishedBlockedLoads,NULL,&FinishedBlockedLoads_Parms,NULL);
}

struct Engine_GetPRIArray_Parms
{
	TArray<class APlayerReplicationInfo*>              pris;                                             		// 0x000000 (0x000C)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
	//int                                                Num;                                              		// 0x000010 (0x0004)              
};

void AGameReplicationInfo::GetPRIArray(TArray<class APlayerReplicationInfo*>* pris)
{
	static UFieldFunc* pFnGetPRIArray = NULL;
	if(!pFnGetPRIArray)
		pFnGetPRIArray = UObject::FindFunction("Function Engine.GameReplicationInfo.GetPRIArray");

	Engine_GetPRIArray_Parms GetPRIArray_Parms;
	ProcessEvent(pFnGetPRIArray,NULL,&GetPRIArray_Parms,NULL);
	if(pris)
		memcpy(pris,&GetPRIArray_Parms.pris,0xC);
}

struct Engine_PreventPause_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameReplicationInfo::PreventPause()
{
	static UFieldFunc* pFnPreventPause = NULL;
	if(!pFnPreventPause)
		pFnPreventPause = UObject::FindFunction("Function Engine.GameReplicationInfo.PreventPause");

	Engine_PreventPause_Parms PreventPause_Parms;
	ProcessEvent(pFnPreventPause,NULL,&PreventPause_Parms,NULL);
	return PreventPause_Parms.ReturnValue;
}

struct Engine_CleanupGameDataStore_Parms
{
};

void AGameReplicationInfo::CleanupGameDataStore()
{
	static UFieldFunc* pFnCleanupGameDataStore = NULL;
	if(!pFnCleanupGameDataStore)
		pFnCleanupGameDataStore = UObject::FindFunction("Function Engine.GameReplicationInfo.CleanupGameDataStore");

	Engine_CleanupGameDataStore_Parms CleanupGameDataStore_Parms;
	ProcessEvent(pFnCleanupGameDataStore,NULL,&CleanupGameDataStore_Parms,NULL);
}

struct Engine_ShouldShowGore_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameReplicationInfo::ShouldShowGore()
{
	static UFieldFunc* pFnShouldShowGore = NULL;
	if(!pFnShouldShowGore)
		pFnShouldShowGore = UObject::FindFunction("Function Engine.GameReplicationInfo.ShouldShowGore");

	Engine_ShouldShowGore_Parms ShouldShowGore_Parms;
	ProcessEvent(pFnShouldShowGore,NULL,&ShouldShowGore_Parms,NULL);
	return ShouldShowGore_Parms.ReturnValue;
}

struct Engine_GetSysMemStatsInterval_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AGameReplicationInfo::GetSysMemStatsInterval()
{
	static UFieldFunc* pFnGetSysMemStatsInterval = NULL;
	if(!pFnGetSysMemStatsInterval)
		pFnGetSysMemStatsInterval = UObject::FindFunction("Function Engine.GameReplicationInfo.GetSysMemStatsInterval");

	Engine_GetSysMemStatsInterval_Parms GetSysMemStatsInterval_Parms;
	pFnGetSysMemStatsInterval->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSysMemStatsInterval,NULL,&GetSysMemStatsInterval_Parms,NULL);
	pFnGetSysMemStatsInterval->FunctionFlags |= 0x400;
	return GetSysMemStatsInterval_Parms.ReturnValue;
}

struct Engine_RemovePRI_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void AGameReplicationInfo::RemovePRI(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnRemovePRI = NULL;
	if(!pFnRemovePRI)
		pFnRemovePRI = UObject::FindFunction("Function Engine.GameReplicationInfo.RemovePRI");

	Engine_RemovePRI_Parms RemovePRI_Parms;
	RemovePRI_Parms.PRI = PRI;
	ProcessEvent(pFnRemovePRI,NULL,&RemovePRI_Parms,NULL);
}

struct Engine_SortPRIArray_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//int                                                J;                                                		// 0x000004 (0x0004)              
	//class APlayerReplicationInfo*                      P1;                                               		// 0x000008 (0x0004)              
	//class APlayerReplicationInfo*                      P2;                                               		// 0x00000C (0x0004)              
};

void AGameReplicationInfo::SortPRIArray()
{
	static UFieldFunc* pFnSortPRIArray = NULL;
	if(!pFnSortPRIArray)
		pFnSortPRIArray = UObject::FindFunction("Function Engine.GameReplicationInfo.SortPRIArray");

	Engine_SortPRIArray_Parms SortPRIArray_Parms;
	ProcessEvent(pFnSortPRIArray,NULL,&SortPRIArray_Parms,NULL);
}

struct Engine_FindPlayerByID_Parms
{
	int                                                PlayerID;                                         		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
};

class APlayerReplicationInfo* AGameReplicationInfo::FindPlayerByID(int PlayerID)
{
	static UFieldFunc* pFnFindPlayerByID = NULL;
	if(!pFnFindPlayerByID)
		pFnFindPlayerByID = UObject::FindFunction("Function Engine.GameReplicationInfo.FindPlayerByID");

	Engine_FindPlayerByID_Parms FindPlayerByID_Parms;
	FindPlayerByID_Parms.PlayerID = PlayerID;
	ProcessEvent(pFnFindPlayerByID,NULL,&FindPlayerByID_Parms,NULL);
	return FindPlayerByID_Parms.ReturnValue;
}

struct Engine_OnlineSession_EndSession_Parms
{
	unsigned long                                      bForced : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineGameInterface*                        GI;                                               		// 0x000004 (0x0008)              
};

void AGameReplicationInfo::OnlineSession_EndSession(bool bForced)
{
	static UFieldFunc* pFnOnlineSession_EndSession = NULL;
	if(!pFnOnlineSession_EndSession)
		pFnOnlineSession_EndSession = UObject::FindFunction("Function Engine.GameReplicationInfo.OnlineSession_EndSession");

	Engine_OnlineSession_EndSession_Parms OnlineSession_EndSession_Parms;
	OnlineSession_EndSession_Parms.bForced = bForced;
	ProcessEvent(pFnOnlineSession_EndSession,NULL,&OnlineSession_EndSession_Parms,NULL);
}

struct Engine_UpdateTeamDataProvider_Parms
{
	//class UCurrentGameDataStore*                       CurrentGameData;                                  		// 0x000000 (0x0004)              
};

void APlayerReplicationInfo::UpdateTeamDataProvider()
{
	static UFieldFunc* pFnUpdateTeamDataProvider = NULL;
	if(!pFnUpdateTeamDataProvider)
		pFnUpdateTeamDataProvider = UObject::FindFunction("Function Engine.PlayerReplicationInfo.UpdateTeamDataProvider");

	Engine_UpdateTeamDataProvider_Parms UpdateTeamDataProvider_Parms;
	ProcessEvent(pFnUpdateTeamDataProvider,NULL,&UpdateTeamDataProvider_Parms,NULL);
}

struct Engine_IsLocalPlayerPRI_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
	//class ULocalPlayer*                                LP;                                               		// 0x000008 (0x0004)              
};

bool APlayerReplicationInfo::IsLocalPlayerPRI()
{
	static UFieldFunc* pFnIsLocalPlayerPRI = NULL;
	if(!pFnIsLocalPlayerPRI)
		pFnIsLocalPlayerPRI = UObject::FindFunction("Function Engine.PlayerReplicationInfo.IsLocalPlayerPRI");

	Engine_IsLocalPlayerPRI_Parms IsLocalPlayerPRI_Parms;
	ProcessEvent(pFnIsLocalPlayerPRI,NULL,&IsLocalPlayerPRI_Parms,NULL);
	return IsLocalPlayerPRI_Parms.ReturnValue;
}

struct Engine_Duplicate_Parms
{
	class APlayerReplicationInfo*                      ReturnValue;                                      		// 0x000000 (0x0004)              
	//class APlayerReplicationInfo*                      NewPRI;                                           		// 0x000004 (0x0004)              
};

class APlayerReplicationInfo* APlayerReplicationInfo::Duplicate()
{
	static UFieldFunc* pFnDuplicate = NULL;
	if(!pFnDuplicate)
		pFnDuplicate = UObject::FindFunction("Function Engine.PlayerReplicationInfo.Duplicate");

	Engine_Duplicate_Parms Duplicate_Parms;
	ProcessEvent(pFnDuplicate,NULL,&Duplicate_Parms,NULL);
	return Duplicate_Parms.ReturnValue;
}

struct Engine_OverrideWith_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
};

void APlayerReplicationInfo::OverrideWith(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnOverrideWith = NULL;
	if(!pFnOverrideWith)
		pFnOverrideWith = UObject::FindFunction("Function Engine.PlayerReplicationInfo.OverrideWith");

	Engine_OverrideWith_Parms OverrideWith_Parms;
	OverrideWith_Parms.PRI = PRI;
	ProcessEvent(pFnOverrideWith,NULL,&OverrideWith_Parms,NULL);
}

struct Engine_GetCurrentGameDS_Parms
{
	class UCurrentGameDataStore*                       ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UDataStoreClient*                            DSClient;                                         		// 0x000004 (0x0004)              
	//class UCurrentGameDataStore*                       Result;                                           		// 0x000008 (0x0004)              
};

class UCurrentGameDataStore* APlayerReplicationInfo::GetCurrentGameDS()
{
	static UFieldFunc* pFnGetCurrentGameDS = NULL;
	if(!pFnGetCurrentGameDS)
		pFnGetCurrentGameDS = UObject::FindFunction("Function Engine.PlayerReplicationInfo.GetCurrentGameDS");

	Engine_GetCurrentGameDS_Parms GetCurrentGameDS_Parms;
	ProcessEvent(pFnGetCurrentGameDS,NULL,&GetCurrentGameDS_Parms,NULL);
	return GetCurrentGameDS_Parms.ReturnValue;
}

struct Engine_CopyProperties_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
};

void APlayerReplicationInfo::CopyProperties(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnCopyProperties = NULL;
	if(!pFnCopyProperties)
		pFnCopyProperties = UObject::FindFunction("Function Engine.PlayerReplicationInfo.CopyProperties");

	Engine_CopyProperties_Parms CopyProperties_Parms;
	CopyProperties_Parms.PRI = PRI;
	ProcessEvent(pFnCopyProperties,NULL,&CopyProperties_Parms,NULL);
}

struct Engine_UpdatePlayerDataProvider_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	//class UCurrentGameDataStore*                       CurrentGameData;                                  		// 0x000008 (0x0004)              
	//class UPlayerDataProvider*                         DataProvider;                                     		// 0x00000C (0x0004)              
	//class UTeamDataProvider*                           TeamProvider;                                     		// 0x000010 (0x0004)              
};

void APlayerReplicationInfo::UpdatePlayerDataProvider(struct FName PropertyName)
{
	static UFieldFunc* pFnUpdatePlayerDataProvider = NULL;
	if(!pFnUpdatePlayerDataProvider)
		pFnUpdatePlayerDataProvider = UObject::FindFunction("Function Engine.PlayerReplicationInfo.UpdatePlayerDataProvider");

	Engine_UpdatePlayerDataProvider_Parms UpdatePlayerDataProvider_Parms;
	memcpy(&UpdatePlayerDataProvider_Parms.PropertyName,&PropertyName,0x8);
	ProcessEvent(pFnUpdatePlayerDataProvider,NULL,&UpdatePlayerDataProvider_Parms,NULL);
}

struct Engine_GetLocationName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
	//struct FString                                     LocationString;                                   		// 0x00000C (0x000C)              
};

struct FString APlayerReplicationInfo::GetLocationName()
{
	static UFieldFunc* pFnGetLocationName = NULL;
	if(!pFnGetLocationName)
		pFnGetLocationName = UObject::FindFunction("Function Engine.PlayerReplicationInfo.GetLocationName");

	Engine_GetLocationName_Parms GetLocationName_Parms;
	ProcessEvent(pFnGetLocationName,NULL,&GetLocationName_Parms,NULL);
	return GetLocationName_Parms.ReturnValue;
}

struct Engine_Destroyed_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//struct FUniqueNetId                                ZeroId;                                           		// 0x000008 (0x0008)              
};

void APlayerReplicationInfo::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.PlayerReplicationInfo.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_SetPlayerAlias_Parms
{
	struct FString                                     NewAlias;                                         		// 0x000000 (0x000C)              
};

void APlayerReplicationInfo::SetPlayerAlias(struct FString NewAlias)
{
	static UFieldFunc* pFnSetPlayerAlias = NULL;
	if(!pFnSetPlayerAlias)
		pFnSetPlayerAlias = UObject::FindFunction("Function Engine.PlayerReplicationInfo.SetPlayerAlias");

	Engine_SetPlayerAlias_Parms SetPlayerAlias_Parms;
	memcpy(&SetPlayerAlias_Parms.NewAlias,&NewAlias,0xC);
	ProcessEvent(pFnSetPlayerAlias,NULL,&SetPlayerAlias_Parms,NULL);
}

struct Engine_SetPlayerName_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void APlayerReplicationInfo::SetPlayerName(struct FString S)
{
	static UFieldFunc* pFnSetPlayerName = NULL;
	if(!pFnSetPlayerName)
		pFnSetPlayerName = UObject::FindFunction("Function Engine.PlayerReplicationInfo.SetPlayerName");

	Engine_SetPlayerName_Parms SetPlayerName_Parms;
	memcpy(&SetPlayerName_Parms.S,&S,0xC);
	ProcessEvent(pFnSetPlayerName,NULL,&SetPlayerName_Parms,NULL);
}

struct Engine_AreUniqueNetIdsEqual_Parms
{
	class APlayerReplicationInfo*                      OtherPRI;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APlayerReplicationInfo::AreUniqueNetIdsEqual(class APlayerReplicationInfo* OtherPRI)
{
	static UFieldFunc* pFnAreUniqueNetIdsEqual = NULL;
	if(!pFnAreUniqueNetIdsEqual)
		pFnAreUniqueNetIdsEqual = UObject::FindFunction("Function Engine.PlayerReplicationInfo.AreUniqueNetIdsEqual");

	Engine_AreUniqueNetIdsEqual_Parms AreUniqueNetIdsEqual_Parms;
	AreUniqueNetIdsEqual_Parms.OtherPRI = OtherPRI;
	pFnAreUniqueNetIdsEqual->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAreUniqueNetIdsEqual,NULL,&AreUniqueNetIdsEqual_Parms,NULL);
	pFnAreUniqueNetIdsEqual->FunctionFlags |= 0x400;
	return AreUniqueNetIdsEqual_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x00000C (0x0004)              
	//int                                                WelcomeMessageNum;                                		// 0x000010 (0x0004)              
	//class AActor*                                      A;                                                		// 0x000014 (0x0004)              
	//class UOnlineSubsystem*                            Online;                                           		// 0x000018 (0x0004)              
};

void APlayerReplicationInfo::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.PlayerReplicationInfo.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_GetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char APlayerReplicationInfo::GetTeamNum()
{
	static UFieldFunc* pFnGetTeamNum = NULL;
	if(!pFnGetTeamNum)
		pFnGetTeamNum = UObject::FindFunction("Function Engine.PlayerReplicationInfo.GetTeamNum");

	Engine_GetTeamNum_Parms GetTeamNum_Parms;
	pFnGetTeamNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTeamNum,NULL,&GetTeamNum_Parms,NULL);
	pFnGetTeamNum->FunctionFlags |= 0x400;
	return GetTeamNum_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void APlayerReplicationInfo::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.PlayerReplicationInfo.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_IsInvalidName_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class ULocalPlayer*                                LocPlayer;                                        		// 0x000004 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000008 (0x0004)              
	//struct FString                                     ProfileName;                                      		// 0x00000C (0x000C)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000018 (0x0004)              
};

bool APlayerReplicationInfo::IsInvalidName()
{
	static UFieldFunc* pFnIsInvalidName = NULL;
	if(!pFnIsInvalidName)
		pFnIsInvalidName = UObject::FindFunction("Function Engine.PlayerReplicationInfo.IsInvalidName");

	Engine_IsInvalidName_Parms IsInvalidName_Parms;
	ProcessEvent(pFnIsInvalidName,NULL,&IsInvalidName_Parms,NULL);
	return IsInvalidName_Parms.ReturnValue;
}

struct Engine_SetWaitingPlayer_Parms
{
	unsigned long                                      B : 1;                                            		// 0x000000 (0x0004) [0x00000001] 
};

void APlayerReplicationInfo::SetWaitingPlayer(bool B)
{
	static UFieldFunc* pFnSetWaitingPlayer = NULL;
	if(!pFnSetWaitingPlayer)
		pFnSetWaitingPlayer = UObject::FindFunction("Function Engine.PlayerReplicationInfo.SetWaitingPlayer");

	Engine_SetWaitingPlayer_Parms SetWaitingPlayer_Parms;
	SetWaitingPlayer_Parms.B = B;
	ProcessEvent(pFnSetWaitingPlayer,NULL,&SetWaitingPlayer_Parms,NULL);
}

struct Engine_ClientInitialize_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	//class AActor*                                      A;                                                		// 0x000004 (0x0004)              
};

void APlayerReplicationInfo::ClientInitialize(class AController* C)
{
	static UFieldFunc* pFnClientInitialize = NULL;
	if(!pFnClientInitialize)
		pFnClientInitialize = UObject::FindFunction("Function Engine.PlayerReplicationInfo.ClientInitialize");

	Engine_ClientInitialize_Parms ClientInitialize_Parms;
	ClientInitialize_Parms.C = C;
	ProcessEvent(pFnClientInitialize,NULL,&ClientInitialize_Parms,NULL);
}

struct Engine_Timer_Parms
{
};

void APlayerReplicationInfo::Timer()
{
	static UFieldFunc* pFnTimer = NULL;
	if(!pFnTimer)
		pFnTimer = UObject::FindFunction("Function Engine.PlayerReplicationInfo.Timer");

	Engine_Timer_Parms Timer_Parms;
	ProcessEvent(pFnTimer,NULL,&Timer_Parms,NULL);
}

struct Engine_GetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerReplicationInfo::GetHumanReadableName()
{
	static UFieldFunc* pFnGetHumanReadableName = NULL;
	if(!pFnGetHumanReadableName)
		pFnGetHumanReadableName = UObject::FindFunction("Function Engine.PlayerReplicationInfo.GetHumanReadableName");

	Engine_GetHumanReadableName_Parms GetHumanReadableName_Parms;
	ProcessEvent(pFnGetHumanReadableName,NULL,&GetHumanReadableName_Parms,NULL);
	return GetHumanReadableName_Parms.ReturnValue;
}

struct Engine_NotifyLocalPlayerTeamReceived_Parms
{
};

void APlayerReplicationInfo::NotifyLocalPlayerTeamReceived()
{
	static UFieldFunc* pFnNotifyLocalPlayerTeamReceived = NULL;
	if(!pFnNotifyLocalPlayerTeamReceived)
		pFnNotifyLocalPlayerTeamReceived = UObject::FindFunction("Function Engine.PlayerReplicationInfo.NotifyLocalPlayerTeamReceived");

	Engine_NotifyLocalPlayerTeamReceived_Parms NotifyLocalPlayerTeamReceived_Parms;
	ProcessEvent(pFnNotifyLocalPlayerTeamReceived,NULL,&NotifyLocalPlayerTeamReceived_Parms,NULL);
}

struct Engine_ShouldBroadCastWelcomeMessage_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerReplicationInfo::ShouldBroadCastWelcomeMessage()
{
	static UFieldFunc* pFnShouldBroadCastWelcomeMessage = NULL;
	if(!pFnShouldBroadCastWelcomeMessage)
		pFnShouldBroadCastWelcomeMessage = UObject::FindFunction("Function Engine.PlayerReplicationInfo.ShouldBroadCastWelcomeMessage");

	Engine_ShouldBroadCastWelcomeMessage_Parms ShouldBroadCastWelcomeMessage_Parms;
	ProcessEvent(pFnShouldBroadCastWelcomeMessage,NULL,&ShouldBroadCastWelcomeMessage_Parms,NULL);
	return ShouldBroadCastWelcomeMessage_Parms.ReturnValue;
}

struct Engine_Reset_Parms
{
};

void APlayerReplicationInfo::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.PlayerReplicationInfo.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              YL;                                               		// 0x000004 (0x0004)              
	float                                              YPos;                                             		// 0x000008 (0x0004)              
	//float                                              XS;                                               		// 0x00000C (0x0004)              
	//float                                              YS;                                               		// 0x000010 (0x0004)              
};

void APlayerReplicationInfo::DisplayDebug(class AHUD* HUD,float* YL,float* YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.PlayerReplicationInfo.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(YL)
		*YL = DisplayDebug_Parms.YL;
	if(YPos)
		*YPos = DisplayDebug_Parms.YPos;
}

struct Engine_IsPrimaryPlayer_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APlayerReplicationInfo::IsPrimaryPlayer()
{
	static UFieldFunc* pFnIsPrimaryPlayer = NULL;
	if(!pFnIsPrimaryPlayer)
		pFnIsPrimaryPlayer = UObject::FindFunction("Function Engine.PlayerReplicationInfo.IsPrimaryPlayer");

	Engine_IsPrimaryPlayer_Parms IsPrimaryPlayer_Parms;
	ProcessEvent(pFnIsPrimaryPlayer,NULL,&IsPrimaryPlayer_Parms,NULL);
	return IsPrimaryPlayer_Parms.ReturnValue;
}

struct Engine_SeamlessTravelTo_Parms
{
	class APlayerReplicationInfo*                      NewPRI;                                           		// 0x000000 (0x0004)              
};

void APlayerReplicationInfo::SeamlessTravelTo(class APlayerReplicationInfo* NewPRI)
{
	static UFieldFunc* pFnSeamlessTravelTo = NULL;
	if(!pFnSeamlessTravelTo)
		pFnSeamlessTravelTo = UObject::FindFunction("Function Engine.PlayerReplicationInfo.SeamlessTravelTo");

	Engine_SeamlessTravelTo_Parms SeamlessTravelTo_Parms;
	SeamlessTravelTo_Parms.NewPRI = NewPRI;
	ProcessEvent(pFnSeamlessTravelTo,NULL,&SeamlessTravelTo_Parms,NULL);
}

struct Engine_BindPlayerOwnerDataProvider_Parms
{
	//class APlayerController*                           PlayerOwner;                                      		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                LP;                                               		// 0x000004 (0x0004)              
	//class UCurrentGameDataStore*                       CurrentGameData;                                  		// 0x000008 (0x0004)              
	//class UPlayerDataProvider*                         DataProvider;                                     		// 0x00000C (0x0004)              
};

void APlayerReplicationInfo::BindPlayerOwnerDataProvider()
{
	static UFieldFunc* pFnBindPlayerOwnerDataProvider = NULL;
	if(!pFnBindPlayerOwnerDataProvider)
		pFnBindPlayerOwnerDataProvider = UObject::FindFunction("Function Engine.PlayerReplicationInfo.BindPlayerOwnerDataProvider");

	Engine_BindPlayerOwnerDataProvider_Parms BindPlayerOwnerDataProvider_Parms;
	ProcessEvent(pFnBindPlayerOwnerDataProvider,NULL,&BindPlayerOwnerDataProvider_Parms,NULL);
}

struct Engine_UpdatePlayerLocation_Parms
{
	//class AVolume*                                     V;                                                		// 0x000000 (0x0004)              
	//class AVolume*                                     Best;                                             		// 0x000004 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
};

void APlayerReplicationInfo::UpdatePlayerLocation()
{
	static UFieldFunc* pFnUpdatePlayerLocation = NULL;
	if(!pFnUpdatePlayerLocation)
		pFnUpdatePlayerLocation = UObject::FindFunction("Function Engine.PlayerReplicationInfo.UpdatePlayerLocation");

	Engine_UpdatePlayerLocation_Parms UpdatePlayerLocation_Parms;
	ProcessEvent(pFnUpdatePlayerLocation,NULL,&UpdatePlayerLocation_Parms,NULL);
}

struct Engine_GetPlayerAlias_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APlayerReplicationInfo::GetPlayerAlias()
{
	static UFieldFunc* pFnGetPlayerAlias = NULL;
	if(!pFnGetPlayerAlias)
		pFnGetPlayerAlias = UObject::FindFunction("Function Engine.PlayerReplicationInfo.GetPlayerAlias");

	Engine_GetPlayerAlias_Parms GetPlayerAlias_Parms;
	pFnGetPlayerAlias->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerAlias,NULL,&GetPlayerAlias_Parms,NULL);
	pFnGetPlayerAlias->FunctionFlags |= 0x400;
	return GetPlayerAlias_Parms.ReturnValue;
}

struct Engine_AddToTeam_Parms
{
	class AController*                                 Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//class AController*                                 P;                                                		// 0x000008 (0x0004)              
	//unsigned long                                      bSuccess : 1;                                     		// 0x00000C (0x0004) [0x00000001] 
};

bool ATeamInfo::AddToTeam(class AController* Other)
{
	static UFieldFunc* pFnAddToTeam = NULL;
	if(!pFnAddToTeam)
		pFnAddToTeam = UObject::FindFunction("Function Engine.TeamInfo.AddToTeam");

	Engine_AddToTeam_Parms AddToTeam_Parms;
	AddToTeam_Parms.Other = Other;
	ProcessEvent(pFnAddToTeam,NULL,&AddToTeam_Parms,NULL);
	return AddToTeam_Parms.ReturnValue;
}

struct Engine_GetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString ATeamInfo::GetHumanReadableName()
{
	static UFieldFunc* pFnGetHumanReadableName = NULL;
	if(!pFnGetHumanReadableName)
		pFnGetHumanReadableName = UObject::FindFunction("Function Engine.TeamInfo.GetHumanReadableName");

	Engine_GetHumanReadableName_Parms GetHumanReadableName_Parms;
	ProcessEvent(pFnGetHumanReadableName,NULL,&GetHumanReadableName_Parms,NULL);
	return GetHumanReadableName_Parms.ReturnValue;
}

struct Engine_GetTextColor_Parms
{
	DWORD                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

DWORD ATeamInfo::GetTextColor()
{
	static UFieldFunc* pFnGetTextColor = NULL;
	if(!pFnGetTextColor)
		pFnGetTextColor = UObject::FindFunction("Function Engine.TeamInfo.GetTextColor");

	Engine_GetTextColor_Parms GetTextColor_Parms;
	ProcessEvent(pFnGetTextColor,NULL,&GetTextColor_Parms,NULL);
	return GetTextColor_Parms.ReturnValue;
}

struct Engine_GetCurrentGameDS_Parms
{
	class UCurrentGameDataStore*                       ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UDataStoreClient*                            DSClient;                                         		// 0x000004 (0x0004)              
	//class UCurrentGameDataStore*                       Result;                                           		// 0x000008 (0x0004)              
};

class UCurrentGameDataStore* ATeamInfo::GetCurrentGameDS()
{
	static UFieldFunc* pFnGetCurrentGameDS = NULL;
	if(!pFnGetCurrentGameDS)
		pFnGetCurrentGameDS = UObject::FindFunction("Function Engine.TeamInfo.GetCurrentGameDS");

	Engine_GetCurrentGameDS_Parms GetCurrentGameDS_Parms;
	ProcessEvent(pFnGetCurrentGameDS,NULL,&GetCurrentGameDS_Parms,NULL);
	return GetCurrentGameDS_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void ATeamInfo::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.TeamInfo.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_RemoveFromTeam_Parms
{
	class AController*                                 Other;                                            		// 0x000000 (0x0004)              
};

void ATeamInfo::RemoveFromTeam(class AController* Other)
{
	static UFieldFunc* pFnRemoveFromTeam = NULL;
	if(!pFnRemoveFromTeam)
		pFnRemoveFromTeam = UObject::FindFunction("Function Engine.TeamInfo.RemoveFromTeam");

	Engine_RemoveFromTeam_Parms RemoveFromTeam_Parms;
	RemoveFromTeam_Parms.Other = Other;
	ProcessEvent(pFnRemoveFromTeam,NULL,&RemoveFromTeam_Parms,NULL);
}

struct Engine_UnbindTeamDataProvider_Parms
{
	//class UCurrentGameDataStore*                       CurrentGameData;                                  		// 0x000000 (0x0004)              
};

void ATeamInfo::UnbindTeamDataProvider()
{
	static UFieldFunc* pFnUnbindTeamDataProvider = NULL;
	if(!pFnUnbindTeamDataProvider)
		pFnUnbindTeamDataProvider = UObject::FindFunction("Function Engine.TeamInfo.UnbindTeamDataProvider");

	Engine_UnbindTeamDataProvider_Parms UnbindTeamDataProvider_Parms;
	ProcessEvent(pFnUnbindTeamDataProvider,NULL,&UnbindTeamDataProvider_Parms,NULL);
}

struct Engine_GetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char ATeamInfo::GetTeamNum()
{
	static UFieldFunc* pFnGetTeamNum = NULL;
	if(!pFnGetTeamNum)
		pFnGetTeamNum = UObject::FindFunction("Function Engine.TeamInfo.GetTeamNum");

	Engine_GetTeamNum_Parms GetTeamNum_Parms;
	pFnGetTeamNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTeamNum,NULL,&GetTeamNum_Parms,NULL);
	pFnGetTeamNum->FunctionFlags |= 0x400;
	return GetTeamNum_Parms.ReturnValue;
}

struct Engine_GetHUDColor_Parms
{
	DWORD                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

DWORD ATeamInfo::GetHUDColor()
{
	static UFieldFunc* pFnGetHUDColor = NULL;
	if(!pFnGetHUDColor)
		pFnGetHUDColor = UObject::FindFunction("Function Engine.TeamInfo.GetHUDColor");

	Engine_GetHUDColor_Parms GetHUDColor_Parms;
	ProcessEvent(pFnGetHUDColor,NULL,&GetHUDColor_Parms,NULL);
	return GetHUDColor_Parms.ReturnValue;
}

struct Engine_Destroyed_Parms
{
	//class ATeamInfo*                                   OtherTeam;                                        		// 0x000000 (0x0004)              
};

void ATeamInfo::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.TeamInfo.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_GetAddressURL_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AWorldInfo::GetAddressURL()
{
	static UFieldFunc* pFnGetAddressURL = NULL;
	if(!pFnGetAddressURL)
		pFnGetAddressURL = UObject::FindFunction("Function Engine.WorldInfo.GetAddressURL");

	Engine_GetAddressURL_Parms GetAddressURL_Parms;
	pFnGetAddressURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAddressURL,NULL,&GetAddressURL_Parms,NULL);
	pFnGetAddressURL->FunctionFlags |= 0x400;
	return GetAddressURL_Parms.ReturnValue;
}

struct Engine_ForceGarbageCollection_Parms
{
	unsigned long                                      bFullPurge : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void AWorldInfo::ForceGarbageCollection(bool bFullPurge)
{
	static UFieldFunc* pFnForceGarbageCollection = NULL;
	if(!pFnForceGarbageCollection)
		pFnForceGarbageCollection = UObject::FindFunction("Function Engine.WorldInfo.ForceGarbageCollection");

	Engine_ForceGarbageCollection_Parms ForceGarbageCollection_Parms;
	ForceGarbageCollection_Parms.bFullPurge = bFullPurge;
	pFnForceGarbageCollection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceGarbageCollection,NULL,&ForceGarbageCollection_Parms,NULL);
	pFnForceGarbageCollection->FunctionFlags |= 0x400;
}

struct Engine_ToggleHostMigration_Parms
{
	unsigned long                                      bEnabled : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
};

void AWorldInfo::ToggleHostMigration(bool bEnabled)
{
	static UFieldFunc* pFnToggleHostMigration = NULL;
	if(!pFnToggleHostMigration)
		pFnToggleHostMigration = UObject::FindFunction("Function Engine.WorldInfo.ToggleHostMigration");

	Engine_ToggleHostMigration_Parms ToggleHostMigration_Parms;
	ToggleHostMigration_Parms.bEnabled = bEnabled;
	pFnToggleHostMigration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnToggleHostMigration,NULL,&ToggleHostMigration_Parms,NULL);
	pFnToggleHostMigration->FunctionFlags |= 0x400;
}

struct Engine_AllNavigationPoints_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class ANavigationPoint*                            N;                                                		// 0x000004 (0x0004)              
};

void AWorldInfo::AllNavigationPoints(class UClass* BaseClass,class ANavigationPoint** N)
{
	static UFieldFunc* pFnAllNavigationPoints = NULL;
	if(!pFnAllNavigationPoints)
		pFnAllNavigationPoints = UObject::FindFunction("Function Engine.WorldInfo.AllNavigationPoints");

	Engine_AllNavigationPoints_Parms AllNavigationPoints_Parms;
	AllNavigationPoints_Parms.BaseClass = BaseClass;
	pFnAllNavigationPoints->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllNavigationPoints,NULL,&AllNavigationPoints_Parms,NULL);
	pFnAllNavigationPoints->FunctionFlags |= 0x400;
	if(N)
		*N = AllNavigationPoints_Parms.N;
}

struct Engine_GetMapName_Parms
{
	unsigned long                                      bIncludePrefix : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString AWorldInfo::GetMapName(bool bIncludePrefix)
{
	static UFieldFunc* pFnGetMapName = NULL;
	if(!pFnGetMapName)
		pFnGetMapName = UObject::FindFunction("Function Engine.WorldInfo.GetMapName");

	Engine_GetMapName_Parms GetMapName_Parms;
	GetMapName_Parms.bIncludePrefix = bIncludePrefix;
	pFnGetMapName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMapName,NULL,&GetMapName_Parms,NULL);
	pFnGetMapName->FunctionFlags |= 0x400;
	return GetMapName_Parms.ReturnValue;
}

struct Engine_GetDetailMode_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char AWorldInfo::GetDetailMode()
{
	static UFieldFunc* pFnGetDetailMode = NULL;
	if(!pFnGetDetailMode)
		pFnGetDetailMode = UObject::FindFunction("Function Engine.WorldInfo.GetDetailMode");

	Engine_GetDetailMode_Parms GetDetailMode_Parms;
	pFnGetDetailMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDetailMode,NULL,&GetDetailMode_Parms,NULL);
	pFnGetDetailMode->FunctionFlags |= 0x400;
	return GetDetailMode_Parms.ReturnValue;
}

struct Engine_NavigationPointCheck_Parms
{
	FVector3                                           Point;                                            		// 0x000000 (0x000C)              
	FVector3                                           Extent;                                           		// 0x00000C (0x000C)              
	TArray<class ANavigationPoint*>                    Navs;                                             		// 0x000018 (0x000C)              
	TArray<class UReachSpec*>                          Specs;                                            		// 0x000024 (0x000C)              
};

void AWorldInfo::NavigationPointCheck(FVector3 Point,FVector3 Extent,TArray<class ANavigationPoint*>* Navs,TArray<class UReachSpec*>* Specs)
{
	static UFieldFunc* pFnNavigationPointCheck = NULL;
	if(!pFnNavigationPointCheck)
		pFnNavigationPointCheck = UObject::FindFunction("Function Engine.WorldInfo.NavigationPointCheck");

	Engine_NavigationPointCheck_Parms NavigationPointCheck_Parms;
	memcpy(&NavigationPointCheck_Parms.Point,&Point,0xC);
	memcpy(&NavigationPointCheck_Parms.Extent,&Extent,0xC);
	pFnNavigationPointCheck->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNavigationPointCheck,NULL,&NavigationPointCheck_Parms,NULL);
	pFnNavigationPointCheck->FunctionFlags |= 0x400;
	if(Navs)
		memcpy(Navs,&NavigationPointCheck_Parms.Navs,0xC);
	if(Specs)
		memcpy(Specs,&NavigationPointCheck_Parms.Specs,0xC);
}

struct Engine_SetMapInfo_Parms
{
	class UMapInfo*                                    NewMapInfo;                                       		// 0x000000 (0x0004)              
};

void AWorldInfo::SetMapInfo(class UMapInfo* NewMapInfo)
{
	static UFieldFunc* pFnSetMapInfo = NULL;
	if(!pFnSetMapInfo)
		pFnSetMapInfo = UObject::FindFunction("Function Engine.WorldInfo.SetMapInfo");

	Engine_SetMapInfo_Parms SetMapInfo_Parms;
	SetMapInfo_Parms.NewMapInfo = NewMapInfo;
	pFnSetMapInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMapInfo,NULL,&SetMapInfo_Parms,NULL);
	pFnSetMapInfo->FunctionFlags |= 0x400;
}

struct Engine_IsInSeamlessTravel_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsInSeamlessTravel()
{
	static UFieldFunc* pFnIsInSeamlessTravel = NULL;
	if(!pFnIsInSeamlessTravel)
		pFnIsInSeamlessTravel = UObject::FindFunction("Function Engine.WorldInfo.IsInSeamlessTravel");

	Engine_IsInSeamlessTravel_Parms IsInSeamlessTravel_Parms;
	pFnIsInSeamlessTravel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsInSeamlessTravel,NULL,&IsInSeamlessTravel_Parms,NULL);
	pFnIsInSeamlessTravel->FunctionFlags |= 0x400;
	return IsInSeamlessTravel_Parms.ReturnValue;
}

struct Engine_CanBeginHostMigration_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

bool AWorldInfo::CanBeginHostMigration()
{
	static UFieldFunc* pFnCanBeginHostMigration = NULL;
	if(!pFnCanBeginHostMigration)
		pFnCanBeginHostMigration = UObject::FindFunction("Function Engine.WorldInfo.CanBeginHostMigration");

	Engine_CanBeginHostMigration_Parms CanBeginHostMigration_Parms;
	ProcessEvent(pFnCanBeginHostMigration,NULL,&CanBeginHostMigration_Parms,NULL);
	return CanBeginHostMigration_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AWorldInfo::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.WorldInfo.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_BeginHostMigration_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::BeginHostMigration()
{
	static UFieldFunc* pFnBeginHostMigration = NULL;
	if(!pFnBeginHostMigration)
		pFnBeginHostMigration = UObject::FindFunction("Function Engine.WorldInfo.BeginHostMigration");

	Engine_BeginHostMigration_Parms BeginHostMigration_Parms;
	pFnBeginHostMigration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBeginHostMigration,NULL,&BeginHostMigration_Parms,NULL);
	pFnBeginHostMigration->FunctionFlags |= 0x400;
	return BeginHostMigration_Parms.ReturnValue;
}

struct Engine_GetMapInfo_Parms
{
	class UMapInfo*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UMapInfo* AWorldInfo::GetMapInfo()
{
	static UFieldFunc* pFnGetMapInfo = NULL;
	if(!pFnGetMapInfo)
		pFnGetMapInfo = UObject::FindFunction("Function Engine.WorldInfo.GetMapInfo");

	Engine_GetMapInfo_Parms GetMapInfo_Parms;
	pFnGetMapInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMapInfo,NULL,&GetMapInfo_Parms,NULL);
	pFnGetMapInfo->FunctionFlags |= 0x400;
	return GetMapInfo_Parms.ReturnValue;
}

struct Engine_SetWorldState_Parms
{
	unsigned char                                      eNewState;                                        		// 0x000000 (0x0001)              
};

void AWorldInfo::SetWorldState(unsigned char eNewState)
{
	static UFieldFunc* pFnSetWorldState = NULL;
	if(!pFnSetWorldState)
		pFnSetWorldState = UObject::FindFunction("Function Engine.WorldInfo.SetWorldState");

	Engine_SetWorldState_Parms SetWorldState_Parms;
	SetWorldState_Parms.eNewState = eNewState;
	pFnSetWorldState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetWorldState,NULL,&SetWorldState_Parms,NULL);
	pFnSetWorldState->FunctionFlags |= 0x400;
}

struct Engine_VerifyNavList_Parms
{
};

void AWorldInfo::VerifyNavList()
{
	static UFieldFunc* pFnVerifyNavList = NULL;
	if(!pFnVerifyNavList)
		pFnVerifyNavList = UObject::FindFunction("Function Engine.WorldInfo.VerifyNavList");

	Engine_VerifyNavList_Parms VerifyNavList_Parms;
	pFnVerifyNavList->FunctionFlags |= ~0x400;
	ProcessEvent(pFnVerifyNavList,NULL,&VerifyNavList_Parms,NULL);
	pFnVerifyNavList->FunctionFlags |= 0x400;
}

struct Engine_IsPreparingMapChange_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsPreparingMapChange()
{
	static UFieldFunc* pFnIsPreparingMapChange = NULL;
	if(!pFnIsPreparingMapChange)
		pFnIsPreparingMapChange = UObject::FindFunction("Function Engine.WorldInfo.IsPreparingMapChange");

	Engine_IsPreparingMapChange_Parms IsPreparingMapChange_Parms;
	pFnIsPreparingMapChange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPreparingMapChange,NULL,&IsPreparingMapChange_Parms,NULL);
	pFnIsPreparingMapChange->FunctionFlags |= 0x400;
	return IsPreparingMapChange_Parms.ReturnValue;
}

struct Engine_PrepareMapChange_Parms
{
	TArray<struct FName>                               LevelNames;                                       		// 0x000000 (0x000C)              
};

void AWorldInfo::PrepareMapChange(TArray<struct FName>* LevelNames)
{
	static UFieldFunc* pFnPrepareMapChange = NULL;
	if(!pFnPrepareMapChange)
		pFnPrepareMapChange = UObject::FindFunction("Function Engine.WorldInfo.PrepareMapChange");

	Engine_PrepareMapChange_Parms PrepareMapChange_Parms;
	pFnPrepareMapChange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPrepareMapChange,NULL,&PrepareMapChange_Parms,NULL);
	pFnPrepareMapChange->FunctionFlags |= 0x400;
	if(LevelNames)
		memcpy(LevelNames,&PrepareMapChange_Parms.LevelNames,0xC);
}

struct Engine_DoMemoryTracking_Parms
{
};

void AWorldInfo::DoMemoryTracking()
{
	static UFieldFunc* pFnDoMemoryTracking = NULL;
	if(!pFnDoMemoryTracking)
		pFnDoMemoryTracking = UObject::FindFunction("Function Engine.WorldInfo.DoMemoryTracking");

	Engine_DoMemoryTracking_Parms DoMemoryTracking_Parms;
	pFnDoMemoryTracking->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDoMemoryTracking,NULL,&DoMemoryTracking_Parms,NULL);
	pFnDoMemoryTracking->FunctionFlags |= 0x400;
}

struct Engine_SetLevelRBGravity_Parms
{
	FVector3                                           NewGrav;                                          		// 0x000000 (0x000C)              
};

void AWorldInfo::SetLevelRBGravity(FVector3 NewGrav)
{
	static UFieldFunc* pFnSetLevelRBGravity = NULL;
	if(!pFnSetLevelRBGravity)
		pFnSetLevelRBGravity = UObject::FindFunction("Function Engine.WorldInfo.SetLevelRBGravity");

	Engine_SetLevelRBGravity_Parms SetLevelRBGravity_Parms;
	memcpy(&SetLevelRBGravity_Parms.NewGrav,&NewGrav,0xC);
	pFnSetLevelRBGravity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLevelRBGravity,NULL,&SetLevelRBGravity_Parms,NULL);
	pFnSetLevelRBGravity->FunctionFlags |= 0x400;
}

struct Engine_SeamlessTravel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	unsigned long                                      bAbsolute : 1;                                    		// 0x00000C (0x0004) [0x00000001] 
	struct FGuid                                       MapPackageGuid;                                   		// 0x000010 (0x0010)              
};

void AWorldInfo::SeamlessTravel(struct FString URL,bool bAbsolute,struct FGuid MapPackageGuid)
{
	static UFieldFunc* pFnSeamlessTravel = NULL;
	if(!pFnSeamlessTravel)
		pFnSeamlessTravel = UObject::FindFunction("Function Engine.WorldInfo.SeamlessTravel");

	Engine_SeamlessTravel_Parms SeamlessTravel_Parms;
	memcpy(&SeamlessTravel_Parms.URL,&URL,0xC);
	SeamlessTravel_Parms.bAbsolute = bAbsolute;
	memcpy(&SeamlessTravel_Parms.MapPackageGuid,&MapPackageGuid,0x10);
	pFnSeamlessTravel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSeamlessTravel,NULL,&SeamlessTravel_Parms,NULL);
	pFnSeamlessTravel->FunctionFlags |= 0x400;
}

struct Engine_AllPawns_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	FVector3                                           TestLocation;                                     		// 0x000008 (0x000C)              
	float                                              TestRadius;                                       		// 0x000014 (0x0004)              
};

void AWorldInfo::AllPawns(class UClass* BaseClass,class APawn** P,FVector3 TestLocation,float TestRadius)
{
	static UFieldFunc* pFnAllPawns = NULL;
	if(!pFnAllPawns)
		pFnAllPawns = UObject::FindFunction("Function Engine.WorldInfo.AllPawns");

	Engine_AllPawns_Parms AllPawns_Parms;
	AllPawns_Parms.BaseClass = BaseClass;
	memcpy(&AllPawns_Parms.TestLocation,&TestLocation,0xC);
	AllPawns_Parms.TestRadius = TestRadius;
	pFnAllPawns->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllPawns,NULL,&AllPawns_Parms,NULL);
	pFnAllPawns->FunctionFlags |= 0x400;
	if(P)
		*P = AllPawns_Parms.P;
}

struct Engine_RadiusNavigationPoints_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class ANavigationPoint*                            N;                                                		// 0x000004 (0x0004)              
	FVector3                                           Point;                                            		// 0x000008 (0x000C)              
	float                                              Radius;                                           		// 0x000014 (0x0004)              
};

void AWorldInfo::RadiusNavigationPoints(class UClass* BaseClass,class ANavigationPoint** N,FVector3 Point,float Radius)
{
	static UFieldFunc* pFnRadiusNavigationPoints = NULL;
	if(!pFnRadiusNavigationPoints)
		pFnRadiusNavigationPoints = UObject::FindFunction("Function Engine.WorldInfo.RadiusNavigationPoints");

	Engine_RadiusNavigationPoints_Parms RadiusNavigationPoints_Parms;
	RadiusNavigationPoints_Parms.BaseClass = BaseClass;
	memcpy(&RadiusNavigationPoints_Parms.Point,&Point,0xC);
	RadiusNavigationPoints_Parms.Radius = Radius;
	pFnRadiusNavigationPoints->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRadiusNavigationPoints,NULL,&RadiusNavigationPoints_Parms,NULL);
	pFnRadiusNavigationPoints->FunctionFlags |= 0x400;
	if(N)
		*N = RadiusNavigationPoints_Parms.N;
}

struct Engine_CancelPendingMapChange_Parms
{
};

void AWorldInfo::CancelPendingMapChange()
{
	static UFieldFunc* pFnCancelPendingMapChange = NULL;
	if(!pFnCancelPendingMapChange)
		pFnCancelPendingMapChange = UObject::FindFunction("Function Engine.WorldInfo.CancelPendingMapChange");

	Engine_CancelPendingMapChange_Parms CancelPendingMapChange_Parms;
	pFnCancelPendingMapChange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCancelPendingMapChange,NULL,&CancelPendingMapChange_Parms,NULL);
	pFnCancelPendingMapChange->FunctionFlags |= 0x400;
}

struct Engine_NotifyMatchStarted_Parms
{
	unsigned long                                      bShouldActivateLevelStartupEvents : 1;            		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bShouldActivateLevelBeginningEvents : 1;          		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bShouldActivateLevelLoadedEvents : 1;             		// 0x000008 (0x0004) [0x00000001] 
};

void AWorldInfo::NotifyMatchStarted(bool bShouldActivateLevelStartupEvents,bool bShouldActivateLevelBeginningEvents,bool bShouldActivateLevelLoadedEvents)
{
	static UFieldFunc* pFnNotifyMatchStarted = NULL;
	if(!pFnNotifyMatchStarted)
		pFnNotifyMatchStarted = UObject::FindFunction("Function Engine.WorldInfo.NotifyMatchStarted");

	Engine_NotifyMatchStarted_Parms NotifyMatchStarted_Parms;
	NotifyMatchStarted_Parms.bShouldActivateLevelStartupEvents = bShouldActivateLevelStartupEvents;
	NotifyMatchStarted_Parms.bShouldActivateLevelBeginningEvents = bShouldActivateLevelBeginningEvents;
	NotifyMatchStarted_Parms.bShouldActivateLevelLoadedEvents = bShouldActivateLevelLoadedEvents;
	pFnNotifyMatchStarted->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyMatchStarted,NULL,&NotifyMatchStarted_Parms,NULL);
	pFnNotifyMatchStarted->FunctionFlags |= 0x400;
}

struct Engine_ServerTravel_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	unsigned long                                      bAbsolute : 1;                                    		// 0x00000C (0x0004) [0x00000001] 
};

void AWorldInfo::ServerTravel(struct FString URL,bool bAbsolute)
{
	static UFieldFunc* pFnServerTravel = NULL;
	if(!pFnServerTravel)
		pFnServerTravel = UObject::FindFunction("Function Engine.WorldInfo.ServerTravel");

	Engine_ServerTravel_Parms ServerTravel_Parms;
	memcpy(&ServerTravel_Parms.URL,&URL,0xC);
	ServerTravel_Parms.bAbsolute = bAbsolute;
	ProcessEvent(pFnServerTravel,NULL,&ServerTravel_Parms,NULL);
}

struct Engine_GetWorldInfo_Parms
{
	class AWorldInfo*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AWorldInfo* AWorldInfo::GetWorldInfo()
{
	static UFieldFunc* pFnGetWorldInfo = NULL;
	if(!pFnGetWorldInfo)
		pFnGetWorldInfo = UObject::FindFunction("Function Engine.WorldInfo.GetWorldInfo");

	Engine_GetWorldInfo_Parms GetWorldInfo_Parms;
	pFnGetWorldInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetWorldInfo,NULL,&GetWorldInfo_Parms,NULL);
	pFnGetWorldInfo->FunctionFlags |= 0x400;
	return GetWorldInfo_Parms.ReturnValue;
}

struct Engine_IsConsoleBuild_Parms
{
	unsigned char                                      ConsoleType;                                      		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsConsoleBuild(unsigned char ConsoleType)
{
	static UFieldFunc* pFnIsConsoleBuild = NULL;
	if(!pFnIsConsoleBuild)
		pFnIsConsoleBuild = UObject::FindFunction("Function Engine.WorldInfo.IsConsoleBuild");

	Engine_IsConsoleBuild_Parms IsConsoleBuild_Parms;
	IsConsoleBuild_Parms.ConsoleType = ConsoleType;
	pFnIsConsoleBuild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsConsoleBuild,NULL,&IsConsoleBuild_Parms,NULL);
	pFnIsConsoleBuild->FunctionFlags |= 0x400;
	return IsConsoleBuild_Parms.ReturnValue;
}

struct Engine_AllControllers_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AController*                                 C;                                                		// 0x000004 (0x0004)              
};

void AWorldInfo::AllControllers(class UClass* BaseClass,class AController** C)
{
	static UFieldFunc* pFnAllControllers = NULL;
	if(!pFnAllControllers)
		pFnAllControllers = UObject::FindFunction("Function Engine.WorldInfo.AllControllers");

	Engine_AllControllers_Parms AllControllers_Parms;
	AllControllers_Parms.BaseClass = BaseClass;
	pFnAllControllers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllControllers,NULL,&AllControllers_Parms,NULL);
	pFnAllControllers->FunctionFlags |= 0x400;
	if(C)
		*C = AllControllers_Parms.C;
}

struct Engine_Reset_Parms
{
};

void AWorldInfo::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.WorldInfo.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_CommitMapChange_Parms
{
	unsigned long                                      bShouldSkipLevelStartupEvent : 1;                 		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bShouldSkipLevelBeginningEvent : 1;               		// 0x000004 (0x0004) [0x00000001] 
};

void AWorldInfo::CommitMapChange(bool bShouldSkipLevelStartupEvent,bool bShouldSkipLevelBeginningEvent)
{
	static UFieldFunc* pFnCommitMapChange = NULL;
	if(!pFnCommitMapChange)
		pFnCommitMapChange = UObject::FindFunction("Function Engine.WorldInfo.CommitMapChange");

	Engine_CommitMapChange_Parms CommitMapChange_Parms;
	CommitMapChange_Parms.bShouldSkipLevelStartupEvent = bShouldSkipLevelStartupEvent;
	CommitMapChange_Parms.bShouldSkipLevelBeginningEvent = bShouldSkipLevelBeginningEvent;
	pFnCommitMapChange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCommitMapChange,NULL,&CommitMapChange_Parms,NULL);
	pFnCommitMapChange->FunctionFlags |= 0x400;
}

struct Engine_GetGameSequence_Parms
{
	class USequence*                                   ReturnValue;                                      		// 0x000000 (0x0004)              
};

class USequence* AWorldInfo::GetGameSequence()
{
	static UFieldFunc* pFnGetGameSequence = NULL;
	if(!pFnGetGameSequence)
		pFnGetGameSequence = UObject::FindFunction("Function Engine.WorldInfo.GetGameSequence");

	Engine_GetGameSequence_Parms GetGameSequence_Parms;
	pFnGetGameSequence->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGameSequence,NULL,&GetGameSequence_Parms,NULL);
	pFnGetGameSequence->FunctionFlags |= 0x400;
	return GetGameSequence_Parms.ReturnValue;
}

struct Engine_GetLocalURL_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AWorldInfo::GetLocalURL()
{
	static UFieldFunc* pFnGetLocalURL = NULL;
	if(!pFnGetLocalURL)
		pFnGetLocalURL = UObject::FindFunction("Function Engine.WorldInfo.GetLocalURL");

	Engine_GetLocalURL_Parms GetLocalURL_Parms;
	pFnGetLocalURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLocalURL,NULL,&GetLocalURL_Parms,NULL);
	pFnGetLocalURL->FunctionFlags |= 0x400;
	return GetLocalURL_Parms.ReturnValue;
}

struct Engine_IsPlayingDemo_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsPlayingDemo()
{
	static UFieldFunc* pFnIsPlayingDemo = NULL;
	if(!pFnIsPlayingDemo)
		pFnIsPlayingDemo = UObject::FindFunction("Function Engine.WorldInfo.IsPlayingDemo");

	Engine_IsPlayingDemo_Parms IsPlayingDemo_Parms;
	pFnIsPlayingDemo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPlayingDemo,NULL,&IsPlayingDemo_Parms,NULL);
	pFnIsPlayingDemo->FunctionFlags |= 0x400;
	return IsPlayingDemo_Parms.ReturnValue;
}

struct Engine_IsMapChangeReady_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsMapChangeReady()
{
	static UFieldFunc* pFnIsMapChangeReady = NULL;
	if(!pFnIsMapChangeReady)
		pFnIsMapChangeReady = UObject::FindFunction("Function Engine.WorldInfo.IsMapChangeReady");

	Engine_IsMapChangeReady_Parms IsMapChangeReady_Parms;
	pFnIsMapChangeReady->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsMapChangeReady,NULL,&IsMapChangeReady_Parms,NULL);
	pFnIsMapChangeReady->FunctionFlags |= 0x400;
	return IsMapChangeReady_Parms.ReturnValue;
}

struct Engine_IsRecordingDemo_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsRecordingDemo()
{
	static UFieldFunc* pFnIsRecordingDemo = NULL;
	if(!pFnIsRecordingDemo)
		pFnIsRecordingDemo = UObject::FindFunction("Function Engine.WorldInfo.IsRecordingDemo");

	Engine_IsRecordingDemo_Parms IsRecordingDemo_Parms;
	pFnIsRecordingDemo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsRecordingDemo,NULL,&IsRecordingDemo_Parms,NULL);
	pFnIsRecordingDemo->FunctionFlags |= 0x400;
	return IsRecordingDemo_Parms.ReturnValue;
}

struct Engine_ThisIsNeverExecuted_Parms
{
	class ADefaultPhysicsVolume*                       P;                                                		// 0x000000 (0x0004)              
};

void AWorldInfo::ThisIsNeverExecuted(class ADefaultPhysicsVolume* P)
{
	static UFieldFunc* pFnThisIsNeverExecuted = NULL;
	if(!pFnThisIsNeverExecuted)
		pFnThisIsNeverExecuted = UObject::FindFunction("Function Engine.WorldInfo.ThisIsNeverExecuted");

	Engine_ThisIsNeverExecuted_Parms ThisIsNeverExecuted_Parms;
	ThisIsNeverExecuted_Parms.P = P;
	ProcessEvent(pFnThisIsNeverExecuted,NULL,&ThisIsNeverExecuted_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWorldInfo::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.WorldInfo.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_IsDemoBuild_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsDemoBuild()
{
	static UFieldFunc* pFnIsDemoBuild = NULL;
	if(!pFnIsDemoBuild)
		pFnIsDemoBuild = UObject::FindFunction("Function Engine.WorldInfo.IsDemoBuild");

	Engine_IsDemoBuild_Parms IsDemoBuild_Parms;
	pFnIsDemoBuild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsDemoBuild,NULL,&IsDemoBuild_Parms,NULL);
	pFnIsDemoBuild->FunctionFlags |= 0x400;
	return IsDemoBuild_Parms.ReturnValue;
}

struct Engine_GetGravityZ_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWorldInfo::GetGravityZ()
{
	static UFieldFunc* pFnGetGravityZ = NULL;
	if(!pFnGetGravityZ)
		pFnGetGravityZ = UObject::FindFunction("Function Engine.WorldInfo.GetGravityZ");

	Engine_GetGravityZ_Parms GetGravityZ_Parms;
	pFnGetGravityZ->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGravityZ,NULL,&GetGravityZ_Parms,NULL);
	pFnGetGravityZ->FunctionFlags |= 0x400;
	return GetGravityZ_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void AWorldInfo::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.WorldInfo.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_IsServer_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsServer()
{
	static UFieldFunc* pFnIsServer = NULL;
	if(!pFnIsServer)
		pFnIsServer = UObject::FindFunction("Function Engine.WorldInfo.IsServer");

	Engine_IsServer_Parms IsServer_Parms;
	ProcessEvent(pFnIsServer,NULL,&IsServer_Parms,NULL);
	return IsServer_Parms.ReturnValue;
}

struct Engine_GetDemoRewindPoints_Parms
{
	TArray<int>                                        OutRewindPoints;                                  		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AWorldInfo::GetDemoRewindPoints(TArray<int>* OutRewindPoints)
{
	static UFieldFunc* pFnGetDemoRewindPoints = NULL;
	if(!pFnGetDemoRewindPoints)
		pFnGetDemoRewindPoints = UObject::FindFunction("Function Engine.WorldInfo.GetDemoRewindPoints");

	Engine_GetDemoRewindPoints_Parms GetDemoRewindPoints_Parms;
	pFnGetDemoRewindPoints->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDemoRewindPoints,NULL,&GetDemoRewindPoints_Parms,NULL);
	pFnGetDemoRewindPoints->FunctionFlags |= 0x400;
	if(OutRewindPoints)
		memcpy(OutRewindPoints,&GetDemoRewindPoints_Parms.OutRewindPoints,0xC);
	return GetDemoRewindPoints_Parms.ReturnValue;
}

struct Engine_PreBeginPlay_Parms
{
	//class UClass*                                      PoolClass;                                        		// 0x000000 (0x0004)              
};

void AWorldInfo::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.WorldInfo.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_SetSeamlessTravelMidpointPause_Parms
{
	unsigned long                                      bNowPaused : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void AWorldInfo::SetSeamlessTravelMidpointPause(bool bNowPaused)
{
	static UFieldFunc* pFnSetSeamlessTravelMidpointPause = NULL;
	if(!pFnSetSeamlessTravelMidpointPause)
		pFnSetSeamlessTravelMidpointPause = UObject::FindFunction("Function Engine.WorldInfo.SetSeamlessTravelMidpointPause");

	Engine_SetSeamlessTravelMidpointPause_Parms SetSeamlessTravelMidpointPause_Parms;
	SetSeamlessTravelMidpointPause_Parms.bNowPaused = bNowPaused;
	pFnSetSeamlessTravelMidpointPause->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSeamlessTravelMidpointPause,NULL,&SetSeamlessTravelMidpointPause_Parms,NULL);
	pFnSetSeamlessTravelMidpointPause->FunctionFlags |= 0x400;
}

struct Engine_GetDemoFrameInfo_Parms
{
	int                                                CurrentFrame;                                     		// 0x000000 (0x0004)              
	int                                                TotalFrames;                                      		// 0x000004 (0x0004)              
};

void AWorldInfo::GetDemoFrameInfo(int* CurrentFrame,int* TotalFrames)
{
	static UFieldFunc* pFnGetDemoFrameInfo = NULL;
	if(!pFnGetDemoFrameInfo)
		pFnGetDemoFrameInfo = UObject::FindFunction("Function Engine.WorldInfo.GetDemoFrameInfo");

	Engine_GetDemoFrameInfo_Parms GetDemoFrameInfo_Parms;
	pFnGetDemoFrameInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDemoFrameInfo,NULL,&GetDemoFrameInfo_Parms,NULL);
	pFnGetDemoFrameInfo->FunctionFlags |= 0x400;
	if(CurrentFrame)
		*CurrentFrame = GetDemoFrameInfo_Parms.CurrentFrame;
	if(TotalFrames)
		*TotalFrames = GetDemoFrameInfo_Parms.TotalFrames;
}

struct Engine_IsWithGFx_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWorldInfo::IsWithGFx()
{
	static UFieldFunc* pFnIsWithGFx = NULL;
	if(!pFnIsWithGFx)
		pFnIsWithGFx = UObject::FindFunction("Function Engine.WorldInfo.IsWithGFx");

	Engine_IsWithGFx_Parms IsWithGFx_Parms;
	pFnIsWithGFx->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsWithGFx,NULL,&IsWithGFx_Parms,NULL);
	pFnIsWithGFx->FunctionFlags |= 0x400;
	return IsWithGFx_Parms.ReturnValue;
}

struct Engine_NotifyHostMigrationStateChanged_Parms
{
	unsigned char                                      NewState;                                         		// 0x000000 (0x0001)              
	unsigned char                                      OldState;                                         		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

void AWorldInfo::NotifyHostMigrationStateChanged(unsigned char NewState,unsigned char OldState)
{
	static UFieldFunc* pFnNotifyHostMigrationStateChanged = NULL;
	if(!pFnNotifyHostMigrationStateChanged)
		pFnNotifyHostMigrationStateChanged = UObject::FindFunction("Function Engine.WorldInfo.NotifyHostMigrationStateChanged");

	Engine_NotifyHostMigrationStateChanged_Parms NotifyHostMigrationStateChanged_Parms;
	NotifyHostMigrationStateChanged_Parms.NewState = NewState;
	NotifyHostMigrationStateChanged_Parms.OldState = OldState;
	ProcessEvent(pFnNotifyHostMigrationStateChanged,NULL,&NotifyHostMigrationStateChanged_Parms,NULL);
}

struct Engine_GetGameClass_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UClass* AWorldInfo::GetGameClass()
{
	static UFieldFunc* pFnGetGameClass = NULL;
	if(!pFnGetGameClass)
		pFnGetGameClass = UObject::FindFunction("Function Engine.WorldInfo.GetGameClass");

	Engine_GetGameClass_Parms GetGameClass_Parms;
	ProcessEvent(pFnGetGameClass,NULL,&GetGameClass_Parms,NULL);
	return GetGameClass_Parms.ReturnValue;
}

struct Engine_GiveTo_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
};

void AInventory::GiveTo(class APawn* Other)
{
	static UFieldFunc* pFnGiveTo = NULL;
	if(!pFnGiveTo)
		pFnGiveTo = UObject::FindFunction("Function Engine.Inventory.GiveTo");

	Engine_GiveTo_Parms GiveTo_Parms;
	GiveTo_Parms.Other = Other;
	ProcessEvent(pFnGiveTo,NULL,&GiveTo_Parms,NULL);
}

struct Engine_RenderOverlays_Parms
{
	class AHUD*                                        H;                                                		// 0x000000 (0x0004)              
};

void AInventory::RenderOverlays(class AHUD* H)
{
	static UFieldFunc* pFnRenderOverlays = NULL;
	if(!pFnRenderOverlays)
		pFnRenderOverlays = UObject::FindFunction("Function Engine.Inventory.RenderOverlays");

	Engine_RenderOverlays_Parms RenderOverlays_Parms;
	RenderOverlays_Parms.H = H;
	ProcessEvent(pFnRenderOverlays,NULL,&RenderOverlays_Parms,NULL);
}

struct Engine_DenyPickupQuery_Parms
{
	class UClass*                                      ItemClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Pickup;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AInventory::DenyPickupQuery(class UClass* ItemClass,class AActor* Pickup)
{
	static UFieldFunc* pFnDenyPickupQuery = NULL;
	if(!pFnDenyPickupQuery)
		pFnDenyPickupQuery = UObject::FindFunction("Function Engine.Inventory.DenyPickupQuery");

	Engine_DenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;
	ProcessEvent(pFnDenyPickupQuery,NULL,&DenyPickupQuery_Parms,NULL);
	return DenyPickupQuery_Parms.ReturnValue;
}

struct Engine_ItemRemovedFromInvManager_Parms
{
};

void AInventory::ItemRemovedFromInvManager()
{
	static UFieldFunc* pFnItemRemovedFromInvManager = NULL;
	if(!pFnItemRemovedFromInvManager)
		pFnItemRemovedFromInvManager = UObject::FindFunction("Function Engine.Inventory.ItemRemovedFromInvManager");

	Engine_ItemRemovedFromInvManager_Parms ItemRemovedFromInvManager_Parms;
	ProcessEvent(pFnItemRemovedFromInvManager,NULL,&ItemRemovedFromInvManager_Parms,NULL);
}

struct Engine_ClientGivenTo_Parms
{
	class APawn*                                       NewOwner;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void AInventory::ClientGivenTo(class APawn* NewOwner,bool bDoNotActivate)
{
	static UFieldFunc* pFnClientGivenTo = NULL;
	if(!pFnClientGivenTo)
		pFnClientGivenTo = UObject::FindFunction("Function Engine.Inventory.ClientGivenTo");

	Engine_ClientGivenTo_Parms ClientGivenTo_Parms;
	ClientGivenTo_Parms.NewOwner = NewOwner;
	ClientGivenTo_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnClientGivenTo,NULL,&ClientGivenTo_Parms,NULL);
}

struct Engine_ActiveRenderOverlays_Parms
{
	class AHUD*                                        H;                                                		// 0x000000 (0x0004)              
};

void AInventory::ActiveRenderOverlays(class AHUD* H)
{
	static UFieldFunc* pFnActiveRenderOverlays = NULL;
	if(!pFnActiveRenderOverlays)
		pFnActiveRenderOverlays = UObject::FindFunction("Function Engine.Inventory.ActiveRenderOverlays");

	Engine_ActiveRenderOverlays_Parms ActiveRenderOverlays_Parms;
	ActiveRenderOverlays_Parms.H = H;
	ProcessEvent(pFnActiveRenderOverlays,NULL,&ActiveRenderOverlays_Parms,NULL);
}

struct Engine_AnnouncePickup_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
};

void AInventory::AnnouncePickup(class APawn* Other)
{
	static UFieldFunc* pFnAnnouncePickup = NULL;
	if(!pFnAnnouncePickup)
		pFnAnnouncePickup = UObject::FindFunction("Function Engine.Inventory.AnnouncePickup");

	Engine_AnnouncePickup_Parms AnnouncePickup_Parms;
	AnnouncePickup_Parms.Other = Other;
	ProcessEvent(pFnAnnouncePickup,NULL,&AnnouncePickup_Parms,NULL);
}

struct Engine_DropFrom_Parms
{
	FVector3                                           StartLocation;                                    		// 0x000000 (0x000C)              
	FVector3                                           StartVelocity;                                    		// 0x00000C (0x000C)              
	//class ADroppedPickup*                              P;                                                		// 0x000018 (0x0004)              
};

void AInventory::DropFrom(FVector3 StartLocation,FVector3 StartVelocity)
{
	static UFieldFunc* pFnDropFrom = NULL;
	if(!pFnDropFrom)
		pFnDropFrom = UObject::FindFunction("Function Engine.Inventory.DropFrom");

	Engine_DropFrom_Parms DropFrom_Parms;
	memcpy(&DropFrom_Parms.StartLocation,&StartLocation,0xC);
	memcpy(&DropFrom_Parms.StartVelocity,&StartVelocity,0xC);
	ProcessEvent(pFnDropFrom,NULL,&DropFrom_Parms,NULL);
}

struct Engine_BotDesireability_Parms
{
	class AActor*                                      PickupHolder;                                     		// 0x000000 (0x0004)              
	class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	class AController*                                 C;                                                		// 0x000008 (0x0004)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
	//float                                              desire;                                           		// 0x000010 (0x0004)              
};

float AInventory::BotDesireability(class AActor* PickupHolder,class APawn* P,class AController* C)
{
	static UFieldFunc* pFnBotDesireability = NULL;
	if(!pFnBotDesireability)
		pFnBotDesireability = UObject::FindFunction("Function Engine.Inventory.BotDesireability");

	Engine_BotDesireability_Parms BotDesireability_Parms;
	BotDesireability_Parms.PickupHolder = PickupHolder;
	BotDesireability_Parms.P = P;
	BotDesireability_Parms.C = C;
	ProcessEvent(pFnBotDesireability,NULL,&BotDesireability_Parms,NULL);
	return BotDesireability_Parms.ReturnValue;
}

struct Engine_GivenTo_Parms
{
	class APawn*                                       thisPawn;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void AInventory::GivenTo(class APawn* thisPawn,bool bDoNotActivate)
{
	static UFieldFunc* pFnGivenTo = NULL;
	if(!pFnGivenTo)
		pFnGivenTo = UObject::FindFunction("Function Engine.Inventory.GivenTo");

	Engine_GivenTo_Parms GivenTo_Parms;
	GivenTo_Parms.thisPawn = thisPawn;
	GivenTo_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnGivenTo,NULL,&GivenTo_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AInventory::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Inventory.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_DetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	float                                              PathWeight;                                       		// 0x000004 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float AInventory::DetourWeight(class APawn* Other,float PathWeight)
{
	static UFieldFunc* pFnDetourWeight = NULL;
	if(!pFnDetourWeight)
		pFnDetourWeight = UObject::FindFunction("Function Engine.Inventory.DetourWeight");

	Engine_DetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;
	ProcessEvent(pFnDetourWeight,NULL,&DetourWeight_Parms,NULL);
	return DetourWeight_Parms.ReturnValue;
}

struct Engine_OwnerEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x000000 (0x0008)              
};

void AInventory::OwnerEvent(struct FName EventName)
{
	static UFieldFunc* pFnOwnerEvent = NULL;
	if(!pFnOwnerEvent)
		pFnOwnerEvent = UObject::FindFunction("Function Engine.Inventory.OwnerEvent");

	Engine_OwnerEvent_Parms OwnerEvent_Parms;
	memcpy(&OwnerEvent_Parms.EventName,&EventName,0x8);
	ProcessEvent(pFnOwnerEvent,NULL,&OwnerEvent_Parms,NULL);
}

struct Engine_GetLocalString_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString AInventory::GetLocalString(int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI)
{
	static UFieldFunc* pFnGetLocalString = NULL;
	if(!pFnGetLocalString)
		pFnGetLocalString = UObject::FindFunction("Function Engine.Inventory.GetLocalString");

	Engine_GetLocalString_Parms GetLocalString_Parms;
	GetLocalString_Parms.Switch = Switch;
	GetLocalString_Parms.RelatedPRI = RelatedPRI;
	GetLocalString_Parms.RelatedPRI = RelatedPRI;
	ProcessEvent(pFnGetLocalString,NULL,&GetLocalString_Parms,NULL);
	return GetLocalString_Parms.ReturnValue;
}

struct Engine_GetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString AInventory::GetHumanReadableName()
{
	static UFieldFunc* pFnGetHumanReadableName = NULL;
	if(!pFnGetHumanReadableName)
		pFnGetHumanReadableName = UObject::FindFunction("Function Engine.Inventory.GetHumanReadableName");

	Engine_GetHumanReadableName_Parms GetHumanReadableName_Parms;
	ProcessEvent(pFnGetHumanReadableName,NULL,&GetHumanReadableName_Parms,NULL);
	return GetHumanReadableName_Parms.ReturnValue;
}

struct Engine_AddSpread_Parms
{
	FRotator                                           BaseAim;                                          		// 0x000000 (0x000C)              
	FRotator                                           ReturnValue;                                      		// 0x00000C (0x000C)              
	//FVector3                                           X;                                                		// 0x000018 (0x000C)              
	//FVector3                                           Y;                                                		// 0x000024 (0x000C)              
	//FVector3                                           Z;                                                		// 0x000030 (0x000C)              
	//float                                              CurrentSpread;                                    		// 0x00003C (0x0004)              
	//float                                              RandY;                                            		// 0x000040 (0x0004)              
	//float                                              RandZ;                                            		// 0x000044 (0x0004)              
};

FRotator AWeapon::AddSpread(FRotator BaseAim)
{
	static UFieldFunc* pFnAddSpread = NULL;
	if(!pFnAddSpread)
		pFnAddSpread = UObject::FindFunction("Function Engine.Weapon.AddSpread");

	Engine_AddSpread_Parms AddSpread_Parms;
	memcpy(&AddSpread_Parms.BaseAim,&BaseAim,0xC);
	ProcessEvent(pFnAddSpread,NULL,&AddSpread_Parms,NULL);
	return AddSpread_Parms.ReturnValue;
}

struct Engine_TimeWeaponPutDown_Parms
{
};

void AWeapon::TimeWeaponPutDown()
{
	static UFieldFunc* pFnTimeWeaponPutDown = NULL;
	if(!pFnTimeWeaponPutDown)
		pFnTimeWeaponPutDown = UObject::FindFunction("Function Engine.Weapon.TimeWeaponPutDown");

	Engine_TimeWeaponPutDown_Parms TimeWeaponPutDown_Parms;
	ProcessEvent(pFnTimeWeaponPutDown,NULL,&TimeWeaponPutDown_Parms,NULL);
}

struct Engine_SuggestAttackStyle_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWeapon::SuggestAttackStyle()
{
	static UFieldFunc* pFnSuggestAttackStyle = NULL;
	if(!pFnSuggestAttackStyle)
		pFnSuggestAttackStyle = UObject::FindFunction("Function Engine.Weapon.SuggestAttackStyle");

	Engine_SuggestAttackStyle_Parms SuggestAttackStyle_Parms;
	ProcessEvent(pFnSuggestAttackStyle,NULL,&SuggestAttackStyle_Parms,NULL);
	return SuggestAttackStyle_Parms.ReturnValue;
}

struct Engine_WeaponEquipped_Parms
{
};

void AWeapon::WeaponEquipped()
{
	static UFieldFunc* pFnWeaponEquipped = NULL;
	if(!pFnWeaponEquipped)
		pFnWeaponEquipped = UObject::FindFunction("Function Engine.Weapon.WeaponEquipped");

	Engine_WeaponEquipped_Parms WeaponEquipped_Parms;
	ProcessEvent(pFnWeaponEquipped,NULL,&WeaponEquipped_Parms,NULL);
}

struct Engine_HasAmmo_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
	int                                                Amount;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AWeapon::HasAmmo(unsigned char FireModeNum,int Amount)
{
	static UFieldFunc* pFnHasAmmo = NULL;
	if(!pFnHasAmmo)
		pFnHasAmmo = UObject::FindFunction("Function Engine.Weapon.HasAmmo");

	Engine_HasAmmo_Parms HasAmmo_Parms;
	HasAmmo_Parms.FireModeNum = FireModeNum;
	HasAmmo_Parms.Amount = Amount;
	ProcessEvent(pFnHasAmmo,NULL,&HasAmmo_Parms,NULL);
	return HasAmmo_Parms.ReturnValue;
}

struct Engine_ShouldRefire_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::ShouldRefire()
{
	static UFieldFunc* pFnShouldRefire = NULL;
	if(!pFnShouldRefire)
		pFnShouldRefire = UObject::FindFunction("Function Engine.Weapon.ShouldRefire");

	Engine_ShouldRefire_Parms ShouldRefire_Parms;
	ProcessEvent(pFnShouldRefire,NULL,&ShouldRefire_Parms,NULL);
	return ShouldRefire_Parms.ReturnValue;
}

struct Engine_IncrementFlashCount_Parms
{
};

void AWeapon::IncrementFlashCount()
{
	static UFieldFunc* pFnIncrementFlashCount = NULL;
	if(!pFnIncrementFlashCount)
		pFnIncrementFlashCount = UObject::FindFunction("Function Engine.Weapon.IncrementFlashCount");

	Engine_IncrementFlashCount_Parms IncrementFlashCount_Parms;
	ProcessEvent(pFnIncrementFlashCount,NULL,&IncrementFlashCount_Parms,NULL);
}

struct Engine_TimeWeaponEquipping_Parms
{
};

void AWeapon::TimeWeaponEquipping()
{
	static UFieldFunc* pFnTimeWeaponEquipping = NULL;
	if(!pFnTimeWeaponEquipping)
		pFnTimeWeaponEquipping = UObject::FindFunction("Function Engine.Weapon.TimeWeaponEquipping");

	Engine_TimeWeaponEquipping_Parms TimeWeaponEquipping_Parms;
	ProcessEvent(pFnTimeWeaponEquipping,NULL,&TimeWeaponEquipping_Parms,NULL);
}

struct Engine_NotifyWeaponFinishedFiring_Parms
{
	unsigned char                                      FireMode;                                         		// 0x000000 (0x0001)              
};

void AWeapon::NotifyWeaponFinishedFiring(unsigned char FireMode)
{
	static UFieldFunc* pFnNotifyWeaponFinishedFiring = NULL;
	if(!pFnNotifyWeaponFinishedFiring)
		pFnNotifyWeaponFinishedFiring = UObject::FindFunction("Function Engine.Weapon.NotifyWeaponFinishedFiring");

	Engine_NotifyWeaponFinishedFiring_Parms NotifyWeaponFinishedFiring_Parms;
	NotifyWeaponFinishedFiring_Parms.FireMode = FireMode;
	ProcessEvent(pFnNotifyWeaponFinishedFiring,NULL,&NotifyWeaponFinishedFiring_Parms,NULL);
}

struct Engine_ServerStartFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::ServerStartFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnServerStartFire = NULL;
	if(!pFnServerStartFire)
		pFnServerStartFire = UObject::FindFunction("Function Engine.Weapon.ServerStartFire");

	Engine_ServerStartFire_Parms ServerStartFire_Parms;
	ServerStartFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnServerStartFire,NULL,&ServerStartFire_Parms,NULL);
}

struct Engine_EndFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::EndFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnEndFire = NULL;
	if(!pFnEndFire)
		pFnEndFire = UObject::FindFunction("Function Engine.Weapon.EndFire");

	Engine_EndFire_Parms EndFire_Parms;
	EndFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnEndFire,NULL,&EndFire_Parms,NULL);
}

struct Engine_WeaponLog_Parms
{
	struct FString                                     msg;                                              		// 0x000000 (0x000C)              
	struct FString                                     FuncStr;                                          		// 0x00000C (0x000C)              
};

void AWeapon::WeaponLog(struct FString msg,struct FString FuncStr)
{
	static UFieldFunc* pFnWeaponLog = NULL;
	if(!pFnWeaponLog)
		pFnWeaponLog = UObject::FindFunction("Function Engine.Weapon.WeaponLog");

	Engine_WeaponLog_Parms WeaponLog_Parms;
	memcpy(&WeaponLog_Parms.msg,&msg,0xC);
	memcpy(&WeaponLog_Parms.FuncStr,&FuncStr,0xC);
	ProcessEvent(pFnWeaponLog,NULL,&WeaponLog_Parms,NULL);
}

struct Engine_PlayWeaponAnimation_Parms
{
	struct FName                                       Sequence;                                         		// 0x000000 (0x0008)              
	float                                              fDesiredDuration;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bLoop : 1;                                        		// 0x00000C (0x0004) [0x00000001] 
	class USkeletalMeshComponent*                      SkelMesh;                                         		// 0x000010 (0x0004)              
	//class UAnimNodeSequence*                           WeapNode;                                         		// 0x000014 (0x0004)              
	//class UAnimTree*                                   Tree;                                             		// 0x000018 (0x0004)              
};

void AWeapon::PlayWeaponAnimation(struct FName Sequence,float fDesiredDuration,bool bLoop,class USkeletalMeshComponent* SkelMesh)
{
	static UFieldFunc* pFnPlayWeaponAnimation = NULL;
	if(!pFnPlayWeaponAnimation)
		pFnPlayWeaponAnimation = UObject::FindFunction("Function Engine.Weapon.PlayWeaponAnimation");

	Engine_PlayWeaponAnimation_Parms PlayWeaponAnimation_Parms;
	memcpy(&PlayWeaponAnimation_Parms.Sequence,&Sequence,0x8);
	PlayWeaponAnimation_Parms.fDesiredDuration = fDesiredDuration;
	PlayWeaponAnimation_Parms.bLoop = bLoop;
	PlayWeaponAnimation_Parms.SkelMesh = SkelMesh;
	ProcessEvent(pFnPlayWeaponAnimation,NULL,&PlayWeaponAnimation_Parms,NULL);
}

struct Engine_GetMuzzleLoc_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 AWeapon::GetMuzzleLoc()
{
	static UFieldFunc* pFnGetMuzzleLoc = NULL;
	if(!pFnGetMuzzleLoc)
		pFnGetMuzzleLoc = UObject::FindFunction("Function Engine.Weapon.GetMuzzleLoc");

	Engine_GetMuzzleLoc_Parms GetMuzzleLoc_Parms;
	ProcessEvent(pFnGetMuzzleLoc,NULL,&GetMuzzleLoc_Parms,NULL);
	return GetMuzzleLoc_Parms.ReturnValue;
}

struct Engine_ClearFlashLocation_Parms
{
};

void AWeapon::ClearFlashLocation()
{
	static UFieldFunc* pFnClearFlashLocation = NULL;
	if(!pFnClearFlashLocation)
		pFnClearFlashLocation = UObject::FindFunction("Function Engine.Weapon.ClearFlashLocation");

	Engine_ClearFlashLocation_Parms ClearFlashLocation_Parms;
	ProcessEvent(pFnClearFlashLocation,NULL,&ClearFlashLocation_Parms,NULL);
}

struct Engine_SendToFiringState_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::SendToFiringState(unsigned char FireModeNum)
{
	static UFieldFunc* pFnSendToFiringState = NULL;
	if(!pFnSendToFiringState)
		pFnSendToFiringState = UObject::FindFunction("Function Engine.Weapon.SendToFiringState");

	Engine_SendToFiringState_Parms SendToFiringState_Parms;
	SendToFiringState_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnSendToFiringState,NULL,&SendToFiringState_Parms,NULL);
}

struct Engine_StopWeaponAnimation_Parms
{
	//class UAnimNodeSequence*                           AnimSeq;                                          		// 0x000000 (0x0004)              
};

void AWeapon::StopWeaponAnimation()
{
	static UFieldFunc* pFnStopWeaponAnimation = NULL;
	if(!pFnStopWeaponAnimation)
		pFnStopWeaponAnimation = UObject::FindFunction("Function Engine.Weapon.StopWeaponAnimation");

	Engine_StopWeaponAnimation_Parms StopWeaponAnimation_Parms;
	ProcessEvent(pFnStopWeaponAnimation,NULL,&StopWeaponAnimation_Parms,NULL);
}

struct Engine_SetFlashLocation_Parms
{
	FVector3                                           HitLocation;                                      		// 0x000000 (0x000C)              
};

void AWeapon::SetFlashLocation(FVector3 HitLocation)
{
	static UFieldFunc* pFnSetFlashLocation = NULL;
	if(!pFnSetFlashLocation)
		pFnSetFlashLocation = UObject::FindFunction("Function Engine.Weapon.SetFlashLocation");

	Engine_SetFlashLocation_Parms SetFlashLocation_Parms;
	memcpy(&SetFlashLocation_Parms.HitLocation,&HitLocation,0xC);
	ProcessEvent(pFnSetFlashLocation,NULL,&SetFlashLocation_Parms,NULL);
}

struct Engine_GetPhysicalFireStartLoc_Parms
{
	FVector3                                           AimDir;                                           		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
	//float                                              MuzzleDist;                                       		// 0x000018 (0x0004)              
	//FVector3                                           MuzzleLoc;                                        		// 0x00001C (0x000C)              
	//FVector3                                           PulledInMuzzleLoc;                                		// 0x000028 (0x000C)              
	//FVector3                                           ExtraPullIn;                                      		// 0x000034 (0x000C)              
};

FVector3 AWeapon::GetPhysicalFireStartLoc(FVector3 AimDir)
{
	static UFieldFunc* pFnGetPhysicalFireStartLoc = NULL;
	if(!pFnGetPhysicalFireStartLoc)
		pFnGetPhysicalFireStartLoc = UObject::FindFunction("Function Engine.Weapon.GetPhysicalFireStartLoc");

	Engine_GetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;
	memcpy(&GetPhysicalFireStartLoc_Parms.AimDir,&AimDir,0xC);
	ProcessEvent(pFnGetPhysicalFireStartLoc,NULL,&GetPhysicalFireStartLoc_Parms,NULL);
	return GetPhysicalFireStartLoc_Parms.ReturnValue;
}

struct Engine_GivenTo_Parms
{
	class APawn*                                       thisPawn;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void AWeapon::GivenTo(class APawn* thisPawn,bool bDoNotActivate)
{
	static UFieldFunc* pFnGivenTo = NULL;
	if(!pFnGivenTo)
		pFnGivenTo = UObject::FindFunction("Function Engine.Weapon.GivenTo");

	Engine_GivenTo_Parms GivenTo_Parms;
	GivenTo_Parms.thisPawn = thisPawn;
	GivenTo_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnGivenTo,NULL,&GivenTo_Parms,NULL);
}

struct Engine_GetViewAxes_Parms
{
	FVector3                                           XAxis;                                            		// 0x000000 (0x000C)              
	FVector3                                           YAxis;                                            		// 0x00000C (0x000C)              
	FVector3                                           ZAxis;                                            		// 0x000018 (0x000C)              
	//FRotator                                           AimRot;                                           		// 0x000024 (0x000C)              
};

void AWeapon::GetViewAxes(FVector3* XAxis,FVector3* YAxis,FVector3* ZAxis)
{
	static UFieldFunc* pFnGetViewAxes = NULL;
	if(!pFnGetViewAxes)
		pFnGetViewAxes = UObject::FindFunction("Function Engine.Weapon.GetViewAxes");

	Engine_GetViewAxes_Parms GetViewAxes_Parms;
	ProcessEvent(pFnGetViewAxes,NULL,&GetViewAxes_Parms,NULL);
	if(XAxis)
		memcpy(XAxis,&GetViewAxes_Parms.XAxis,0xC);
	if(YAxis)
		memcpy(YAxis,&GetViewAxes_Parms.YAxis,0xC);
	if(ZAxis)
		memcpy(ZAxis,&GetViewAxes_Parms.ZAxis,0xC);
}

struct Engine_GetFireInterval_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float AWeapon::GetFireInterval(unsigned char FireModeNum)
{
	static UFieldFunc* pFnGetFireInterval = NULL;
	if(!pFnGetFireInterval)
		pFnGetFireInterval = UObject::FindFunction("Function Engine.Weapon.GetFireInterval");

	Engine_GetFireInterval_Parms GetFireInterval_Parms;
	GetFireInterval_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnGetFireInterval,NULL,&GetFireInterval_Parms,NULL);
	return GetFireInterval_Parms.ReturnValue;
}

struct Engine_WeaponCalcCamera_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
	FVector3                                           out_CamLoc;                                       		// 0x000004 (0x000C)              
	FRotator                                           out_CamRot;                                       		// 0x000010 (0x000C)              
};

void AWeapon::WeaponCalcCamera(float fDeltaTime,FVector3* out_CamLoc,FRotator* out_CamRot)
{
	static UFieldFunc* pFnWeaponCalcCamera = NULL;
	if(!pFnWeaponCalcCamera)
		pFnWeaponCalcCamera = UObject::FindFunction("Function Engine.Weapon.WeaponCalcCamera");

	Engine_WeaponCalcCamera_Parms WeaponCalcCamera_Parms;
	WeaponCalcCamera_Parms.fDeltaTime = fDeltaTime;
	ProcessEvent(pFnWeaponCalcCamera,NULL,&WeaponCalcCamera_Parms,NULL);
	if(out_CamLoc)
		memcpy(out_CamLoc,&WeaponCalcCamera_Parms.out_CamLoc,0xC);
	if(out_CamRot)
		memcpy(out_CamRot,&WeaponCalcCamera_Parms.out_CamRot,0xC);
}

struct Engine_ClientWeaponThrown_Parms
{
};

void AWeapon::ClientWeaponThrown()
{
	static UFieldFunc* pFnClientWeaponThrown = NULL;
	if(!pFnClientWeaponThrown)
		pFnClientWeaponThrown = UObject::FindFunction("Function Engine.Weapon.ClientWeaponThrown");

	Engine_ClientWeaponThrown_Parms ClientWeaponThrown_Parms;
	ProcessEvent(pFnClientWeaponThrown,NULL,&ClientWeaponThrown_Parms,NULL);
}

struct Engine_WeaponPlaySound_Parms
{
	class USoundCue*                                   Sound;                                            		// 0x000000 (0x0004)              
	float                                              NoiseLoudness;                                    		// 0x000004 (0x0004)              
};

void AWeapon::WeaponPlaySound(class USoundCue* Sound,float NoiseLoudness)
{
	static UFieldFunc* pFnWeaponPlaySound = NULL;
	if(!pFnWeaponPlaySound)
		pFnWeaponPlaySound = UObject::FindFunction("Function Engine.Weapon.WeaponPlaySound");

	Engine_WeaponPlaySound_Parms WeaponPlaySound_Parms;
	WeaponPlaySound_Parms.Sound = Sound;
	WeaponPlaySound_Parms.NoiseLoudness = NoiseLoudness;
	ProcessEvent(pFnWeaponPlaySound,NULL,&WeaponPlaySound_Parms,NULL);
}

struct Engine_DoOverridePrevWeapon_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::DoOverridePrevWeapon()
{
	static UFieldFunc* pFnDoOverridePrevWeapon = NULL;
	if(!pFnDoOverridePrevWeapon)
		pFnDoOverridePrevWeapon = UObject::FindFunction("Function Engine.Weapon.DoOverridePrevWeapon");

	Engine_DoOverridePrevWeapon_Parms DoOverridePrevWeapon_Parms;
	ProcessEvent(pFnDoOverridePrevWeapon,NULL,&DoOverridePrevWeapon_Parms,NULL);
	return DoOverridePrevWeapon_Parms.ReturnValue;
}

struct Engine_ProjectileFire_Parms
{
	class AProjectile*                                 ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AProjectile* AWeapon::ProjectileFire()
{
	static UFieldFunc* pFnProjectileFire = NULL;
	if(!pFnProjectileFire)
		pFnProjectileFire = UObject::FindFunction("Function Engine.Weapon.ProjectileFire");

	Engine_ProjectileFire_Parms ProjectileFire_Parms;
	ProcessEvent(pFnProjectileFire,NULL,&ProjectileFire_Parms,NULL);
	return ProjectileFire_Parms.ReturnValue;
}

struct Engine_WeaponEmpty_Parms
{
};

void AWeapon::WeaponEmpty()
{
	static UFieldFunc* pFnWeaponEmpty = NULL;
	if(!pFnWeaponEmpty)
		pFnWeaponEmpty = UObject::FindFunction("Function Engine.Weapon.WeaponEmpty");

	Engine_WeaponEmpty_Parms WeaponEmpty_Parms;
	ProcessEvent(pFnWeaponEmpty,NULL,&WeaponEmpty_Parms,NULL);
}

struct Engine_SuggestDefenseStyle_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWeapon::SuggestDefenseStyle()
{
	static UFieldFunc* pFnSuggestDefenseStyle = NULL;
	if(!pFnSuggestDefenseStyle)
		pFnSuggestDefenseStyle = UObject::FindFunction("Function Engine.Weapon.SuggestDefenseStyle");

	Engine_SuggestDefenseStyle_Parms SuggestDefenseStyle_Parms;
	ProcessEvent(pFnSuggestDefenseStyle,NULL,&SuggestDefenseStyle_Parms,NULL);
	return SuggestDefenseStyle_Parms.ReturnValue;
}

struct Engine_DenyClientWeaponSet_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::DenyClientWeaponSet()
{
	static UFieldFunc* pFnDenyClientWeaponSet = NULL;
	if(!pFnDenyClientWeaponSet)
		pFnDenyClientWeaponSet = UObject::FindFunction("Function Engine.Weapon.DenyClientWeaponSet");

	Engine_DenyClientWeaponSet_Parms DenyClientWeaponSet_Parms;
	ProcessEvent(pFnDenyClientWeaponSet,NULL,&DenyClientWeaponSet_Parms,NULL);
	return DenyClientWeaponSet_Parms.ReturnValue;
}

struct Engine_RefireCheckTimer_Parms
{
};

void AWeapon::RefireCheckTimer()
{
	static UFieldFunc* pFnRefireCheckTimer = NULL;
	if(!pFnRefireCheckTimer)
		pFnRefireCheckTimer = UObject::FindFunction("Function Engine.Weapon.RefireCheckTimer");

	Engine_RefireCheckTimer_Parms RefireCheckTimer_Parms;
	ProcessEvent(pFnRefireCheckTimer,NULL,&RefireCheckTimer_Parms,NULL);
}

struct Engine_PutDownWeapon_Parms
{
};

void AWeapon::PutDownWeapon()
{
	static UFieldFunc* pFnPutDownWeapon = NULL;
	if(!pFnPutDownWeapon)
		pFnPutDownWeapon = UObject::FindFunction("Function Engine.Weapon.PutDownWeapon");

	Engine_PutDownWeapon_Parms PutDownWeapon_Parms;
	ProcessEvent(pFnPutDownWeapon,NULL,&PutDownWeapon_Parms,NULL);
}

struct Engine_MaxRange_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

float AWeapon::MaxRange()
{
	static UFieldFunc* pFnMaxRange = NULL;
	if(!pFnMaxRange)
		pFnMaxRange = UObject::FindFunction("Function Engine.Weapon.MaxRange");

	Engine_MaxRange_Parms MaxRange_Parms;
	ProcessEvent(pFnMaxRange,NULL,&MaxRange_Parms,NULL);
	return MaxRange_Parms.ReturnValue;
}

struct Engine_FireModeUpdated_Parms
{
	unsigned char                                      FiringMode;                                       		// 0x000000 (0x0001)              
	unsigned long                                      bViaReplication : 1;                              		// 0x000004 (0x0004) [0x00000001] 
};

void AWeapon::FireModeUpdated(unsigned char FiringMode,bool bViaReplication)
{
	static UFieldFunc* pFnFireModeUpdated = NULL;
	if(!pFnFireModeUpdated)
		pFnFireModeUpdated = UObject::FindFunction("Function Engine.Weapon.FireModeUpdated");

	Engine_FireModeUpdated_Parms FireModeUpdated_Parms;
	FireModeUpdated_Parms.FiringMode = FiringMode;
	FireModeUpdated_Parms.bViaReplication = bViaReplication;
	ProcessEvent(pFnFireModeUpdated,NULL,&FireModeUpdated_Parms,NULL);
}

struct Engine_InstantFire_Parms
{
};

void AWeapon::InstantFire()
{
	static UFieldFunc* pFnInstantFire = NULL;
	if(!pFnInstantFire)
		pFnInstantFire = UObject::FindFunction("Function Engine.Weapon.InstantFire");

	Engine_InstantFire_Parms InstantFire_Parms;
	ProcessEvent(pFnInstantFire,NULL,&InstantFire_Parms,NULL);
}

struct Engine_CanThrow_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::CanThrow()
{
	static UFieldFunc* pFnCanThrow = NULL;
	if(!pFnCanThrow)
		pFnCanThrow = UObject::FindFunction("Function Engine.Weapon.CanThrow");

	Engine_CanThrow_Parms CanThrow_Parms;
	ProcessEvent(pFnCanThrow,NULL,&CanThrow_Parms,NULL);
	return CanThrow_Parms.ReturnValue;
}

struct Engine_ServerStopFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::ServerStopFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnServerStopFire = NULL;
	if(!pFnServerStopFire)
		pFnServerStopFire = UObject::FindFunction("Function Engine.Weapon.ServerStopFire");

	Engine_ServerStopFire_Parms ServerStopFire_Parms;
	ServerStopFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnServerStopFire,NULL,&ServerStopFire_Parms,NULL);
}

struct Engine_PassThroughDamage_Parms
{
	class AActor*                                      HitActor;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWeapon::PassThroughDamage(class AActor* HitActor)
{
	static UFieldFunc* pFnPassThroughDamage = NULL;
	if(!pFnPassThroughDamage)
		pFnPassThroughDamage = UObject::FindFunction("Function Engine.Weapon.PassThroughDamage");

	Engine_PassThroughDamage_Parms PassThroughDamage_Parms;
	PassThroughDamage_Parms.HitActor = HitActor;
	ProcessEvent(pFnPassThroughDamage,NULL,&PassThroughDamage_Parms,NULL);
	return PassThroughDamage_Parms.ReturnValue;
}

struct Engine_GetTraceOwner_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AActor* AWeapon::GetTraceOwner()
{
	static UFieldFunc* pFnGetTraceOwner = NULL;
	if(!pFnGetTraceOwner)
		pFnGetTraceOwner = UObject::FindFunction("Function Engine.Weapon.GetTraceOwner");

	Engine_GetTraceOwner_Parms GetTraceOwner_Parms;
	ProcessEvent(pFnGetTraceOwner,NULL,&GetTraceOwner_Parms,NULL);
	return GetTraceOwner_Parms.ReturnValue;
}

struct Engine_GetWeaponDebug_Parms
{
	TArray<struct FString>                             DebugInfo;                                        		// 0x000000 (0x000C)              
	//struct FString                                     T;                                                		// 0x00000C (0x000C)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void AWeapon::GetWeaponDebug(TArray<struct FString>* DebugInfo)
{
	static UFieldFunc* pFnGetWeaponDebug = NULL;
	if(!pFnGetWeaponDebug)
		pFnGetWeaponDebug = UObject::FindFunction("Function Engine.Weapon.GetWeaponDebug");

	Engine_GetWeaponDebug_Parms GetWeaponDebug_Parms;
	ProcessEvent(pFnGetWeaponDebug,NULL,&GetWeaponDebug_Parms,NULL);
	if(DebugInfo)
		memcpy(DebugInfo,&GetWeaponDebug_Parms.DebugInfo,0xC);
}

struct Engine_NotifyWeaponFired_Parms
{
	unsigned char                                      FireMode;                                         		// 0x000000 (0x0001)              
};

void AWeapon::NotifyWeaponFired(unsigned char FireMode)
{
	static UFieldFunc* pFnNotifyWeaponFired = NULL;
	if(!pFnNotifyWeaponFired)
		pFnNotifyWeaponFired = UObject::FindFunction("Function Engine.Weapon.NotifyWeaponFired");

	Engine_NotifyWeaponFired_Parms NotifyWeaponFired_Parms;
	NotifyWeaponFired_Parms.FireMode = FireMode;
	ProcessEvent(pFnNotifyWeaponFired,NULL,&NotifyWeaponFired_Parms,NULL);
}

struct Engine_DenyPickupQuery_Parms
{
	class UClass*                                      ItemClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Pickup;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AWeapon::DenyPickupQuery(class UClass* ItemClass,class AActor* Pickup)
{
	static UFieldFunc* pFnDenyPickupQuery = NULL;
	if(!pFnDenyPickupQuery)
		pFnDenyPickupQuery = UObject::FindFunction("Function Engine.Weapon.DenyPickupQuery");

	Engine_DenyPickupQuery_Parms DenyPickupQuery_Parms;
	DenyPickupQuery_Parms.ItemClass = ItemClass;
	DenyPickupQuery_Parms.Pickup = Pickup;
	ProcessEvent(pFnDenyPickupQuery,NULL,&DenyPickupQuery_Parms,NULL);
	return DenyPickupQuery_Parms.ReturnValue;
}

struct Engine_PlayFiringSound_Parms
{
};

void AWeapon::PlayFiringSound()
{
	static UFieldFunc* pFnPlayFiringSound = NULL;
	if(!pFnPlayFiringSound)
		pFnPlayFiringSound = UObject::FindFunction("Function Engine.Weapon.PlayFiringSound");

	Engine_PlayFiringSound_Parms PlayFiringSound_Parms;
	ProcessEvent(pFnPlayFiringSound,NULL,&PlayFiringSound_Parms,NULL);
}

struct Engine_StopFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::StopFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStopFire = NULL;
	if(!pFnStopFire)
		pFnStopFire = UObject::FindFunction("Function Engine.Weapon.StopFire");

	Engine_StopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStopFire,NULL,&StopFire_Parms,NULL);
}

struct Engine_FireOnRelease_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::FireOnRelease()
{
	static UFieldFunc* pFnFireOnRelease = NULL;
	if(!pFnFireOnRelease)
		pFnFireOnRelease = UObject::FindFunction("Function Engine.Weapon.FireOnRelease");

	Engine_FireOnRelease_Parms FireOnRelease_Parms;
	ProcessEvent(pFnFireOnRelease,NULL,&FireOnRelease_Parms,NULL);
	return FireOnRelease_Parms.ReturnValue;
}

struct Engine_GetProjectileClass_Parms
{
	class UClass*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UClass* AWeapon::GetProjectileClass()
{
	static UFieldFunc* pFnGetProjectileClass = NULL;
	if(!pFnGetProjectileClass)
		pFnGetProjectileClass = UObject::FindFunction("Function Engine.Weapon.GetProjectileClass");

	Engine_GetProjectileClass_Parms GetProjectileClass_Parms;
	ProcessEvent(pFnGetProjectileClass,NULL,&GetProjectileClass_Parms,NULL);
	return GetProjectileClass_Parms.ReturnValue;
}

struct Engine_ClearFlashCount_Parms
{
};

void AWeapon::ClearFlashCount()
{
	static UFieldFunc* pFnClearFlashCount = NULL;
	if(!pFnClearFlashCount)
		pFnClearFlashCount = UObject::FindFunction("Function Engine.Weapon.ClearFlashCount");

	Engine_ClearFlashCount_Parms ClearFlashCount_Parms;
	ProcessEvent(pFnClearFlashCount,NULL,&ClearFlashCount_Parms,NULL);
}

struct Engine_CustomFire_Parms
{
};

void AWeapon::CustomFire()
{
	static UFieldFunc* pFnCustomFire = NULL;
	if(!pFnCustomFire)
		pFnCustomFire = UObject::FindFunction("Function Engine.Weapon.CustomFire");

	Engine_CustomFire_Parms CustomFire_Parms;
	ProcessEvent(pFnCustomFire,NULL,&CustomFire_Parms,NULL);
}

struct Engine_ItemRemovedFromInvManager_Parms
{
};

void AWeapon::ItemRemovedFromInvManager()
{
	static UFieldFunc* pFnItemRemovedFromInvManager = NULL;
	if(!pFnItemRemovedFromInvManager)
		pFnItemRemovedFromInvManager = UObject::FindFunction("Function Engine.Weapon.ItemRemovedFromInvManager");

	Engine_ItemRemovedFromInvManager_Parms ItemRemovedFromInvManager_Parms;
	ProcessEvent(pFnItemRemovedFromInvManager,NULL,&ItemRemovedFromInvManager_Parms,NULL);
}

struct Engine_PendingFire_Parms
{
	int                                                FireMode;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWeapon::PendingFire(int FireMode)
{
	static UFieldFunc* pFnPendingFire = NULL;
	if(!pFnPendingFire)
		pFnPendingFire = UObject::FindFunction("Function Engine.Weapon.PendingFire");

	Engine_PendingFire_Parms PendingFire_Parms;
	PendingFire_Parms.FireMode = FireMode;
	ProcessEvent(pFnPendingFire,NULL,&PendingFire_Parms,NULL);
	return PendingFire_Parms.ReturnValue;
}

struct Engine_ProcessInstantHit_Parms
{
	unsigned char                                      FiringMode;                                       		// 0x000000 (0x0001)              
	struct FImpactInfo                                 Impact;                                           		// 0x000004 (0x0044)              
};

void AWeapon::ProcessInstantHit(unsigned char FiringMode,struct FImpactInfo Impact)
{
	static UFieldFunc* pFnProcessInstantHit = NULL;
	if(!pFnProcessInstantHit)
		pFnProcessInstantHit = UObject::FindFunction("Function Engine.Weapon.ProcessInstantHit");

	Engine_ProcessInstantHit_Parms ProcessInstantHit_Parms;
	ProcessInstantHit_Parms.FiringMode = FiringMode;
	memcpy(&ProcessInstantHit_Parms.Impact,&Impact,0x44);
	ProcessEvent(pFnProcessInstantHit,NULL,&ProcessInstantHit_Parms,NULL);
}

struct Engine_HandleFinishedFiring_Parms
{
};

void AWeapon::HandleFinishedFiring()
{
	static UFieldFunc* pFnHandleFinishedFiring = NULL;
	if(!pFnHandleFinishedFiring)
		pFnHandleFinishedFiring = UObject::FindFunction("Function Engine.Weapon.HandleFinishedFiring");

	Engine_HandleFinishedFiring_Parms HandleFinishedFiring_Parms;
	ProcessEvent(pFnHandleFinishedFiring,NULL,&HandleFinishedFiring_Parms,NULL);
}

struct Engine_WeaponIsDown_Parms
{
};

void AWeapon::WeaponIsDown()
{
	static UFieldFunc* pFnWeaponIsDown = NULL;
	if(!pFnWeaponIsDown)
		pFnWeaponIsDown = UObject::FindFunction("Function Engine.Weapon.WeaponIsDown");

	Engine_WeaponIsDown_Parms WeaponIsDown_Parms;
	ProcessEvent(pFnWeaponIsDown,NULL,&WeaponIsDown_Parms,NULL);
}

struct Engine_GetWeaponAnimNodeSeq_Parms
{
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UAnimTree*                                   Tree;                                             		// 0x000004 (0x0004)              
	//class UAnimNodeSequence*                           AnimSeq;                                          		// 0x000008 (0x0004)              
	//class USkeletalMeshComponent*                      SkelMesh;                                         		// 0x00000C (0x0004)              
};

class UAnimNodeSequence* AWeapon::GetWeaponAnimNodeSeq()
{
	static UFieldFunc* pFnGetWeaponAnimNodeSeq = NULL;
	if(!pFnGetWeaponAnimNodeSeq)
		pFnGetWeaponAnimNodeSeq = UObject::FindFunction("Function Engine.Weapon.GetWeaponAnimNodeSeq");

	Engine_GetWeaponAnimNodeSeq_Parms GetWeaponAnimNodeSeq_Parms;
	ProcessEvent(pFnGetWeaponAnimNodeSeq,NULL,&GetWeaponAnimNodeSeq_Parms,NULL);
	return GetWeaponAnimNodeSeq_Parms.ReturnValue;
}

struct Engine_DoOverrideNextWeapon_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::DoOverrideNextWeapon()
{
	static UFieldFunc* pFnDoOverrideNextWeapon = NULL;
	if(!pFnDoOverrideNextWeapon)
		pFnDoOverrideNextWeapon = UObject::FindFunction("Function Engine.Weapon.DoOverrideNextWeapon");

	Engine_DoOverrideNextWeapon_Parms DoOverrideNextWeapon_Parms;
	ProcessEvent(pFnDoOverrideNextWeapon,NULL,&DoOverrideNextWeapon_Parms,NULL);
	return DoOverrideNextWeapon_Parms.ReturnValue;
}

struct Engine_HolderDied_Parms
{
};

void AWeapon::HolderDied()
{
	static UFieldFunc* pFnHolderDied = NULL;
	if(!pFnHolderDied)
		pFnHolderDied = UObject::FindFunction("Function Engine.Weapon.HolderDied");

	Engine_HolderDied_Parms HolderDied_Parms;
	ProcessEvent(pFnHolderDied,NULL,&HolderDied_Parms,NULL);
}

struct Engine_ClientWeaponSet_Parms
{
	unsigned long                                      bOptionalSet : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void AWeapon::ClientWeaponSet(bool bOptionalSet,bool bDoNotActivate)
{
	static UFieldFunc* pFnClientWeaponSet = NULL;
	if(!pFnClientWeaponSet)
		pFnClientWeaponSet = UObject::FindFunction("Function Engine.Weapon.ClientWeaponSet");

	Engine_ClientWeaponSet_Parms ClientWeaponSet_Parms;
	ClientWeaponSet_Parms.bOptionalSet = bOptionalSet;
	ClientWeaponSet_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnClientWeaponSet,NULL,&ClientWeaponSet_Parms,NULL);
}

struct Engine_ConsumeAmmo_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::ConsumeAmmo(unsigned char FireModeNum)
{
	static UFieldFunc* pFnConsumeAmmo = NULL;
	if(!pFnConsumeAmmo)
		pFnConsumeAmmo = UObject::FindFunction("Function Engine.Weapon.ConsumeAmmo");

	Engine_ConsumeAmmo_Parms ConsumeAmmo_Parms;
	ConsumeAmmo_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnConsumeAmmo,NULL,&ConsumeAmmo_Parms,NULL);
}

struct Engine_GetWeaponRating_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWeapon::GetWeaponRating()
{
	static UFieldFunc* pFnGetWeaponRating = NULL;
	if(!pFnGetWeaponRating)
		pFnGetWeaponRating = UObject::FindFunction("Function Engine.Weapon.GetWeaponRating");

	Engine_GetWeaponRating_Parms GetWeaponRating_Parms;
	ProcessEvent(pFnGetWeaponRating,NULL,&GetWeaponRating_Parms,NULL);
	return GetWeaponRating_Parms.ReturnValue;
}

struct Engine_GetTraceRange_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWeapon::GetTraceRange()
{
	static UFieldFunc* pFnGetTraceRange = NULL;
	if(!pFnGetTraceRange)
		pFnGetTraceRange = UObject::FindFunction("Function Engine.Weapon.GetTraceRange");

	Engine_GetTraceRange_Parms GetTraceRange_Parms;
	ProcessEvent(pFnGetTraceRange,NULL,&GetTraceRange_Parms,NULL);
	return GetTraceRange_Parms.ReturnValue;
}

struct Engine_SetPendingFire_Parms
{
	int                                                FireMode;                                         		// 0x000000 (0x0004)              
};

void AWeapon::SetPendingFire(int FireMode)
{
	static UFieldFunc* pFnSetPendingFire = NULL;
	if(!pFnSetPendingFire)
		pFnSetPendingFire = UObject::FindFunction("Function Engine.Weapon.SetPendingFire");

	Engine_SetPendingFire_Parms SetPendingFire_Parms;
	SetPendingFire_Parms.FireMode = FireMode;
	ProcessEvent(pFnSetPendingFire,NULL,&SetPendingFire_Parms,NULL);
}

struct Engine_StopFireEffects_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::StopFireEffects(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStopFireEffects = NULL;
	if(!pFnStopFireEffects)
		pFnStopFireEffects = UObject::FindFunction("Function Engine.Weapon.StopFireEffects");

	Engine_StopFireEffects_Parms StopFireEffects_Parms;
	StopFireEffects_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStopFireEffects,NULL,&StopFireEffects_Parms,NULL);
}

struct Engine_GetDamageRadius_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UClass*                                      CurrentProjectileClass;                           		// 0x000004 (0x0004)              
};

float AWeapon::GetDamageRadius()
{
	static UFieldFunc* pFnGetDamageRadius = NULL;
	if(!pFnGetDamageRadius)
		pFnGetDamageRadius = UObject::FindFunction("Function Engine.Weapon.GetDamageRadius");

	Engine_GetDamageRadius_Parms GetDamageRadius_Parms;
	ProcessEvent(pFnGetDamageRadius,NULL,&GetDamageRadius_Parms,NULL);
	return GetDamageRadius_Parms.ReturnValue;
}

struct Engine_AttachWeaponTo_Parms
{
	class USkeletalMeshComponent*                      MeshCpnt;                                         		// 0x000000 (0x0004)              
	struct FName                                       SocketName;                                       		// 0x000004 (0x0008)              
};

void AWeapon::AttachWeaponTo(class USkeletalMeshComponent* MeshCpnt,struct FName SocketName)
{
	static UFieldFunc* pFnAttachWeaponTo = NULL;
	if(!pFnAttachWeaponTo)
		pFnAttachWeaponTo = UObject::FindFunction("Function Engine.Weapon.AttachWeaponTo");

	Engine_AttachWeaponTo_Parms AttachWeaponTo_Parms;
	AttachWeaponTo_Parms.MeshCpnt = MeshCpnt;
	memcpy(&AttachWeaponTo_Parms.SocketName,&SocketName,0x8);
	ProcessEvent(pFnAttachWeaponTo,NULL,&AttachWeaponTo_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AWeapon::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Weapon.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_StillFiring_Parms
{
	unsigned char                                      FireMode;                                         		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWeapon::StillFiring(unsigned char FireMode)
{
	static UFieldFunc* pFnStillFiring = NULL;
	if(!pFnStillFiring)
		pFnStillFiring = UObject::FindFunction("Function Engine.Weapon.StillFiring");

	Engine_StillFiring_Parms StillFiring_Parms;
	StillFiring_Parms.FireMode = FireMode;
	ProcessEvent(pFnStillFiring,NULL,&StillFiring_Parms,NULL);
	return StillFiring_Parms.ReturnValue;
}

struct Engine_RecommendRangedAttack_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::RecommendRangedAttack()
{
	static UFieldFunc* pFnRecommendRangedAttack = NULL;
	if(!pFnRecommendRangedAttack)
		pFnRecommendRangedAttack = UObject::FindFunction("Function Engine.Weapon.RecommendRangedAttack");

	Engine_RecommendRangedAttack_Parms RecommendRangedAttack_Parms;
	ProcessEvent(pFnRecommendRangedAttack,NULL,&RecommendRangedAttack_Parms,NULL);
	return RecommendRangedAttack_Parms.ReturnValue;
}

struct Engine_AdjustFOVAngle_Parms
{
	float                                              FOVAngle;                                         		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float AWeapon::AdjustFOVAngle(float FOVAngle)
{
	static UFieldFunc* pFnAdjustFOVAngle = NULL;
	if(!pFnAdjustFOVAngle)
		pFnAdjustFOVAngle = UObject::FindFunction("Function Engine.Weapon.AdjustFOVAngle");

	Engine_AdjustFOVAngle_Parms AdjustFOVAngle_Parms;
	AdjustFOVAngle_Parms.FOVAngle = FOVAngle;
	ProcessEvent(pFnAdjustFOVAngle,NULL,&AdjustFOVAngle_Parms,NULL);
	return AdjustFOVAngle_Parms.ReturnValue;
}

struct Engine_IsFiring_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::IsFiring()
{
	static UFieldFunc* pFnIsFiring = NULL;
	if(!pFnIsFiring)
		pFnIsFiring = UObject::FindFunction("Function Engine.Weapon.IsFiring");

	Engine_IsFiring_Parms IsFiring_Parms;
	ProcessEvent(pFnIsFiring,NULL,&IsFiring_Parms,NULL);
	return IsFiring_Parms.ReturnValue;
}

struct Engine_HasAnyAmmo_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::HasAnyAmmo()
{
	static UFieldFunc* pFnHasAnyAmmo = NULL;
	if(!pFnHasAnyAmmo)
		pFnHasAnyAmmo = UObject::FindFunction("Function Engine.Weapon.HasAnyAmmo");

	Engine_HasAnyAmmo_Parms HasAnyAmmo_Parms;
	ProcessEvent(pFnHasAnyAmmo,NULL,&HasAnyAmmo_Parms,NULL);
	return HasAnyAmmo_Parms.ReturnValue;
}

struct Engine_CanAttack_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWeapon::CanAttack(class AActor* Other)
{
	static UFieldFunc* pFnCanAttack = NULL;
	if(!pFnCanAttack)
		pFnCanAttack = UObject::FindFunction("Function Engine.Weapon.CanAttack");

	Engine_CanAttack_Parms CanAttack_Parms;
	CanAttack_Parms.Other = Other;
	ProcessEvent(pFnCanAttack,NULL,&CanAttack_Parms,NULL);
	return CanAttack_Parms.ReturnValue;
}

struct Engine_Activate_Parms
{
};

void AWeapon::Activate()
{
	static UFieldFunc* pFnActivate = NULL;
	if(!pFnActivate)
		pFnActivate = UObject::FindFunction("Function Engine.Weapon.Activate");

	Engine_Activate_Parms Activate_Parms;
	ProcessEvent(pFnActivate,NULL,&Activate_Parms,NULL);
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//TArray<struct FString>                             DebugInfo;                                        		// 0x00000C (0x000C)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void AWeapon::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Weapon.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_DetachWeapon_Parms
{
};

void AWeapon::DetachWeapon()
{
	static UFieldFunc* pFnDetachWeapon = NULL;
	if(!pFnDetachWeapon)
		pFnDetachWeapon = UObject::FindFunction("Function Engine.Weapon.DetachWeapon");

	Engine_DetachWeapon_Parms DetachWeapon_Parms;
	ProcessEvent(pFnDetachWeapon,NULL,&DetachWeapon_Parms,NULL);
}

struct Engine_IsActiveWeapon_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::IsActiveWeapon()
{
	static UFieldFunc* pFnIsActiveWeapon = NULL;
	if(!pFnIsActiveWeapon)
		pFnIsActiveWeapon = UObject::FindFunction("Function Engine.Weapon.IsActiveWeapon");

	Engine_IsActiveWeapon_Parms IsActiveWeapon_Parms;
	ProcessEvent(pFnIsActiveWeapon,NULL,&IsActiveWeapon_Parms,NULL);
	return IsActiveWeapon_Parms.ReturnValue;
}

struct Engine_RecommendLongRangedAttack_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::RecommendLongRangedAttack()
{
	static UFieldFunc* pFnRecommendLongRangedAttack = NULL;
	if(!pFnRecommendLongRangedAttack)
		pFnRecommendLongRangedAttack = UObject::FindFunction("Function Engine.Weapon.RecommendLongRangedAttack");

	Engine_RecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;
	ProcessEvent(pFnRecommendLongRangedAttack,NULL,&RecommendLongRangedAttack_Parms,NULL);
	return RecommendLongRangedAttack_Parms.ReturnValue;
}

struct Engine_FocusOnLeader_Parms
{
	unsigned long                                      bLeaderFiring : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AWeapon::FocusOnLeader(bool bLeaderFiring)
{
	static UFieldFunc* pFnFocusOnLeader = NULL;
	if(!pFnFocusOnLeader)
		pFnFocusOnLeader = UObject::FindFunction("Function Engine.Weapon.FocusOnLeader");

	Engine_FocusOnLeader_Parms FocusOnLeader_Parms;
	FocusOnLeader_Parms.bLeaderFiring = bLeaderFiring;
	ProcessEvent(pFnFocusOnLeader,NULL,&FocusOnLeader_Parms,NULL);
	return FocusOnLeader_Parms.ReturnValue;
}

struct Engine_RangedAttackTime_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWeapon::RangedAttackTime()
{
	static UFieldFunc* pFnRangedAttackTime = NULL;
	if(!pFnRangedAttackTime)
		pFnRangedAttackTime = UObject::FindFunction("Function Engine.Weapon.RangedAttackTime");

	Engine_RangedAttackTime_Parms RangedAttackTime_Parms;
	ProcessEvent(pFnRangedAttackTime,NULL,&RangedAttackTime_Parms,NULL);
	return RangedAttackTime_Parms.ReturnValue;
}

struct Engine_GetAdjustedAim_Parms
{
	FVector3                                           StartFireLoc;                                     		// 0x000000 (0x000C)              
	FRotator                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FRotator AWeapon::GetAdjustedAim(FVector3 StartFireLoc)
{
	static UFieldFunc* pFnGetAdjustedAim = NULL;
	if(!pFnGetAdjustedAim)
		pFnGetAdjustedAim = UObject::FindFunction("Function Engine.Weapon.GetAdjustedAim");

	Engine_GetAdjustedAim_Parms GetAdjustedAim_Parms;
	memcpy(&GetAdjustedAim_Parms.StartFireLoc,&StartFireLoc,0xC);
	ProcessEvent(pFnGetAdjustedAim,NULL,&GetAdjustedAim_Parms,NULL);
	return GetAdjustedAim_Parms.ReturnValue;
}

struct Engine_ClearPendingFire_Parms
{
	int                                                FireMode;                                         		// 0x000000 (0x0004)              
};

void AWeapon::ClearPendingFire(int FireMode)
{
	static UFieldFunc* pFnClearPendingFire = NULL;
	if(!pFnClearPendingFire)
		pFnClearPendingFire = UObject::FindFunction("Function Engine.Weapon.ClearPendingFire");

	Engine_ClearPendingFire_Parms ClearPendingFire_Parms;
	ClearPendingFire_Parms.FireMode = FireMode;
	ProcessEvent(pFnClearPendingFire,NULL,&ClearPendingFire_Parms,NULL);
}

struct Engine_AddAmmo_Parms
{
	int                                                Amount;                                           		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int AWeapon::AddAmmo(int Amount)
{
	static UFieldFunc* pFnAddAmmo = NULL;
	if(!pFnAddAmmo)
		pFnAddAmmo = UObject::FindFunction("Function Engine.Weapon.AddAmmo");

	Engine_AddAmmo_Parms AddAmmo_Parms;
	AddAmmo_Parms.Amount = Amount;
	ProcessEvent(pFnAddAmmo,NULL,&AddAmmo_Parms,NULL);
	return AddAmmo_Parms.ReturnValue;
}

struct Engine_FireAmmunition_Parms
{
};

void AWeapon::FireAmmunition()
{
	static UFieldFunc* pFnFireAmmunition = NULL;
	if(!pFnFireAmmunition)
		pFnFireAmmunition = UObject::FindFunction("Function Engine.Weapon.FireAmmunition");

	Engine_FireAmmunition_Parms FireAmmunition_Parms;
	ProcessEvent(pFnFireAmmunition,NULL,&FireAmmunition_Parms,NULL);
}

struct Engine_TryPutDown_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AWeapon::TryPutDown()
{
	static UFieldFunc* pFnTryPutDown = NULL;
	if(!pFnTryPutDown)
		pFnTryPutDown = UObject::FindFunction("Function Engine.Weapon.TryPutDown");

	Engine_TryPutDown_Parms TryPutDown_Parms;
	ProcessEvent(pFnTryPutDown,NULL,&TryPutDown_Parms,NULL);
	return TryPutDown_Parms.ReturnValue;
}

struct Engine_DumpWeaponDebugToLog_Parms
{
	//TArray<struct FString>                             DebugInfo;                                        		// 0x000000 (0x000C)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
};

void AWeapon::DumpWeaponDebugToLog()
{
	static UFieldFunc* pFnDumpWeaponDebugToLog = NULL;
	if(!pFnDumpWeaponDebugToLog)
		pFnDumpWeaponDebugToLog = UObject::FindFunction("Function Engine.Weapon.DumpWeaponDebugToLog");

	Engine_DumpWeaponDebugToLog_Parms DumpWeaponDebugToLog_Parms;
	ProcessEvent(pFnDumpWeaponDebugToLog,NULL,&DumpWeaponDebugToLog_Parms,NULL);
}

struct Engine_CalcWeaponFire_Parms
{
	FVector3                                           StartTrace;                                       		// 0x000000 (0x000C)              
	FVector3                                           EndTrace;                                         		// 0x00000C (0x000C)              
	TArray<struct FImpactInfo>                         ImpactList;                                       		// 0x000018 (0x000C)              
	struct FImpactInfo                                 ReturnValue;                                      		// 0x000024 (0x0044)              
	//FVector3                                           HitLocation;                                      		// 0x000068 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x000074 (0x000C)              
	//FVector3                                           Dir;                                              		// 0x000080 (0x000C)              
	//class AActor*                                      HitActor;                                         		// 0x00008C (0x0004)              
	//struct FTraceHitInfo                               HitInfo;                                          		// 0x000090 (0x001C)              
	//struct FImpactInfo                                 CurrentImpact;                                    		// 0x0000AC (0x0044)              
	//class APortalTeleporter*                           Portal;                                           		// 0x0000F0 (0x0004)              
	//float                                              HitDist;                                          		// 0x0000F4 (0x0004)              
};

struct FImpactInfo AWeapon::CalcWeaponFire(FVector3 StartTrace,FVector3 EndTrace,TArray<struct FImpactInfo>* ImpactList)
{
	static UFieldFunc* pFnCalcWeaponFire = NULL;
	if(!pFnCalcWeaponFire)
		pFnCalcWeaponFire = UObject::FindFunction("Function Engine.Weapon.CalcWeaponFire");

	Engine_CalcWeaponFire_Parms CalcWeaponFire_Parms;
	memcpy(&CalcWeaponFire_Parms.StartTrace,&StartTrace,0xC);
	memcpy(&CalcWeaponFire_Parms.EndTrace,&EndTrace,0xC);
	ProcessEvent(pFnCalcWeaponFire,NULL,&CalcWeaponFire_Parms,NULL);
	if(ImpactList)
		memcpy(ImpactList,&CalcWeaponFire_Parms.ImpactList,0xC);
	return CalcWeaponFire_Parms.ReturnValue;
}

struct Engine_DropFrom_Parms
{
	FVector3                                           StartLocation;                                    		// 0x000000 (0x000C)              
	FVector3                                           StartVelocity;                                    		// 0x00000C (0x000C)              
};

void AWeapon::DropFrom(FVector3 StartLocation,FVector3 StartVelocity)
{
	static UFieldFunc* pFnDropFrom = NULL;
	if(!pFnDropFrom)
		pFnDropFrom = UObject::FindFunction("Function Engine.Weapon.DropFrom");

	Engine_DropFrom_Parms DropFrom_Parms;
	memcpy(&DropFrom_Parms.StartLocation,&StartLocation,0xC);
	memcpy(&DropFrom_Parms.StartVelocity,&StartVelocity,0xC);
	ProcessEvent(pFnDropFrom,NULL,&DropFrom_Parms,NULL);
}

struct Engine_BeginFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::BeginFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnBeginFire = NULL;
	if(!pFnBeginFire)
		pFnBeginFire = UObject::FindFunction("Function Engine.Weapon.BeginFire");

	Engine_BeginFire_Parms BeginFire_Parms;
	BeginFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnBeginFire,NULL,&BeginFire_Parms,NULL);
}

struct Engine_PlayFireEffects_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
	FVector3                                           HitLocation;                                      		// 0x000004 (0x000C)              
};

void AWeapon::PlayFireEffects(unsigned char FireModeNum,FVector3 HitLocation)
{
	static UFieldFunc* pFnPlayFireEffects = NULL;
	if(!pFnPlayFireEffects)
		pFnPlayFireEffects = UObject::FindFunction("Function Engine.Weapon.PlayFireEffects");

	Engine_PlayFireEffects_Parms PlayFireEffects_Parms;
	PlayFireEffects_Parms.FireModeNum = FireModeNum;
	memcpy(&PlayFireEffects_Parms.HitLocation,&HitLocation,0xC);
	ProcessEvent(pFnPlayFireEffects,NULL,&PlayFireEffects_Parms,NULL);
}

struct Engine_SetCurrentFireMode_Parms
{
	unsigned char                                      FiringModeNum;                                    		// 0x000000 (0x0001)              
};

void AWeapon::SetCurrentFireMode(unsigned char FiringModeNum)
{
	static UFieldFunc* pFnSetCurrentFireMode = NULL;
	if(!pFnSetCurrentFireMode)
		pFnSetCurrentFireMode = UObject::FindFunction("Function Engine.Weapon.SetCurrentFireMode");

	Engine_SetCurrentFireMode_Parms SetCurrentFireMode_Parms;
	SetCurrentFireMode_Parms.FiringModeNum = FiringModeNum;
	ProcessEvent(pFnSetCurrentFireMode,NULL,&SetCurrentFireMode_Parms,NULL);
}

struct Engine_TimeWeaponFiring_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::TimeWeaponFiring(unsigned char FireModeNum)
{
	static UFieldFunc* pFnTimeWeaponFiring = NULL;
	if(!pFnTimeWeaponFiring)
		pFnTimeWeaponFiring = UObject::FindFunction("Function Engine.Weapon.TimeWeaponFiring");

	Engine_TimeWeaponFiring_Parms TimeWeaponFiring_Parms;
	TimeWeaponFiring_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnTimeWeaponFiring,NULL,&TimeWeaponFiring_Parms,NULL);
}

struct Engine_ForceEndFire_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void AWeapon::ForceEndFire()
{
	static UFieldFunc* pFnForceEndFire = NULL;
	if(!pFnForceEndFire)
		pFnForceEndFire = UObject::FindFunction("Function Engine.Weapon.ForceEndFire");

	Engine_ForceEndFire_Parms ForceEndFire_Parms;
	ProcessEvent(pFnForceEndFire,NULL,&ForceEndFire_Parms,NULL);
}

struct Engine_GetAIRating_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AWeapon::GetAIRating()
{
	static UFieldFunc* pFnGetAIRating = NULL;
	if(!pFnGetAIRating)
		pFnGetAIRating = UObject::FindFunction("Function Engine.Weapon.GetAIRating");

	Engine_GetAIRating_Parms GetAIRating_Parms;
	ProcessEvent(pFnGetAIRating,NULL,&GetAIRating_Parms,NULL);
	return GetAIRating_Parms.ReturnValue;
}

struct Engine_StartFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AWeapon::StartFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStartFire = NULL;
	if(!pFnStartFire)
		pFnStartFire = UObject::FindFunction("Function Engine.Weapon.StartFire");

	Engine_StartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStartFire,NULL,&StartFire_Parms,NULL);
}

struct Engine_GetWeaponRatingFor_Parms
{
	class AWeapon*                                     W;                                                		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
	//float                                              Rating;                                           		// 0x000008 (0x0004)              
};

float AInventoryManager::GetWeaponRatingFor(class AWeapon* W)
{
	static UFieldFunc* pFnGetWeaponRatingFor = NULL;
	if(!pFnGetWeaponRatingFor)
		pFnGetWeaponRatingFor = UObject::FindFunction("Function Engine.InventoryManager.GetWeaponRatingFor");

	Engine_GetWeaponRatingFor_Parms GetWeaponRatingFor_Parms;
	GetWeaponRatingFor_Parms.W = W;
	ProcessEvent(pFnGetWeaponRatingFor,NULL,&GetWeaponRatingFor_Parms,NULL);
	return GetWeaponRatingFor_Parms.ReturnValue;
}

struct Engine_ClientWeaponSet_Parms
{
	class AWeapon*                                     NewWeapon;                                        		// 0x000000 (0x0004)              
	unsigned long                                      bOptionalSet : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void AInventoryManager::ClientWeaponSet(class AWeapon* NewWeapon,bool bOptionalSet,bool bDoNotActivate)
{
	static UFieldFunc* pFnClientWeaponSet = NULL;
	if(!pFnClientWeaponSet)
		pFnClientWeaponSet = UObject::FindFunction("Function Engine.InventoryManager.ClientWeaponSet");

	Engine_ClientWeaponSet_Parms ClientWeaponSet_Parms;
	ClientWeaponSet_Parms.NewWeapon = NewWeapon;
	ClientWeaponSet_Parms.bOptionalSet = bOptionalSet;
	ClientWeaponSet_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnClientWeaponSet,NULL,&ClientWeaponSet_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AInventoryManager::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.InventoryManager.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_CreateInventory_Parms
{
	class UClass*                                      NewInventoryItemClass;                            		// 0x000000 (0x0004)              
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	class AInventory*                                  ReturnValue;                                      		// 0x000008 (0x0004)              
	//class AInventory*                                  Inv;                                              		// 0x00000C (0x0004)              
};

class AInventory* AInventoryManager::CreateInventory(class UClass* NewInventoryItemClass,bool bDoNotActivate)
{
	static UFieldFunc* pFnCreateInventory = NULL;
	if(!pFnCreateInventory)
		pFnCreateInventory = UObject::FindFunction("Function Engine.InventoryManager.CreateInventory");

	Engine_CreateInventory_Parms CreateInventory_Parms;
	CreateInventory_Parms.NewInventoryItemClass = NewInventoryItemClass;
	CreateInventory_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnCreateInventory,NULL,&CreateInventory_Parms,NULL);
	return CreateInventory_Parms.ReturnValue;
}

struct Engine_StartFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AInventoryManager::StartFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStartFire = NULL;
	if(!pFnStartFire)
		pFnStartFire = UObject::FindFunction("Function Engine.InventoryManager.StartFire");

	Engine_StartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStartFire,NULL,&StartFire_Parms,NULL);
}

struct Engine_CancelWeaponChange_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AInventoryManager::CancelWeaponChange()
{
	static UFieldFunc* pFnCancelWeaponChange = NULL;
	if(!pFnCancelWeaponChange)
		pFnCancelWeaponChange = UObject::FindFunction("Function Engine.InventoryManager.CancelWeaponChange");

	Engine_CancelWeaponChange_Parms CancelWeaponChange_Parms;
	ProcessEvent(pFnCancelWeaponChange,NULL,&CancelWeaponChange_Parms,NULL);
	return CancelWeaponChange_Parms.ReturnValue;
}

struct Engine_OwnerEvent_Parms
{
	struct FName                                       EventName;                                        		// 0x000000 (0x0008)              
	//class AInventory*                                  Inv;                                              		// 0x000008 (0x0004)              
};

void AInventoryManager::OwnerEvent(struct FName EventName)
{
	static UFieldFunc* pFnOwnerEvent = NULL;
	if(!pFnOwnerEvent)
		pFnOwnerEvent = UObject::FindFunction("Function Engine.InventoryManager.OwnerEvent");

	Engine_OwnerEvent_Parms OwnerEvent_Parms;
	memcpy(&OwnerEvent_Parms.EventName,&EventName,0x8);
	ProcessEvent(pFnOwnerEvent,NULL,&OwnerEvent_Parms,NULL);
}

struct Engine_SetPendingWeapon_Parms
{
	class AWeapon*                                     DesiredWeapon;                                    		// 0x000000 (0x0004)              
};

void AInventoryManager::SetPendingWeapon(class AWeapon* DesiredWeapon)
{
	static UFieldFunc* pFnSetPendingWeapon = NULL;
	if(!pFnSetPendingWeapon)
		pFnSetPendingWeapon = UObject::FindFunction("Function Engine.InventoryManager.SetPendingWeapon");

	Engine_SetPendingWeapon_Parms SetPendingWeapon_Parms;
	SetPendingWeapon_Parms.DesiredWeapon = DesiredWeapon;
	ProcessEvent(pFnSetPendingWeapon,NULL,&SetPendingWeapon_Parms,NULL);
}

struct Engine_AddInventory_Parms
{
	class AInventory*                                  NewItem;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bDoNotActivate : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class AInventory*                                  Item;                                             		// 0x00000C (0x0004)              
	//class AInventory*                                  LastItem;                                         		// 0x000010 (0x0004)              
};

bool AInventoryManager::AddInventory(class AInventory* NewItem,bool bDoNotActivate)
{
	static UFieldFunc* pFnAddInventory = NULL;
	if(!pFnAddInventory)
		pFnAddInventory = UObject::FindFunction("Function Engine.InventoryManager.AddInventory");

	Engine_AddInventory_Parms AddInventory_Parms;
	AddInventory_Parms.NewItem = NewItem;
	AddInventory_Parms.bDoNotActivate = bDoNotActivate;
	ProcessEvent(pFnAddInventory,NULL,&AddInventory_Parms,NULL);
	return AddInventory_Parms.ReturnValue;
}

struct Engine_ClientSyncWeapon_Parms
{
	class AWeapon*                                     NewWeapon;                                        		// 0x000000 (0x0004)              
};

void AInventoryManager::ClientSyncWeapon(class AWeapon* NewWeapon)
{
	static UFieldFunc* pFnClientSyncWeapon = NULL;
	if(!pFnClientSyncWeapon)
		pFnClientSyncWeapon = UObject::FindFunction("Function Engine.InventoryManager.ClientSyncWeapon");

	Engine_ClientSyncWeapon_Parms ClientSyncWeapon_Parms;
	ClientSyncWeapon_Parms.NewWeapon = NewWeapon;
	ProcessEvent(pFnClientSyncWeapon,NULL,&ClientSyncWeapon_Parms,NULL);
}

struct Engine_GetBestWeapon_Parms
{
	unsigned long                                      bForceADifferentWeapon : 1;                       		// 0x000000 (0x0004) [0x00000001] 
	class AWeapon*                                     ReturnValue;                                      		// 0x000004 (0x0004)              
	//class AWeapon*                                     W;                                                		// 0x000008 (0x0004)              
	//class AWeapon*                                     BestWeapon;                                       		// 0x00000C (0x0004)              
	//float                                              Rating;                                           		// 0x000010 (0x0004)              
	//float                                              BestRating;                                       		// 0x000014 (0x0004)              
};

class AWeapon* AInventoryManager::GetBestWeapon(bool bForceADifferentWeapon)
{
	static UFieldFunc* pFnGetBestWeapon = NULL;
	if(!pFnGetBestWeapon)
		pFnGetBestWeapon = UObject::FindFunction("Function Engine.InventoryManager.GetBestWeapon");

	Engine_GetBestWeapon_Parms GetBestWeapon_Parms;
	GetBestWeapon_Parms.bForceADifferentWeapon = bForceADifferentWeapon;
	ProcessEvent(pFnGetBestWeapon,NULL,&GetBestWeapon_Parms,NULL);
	return GetBestWeapon_Parms.ReturnValue;
}

struct Engine_SetupFor_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void AInventoryManager::SetupFor(class APawn* P)
{
	static UFieldFunc* pFnSetupFor = NULL;
	if(!pFnSetupFor)
		pFnSetupFor = UObject::FindFunction("Function Engine.InventoryManager.SetupFor");

	Engine_SetupFor_Parms SetupFor_Parms;
	SetupFor_Parms.P = P;
	ProcessEvent(pFnSetupFor,NULL,&SetupFor_Parms,NULL);
}

struct Engine_SwitchToBestWeapon_Parms
{
	unsigned long                                      bForceADifferentWeapon : 1;                       		// 0x000000 (0x0004) [0x00000001] 
};

void AInventoryManager::SwitchToBestWeapon(bool bForceADifferentWeapon)
{
	static UFieldFunc* pFnSwitchToBestWeapon = NULL;
	if(!pFnSwitchToBestWeapon)
		pFnSwitchToBestWeapon = UObject::FindFunction("Function Engine.InventoryManager.SwitchToBestWeapon");

	Engine_SwitchToBestWeapon_Parms SwitchToBestWeapon_Parms;
	SwitchToBestWeapon_Parms.bForceADifferentWeapon = bForceADifferentWeapon;
	ProcessEvent(pFnSwitchToBestWeapon,NULL,&SwitchToBestWeapon_Parms,NULL);
}

struct Engine_DumpWeaponStats_Parms
{
};

void AInventoryManager::DumpWeaponStats()
{
	static UFieldFunc* pFnDumpWeaponStats = NULL;
	if(!pFnDumpWeaponStats)
		pFnDumpWeaponStats = UObject::FindFunction("Function Engine.InventoryManager.DumpWeaponStats");

	Engine_DumpWeaponStats_Parms DumpWeaponStats_Parms;
	ProcessEvent(pFnDumpWeaponStats,NULL,&DumpWeaponStats_Parms,NULL);
}

struct Engine_StopFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void AInventoryManager::StopFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStopFire = NULL;
	if(!pFnStopFire)
		pFnStopFire = UObject::FindFunction("Function Engine.InventoryManager.StopFire");

	Engine_StopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStopFire,NULL,&StopFire_Parms,NULL);
}

struct Engine_ChangedWeapon_Parms
{
};

void AInventoryManager::ChangedWeapon()
{
	static UFieldFunc* pFnChangedWeapon = NULL;
	if(!pFnChangedWeapon)
		pFnChangedWeapon = UObject::FindFunction("Function Engine.InventoryManager.ChangedWeapon");

	Engine_ChangedWeapon_Parms ChangedWeapon_Parms;
	ProcessEvent(pFnChangedWeapon,NULL,&ChangedWeapon_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AInventoryManager::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.InventoryManager.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_ServerSetCurrentWeapon_Parms
{
	class AWeapon*                                     DesiredWeapon;                                    		// 0x000000 (0x0004)              
};

void AInventoryManager::ServerSetCurrentWeapon(class AWeapon* DesiredWeapon)
{
	static UFieldFunc* pFnServerSetCurrentWeapon = NULL;
	if(!pFnServerSetCurrentWeapon)
		pFnServerSetCurrentWeapon = UObject::FindFunction("Function Engine.InventoryManager.ServerSetCurrentWeapon");

	Engine_ServerSetCurrentWeapon_Parms ServerSetCurrentWeapon_Parms;
	ServerSetCurrentWeapon_Parms.DesiredWeapon = DesiredWeapon;
	ProcessEvent(pFnServerSetCurrentWeapon,NULL,&ServerSetCurrentWeapon_Parms,NULL);
}

struct Engine_SetCurrentWeapon_Parms
{
	class AWeapon*                                     DesiredWeapon;                                    		// 0x000000 (0x0004)              
};

void AInventoryManager::SetCurrentWeapon(class AWeapon* DesiredWeapon)
{
	static UFieldFunc* pFnSetCurrentWeapon = NULL;
	if(!pFnSetCurrentWeapon)
		pFnSetCurrentWeapon = UObject::FindFunction("Function Engine.InventoryManager.SetCurrentWeapon");

	Engine_SetCurrentWeapon_Parms SetCurrentWeapon_Parms;
	SetCurrentWeapon_Parms.DesiredWeapon = DesiredWeapon;
	ProcessEvent(pFnSetCurrentWeapon,NULL,&SetCurrentWeapon_Parms,NULL);
}

struct Engine_HandlePickupQuery_Parms
{
	class UClass*                                      ItemClass;                                        		// 0x000000 (0x0004)              
	class AActor*                                      Pickup;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class AInventory*                                  Inv;                                              		// 0x00000C (0x0004)              
};

bool AInventoryManager::HandlePickupQuery(class UClass* ItemClass,class AActor* Pickup)
{
	static UFieldFunc* pFnHandlePickupQuery = NULL;
	if(!pFnHandlePickupQuery)
		pFnHandlePickupQuery = UObject::FindFunction("Function Engine.InventoryManager.HandlePickupQuery");

	Engine_HandlePickupQuery_Parms HandlePickupQuery_Parms;
	HandlePickupQuery_Parms.ItemClass = ItemClass;
	HandlePickupQuery_Parms.Pickup = Pickup;
	ProcessEvent(pFnHandlePickupQuery,NULL,&HandlePickupQuery_Parms,NULL);
	return HandlePickupQuery_Parms.ReturnValue;
}

struct Engine_RemoveFromInventory_Parms
{
	class AInventory*                                  ItemToRemove;                                     		// 0x000000 (0x0004)              
};

void AInventoryManager::RemoveFromInventory(class AInventory* ItemToRemove)
{
	static UFieldFunc* pFnRemoveFromInventory = NULL;
	if(!pFnRemoveFromInventory)
		pFnRemoveFromInventory = UObject::FindFunction("Function Engine.InventoryManager.RemoveFromInventory");

	Engine_RemoveFromInventory_Parms RemoveFromInventory_Parms;
	RemoveFromInventory_Parms.ItemToRemove = ItemToRemove;
	ProcessEvent(pFnRemoveFromInventory,NULL,&RemoveFromInventory_Parms,NULL);
}

struct Engine_DiscardInventory_Parms
{
	//class AInventory*                                  Inv;                                              		// 0x000000 (0x0004)              
	//FVector3                                           TossVelocity;                                     		// 0x000004 (0x000C)              
	//unsigned long                                      bBelowKillZ : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

void AInventoryManager::DiscardInventory()
{
	static UFieldFunc* pFnDiscardInventory = NULL;
	if(!pFnDiscardInventory)
		pFnDiscardInventory = UObject::FindFunction("Function Engine.InventoryManager.DiscardInventory");

	Engine_DiscardInventory_Parms DiscardInventory_Parms;
	ProcessEvent(pFnDiscardInventory,NULL,&DiscardInventory_Parms,NULL);
}

struct Engine_PrevWeapon_Parms
{
};

void AInventoryManager::PrevWeapon()
{
	static UFieldFunc* pFnPrevWeapon = NULL;
	if(!pFnPrevWeapon)
		pFnPrevWeapon = UObject::FindFunction("Function Engine.InventoryManager.PrevWeapon");

	Engine_PrevWeapon_Parms PrevWeapon_Parms;
	ProcessEvent(pFnPrevWeapon,NULL,&PrevWeapon_Parms,NULL);
}

struct Engine_NextWeapon_Parms
{
};

void AInventoryManager::NextWeapon()
{
	static UFieldFunc* pFnNextWeapon = NULL;
	if(!pFnNextWeapon)
		pFnNextWeapon = UObject::FindFunction("Function Engine.InventoryManager.NextWeapon");

	Engine_NextWeapon_Parms NextWeapon_Parms;
	ProcessEvent(pFnNextWeapon,NULL,&NextWeapon_Parms,NULL);
}

struct Engine_DrawHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x000000 (0x0004)              
	//class AInventory*                                  Inv;                                              		// 0x000004 (0x0004)              
};

void AInventoryManager::DrawHUD(class AHUD* H)
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.InventoryManager.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_FindInventoryType_Parms
{
	class UClass*                                      DesiredClass;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bAllowSubclass : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	class AInventory*                                  ReturnValue;                                      		// 0x000008 (0x0004)              
	//class AInventory*                                  Inv;                                              		// 0x00000C (0x0004)              
};

class AInventory* AInventoryManager::FindInventoryType(class UClass* DesiredClass,bool bAllowSubclass)
{
	static UFieldFunc* pFnFindInventoryType = NULL;
	if(!pFnFindInventoryType)
		pFnFindInventoryType = UObject::FindFunction("Function Engine.InventoryManager.FindInventoryType");

	Engine_FindInventoryType_Parms FindInventoryType_Parms;
	FindInventoryType_Parms.DesiredClass = DesiredClass;
	FindInventoryType_Parms.bAllowSubclass = bAllowSubclass;
	ProcessEvent(pFnFindInventoryType,NULL,&FindInventoryType_Parms,NULL);
	return FindInventoryType_Parms.ReturnValue;
}

struct Engine_IsActiveWeapon_Parms
{
	class AWeapon*                                     ThisWeapon;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AInventoryManager::IsActiveWeapon(class AWeapon* ThisWeapon)
{
	static UFieldFunc* pFnIsActiveWeapon = NULL;
	if(!pFnIsActiveWeapon)
		pFnIsActiveWeapon = UObject::FindFunction("Function Engine.InventoryManager.IsActiveWeapon");

	Engine_IsActiveWeapon_Parms IsActiveWeapon_Parms;
	IsActiveWeapon_Parms.ThisWeapon = ThisWeapon;
	ProcessEvent(pFnIsActiveWeapon,NULL,&IsActiveWeapon_Parms,NULL);
	return IsActiveWeapon_Parms.ReturnValue;
}

struct Engine_ModifyDamage_Parms
{
	int                                                Damage;                                           		// 0x000000 (0x0004)              
	class AController*                                 InstigatedBy;                                     		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           Momentum;                                         		// 0x000014 (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000020 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000024 (0x0004)              
};

int AInventoryManager::ModifyDamage(int Damage,class AController* InstigatedBy,FVector3 HitLocation,FVector3 Momentum,class UClass* DamageType)
{
	static UFieldFunc* pFnModifyDamage = NULL;
	if(!pFnModifyDamage)
		pFnModifyDamage = UObject::FindFunction("Function Engine.InventoryManager.ModifyDamage");

	Engine_ModifyDamage_Parms ModifyDamage_Parms;
	ModifyDamage_Parms.Damage = Damage;
	ModifyDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy(&ModifyDamage_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&ModifyDamage_Parms.Momentum,&Momentum,0xC);
	ModifyDamage_Parms.DamageType = DamageType;
	ProcessEvent(pFnModifyDamage,NULL,&ModifyDamage_Parms,NULL);
	return ModifyDamage_Parms.ReturnValue;
}

struct Engine_InventoryActors_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class AInventory*                                  Inv;                                              		// 0x000004 (0x0004)              
};

void AInventoryManager::InventoryActors(class UClass* BaseClass,class AInventory** Inv)
{
	static UFieldFunc* pFnInventoryActors = NULL;
	if(!pFnInventoryActors)
		pFnInventoryActors = UObject::FindFunction("Function Engine.InventoryManager.InventoryActors");

	Engine_InventoryActors_Parms InventoryActors_Parms;
	InventoryActors_Parms.BaseClass = BaseClass;
	pFnInventoryActors->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInventoryActors,NULL,&InventoryActors_Parms,NULL);
	pFnInventoryActors->FunctionFlags |= 0x400;
	if(Inv)
		*Inv = InventoryActors_Parms.Inv;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ALight::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.Light.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void ALight::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.Light.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void ALight::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.Light.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_Update_Parms
{
};

void AMatineeActor::Update()
{
	static UFieldFunc* pFnUpdate = NULL;
	if(!pFnUpdate)
		pFnUpdate = UObject::FindFunction("Function Engine.MatineeActor.Update");

	Engine_Update_Parms Update_Parms;
	ProcessEvent(pFnUpdate,NULL,&Update_Parms,NULL);
}

struct Engine_SpecialCost_Parms
{
	class APawn*                                       Seeker;                                           		// 0x000000 (0x0004)              
	class UReachSpec*                                  Path;                                             		// 0x000004 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int ANavigationPoint::SpecialCost(class APawn* Seeker,class UReachSpec* Path)
{
	static UFieldFunc* pFnSpecialCost = NULL;
	if(!pFnSpecialCost)
		pFnSpecialCost = UObject::FindFunction("Function Engine.NavigationPoint.SpecialCost");

	Engine_SpecialCost_Parms SpecialCost_Parms;
	SpecialCost_Parms.Seeker = Seeker;
	SpecialCost_Parms.Path = Path;
	ProcessEvent(pFnSpecialCost,NULL,&SpecialCost_Parms,NULL);
	return SpecialCost_Parms.ReturnValue;
}

struct Engine_ProceedWithMove_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::ProceedWithMove(class APawn* Other)
{
	static UFieldFunc* pFnProceedWithMove = NULL;
	if(!pFnProceedWithMove)
		pFnProceedWithMove = UObject::FindFunction("Function Engine.NavigationPoint.ProceedWithMove");

	Engine_ProceedWithMove_Parms ProceedWithMove_Parms;
	ProceedWithMove_Parms.Other = Other;
	ProcessEvent(pFnProceedWithMove,NULL,&ProceedWithMove_Parms,NULL);
	return ProceedWithMove_Parms.ReturnValue;
}

struct Engine_GetNearestNavToActor_Parms
{
	class AActor*                                      chkActor;                                         		// 0x000000 (0x0004)              
	class UClass*                                      RequiredClass;                                    		// 0x000004 (0x0004)              
	TArray<class ANavigationPoint*>                    ExcludeList;                                      		// 0x000008 (0x000C)              
	float                                              MinDist;                                          		// 0x000014 (0x0004)              
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000018 (0x0004)              
	//class ANavigationPoint*                            Nav;                                              		// 0x00001C (0x0004)              
	//class ANavigationPoint*                            BestNav;                                          		// 0x000020 (0x0004)              
	//float                                              Dist;                                             		// 0x000024 (0x0004)              
	//float                                              bestDist;                                         		// 0x000028 (0x0004)              
};

class ANavigationPoint* ANavigationPoint::GetNearestNavToActor(class AActor* chkActor,class UClass* RequiredClass,TArray<class ANavigationPoint*> ExcludeList,float MinDist)
{
	static UFieldFunc* pFnGetNearestNavToActor = NULL;
	if(!pFnGetNearestNavToActor)
		pFnGetNearestNavToActor = UObject::FindFunction("Function Engine.NavigationPoint.GetNearestNavToActor");

	Engine_GetNearestNavToActor_Parms GetNearestNavToActor_Parms;
	GetNearestNavToActor_Parms.chkActor = chkActor;
	GetNearestNavToActor_Parms.RequiredClass = RequiredClass;
	memcpy(&GetNearestNavToActor_Parms.ExcludeList,&ExcludeList,0xC);
	GetNearestNavToActor_Parms.MinDist = MinDist;
	ProcessEvent(pFnGetNearestNavToActor,NULL,&GetNearestNavToActor_Parms,NULL);
	return GetNearestNavToActor_Parms.ReturnValue;
}

struct Engine_GetReachSpecTo_Parms
{
	class ANavigationPoint*                            Nav;                                              		// 0x000000 (0x0004)              
	class UReachSpec*                                  ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UReachSpec* ANavigationPoint::GetReachSpecTo(class ANavigationPoint* Nav)
{
	static UFieldFunc* pFnGetReachSpecTo = NULL;
	if(!pFnGetReachSpecTo)
		pFnGetReachSpecTo = UObject::FindFunction("Function Engine.NavigationPoint.GetReachSpecTo");

	Engine_GetReachSpecTo_Parms GetReachSpecTo_Parms;
	GetReachSpecTo_Parms.Nav = Nav;
	pFnGetReachSpecTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetReachSpecTo,NULL,&GetReachSpecTo_Parms,NULL);
	pFnGetReachSpecTo->FunctionFlags |= 0x400;
	return GetReachSpecTo_Parms.ReturnValue;
}

struct Engine_IsOnDifferentNetwork_Parms
{
	class ANavigationPoint*                            Nav;                                              		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::IsOnDifferentNetwork(class ANavigationPoint* Nav)
{
	static UFieldFunc* pFnIsOnDifferentNetwork = NULL;
	if(!pFnIsOnDifferentNetwork)
		pFnIsOnDifferentNetwork = UObject::FindFunction("Function Engine.NavigationPoint.IsOnDifferentNetwork");

	Engine_IsOnDifferentNetwork_Parms IsOnDifferentNetwork_Parms;
	IsOnDifferentNetwork_Parms.Nav = Nav;
	pFnIsOnDifferentNetwork->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsOnDifferentNetwork,NULL,&IsOnDifferentNetwork_Parms,NULL);
	pFnIsOnDifferentNetwork->FunctionFlags |= 0x400;
	return IsOnDifferentNetwork_Parms.ReturnValue;
}

struct Engine_IsAvailableTo_Parms
{
	class AActor*                                      chkActor;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::IsAvailableTo(class AActor* chkActor)
{
	static UFieldFunc* pFnIsAvailableTo = NULL;
	if(!pFnIsAvailableTo)
		pFnIsAvailableTo = UObject::FindFunction("Function Engine.NavigationPoint.IsAvailableTo");

	Engine_IsAvailableTo_Parms IsAvailableTo_Parms;
	IsAvailableTo_Parms.chkActor = chkActor;
	ProcessEvent(pFnIsAvailableTo,NULL,&IsAvailableTo_Parms,NULL);
	return IsAvailableTo_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.NavigationPoint.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_CanTeleport_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::CanTeleport(class AActor* A)
{
	static UFieldFunc* pFnCanTeleport = NULL;
	if(!pFnCanTeleport)
		pFnCanTeleport = UObject::FindFunction("Function Engine.NavigationPoint.CanTeleport");

	Engine_CanTeleport_Parms CanTeleport_Parms;
	CanTeleport_Parms.A = A;
	pFnCanTeleport->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanTeleport,NULL,&CanTeleport_Parms,NULL);
	pFnCanTeleport->FunctionFlags |= 0x400;
	return CanTeleport_Parms.ReturnValue;
}

struct Engine_Accept_Parms
{
	class AActor*                                      Incoming;                                         		// 0x000000 (0x0004)              
	class AActor*                                      Source;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
};

bool ANavigationPoint::Accept(class AActor* Incoming,class AActor* Source)
{
	static UFieldFunc* pFnAccept = NULL;
	if(!pFnAccept)
		pFnAccept = UObject::FindFunction("Function Engine.NavigationPoint.Accept");

	Engine_Accept_Parms Accept_Parms;
	Accept_Parms.Incoming = Incoming;
	Accept_Parms.Source = Source;
	ProcessEvent(pFnAccept,NULL,&Accept_Parms,NULL);
	return Accept_Parms.ReturnValue;
}

struct Engine_GetBoundingCylinder_Parms
{
	float                                              CollisionRadius;                                  		// 0x000000 (0x0004)              
	float                                              CollisionHeight;                                  		// 0x000004 (0x0004)              
};

void ANavigationPoint::GetBoundingCylinder(float* CollisionRadius,float* CollisionHeight)
{
	static UFieldFunc* pFnGetBoundingCylinder = NULL;
	if(!pFnGetBoundingCylinder)
		pFnGetBoundingCylinder = UObject::FindFunction("Function Engine.NavigationPoint.GetBoundingCylinder");

	Engine_GetBoundingCylinder_Parms GetBoundingCylinder_Parms;
	pFnGetBoundingCylinder->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundingCylinder,NULL,&GetBoundingCylinder_Parms,NULL);
	pFnGetBoundingCylinder->FunctionFlags |= 0x400;
	if(CollisionRadius)
		*CollisionRadius = GetBoundingCylinder_Parms.CollisionRadius;
	if(CollisionHeight)
		*CollisionHeight = GetBoundingCylinder_Parms.CollisionHeight;
}

struct Engine_DetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	float                                              PathWeight;                                       		// 0x000004 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float ANavigationPoint::DetourWeight(class APawn* Other,float PathWeight)
{
	static UFieldFunc* pFnDetourWeight = NULL;
	if(!pFnDetourWeight)
		pFnDetourWeight = UObject::FindFunction("Function Engine.NavigationPoint.DetourWeight");

	Engine_DetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;
	ProcessEvent(pFnDetourWeight,NULL,&DetourWeight_Parms,NULL);
	return DetourWeight_Parms.ReturnValue;
}

struct Engine_GetNearestNavToPoint_Parms
{
	class AActor*                                      chkActor;                                         		// 0x000000 (0x0004)              
	FVector3                                           ChkPoint;                                         		// 0x000004 (0x000C)              
	class UClass*                                      RequiredClass;                                    		// 0x000010 (0x0004)              
	TArray<class ANavigationPoint*>                    ExcludeList;                                      		// 0x000014 (0x000C)              
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000020 (0x0004)              
	//class ANavigationPoint*                            Nav;                                              		// 0x000024 (0x0004)              
	//class ANavigationPoint*                            BestNav;                                          		// 0x000028 (0x0004)              
	//float                                              Dist;                                             		// 0x00002C (0x0004)              
	//float                                              bestDist;                                         		// 0x000030 (0x0004)              
};

class ANavigationPoint* ANavigationPoint::GetNearestNavToPoint(class AActor* chkActor,FVector3 ChkPoint,class UClass* RequiredClass,TArray<class ANavigationPoint*> ExcludeList)
{
	static UFieldFunc* pFnGetNearestNavToPoint = NULL;
	if(!pFnGetNearestNavToPoint)
		pFnGetNearestNavToPoint = UObject::FindFunction("Function Engine.NavigationPoint.GetNearestNavToPoint");

	Engine_GetNearestNavToPoint_Parms GetNearestNavToPoint_Parms;
	GetNearestNavToPoint_Parms.chkActor = chkActor;
	memcpy(&GetNearestNavToPoint_Parms.ChkPoint,&ChkPoint,0xC);
	GetNearestNavToPoint_Parms.RequiredClass = RequiredClass;
	memcpy(&GetNearestNavToPoint_Parms.ExcludeList,&ExcludeList,0xC);
	ProcessEvent(pFnGetNearestNavToPoint,NULL,&GetNearestNavToPoint_Parms,NULL);
	return GetNearestNavToPoint_Parms.ReturnValue;
}

struct Engine_SuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::SuggestMovePreparation(class APawn* Other)
{
	static UFieldFunc* pFnSuggestMovePreparation = NULL;
	if(!pFnSuggestMovePreparation)
		pFnSuggestMovePreparation = UObject::FindFunction("Function Engine.NavigationPoint.SuggestMovePreparation");

	Engine_SuggestMovePreparation_Parms SuggestMovePreparation_Parms;
	SuggestMovePreparation_Parms.Other = Other;
	ProcessEvent(pFnSuggestMovePreparation,NULL,&SuggestMovePreparation_Parms,NULL);
	return SuggestMovePreparation_Parms.ReturnValue;
}

struct Engine_GetAllNavInRadius_Parms
{
	class AActor*                                      chkActor;                                         		// 0x000000 (0x0004)              
	FVector3                                           ChkPoint;                                         		// 0x000004 (0x000C)              
	float                                              Radius;                                           		// 0x000010 (0x0004)              
	TArray<class ANavigationPoint*>                    out_NavList;                                      		// 0x000014 (0x000C)              
	unsigned long                                      bSkipBlocked : 1;                                 		// 0x000020 (0x0004) [0x00000001] 
	int                                                inNetworkID;                                      		// 0x000024 (0x0004)              
	struct FCylinder                                   MinSize;                                          		// 0x000028 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000030 (0x0004) [0x00000001] 
};

bool ANavigationPoint::GetAllNavInRadius(class AActor* chkActor,FVector3 ChkPoint,float Radius,TArray<class ANavigationPoint*>* out_NavList,bool bSkipBlocked,int inNetworkID,struct FCylinder MinSize)
{
	static UFieldFunc* pFnGetAllNavInRadius = NULL;
	if(!pFnGetAllNavInRadius)
		pFnGetAllNavInRadius = UObject::FindFunction("Function Engine.NavigationPoint.GetAllNavInRadius");

	Engine_GetAllNavInRadius_Parms GetAllNavInRadius_Parms;
	GetAllNavInRadius_Parms.chkActor = chkActor;
	memcpy(&GetAllNavInRadius_Parms.ChkPoint,&ChkPoint,0xC);
	GetAllNavInRadius_Parms.Radius = Radius;
	GetAllNavInRadius_Parms.bSkipBlocked = bSkipBlocked;
	GetAllNavInRadius_Parms.inNetworkID = inNetworkID;
	memcpy(&GetAllNavInRadius_Parms.MinSize,&MinSize,0x8);
	pFnGetAllNavInRadius->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAllNavInRadius,NULL,&GetAllNavInRadius_Parms,NULL);
	pFnGetAllNavInRadius->FunctionFlags |= 0x400;
	if(out_NavList)
		memcpy(out_NavList,&GetAllNavInRadius_Parms.out_NavList,0xC);
	return GetAllNavInRadius_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ANavigationPoint::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.NavigationPoint.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_IsUsableAnchorFor_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::IsUsableAnchorFor(class APawn* P)
{
	static UFieldFunc* pFnIsUsableAnchorFor = NULL;
	if(!pFnIsUsableAnchorFor)
		pFnIsUsableAnchorFor = UObject::FindFunction("Function Engine.NavigationPoint.IsUsableAnchorFor");

	Engine_IsUsableAnchorFor_Parms IsUsableAnchorFor_Parms;
	IsUsableAnchorFor_Parms.P = P;
	pFnIsUsableAnchorFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsUsableAnchorFor,NULL,&IsUsableAnchorFor_Parms,NULL);
	pFnIsUsableAnchorFor->FunctionFlags |= 0x400;
	return IsUsableAnchorFor_Parms.ReturnValue;
}

struct Engine_OnMatchingNetworks_Parms
{
	class ANavigationPoint*                            Nav;                                              		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANavigationPoint::OnMatchingNetworks(class ANavigationPoint* Nav)
{
	static UFieldFunc* pFnOnMatchingNetworks = NULL;
	if(!pFnOnMatchingNetworks)
		pFnOnMatchingNetworks = UObject::FindFunction("Function Engine.NavigationPoint.OnMatchingNetworks");

	Engine_OnMatchingNetworks_Parms OnMatchingNetworks_Parms;
	OnMatchingNetworks_Parms.Nav = Nav;
	ProcessEvent(pFnOnMatchingNetworks,NULL,&OnMatchingNetworks_Parms,NULL);
	return OnMatchingNetworks_Parms.ReturnValue;
}

struct Engine_GetDebugAbbrev_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString ANavigationPoint::GetDebugAbbrev()
{
	static UFieldFunc* pFnGetDebugAbbrev = NULL;
	if(!pFnGetDebugAbbrev)
		pFnGetDebugAbbrev = UObject::FindFunction("Function Engine.NavigationPoint.GetDebugAbbrev");

	Engine_GetDebugAbbrev_Parms GetDebugAbbrev_Parms;
	ProcessEvent(pFnGetDebugAbbrev,NULL,&GetDebugAbbrev_Parms,NULL);
	return GetDebugAbbrev_Parms.ReturnValue;
}

struct Engine_SetDisabled_Parms
{
	unsigned long                                      bNewDisabled : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
	//int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
};

void ACoverLink::SetDisabled(bool bNewDisabled)
{
	static UFieldFunc* pFnSetDisabled = NULL;
	if(!pFnSetDisabled)
		pFnSetDisabled = UObject::FindFunction("Function Engine.CoverLink.SetDisabled");

	Engine_SetDisabled_Parms SetDisabled_Parms;
	SetDisabled_Parms.bNewDisabled = bNewDisabled;
	ProcessEvent(pFnSetDisabled,NULL,&SetDisabled_Parms,NULL);
}

struct Engine_AllowRightTransition_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                NextSlotIdx;                                      		// 0x000008 (0x0004)              
};

bool ACoverLink::AllowRightTransition(int SlotIdx)
{
	static UFieldFunc* pFnAllowRightTransition = NULL;
	if(!pFnAllowRightTransition)
		pFnAllowRightTransition = UObject::FindFunction("Function Engine.CoverLink.AllowRightTransition");

	Engine_AllowRightTransition_Parms AllowRightTransition_Parms;
	AllowRightTransition_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnAllowRightTransition,NULL,&AllowRightTransition_Parms,NULL);
	return AllowRightTransition_Parms.ReturnValue;
}

struct Engine_SetSlotEnabled_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bEnable : 1;                                      		// 0x000004 (0x0004) [0x00000001] 
};

void ACoverLink::SetSlotEnabled(int SlotIdx,bool bEnable)
{
	static UFieldFunc* pFnSetSlotEnabled = NULL;
	if(!pFnSetSlotEnabled)
		pFnSetSlotEnabled = UObject::FindFunction("Function Engine.CoverLink.SetSlotEnabled");

	Engine_SetSlotEnabled_Parms SetSlotEnabled_Parms;
	SetSlotEnabled_Parms.SlotIdx = SlotIdx;
	SetSlotEnabled_Parms.bEnable = bEnable;
	ProcessEvent(pFnSetSlotEnabled,NULL,&SetSlotEnabled_Parms,NULL);
}

struct Engine_FindSlots_Parms
{
	FVector3                                           CheckLocation;                                    		// 0x000000 (0x000C)              
	float                                              MaxDistance;                                      		// 0x00000C (0x0004)              
	int                                                LeftSlotIdx;                                      		// 0x000010 (0x0004)              
	int                                                RightSlotIdx;                                     		// 0x000014 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool ACoverLink::FindSlots(FVector3 CheckLocation,float MaxDistance,int* LeftSlotIdx,int* RightSlotIdx)
{
	static UFieldFunc* pFnFindSlots = NULL;
	if(!pFnFindSlots)
		pFnFindSlots = UObject::FindFunction("Function Engine.CoverLink.FindSlots");

	Engine_FindSlots_Parms FindSlots_Parms;
	memcpy(&FindSlots_Parms.CheckLocation,&CheckLocation,0xC);
	FindSlots_Parms.MaxDistance = MaxDistance;
	pFnFindSlots->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindSlots,NULL,&FindSlots_Parms,NULL);
	pFnFindSlots->FunctionFlags |= 0x400;
	if(LeftSlotIdx)
		*LeftSlotIdx = FindSlots_Parms.LeftSlotIdx;
	if(RightSlotIdx)
		*RightSlotIdx = FindSlots_Parms.RightSlotIdx;
	return FindSlots_Parms.ReturnValue;
}

struct Engine_HasFireLinkTo_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	struct FCoverInfo                                  ChkCover;                                         		// 0x000004 (0x0008)              
	unsigned long                                      bAllowFallbackLinks : 1;                          		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool ACoverLink::HasFireLinkTo(int SlotIdx,struct FCoverInfo ChkCover,bool bAllowFallbackLinks)
{
	static UFieldFunc* pFnHasFireLinkTo = NULL;
	if(!pFnHasFireLinkTo)
		pFnHasFireLinkTo = UObject::FindFunction("Function Engine.CoverLink.HasFireLinkTo");

	Engine_HasFireLinkTo_Parms HasFireLinkTo_Parms;
	HasFireLinkTo_Parms.SlotIdx = SlotIdx;
	memcpy(&HasFireLinkTo_Parms.ChkCover,&ChkCover,0x8);
	HasFireLinkTo_Parms.bAllowFallbackLinks = bAllowFallbackLinks;
	pFnHasFireLinkTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasFireLinkTo,NULL,&HasFireLinkTo_Parms,NULL);
	pFnHasFireLinkTo->FunctionFlags |= 0x400;
	return HasFireLinkTo_Parms.ReturnValue;
}

struct Engine_UnClaim_Parms
{
	class APawn*                                       OldClaim;                                         		// 0x000000 (0x0004)              
	int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
	unsigned long                                      bUnclaimAll : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//int                                                NumReleased;                                      		// 0x000014 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
	//int                                                NumClaims;                                        		// 0x00001C (0x0004)              
	//TArray<int>                                        SlotList;                                         		// 0x000020 (0x000C)              
	//struct FString                                     str;                                              		// 0x00002C (0x000C)              
};

bool ACoverLink::UnClaim(class APawn* OldClaim,int SlotIdx,bool bUnclaimAll)
{
	static UFieldFunc* pFnUnClaim = NULL;
	if(!pFnUnClaim)
		pFnUnClaim = UObject::FindFunction("Function Engine.CoverLink.UnClaim");

	Engine_UnClaim_Parms UnClaim_Parms;
	UnClaim_Parms.OldClaim = OldClaim;
	UnClaim_Parms.SlotIdx = SlotIdx;
	UnClaim_Parms.bUnclaimAll = bUnclaimAll;
	ProcessEvent(pFnUnClaim,NULL,&UnClaim_Parms,NULL);
	return UnClaim_Parms.ReturnValue;
}

struct Engine_OnModifyCover_Parms
{
	class USeqAct_ModifyCover*                         Action;                                           		// 0x000000 (0x0004)              
	//TArray<int>                                        SlotIndices;                                      		// 0x000004 (0x000C)              
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//int                                                SlotIdx;                                          		// 0x000014 (0x0004)              
	//class ACoverReplicator*                            CoverReplicator;                                  		// 0x000018 (0x0004)              
};

void ACoverLink::OnModifyCover(class USeqAct_ModifyCover* Action)
{
	static UFieldFunc* pFnOnModifyCover = NULL;
	if(!pFnOnModifyCover)
		pFnOnModifyCover = UObject::FindFunction("Function Engine.CoverLink.OnModifyCover");

	Engine_OnModifyCover_Parms OnModifyCover_Parms;
	OnModifyCover_Parms.Action = Action;
	ProcessEvent(pFnOnModifyCover,NULL,&OnModifyCover_Parms,NULL);
}

struct Engine_IsStationarySlot_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ACoverLink::IsStationarySlot(int SlotIdx)
{
	static UFieldFunc* pFnIsStationarySlot = NULL;
	if(!pFnIsStationarySlot)
		pFnIsStationarySlot = UObject::FindFunction("Function Engine.CoverLink.IsStationarySlot");

	Engine_IsStationarySlot_Parms IsStationarySlot_Parms;
	IsStationarySlot_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnIsStationarySlot,NULL,&IsStationarySlot_Parms,NULL);
	return IsStationarySlot_Parms.ReturnValue;
}

struct Engine_IsExposedTo_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	struct FCoverInfo                                  ChkSlot;                                          		// 0x000004 (0x0008)              
	float                                              out_ExposedScale;                                 		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool ACoverLink::IsExposedTo(int SlotIdx,struct FCoverInfo ChkSlot,float* out_ExposedScale)
{
	static UFieldFunc* pFnIsExposedTo = NULL;
	if(!pFnIsExposedTo)
		pFnIsExposedTo = UObject::FindFunction("Function Engine.CoverLink.IsExposedTo");

	Engine_IsExposedTo_Parms IsExposedTo_Parms;
	IsExposedTo_Parms.SlotIdx = SlotIdx;
	memcpy(&IsExposedTo_Parms.ChkSlot,&ChkSlot,0x8);
	pFnIsExposedTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsExposedTo,NULL,&IsExposedTo_Parms,NULL);
	pFnIsExposedTo->FunctionFlags |= 0x400;
	if(out_ExposedScale)
		*out_ExposedScale = IsExposedTo_Parms.out_ExposedScale;
	return IsExposedTo_Parms.ReturnValue;
}

struct Engine_GetLocationDescription_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char ACoverLink::GetLocationDescription(int SlotIdx)
{
	static UFieldFunc* pFnGetLocationDescription = NULL;
	if(!pFnGetLocationDescription)
		pFnGetLocationDescription = UObject::FindFunction("Function Engine.CoverLink.GetLocationDescription");

	Engine_GetLocationDescription_Parms GetLocationDescription_Parms;
	GetLocationDescription_Parms.SlotIdx = SlotIdx;
	pFnGetLocationDescription->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLocationDescription,NULL,&GetLocationDescription_Parms,NULL);
	pFnGetLocationDescription->FunctionFlags |= 0x400;
	return GetLocationDescription_Parms.ReturnValue;
}

struct Engine_GetSlotRotation_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bForceUseOffset : 1;                              		// 0x000004 (0x0004) [0x00000001] 
	FRotator                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FRotator ACoverLink::GetSlotRotation(int SlotIdx,bool bForceUseOffset)
{
	static UFieldFunc* pFnGetSlotRotation = NULL;
	if(!pFnGetSlotRotation)
		pFnGetSlotRotation = UObject::FindFunction("Function Engine.CoverLink.GetSlotRotation");

	Engine_GetSlotRotation_Parms GetSlotRotation_Parms;
	GetSlotRotation_Parms.SlotIdx = SlotIdx;
	GetSlotRotation_Parms.bForceUseOffset = bForceUseOffset;
	pFnGetSlotRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotRotation,NULL,&GetSlotRotation_Parms,NULL);
	pFnGetSlotRotation->FunctionFlags |= 0x400;
	return GetSlotRotation_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ACoverLink::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.CoverLink.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_GetFireLinkTo_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	struct FCoverInfo                                  ChkCover;                                         		// 0x000004 (0x0008)              
	unsigned char                                      ChkAction;                                        		// 0x00000C (0x0001)              
	unsigned char                                      ChkType;                                          		// 0x00000D (0x0001)              
	unsigned char                                      _0x00000E[0x2];                                   		// 0x00000E (0x0002) ALIGNEMENT
	int                                                out_FireLinkIdx;                                  		// 0x000010 (0x0004)              
	TArray<int>                                        out_Items;                                        		// 0x000014 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool ACoverLink::GetFireLinkTo(int SlotIdx,struct FCoverInfo ChkCover,unsigned char ChkAction,unsigned char ChkType,int* out_FireLinkIdx,TArray<int>* out_Items)
{
	static UFieldFunc* pFnGetFireLinkTo = NULL;
	if(!pFnGetFireLinkTo)
		pFnGetFireLinkTo = UObject::FindFunction("Function Engine.CoverLink.GetFireLinkTo");

	Engine_GetFireLinkTo_Parms GetFireLinkTo_Parms;
	GetFireLinkTo_Parms.SlotIdx = SlotIdx;
	memcpy(&GetFireLinkTo_Parms.ChkCover,&ChkCover,0x8);
	GetFireLinkTo_Parms.ChkAction = ChkAction;
	GetFireLinkTo_Parms.ChkType = ChkType;
	pFnGetFireLinkTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFireLinkTo,NULL,&GetFireLinkTo_Parms,NULL);
	pFnGetFireLinkTo->FunctionFlags |= 0x400;
	if(out_FireLinkIdx)
		*out_FireLinkIdx = GetFireLinkTo_Parms.out_FireLinkIdx;
	if(out_Items)
		memcpy(out_Items,&GetFireLinkTo_Parms.out_Items,0xC);
	return GetFireLinkTo_Parms.ReturnValue;
}

struct Engine_GetSwatTurnTarget_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	int                                                Direction;                                        		// 0x000004 (0x0004)              
	struct FCoverReference                             out_Info;                                         		// 0x000008 (0x001C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
	//int                                                TurnIdx;                                          		// 0x000028 (0x0004)              
	//int                                                Num;                                              		// 0x00002C (0x0004)              
};

bool ACoverLink::GetSwatTurnTarget(int SlotIdx,int Direction,struct FCoverReference* out_Info)
{
	static UFieldFunc* pFnGetSwatTurnTarget = NULL;
	if(!pFnGetSwatTurnTarget)
		pFnGetSwatTurnTarget = UObject::FindFunction("Function Engine.CoverLink.GetSwatTurnTarget");

	Engine_GetSwatTurnTarget_Parms GetSwatTurnTarget_Parms;
	GetSwatTurnTarget_Parms.SlotIdx = SlotIdx;
	GetSwatTurnTarget_Parms.Direction = Direction;
	ProcessEvent(pFnGetSwatTurnTarget,NULL,&GetSwatTurnTarget_Parms,NULL);
	if(out_Info)
		memcpy(out_Info,&GetSwatTurnTarget_Parms.out_Info,0x1C);
	return GetSwatTurnTarget_Parms.ReturnValue;
}

struct Engine_IsValidClaim_Parms
{
	class APawn*                                       ChkClaim;                                         		// 0x000000 (0x0004)              
	int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
	unsigned long                                      bSkipTeamCheck : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bSkipOverlapCheck : 1;                            		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool ACoverLink::IsValidClaim(class APawn* ChkClaim,int SlotIdx,bool bSkipTeamCheck,bool bSkipOverlapCheck)
{
	static UFieldFunc* pFnIsValidClaim = NULL;
	if(!pFnIsValidClaim)
		pFnIsValidClaim = UObject::FindFunction("Function Engine.CoverLink.IsValidClaim");

	Engine_IsValidClaim_Parms IsValidClaim_Parms;
	IsValidClaim_Parms.ChkClaim = ChkClaim;
	IsValidClaim_Parms.SlotIdx = SlotIdx;
	IsValidClaim_Parms.bSkipTeamCheck = bSkipTeamCheck;
	IsValidClaim_Parms.bSkipOverlapCheck = bSkipOverlapCheck;
	pFnIsValidClaim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsValidClaim,NULL,&IsValidClaim_Parms,NULL);
	pFnIsValidClaim->FunctionFlags |= 0x400;
	return IsValidClaim_Parms.ReturnValue;
}

struct Engine_GetSlotLocation_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bForceUseOffset : 1;                              		// 0x000004 (0x0004) [0x00000001] 
	FVector3                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FVector3 ACoverLink::GetSlotLocation(int SlotIdx,bool bForceUseOffset)
{
	static UFieldFunc* pFnGetSlotLocation = NULL;
	if(!pFnGetSlotLocation)
		pFnGetSlotLocation = UObject::FindFunction("Function Engine.CoverLink.GetSlotLocation");

	Engine_GetSlotLocation_Parms GetSlotLocation_Parms;
	GetSlotLocation_Parms.SlotIdx = SlotIdx;
	GetSlotLocation_Parms.bForceUseOffset = bForceUseOffset;
	pFnGetSlotLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotLocation,NULL,&GetSlotLocation_Parms,NULL);
	pFnGetSlotLocation->FunctionFlags |= 0x400;
	return GetSlotLocation_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
	//int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
};

void ACoverLink::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.CoverLink.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_IsRightEdgeSlot_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bIgnoreLeans : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool ACoverLink::IsRightEdgeSlot(int SlotIdx,bool bIgnoreLeans)
{
	static UFieldFunc* pFnIsRightEdgeSlot = NULL;
	if(!pFnIsRightEdgeSlot)
		pFnIsRightEdgeSlot = UObject::FindFunction("Function Engine.CoverLink.IsRightEdgeSlot");

	Engine_IsRightEdgeSlot_Parms IsRightEdgeSlot_Parms;
	IsRightEdgeSlot_Parms.SlotIdx = SlotIdx;
	IsRightEdgeSlot_Parms.bIgnoreLeans = bIgnoreLeans;
	pFnIsRightEdgeSlot->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsRightEdgeSlot,NULL,&IsRightEdgeSlot_Parms,NULL);
	pFnIsRightEdgeSlot->FunctionFlags |= 0x400;
	return IsRightEdgeSlot_Parms.ReturnValue;
}

struct Engine_IsEnabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool ACoverLink::IsEnabled()
{
	static UFieldFunc* pFnIsEnabled = NULL;
	if(!pFnIsEnabled)
		pFnIsEnabled = UObject::FindFunction("Function Engine.CoverLink.IsEnabled");

	Engine_IsEnabled_Parms IsEnabled_Parms;
	pFnIsEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsEnabled,NULL,&IsEnabled_Parms,NULL);
	pFnIsEnabled->FunctionFlags |= 0x400;
	return IsEnabled_Parms.ReturnValue;
}

struct Engine_GetDebugAbbrev_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString ACoverLink::GetDebugAbbrev()
{
	static UFieldFunc* pFnGetDebugAbbrev = NULL;
	if(!pFnGetDebugAbbrev)
		pFnGetDebugAbbrev = UObject::FindFunction("Function Engine.CoverLink.GetDebugAbbrev");

	Engine_GetDebugAbbrev_Parms GetDebugAbbrev_Parms;
	ProcessEvent(pFnGetDebugAbbrev,NULL,&GetDebugAbbrev_Parms,NULL);
	return GetDebugAbbrev_Parms.ReturnValue;
}

struct Engine_GetSlotViewPoint_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned char                                      Type;                                             		// 0x000004 (0x0001)              
	unsigned char                                      Action;                                           		// 0x000005 (0x0001)              
	unsigned char                                      _0x000006[0x2];                                   		// 0x000006 (0x0002) ALIGNEMENT
	FVector3                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FVector3 ACoverLink::GetSlotViewPoint(int SlotIdx,unsigned char Type,unsigned char Action)
{
	static UFieldFunc* pFnGetSlotViewPoint = NULL;
	if(!pFnGetSlotViewPoint)
		pFnGetSlotViewPoint = UObject::FindFunction("Function Engine.CoverLink.GetSlotViewPoint");

	Engine_GetSlotViewPoint_Parms GetSlotViewPoint_Parms;
	GetSlotViewPoint_Parms.SlotIdx = SlotIdx;
	GetSlotViewPoint_Parms.Type = Type;
	GetSlotViewPoint_Parms.Action = Action;
	pFnGetSlotViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotViewPoint,NULL,&GetSlotViewPoint_Parms,NULL);
	pFnGetSlotViewPoint->FunctionFlags |= 0x400;
	return GetSlotViewPoint_Parms.ReturnValue;
}

struct Engine_AddCoverSlot_Parms
{
	FVector3                                           SlotLocation;                                     		// 0x000000 (0x000C)              
	FRotator                                           SlotRotation;                                     		// 0x00000C (0x000C)              
	int                                                SlotIdx;                                          		// 0x000018 (0x0004)              
	unsigned long                                      bForceSlotUpdate : 1;                             		// 0x00001C (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x000020 (0x0004)              
};

int ACoverLink::AddCoverSlot(FVector3 SlotLocation,FRotator SlotRotation,int SlotIdx,bool bForceSlotUpdate)
{
	static UFieldFunc* pFnAddCoverSlot = NULL;
	if(!pFnAddCoverSlot)
		pFnAddCoverSlot = UObject::FindFunction("Function Engine.CoverLink.AddCoverSlot");

	Engine_AddCoverSlot_Parms AddCoverSlot_Parms;
	memcpy(&AddCoverSlot_Parms.SlotLocation,&SlotLocation,0xC);
	memcpy(&AddCoverSlot_Parms.SlotRotation,&SlotRotation,0xC);
	AddCoverSlot_Parms.SlotIdx = SlotIdx;
	AddCoverSlot_Parms.bForceSlotUpdate = bForceSlotUpdate;
	pFnAddCoverSlot->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddCoverSlot,NULL,&AddCoverSlot_Parms,NULL);
	pFnAddCoverSlot->FunctionFlags |= 0x400;
	return AddCoverSlot_Parms.ReturnValue;
}

struct Engine_GetSlotActions_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	TArray<unsigned char>                              Actions;                                          		// 0x000004 (0x000C)              
};

void ACoverLink::GetSlotActions(int SlotIdx,TArray<unsigned char>* Actions)
{
	static UFieldFunc* pFnGetSlotActions = NULL;
	if(!pFnGetSlotActions)
		pFnGetSlotActions = UObject::FindFunction("Function Engine.CoverLink.GetSlotActions");

	Engine_GetSlotActions_Parms GetSlotActions_Parms;
	GetSlotActions_Parms.SlotIdx = SlotIdx;
	pFnGetSlotActions->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotActions,NULL,&GetSlotActions_Parms,NULL);
	pFnGetSlotActions->FunctionFlags |= 0x400;
	if(Actions)
		memcpy(Actions,&GetSlotActions_Parms.Actions,0xC);
}

struct Engine_GetDebugString_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString ACoverLink::GetDebugString(int SlotIdx)
{
	static UFieldFunc* pFnGetDebugString = NULL;
	if(!pFnGetDebugString)
		pFnGetDebugString = UObject::FindFunction("Function Engine.CoverLink.GetDebugString");

	Engine_GetDebugString_Parms GetDebugString_Parms;
	GetDebugString_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnGetDebugString,NULL,&GetDebugString_Parms,NULL);
	return GetDebugString_Parms.ReturnValue;
}

struct Engine_Tick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	//int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
	//struct FCoverSlot                                  Slot;                                             		// 0x000008 (0x00BC)              
	//FVector3                                           OwnerLoc;                                         		// 0x0000C4 (0x000C)              
	//unsigned char                                      R;                                                		// 0x0000D0 (0x0001)              
	//unsigned char                                      G;                                                		// 0x0000D1 (0x0001)              
	//unsigned char                                      B;                                                		// 0x0000D2 (0x0001)              
};

void ACoverLink::Tick(float DeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.CoverLink.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_AutoAdjustSlot_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bOnlyCheckLeans : 1;                              		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool ACoverLink::AutoAdjustSlot(int SlotIdx,bool bOnlyCheckLeans)
{
	static UFieldFunc* pFnAutoAdjustSlot = NULL;
	if(!pFnAutoAdjustSlot)
		pFnAutoAdjustSlot = UObject::FindFunction("Function Engine.CoverLink.AutoAdjustSlot");

	Engine_AutoAdjustSlot_Parms AutoAdjustSlot_Parms;
	AutoAdjustSlot_Parms.SlotIdx = SlotIdx;
	AutoAdjustSlot_Parms.bOnlyCheckLeans = bOnlyCheckLeans;
	pFnAutoAdjustSlot->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAutoAdjustSlot,NULL,&AutoAdjustSlot_Parms,NULL);
	pFnAutoAdjustSlot->FunctionFlags |= 0x400;
	return AutoAdjustSlot_Parms.ReturnValue;
}

struct Engine_SetInvalidUntil_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	float                                              TimeToBecomeValid;                                		// 0x000004 (0x0004)              
};

void ACoverLink::SetInvalidUntil(int SlotIdx,float TimeToBecomeValid)
{
	static UFieldFunc* pFnSetInvalidUntil = NULL;
	if(!pFnSetInvalidUntil)
		pFnSetInvalidUntil = UObject::FindFunction("Function Engine.CoverLink.SetInvalidUntil");

	Engine_SetInvalidUntil_Parms SetInvalidUntil_Parms;
	SetInvalidUntil_Parms.SlotIdx = SlotIdx;
	SetInvalidUntil_Parms.TimeToBecomeValid = TimeToBecomeValid;
	ProcessEvent(pFnSetInvalidUntil,NULL,&SetInvalidUntil_Parms,NULL);
}

struct Engine_IsLeftEdgeSlot_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bIgnoreLeans : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool ACoverLink::IsLeftEdgeSlot(int SlotIdx,bool bIgnoreLeans)
{
	static UFieldFunc* pFnIsLeftEdgeSlot = NULL;
	if(!pFnIsLeftEdgeSlot)
		pFnIsLeftEdgeSlot = UObject::FindFunction("Function Engine.CoverLink.IsLeftEdgeSlot");

	Engine_IsLeftEdgeSlot_Parms IsLeftEdgeSlot_Parms;
	IsLeftEdgeSlot_Parms.SlotIdx = SlotIdx;
	IsLeftEdgeSlot_Parms.bIgnoreLeans = bIgnoreLeans;
	pFnIsLeftEdgeSlot->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsLeftEdgeSlot,NULL,&IsLeftEdgeSlot_Parms,NULL);
	pFnIsLeftEdgeSlot->FunctionFlags |= 0x400;
	return IsLeftEdgeSlot_Parms.ReturnValue;
}

struct Engine_AllowLeftTransition_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                NextSlotIdx;                                      		// 0x000008 (0x0004)              
};

bool ACoverLink::AllowLeftTransition(int SlotIdx)
{
	static UFieldFunc* pFnAllowLeftTransition = NULL;
	if(!pFnAllowLeftTransition)
		pFnAllowLeftTransition = UObject::FindFunction("Function Engine.CoverLink.AllowLeftTransition");

	Engine_AllowLeftTransition_Parms AllowLeftTransition_Parms;
	AllowLeftTransition_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnAllowLeftTransition,NULL,&AllowLeftTransition_Parms,NULL);
	return AllowLeftTransition_Parms.ReturnValue;
}

struct Engine_Claim_Parms
{
	class APawn*                                       NewClaim;                                         		// 0x000000 (0x0004)              
	int                                                SlotIdx;                                          		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//int                                                Idx;                                              		// 0x00000C (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bDoClaim : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000018 (0x0004)              
	//class APawn*                                       PreviousOwner;                                    		// 0x00001C (0x0004)              
	//int                                                NumClaims;                                        		// 0x000020 (0x0004)              
	//TArray<int>                                        SlotList;                                         		// 0x000024 (0x000C)              
	//struct FString                                     str;                                              		// 0x000030 (0x000C)              
};

bool ACoverLink::Claim(class APawn* NewClaim,int SlotIdx)
{
	static UFieldFunc* pFnClaim = NULL;
	if(!pFnClaim)
		pFnClaim = UObject::FindFunction("Function Engine.CoverLink.Claim");

	Engine_Claim_Parms Claim_Parms;
	Claim_Parms.NewClaim = NewClaim;
	Claim_Parms.SlotIdx = SlotIdx;
	ProcessEvent(pFnClaim,NULL,&Claim_Parms,NULL);
	return Claim_Parms.ReturnValue;
}

struct Engine_GetSlotMarker_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	class ACoverSlotMarker*                            ReturnValue;                                      		// 0x000004 (0x0004)              
};

class ACoverSlotMarker* ACoverLink::GetSlotMarker(int SlotIdx)
{
	static UFieldFunc* pFnGetSlotMarker = NULL;
	if(!pFnGetSlotMarker)
		pFnGetSlotMarker = UObject::FindFunction("Function Engine.CoverLink.GetSlotMarker");

	Engine_GetSlotMarker_Parms GetSlotMarker_Parms;
	GetSlotMarker_Parms.SlotIdx = SlotIdx;
	pFnGetSlotMarker->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotMarker,NULL,&GetSlotMarker_Parms,NULL);
	pFnGetSlotMarker->FunctionFlags |= 0x400;
	return GetSlotMarker_Parms.ReturnValue;
}

struct Engine_IsEdgeSlot_Parms
{
	int                                                SlotIdx;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bIgnoreLeans : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool ACoverLink::IsEdgeSlot(int SlotIdx,bool bIgnoreLeans)
{
	static UFieldFunc* pFnIsEdgeSlot = NULL;
	if(!pFnIsEdgeSlot)
		pFnIsEdgeSlot = UObject::FindFunction("Function Engine.CoverLink.IsEdgeSlot");

	Engine_IsEdgeSlot_Parms IsEdgeSlot_Parms;
	IsEdgeSlot_Parms.SlotIdx = SlotIdx;
	IsEdgeSlot_Parms.bIgnoreLeans = bIgnoreLeans;
	pFnIsEdgeSlot->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsEdgeSlot,NULL,&IsEdgeSlot_Parms,NULL);
	pFnIsEdgeSlot->FunctionFlags |= 0x400;
	return IsEdgeSlot_Parms.ReturnValue;
}

struct Engine_GetSlotLocation_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 ACoverSlotMarker::GetSlotLocation()
{
	static UFieldFunc* pFnGetSlotLocation = NULL;
	if(!pFnGetSlotLocation)
		pFnGetSlotLocation = UObject::FindFunction("Function Engine.CoverSlotMarker.GetSlotLocation");

	Engine_GetSlotLocation_Parms GetSlotLocation_Parms;
	pFnGetSlotLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotLocation,NULL,&GetSlotLocation_Parms,NULL);
	pFnGetSlotLocation->FunctionFlags |= 0x400;
	return GetSlotLocation_Parms.ReturnValue;
}

struct Engine_GetSlotRotation_Parms
{
	FRotator                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FRotator ACoverSlotMarker::GetSlotRotation()
{
	static UFieldFunc* pFnGetSlotRotation = NULL;
	if(!pFnGetSlotRotation)
		pFnGetSlotRotation = UObject::FindFunction("Function Engine.CoverSlotMarker.GetSlotRotation");

	Engine_GetSlotRotation_Parms GetSlotRotation_Parms;
	pFnGetSlotRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSlotRotation,NULL,&GetSlotRotation_Parms,NULL);
	pFnGetSlotRotation->FunctionFlags |= 0x400;
	return GetSlotRotation_Parms.ReturnValue;
}

struct Engine_GetDebugAbbrev_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString ACoverSlotMarker::GetDebugAbbrev()
{
	static UFieldFunc* pFnGetDebugAbbrev = NULL;
	if(!pFnGetDebugAbbrev)
		pFnGetDebugAbbrev = UObject::FindFunction("Function Engine.CoverSlotMarker.GetDebugAbbrev");

	Engine_GetDebugAbbrev_Parms GetDebugAbbrev_Parms;
	ProcessEvent(pFnGetDebugAbbrev,NULL,&GetDebugAbbrev_Parms,NULL);
	return GetDebugAbbrev_Parms.ReturnValue;
}

struct Engine_IsValidClaim_Parms
{
	class APawn*                                       ChkClaim;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bSkipTeamCheck : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bSkipOverlapCheck : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool ACoverSlotMarker::IsValidClaim(class APawn* ChkClaim,bool bSkipTeamCheck,bool bSkipOverlapCheck)
{
	static UFieldFunc* pFnIsValidClaim = NULL;
	if(!pFnIsValidClaim)
		pFnIsValidClaim = UObject::FindFunction("Function Engine.CoverSlotMarker.IsValidClaim");

	Engine_IsValidClaim_Parms IsValidClaim_Parms;
	IsValidClaim_Parms.ChkClaim = ChkClaim;
	IsValidClaim_Parms.bSkipTeamCheck = bSkipTeamCheck;
	IsValidClaim_Parms.bSkipOverlapCheck = bSkipOverlapCheck;
	pFnIsValidClaim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsValidClaim,NULL,&IsValidClaim_Parms,NULL);
	pFnIsValidClaim->FunctionFlags |= 0x400;
	return IsValidClaim_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void ACoverSlotMarker::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.CoverSlotMarker.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_SetSlotEnabled_Parms
{
	unsigned long                                      bEnable : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void ACoverSlotMarker::SetSlotEnabled(bool bEnable)
{
	static UFieldFunc* pFnSetSlotEnabled = NULL;
	if(!pFnSetSlotEnabled)
		pFnSetSlotEnabled = UObject::FindFunction("Function Engine.CoverSlotMarker.SetSlotEnabled");

	Engine_SetSlotEnabled_Parms SetSlotEnabled_Parms;
	SetSlotEnabled_Parms.bEnable = bEnable;
	pFnSetSlotEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSlotEnabled,NULL,&SetSlotEnabled_Parms,NULL);
	pFnSetSlotEnabled->FunctionFlags |= 0x400;
}

struct Engine_MoverOpened_Parms
{
};

void ADoorMarker::MoverOpened()
{
	static UFieldFunc* pFnMoverOpened = NULL;
	if(!pFnMoverOpened)
		pFnMoverOpened = UObject::FindFunction("Function Engine.DoorMarker.MoverOpened");

	Engine_MoverOpened_Parms MoverOpened_Parms;
	ProcessEvent(pFnMoverOpened,NULL,&MoverOpened_Parms,NULL);
}

struct Engine_SpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
	//class AActor*                                      TouchActor;                                       		// 0x000008 (0x0004)              
};

class AActor* ADoorMarker::SpecialHandling(class APawn* Other)
{
	static UFieldFunc* pFnSpecialHandling = NULL;
	if(!pFnSpecialHandling)
		pFnSpecialHandling = UObject::FindFunction("Function Engine.DoorMarker.SpecialHandling");

	Engine_SpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;
	ProcessEvent(pFnSpecialHandling,NULL,&SpecialHandling_Parms,NULL);
	return SpecialHandling_Parms.ReturnValue;
}

struct Engine_MoverClosed_Parms
{
};

void ADoorMarker::MoverClosed()
{
	static UFieldFunc* pFnMoverClosed = NULL;
	if(!pFnMoverClosed)
		pFnMoverClosed = UObject::FindFunction("Function Engine.DoorMarker.MoverClosed");

	Engine_MoverClosed_Parms MoverClosed_Parms;
	ProcessEvent(pFnMoverClosed,NULL,&MoverClosed_Parms,NULL);
}

struct Engine_ProceedWithMove_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ADoorMarker::ProceedWithMove(class APawn* Other)
{
	static UFieldFunc* pFnProceedWithMove = NULL;
	if(!pFnProceedWithMove)
		pFnProceedWithMove = UObject::FindFunction("Function Engine.DoorMarker.ProceedWithMove");

	Engine_ProceedWithMove_Parms ProceedWithMove_Parms;
	ProceedWithMove_Parms.Other = Other;
	ProcessEvent(pFnProceedWithMove,NULL,&ProceedWithMove_Parms,NULL);
	return ProceedWithMove_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void ADoorMarker::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.DoorMarker.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_SuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ADoorMarker::SuggestMovePreparation(class APawn* Other)
{
	static UFieldFunc* pFnSuggestMovePreparation = NULL;
	if(!pFnSuggestMovePreparation)
		pFnSuggestMovePreparation = UObject::FindFunction("Function Engine.DoorMarker.SuggestMovePreparation");

	Engine_SuggestMovePreparation_Parms SuggestMovePreparation_Parms;
	SuggestMovePreparation_Parms.Other = Other;
	ProcessEvent(pFnSuggestMovePreparation,NULL,&SuggestMovePreparation_Parms,NULL);
	return SuggestMovePreparation_Parms.ReturnValue;
}

struct Engine_ProceedWithMove_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ALiftCenter::ProceedWithMove(class APawn* Other)
{
	static UFieldFunc* pFnProceedWithMove = NULL;
	if(!pFnProceedWithMove)
		pFnProceedWithMove = UObject::FindFunction("Function Engine.LiftCenter.ProceedWithMove");

	Engine_ProceedWithMove_Parms ProceedWithMove_Parms;
	ProceedWithMove_Parms.Other = Other;
	ProcessEvent(pFnProceedWithMove,NULL,&ProceedWithMove_Parms,NULL);
	return ProceedWithMove_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void ALiftCenter::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.LiftCenter.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_SuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ALiftCenter::SuggestMovePreparation(class APawn* Other)
{
	static UFieldFunc* pFnSuggestMovePreparation = NULL;
	if(!pFnSuggestMovePreparation)
		pFnSuggestMovePreparation = UObject::FindFunction("Function Engine.LiftCenter.SuggestMovePreparation");

	Engine_SuggestMovePreparation_Parms SuggestMovePreparation_Parms;
	SuggestMovePreparation_Parms.Other = Other;
	ProcessEvent(pFnSuggestMovePreparation,NULL,&SuggestMovePreparation_Parms,NULL);
	return SuggestMovePreparation_Parms.ReturnValue;
}

struct Engine_SpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class AActor* ALiftCenter::SpecialHandling(class APawn* Other)
{
	static UFieldFunc* pFnSpecialHandling = NULL;
	if(!pFnSpecialHandling)
		pFnSpecialHandling = UObject::FindFunction("Function Engine.LiftCenter.SpecialHandling");

	Engine_SpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;
	ProcessEvent(pFnSpecialHandling,NULL,&SpecialHandling_Parms,NULL);
	return SpecialHandling_Parms.ReturnValue;
}

struct Engine_SuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//class AController*                                 C;                                                		// 0x000008 (0x0004)              
};

bool ALiftExit::SuggestMovePreparation(class APawn* Other)
{
	static UFieldFunc* pFnSuggestMovePreparation = NULL;
	if(!pFnSuggestMovePreparation)
		pFnSuggestMovePreparation = UObject::FindFunction("Function Engine.LiftExit.SuggestMovePreparation");

	Engine_SuggestMovePreparation_Parms SuggestMovePreparation_Parms;
	SuggestMovePreparation_Parms.Other = Other;
	ProcessEvent(pFnSuggestMovePreparation,NULL,&SuggestMovePreparation_Parms,NULL);
	return SuggestMovePreparation_Parms.ReturnValue;
}

struct Engine_CanBeReachedFromLiftBy_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ALiftExit::CanBeReachedFromLiftBy(class APawn* Other)
{
	static UFieldFunc* pFnCanBeReachedFromLiftBy = NULL;
	if(!pFnCanBeReachedFromLiftBy)
		pFnCanBeReachedFromLiftBy = UObject::FindFunction("Function Engine.LiftExit.CanBeReachedFromLiftBy");

	Engine_CanBeReachedFromLiftBy_Parms CanBeReachedFromLiftBy_Parms;
	CanBeReachedFromLiftBy_Parms.Other = Other;
	ProcessEvent(pFnCanBeReachedFromLiftBy,NULL,&CanBeReachedFromLiftBy_Parms,NULL);
	return CanBeReachedFromLiftBy_Parms.ReturnValue;
}

struct Engine_WaitForLift_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
};

void ALiftExit::WaitForLift(class APawn* Other)
{
	static UFieldFunc* pFnWaitForLift = NULL;
	if(!pFnWaitForLift)
		pFnWaitForLift = UObject::FindFunction("Function Engine.LiftExit.WaitForLift");

	Engine_WaitForLift_Parms WaitForLift_Parms;
	WaitForLift_Parms.Other = Other;
	ProcessEvent(pFnWaitForLift,NULL,&WaitForLift_Parms,NULL);
}

struct Engine_GetDebugAbbrev_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APathNode::GetDebugAbbrev()
{
	static UFieldFunc* pFnGetDebugAbbrev = NULL;
	if(!pFnGetDebugAbbrev)
		pFnGetDebugAbbrev = UObject::FindFunction("Function Engine.PathNode.GetDebugAbbrev");

	Engine_GetDebugAbbrev_Parms GetDebugAbbrev_Parms;
	ProcessEvent(pFnGetDebugAbbrev,NULL,&GetDebugAbbrev_Parms,NULL);
	return GetDebugAbbrev_Parms.ReturnValue;
}

struct Engine_GetRespawnTime_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APickupFactory::GetRespawnTime()
{
	static UFieldFunc* pFnGetRespawnTime = NULL;
	if(!pFnGetRespawnTime)
		pFnGetRespawnTime = UObject::FindFunction("Function Engine.PickupFactory.GetRespawnTime");

	Engine_GetRespawnTime_Parms GetRespawnTime_Parms;
	ProcessEvent(pFnGetRespawnTime,NULL,&GetRespawnTime_Parms,NULL);
	return GetRespawnTime_Parms.ReturnValue;
}

struct Engine_RespawnEffect_Parms
{
};

void APickupFactory::RespawnEffect()
{
	static UFieldFunc* pFnRespawnEffect = NULL;
	if(!pFnRespawnEffect)
		pFnRespawnEffect = UObject::FindFunction("Function Engine.PickupFactory.RespawnEffect");

	Engine_RespawnEffect_Parms RespawnEffect_Parms;
	ProcessEvent(pFnRespawnEffect,NULL,&RespawnEffect_Parms,NULL);
}

struct Engine_ShutDown_Parms
{
};

void APickupFactory::ShutDown()
{
	static UFieldFunc* pFnShutDown = NULL;
	if(!pFnShutDown)
		pFnShutDown = UObject::FindFunction("Function Engine.PickupFactory.ShutDown");

	Engine_ShutDown_Parms ShutDown_Parms;
	ProcessEvent(pFnShutDown,NULL,&ShutDown_Parms,NULL);
}

struct Engine_PreBeginPlay_Parms
{
};

void APickupFactory::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.PickupFactory.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_DetourWeight_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	float                                              PathWeight;                                       		// 0x000004 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float APickupFactory::DetourWeight(class APawn* Other,float PathWeight)
{
	static UFieldFunc* pFnDetourWeight = NULL;
	if(!pFnDetourWeight)
		pFnDetourWeight = UObject::FindFunction("Function Engine.PickupFactory.DetourWeight");

	Engine_DetourWeight_Parms DetourWeight_Parms;
	DetourWeight_Parms.Other = Other;
	DetourWeight_Parms.PathWeight = PathWeight;
	ProcessEvent(pFnDetourWeight,NULL,&DetourWeight_Parms,NULL);
	return DetourWeight_Parms.ReturnValue;
}

struct Engine_SetPickupVisible_Parms
{
};

void APickupFactory::SetPickupVisible()
{
	static UFieldFunc* pFnSetPickupVisible = NULL;
	if(!pFnSetPickupVisible)
		pFnSetPickupVisible = UObject::FindFunction("Function Engine.PickupFactory.SetPickupVisible");

	Engine_SetPickupVisible_Parms SetPickupVisible_Parms;
	ProcessEvent(pFnSetPickupVisible,NULL,&SetPickupVisible_Parms,NULL);
}

struct Engine_CheckForErrors_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class AActor*                                      HitActor;                                         		// 0x000004 (0x0004)              
	//FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

bool APickupFactory::CheckForErrors()
{
	static UFieldFunc* pFnCheckForErrors = NULL;
	if(!pFnCheckForErrors)
		pFnCheckForErrors = UObject::FindFunction("Function Engine.PickupFactory.CheckForErrors");

	Engine_CheckForErrors_Parms CheckForErrors_Parms;
	ProcessEvent(pFnCheckForErrors,NULL,&CheckForErrors_Parms,NULL);
	return CheckForErrors_Parms.ReturnValue;
}

struct Engine_SetRespawn_Parms
{
};

void APickupFactory::SetRespawn()
{
	static UFieldFunc* pFnSetRespawn = NULL;
	if(!pFnSetRespawn)
		pFnSetRespawn = UObject::FindFunction("Function Engine.PickupFactory.SetRespawn");

	Engine_SetRespawn_Parms SetRespawn_Parms;
	ProcessEvent(pFnSetRespawn,NULL,&SetRespawn_Parms,NULL);
}

struct Engine_ReadyToPickup_Parms
{
	float                                              MaxWait;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APickupFactory::ReadyToPickup(float MaxWait)
{
	static UFieldFunc* pFnReadyToPickup = NULL;
	if(!pFnReadyToPickup)
		pFnReadyToPickup = UObject::FindFunction("Function Engine.PickupFactory.ReadyToPickup");

	Engine_ReadyToPickup_Parms ReadyToPickup_Parms;
	ReadyToPickup_Parms.MaxWait = MaxWait;
	ProcessEvent(pFnReadyToPickup,NULL,&ReadyToPickup_Parms,NULL);
	return ReadyToPickup_Parms.ReturnValue;
}

struct Engine_RecheckValidTouch_Parms
{
};

void APickupFactory::RecheckValidTouch()
{
	static UFieldFunc* pFnRecheckValidTouch = NULL;
	if(!pFnRecheckValidTouch)
		pFnRecheckValidTouch = UObject::FindFunction("Function Engine.PickupFactory.RecheckValidTouch");

	Engine_RecheckValidTouch_Parms RecheckValidTouch_Parms;
	ProcessEvent(pFnRecheckValidTouch,NULL,&RecheckValidTouch_Parms,NULL);
}

struct Engine_GiveTo_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void APickupFactory::GiveTo(class APawn* P)
{
	static UFieldFunc* pFnGiveTo = NULL;
	if(!pFnGiveTo)
		pFnGiveTo = UObject::FindFunction("Function Engine.PickupFactory.GiveTo");

	Engine_GiveTo_Parms GiveTo_Parms;
	GiveTo_Parms.P = P;
	ProcessEvent(pFnGiveTo,NULL,&GiveTo_Parms,NULL);
}

struct Engine_SetInitialState_Parms
{
};

void APickupFactory::SetInitialState()
{
	static UFieldFunc* pFnSetInitialState = NULL;
	if(!pFnSetInitialState)
		pFnSetInitialState = UObject::FindFunction("Function Engine.PickupFactory.SetInitialState");

	Engine_SetInitialState_Parms SetInitialState_Parms;
	ProcessEvent(pFnSetInitialState,NULL,&SetInitialState_Parms,NULL);
}

struct Engine_SetPickupHidden_Parms
{
};

void APickupFactory::SetPickupHidden()
{
	static UFieldFunc* pFnSetPickupHidden = NULL;
	if(!pFnSetPickupHidden)
		pFnSetPickupHidden = UObject::FindFunction("Function Engine.PickupFactory.SetPickupHidden");

	Engine_SetPickupHidden_Parms SetPickupHidden_Parms;
	ProcessEvent(pFnSetPickupHidden,NULL,&SetPickupHidden_Parms,NULL);
}

struct Engine_StartSleeping_Parms
{
};

void APickupFactory::StartSleeping()
{
	static UFieldFunc* pFnStartSleeping = NULL;
	if(!pFnStartSleeping)
		pFnStartSleeping = UObject::FindFunction("Function Engine.PickupFactory.StartSleeping");

	Engine_StartSleeping_Parms StartSleeping_Parms;
	ProcessEvent(pFnStartSleeping,NULL,&StartSleeping_Parms,NULL);
}

struct Engine_ShouldRespawn_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APickupFactory::ShouldRespawn()
{
	static UFieldFunc* pFnShouldRespawn = NULL;
	if(!pFnShouldRespawn)
		pFnShouldRespawn = UObject::FindFunction("Function Engine.PickupFactory.ShouldRespawn");

	Engine_ShouldRespawn_Parms ShouldRespawn_Parms;
	ProcessEvent(pFnShouldRespawn,NULL,&ShouldRespawn_Parms,NULL);
	return ShouldRespawn_Parms.ReturnValue;
}

struct Engine_StaticPrecache_Parms
{
	class AWorldInfo*                                  W;                                                		// 0x000000 (0x0004)              
};

void APickupFactory::StaticPrecache(class AWorldInfo* W)
{
	static UFieldFunc* pFnStaticPrecache = NULL;
	if(!pFnStaticPrecache)
		pFnStaticPrecache = UObject::FindFunction("Function Engine.PickupFactory.StaticPrecache");

	Engine_StaticPrecache_Parms StaticPrecache_Parms;
	StaticPrecache_Parms.W = W;
	ProcessEvent(pFnStaticPrecache,NULL,&StaticPrecache_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void APickupFactory::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.PickupFactory.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_PickedUpBy_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void APickupFactory::PickedUpBy(class APawn* P)
{
	static UFieldFunc* pFnPickedUpBy = NULL;
	if(!pFnPickedUpBy)
		pFnPickedUpBy = UObject::FindFunction("Function Engine.PickupFactory.PickedUpBy");

	Engine_PickedUpBy_Parms PickedUpBy_Parms;
	PickedUpBy_Parms.P = P;
	ProcessEvent(pFnPickedUpBy,NULL,&PickedUpBy_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void APickupFactory::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.PickupFactory.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void APickupFactory::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.PickupFactory.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void APlayerStart::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.PlayerStart.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_CanTeleport_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APortalMarker::CanTeleport(class AActor* A)
{
	static UFieldFunc* pFnCanTeleport = NULL;
	if(!pFnCanTeleport)
		pFnCanTeleport = UObject::FindFunction("Function Engine.PortalMarker.CanTeleport");

	Engine_CanTeleport_Parms CanTeleport_Parms;
	CanTeleport_Parms.A = A;
	pFnCanTeleport->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanTeleport,NULL,&CanTeleport_Parms,NULL);
	pFnCanTeleport->FunctionFlags |= 0x400;
	return CanTeleport_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

void ATeleporter::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.Teleporter.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_CanTeleport_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ATeleporter::CanTeleport(class AActor* A)
{
	static UFieldFunc* pFnCanTeleport = NULL;
	if(!pFnCanTeleport)
		pFnCanTeleport = UObject::FindFunction("Function Engine.Teleporter.CanTeleport");

	Engine_CanTeleport_Parms CanTeleport_Parms;
	CanTeleport_Parms.A = A;
	pFnCanTeleport->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanTeleport,NULL,&CanTeleport_Parms,NULL);
	pFnCanTeleport->FunctionFlags |= 0x400;
	return CanTeleport_Parms.ReturnValue;
}

struct Engine_Accept_Parms
{
	class AActor*                                      Incoming;                                         		// 0x000000 (0x0004)              
	class AActor*                                      Source;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//FRotator                                           NewRot;                                           		// 0x00000C (0x000C)              
	//FRotator                                           oldRot;                                           		// 0x000018 (0x000C)              
	//float                                              mag;                                              		// 0x000024 (0x0004)              
	//FVector3                                           oldDir;                                           		// 0x000028 (0x000C)              
	//class AController*                                 C;                                                		// 0x000034 (0x0004)              
};

bool ATeleporter::Accept(class AActor* Incoming,class AActor* Source)
{
	static UFieldFunc* pFnAccept = NULL;
	if(!pFnAccept)
		pFnAccept = UObject::FindFunction("Function Engine.Teleporter.Accept");

	Engine_Accept_Parms Accept_Parms;
	Accept_Parms.Incoming = Incoming;
	Accept_Parms.Source = Source;
	ProcessEvent(pFnAccept,NULL,&Accept_Parms,NULL);
	return Accept_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void ATeleporter::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Teleporter.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_PostTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void ATeleporter::PostTouch(class AActor* Other)
{
	static UFieldFunc* pFnPostTouch = NULL;
	if(!pFnPostTouch)
		pFnPostTouch = UObject::FindFunction("Function Engine.Teleporter.PostTouch");

	Engine_PostTouch_Parms PostTouch_Parms;
	PostTouch_Parms.Other = Other;
	pFnPostTouch->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPostTouch,NULL,&PostTouch_Parms,NULL);
	pFnPostTouch->FunctionFlags |= 0x400;
}

struct Engine_ScriptPostTouchTeleporter_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//class ATeleporter*                                 D;                                                		// 0x000004 (0x0004)              
	//class ATeleporter*                                 Dest[0x10];                                       		// 0x000008 (0x0040)              
	//int                                                I;                                                		// 0x000048 (0x0004)              
};

void ATeleporter::ScriptPostTouchTeleporter(class AActor* Other)
{
	static UFieldFunc* pFnScriptPostTouchTeleporter = NULL;
	if(!pFnScriptPostTouchTeleporter)
		pFnScriptPostTouchTeleporter = UObject::FindFunction("Function Engine.Teleporter.ScriptPostTouchTeleporter");

	Engine_ScriptPostTouchTeleporter_Parms ScriptPostTouchTeleporter_Parms;
	ScriptPostTouchTeleporter_Parms.Other = Other;
	ProcessEvent(pFnScriptPostTouchTeleporter,NULL,&ScriptPostTouchTeleporter_Parms,NULL);
}

struct Engine_SpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class AActor* ATeleporter::SpecialHandling(class APawn* Other)
{
	static UFieldFunc* pFnSpecialHandling = NULL;
	if(!pFnSpecialHandling)
		pFnSpecialHandling = UObject::FindFunction("Function Engine.Teleporter.SpecialHandling");

	Engine_SpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;
	ProcessEvent(pFnSpecialHandling,NULL,&SpecialHandling_Parms,NULL);
	return SpecialHandling_Parms.ReturnValue;
}

struct Engine_ConvertWeightToRGB_Parms
{
	float                                              fValue;                                           		// 0x000000 (0x0004)              
	struct FLinearColor                                ReturnValue;                                      		// 0x000004 (0x0010)              
};

struct FLinearColor APathGraph::ConvertWeightToRGB(float fValue)
{
	static UFieldFunc* pFnConvertWeightToRGB = NULL;
	if(!pFnConvertWeightToRGB)
		pFnConvertWeightToRGB = UObject::FindFunction("Function Engine.PathGraph.ConvertWeightToRGB");

	Engine_ConvertWeightToRGB_Parms ConvertWeightToRGB_Parms;
	ConvertWeightToRGB_Parms.fValue = fValue;
	pFnConvertWeightToRGB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnConvertWeightToRGB,NULL,&ConvertWeightToRGB_Parms,NULL);
	pFnConvertWeightToRGB->FunctionFlags |= 0x400;
	return ConvertWeightToRGB_Parms.ReturnValue;
}

struct Engine_ShowLCDebuggingInformation_Parms
{
	class UCanvas*                                     pr_Canvas;                                        		// 0x000000 (0x0004)              
};

void APathGraph::ShowLCDebuggingInformation(class UCanvas* pr_Canvas)
{
	static UFieldFunc* pFnShowLCDebuggingInformation = NULL;
	if(!pFnShowLCDebuggingInformation)
		pFnShowLCDebuggingInformation = UObject::FindFunction("Function Engine.PathGraph.ShowLCDebuggingInformation");

	Engine_ShowLCDebuggingInformation_Parms ShowLCDebuggingInformation_Parms;
	ShowLCDebuggingInformation_Parms.pr_Canvas = pr_Canvas;
	pFnShowLCDebuggingInformation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShowLCDebuggingInformation,NULL,&ShowLCDebuggingInformation_Parms,NULL);
	pFnShowLCDebuggingInformation->FunctionFlags |= 0x400;
}

struct Engine_DoJump_Parms
{
	unsigned long                                      bUpdating : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::DoJump(bool bUpdating)
{
	static UFieldFunc* pFnDoJump = NULL;
	if(!pFnDoJump)
		pFnDoJump = UObject::FindFunction("Function Engine.Pawn.DoJump");

	Engine_DoJump_Parms DoJump_Parms;
	DoJump_Parms.bUpdating = bUpdating;
	pFnDoJump->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDoJump,NULL,&DoJump_Parms,NULL);
	pFnDoJump->FunctionFlags |= 0x400;
	return DoJump_Parms.ReturnValue;
}

struct Engine_TouchingWaterVolume_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APhysicsVolume*                              V;                                                		// 0x000004 (0x0004)              
};

bool APawn::TouchingWaterVolume()
{
	static UFieldFunc* pFnTouchingWaterVolume = NULL;
	if(!pFnTouchingWaterVolume)
		pFnTouchingWaterVolume = UObject::FindFunction("Function Engine.Pawn.TouchingWaterVolume");

	Engine_TouchingWaterVolume_Parms TouchingWaterVolume_Parms;
	ProcessEvent(pFnTouchingWaterVolume,NULL,&TouchingWaterVolume_Parms,NULL);
	return TouchingWaterVolume_Parms.ReturnValue;
}

struct Engine_ClearPathStep_Parms
{
};

void APawn::ClearPathStep()
{
	static UFieldFunc* pFnClearPathStep = NULL;
	if(!pFnClearPathStep)
		pFnClearPathStep = UObject::FindFunction("Function Engine.Pawn.ClearPathStep");

	Engine_ClearPathStep_Parms ClearPathStep_Parms;
	pFnClearPathStep->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearPathStep,NULL,&ClearPathStep_Parms,NULL);
	pFnClearPathStep->FunctionFlags |= 0x400;
}

struct Engine_DrawPathStep_Parms
{
	class UCanvas*                                     C;                                                		// 0x000000 (0x0004)              
};

void APawn::DrawPathStep(class UCanvas* C)
{
	static UFieldFunc* pFnDrawPathStep = NULL;
	if(!pFnDrawPathStep)
		pFnDrawPathStep = UObject::FindFunction("Function Engine.Pawn.DrawPathStep");

	Engine_DrawPathStep_Parms DrawPathStep_Parms;
	DrawPathStep_Parms.C = C;
	pFnDrawPathStep->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawPathStep,NULL,&DrawPathStep_Parms,NULL);
	pFnDrawPathStep->FunctionFlags |= 0x400;
}

struct Engine_ClientReStartNative_Parms
{
};

void APawn::ClientReStartNative()
{
	static UFieldFunc* pFnClientReStartNative = NULL;
	if(!pFnClientReStartNative)
		pFnClientReStartNative = UObject::FindFunction("Function Engine.Pawn.ClientReStartNative");

	Engine_ClientReStartNative_Parms ClientReStartNative_Parms;
	pFnClientReStartNative->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientReStartNative,NULL,&ClientReStartNative_Parms,NULL);
	pFnClientReStartNative->FunctionFlags |= 0x400;
}

struct Engine_CheatGhost_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::CheatGhost()
{
	static UFieldFunc* pFnCheatGhost = NULL;
	if(!pFnCheatGhost)
		pFnCheatGhost = UObject::FindFunction("Function Engine.Pawn.CheatGhost");

	Engine_CheatGhost_Parms CheatGhost_Parms;
	ProcessEvent(pFnCheatGhost,NULL,&CheatGhost_Parms,NULL);
	return CheatGhost_Parms.ReturnValue;
}

struct Engine_SpawnedByKismet_Parms
{
};

void APawn::SpawnedByKismet()
{
	static UFieldFunc* pFnSpawnedByKismet = NULL;
	if(!pFnSpawnedByKismet)
		pFnSpawnedByKismet = UObject::FindFunction("Function Engine.Pawn.SpawnedByKismet");

	Engine_SpawnedByKismet_Parms SpawnedByKismet_Parms;
	ProcessEvent(pFnSpawnedByKismet,NULL,&SpawnedByKismet_Parms,NULL);
}

struct Engine_HealDamage_Parms
{
	int                                                Amount;                                           		// 0x000000 (0x0004)              
	class AController*                                 Healer;                                           		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool APawn::HealDamage(int Amount,class AController* Healer,class UClass* DamageType)
{
	static UFieldFunc* pFnHealDamage = NULL;
	if(!pFnHealDamage)
		pFnHealDamage = UObject::FindFunction("Function Engine.Pawn.HealDamage");

	Engine_HealDamage_Parms HealDamage_Parms;
	HealDamage_Parms.Amount = Amount;
	HealDamage_Parms.Healer = Healer;
	HealDamage_Parms.DamageType = DamageType;
	ProcessEvent(pFnHealDamage,NULL,&HealDamage_Parms,NULL);
	return HealDamage_Parms.ReturnValue;
}

struct Engine_GetCollisionRadius_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APawn::GetCollisionRadius()
{
	static UFieldFunc* pFnGetCollisionRadius = NULL;
	if(!pFnGetCollisionRadius)
		pFnGetCollisionRadius = UObject::FindFunction("Function Engine.Pawn.GetCollisionRadius");

	Engine_GetCollisionRadius_Parms GetCollisionRadius_Parms;
	ProcessEvent(pFnGetCollisionRadius,NULL,&GetCollisionRadius_Parms,NULL);
	return GetCollisionRadius_Parms.ReturnValue;
}

struct Engine_ClearConstraints_Parms
{
};

void APawn::ClearConstraints()
{
	static UFieldFunc* pFnClearConstraints = NULL;
	if(!pFnClearConstraints)
		pFnClearConstraints = UObject::FindFunction("Function Engine.Pawn.ClearConstraints");

	Engine_ClearConstraints_Parms ClearConstraints_Parms;
	pFnClearConstraints->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearConstraints,NULL,&ClearConstraints_Parms,NULL);
	pFnClearConstraints->FunctionFlags |= 0x400;
}

struct Engine_InCombat_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::InCombat()
{
	static UFieldFunc* pFnInCombat = NULL;
	if(!pFnInCombat)
		pFnInCombat = UObject::FindFunction("Function Engine.Pawn.InCombat");

	Engine_InCombat_Parms InCombat_Parms;
	ProcessEvent(pFnInCombat,NULL,&InCombat_Parms,NULL);
	return InCombat_Parms.ReturnValue;
}

struct Engine_GetBestAnchor_Parms
{
	class AActor*                                      TestActor;                                        		// 0x000000 (0x0004)              
	FVector3                                           TestLocation;                                     		// 0x000004 (0x000C)              
	unsigned long                                      bStartPoint : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      bOnlyCheckVisible : 1;                            		// 0x000014 (0x0004) [0x00000001] 
	float                                              out_Dist;                                         		// 0x000018 (0x0004)              
	class ANavigationPoint*                            ReturnValue;                                      		// 0x00001C (0x0004)              
};

class ANavigationPoint* APawn::GetBestAnchor(class AActor* TestActor,FVector3 TestLocation,bool bStartPoint,bool bOnlyCheckVisible,float* out_Dist)
{
	static UFieldFunc* pFnGetBestAnchor = NULL;
	if(!pFnGetBestAnchor)
		pFnGetBestAnchor = UObject::FindFunction("Function Engine.Pawn.GetBestAnchor");

	Engine_GetBestAnchor_Parms GetBestAnchor_Parms;
	GetBestAnchor_Parms.TestActor = TestActor;
	memcpy(&GetBestAnchor_Parms.TestLocation,&TestLocation,0xC);
	GetBestAnchor_Parms.bStartPoint = bStartPoint;
	GetBestAnchor_Parms.bOnlyCheckVisible = bOnlyCheckVisible;
	pFnGetBestAnchor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBestAnchor,NULL,&GetBestAnchor_Parms,NULL);
	pFnGetBestAnchor->FunctionFlags |= 0x400;
	if(out_Dist)
		*out_Dist = GetBestAnchor_Parms.out_Dist;
	return GetBestAnchor_Parms.ReturnValue;
}

struct Engine_NotifyTeamChanged_Parms
{
};

void APawn::NotifyTeamChanged()
{
	static UFieldFunc* pFnNotifyTeamChanged = NULL;
	if(!pFnNotifyTeamChanged)
		pFnNotifyTeamChanged = UObject::FindFunction("Function Engine.Pawn.NotifyTeamChanged");

	Engine_NotifyTeamChanged_Parms NotifyTeamChanged_Parms;
	ProcessEvent(pFnNotifyTeamChanged,NULL,&NotifyTeamChanged_Parms,NULL);
}

struct Engine_PreBeginPlay_Parms
{
};

void APawn::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.Pawn.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_RecommendLongRangedAttack_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::RecommendLongRangedAttack()
{
	static UFieldFunc* pFnRecommendLongRangedAttack = NULL;
	if(!pFnRecommendLongRangedAttack)
		pFnRecommendLongRangedAttack = UObject::FindFunction("Function Engine.Pawn.RecommendLongRangedAttack");

	Engine_RecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;
	ProcessEvent(pFnRecommendLongRangedAttack,NULL,&RecommendLongRangedAttack_Parms,NULL);
	return RecommendLongRangedAttack_Parms.ReturnValue;
}

struct Engine_PossessedBy_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000004 (0x0004) [0x00000001] 
};

void APawn::PossessedBy(class AController* C,bool bVehicleTransition)
{
	static UFieldFunc* pFnPossessedBy = NULL;
	if(!pFnPossessedBy)
		pFnPossessedBy = UObject::FindFunction("Function Engine.Pawn.PossessedBy");

	Engine_PossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnPossessedBy,NULL,&PossessedBy_Parms,NULL);
}

struct Engine_ReachedPoint_Parms
{
	FVector3                                           Point;                                            		// 0x000000 (0x000C)              
	class AActor*                                      NewAnchor;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool APawn::ReachedPoint(FVector3 Point,class AActor* NewAnchor)
{
	static UFieldFunc* pFnReachedPoint = NULL;
	if(!pFnReachedPoint)
		pFnReachedPoint = UObject::FindFunction("Function Engine.Pawn.ReachedPoint");

	Engine_ReachedPoint_Parms ReachedPoint_Parms;
	memcpy(&ReachedPoint_Parms.Point,&Point,0xC);
	ReachedPoint_Parms.NewAnchor = NewAnchor;
	pFnReachedPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReachedPoint,NULL,&ReachedPoint_Parms,NULL);
	pFnReachedPoint->FunctionFlags |= 0x400;
	return ReachedPoint_Parms.ReturnValue;
}

struct Engine_StartFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void APawn::StartFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStartFire = NULL;
	if(!pFnStartFire)
		pFnStartFire = UObject::FindFunction("Function Engine.Pawn.StartFire");

	Engine_StartFire_Parms StartFire_Parms;
	StartFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStartFire,NULL,&StartFire_Parms,NULL);
}

struct Engine_CanBeBaseForPawn_Parms
{
	class APawn*                                       aPawn;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::CanBeBaseForPawn(class APawn* aPawn)
{
	static UFieldFunc* pFnCanBeBaseForPawn = NULL;
	if(!pFnCanBeBaseForPawn)
		pFnCanBeBaseForPawn = UObject::FindFunction("Function Engine.Pawn.CanBeBaseForPawn");

	Engine_CanBeBaseForPawn_Parms CanBeBaseForPawn_Parms;
	CanBeBaseForPawn_Parms.aPawn = aPawn;
	ProcessEvent(pFnCanBeBaseForPawn,NULL,&CanBeBaseForPawn_Parms,NULL);
	return CanBeBaseForPawn_Parms.ReturnValue;
}

struct Engine_GetViewRotation_Parms
{
	FRotator                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FRotator APawn::GetViewRotation()
{
	static UFieldFunc* pFnGetViewRotation = NULL;
	if(!pFnGetViewRotation)
		pFnGetViewRotation = UObject::FindFunction("Function Engine.Pawn.GetViewRotation");

	Engine_GetViewRotation_Parms GetViewRotation_Parms;
	pFnGetViewRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewRotation,NULL,&GetViewRotation_Parms,NULL);
	pFnGetViewRotation->FunctionFlags |= 0x400;
	return GetViewRotation_Parms.ReturnValue;
}

struct Engine_DrawHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x000000 (0x0004)              
};

void APawn::DrawHUD(class AHUD* H)
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.Pawn.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_ShouldCrouch_Parms
{
	unsigned long                                      bCrouch : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bFromServer : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

void APawn::ShouldCrouch(bool bCrouch,bool bFromServer)
{
	static UFieldFunc* pFnShouldCrouch = NULL;
	if(!pFnShouldCrouch)
		pFnShouldCrouch = UObject::FindFunction("Function Engine.Pawn.ShouldCrouch");

	Engine_ShouldCrouch_Parms ShouldCrouch_Parms;
	ShouldCrouch_Parms.bCrouch = bCrouch;
	ShouldCrouch_Parms.bFromServer = bFromServer;
	pFnShouldCrouch->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShouldCrouch,NULL,&ShouldCrouch_Parms,NULL);
	pFnShouldCrouch->FunctionFlags |= 0x400;
}

struct Engine_GetPawnViewLocation_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 APawn::GetPawnViewLocation()
{
	static UFieldFunc* pFnGetPawnViewLocation = NULL;
	if(!pFnGetPawnViewLocation)
		pFnGetPawnViewLocation = UObject::FindFunction("Function Engine.Pawn.GetPawnViewLocation");

	Engine_GetPawnViewLocation_Parms GetPawnViewLocation_Parms;
	pFnGetPawnViewLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPawnViewLocation,NULL,&GetPawnViewLocation_Parms,NULL);
	pFnGetPawnViewLocation->FunctionFlags |= 0x400;
	return GetPawnViewLocation_Parms.ReturnValue;
}

struct Engine_PruneDamagedBoneList_Parms
{
	TArray<struct FName>                               Bones;                                            		// 0x000000 (0x000C)              
};

void APawn::PruneDamagedBoneList(TArray<struct FName>* Bones)
{
	static UFieldFunc* pFnPruneDamagedBoneList = NULL;
	if(!pFnPruneDamagedBoneList)
		pFnPruneDamagedBoneList = UObject::FindFunction("Function Engine.Pawn.PruneDamagedBoneList");

	Engine_PruneDamagedBoneList_Parms PruneDamagedBoneList_Parms;
	ProcessEvent(pFnPruneDamagedBoneList,NULL,&PruneDamagedBoneList_Parms,NULL);
	if(Bones)
		memcpy(Bones,&PruneDamagedBoneList_Parms.Bones,0xC);
}

struct Engine_BotFire_Parms
{
	unsigned long                                      bFinished : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::BotFire(bool bFinished)
{
	static UFieldFunc* pFnBotFire = NULL;
	if(!pFnBotFire)
		pFnBotFire = UObject::FindFunction("Function Engine.Pawn.BotFire");

	Engine_BotFire_Parms BotFire_Parms;
	BotFire_Parms.bFinished = bFinished;
	ProcessEvent(pFnBotFire,NULL,&BotFire_Parms,NULL);
	return BotFire_Parms.ReturnValue;
}

struct Engine_SuggestJumpVelocity_Parms
{
	FVector3                                           JumpVelocity;                                     		// 0x000000 (0x000C)              
	FVector3                                           Destination;                                      		// 0x00000C (0x000C)              
	FVector3                                           Start;                                            		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool APawn::SuggestJumpVelocity(FVector3* JumpVelocity,FVector3 Destination,FVector3 Start)
{
	static UFieldFunc* pFnSuggestJumpVelocity = NULL;
	if(!pFnSuggestJumpVelocity)
		pFnSuggestJumpVelocity = UObject::FindFunction("Function Engine.Pawn.SuggestJumpVelocity");

	Engine_SuggestJumpVelocity_Parms SuggestJumpVelocity_Parms;
	memcpy(&SuggestJumpVelocity_Parms.Destination,&Destination,0xC);
	memcpy(&SuggestJumpVelocity_Parms.Start,&Start,0xC);
	pFnSuggestJumpVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSuggestJumpVelocity,NULL,&SuggestJumpVelocity_Parms,NULL);
	pFnSuggestJumpVelocity->FunctionFlags |= 0x400;
	if(JumpVelocity)
		memcpy(JumpVelocity,&SuggestJumpVelocity_Parms.JumpVelocity,0xC);
	return SuggestJumpVelocity_Parms.ReturnValue;
}

struct Engine_Died_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	int                                                nInventoryItemTypeID;                             		// 0x000014 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	//class USeqAct_Latent*                              Action;                                           		// 0x00001C (0x0004)              
};

bool APawn::Died(class AController* Killer,class UClass* DamageType,FVector3 HitLocation,int nInventoryItemTypeID)
{
	static UFieldFunc* pFnDied = NULL;
	if(!pFnDied)
		pFnDied = UObject::FindFunction("Function Engine.Pawn.Died");

	Engine_Died_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy(&Died_Parms.HitLocation,&HitLocation,0xC);
	Died_Parms.nInventoryItemTypeID = nInventoryItemTypeID;
	ProcessEvent(pFnDied,NULL,&Died_Parms,NULL);
	return Died_Parms.ReturnValue;
}

struct Engine_StartCrouch_Parms
{
	float                                              HeightAdjust;                                     		// 0x000000 (0x0004)              
};

void APawn::StartCrouch(float HeightAdjust)
{
	static UFieldFunc* pFnStartCrouch = NULL;
	if(!pFnStartCrouch)
		pFnStartCrouch = UObject::FindFunction("Function Engine.Pawn.StartCrouch");

	Engine_StartCrouch_Parms StartCrouch_Parms;
	StartCrouch_Parms.HeightAdjust = HeightAdjust;
	ProcessEvent(pFnStartCrouch,NULL,&StartCrouch_Parms,NULL);
}

struct Engine_RangedAttackTime_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APawn::RangedAttackTime()
{
	static UFieldFunc* pFnRangedAttackTime = NULL;
	if(!pFnRangedAttackTime)
		pFnRangedAttackTime = UObject::FindFunction("Function Engine.Pawn.RangedAttackTime");

	Engine_RangedAttackTime_Parms RangedAttackTime_Parms;
	ProcessEvent(pFnRangedAttackTime,NULL,&RangedAttackTime_Parms,NULL);
	return RangedAttackTime_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void APawn::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.Pawn.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_GetVehicleBase_Parms
{
	class AVehicle*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AVehicle* APawn::GetVehicleBase()
{
	static UFieldFunc* pFnGetVehicleBase = NULL;
	if(!pFnGetVehicleBase)
		pFnGetVehicleBase = UObject::FindFunction("Function Engine.Pawn.GetVehicleBase");

	Engine_GetVehicleBase_Parms GetVehicleBase_Parms;
	pFnGetVehicleBase->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVehicleBase,NULL,&GetVehicleBase_Parms,NULL);
	pFnGetVehicleBase->FunctionFlags |= 0x400;
	return GetVehicleBase_Parms.ReturnValue;
}

struct Engine_OnGiveInventory_Parms
{
	class USeqAct_GiveInventory*                       inAction;                                         		// 0x000000 (0x0004)              
};

void APawn::OnGiveInventory(class USeqAct_GiveInventory* inAction)
{
	static UFieldFunc* pFnOnGiveInventory = NULL;
	if(!pFnOnGiveInventory)
		pFnOnGiveInventory = UObject::FindFunction("Function Engine.Pawn.OnGiveInventory");

	Engine_OnGiveInventory_Parms OnGiveInventory_Parms;
	OnGiveInventory_Parms.inAction = inAction;
	ProcessEvent(pFnOnGiveInventory,NULL,&OnGiveInventory_Parms,NULL);
}

struct Engine_ClientMessage_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
	struct FName                                       Type;                                             		// 0x00000C (0x0008)              
};

void APawn::ClientMessage(struct FString S,struct FName Type)
{
	static UFieldFunc* pFnClientMessage = NULL;
	if(!pFnClientMessage)
		pFnClientMessage = UObject::FindFunction("Function Engine.Pawn.ClientMessage");

	Engine_ClientMessage_Parms ClientMessage_Parms;
	memcpy(&ClientMessage_Parms.S,&S,0xC);
	memcpy(&ClientMessage_Parms.Type,&Type,0x8);
	ProcessEvent(pFnClientMessage,NULL,&ClientMessage_Parms,NULL);
}

struct Engine_SetWalking_Parms
{
	unsigned long                                      bNewIsWalking : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void APawn::SetWalking(bool bNewIsWalking)
{
	static UFieldFunc* pFnSetWalking = NULL;
	if(!pFnSetWalking)
		pFnSetWalking = UObject::FindFunction("Function Engine.Pawn.SetWalking");

	Engine_SetWalking_Parms SetWalking_Parms;
	SetWalking_Parms.bNewIsWalking = bNewIsWalking;
	ProcessEvent(pFnSetWalking,NULL,&SetWalking_Parms,NULL);
}

struct Engine_UpdateControllerOnPossess_Parms
{
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void APawn::UpdateControllerOnPossess(bool bVehicleTransition)
{
	static UFieldFunc* pFnUpdateControllerOnPossess = NULL;
	if(!pFnUpdateControllerOnPossess)
		pFnUpdateControllerOnPossess = UObject::FindFunction("Function Engine.Pawn.UpdateControllerOnPossess");

	Engine_UpdateControllerOnPossess_Parms UpdateControllerOnPossess_Parms;
	UpdateControllerOnPossess_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnUpdateControllerOnPossess,NULL,&UpdateControllerOnPossess_Parms,NULL);
}

struct Engine_gibbedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void APawn::gibbedBy(class AActor* Other)
{
	static UFieldFunc* pFngibbedBy = NULL;
	if(!pFngibbedBy)
		pFngibbedBy = UObject::FindFunction("Function Engine.Pawn.gibbedBy");

	Engine_gibbedBy_Parms gibbedBy_Parms;
	gibbedBy_Parms.Other = Other;
	ProcessEvent(pFngibbedBy,NULL,&gibbedBy_Parms,NULL);
}

struct Engine_StopFire_Parms
{
	unsigned char                                      FireModeNum;                                      		// 0x000000 (0x0001)              
};

void APawn::StopFire(unsigned char FireModeNum)
{
	static UFieldFunc* pFnStopFire = NULL;
	if(!pFnStopFire)
		pFnStopFire = UObject::FindFunction("Function Engine.Pawn.StopFire");

	Engine_StopFire_Parms StopFire_Parms;
	StopFire_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnStopFire,NULL,&StopFire_Parms,NULL);
}

struct Engine_EndCrouch_Parms
{
	float                                              HeightAdjust;                                     		// 0x000000 (0x0004)              
};

void APawn::EndCrouch(float HeightAdjust)
{
	static UFieldFunc* pFnEndCrouch = NULL;
	if(!pFnEndCrouch)
		pFnEndCrouch = UObject::FindFunction("Function Engine.Pawn.EndCrouch");

	Engine_EndCrouch_Parms EndCrouch_Parms;
	EndCrouch_Parms.HeightAdjust = HeightAdjust;
	ProcessEvent(pFnEndCrouch,NULL,&EndCrouch_Parms,NULL);
}

struct Engine_SetKillInstigator_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000004 (0x0004)              
	class AController*                                 ReturnValue;                                      		// 0x000008 (0x0004)              
};

class AController* APawn::SetKillInstigator(class AController* InstigatedBy,class UClass* DamageType)
{
	static UFieldFunc* pFnSetKillInstigator = NULL;
	if(!pFnSetKillInstigator)
		pFnSetKillInstigator = UObject::FindFunction("Function Engine.Pawn.SetKillInstigator");

	Engine_SetKillInstigator_Parms SetKillInstigator_Parms;
	SetKillInstigator_Parms.InstigatedBy = InstigatedBy;
	SetKillInstigator_Parms.DamageType = DamageType;
	pFnSetKillInstigator->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetKillInstigator,NULL,&SetKillInstigator_Parms,NULL);
	pFnSetKillInstigator->FunctionFlags |= 0x400;
	return SetKillInstigator_Parms.ReturnValue;
}

struct Engine_IsValidTargetFor_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::IsValidTargetFor(class AController* C)
{
	static UFieldFunc* pFnIsValidTargetFor = NULL;
	if(!pFnIsValidTargetFor)
		pFnIsValidTargetFor = UObject::FindFunction("Function Engine.Pawn.IsValidTargetFor");

	Engine_IsValidTargetFor_Parms IsValidTargetFor_Parms;
	IsValidTargetFor_Parms.C = C;
	pFnIsValidTargetFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsValidTargetFor,NULL,&IsValidTargetFor_Parms,NULL);
	pFnIsValidTargetFor->FunctionFlags |= 0x400;
	return IsValidTargetFor_Parms.ReturnValue;
}

struct Engine_SetRemoteViewPitch_Parms
{
	int                                                NewRemoteViewPitch;                               		// 0x000000 (0x0004)              
};

void APawn::SetRemoteViewPitch(int NewRemoteViewPitch)
{
	static UFieldFunc* pFnSetRemoteViewPitch = NULL;
	if(!pFnSetRemoteViewPitch)
		pFnSetRemoteViewPitch = UObject::FindFunction("Function Engine.Pawn.SetRemoteViewPitch");

	Engine_SetRemoteViewPitch_Parms SetRemoteViewPitch_Parms;
	SetRemoteViewPitch_Parms.NewRemoteViewPitch = NewRemoteViewPitch;
	pFnSetRemoteViewPitch->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRemoteViewPitch,NULL,&SetRemoteViewPitch_Parms,NULL);
	pFnSetRemoteViewPitch->FunctionFlags |= 0x400;
}

struct Engine_GetTeam_Parms
{
	class ATeamInfo*                                   ReturnValue;                                      		// 0x000000 (0x0004)              
};

class ATeamInfo* APawn::GetTeam()
{
	static UFieldFunc* pFnGetTeam = NULL;
	if(!pFnGetTeam)
		pFnGetTeam = UObject::FindFunction("Function Engine.Pawn.GetTeam");

	Engine_GetTeam_Parms GetTeam_Parms;
	ProcessEvent(pFnGetTeam,NULL,&GetTeam_Parms,NULL);
	return GetTeam_Parms.ReturnValue;
}

struct Engine_FiringModeUpdated_Parms
{
	unsigned long                                      bViaReplication : 1;                              		// 0x000000 (0x0004) [0x00000001] 
};

void APawn::FiringModeUpdated(bool bViaReplication)
{
	static UFieldFunc* pFnFiringModeUpdated = NULL;
	if(!pFnFiringModeUpdated)
		pFnFiringModeUpdated = UObject::FindFunction("Function Engine.Pawn.FiringModeUpdated");

	Engine_FiringModeUpdated_Parms FiringModeUpdated_Parms;
	FiringModeUpdated_Parms.bViaReplication = bViaReplication;
	ProcessEvent(pFnFiringModeUpdated,NULL,&FiringModeUpdated_Parms,NULL);
}

struct Engine_GetCollisionExtent_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
	//FVector3                                           Extent;                                           		// 0x00000C (0x000C)              
};

FVector3 APawn::GetCollisionExtent()
{
	static UFieldFunc* pFnGetCollisionExtent = NULL;
	if(!pFnGetCollisionExtent)
		pFnGetCollisionExtent = UObject::FindFunction("Function Engine.Pawn.GetCollisionExtent");

	Engine_GetCollisionExtent_Parms GetCollisionExtent_Parms;
	ProcessEvent(pFnGetCollisionExtent,NULL,&GetCollisionExtent_Parms,NULL);
	return GetCollisionExtent_Parms.ReturnValue;
}

struct Engine_InitRagdoll_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::InitRagdoll()
{
	static UFieldFunc* pFnInitRagdoll = NULL;
	if(!pFnInitRagdoll)
		pFnInitRagdoll = UObject::FindFunction("Function Engine.Pawn.InitRagdoll");

	Engine_InitRagdoll_Parms InitRagdoll_Parms;
	pFnInitRagdoll->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitRagdoll,NULL,&InitRagdoll_Parms,NULL);
	pFnInitRagdoll->FunctionFlags |= 0x400;
	return InitRagdoll_Parms.ReturnValue;
}

struct Engine_SpawnDefaultController_Parms
{
};

void APawn::SpawnDefaultController()
{
	static UFieldFunc* pFnSpawnDefaultController = NULL;
	if(!pFnSpawnDefaultController)
		pFnSpawnDefaultController = UObject::FindFunction("Function Engine.Pawn.SpawnDefaultController");

	Engine_SpawnDefaultController_Parms SpawnDefaultController_Parms;
	ProcessEvent(pFnSpawnDefaultController,NULL,&SpawnDefaultController_Parms,NULL);
}

struct Engine_IsCurrentlyCarSurfing_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsCurrentlyCarSurfing()
{
	static UFieldFunc* pFnIsCurrentlyCarSurfing = NULL;
	if(!pFnIsCurrentlyCarSurfing)
		pFnIsCurrentlyCarSurfing = UObject::FindFunction("Function Engine.Pawn.IsCurrentlyCarSurfing");

	Engine_IsCurrentlyCarSurfing_Parms IsCurrentlyCarSurfing_Parms;
	pFnIsCurrentlyCarSurfing->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsCurrentlyCarSurfing,NULL,&IsCurrentlyCarSurfing_Parms,NULL);
	pFnIsCurrentlyCarSurfing->FunctionFlags |= 0x400;
	return IsCurrentlyCarSurfing_Parms.ReturnValue;
}

struct Engine_SetMoveTarget_Parms
{
	class AActor*                                      NewTarget;                                        		// 0x000000 (0x0004)              
};

void APawn::SetMoveTarget(class AActor* NewTarget)
{
	static UFieldFunc* pFnSetMoveTarget = NULL;
	if(!pFnSetMoveTarget)
		pFnSetMoveTarget = UObject::FindFunction("Function Engine.Pawn.SetMoveTarget");

	Engine_SetMoveTarget_Parms SetMoveTarget_Parms;
	SetMoveTarget_Parms.NewTarget = NewTarget;
	ProcessEvent(pFnSetMoveTarget,NULL,&SetMoveTarget_Parms,NULL);
}

struct Engine_PlayerChangedTeam_Parms
{
};

void APawn::PlayerChangedTeam()
{
	static UFieldFunc* pFnPlayerChangedTeam = NULL;
	if(!pFnPlayerChangedTeam)
		pFnPlayerChangedTeam = UObject::FindFunction("Function Engine.Pawn.PlayerChangedTeam");

	Engine_PlayerChangedTeam_Parms PlayerChangedTeam_Parms;
	ProcessEvent(pFnPlayerChangedTeam,NULL,&PlayerChangedTeam_Parms,NULL);
}

struct Engine_TakeDrowningDamage_Parms
{
};

void APawn::TakeDrowningDamage()
{
	static UFieldFunc* pFnTakeDrowningDamage = NULL;
	if(!pFnTakeDrowningDamage)
		pFnTakeDrowningDamage = UObject::FindFunction("Function Engine.Pawn.TakeDrowningDamage");

	Engine_TakeDrowningDamage_Parms TakeDrowningDamage_Parms;
	ProcessEvent(pFnTakeDrowningDamage,NULL,&TakeDrowningDamage_Parms,NULL);
}

struct Engine_ValidAnchor_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::ValidAnchor()
{
	static UFieldFunc* pFnValidAnchor = NULL;
	if(!pFnValidAnchor)
		pFnValidAnchor = UObject::FindFunction("Function Engine.Pawn.ValidAnchor");

	Engine_ValidAnchor_Parms ValidAnchor_Parms;
	pFnValidAnchor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnValidAnchor,NULL,&ValidAnchor_Parms,NULL);
	pFnValidAnchor->FunctionFlags |= 0x400;
	return ValidAnchor_Parms.ReturnValue;
}

struct Engine_ProcessViewRotation_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FRotator                                           out_ViewRotation;                                 		// 0x000004 (0x000C)              
	FRotator                                           out_DeltaRot;                                     		// 0x000010 (0x000C)              
};

void APawn::ProcessViewRotation(float DeltaTime,FRotator* out_ViewRotation,FRotator* out_DeltaRot)
{
	static UFieldFunc* pFnProcessViewRotation = NULL;
	if(!pFnProcessViewRotation)
		pFnProcessViewRotation = UObject::FindFunction("Function Engine.Pawn.ProcessViewRotation");

	Engine_ProcessViewRotation_Parms ProcessViewRotation_Parms;
	ProcessViewRotation_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnProcessViewRotation,NULL,&ProcessViewRotation_Parms,NULL);
	if(out_ViewRotation)
		memcpy(out_ViewRotation,&ProcessViewRotation_Parms.out_ViewRotation,0xC);
	if(out_DeltaRot)
		memcpy(out_DeltaRot,&ProcessViewRotation_Parms.out_DeltaRot,0xC);
}

struct Engine_AffectedByHitEffects_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::AffectedByHitEffects()
{
	static UFieldFunc* pFnAffectedByHitEffects = NULL;
	if(!pFnAffectedByHitEffects)
		pFnAffectedByHitEffects = UObject::FindFunction("Function Engine.Pawn.AffectedByHitEffects");

	Engine_AffectedByHitEffects_Parms AffectedByHitEffects_Parms;
	ProcessEvent(pFnAffectedByHitEffects,NULL,&AffectedByHitEffects_Parms,NULL);
	return AffectedByHitEffects_Parms.ReturnValue;
}

struct Engine_GetCollisionHeight_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APawn::GetCollisionHeight()
{
	static UFieldFunc* pFnGetCollisionHeight = NULL;
	if(!pFnGetCollisionHeight)
		pFnGetCollisionHeight = UObject::FindFunction("Function Engine.Pawn.GetCollisionHeight");

	Engine_GetCollisionHeight_Parms GetCollisionHeight_Parms;
	ProcessEvent(pFnGetCollisionHeight,NULL,&GetCollisionHeight_Parms,NULL);
	return GetCollisionHeight_Parms.ReturnValue;
}

struct Engine_FinishedInterpolation_Parms
{
};

void APawn::FinishedInterpolation()
{
	static UFieldFunc* pFnFinishedInterpolation = NULL;
	if(!pFnFinishedInterpolation)
		pFnFinishedInterpolation = UObject::FindFunction("Function Engine.Pawn.FinishedInterpolation");

	Engine_FinishedInterpolation_Parms FinishedInterpolation_Parms;
	ProcessEvent(pFnFinishedInterpolation,NULL,&FinishedInterpolation_Parms,NULL);
}

struct Engine_ClientSetRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
};

void APawn::ClientSetRotation(FRotator NewRotation)
{
	static UFieldFunc* pFnClientSetRotation = NULL;
	if(!pFnClientSetRotation)
		pFnClientSetRotation = UObject::FindFunction("Function Engine.Pawn.ClientSetRotation");

	Engine_ClientSetRotation_Parms ClientSetRotation_Parms;
	memcpy(&ClientSetRotation_Parms.NewRotation,&NewRotation,0xC);
	ProcessEvent(pFnClientSetRotation,NULL,&ClientSetRotation_Parms,NULL);
}

struct Engine_SetFiringMode_Parms
{
	unsigned char                                      FiringModeNum;                                    		// 0x000000 (0x0001)              
};

void APawn::SetFiringMode(unsigned char FiringModeNum)
{
	static UFieldFunc* pFnSetFiringMode = NULL;
	if(!pFnSetFiringMode)
		pFnSetFiringMode = UObject::FindFunction("Function Engine.Pawn.SetFiringMode");

	Engine_SetFiringMode_Parms SetFiringMode_Parms;
	SetFiringMode_Parms.FiringModeNum = FiringModeNum;
	ProcessEvent(pFnSetFiringMode,NULL,&SetFiringMode_Parms,NULL);
}

struct Engine_IsSameTeam_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::IsSameTeam(class APawn* Other)
{
	static UFieldFunc* pFnIsSameTeam = NULL;
	if(!pFnIsSameTeam)
		pFnIsSameTeam = UObject::FindFunction("Function Engine.Pawn.IsSameTeam");

	Engine_IsSameTeam_Parms IsSameTeam_Parms;
	IsSameTeam_Parms.Other = Other;
	ProcessEvent(pFnIsSameTeam,NULL,&IsSameTeam_Parms,NULL);
	return IsSameTeam_Parms.ReturnValue;
}

struct Engine_SpecialMoveTo_Parms
{
	class ANavigationPoint*                            Start;                                            		// 0x000000 (0x0004)              
	class ANavigationPoint*                            End;                                              		// 0x000004 (0x0004)              
	class AActor*                                      Next;                                             		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool APawn::SpecialMoveTo(class ANavigationPoint* Start,class ANavigationPoint* End,class AActor* Next)
{
	static UFieldFunc* pFnSpecialMoveTo = NULL;
	if(!pFnSpecialMoveTo)
		pFnSpecialMoveTo = UObject::FindFunction("Function Engine.Pawn.SpecialMoveTo");

	Engine_SpecialMoveTo_Parms SpecialMoveTo_Parms;
	SpecialMoveTo_Parms.Start = Start;
	SpecialMoveTo_Parms.End = End;
	SpecialMoveTo_Parms.Next = Next;
	ProcessEvent(pFnSpecialMoveTo,NULL,&SpecialMoveTo_Parms,NULL);
	return SpecialMoveTo_Parms.ReturnValue;
}

struct Engine_AdjustedStrength_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APawn::AdjustedStrength()
{
	static UFieldFunc* pFnAdjustedStrength = NULL;
	if(!pFnAdjustedStrength)
		pFnAdjustedStrength = UObject::FindFunction("Function Engine.Pawn.AdjustedStrength");

	Engine_AdjustedStrength_Parms AdjustedStrength_Parms;
	ProcessEvent(pFnAdjustedStrength,NULL,&AdjustedStrength_Parms,NULL);
	return AdjustedStrength_Parms.ReturnValue;
}

struct Engine_PlayFootStepSound_Parms
{
	int                                                FootDown;                                         		// 0x000000 (0x0004)              
};

void APawn::PlayFootStepSound(int FootDown)
{
	static UFieldFunc* pFnPlayFootStepSound = NULL;
	if(!pFnPlayFootStepSound)
		pFnPlayFootStepSound = UObject::FindFunction("Function Engine.Pawn.PlayFootStepSound");

	Engine_PlayFootStepSound_Parms PlayFootStepSound_Parms;
	PlayFootStepSound_Parms.FootDown = FootDown;
	ProcessEvent(pFnPlayFootStepSound,NULL,&PlayFootStepSound_Parms,NULL);
}

struct Engine_ReachedDestination_Parms
{
	class AActor*                                      Goal;                                             		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::ReachedDestination(class AActor* Goal)
{
	static UFieldFunc* pFnReachedDestination = NULL;
	if(!pFnReachedDestination)
		pFnReachedDestination = UObject::FindFunction("Function Engine.Pawn.ReachedDestination");

	Engine_ReachedDestination_Parms ReachedDestination_Parms;
	ReachedDestination_Parms.Goal = Goal;
	pFnReachedDestination->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReachedDestination,NULL,&ReachedDestination_Parms,NULL);
	pFnReachedDestination->FunctionFlags |= 0x400;
	return ReachedDestination_Parms.ReturnValue;
}

struct Engine_JumpOutOfWater_Parms
{
	FVector3                                           jumpDir;                                          		// 0x000000 (0x000C)              
};

void APawn::JumpOutOfWater(FVector3 jumpDir)
{
	static UFieldFunc* pFnJumpOutOfWater = NULL;
	if(!pFnJumpOutOfWater)
		pFnJumpOutOfWater = UObject::FindFunction("Function Engine.Pawn.JumpOutOfWater");

	Engine_JumpOutOfWater_Parms JumpOutOfWater_Parms;
	memcpy(&JumpOutOfWater_Parms.jumpDir,&jumpDir,0xC);
	ProcessEvent(pFnJumpOutOfWater,NULL,&JumpOutOfWater_Parms,NULL);
}

struct Engine_TermRagdoll_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::TermRagdoll()
{
	static UFieldFunc* pFnTermRagdoll = NULL;
	if(!pFnTermRagdoll)
		pFnTermRagdoll = UObject::FindFunction("Function Engine.Pawn.TermRagdoll");

	Engine_TermRagdoll_Parms TermRagdoll_Parms;
	pFnTermRagdoll->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTermRagdoll,NULL,&TermRagdoll_Parms,NULL);
	pFnTermRagdoll->FunctionFlags |= 0x400;
	return TermRagdoll_Parms.ReturnValue;
}

struct Engine_CheckWaterJump_Parms
{
	FVector3                                           WallNormal;                                       		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//class AActor*                                      HitActor;                                         		// 0x000010 (0x0004)              
	//FVector3                                           HitLocation;                                      		// 0x000014 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x000020 (0x000C)              
	//FVector3                                           Checkpoint;                                       		// 0x00002C (0x000C)              
	//FVector3                                           Start;                                            		// 0x000038 (0x000C)              
	//FVector3                                           checkNorm;                                        		// 0x000044 (0x000C)              
	//FVector3                                           Extent;                                           		// 0x000050 (0x000C)              
};

bool APawn::CheckWaterJump(FVector3* WallNormal)
{
	static UFieldFunc* pFnCheckWaterJump = NULL;
	if(!pFnCheckWaterJump)
		pFnCheckWaterJump = UObject::FindFunction("Function Engine.Pawn.CheckWaterJump");

	Engine_CheckWaterJump_Parms CheckWaterJump_Parms;
	ProcessEvent(pFnCheckWaterJump,NULL,&CheckWaterJump_Parms,NULL);
	if(WallNormal)
		memcpy(WallNormal,&CheckWaterJump_Parms.WallNormal,0xC);
	return CheckWaterJump_Parms.ReturnValue;
}

struct Engine_Reset_Parms
{
};

void APawn::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.Pawn.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_DetachFromController_Parms
{
	unsigned long                                      bDestroyController : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	//class AController*                                 OldController;                                    		// 0x000004 (0x0004)              
};

void APawn::DetachFromController(bool bDestroyController)
{
	static UFieldFunc* pFnDetachFromController = NULL;
	if(!pFnDetachFromController)
		pFnDetachFromController = UObject::FindFunction("Function Engine.Pawn.DetachFromController");

	Engine_DetachFromController_Parms DetachFromController_Parms;
	DetachFromController_Parms.bDestroyController = bDestroyController;
	ProcessEvent(pFnDetachFromController,NULL,&DetachFromController_Parms,NULL);
}

struct Engine_GetDamageScaling_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APawn::GetDamageScaling()
{
	static UFieldFunc* pFnGetDamageScaling = NULL;
	if(!pFnGetDamageScaling)
		pFnGetDamageScaling = UObject::FindFunction("Function Engine.Pawn.GetDamageScaling");

	Engine_GetDamageScaling_Parms GetDamageScaling_Parms;
	ProcessEvent(pFnGetDamageScaling,NULL,&GetDamageScaling_Parms,NULL);
	return GetDamageScaling_Parms.ReturnValue;
}

struct Engine_OnAssignController_Parms
{
	class USeqAct_AssignController*                    inAction;                                         		// 0x000000 (0x0004)              
};

void APawn::OnAssignController(class USeqAct_AssignController* inAction)
{
	static UFieldFunc* pFnOnAssignController = NULL;
	if(!pFnOnAssignController)
		pFnOnAssignController = UObject::FindFunction("Function Engine.Pawn.OnAssignController");

	Engine_OnAssignController_Parms OnAssignController_Parms;
	OnAssignController_Parms.inAction = inAction;
	ProcessEvent(pFnOnAssignController,NULL,&OnAssignController_Parms,NULL);
}

struct Engine_JumpOffPawn_Parms
{
};

void APawn::JumpOffPawn()
{
	static UFieldFunc* pFnJumpOffPawn = NULL;
	if(!pFnJumpOffPawn)
		pFnJumpOffPawn = UObject::FindFunction("Function Engine.Pawn.JumpOffPawn");

	Engine_JumpOffPawn_Parms JumpOffPawn_Parms;
	pFnJumpOffPawn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnJumpOffPawn,NULL,&JumpOffPawn_Parms,NULL);
	pFnJumpOffPawn->FunctionFlags |= 0x400;
}

struct Engine_OnTeleport_Parms
{
	class USeqAct_Teleport*                            Action;                                           		// 0x000000 (0x0004)              
	//TArray<class UObject*>                             objVars;                                          		// 0x000004 (0x000C)              
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//class AActor*                                      destActor;                                        		// 0x000014 (0x0004)              
	//class AController*                                 C;                                                		// 0x000018 (0x0004)              
};

void APawn::OnTeleport(class USeqAct_Teleport* Action)
{
	static UFieldFunc* pFnOnTeleport = NULL;
	if(!pFnOnTeleport)
		pFnOnTeleport = UObject::FindFunction("Function Engine.Pawn.OnTeleport");

	Engine_OnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.Action = Action;
	ProcessEvent(pFnOnTeleport,NULL,&OnTeleport_Parms,NULL);
}

struct Engine_ClientSetLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
	FRotator                                           NewRotation;                                      		// 0x00000C (0x000C)              
};

void APawn::ClientSetLocation(FVector3 NewLocation,FRotator NewRotation)
{
	static UFieldFunc* pFnClientSetLocation = NULL;
	if(!pFnClientSetLocation)
		pFnClientSetLocation = UObject::FindFunction("Function Engine.Pawn.ClientSetLocation");

	Engine_ClientSetLocation_Parms ClientSetLocation_Parms;
	memcpy(&ClientSetLocation_Parms.NewLocation,&NewLocation,0xC);
	memcpy(&ClientSetLocation_Parms.NewRotation,&NewRotation,0xC);
	ProcessEvent(pFnClientSetLocation,NULL,&ClientSetLocation_Parms,NULL);
}

struct Engine_GetActorEyesViewPoint_Parms
{
	FVector3                                           out_Location;                                     		// 0x000000 (0x000C)              
	FRotator                                           out_Rotation;                                     		// 0x00000C (0x000C)              
};

void APawn::GetActorEyesViewPoint(FVector3* out_Location,FRotator* out_Rotation)
{
	static UFieldFunc* pFnGetActorEyesViewPoint = NULL;
	if(!pFnGetActorEyesViewPoint)
		pFnGetActorEyesViewPoint = UObject::FindFunction("Function Engine.Pawn.GetActorEyesViewPoint");

	Engine_GetActorEyesViewPoint_Parms GetActorEyesViewPoint_Parms;
	pFnGetActorEyesViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActorEyesViewPoint,NULL,&GetActorEyesViewPoint_Parms,NULL);
	pFnGetActorEyesViewPoint->FunctionFlags |= 0x400;
	if(out_Location)
		memcpy(out_Location,&GetActorEyesViewPoint_Parms.out_Location,0xC);
	if(out_Rotation)
		memcpy(out_Rotation,&GetActorEyesViewPoint_Parms.out_Rotation,0xC);
}

struct Engine_Suicide_Parms
{
};

void APawn::Suicide()
{
	static UFieldFunc* pFnSuicide = NULL;
	if(!pFnSuicide)
		pFnSuicide = UObject::FindFunction("Function Engine.Pawn.Suicide");

	Engine_Suicide_Parms Suicide_Parms;
	ProcessEvent(pFnSuicide,NULL,&Suicide_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.Pawn.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_Restart_Parms
{
};

void APawn::Restart()
{
	static UFieldFunc* pFnRestart = NULL;
	if(!pFnRestart)
		pFnRestart = UObject::FindFunction("Function Engine.Pawn.Restart");

	Engine_Restart_Parms Restart_Parms;
	ProcessEvent(pFnRestart,NULL,&Restart_Parms,NULL);
}

struct Engine_GetMoveTarget_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AActor* APawn::GetMoveTarget()
{
	static UFieldFunc* pFnGetMoveTarget = NULL;
	if(!pFnGetMoveTarget)
		pFnGetMoveTarget = UObject::FindFunction("Function Engine.Pawn.GetMoveTarget");

	Engine_GetMoveTarget_Parms GetMoveTarget_Parms;
	ProcessEvent(pFnGetMoveTarget,NULL,&GetMoveTarget_Parms,NULL);
	return GetMoveTarget_Parms.ReturnValue;
}

struct Engine_SetViewRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
};

void APawn::SetViewRotation(FRotator NewRotation)
{
	static UFieldFunc* pFnSetViewRotation = NULL;
	if(!pFnSetViewRotation)
		pFnSetViewRotation = UObject::FindFunction("Function Engine.Pawn.SetViewRotation");

	Engine_SetViewRotation_Parms SetViewRotation_Parms;
	memcpy(&SetViewRotation_Parms.NewRotation,&NewRotation,0xC);
	ProcessEvent(pFnSetViewRotation,NULL,&SetViewRotation_Parms,NULL);
}

struct Engine_EncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::EncroachingOn(class AActor* Other)
{
	static UFieldFunc* pFnEncroachingOn = NULL;
	if(!pFnEncroachingOn)
		pFnEncroachingOn = UObject::FindFunction("Function Engine.Pawn.EncroachingOn");

	Engine_EncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;
	ProcessEvent(pFnEncroachingOn,NULL,&EncroachingOn_Parms,NULL);
	return EncroachingOn_Parms.ReturnValue;
}

struct Engine_FaceRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
	float                                              DeltaTime;                                        		// 0x00000C (0x0004)              
};

void APawn::FaceRotation(FRotator NewRotation,float DeltaTime)
{
	static UFieldFunc* pFnFaceRotation = NULL;
	if(!pFnFaceRotation)
		pFnFaceRotation = UObject::FindFunction("Function Engine.Pawn.FaceRotation");

	Engine_FaceRotation_Parms FaceRotation_Parms;
	memcpy(&FaceRotation_Parms.NewRotation,&NewRotation,0xC);
	FaceRotation_Parms.DeltaTime = DeltaTime;
	pFnFaceRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFaceRotation,NULL,&FaceRotation_Parms,NULL);
	pFnFaceRotation->FunctionFlags |= 0x400;
}

struct Engine_AddDefaultInventory_Parms
{
};

void APawn::AddDefaultInventory()
{
	static UFieldFunc* pFnAddDefaultInventory = NULL;
	if(!pFnAddDefaultInventory)
		pFnAddDefaultInventory = UObject::FindFunction("Function Engine.Pawn.AddDefaultInventory");

	Engine_AddDefaultInventory_Parms AddDefaultInventory_Parms;
	ProcessEvent(pFnAddDefaultInventory,NULL,&AddDefaultInventory_Parms,NULL);
}

struct Engine_StopDriving_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
};

void APawn::StopDriving(class AVehicle* V)
{
	static UFieldFunc* pFnStopDriving = NULL;
	if(!pFnStopDriving)
		pFnStopDriving = UObject::FindFunction("Function Engine.Pawn.StopDriving");

	Engine_StopDriving_Parms StopDriving_Parms;
	StopDriving_Parms.V = V;
	ProcessEvent(pFnStopDriving,NULL,&StopDriving_Parms,NULL);
}

struct Engine_SpecialCostForPath_Parms
{
	class UReachSpec*                                  Path;                                             		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int APawn::SpecialCostForPath(class UReachSpec* Path)
{
	static UFieldFunc* pFnSpecialCostForPath = NULL;
	if(!pFnSpecialCostForPath)
		pFnSpecialCostForPath = UObject::FindFunction("Function Engine.Pawn.SpecialCostForPath");

	Engine_SpecialCostForPath_Parms SpecialCostForPath_Parms;
	SpecialCostForPath_Parms.Path = Path;
	ProcessEvent(pFnSpecialCostForPath,NULL,&SpecialCostForPath_Parms,NULL);
	return SpecialCostForPath_Parms.ReturnValue;
}

struct Engine_IsPlayerPawn_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsPlayerPawn()
{
	static UFieldFunc* pFnIsPlayerPawn = NULL;
	if(!pFnIsPlayerPawn)
		pFnIsPlayerPawn = UObject::FindFunction("Function Engine.Pawn.IsPlayerPawn");

	Engine_IsPlayerPawn_Parms IsPlayerPawn_Parms;
	pFnIsPlayerPawn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPlayerPawn,NULL,&IsPlayerPawn_Parms,NULL);
	pFnIsPlayerPawn->FunctionFlags |= 0x400;
	return IsPlayerPawn_Parms.ReturnValue;
}

struct Engine_Destroyed_Parms
{
};

void APawn::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Pawn.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_NearMoveTarget_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::NearMoveTarget()
{
	static UFieldFunc* pFnNearMoveTarget = NULL;
	if(!pFnNearMoveTarget)
		pFnNearMoveTarget = UObject::FindFunction("Function Engine.Pawn.NearMoveTarget");

	Engine_NearMoveTarget_Parms NearMoveTarget_Parms;
	ProcessEvent(pFnNearMoveTarget,NULL,&NearMoveTarget_Parms,NULL);
	return NearMoveTarget_Parms.ReturnValue;
}

struct Engine_CheatWalk_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::CheatWalk()
{
	static UFieldFunc* pFnCheatWalk = NULL;
	if(!pFnCheatWalk)
		pFnCheatWalk = UObject::FindFunction("Function Engine.Pawn.CheatWalk");

	Engine_CheatWalk_Parms CheatWalk_Parms;
	ProcessEvent(pFnCheatWalk,NULL,&CheatWalk_Parms,NULL);
	return CheatWalk_Parms.ReturnValue;
}

struct Engine_DropToGround_Parms
{
};

void APawn::DropToGround()
{
	static UFieldFunc* pFnDropToGround = NULL;
	if(!pFnDropToGround)
		pFnDropToGround = UObject::FindFunction("Function Engine.Pawn.DropToGround");

	Engine_DropToGround_Parms DropToGround_Parms;
	ProcessEvent(pFnDropToGround,NULL,&DropToGround_Parms,NULL);
}

struct Engine_ForceCrouch_Parms
{
};

void APawn::ForceCrouch()
{
	static UFieldFunc* pFnForceCrouch = NULL;
	if(!pFnForceCrouch)
		pFnForceCrouch = UObject::FindFunction("Function Engine.Pawn.ForceCrouch");

	Engine_ForceCrouch_Parms ForceCrouch_Parms;
	pFnForceCrouch->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceCrouch,NULL,&ForceCrouch_Parms,NULL);
	pFnForceCrouch->FunctionFlags |= 0x400;
}

struct Engine_NotifyTakeHit_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000004 (0x000C)              
	int                                                Damage;                                           		// 0x000010 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000014 (0x0004)              
	FVector3                                           Momentum;                                         		// 0x000018 (0x000C)              
};

void APawn::NotifyTakeHit(class AController* InstigatedBy,FVector3 HitLocation,int Damage,class UClass* DamageType,FVector3 Momentum)
{
	static UFieldFunc* pFnNotifyTakeHit = NULL;
	if(!pFnNotifyTakeHit)
		pFnNotifyTakeHit = UObject::FindFunction("Function Engine.Pawn.NotifyTakeHit");

	Engine_NotifyTakeHit_Parms NotifyTakeHit_Parms;
	NotifyTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy(&NotifyTakeHit_Parms.HitLocation,&HitLocation,0xC);
	NotifyTakeHit_Parms.Damage = Damage;
	NotifyTakeHit_Parms.DamageType = DamageType;
	memcpy(&NotifyTakeHit_Parms.Momentum,&Momentum,0xC);
	ProcessEvent(pFnNotifyTakeHit,NULL,&NotifyTakeHit_Parms,NULL);
}

struct Engine_PlayDyingSound_Parms
{
};

void APawn::PlayDyingSound()
{
	static UFieldFunc* pFnPlayDyingSound = NULL;
	if(!pFnPlayDyingSound)
		pFnPlayDyingSound = UObject::FindFunction("Function Engine.Pawn.PlayDyingSound");

	Engine_PlayDyingSound_Parms PlayDyingSound_Parms;
	ProcessEvent(pFnPlayDyingSound,NULL,&PlayDyingSound_Parms,NULL);
}

struct Engine_PlayHit_Parms
{
	float                                              Damage;                                           		// 0x000000 (0x0004)              
	class AController*                                 InstigatedBy;                                     		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000014 (0x0004)              
	FVector3                                           Momentum;                                         		// 0x000018 (0x000C)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x000024 (0x001C)              
};

void APawn::PlayHit(float Damage,class AController* InstigatedBy,FVector3 HitLocation,class UClass* DamageType,FVector3 Momentum,struct FTraceHitInfo HitInfo)
{
	static UFieldFunc* pFnPlayHit = NULL;
	if(!pFnPlayHit)
		pFnPlayHit = UObject::FindFunction("Function Engine.Pawn.PlayHit");

	Engine_PlayHit_Parms PlayHit_Parms;
	PlayHit_Parms.Damage = Damage;
	PlayHit_Parms.InstigatedBy = InstigatedBy;
	memcpy(&PlayHit_Parms.HitLocation,&HitLocation,0xC);
	PlayHit_Parms.DamageType = DamageType;
	memcpy(&PlayHit_Parms.Momentum,&Momentum,0xC);
	memcpy(&PlayHit_Parms.HitInfo,&HitInfo,0x1C);
	ProcessEvent(pFnPlayHit,NULL,&PlayHit_Parms,NULL);
}

struct Engine_InFreeCam_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

bool APawn::InFreeCam()
{
	static UFieldFunc* pFnInFreeCam = NULL;
	if(!pFnInFreeCam)
		pFnInFreeCam = UObject::FindFunction("Function Engine.Pawn.InFreeCam");

	Engine_InFreeCam_Parms InFreeCam_Parms;
	ProcessEvent(pFnInFreeCam,NULL,&InFreeCam_Parms,NULL);
	return InFreeCam_Parms.ReturnValue;
}

struct Engine_TakeRadiusDamageOnBones_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	float                                              BaseDamage;                                       		// 0x000004 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000014 (0x000C)              
	unsigned long                                      bFullDamage : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	class AActor*                                      DamageCauser;                                     		// 0x000024 (0x0004)              
	TArray<struct FName>                               Bones;                                            		// 0x000028 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000034 (0x0004) [0x00000001] 
	//int                                                Idx;                                              		// 0x000038 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x00003C (0x0004) [0x00000001] 
	//float                                              DamageScale;                                      		// 0x000040 (0x0004)              
	//float                                              Dist;                                             		// 0x000044 (0x0004)              
	//FVector3                                           Dir;                                              		// 0x000048 (0x000C)              
	//FVector3                                           BoneLoc;                                          		// 0x000054 (0x000C)              
};

bool APawn::TakeRadiusDamageOnBones(class AController* InstigatedBy,float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,bool bFullDamage,class AActor* DamageCauser,TArray<struct FName> Bones)
{
	static UFieldFunc* pFnTakeRadiusDamageOnBones = NULL;
	if(!pFnTakeRadiusDamageOnBones)
		pFnTakeRadiusDamageOnBones = UObject::FindFunction("Function Engine.Pawn.TakeRadiusDamageOnBones");

	Engine_TakeRadiusDamageOnBones_Parms TakeRadiusDamageOnBones_Parms;
	TakeRadiusDamageOnBones_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamageOnBones_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamageOnBones_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamageOnBones_Parms.DamageType = DamageType;
	TakeRadiusDamageOnBones_Parms.Momentum = Momentum;
	memcpy(&TakeRadiusDamageOnBones_Parms.HurtOrigin,&HurtOrigin,0xC);
	TakeRadiusDamageOnBones_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamageOnBones_Parms.DamageCauser = DamageCauser;
	memcpy(&TakeRadiusDamageOnBones_Parms.Bones,&Bones,0xC);
	ProcessEvent(pFnTakeRadiusDamageOnBones,NULL,&TakeRadiusDamageOnBones_Parms,NULL);
	return TakeRadiusDamageOnBones_Parms.ReturnValue;
}

struct Engine_ModifyVelocity_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	FVector3                                           OldVelocity;                                      		// 0x000004 (0x000C)              
};

void APawn::ModifyVelocity(float DeltaTime,FVector3 OldVelocity)
{
	static UFieldFunc* pFnModifyVelocity = NULL;
	if(!pFnModifyVelocity)
		pFnModifyVelocity = UObject::FindFunction("Function Engine.Pawn.ModifyVelocity");

	Engine_ModifyVelocity_Parms ModifyVelocity_Parms;
	ModifyVelocity_Parms.DeltaTime = DeltaTime;
	memcpy(&ModifyVelocity_Parms.OldVelocity,&OldVelocity,0xC);
	ProcessEvent(pFnModifyVelocity,NULL,&ModifyVelocity_Parms,NULL);
}

struct Engine_IncrementPathChild_Parms
{
	int                                                Cnt;                                              		// 0x000000 (0x0004)              
	class UCanvas*                                     C;                                                		// 0x000004 (0x0004)              
};

void APawn::IncrementPathChild(int Cnt,class UCanvas* C)
{
	static UFieldFunc* pFnIncrementPathChild = NULL;
	if(!pFnIncrementPathChild)
		pFnIncrementPathChild = UObject::FindFunction("Function Engine.Pawn.IncrementPathChild");

	Engine_IncrementPathChild_Parms IncrementPathChild_Parms;
	IncrementPathChild_Parms.Cnt = Cnt;
	IncrementPathChild_Parms.C = C;
	pFnIncrementPathChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIncrementPathChild,NULL,&IncrementPathChild_Parms,NULL);
	pFnIncrementPathChild->FunctionFlags |= 0x400;
}

struct Engine_AddVelocity_Parms
{
	FVector3                                           NewVelocity;                                      		// 0x000000 (0x000C)              
	FVector3                                           HitLocation;                                      		// 0x00000C (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000018 (0x0004)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x00001C (0x001C)              
};

void APawn::AddVelocity(FVector3 NewVelocity,FVector3 HitLocation,class UClass* DamageType,struct FTraceHitInfo HitInfo)
{
	static UFieldFunc* pFnAddVelocity = NULL;
	if(!pFnAddVelocity)
		pFnAddVelocity = UObject::FindFunction("Function Engine.Pawn.AddVelocity");

	Engine_AddVelocity_Parms AddVelocity_Parms;
	memcpy(&AddVelocity_Parms.NewVelocity,&NewVelocity,0xC);
	memcpy(&AddVelocity_Parms.HitLocation,&HitLocation,0xC);
	AddVelocity_Parms.DamageType = DamageType;
	memcpy(&AddVelocity_Parms.HitInfo,&HitInfo,0x1C);
	ProcessEvent(pFnAddVelocity,NULL,&AddVelocity_Parms,NULL);
}

struct Engine_IsValidEnemyTargetFor_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	unsigned long                                      bNoPRIisEnemy : 1;                                		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool APawn::IsValidEnemyTargetFor(class APlayerReplicationInfo* PRI,bool bNoPRIisEnemy)
{
	static UFieldFunc* pFnIsValidEnemyTargetFor = NULL;
	if(!pFnIsValidEnemyTargetFor)
		pFnIsValidEnemyTargetFor = UObject::FindFunction("Function Engine.Pawn.IsValidEnemyTargetFor");

	Engine_IsValidEnemyTargetFor_Parms IsValidEnemyTargetFor_Parms;
	IsValidEnemyTargetFor_Parms.PRI = PRI;
	IsValidEnemyTargetFor_Parms.bNoPRIisEnemy = bNoPRIisEnemy;
	pFnIsValidEnemyTargetFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsValidEnemyTargetFor,NULL,&IsValidEnemyTargetFor_Parms,NULL);
	pFnIsValidEnemyTargetFor->FunctionFlags |= 0x400;
	return IsValidEnemyTargetFor_Parms.ReturnValue;
}

struct Engine_AddGoalEvaluator_Parms
{
	class UPathGoalEvaluator*                          Evaluator;                                        		// 0x000000 (0x0004)              
};

void APawn::AddGoalEvaluator(class UPathGoalEvaluator* Evaluator)
{
	static UFieldFunc* pFnAddGoalEvaluator = NULL;
	if(!pFnAddGoalEvaluator)
		pFnAddGoalEvaluator = UObject::FindFunction("Function Engine.Pawn.AddGoalEvaluator");

	Engine_AddGoalEvaluator_Parms AddGoalEvaluator_Parms;
	AddGoalEvaluator_Parms.Evaluator = Evaluator;
	pFnAddGoalEvaluator->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddGoalEvaluator,NULL,&AddGoalEvaluator_Parms,NULL);
	pFnAddGoalEvaluator->FunctionFlags |= 0x400;
}

struct Engine_SetBaseEyeheight_Parms
{
};

void APawn::SetBaseEyeheight()
{
	static UFieldFunc* pFnSetBaseEyeheight = NULL;
	if(!pFnSetBaseEyeheight)
		pFnSetBaseEyeheight = UObject::FindFunction("Function Engine.Pawn.SetBaseEyeheight");

	Engine_SetBaseEyeheight_Parms SetBaseEyeheight_Parms;
	ProcessEvent(pFnSetBaseEyeheight,NULL,&SetBaseEyeheight_Parms,NULL);
}

struct Engine_SoakPause_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void APawn::SoakPause()
{
	static UFieldFunc* pFnSoakPause = NULL;
	if(!pFnSoakPause)
		pFnSoakPause = UObject::FindFunction("Function Engine.Pawn.SoakPause");

	Engine_SoakPause_Parms SoakPause_Parms;
	ProcessEvent(pFnSoakPause,NULL,&SoakPause_Parms,NULL);
}

struct Engine_GetDefaultJumpZ_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float APawn::GetDefaultJumpZ()
{
	static UFieldFunc* pFnGetDefaultJumpZ = NULL;
	if(!pFnGetDefaultJumpZ)
		pFnGetDefaultJumpZ = UObject::FindFunction("Function Engine.Pawn.GetDefaultJumpZ");

	Engine_GetDefaultJumpZ_Parms GetDefaultJumpZ_Parms;
	ProcessEvent(pFnGetDefaultJumpZ,NULL,&GetDefaultJumpZ_Parms,NULL);
	return GetDefaultJumpZ_Parms.ReturnValue;
}

struct Engine_IsInPain_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APhysicsVolume*                              V;                                                		// 0x000004 (0x0004)              
};

bool APawn::IsInPain()
{
	static UFieldFunc* pFnIsInPain = NULL;
	if(!pFnIsInPain)
		pFnIsInPain = UObject::FindFunction("Function Engine.Pawn.IsInPain");

	Engine_IsInPain_Parms IsInPain_Parms;
	ProcessEvent(pFnIsInPain,NULL,&IsInPain_Parms,NULL);
	return IsInPain_Parms.ReturnValue;
}

struct Engine_AddPathConstraint_Parms
{
	class UPathConstraint*                             Constraint;                                       		// 0x000000 (0x0004)              
};

void APawn::AddPathConstraint(class UPathConstraint* Constraint)
{
	static UFieldFunc* pFnAddPathConstraint = NULL;
	if(!pFnAddPathConstraint)
		pFnAddPathConstraint = UObject::FindFunction("Function Engine.Pawn.AddPathConstraint");

	Engine_AddPathConstraint_Parms AddPathConstraint_Parms;
	AddPathConstraint_Parms.Constraint = Constraint;
	pFnAddPathConstraint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddPathConstraint,NULL,&AddPathConstraint_Parms,NULL);
	pFnAddPathConstraint->FunctionFlags |= 0x400;
}

struct Engine_TornOff_Parms
{
};

void APawn::TornOff()
{
	static UFieldFunc* pFnTornOff = NULL;
	if(!pFnTornOff)
		pFnTornOff = UObject::FindFunction("Function Engine.Pawn.TornOff");

	Engine_TornOff_Parms TornOff_Parms;
	ProcessEvent(pFnTornOff,NULL,&TornOff_Parms,NULL);
}

struct Engine_TooCloseToAttack_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::TooCloseToAttack(class AActor* Other)
{
	static UFieldFunc* pFnTooCloseToAttack = NULL;
	if(!pFnTooCloseToAttack)
		pFnTooCloseToAttack = UObject::FindFunction("Function Engine.Pawn.TooCloseToAttack");

	Engine_TooCloseToAttack_Parms TooCloseToAttack_Parms;
	TooCloseToAttack_Parms.Other = Other;
	ProcessEvent(pFnTooCloseToAttack,NULL,&TooCloseToAttack_Parms,NULL);
	return TooCloseToAttack_Parms.ReturnValue;
}

struct Engine_CrushedBy_Parms
{
	class APawn*                                       OtherPawn;                                        		// 0x000000 (0x0004)              
};

void APawn::CrushedBy(class APawn* OtherPawn)
{
	static UFieldFunc* pFnCrushedBy = NULL;
	if(!pFnCrushedBy)
		pFnCrushedBy = UObject::FindFunction("Function Engine.Pawn.CrushedBy");

	Engine_CrushedBy_Parms CrushedBy_Parms;
	CrushedBy_Parms.OtherPawn = OtherPawn;
	ProcessEvent(pFnCrushedBy,NULL,&CrushedBy_Parms,NULL);
}

struct Engine_Gasp_Parms
{
};

void APawn::Gasp()
{
	static UFieldFunc* pFnGasp = NULL;
	if(!pFnGasp)
		pFnGasp = UObject::FindFunction("Function Engine.Pawn.Gasp");

	Engine_Gasp_Parms Gasp_Parms;
	ProcessEvent(pFnGasp,NULL,&Gasp_Parms,NULL);
}

struct Engine_OnSetMaterial_Parms
{
	class USeqAct_SetMaterial*                         Action;                                           		// 0x000000 (0x0004)              
};

void APawn::OnSetMaterial(class USeqAct_SetMaterial* Action)
{
	static UFieldFunc* pFnOnSetMaterial = NULL;
	if(!pFnOnSetMaterial)
		pFnOnSetMaterial = UObject::FindFunction("Function Engine.Pawn.OnSetMaterial");

	Engine_OnSetMaterial_Parms OnSetMaterial_Parms;
	OnSetMaterial_Parms.Action = Action;
	ProcessEvent(pFnOnSetMaterial,NULL,&OnSetMaterial_Parms,NULL);
}

struct Engine_CanAttack_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::CanAttack(class AActor* Other)
{
	static UFieldFunc* pFnCanAttack = NULL;
	if(!pFnCanAttack)
		pFnCanAttack = UObject::FindFunction("Function Engine.Pawn.CanAttack");

	Engine_CanAttack_Parms CanAttack_Parms;
	CanAttack_Parms.Other = Other;
	ProcessEvent(pFnCanAttack,NULL,&CanAttack_Parms,NULL);
	return CanAttack_Parms.ReturnValue;
}

struct Engine_GetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char APawn::GetTeamNum()
{
	static UFieldFunc* pFnGetTeamNum = NULL;
	if(!pFnGetTeamNum)
		pFnGetTeamNum = UObject::FindFunction("Function Engine.Pawn.GetTeamNum");

	Engine_GetTeamNum_Parms GetTeamNum_Parms;
	pFnGetTeamNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTeamNum,NULL,&GetTeamNum_Parms,NULL);
	pFnGetTeamNum->FunctionFlags |= 0x400;
	return GetTeamNum_Parms.ReturnValue;
}

struct Engine_FellOutOfWorld_Parms
{
	class UClass*                                      dmgType;                                          		// 0x000000 (0x0004)              
};

void APawn::FellOutOfWorld(class UClass* dmgType)
{
	static UFieldFunc* pFnFellOutOfWorld = NULL;
	if(!pFnFellOutOfWorld)
		pFnFellOutOfWorld = UObject::FindFunction("Function Engine.Pawn.FellOutOfWorld");

	Engine_FellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;
	ProcessEvent(pFnFellOutOfWorld,NULL,&FellOutOfWorld_Parms,NULL);
}

struct Engine_IsValidEnemy_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsValidEnemy()
{
	static UFieldFunc* pFnIsValidEnemy = NULL;
	if(!pFnIsValidEnemy)
		pFnIsValidEnemy = UObject::FindFunction("Function Engine.Pawn.IsValidEnemy");

	Engine_IsValidEnemy_Parms IsValidEnemy_Parms;
	ProcessEvent(pFnIsValidEnemy,NULL,&IsValidEnemy_Parms,NULL);
	return IsValidEnemy_Parms.ReturnValue;
}

struct Engine_InGodMode_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::InGodMode()
{
	static UFieldFunc* pFnInGodMode = NULL;
	if(!pFnInGodMode)
		pFnInGodMode = UObject::FindFunction("Function Engine.Pawn.InGodMode");

	Engine_InGodMode_Parms InGodMode_Parms;
	ProcessEvent(pFnInGodMode,NULL,&InGodMode_Parms,NULL);
	return InGodMode_Parms.ReturnValue;
}

struct Engine_StopFiring_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::StopFiring()
{
	static UFieldFunc* pFnStopFiring = NULL;
	if(!pFnStopFiring)
		pFnStopFiring = UObject::FindFunction("Function Engine.Pawn.StopFiring");

	Engine_StopFiring_Parms StopFiring_Parms;
	ProcessEvent(pFnStopFiring,NULL,&StopFiring_Parms,NULL);
	return StopFiring_Parms.ReturnValue;
}

struct Engine_BaseChange_Parms
{
	//class ADynamicSMActor*                             Dyn;                                              		// 0x000000 (0x0004)              
};

void APawn::BaseChange()
{
	static UFieldFunc* pFnBaseChange = NULL;
	if(!pFnBaseChange)
		pFnBaseChange = UObject::FindFunction("Function Engine.Pawn.BaseChange");

	Engine_BaseChange_Parms BaseChange_Parms;
	ProcessEvent(pFnBaseChange,NULL,&BaseChange_Parms,NULL);
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//struct FString                                     T;                                                		// 0x00000C (0x000C)              
	//class UCanvas*                                     Canvas;                                           		// 0x000018 (0x0004)              
	//class UAnimTree*                                   AnimTreeRootNode;                                 		// 0x00001C (0x0004)              
	//int                                                I;                                                		// 0x000020 (0x0004)              
};

void APawn::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Pawn.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_WasPlayerPawn_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::WasPlayerPawn()
{
	static UFieldFunc* pFnWasPlayerPawn = NULL;
	if(!pFnWasPlayerPawn)
		pFnWasPlayerPawn = UObject::FindFunction("Function Engine.Pawn.WasPlayerPawn");

	Engine_WasPlayerPawn_Parms WasPlayerPawn_Parms;
	ProcessEvent(pFnWasPlayerPawn,NULL,&WasPlayerPawn_Parms,NULL);
	return WasPlayerPawn_Parms.ReturnValue;
}

struct Engine_IsLocallyControlled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsLocallyControlled()
{
	static UFieldFunc* pFnIsLocallyControlled = NULL;
	if(!pFnIsLocallyControlled)
		pFnIsLocallyControlled = UObject::FindFunction("Function Engine.Pawn.IsLocallyControlled");

	Engine_IsLocallyControlled_Parms IsLocallyControlled_Parms;
	pFnIsLocallyControlled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsLocallyControlled,NULL,&IsLocallyControlled_Parms,NULL);
	pFnIsLocallyControlled->FunctionFlags |= 0x400;
	return IsLocallyControlled_Parms.ReturnValue;
}

struct Engine_SetMovementPhysics_Parms
{
};

void APawn::SetMovementPhysics()
{
	static UFieldFunc* pFnSetMovementPhysics = NULL;
	if(!pFnSetMovementPhysics)
		pFnSetMovementPhysics = UObject::FindFunction("Function Engine.Pawn.SetMovementPhysics");

	Engine_SetMovementPhysics_Parms SetMovementPhysics_Parms;
	ProcessEvent(pFnSetMovementPhysics,NULL,&SetMovementPhysics_Parms,NULL);
}

struct Engine_AdjustDamage_Parms
{
	int                                                inDamage;                                         		// 0x000000 (0x0004)              
	FVector3                                           Momentum;                                         		// 0x000004 (0x000C)              
	class AController*                                 InstigatedBy;                                     		// 0x000010 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000014 (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000020 (0x0004)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x000024 (0x001C)              
};

void APawn::AdjustDamage(int* inDamage,FVector3* Momentum,class AController* InstigatedBy,FVector3 HitLocation,class UClass* DamageType,struct FTraceHitInfo HitInfo)
{
	static UFieldFunc* pFnAdjustDamage = NULL;
	if(!pFnAdjustDamage)
		pFnAdjustDamage = UObject::FindFunction("Function Engine.Pawn.AdjustDamage");

	Engine_AdjustDamage_Parms AdjustDamage_Parms;
	AdjustDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy(&AdjustDamage_Parms.HitLocation,&HitLocation,0xC);
	AdjustDamage_Parms.DamageType = DamageType;
	memcpy(&AdjustDamage_Parms.HitInfo,&HitInfo,0x1C);
	ProcessEvent(pFnAdjustDamage,NULL,&AdjustDamage_Parms,NULL);
	if(inDamage)
		*inDamage = AdjustDamage_Parms.inDamage;
	if(Momentum)
		memcpy(Momentum,&AdjustDamage_Parms.Momentum,0xC);
}

struct Engine_GetDefaultCameraMode_Parms
{
	class APlayerController*                           RequestedBy;                                      		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName APawn::GetDefaultCameraMode(class APlayerController* RequestedBy)
{
	static UFieldFunc* pFnGetDefaultCameraMode = NULL;
	if(!pFnGetDefaultCameraMode)
		pFnGetDefaultCameraMode = UObject::FindFunction("Function Engine.Pawn.GetDefaultCameraMode");

	Engine_GetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;
	pFnGetDefaultCameraMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultCameraMode,NULL,&GetDefaultCameraMode_Parms,NULL);
	pFnGetDefaultCameraMode->FunctionFlags |= 0x400;
	return GetDefaultCameraMode_Parms.ReturnValue;
}

struct Engine_KilledBy_Parms
{
	class APawn*                                       EventInstigator;                                  		// 0x000000 (0x0004)              
	//class AController*                                 Killer;                                           		// 0x000004 (0x0004)              
};

void APawn::KilledBy(class APawn* EventInstigator)
{
	static UFieldFunc* pFnKilledBy = NULL;
	if(!pFnKilledBy)
		pFnKilledBy = UObject::FindFunction("Function Engine.Pawn.KilledBy");

	Engine_KilledBy_Parms KilledBy_Parms;
	KilledBy_Parms.EventInstigator = EventInstigator;
	ProcessEvent(pFnKilledBy,NULL,&KilledBy_Parms,NULL);
}

struct Engine_IsInvisible_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsInvisible()
{
	static UFieldFunc* pFnIsInvisible = NULL;
	if(!pFnIsInvisible)
		pFnIsInvisible = UObject::FindFunction("Function Engine.Pawn.IsInvisible");

	Engine_IsInvisible_Parms IsInvisible_Parms;
	pFnIsInvisible->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsInvisible,NULL,&IsInvisible_Parms,NULL);
	pFnIsInvisible->FunctionFlags |= 0x400;
	return IsInvisible_Parms.ReturnValue;
}

struct Engine_LineOfSightTo_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APawn::LineOfSightTo(class AActor* Other)
{
	static UFieldFunc* pFnLineOfSightTo = NULL;
	if(!pFnLineOfSightTo)
		pFnLineOfSightTo = UObject::FindFunction("Function Engine.Pawn.LineOfSightTo");

	Engine_LineOfSightTo_Parms LineOfSightTo_Parms;
	LineOfSightTo_Parms.Other = Other;
	ProcessEvent(pFnLineOfSightTo,NULL,&LineOfSightTo_Parms,NULL);
	return LineOfSightTo_Parms.ReturnValue;
}

struct Engine_RestartPlayer_Parms
{
};

void APawn::RestartPlayer()
{
	static UFieldFunc* pFnRestartPlayer = NULL;
	if(!pFnRestartPlayer)
		pFnRestartPlayer = UObject::FindFunction("Function Engine.Pawn.RestartPlayer");

	Engine_RestartPlayer_Parms RestartPlayer_Parms;
	ProcessEvent(pFnRestartPlayer,NULL,&RestartPlayer_Parms,NULL);
}

struct Engine_PlayTeleportEffect_Parms
{
	unsigned long                                      bOut : 1;                                         		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bSound : 1;                                       		// 0x000004 (0x0004) [0x00000001] 
};

void APawn::PlayTeleportEffect(bool bOut,bool bSound)
{
	static UFieldFunc* pFnPlayTeleportEffect = NULL;
	if(!pFnPlayTeleportEffect)
		pFnPlayTeleportEffect = UObject::FindFunction("Function Engine.Pawn.PlayTeleportEffect");

	Engine_PlayTeleportEffect_Parms PlayTeleportEffect_Parms;
	PlayTeleportEffect_Parms.bOut = bOut;
	PlayTeleportEffect_Parms.bSound = bSound;
	ProcessEvent(pFnPlayTeleportEffect,NULL,&PlayTeleportEffect_Parms,NULL);
}

struct Engine_GetBoundingCylinder_Parms
{
	float                                              CollisionRadius;                                  		// 0x000000 (0x0004)              
	float                                              CollisionHeight;                                  		// 0x000004 (0x0004)              
};

void APawn::GetBoundingCylinder(float* CollisionRadius,float* CollisionHeight)
{
	static UFieldFunc* pFnGetBoundingCylinder = NULL;
	if(!pFnGetBoundingCylinder)
		pFnGetBoundingCylinder = UObject::FindFunction("Function Engine.Pawn.GetBoundingCylinder");

	Engine_GetBoundingCylinder_Parms GetBoundingCylinder_Parms;
	pFnGetBoundingCylinder->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundingCylinder,NULL,&GetBoundingCylinder_Parms,NULL);
	pFnGetBoundingCylinder->FunctionFlags |= 0x400;
	if(CollisionRadius)
		*CollisionRadius = GetBoundingCylinder_Parms.CollisionRadius;
	if(CollisionHeight)
		*CollisionHeight = GetBoundingCylinder_Parms.CollisionHeight;
}

struct Engine_CheatFly_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::CheatFly()
{
	static UFieldFunc* pFnCheatFly = NULL;
	if(!pFnCheatFly)
		pFnCheatFly = UObject::FindFunction("Function Engine.Pawn.CheatFly");

	Engine_CheatFly_Parms CheatFly_Parms;
	ProcessEvent(pFnCheatFly,NULL,&CheatFly_Parms,NULL);
	return CheatFly_Parms.ReturnValue;
}

struct Engine_DoKismetAttachment_Parms
{
	class AActor*                                      Attachment;                                       		// 0x000000 (0x0004)              
	class USeqAct_AttachToActor*                       Action;                                           		// 0x000004 (0x0004)              
	//unsigned long                                      bOldCollideActors : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bOldBlockActors : 1;                              		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bValidBone : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bValidSocket : 1;                                 		// 0x000014 (0x0004) [0x00000001] 
};

void APawn::DoKismetAttachment(class AActor* Attachment,class USeqAct_AttachToActor* Action)
{
	static UFieldFunc* pFnDoKismetAttachment = NULL;
	if(!pFnDoKismetAttachment)
		pFnDoKismetAttachment = UObject::FindFunction("Function Engine.Pawn.DoKismetAttachment");

	Engine_DoKismetAttachment_Parms DoKismetAttachment_Parms;
	DoKismetAttachment_Parms.Attachment = Attachment;
	DoKismetAttachment_Parms.Action = Action;
	ProcessEvent(pFnDoKismetAttachment,NULL,&DoKismetAttachment_Parms,NULL);
}

struct Engine_UnPossessed_Parms
{
};

void APawn::UnPossessed()
{
	static UFieldFunc* pFnUnPossessed = NULL;
	if(!pFnUnPossessed)
		pFnUnPossessed = UObject::FindFunction("Function Engine.Pawn.UnPossessed");

	Engine_UnPossessed_Parms UnPossessed_Parms;
	ProcessEvent(pFnUnPossessed,NULL,&UnPossessed_Parms,NULL);
}

struct Engine_SetPushesRigidBodies_Parms
{
	unsigned long                                      NewPush : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void APawn::SetPushesRigidBodies(bool NewPush)
{
	static UFieldFunc* pFnSetPushesRigidBodies = NULL;
	if(!pFnSetPushesRigidBodies)
		pFnSetPushesRigidBodies = UObject::FindFunction("Function Engine.Pawn.SetPushesRigidBodies");

	Engine_SetPushesRigidBodies_Parms SetPushesRigidBodies_Parms;
	SetPushesRigidBodies_Parms.NewPush = NewPush;
	pFnSetPushesRigidBodies->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPushesRigidBodies,NULL,&SetPushesRigidBodies_Parms,NULL);
	pFnSetPushesRigidBodies->FunctionFlags |= 0x400;
}

struct Engine_NeedToTurn_Parms
{
	FVector3                                           targ;                                             		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//FVector3                                           LookDir;                                          		// 0x000010 (0x000C)              
	//FVector3                                           AimDir;                                           		// 0x00001C (0x000C)              
};

bool APawn::NeedToTurn(FVector3 targ)
{
	static UFieldFunc* pFnNeedToTurn = NULL;
	if(!pFnNeedToTurn)
		pFnNeedToTurn = UObject::FindFunction("Function Engine.Pawn.NeedToTurn");

	Engine_NeedToTurn_Parms NeedToTurn_Parms;
	memcpy(&NeedToTurn_Parms.targ,&targ,0xC);
	ProcessEvent(pFnNeedToTurn,NULL,&NeedToTurn_Parms,NULL);
	return NeedToTurn_Parms.ReturnValue;
}

struct Engine_ClientRestart_Parms
{
};

void APawn::ClientRestart()
{
	static UFieldFunc* pFnClientRestart = NULL;
	if(!pFnClientRestart)
		pFnClientRestart = UObject::FindFunction("Function Engine.Pawn.ClientRestart");

	Engine_ClientRestart_Parms ClientRestart_Parms;
	ProcessEvent(pFnClientRestart,NULL,&ClientRestart_Parms,NULL);
}

struct Engine_GetHumanReadableName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString APawn::GetHumanReadableName()
{
	static UFieldFunc* pFnGetHumanReadableName = NULL;
	if(!pFnGetHumanReadableName)
		pFnGetHumanReadableName = UObject::FindFunction("Function Engine.Pawn.GetHumanReadableName");

	Engine_GetHumanReadableName_Parms GetHumanReadableName_Parms;
	ProcessEvent(pFnGetHumanReadableName,NULL,&GetHumanReadableName_Parms,NULL);
	return GetHumanReadableName_Parms.ReturnValue;
}

struct Engine_CanSplash_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::CanSplash()
{
	static UFieldFunc* pFnCanSplash = NULL;
	if(!pFnCanSplash)
		pFnCanSplash = UObject::FindFunction("Function Engine.Pawn.CanSplash");

	Engine_CanSplash_Parms CanSplash_Parms;
	ProcessEvent(pFnCanSplash,NULL,&CanSplash_Parms,NULL);
	return CanSplash_Parms.ReturnValue;
}

struct Engine_ReceiveLocalizedMessage_Parms
{
	class UClass*                                      Message;                                          		// 0x000000 (0x0004)              
	int                                                Switch;                                           		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
};

void APawn::ReceiveLocalizedMessage(class UClass* Message,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnReceiveLocalizedMessage = NULL;
	if(!pFnReceiveLocalizedMessage)
		pFnReceiveLocalizedMessage = UObject::FindFunction("Function Engine.Pawn.ReceiveLocalizedMessage");

	Engine_ReceiveLocalizedMessage_Parms ReceiveLocalizedMessage_Parms;
	ReceiveLocalizedMessage_Parms.Message = Message;
	ReceiveLocalizedMessage_Parms.Switch = Switch;
	ReceiveLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	ReceiveLocalizedMessage_Parms.RelatedPRI = RelatedPRI;
	ReceiveLocalizedMessage_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnReceiveLocalizedMessage,NULL,&ReceiveLocalizedMessage_Parms,NULL);
}

struct Engine_PlayDying_Parms
{
	class UClass*                                      DamageType;                                       		// 0x000000 (0x0004)              
	FVector3                                           HitLoc;                                           		// 0x000004 (0x000C)              
};

void APawn::PlayDying(class UClass* DamageType,FVector3 HitLoc)
{
	static UFieldFunc* pFnPlayDying = NULL;
	if(!pFnPlayDying)
		pFnPlayDying = UObject::FindFunction("Function Engine.Pawn.PlayDying");

	Engine_PlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy(&PlayDying_Parms.HitLoc,&HitLoc,0xC);
	ProcessEvent(pFnPlayDying,NULL,&PlayDying_Parms,NULL);
}

struct Engine_GetBaseAimRotation_Parms
{
	FRotator                                           ReturnValue;                                      		// 0x000000 (0x000C)              
	//FVector3                                           POVLoc;                                           		// 0x00000C (0x000C)              
	//FRotator                                           POVRot;                                           		// 0x000018 (0x000C)              
};

FRotator APawn::GetBaseAimRotation()
{
	static UFieldFunc* pFnGetBaseAimRotation = NULL;
	if(!pFnGetBaseAimRotation)
		pFnGetBaseAimRotation = UObject::FindFunction("Function Engine.Pawn.GetBaseAimRotation");

	Engine_GetBaseAimRotation_Parms GetBaseAimRotation_Parms;
	ProcessEvent(pFnGetBaseAimRotation,NULL,&GetBaseAimRotation_Parms,NULL);
	return GetBaseAimRotation_Parms.ReturnValue;
}

struct Engine_IsHumanControlled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsHumanControlled()
{
	static UFieldFunc* pFnIsHumanControlled = NULL;
	if(!pFnIsHumanControlled)
		pFnIsHumanControlled = UObject::FindFunction("Function Engine.Pawn.IsHumanControlled");

	Engine_IsHumanControlled_Parms IsHumanControlled_Parms;
	pFnIsHumanControlled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsHumanControlled,NULL,&IsHumanControlled_Parms,NULL);
	pFnIsHumanControlled->FunctionFlags |= 0x400;
	return IsHumanControlled_Parms.ReturnValue;
}

struct Engine_OutsideWorldBounds_Parms
{
};

void APawn::OutsideWorldBounds()
{
	static UFieldFunc* pFnOutsideWorldBounds = NULL;
	if(!pFnOutsideWorldBounds)
		pFnOutsideWorldBounds = UObject::FindFunction("Function Engine.Pawn.OutsideWorldBounds");

	Engine_OutsideWorldBounds_Parms OutsideWorldBounds_Parms;
	ProcessEvent(pFnOutsideWorldBounds,NULL,&OutsideWorldBounds_Parms,NULL);
}

struct Engine_TurnOff_Parms
{
};

void APawn::TurnOff()
{
	static UFieldFunc* pFnTurnOff = NULL;
	if(!pFnTurnOff)
		pFnTurnOff = UObject::FindFunction("Function Engine.Pawn.TurnOff");

	Engine_TurnOff_Parms TurnOff_Parms;
	ProcessEvent(pFnTurnOff,NULL,&TurnOff_Parms,NULL);
}

struct Engine_IsFirstPerson_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

bool APawn::IsFirstPerson()
{
	static UFieldFunc* pFnIsFirstPerson = NULL;
	if(!pFnIsFirstPerson)
		pFnIsFirstPerson = UObject::FindFunction("Function Engine.Pawn.IsFirstPerson");

	Engine_IsFirstPerson_Parms IsFirstPerson_Parms;
	ProcessEvent(pFnIsFirstPerson,NULL,&IsFirstPerson_Parms,NULL);
	return IsFirstPerson_Parms.ReturnValue;
}

struct Engine_MessagePlayer_Parms
{
	struct FString                                     msg;                                              		// 0x000000 (0x000C)              
	//class APlayerController*                           PC;                                               		// 0x00000C (0x0004)              
};

void APawn::MessagePlayer(struct FString msg)
{
	static UFieldFunc* pFnMessagePlayer = NULL;
	if(!pFnMessagePlayer)
		pFnMessagePlayer = UObject::FindFunction("Function Engine.Pawn.MessagePlayer");

	Engine_MessagePlayer_Parms MessagePlayer_Parms;
	memcpy(&MessagePlayer_Parms.msg,&msg,0xC);
	ProcessEvent(pFnMessagePlayer,NULL,&MessagePlayer_Parms,NULL);
}

struct Engine_IsStationary_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsStationary()
{
	static UFieldFunc* pFnIsStationary = NULL;
	if(!pFnIsStationary)
		pFnIsStationary = UObject::FindFunction("Function Engine.Pawn.IsStationary");

	Engine_IsStationary_Parms IsStationary_Parms;
	ProcessEvent(pFnIsStationary,NULL,&IsStationary_Parms,NULL);
	return IsStationary_Parms.ReturnValue;
}

struct Engine_PoweredUp_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::PoweredUp()
{
	static UFieldFunc* pFnPoweredUp = NULL;
	if(!pFnPoweredUp)
		pFnPoweredUp = UObject::FindFunction("Function Engine.Pawn.PoweredUp");

	Engine_PoweredUp_Parms PoweredUp_Parms;
	ProcessEvent(pFnPoweredUp,NULL,&PoweredUp_Parms,NULL);
	return PoweredUp_Parms.ReturnValue;
}

struct Engine_AdjustCameraScale_Parms
{
	unsigned long                                      bMoveCameraIn : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void APawn::AdjustCameraScale(bool bMoveCameraIn)
{
	static UFieldFunc* pFnAdjustCameraScale = NULL;
	if(!pFnAdjustCameraScale)
		pFnAdjustCameraScale = UObject::FindFunction("Function Engine.Pawn.AdjustCameraScale");

	Engine_AdjustCameraScale_Parms AdjustCameraScale_Parms;
	AdjustCameraScale_Parms.bMoveCameraIn = bMoveCameraIn;
	ProcessEvent(pFnAdjustCameraScale,NULL,&AdjustCameraScale_Parms,NULL);
}

struct Engine_SetAnchor_Parms
{
	class ANavigationPoint*                            NewAnchor;                                        		// 0x000000 (0x0004)              
};

void APawn::SetAnchor(class ANavigationPoint* NewAnchor)
{
	static UFieldFunc* pFnSetAnchor = NULL;
	if(!pFnSetAnchor)
		pFnSetAnchor = UObject::FindFunction("Function Engine.Pawn.SetAnchor");

	Engine_SetAnchor_Parms SetAnchor_Parms;
	SetAnchor_Parms.NewAnchor = NewAnchor;
	pFnSetAnchor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAnchor,NULL,&SetAnchor_Parms,NULL);
	pFnSetAnchor->FunctionFlags |= 0x400;
}

struct Engine_EffectIsRelevant_Parms
{
	FVector3                                           SpawnLocation;                                    		// 0x000000 (0x000C)              
	unsigned long                                      bForceDedicated : 1;                              		// 0x00000C (0x0004) [0x00000001] 
	float                                              CullDistance;                                     		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//class APlayerController*                           P;                                                		// 0x000018 (0x0004)              
};

bool APawn::EffectIsRelevant(FVector3 SpawnLocation,bool bForceDedicated,float CullDistance)
{
	static UFieldFunc* pFnEffectIsRelevant = NULL;
	if(!pFnEffectIsRelevant)
		pFnEffectIsRelevant = UObject::FindFunction("Function Engine.Pawn.EffectIsRelevant");

	Engine_EffectIsRelevant_Parms EffectIsRelevant_Parms;
	memcpy(&EffectIsRelevant_Parms.SpawnLocation,&SpawnLocation,0xC);
	EffectIsRelevant_Parms.bForceDedicated = bForceDedicated;
	EffectIsRelevant_Parms.CullDistance = CullDistance;
	ProcessEvent(pFnEffectIsRelevant,NULL,&EffectIsRelevant_Parms,NULL);
	return EffectIsRelevant_Parms.ReturnValue;
}

struct Engine_IsPawnImmobile_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool APawn::IsPawnImmobile()
{
	static UFieldFunc* pFnIsPawnImmobile = NULL;
	if(!pFnIsPawnImmobile)
		pFnIsPawnImmobile = UObject::FindFunction("Function Engine.Pawn.IsPawnImmobile");

	Engine_IsPawnImmobile_Parms IsPawnImmobile_Parms;
	pFnIsPawnImmobile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPawnImmobile,NULL,&IsPawnImmobile_Parms,NULL);
	pFnIsPawnImmobile->FunctionFlags |= 0x400;
	return IsPawnImmobile_Parms.ReturnValue;
}

struct Engine_EncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void APawn::EncroachedBy(class AActor* Other)
{
	static UFieldFunc* pFnEncroachedBy = NULL;
	if(!pFnEncroachedBy)
		pFnEncroachedBy = UObject::FindFunction("Function Engine.Pawn.EncroachedBy");

	Engine_EncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;
	ProcessEvent(pFnEncroachedBy,NULL,&EncroachedBy_Parms,NULL);
}

struct Engine_UnCrouch_Parms
{
};

void APawn::UnCrouch()
{
	static UFieldFunc* pFnUnCrouch = NULL;
	if(!pFnUnCrouch)
		pFnUnCrouch = UObject::FindFunction("Function Engine.Pawn.UnCrouch");

	Engine_UnCrouch_Parms UnCrouch_Parms;
	ProcessEvent(pFnUnCrouch,NULL,&UnCrouch_Parms,NULL);
}

struct Engine_ChooseFireMode_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char APawn::ChooseFireMode()
{
	static UFieldFunc* pFnChooseFireMode = NULL;
	if(!pFnChooseFireMode)
		pFnChooseFireMode = UObject::FindFunction("Function Engine.Pawn.ChooseFireMode");

	Engine_ChooseFireMode_Parms ChooseFireMode_Parms;
	ProcessEvent(pFnChooseFireMode,NULL,&ChooseFireMode_Parms,NULL);
	return ChooseFireMode_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void APawn::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Pawn.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_IncrementPathStep_Parms
{
	int                                                Cnt;                                              		// 0x000000 (0x0004)              
	class UCanvas*                                     C;                                                		// 0x000004 (0x0004)              
};

void APawn::IncrementPathStep(int Cnt,class UCanvas* C)
{
	static UFieldFunc* pFnIncrementPathStep = NULL;
	if(!pFnIncrementPathStep)
		pFnIncrementPathStep = UObject::FindFunction("Function Engine.Pawn.IncrementPathStep");

	Engine_IncrementPathStep_Parms IncrementPathStep_Parms;
	IncrementPathStep_Parms.Cnt = Cnt;
	IncrementPathStep_Parms.C = C;
	pFnIncrementPathStep->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIncrementPathStep,NULL,&IncrementPathStep_Parms,NULL);
	pFnIncrementPathStep->FunctionFlags |= 0x400;
}

struct Engine_PreBeginPlay_Parms
{
};

void AScout::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.Scout.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_TryToDrive_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AVehicle::TryToDrive(class APawn* P)
{
	static UFieldFunc* pFnTryToDrive = NULL;
	if(!pFnTryToDrive)
		pFnTryToDrive = UObject::FindFunction("Function Engine.Vehicle.TryToDrive");

	Engine_TryToDrive_Parms TryToDrive_Parms;
	TryToDrive_Parms.P = P;
	ProcessEvent(pFnTryToDrive,NULL,&TryToDrive_Parms,NULL);
	return TryToDrive_Parms.ReturnValue;
}

struct Engine_ThrowActiveWeapon_Parms
{
	class UClass*                                      DamageType;                                       		// 0x000000 (0x0004)              
};

void AVehicle::ThrowActiveWeapon(class UClass* DamageType)
{
	static UFieldFunc* pFnThrowActiveWeapon = NULL;
	if(!pFnThrowActiveWeapon)
		pFnThrowActiveWeapon = UObject::FindFunction("Function Engine.Vehicle.ThrowActiveWeapon");

	Engine_ThrowActiveWeapon_Parms ThrowActiveWeapon_Parms;
	ThrowActiveWeapon_Parms.DamageType = DamageType;
	ProcessEvent(pFnThrowActiveWeapon,NULL,&ThrowActiveWeapon_Parms,NULL);
}

struct Engine_Died_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	int                                                nWeaponType;                                      		// 0x000014 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AVehicle::Died(class AController* Killer,class UClass* DamageType,FVector3 HitLocation,int nWeaponType)
{
	static UFieldFunc* pFnDied = NULL;
	if(!pFnDied)
		pFnDied = UObject::FindFunction("Function Engine.Vehicle.Died");

	Engine_Died_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy(&Died_Parms.HitLocation,&HitLocation,0xC);
	Died_Parms.nWeaponType = nWeaponType;
	ProcessEvent(pFnDied,NULL,&Died_Parms,NULL);
	return Died_Parms.ReturnValue;
}

struct Engine_FindAutoExit_Parms
{
	class APawn*                                       ExitingDriver;                                    		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//FVector3                                           FacingDir;                                        		// 0x000008 (0x000C)              
	//FVector3                                           CrossProduct;                                     		// 0x000014 (0x000C)              
	//float                                              PlaceDist;                                        		// 0x000020 (0x0004)              
};

bool AVehicle::FindAutoExit(class APawn* ExitingDriver)
{
	static UFieldFunc* pFnFindAutoExit = NULL;
	if(!pFnFindAutoExit)
		pFnFindAutoExit = UObject::FindFunction("Function Engine.Vehicle.FindAutoExit");

	Engine_FindAutoExit_Parms FindAutoExit_Parms;
	FindAutoExit_Parms.ExitingDriver = ExitingDriver;
	ProcessEvent(pFnFindAutoExit,NULL,&FindAutoExit_Parms,NULL);
	return FindAutoExit_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void AVehicle::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Vehicle.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_PlayerChangedTeam_Parms
{
};

void AVehicle::PlayerChangedTeam()
{
	static UFieldFunc* pFnPlayerChangedTeam = NULL;
	if(!pFnPlayerChangedTeam)
		pFnPlayerChangedTeam = UObject::FindFunction("Function Engine.Vehicle.PlayerChangedTeam");

	Engine_PlayerChangedTeam_Parms PlayerChangedTeam_Parms;
	ProcessEvent(pFnPlayerChangedTeam,NULL,&PlayerChangedTeam_Parms,NULL);
}

struct Engine_Suicide_Parms
{
};

void AVehicle::Suicide()
{
	static UFieldFunc* pFnSuicide = NULL;
	if(!pFnSuicide)
		pFnSuicide = UObject::FindFunction("Function Engine.Vehicle.Suicide");

	Engine_Suicide_Parms Suicide_Parms;
	ProcessEvent(pFnSuicide,NULL,&Suicide_Parms,NULL);
}

struct Engine_DriverLeft_Parms
{
};

void AVehicle::DriverLeft()
{
	static UFieldFunc* pFnDriverLeft = NULL;
	if(!pFnDriverLeft)
		pFnDriverLeft = UObject::FindFunction("Function Engine.Vehicle.DriverLeft");

	Engine_DriverLeft_Parms DriverLeft_Parms;
	ProcessEvent(pFnDriverLeft,NULL,&DriverLeft_Parms,NULL);
}

struct Engine_CheatGhost_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AVehicle::CheatGhost()
{
	static UFieldFunc* pFnCheatGhost = NULL;
	if(!pFnCheatGhost)
		pFnCheatGhost = UObject::FindFunction("Function Engine.Vehicle.CheatGhost");

	Engine_CheatGhost_Parms CheatGhost_Parms;
	ProcessEvent(pFnCheatGhost,NULL,&CheatGhost_Parms,NULL);
	return CheatGhost_Parms.ReturnValue;
}

struct Engine_SetBaseEyeheight_Parms
{
};

void AVehicle::SetBaseEyeheight()
{
	static UFieldFunc* pFnSetBaseEyeheight = NULL;
	if(!pFnSetBaseEyeheight)
		pFnSetBaseEyeheight = UObject::FindFunction("Function Engine.Vehicle.SetBaseEyeheight");

	Engine_SetBaseEyeheight_Parms SetBaseEyeheight_Parms;
	ProcessEvent(pFnSetBaseEyeheight,NULL,&SetBaseEyeheight_Parms,NULL);
}

struct Engine_DetachDriver_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void AVehicle::DetachDriver(class APawn* P)
{
	static UFieldFunc* pFnDetachDriver = NULL;
	if(!pFnDetachDriver)
		pFnDetachDriver = UObject::FindFunction("Function Engine.Vehicle.DetachDriver");

	Engine_DetachDriver_Parms DetachDriver_Parms;
	DetachDriver_Parms.P = P;
	ProcessEvent(pFnDetachDriver,NULL,&DetachDriver_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void AVehicle::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.Vehicle.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_NotifyTeamChanged_Parms
{
};

void AVehicle::NotifyTeamChanged()
{
	static UFieldFunc* pFnNotifyTeamChanged = NULL;
	if(!pFnNotifyTeamChanged)
		pFnNotifyTeamChanged = UObject::FindFunction("Function Engine.Vehicle.NotifyTeamChanged");

	Engine_NotifyTeamChanged_Parms NotifyTeamChanged_Parms;
	ProcessEvent(pFnNotifyTeamChanged,NULL,&NotifyTeamChanged_Parms,NULL);
}

struct Engine_DrivingStatusChanged_Parms
{
};

void AVehicle::DrivingStatusChanged()
{
	static UFieldFunc* pFnDrivingStatusChanged = NULL;
	if(!pFnDrivingStatusChanged)
		pFnDrivingStatusChanged = UObject::FindFunction("Function Engine.Vehicle.DrivingStatusChanged");

	Engine_DrivingStatusChanged_Parms DrivingStatusChanged_Parms;
	ProcessEvent(pFnDrivingStatusChanged,NULL,&DrivingStatusChanged_Parms,NULL);
}

struct Engine_EncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
	//FVector3                                           PushVelocity;                                     		// 0x00000C (0x000C)              
	//FVector3                                           CheckExtent;                                      		// 0x000018 (0x000C)              
	//unsigned long                                      bSlowEncroach : 1;                                		// 0x000024 (0x0004) [0x00000001] 
	//unsigned long                                      bDeepEncroach : 1;                                		// 0x000028 (0x0004) [0x00000001] 
};

bool AVehicle::EncroachingOn(class AActor* Other)
{
	static UFieldFunc* pFnEncroachingOn = NULL;
	if(!pFnEncroachingOn)
		pFnEncroachingOn = UObject::FindFunction("Function Engine.Vehicle.EncroachingOn");

	Engine_EncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;
	ProcessEvent(pFnEncroachingOn,NULL,&EncroachingOn_Parms,NULL);
	return EncroachingOn_Parms.ReturnValue;
}

struct Engine_Destroyed_HandleDriver_Parms
{
	//class APawn*                                       OldDriver;                                        		// 0x000000 (0x0004)              
};

void AVehicle::Destroyed_HandleDriver()
{
	static UFieldFunc* pFnDestroyed_HandleDriver = NULL;
	if(!pFnDestroyed_HandleDriver)
		pFnDestroyed_HandleDriver = UObject::FindFunction("Function Engine.Vehicle.Destroyed_HandleDriver");

	Engine_Destroyed_HandleDriver_Parms Destroyed_HandleDriver_Parms;
	ProcessEvent(pFnDestroyed_HandleDriver,NULL,&Destroyed_HandleDriver_Parms,NULL);
}

struct Engine_ContinueOnFoot_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AVehicle::ContinueOnFoot()
{
	static UFieldFunc* pFnContinueOnFoot = NULL;
	if(!pFnContinueOnFoot)
		pFnContinueOnFoot = UObject::FindFunction("Function Engine.Vehicle.ContinueOnFoot");

	Engine_ContinueOnFoot_Parms ContinueOnFoot_Parms;
	ProcessEvent(pFnContinueOnFoot,NULL,&ContinueOnFoot_Parms,NULL);
	return ContinueOnFoot_Parms.ReturnValue;
}

struct Engine_GetEntryLocation_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 AVehicle::GetEntryLocation()
{
	static UFieldFunc* pFnGetEntryLocation = NULL;
	if(!pFnGetEntryLocation)
		pFnGetEntryLocation = UObject::FindFunction("Function Engine.Vehicle.GetEntryLocation");

	Engine_GetEntryLocation_Parms GetEntryLocation_Parms;
	ProcessEvent(pFnGetEntryLocation,NULL,&GetEntryLocation_Parms,NULL);
	return GetEntryLocation_Parms.ReturnValue;
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//struct FString                                     DriverText;                                       		// 0x00000C (0x000C)              
};

void AVehicle::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.Vehicle.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_GetTargetLocation_Parms
{
	class AActor*                                      RequestedBy;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bRequestAlternateLoc : 1;                         		// 0x000004 (0x0004) [0x00000001] 
	FVector3                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FVector3 AVehicle::GetTargetLocation(class AActor* RequestedBy,bool bRequestAlternateLoc)
{
	static UFieldFunc* pFnGetTargetLocation = NULL;
	if(!pFnGetTargetLocation)
		pFnGetTargetLocation = UObject::FindFunction("Function Engine.Vehicle.GetTargetLocation");

	Engine_GetTargetLocation_Parms GetTargetLocation_Parms;
	GetTargetLocation_Parms.RequestedBy = RequestedBy;
	GetTargetLocation_Parms.bRequestAlternateLoc = bRequestAlternateLoc;
	pFnGetTargetLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTargetLocation,NULL,&GetTargetLocation_Parms,NULL);
	pFnGetTargetLocation->FunctionFlags |= 0x400;
	return GetTargetLocation_Parms.ReturnValue;
}

struct Engine_SetInputs_Parms
{
	float                                              InForward;                                        		// 0x000000 (0x0004)              
	float                                              InStrafe;                                         		// 0x000004 (0x0004)              
	float                                              InUp;                                             		// 0x000008 (0x0004)              
	float                                              InSprint;                                         		// 0x00000C (0x0004)              
};

void AVehicle::SetInputs(float InForward,float InStrafe,float InUp,float InSprint)
{
	static UFieldFunc* pFnSetInputs = NULL;
	if(!pFnSetInputs)
		pFnSetInputs = UObject::FindFunction("Function Engine.Vehicle.SetInputs");

	Engine_SetInputs_Parms SetInputs_Parms;
	SetInputs_Parms.InForward = InForward;
	SetInputs_Parms.InStrafe = InStrafe;
	SetInputs_Parms.InUp = InUp;
	SetInputs_Parms.InSprint = InSprint;
	pFnSetInputs->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetInputs,NULL,&SetInputs_Parms,NULL);
	pFnSetInputs->FunctionFlags |= 0x400;
}

struct Engine_PossessedBy_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
	unsigned long                                      bVehicleTransition : 1;                           		// 0x000004 (0x0004) [0x00000001] 
};

void AVehicle::PossessedBy(class AController* C,bool bVehicleTransition)
{
	static UFieldFunc* pFnPossessedBy = NULL;
	if(!pFnPossessedBy)
		pFnPossessedBy = UObject::FindFunction("Function Engine.Vehicle.PossessedBy");

	Engine_PossessedBy_Parms PossessedBy_Parms;
	PossessedBy_Parms.C = C;
	PossessedBy_Parms.bVehicleTransition = bVehicleTransition;
	ProcessEvent(pFnPossessedBy,NULL,&PossessedBy_Parms,NULL);
}

struct Engine_AdjustDriverDamage_Parms
{
	int                                                Damage;                                           		// 0x000000 (0x0004)              
	class AController*                                 InstigatedBy;                                     		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           Momentum;                                         		// 0x000014 (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000020 (0x0004)              
};

void AVehicle::AdjustDriverDamage(int* Damage,class AController* InstigatedBy,FVector3 HitLocation,FVector3* Momentum,class UClass* DamageType)
{
	static UFieldFunc* pFnAdjustDriverDamage = NULL;
	if(!pFnAdjustDriverDamage)
		pFnAdjustDriverDamage = UObject::FindFunction("Function Engine.Vehicle.AdjustDriverDamage");

	Engine_AdjustDriverDamage_Parms AdjustDriverDamage_Parms;
	AdjustDriverDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy(&AdjustDriverDamage_Parms.HitLocation,&HitLocation,0xC);
	AdjustDriverDamage_Parms.DamageType = DamageType;
	ProcessEvent(pFnAdjustDriverDamage,NULL,&AdjustDriverDamage_Parms,NULL);
	if(Damage)
		*Damage = AdjustDriverDamage_Parms.Damage;
	if(Momentum)
		memcpy(Momentum,&AdjustDriverDamage_Parms.Momentum,0xC);
}

struct Engine_PlaceExitingDriver_Parms
{
	class APawn*                                       ExitingDriver;                                    		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//FVector3                                           tryPlace;                                         		// 0x00000C (0x000C)              
	//FVector3                                           Extent;                                           		// 0x000018 (0x000C)              
	//FVector3                                           HitLocation;                                      		// 0x000024 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x000030 (0x000C)              
	//FVector3                                           ZOffset;                                          		// 0x00003C (0x000C)              
};

bool AVehicle::PlaceExitingDriver(class APawn* ExitingDriver)
{
	static UFieldFunc* pFnPlaceExitingDriver = NULL;
	if(!pFnPlaceExitingDriver)
		pFnPlaceExitingDriver = UObject::FindFunction("Function Engine.Vehicle.PlaceExitingDriver");

	Engine_PlaceExitingDriver_Parms PlaceExitingDriver_Parms;
	PlaceExitingDriver_Parms.ExitingDriver = ExitingDriver;
	ProcessEvent(pFnPlaceExitingDriver,NULL,&PlaceExitingDriver_Parms,NULL);
	return PlaceExitingDriver_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AVehicle::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.Vehicle.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_PlayDying_Parms
{
	class UClass*                                      DamageType;                                       		// 0x000000 (0x0004)              
	FVector3                                           HitLoc;                                           		// 0x000004 (0x000C)              
};

void AVehicle::PlayDying(class UClass* DamageType,FVector3 HitLoc)
{
	static UFieldFunc* pFnPlayDying = NULL;
	if(!pFnPlayDying)
		pFnPlayDying = UObject::FindFunction("Function Engine.Vehicle.PlayDying");

	Engine_PlayDying_Parms PlayDying_Parms;
	PlayDying_Parms.DamageType = DamageType;
	memcpy(&PlayDying_Parms.HitLoc,&HitLoc,0xC);
	ProcessEvent(pFnPlayDying,NULL,&PlayDying_Parms,NULL);
}

struct Engine_GetCollisionDamageInstigator_Parms
{
	class AController*                                 ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AController* AVehicle::GetCollisionDamageInstigator()
{
	static UFieldFunc* pFnGetCollisionDamageInstigator = NULL;
	if(!pFnGetCollisionDamageInstigator)
		pFnGetCollisionDamageInstigator = UObject::FindFunction("Function Engine.Vehicle.GetCollisionDamageInstigator");

	Engine_GetCollisionDamageInstigator_Parms GetCollisionDamageInstigator_Parms;
	ProcessEvent(pFnGetCollisionDamageInstigator,NULL,&GetCollisionDamageInstigator_Parms,NULL);
	return GetCollisionDamageInstigator_Parms.ReturnValue;
}

struct Engine_GetDefaultCameraMode_Parms
{
	class APlayerController*                           RequestedBy;                                      		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName AVehicle::GetDefaultCameraMode(class APlayerController* RequestedBy)
{
	static UFieldFunc* pFnGetDefaultCameraMode = NULL;
	if(!pFnGetDefaultCameraMode)
		pFnGetDefaultCameraMode = UObject::FindFunction("Function Engine.Vehicle.GetDefaultCameraMode");

	Engine_GetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;
	pFnGetDefaultCameraMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultCameraMode,NULL,&GetDefaultCameraMode_Parms,NULL);
	pFnGetDefaultCameraMode->FunctionFlags |= 0x400;
	return GetDefaultCameraMode_Parms.ReturnValue;
}

struct Engine_DriverDied_Parms
{
	//class AController*                                 C;                                                		// 0x000000 (0x0004)              
	//class APlayerReplicationInfo*                      RealPRI;                                          		// 0x000004 (0x0004)              
};

void AVehicle::DriverDied()
{
	static UFieldFunc* pFnDriverDied = NULL;
	if(!pFnDriverDied)
		pFnDriverDied = UObject::FindFunction("Function Engine.Vehicle.DriverDied");

	Engine_DriverDied_Parms DriverDied_Parms;
	ProcessEvent(pFnDriverDied,NULL,&DriverDied_Parms,NULL);
}

struct Engine_SetKillInstigator_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000004 (0x0004)              
	class AController*                                 ReturnValue;                                      		// 0x000008 (0x0004)              
};

class AController* AVehicle::SetKillInstigator(class AController* InstigatedBy,class UClass* DamageType)
{
	static UFieldFunc* pFnSetKillInstigator = NULL;
	if(!pFnSetKillInstigator)
		pFnSetKillInstigator = UObject::FindFunction("Function Engine.Vehicle.SetKillInstigator");

	Engine_SetKillInstigator_Parms SetKillInstigator_Parms;
	SetKillInstigator_Parms.InstigatedBy = InstigatedBy;
	SetKillInstigator_Parms.DamageType = DamageType;
	pFnSetKillInstigator->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetKillInstigator,NULL,&SetKillInstigator_Parms,NULL);
	pFnSetKillInstigator->FunctionFlags |= 0x400;
	return SetKillInstigator_Parms.ReturnValue;
}

struct Engine_EncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AVehicle::EncroachedBy(class AActor* Other)
{
	static UFieldFunc* pFnEncroachedBy = NULL;
	if(!pFnEncroachedBy)
		pFnEncroachedBy = UObject::FindFunction("Function Engine.Vehicle.EncroachedBy");

	Engine_EncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;
	ProcessEvent(pFnEncroachedBy,NULL,&EncroachedBy_Parms,NULL);
}

struct Engine_CrushedBy_Parms
{
	class APawn*                                       OtherPawn;                                        		// 0x000000 (0x0004)              
};

void AVehicle::CrushedBy(class APawn* OtherPawn)
{
	static UFieldFunc* pFnCrushedBy = NULL;
	if(!pFnCrushedBy)
		pFnCrushedBy = UObject::FindFunction("Function Engine.Vehicle.CrushedBy");

	Engine_CrushedBy_Parms CrushedBy_Parms;
	CrushedBy_Parms.OtherPawn = OtherPawn;
	ProcessEvent(pFnCrushedBy,NULL,&CrushedBy_Parms,NULL);
}

struct Engine_FaceRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
	float                                              DeltaTime;                                        		// 0x00000C (0x0004)              
};

void AVehicle::FaceRotation(FRotator NewRotation,float DeltaTime)
{
	static UFieldFunc* pFnFaceRotation = NULL;
	if(!pFnFaceRotation)
		pFnFaceRotation = UObject::FindFunction("Function Engine.Vehicle.FaceRotation");

	Engine_FaceRotation_Parms FaceRotation_Parms;
	memcpy(&FaceRotation_Parms.NewRotation,&NewRotation,0xC);
	FaceRotation_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnFaceRotation,NULL,&FaceRotation_Parms,NULL);
}

struct Engine_AttachDriver_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void AVehicle::AttachDriver(class APawn* P)
{
	static UFieldFunc* pFnAttachDriver = NULL;
	if(!pFnAttachDriver)
		pFnAttachDriver = UObject::FindFunction("Function Engine.Vehicle.AttachDriver");

	Engine_AttachDriver_Parms AttachDriver_Parms;
	AttachDriver_Parms.P = P;
	ProcessEvent(pFnAttachDriver,NULL,&AttachDriver_Parms,NULL);
}

struct Engine_TryExitPos_Parms
{
	class APawn*                                       ExitingDriver;                                    		// 0x000000 (0x0004)              
	FVector3                                           ExitPos;                                          		// 0x000004 (0x000C)              
	unsigned long                                      bMustFindGround : 1;                              		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//FVector3                                           Slice;                                            		// 0x000018 (0x000C)              
	//FVector3                                           HitLocation;                                      		// 0x000024 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x000030 (0x000C)              
	//FVector3                                           StartLocation;                                    		// 0x00003C (0x000C)              
	//FVector3                                           NewActorPos;                                      		// 0x000048 (0x000C)              
	//class AActor*                                      HitActor;                                         		// 0x000054 (0x0004)              
};

bool AVehicle::TryExitPos(class APawn* ExitingDriver,FVector3 ExitPos,bool bMustFindGround)
{
	static UFieldFunc* pFnTryExitPos = NULL;
	if(!pFnTryExitPos)
		pFnTryExitPos = UObject::FindFunction("Function Engine.Vehicle.TryExitPos");

	Engine_TryExitPos_Parms TryExitPos_Parms;
	TryExitPos_Parms.ExitingDriver = ExitingDriver;
	memcpy(&TryExitPos_Parms.ExitPos,&ExitPos,0xC);
	TryExitPos_Parms.bMustFindGround = bMustFindGround;
	ProcessEvent(pFnTryExitPos,NULL,&TryExitPos_Parms,NULL);
	return TryExitPos_Parms.ReturnValue;
}

struct Engine_SetDriving_Parms
{
	unsigned long                                      B : 1;                                            		// 0x000000 (0x0004) [0x00000001] 
};

void AVehicle::SetDriving(bool B)
{
	static UFieldFunc* pFnSetDriving = NULL;
	if(!pFnSetDriving)
		pFnSetDriving = UObject::FindFunction("Function Engine.Vehicle.SetDriving");

	Engine_SetDriving_Parms SetDriving_Parms;
	SetDriving_Parms.B = B;
	pFnSetDriving->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDriving,NULL,&SetDriving_Parms,NULL);
	pFnSetDriving->FunctionFlags |= 0x400;
}

struct Engine_HandleDeadVehicleDriver_Parms
{
};

void AVehicle::HandleDeadVehicleDriver()
{
	static UFieldFunc* pFnHandleDeadVehicleDriver = NULL;
	if(!pFnHandleDeadVehicleDriver)
		pFnHandleDeadVehicleDriver = UObject::FindFunction("Function Engine.Vehicle.HandleDeadVehicleDriver");

	Engine_HandleDeadVehicleDriver_Parms HandleDeadVehicleDriver_Parms;
	ProcessEvent(pFnHandleDeadVehicleDriver,NULL,&HandleDeadVehicleDriver_Parms,NULL);
}

struct Engine_EntryAnnouncement_Parms
{
	class AController*                                 C;                                                		// 0x000000 (0x0004)              
};

void AVehicle::EntryAnnouncement(class AController* C)
{
	static UFieldFunc* pFnEntryAnnouncement = NULL;
	if(!pFnEntryAnnouncement)
		pFnEntryAnnouncement = UObject::FindFunction("Function Engine.Vehicle.EntryAnnouncement");

	Engine_EntryAnnouncement_Parms EntryAnnouncement_Parms;
	EntryAnnouncement_Parms.C = C;
	ProcessEvent(pFnEntryAnnouncement,NULL,&EntryAnnouncement_Parms,NULL);
}

struct Engine_CanEnterVehicle_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AVehicle::CanEnterVehicle(class APawn* P)
{
	static UFieldFunc* pFnCanEnterVehicle = NULL;
	if(!pFnCanEnterVehicle)
		pFnCanEnterVehicle = UObject::FindFunction("Function Engine.Vehicle.CanEnterVehicle");

	Engine_CanEnterVehicle_Parms CanEnterVehicle_Parms;
	CanEnterVehicle_Parms.P = P;
	ProcessEvent(pFnCanEnterVehicle,NULL,&CanEnterVehicle_Parms,NULL);
	return CanEnterVehicle_Parms.ReturnValue;
}

struct Engine_TakeRadiusDamage_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	float                                              BaseDamage;                                       		// 0x000004 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000014 (0x000C)              
	unsigned long                                      bFullDamage : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	class AActor*                                      DamageCauser;                                     		// 0x000024 (0x0004)              
};

void AVehicle::TakeRadiusDamage(class AController* InstigatedBy,float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,bool bFullDamage,class AActor* DamageCauser)
{
	static UFieldFunc* pFnTakeRadiusDamage = NULL;
	if(!pFnTakeRadiusDamage)
		pFnTakeRadiusDamage = UObject::FindFunction("Function Engine.Vehicle.TakeRadiusDamage");

	Engine_TakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy(&TakeRadiusDamage_Parms.HurtOrigin,&HurtOrigin,0xC);
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	ProcessEvent(pFnTakeRadiusDamage,NULL,&TakeRadiusDamage_Parms,NULL);
}

struct Engine_DriverRadiusDamage_Parms
{
	float                                              DamageAmount;                                     		// 0x000000 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000004 (0x0004)              
	class AController*                                 EventInstigator;                                  		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000014 (0x000C)              
	class AActor*                                      DamageCauser;                                     		// 0x000020 (0x0004)              
};

void AVehicle::DriverRadiusDamage(float DamageAmount,float DamageRadius,class AController* EventInstigator,class UClass* DamageType,float Momentum,FVector3 HitLocation,class AActor* DamageCauser)
{
	static UFieldFunc* pFnDriverRadiusDamage = NULL;
	if(!pFnDriverRadiusDamage)
		pFnDriverRadiusDamage = UObject::FindFunction("Function Engine.Vehicle.DriverRadiusDamage");

	Engine_DriverRadiusDamage_Parms DriverRadiusDamage_Parms;
	DriverRadiusDamage_Parms.DamageAmount = DamageAmount;
	DriverRadiusDamage_Parms.DamageRadius = DamageRadius;
	DriverRadiusDamage_Parms.EventInstigator = EventInstigator;
	DriverRadiusDamage_Parms.DamageType = DamageType;
	DriverRadiusDamage_Parms.Momentum = Momentum;
	memcpy(&DriverRadiusDamage_Parms.HitLocation,&HitLocation,0xC);
	DriverRadiusDamage_Parms.DamageCauser = DamageCauser;
	ProcessEvent(pFnDriverRadiusDamage,NULL,&DriverRadiusDamage_Parms,NULL);
}

struct Engine_CheatWalk_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AVehicle::CheatWalk()
{
	static UFieldFunc* pFnCheatWalk = NULL;
	if(!pFnCheatWalk)
		pFnCheatWalk = UObject::FindFunction("Function Engine.Vehicle.CheatWalk");

	Engine_CheatWalk_Parms CheatWalk_Parms;
	ProcessEvent(pFnCheatWalk,NULL,&CheatWalk_Parms,NULL);
	return CheatWalk_Parms.ReturnValue;
}

struct Engine_NotifyDriverTakeHit_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000004 (0x000C)              
	int                                                Damage;                                           		// 0x000010 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000014 (0x0004)              
	FVector3                                           Momentum;                                         		// 0x000018 (0x000C)              
};

void AVehicle::NotifyDriverTakeHit(class AController* InstigatedBy,FVector3 HitLocation,int Damage,class UClass* DamageType,FVector3 Momentum)
{
	static UFieldFunc* pFnNotifyDriverTakeHit = NULL;
	if(!pFnNotifyDriverTakeHit)
		pFnNotifyDriverTakeHit = UObject::FindFunction("Function Engine.Vehicle.NotifyDriverTakeHit");

	Engine_NotifyDriverTakeHit_Parms NotifyDriverTakeHit_Parms;
	NotifyDriverTakeHit_Parms.InstigatedBy = InstigatedBy;
	memcpy(&NotifyDriverTakeHit_Parms.HitLocation,&HitLocation,0xC);
	NotifyDriverTakeHit_Parms.Damage = Damage;
	NotifyDriverTakeHit_Parms.DamageType = DamageType;
	memcpy(&NotifyDriverTakeHit_Parms.Momentum,&Momentum,0xC);
	ProcessEvent(pFnNotifyDriverTakeHit,NULL,&NotifyDriverTakeHit_Parms,NULL);
}

struct Engine_AnySeatAvailable_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AVehicle::AnySeatAvailable()
{
	static UFieldFunc* pFnAnySeatAvailable = NULL;
	if(!pFnAnySeatAvailable)
		pFnAnySeatAvailable = UObject::FindFunction("Function Engine.Vehicle.AnySeatAvailable");

	Engine_AnySeatAvailable_Parms AnySeatAvailable_Parms;
	ProcessEvent(pFnAnySeatAvailable,NULL,&AnySeatAvailable_Parms,NULL);
	return AnySeatAvailable_Parms.ReturnValue;
}

struct Engine_CheatFly_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AVehicle::CheatFly()
{
	static UFieldFunc* pFnCheatFly = NULL;
	if(!pFnCheatFly)
		pFnCheatFly = UObject::FindFunction("Function Engine.Vehicle.CheatFly");

	Engine_CheatFly_Parms CheatFly_Parms;
	ProcessEvent(pFnCheatFly,NULL,&CheatFly_Parms,NULL);
	return CheatFly_Parms.ReturnValue;
}

struct Engine_UnPossessed_Parms
{
};

void AVehicle::UnPossessed()
{
	static UFieldFunc* pFnUnPossessed = NULL;
	if(!pFnUnPossessed)
		pFnUnPossessed = UObject::FindFunction("Function Engine.Vehicle.UnPossessed");

	Engine_UnPossessed_Parms UnPossessed_Parms;
	ProcessEvent(pFnUnPossessed,NULL,&UnPossessed_Parms,NULL);
}

struct Engine_GetTeamNum_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char AProjectile::GetTeamNum()
{
	static UFieldFunc* pFnGetTeamNum = NULL;
	if(!pFnGetTeamNum)
		pFnGetTeamNum = UObject::FindFunction("Function Engine.Projectile.GetTeamNum");

	Engine_GetTeamNum_Parms GetTeamNum_Parms;
	pFnGetTeamNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTeamNum,NULL,&GetTeamNum_Parms,NULL);
	pFnGetTeamNum->FunctionFlags |= 0x400;
	return GetTeamNum_Parms.ReturnValue;
}

struct Engine_GetRange_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float AProjectile::GetRange()
{
	static UFieldFunc* pFnGetRange = NULL;
	if(!pFnGetRange)
		pFnGetRange = UObject::FindFunction("Function Engine.Projectile.GetRange");

	Engine_GetRange_Parms GetRange_Parms;
	ProcessEvent(pFnGetRange,NULL,&GetRange_Parms,NULL);
	return GetRange_Parms.ReturnValue;
}

struct Engine_GetTimeToLocation_Parms
{
	FVector3                                           TargetLoc;                                        		// 0x000000 (0x000C)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float AProjectile::GetTimeToLocation(FVector3 TargetLoc)
{
	static UFieldFunc* pFnGetTimeToLocation = NULL;
	if(!pFnGetTimeToLocation)
		pFnGetTimeToLocation = UObject::FindFunction("Function Engine.Projectile.GetTimeToLocation");

	Engine_GetTimeToLocation_Parms GetTimeToLocation_Parms;
	memcpy(&GetTimeToLocation_Parms.TargetLoc,&TargetLoc,0xC);
	ProcessEvent(pFnGetTimeToLocation,NULL,&GetTimeToLocation_Parms,NULL);
	return GetTimeToLocation_Parms.ReturnValue;
}

struct Engine_IsStationary_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AProjectile::IsStationary()
{
	static UFieldFunc* pFnIsStationary = NULL;
	if(!pFnIsStationary)
		pFnIsStationary = UObject::FindFunction("Function Engine.Projectile.IsStationary");

	Engine_IsStationary_Parms IsStationary_Parms;
	ProcessEvent(pFnIsStationary,NULL,&IsStationary_Parms,NULL);
	return IsStationary_Parms.ReturnValue;
}

struct Engine_PreBeginPlay_Parms
{
};

void AProjectile::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.Projectile.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_ProjectileHitWall_Parms
{
	FVector3                                           HitNormal;                                        		// 0x000000 (0x000C)              
	class AActor*                                      Wall;                                             		// 0x00000C (0x0004)              
	class UPrimitiveComponent*                         WallComp;                                         		// 0x000010 (0x0004)              
	class UPhysicalMaterial*                           HitMaterial;                                      		// 0x000014 (0x0004)              
};

void AProjectile::ProjectileHitWall(FVector3 HitNormal,class AActor* Wall,class UPrimitiveComponent* WallComp,class UPhysicalMaterial* HitMaterial)
{
	static UFieldFunc* pFnProjectileHitWall = NULL;
	if(!pFnProjectileHitWall)
		pFnProjectileHitWall = UObject::FindFunction("Function Engine.Projectile.ProjectileHitWall");

	Engine_ProjectileHitWall_Parms ProjectileHitWall_Parms;
	memcpy(&ProjectileHitWall_Parms.HitNormal,&HitNormal,0xC);
	ProjectileHitWall_Parms.Wall = Wall;
	ProjectileHitWall_Parms.WallComp = WallComp;
	ProjectileHitWall_Parms.HitMaterial = HitMaterial;
	ProcessEvent(pFnProjectileHitWall,NULL,&ProjectileHitWall_Parms,NULL);
}

struct Engine_Init_Parms
{
	FVector3                                           Direction;                                        		// 0x000000 (0x000C)              
};

void AProjectile::Init(FVector3 Direction)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.Projectile.Init");

	Engine_Init_Parms Init_Parms;
	memcpy(&Init_Parms.Direction,&Direction,0xC);
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_FellOutOfWorld_Parms
{
	class UClass*                                      dmgType;                                          		// 0x000000 (0x0004)              
};

void AProjectile::FellOutOfWorld(class UClass* dmgType)
{
	static UFieldFunc* pFnFellOutOfWorld = NULL;
	if(!pFnFellOutOfWorld)
		pFnFellOutOfWorld = UObject::FindFunction("Function Engine.Projectile.FellOutOfWorld");

	Engine_FellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;
	ProcessEvent(pFnFellOutOfWorld,NULL,&FellOutOfWorld_Parms,NULL);
}

struct Engine_CanSplash_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AProjectile::CanSplash()
{
	static UFieldFunc* pFnCanSplash = NULL;
	if(!pFnCanSplash)
		pFnCanSplash = UObject::FindFunction("Function Engine.Projectile.CanSplash");

	Engine_CanSplash_Parms CanSplash_Parms;
	ProcessEvent(pFnCanSplash,NULL,&CanSplash_Parms,NULL);
	return CanSplash_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

void AProjectile::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.Projectile.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_HurtRadius_Parms
{
	float                                              DamageAmount;                                     		// 0x000000 (0x0004)              
	float                                              InDamageRadius;                                   		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
	float                                              Momentum;                                         		// 0x00000C (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000010 (0x000C)              
	class AActor*                                      IgnoredActor;                                     		// 0x00001C (0x0004)              
	class AController*                                 InstigatedByController;                           		// 0x000020 (0x0004)              
	unsigned long                                      bDoFullDamage : 1;                                		// 0x000024 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
	//unsigned long                                      bCausedDamage : 1;                                		// 0x00002C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000030 (0x0004) [0x00000001] 
};

bool AProjectile::HurtRadius(float DamageAmount,float InDamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,class AActor* IgnoredActor,class AController* InstigatedByController,bool bDoFullDamage)
{
	static UFieldFunc* pFnHurtRadius = NULL;
	if(!pFnHurtRadius)
		pFnHurtRadius = UObject::FindFunction("Function Engine.Projectile.HurtRadius");

	Engine_HurtRadius_Parms HurtRadius_Parms;
	HurtRadius_Parms.DamageAmount = DamageAmount;
	HurtRadius_Parms.InDamageRadius = InDamageRadius;
	HurtRadius_Parms.DamageType = DamageType;
	HurtRadius_Parms.Momentum = Momentum;
	memcpy(&HurtRadius_Parms.HurtOrigin,&HurtOrigin,0xC);
	HurtRadius_Parms.IgnoredActor = IgnoredActor;
	HurtRadius_Parms.InstigatedByController = InstigatedByController;
	HurtRadius_Parms.bDoFullDamage = bDoFullDamage;
	ProcessEvent(pFnHurtRadius,NULL,&HurtRadius_Parms,NULL);
	return HurtRadius_Parms.ReturnValue;
}

struct Engine_EncroachedBy_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AProjectile::EncroachedBy(class AActor* Other)
{
	static UFieldFunc* pFnEncroachedBy = NULL;
	if(!pFnEncroachedBy)
		pFnEncroachedBy = UObject::FindFunction("Function Engine.Projectile.EncroachedBy");

	Engine_EncroachedBy_Parms EncroachedBy_Parms;
	EncroachedBy_Parms.Other = Other;
	ProcessEvent(pFnEncroachedBy,NULL,&EncroachedBy_Parms,NULL);
}

struct Engine_EncroachingOn_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AProjectile::EncroachingOn(class AActor* Other)
{
	static UFieldFunc* pFnEncroachingOn = NULL;
	if(!pFnEncroachingOn)
		pFnEncroachingOn = UObject::FindFunction("Function Engine.Projectile.EncroachingOn");

	Engine_EncroachingOn_Parms EncroachingOn_Parms;
	EncroachingOn_Parms.Other = Other;
	ProcessEvent(pFnEncroachingOn,NULL,&EncroachingOn_Parms,NULL);
	return EncroachingOn_Parms.ReturnValue;
}

struct Engine_Explode_Parms
{
	FVector3                                           HitLocation;                                      		// 0x000000 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x00000C (0x000C)              
	class AActor*                                      HitActor;                                         		// 0x000018 (0x0004)              
};

void AProjectile::Explode(FVector3 HitLocation,FVector3 HitNormal,class AActor* HitActor)
{
	static UFieldFunc* pFnExplode = NULL;
	if(!pFnExplode)
		pFnExplode = UObject::FindFunction("Function Engine.Projectile.Explode");

	Engine_Explode_Parms Explode_Parms;
	memcpy(&Explode_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Explode_Parms.HitNormal,&HitNormal,0xC);
	Explode_Parms.HitActor = HitActor;
	ProcessEvent(pFnExplode,NULL,&Explode_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void AProjectile::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.Projectile.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AProjectile::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Projectile.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_StaticGetTimeToLocation_Parms
{
	FVector3                                           TargetLoc;                                        		// 0x000000 (0x000C)              
	FVector3                                           StartLoc;                                         		// 0x00000C (0x000C)              
	class AController*                                 RequestedBy;                                      		// 0x000018 (0x0004)              
	float                                              ReturnValue;                                      		// 0x00001C (0x0004)              
};

float AProjectile::StaticGetTimeToLocation(FVector3 TargetLoc,FVector3 StartLoc,class AController* RequestedBy)
{
	static UFieldFunc* pFnStaticGetTimeToLocation = NULL;
	if(!pFnStaticGetTimeToLocation)
		pFnStaticGetTimeToLocation = UObject::FindFunction("Function Engine.Projectile.StaticGetTimeToLocation");

	Engine_StaticGetTimeToLocation_Parms StaticGetTimeToLocation_Parms;
	memcpy(&StaticGetTimeToLocation_Parms.TargetLoc,&TargetLoc,0xC);
	memcpy(&StaticGetTimeToLocation_Parms.StartLoc,&StartLoc,0xC);
	StaticGetTimeToLocation_Parms.RequestedBy = RequestedBy;
	ProcessEvent(pFnStaticGetTimeToLocation,NULL,&StaticGetTimeToLocation_Parms,NULL);
	return StaticGetTimeToLocation_Parms.ReturnValue;
}

struct Engine_ProcessTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000004 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000010 (0x000C)              
};

void AProjectile::ProcessTouch(class AActor* Other,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnProcessTouch = NULL;
	if(!pFnProcessTouch)
		pFnProcessTouch = UObject::FindFunction("Function Engine.Projectile.ProcessTouch");

	Engine_ProcessTouch_Parms ProcessTouch_Parms;
	ProcessTouch_Parms.Other = Other;
	memcpy(&ProcessTouch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&ProcessTouch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnProcessTouch,NULL,&ProcessTouch_Parms,NULL);
}

struct Engine_StopsProjectile_Parms
{
	class AProjectile*                                 P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APortalTeleporter::StopsProjectile(class AProjectile* P)
{
	static UFieldFunc* pFnStopsProjectile = NULL;
	if(!pFnStopsProjectile)
		pFnStopsProjectile = UObject::FindFunction("Function Engine.PortalTeleporter.StopsProjectile");

	Engine_StopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;
	ProcessEvent(pFnStopsProjectile,NULL,&StopsProjectile_Parms,NULL);
	return StopsProjectile_Parms.ReturnValue;
}

struct Engine_TransformHitLocation_Parms
{
	FVector3                                           HitLocation;                                      		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 APortalTeleporter::TransformHitLocation(FVector3 HitLocation)
{
	static UFieldFunc* pFnTransformHitLocation = NULL;
	if(!pFnTransformHitLocation)
		pFnTransformHitLocation = UObject::FindFunction("Function Engine.PortalTeleporter.TransformHitLocation");

	Engine_TransformHitLocation_Parms TransformHitLocation_Parms;
	memcpy(&TransformHitLocation_Parms.HitLocation,&HitLocation,0xC);
	pFnTransformHitLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTransformHitLocation,NULL,&TransformHitLocation_Parms,NULL);
	pFnTransformHitLocation->FunctionFlags |= 0x400;
	return TransformHitLocation_Parms.ReturnValue;
}

struct Engine_TransformVectorDir_Parms
{
	FVector3                                           V;                                                		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 APortalTeleporter::TransformVectorDir(FVector3 V)
{
	static UFieldFunc* pFnTransformVectorDir = NULL;
	if(!pFnTransformVectorDir)
		pFnTransformVectorDir = UObject::FindFunction("Function Engine.PortalTeleporter.TransformVectorDir");

	Engine_TransformVectorDir_Parms TransformVectorDir_Parms;
	memcpy(&TransformVectorDir_Parms.V,&V,0xC);
	pFnTransformVectorDir->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTransformVectorDir,NULL,&TransformVectorDir_Parms,NULL);
	pFnTransformVectorDir->FunctionFlags |= 0x400;
	return TransformVectorDir_Parms.ReturnValue;
}

struct Engine_TransformActor_Parms
{
	class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool APortalTeleporter::TransformActor(class AActor* A)
{
	static UFieldFunc* pFnTransformActor = NULL;
	if(!pFnTransformActor)
		pFnTransformActor = UObject::FindFunction("Function Engine.PortalTeleporter.TransformActor");

	Engine_TransformActor_Parms TransformActor_Parms;
	TransformActor_Parms.A = A;
	pFnTransformActor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTransformActor,NULL,&TransformActor_Parms,NULL);
	pFnTransformActor->FunctionFlags |= 0x400;
	return TransformActor_Parms.ReturnValue;
}

struct Engine_CreatePortalTexture_Parms
{
	class UTextureRenderTarget2D*                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UTextureRenderTarget2D* APortalTeleporter::CreatePortalTexture()
{
	static UFieldFunc* pFnCreatePortalTexture = NULL;
	if(!pFnCreatePortalTexture)
		pFnCreatePortalTexture = UObject::FindFunction("Function Engine.PortalTeleporter.CreatePortalTexture");

	Engine_CreatePortalTexture_Parms CreatePortalTexture_Parms;
	pFnCreatePortalTexture->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreatePortalTexture,NULL,&CreatePortalTexture_Parms,NULL);
	pFnCreatePortalTexture->FunctionFlags |= 0x400;
	return CreatePortalTexture_Parms.ReturnValue;
}

struct Engine_PreBeginPlay_Parms
{
};

void AStaticMeshActor::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.StaticMeshActor.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_CreateCheckpointRecord_Parms
{
	struct FCheckpointRecord                           Record;                                           		// 0x000000 (0x0004)              
};

void ATrigger::CreateCheckpointRecord(struct FCheckpointRecord* Record)
{
	static UFieldFunc* pFnCreateCheckpointRecord = NULL;
	if(!pFnCreateCheckpointRecord)
		pFnCreateCheckpointRecord = UObject::FindFunction("Function Engine.Trigger.CreateCheckpointRecord");

	Engine_CreateCheckpointRecord_Parms CreateCheckpointRecord_Parms;
	ProcessEvent(pFnCreateCheckpointRecord,NULL,&CreateCheckpointRecord_Parms,NULL);
	if(Record)
		memcpy(Record,&CreateCheckpointRecord_Parms.Record,0x4);
}

struct Engine_UnTrigger_Parms
{
};

void ATrigger::UnTrigger()
{
	static UFieldFunc* pFnUnTrigger = NULL;
	if(!pFnUnTrigger)
		pFnUnTrigger = UObject::FindFunction("Function Engine.Trigger.UnTrigger");

	Engine_UnTrigger_Parms UnTrigger_Parms;
	ProcessEvent(pFnUnTrigger,NULL,&UnTrigger_Parms,NULL);
}

struct Engine_StopsProjectile_Parms
{
	class AProjectile*                                 P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ATrigger::StopsProjectile(class AProjectile* P)
{
	static UFieldFunc* pFnStopsProjectile = NULL;
	if(!pFnStopsProjectile)
		pFnStopsProjectile = UObject::FindFunction("Function Engine.Trigger.StopsProjectile");

	Engine_StopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;
	ProcessEvent(pFnStopsProjectile,NULL,&StopsProjectile_Parms,NULL);
	return StopsProjectile_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

void ATrigger::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.Trigger.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_ApplyCheckpointRecord_Parms
{
	struct FCheckpointRecord                           Record;                                           		// 0x000000 (0x0004)              
};

void ATrigger::ApplyCheckpointRecord(struct FCheckpointRecord* Record)
{
	static UFieldFunc* pFnApplyCheckpointRecord = NULL;
	if(!pFnApplyCheckpointRecord)
		pFnApplyCheckpointRecord = UObject::FindFunction("Function Engine.Trigger.ApplyCheckpointRecord");

	Engine_ApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;
	ProcessEvent(pFnApplyCheckpointRecord,NULL,&ApplyCheckpointRecord_Parms,NULL);
	if(Record)
		memcpy(Record,&ApplyCheckpointRecord_Parms.Record,0x4);
}

struct Engine_RecalcLocalToWorld_Parms
{
};

void UcParticleDecalComponent::RecalcLocalToWorld()
{
	static UFieldFunc* pFnRecalcLocalToWorld = NULL;
	if(!pFnRecalcLocalToWorld)
		pFnRecalcLocalToWorld = UObject::FindFunction("Function Engine.cParticleDecalComponent.RecalcLocalToWorld");

	Engine_RecalcLocalToWorld_Parms RecalcLocalToWorld_Parms;
	pFnRecalcLocalToWorld->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRecalcLocalToWorld,NULL,&RecalcLocalToWorld_Parms,NULL);
	pFnRecalcLocalToWorld->FunctionFlags |= 0x400;
}

struct Engine_SetEnabled_Parms
{
	unsigned long                                      bSetEnabled : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void UHeightFogComponent::SetEnabled(bool bSetEnabled)
{
	static UFieldFunc* pFnSetEnabled = NULL;
	if(!pFnSetEnabled)
		pFnSetEnabled = UObject::FindFunction("Function Engine.HeightFogComponent.SetEnabled");

	Engine_SetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bSetEnabled = bSetEnabled;
	pFnSetEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnabled,NULL,&SetEnabled_Parms,NULL);
	pFnSetEnabled->FunctionFlags |= 0x400;
}

struct Engine_GetDirection_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 ULightComponent::GetDirection()
{
	static UFieldFunc* pFnGetDirection = NULL;
	if(!pFnGetDirection)
		pFnGetDirection = UObject::FindFunction("Function Engine.LightComponent.GetDirection");

	Engine_GetDirection_Parms GetDirection_Parms;
	pFnGetDirection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDirection,NULL,&GetDirection_Parms,NULL);
	pFnGetDirection->FunctionFlags |= 0x400;
	return GetDirection_Parms.ReturnValue;
}

struct Engine_SetEnabled_Parms
{
	unsigned long                                      bSetEnabled : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void ULightComponent::SetEnabled(bool bSetEnabled)
{
	static UFieldFunc* pFnSetEnabled = NULL;
	if(!pFnSetEnabled)
		pFnSetEnabled = UObject::FindFunction("Function Engine.LightComponent.SetEnabled");

	Engine_SetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bSetEnabled = bSetEnabled;
	pFnSetEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnabled,NULL,&SetEnabled_Parms,NULL);
	pFnSetEnabled->FunctionFlags |= 0x400;
}

struct Engine_SetLightProperties_Parms
{
	float                                              NewBrightness;                                    		// 0x000000 (0x0004)              
	DWORD                                              NewLightColor;                                    		// 0x000004 (0x0004)              
	class ULightFunction*                              NewLightFunction;                                 		// 0x000008 (0x0004)              
};

void ULightComponent::SetLightProperties(float NewBrightness,DWORD NewLightColor,class ULightFunction* NewLightFunction)
{
	static UFieldFunc* pFnSetLightProperties = NULL;
	if(!pFnSetLightProperties)
		pFnSetLightProperties = UObject::FindFunction("Function Engine.LightComponent.SetLightProperties");

	Engine_SetLightProperties_Parms SetLightProperties_Parms;
	SetLightProperties_Parms.NewBrightness = NewBrightness;
	memcpy(&SetLightProperties_Parms.NewLightColor,&NewLightColor,0x4);
	SetLightProperties_Parms.NewLightFunction = NewLightFunction;
	pFnSetLightProperties->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLightProperties,NULL,&SetLightProperties_Parms,NULL);
	pFnSetLightProperties->FunctionFlags |= 0x400;
}

struct Engine_GetOrigin_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 ULightComponent::GetOrigin()
{
	static UFieldFunc* pFnGetOrigin = NULL;
	if(!pFnGetOrigin)
		pFnGetOrigin = UObject::FindFunction("Function Engine.LightComponent.GetOrigin");

	Engine_GetOrigin_Parms GetOrigin_Parms;
	pFnGetOrigin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOrigin,NULL,&GetOrigin_Parms,NULL);
	pFnGetOrigin->FunctionFlags |= 0x400;
	return GetOrigin_Parms.ReturnValue;
}

struct Engine_OnUpdateProperty_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
};

void ULightComponent::OnUpdateProperty(struct FName PropertyName)
{
	static UFieldFunc* pFnOnUpdateProperty = NULL;
	if(!pFnOnUpdateProperty)
		pFnOnUpdateProperty = UObject::FindFunction("Function Engine.LightComponent.OnUpdateProperty");

	Engine_OnUpdateProperty_Parms OnUpdateProperty_Parms;
	memcpy(&OnUpdateProperty_Parms.PropertyName,&PropertyName,0x8);
	ProcessEvent(pFnOnUpdateProperty,NULL,&OnUpdateProperty_Parms,NULL);
}

struct Engine_UpdateColorAndBrightness_Parms
{
};

void ULightComponent::UpdateColorAndBrightness()
{
	static UFieldFunc* pFnUpdateColorAndBrightness = NULL;
	if(!pFnUpdateColorAndBrightness)
		pFnUpdateColorAndBrightness = UObject::FindFunction("Function Engine.LightComponent.UpdateColorAndBrightness");

	Engine_UpdateColorAndBrightness_Parms UpdateColorAndBrightness_Parms;
	pFnUpdateColorAndBrightness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateColorAndBrightness,NULL,&UpdateColorAndBrightness_Parms,NULL);
	pFnUpdateColorAndBrightness->FunctionFlags |= 0x400;
}

struct Engine_SetTranslation_Parms
{
	FVector3                                           NewTranslation;                                   		// 0x000000 (0x000C)              
};

void UPointLightComponent::SetTranslation(FVector3 NewTranslation)
{
	static UFieldFunc* pFnSetTranslation = NULL;
	if(!pFnSetTranslation)
		pFnSetTranslation = UObject::FindFunction("Function Engine.PointLightComponent.SetTranslation");

	Engine_SetTranslation_Parms SetTranslation_Parms;
	memcpy(&SetTranslation_Parms.NewTranslation,&NewTranslation,0xC);
	pFnSetTranslation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTranslation,NULL,&SetTranslation_Parms,NULL);
	pFnSetTranslation->FunctionFlags |= 0x400;
}

struct Engine_SetClothCollisionResponseCoefficient_Parms
{
	float                                              ClothCollisionResponseCoefficient;                		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothCollisionResponseCoefficient(float ClothCollisionResponseCoefficient)
{
	static UFieldFunc* pFnSetClothCollisionResponseCoefficient = NULL;
	if(!pFnSetClothCollisionResponseCoefficient)
		pFnSetClothCollisionResponseCoefficient = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothCollisionResponseCoefficient");

	Engine_SetClothCollisionResponseCoefficient_Parms SetClothCollisionResponseCoefficient_Parms;
	SetClothCollisionResponseCoefficient_Parms.ClothCollisionResponseCoefficient = ClothCollisionResponseCoefficient;
	pFnSetClothCollisionResponseCoefficient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothCollisionResponseCoefficient,NULL,&SetClothCollisionResponseCoefficient_Parms,NULL);
	pFnSetClothCollisionResponseCoefficient->FunctionFlags |= 0x400;
}

struct Engine_AddInstanceVertexWeightBoneParented_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
};

void USkeletalMeshComponent::AddInstanceVertexWeightBoneParented(struct FName BoneName)
{
	static UFieldFunc* pFnAddInstanceVertexWeightBoneParented = NULL;
	if(!pFnAddInstanceVertexWeightBoneParented)
		pFnAddInstanceVertexWeightBoneParented = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AddInstanceVertexWeightBoneParented");

	Engine_AddInstanceVertexWeightBoneParented_Parms AddInstanceVertexWeightBoneParented_Parms;
	memcpy(&AddInstanceVertexWeightBoneParented_Parms.BoneName,&BoneName,0x8);
	pFnAddInstanceVertexWeightBoneParented->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddInstanceVertexWeightBoneParented,NULL,&AddInstanceVertexWeightBoneParented_Parms,NULL);
	pFnAddInstanceVertexWeightBoneParented->FunctionFlags |= 0x400;
}

struct Engine_SetClothAttachmentResponseCoefficient_Parms
{
	float                                              ClothAttachmentResponseCoefficient;               		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothAttachmentResponseCoefficient(float ClothAttachmentResponseCoefficient)
{
	static UFieldFunc* pFnSetClothAttachmentResponseCoefficient = NULL;
	if(!pFnSetClothAttachmentResponseCoefficient)
		pFnSetClothAttachmentResponseCoefficient = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothAttachmentResponseCoefficient");

	Engine_SetClothAttachmentResponseCoefficient_Parms SetClothAttachmentResponseCoefficient_Parms;
	SetClothAttachmentResponseCoefficient_Parms.ClothAttachmentResponseCoefficient = ClothAttachmentResponseCoefficient;
	pFnSetClothAttachmentResponseCoefficient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothAttachmentResponseCoefficient,NULL,&SetClothAttachmentResponseCoefficient_Parms,NULL);
	pFnSetClothAttachmentResponseCoefficient->FunctionFlags |= 0x400;
}

struct Engine_GetClothPressure_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothPressure()
{
	static UFieldFunc* pFnGetClothPressure = NULL;
	if(!pFnGetClothPressure)
		pFnGetClothPressure = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothPressure");

	Engine_GetClothPressure_Parms GetClothPressure_Parms;
	pFnGetClothPressure->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothPressure,NULL,&GetClothPressure_Parms,NULL);
	pFnGetClothPressure->FunctionFlags |= 0x400;
	return GetClothPressure_Parms.ReturnValue;
}

struct Engine_SetClothBendingStiffness_Parms
{
	float                                              ClothBendingStiffness;                            		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothBendingStiffness(float ClothBendingStiffness)
{
	static UFieldFunc* pFnSetClothBendingStiffness = NULL;
	if(!pFnSetClothBendingStiffness)
		pFnSetClothBendingStiffness = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothBendingStiffness");

	Engine_SetClothBendingStiffness_Parms SetClothBendingStiffness_Parms;
	SetClothBendingStiffness_Parms.ClothBendingStiffness = ClothBendingStiffness;
	pFnSetClothBendingStiffness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothBendingStiffness,NULL,&SetClothBendingStiffness_Parms,NULL);
	pFnSetClothBendingStiffness->FunctionFlags |= 0x400;
}

struct Engine_SetClothPressure_Parms
{
	float                                              ClothPressure;                                    		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothPressure(float ClothPressure)
{
	static UFieldFunc* pFnSetClothPressure = NULL;
	if(!pFnSetClothPressure)
		pFnSetClothPressure = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothPressure");

	Engine_SetClothPressure_Parms SetClothPressure_Parms;
	SetClothPressure_Parms.ClothPressure = ClothPressure;
	pFnSetClothPressure->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothPressure,NULL,&SetClothPressure_Parms,NULL);
	pFnSetClothPressure->FunctionFlags |= 0x400;
}

struct Engine_GetBoneName_Parms
{
	int                                                BoneIndex;                                        		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName USkeletalMeshComponent::GetBoneName(int BoneIndex)
{
	static UFieldFunc* pFnGetBoneName = NULL;
	if(!pFnGetBoneName)
		pFnGetBoneName = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBoneName");

	Engine_GetBoneName_Parms GetBoneName_Parms;
	GetBoneName_Parms.BoneIndex = BoneIndex;
	pFnGetBoneName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoneName,NULL,&GetBoneName_Parms,NULL);
	pFnGetBoneName->FunctionFlags |= 0x400;
	return GetBoneName_Parms.ReturnValue;
}

struct Engine_AttachComponentToSocket_Parms
{
	class UActorComponent*                             Component;                                        		// 0x000000 (0x0004)              
	struct FName                                       SocketName;                                       		// 0x000004 (0x0008)              
};

void USkeletalMeshComponent::AttachComponentToSocket(class UActorComponent* Component,struct FName SocketName)
{
	static UFieldFunc* pFnAttachComponentToSocket = NULL;
	if(!pFnAttachComponentToSocket)
		pFnAttachComponentToSocket = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AttachComponentToSocket");

	Engine_AttachComponentToSocket_Parms AttachComponentToSocket_Parms;
	AttachComponentToSocket_Parms.Component = Component;
	memcpy(&AttachComponentToSocket_Parms.SocketName,&SocketName,0x8);
	pFnAttachComponentToSocket->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAttachComponentToSocket,NULL,&AttachComponentToSocket_Parms,NULL);
	pFnAttachComponentToSocket->FunctionFlags |= 0x400;
}

struct Engine_GetAnimRateByDuration_Parms
{
	struct FName                                       AnimSeqName;                                      		// 0x000000 (0x0008)              
	float                                              Duration;                                         		// 0x000008 (0x0004)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
	//class UAnimSequence*                               AnimSeq;                                          		// 0x000010 (0x0004)              
};

float USkeletalMeshComponent::GetAnimRateByDuration(struct FName AnimSeqName,float Duration)
{
	static UFieldFunc* pFnGetAnimRateByDuration = NULL;
	if(!pFnGetAnimRateByDuration)
		pFnGetAnimRateByDuration = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetAnimRateByDuration");

	Engine_GetAnimRateByDuration_Parms GetAnimRateByDuration_Parms;
	memcpy(&GetAnimRateByDuration_Parms.AnimSeqName,&AnimSeqName,0x8);
	GetAnimRateByDuration_Parms.Duration = Duration;
	ProcessEvent(pFnGetAnimRateByDuration,NULL,&GetAnimRateByDuration_Parms,NULL);
	return GetAnimRateByDuration_Parms.ReturnValue;
}

struct Engine_GetParentBone_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	struct FName                                       ReturnValue;                                      		// 0x000008 (0x0008)              
};

struct FName USkeletalMeshComponent::GetParentBone(struct FName BoneName)
{
	static UFieldFunc* pFnGetParentBone = NULL;
	if(!pFnGetParentBone)
		pFnGetParentBone = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetParentBone");

	Engine_GetParentBone_Parms GetParentBone_Parms;
	memcpy(&GetParentBone_Parms.BoneName,&BoneName,0x8);
	pFnGetParentBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetParentBone,NULL,&GetParentBone_Parms,NULL);
	pFnGetParentBone->FunctionFlags |= 0x400;
	return GetParentBone_Parms.ReturnValue;
}

struct Engine_AttachComponent_Parms
{
	class UActorComponent*                             Component;                                        		// 0x000000 (0x0004)              
	struct FName                                       BoneName;                                         		// 0x000004 (0x0008)              
	FVector3                                           RelativeLocation;                                 		// 0x00000C (0x000C)              
	FRotator                                           RelativeRotation;                                 		// 0x000018 (0x000C)              
	FVector3                                           RelativeScale;                                    		// 0x000024 (0x000C)              
};

void USkeletalMeshComponent::AttachComponent(class UActorComponent* Component,struct FName BoneName,FVector3 RelativeLocation,FRotator RelativeRotation,FVector3 RelativeScale)
{
	static UFieldFunc* pFnAttachComponent = NULL;
	if(!pFnAttachComponent)
		pFnAttachComponent = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AttachComponent");

	Engine_AttachComponent_Parms AttachComponent_Parms;
	AttachComponent_Parms.Component = Component;
	memcpy(&AttachComponent_Parms.BoneName,&BoneName,0x8);
	memcpy(&AttachComponent_Parms.RelativeLocation,&RelativeLocation,0xC);
	memcpy(&AttachComponent_Parms.RelativeRotation,&RelativeRotation,0xC);
	memcpy(&AttachComponent_Parms.RelativeScale,&RelativeScale,0xC);
	pFnAttachComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAttachComponent,NULL,&AttachComponent_Parms,NULL);
	pFnAttachComponent->FunctionFlags |= 0x400;
}

struct Engine_SetClothFriction_Parms
{
	float                                              ClothFriction;                                    		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothFriction(float ClothFriction)
{
	static UFieldFunc* pFnSetClothFriction = NULL;
	if(!pFnSetClothFriction)
		pFnSetClothFriction = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothFriction");

	Engine_SetClothFriction_Parms SetClothFriction_Parms;
	SetClothFriction_Parms.ClothFriction = ClothFriction;
	pFnSetClothFriction->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothFriction,NULL,&SetClothFriction_Parms,NULL);
	pFnSetClothFriction->FunctionFlags |= 0x400;
}

struct Engine_SetClothExternalForce_Parms
{
	FVector3                                           InForce;                                          		// 0x000000 (0x000C)              
};

void USkeletalMeshComponent::SetClothExternalForce(FVector3 InForce)
{
	static UFieldFunc* pFnSetClothExternalForce = NULL;
	if(!pFnSetClothExternalForce)
		pFnSetClothExternalForce = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothExternalForce");

	Engine_SetClothExternalForce_Parms SetClothExternalForce_Parms;
	memcpy(&SetClothExternalForce_Parms.InForce,&InForce,0xC);
	pFnSetClothExternalForce->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothExternalForce,NULL,&SetClothExternalForce_Parms,NULL);
	pFnSetClothExternalForce->FunctionFlags |= 0x400;
}

struct Engine_FindClosestBone_Parms
{
	FVector3                                           TestLocation;                                     		// 0x000000 (0x000C)              
	FVector3                                           BoneLocation;                                     		// 0x00000C (0x000C)              
	float                                              IgnoreScale;                                      		// 0x000018 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x00001C (0x0008)              
};

struct FName USkeletalMeshComponent::FindClosestBone(FVector3 TestLocation,FVector3* BoneLocation,float IgnoreScale)
{
	static UFieldFunc* pFnFindClosestBone = NULL;
	if(!pFnFindClosestBone)
		pFnFindClosestBone = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindClosestBone");

	Engine_FindClosestBone_Parms FindClosestBone_Parms;
	memcpy(&FindClosestBone_Parms.TestLocation,&TestLocation,0xC);
	FindClosestBone_Parms.IgnoreScale = IgnoreScale;
	pFnFindClosestBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindClosestBone,NULL,&FindClosestBone_Parms,NULL);
	pFnFindClosestBone->FunctionFlags |= 0x400;
	if(BoneLocation)
		memcpy(BoneLocation,&FindClosestBone_Parms.BoneLocation,0xC);
	return FindClosestBone_Parms.ReturnValue;
}

struct Engine_FindMorphNode_Parms
{
	struct FName                                       InNodeName;                                       		// 0x000000 (0x0008)              
	class UMorphNodeBase*                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UMorphNodeBase* USkeletalMeshComponent::FindMorphNode(struct FName InNodeName)
{
	static UFieldFunc* pFnFindMorphNode = NULL;
	if(!pFnFindMorphNode)
		pFnFindMorphNode = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindMorphNode");

	Engine_FindMorphNode_Parms FindMorphNode_Parms;
	memcpy(&FindMorphNode_Parms.InNodeName,&InNodeName,0x8);
	pFnFindMorphNode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindMorphNode,NULL,&FindMorphNode_Parms,NULL);
	pFnFindMorphNode->FunctionFlags |= 0x400;
	return FindMorphNode_Parms.ReturnValue;
}

struct Engine_StopAnim_Parms
{
	//class UAnimNodeSequence*                           AnimNode;                                         		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::StopAnim()
{
	static UFieldFunc* pFnStopAnim = NULL;
	if(!pFnStopAnim)
		pFnStopAnim = UObject::FindFunction("Function Engine.SkeletalMeshComponent.StopAnim");

	Engine_StopAnim_Parms StopAnim_Parms;
	ProcessEvent(pFnStopAnim,NULL,&StopAnim_Parms,NULL);
}

struct Engine_SetPhysicsAsset_Parms
{
	class UPhysicsAsset*                               NewPhysicsAsset;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bForceReInit : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetPhysicsAsset(class UPhysicsAsset* NewPhysicsAsset,bool bForceReInit)
{
	static UFieldFunc* pFnSetPhysicsAsset = NULL;
	if(!pFnSetPhysicsAsset)
		pFnSetPhysicsAsset = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetPhysicsAsset");

	Engine_SetPhysicsAsset_Parms SetPhysicsAsset_Parms;
	SetPhysicsAsset_Parms.NewPhysicsAsset = NewPhysicsAsset;
	SetPhysicsAsset_Parms.bForceReInit = bForceReInit;
	pFnSetPhysicsAsset->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPhysicsAsset,NULL,&SetPhysicsAsset_Parms,NULL);
	pFnSetPhysicsAsset->FunctionFlags |= 0x400;
}

struct Engine_RemoveLogicalAnimation_Parms
{
	class UAnimNode*                                   Animation;                                        		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::RemoveLogicalAnimation(class UAnimNode* Animation)
{
	static UFieldFunc* pFnRemoveLogicalAnimation = NULL;
	if(!pFnRemoveLogicalAnimation)
		pFnRemoveLogicalAnimation = UObject::FindFunction("Function Engine.SkeletalMeshComponent.RemoveLogicalAnimation");

	Engine_RemoveLogicalAnimation_Parms RemoveLogicalAnimation_Parms;
	RemoveLogicalAnimation_Parms.Animation = Animation;
	pFnRemoveLogicalAnimation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveLogicalAnimation,NULL,&RemoveLogicalAnimation_Parms,NULL);
	pFnRemoveLogicalAnimation->FunctionFlags |= 0x400;
}

struct Engine_ResetClothVertsToRefPose_Parms
{
};

void USkeletalMeshComponent::ResetClothVertsToRefPose()
{
	static UFieldFunc* pFnResetClothVertsToRefPose = NULL;
	if(!pFnResetClothVertsToRefPose)
		pFnResetClothVertsToRefPose = UObject::FindFunction("Function Engine.SkeletalMeshComponent.ResetClothVertsToRefPose");

	Engine_ResetClothVertsToRefPose_Parms ResetClothVertsToRefPose_Parms;
	pFnResetClothVertsToRefPose->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetClothVertsToRefPose,NULL,&ResetClothVertsToRefPose_Parms,NULL);
	pFnResetClothVertsToRefPose->FunctionFlags |= 0x400;
}

struct Engine_GetBoneMatrix_Parms
{
	int                                                BoneIndex;                                        		// 0x000000 (0x0004)              
	unsigned char                                      _0x000004[0xC];                                   		// 0x000004 (0x000C) MISSED OFFSET
	FMatrix                                            ReturnValue;                                      		// 0x000010 (0x0040)              
};

FMatrix USkeletalMeshComponent::GetBoneMatrix(int BoneIndex)
{
	static UFieldFunc* pFnGetBoneMatrix = NULL;
	if(!pFnGetBoneMatrix)
		pFnGetBoneMatrix = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBoneMatrix");

	Engine_GetBoneMatrix_Parms GetBoneMatrix_Parms;
	GetBoneMatrix_Parms.BoneIndex = BoneIndex;
	pFnGetBoneMatrix->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoneMatrix,NULL,&GetBoneMatrix_Parms,NULL);
	pFnGetBoneMatrix->FunctionFlags |= 0x400;
	return GetBoneMatrix_Parms.ReturnValue;
}

struct Engine_SetClothThickness_Parms
{
	float                                              ClothThickness;                                   		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothThickness(float ClothThickness)
{
	static UFieldFunc* pFnSetClothThickness = NULL;
	if(!pFnSetClothThickness)
		pFnSetClothThickness = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothThickness");

	Engine_SetClothThickness_Parms SetClothThickness_Parms;
	SetClothThickness_Parms.ClothThickness = ClothThickness;
	pFnSetClothThickness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothThickness,NULL,&SetClothThickness_Parms,NULL);
	pFnSetClothThickness->FunctionFlags |= 0x400;
}

struct Engine_UpdateParentBoneMap_Parms
{
};

void USkeletalMeshComponent::UpdateParentBoneMap()
{
	static UFieldFunc* pFnUpdateParentBoneMap = NULL;
	if(!pFnUpdateParentBoneMap)
		pFnUpdateParentBoneMap = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UpdateParentBoneMap");

	Engine_UpdateParentBoneMap_Parms UpdateParentBoneMap_Parms;
	pFnUpdateParentBoneMap->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateParentBoneMap,NULL,&UpdateParentBoneMap_Parms,NULL);
	pFnUpdateParentBoneMap->FunctionFlags |= 0x400;
}

struct Engine_EnableClothValidBounds_Parms
{
	unsigned long                                      IfEnableClothValidBounds : 1;                     		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::EnableClothValidBounds(bool IfEnableClothValidBounds)
{
	static UFieldFunc* pFnEnableClothValidBounds = NULL;
	if(!pFnEnableClothValidBounds)
		pFnEnableClothValidBounds = UObject::FindFunction("Function Engine.SkeletalMeshComponent.EnableClothValidBounds");

	Engine_EnableClothValidBounds_Parms EnableClothValidBounds_Parms;
	EnableClothValidBounds_Parms.IfEnableClothValidBounds = IfEnableClothValidBounds;
	pFnEnableClothValidBounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableClothValidBounds,NULL,&EnableClothValidBounds_Parms,NULL);
	pFnEnableClothValidBounds->FunctionFlags |= 0x400;
}

struct Engine_SetParentAnimComponent_Parms
{
	class USkeletalMeshComponent*                      NewParentAnimComp;                                		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetParentAnimComponent(class USkeletalMeshComponent* NewParentAnimComp)
{
	static UFieldFunc* pFnSetParentAnimComponent = NULL;
	if(!pFnSetParentAnimComponent)
		pFnSetParentAnimComponent = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetParentAnimComponent");

	Engine_SetParentAnimComponent_Parms SetParentAnimComponent_Parms;
	SetParentAnimComponent_Parms.NewParentAnimComp = NewParentAnimComp;
	pFnSetParentAnimComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetParentAnimComponent,NULL,&SetParentAnimComponent_Parms,NULL);
	pFnSetParentAnimComponent->FunctionFlags |= 0x400;
}

struct Engine_SetClothDampingCoefficient_Parms
{
	float                                              ClothDampingCoefficient;                          		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothDampingCoefficient(float ClothDampingCoefficient)
{
	static UFieldFunc* pFnSetClothDampingCoefficient = NULL;
	if(!pFnSetClothDampingCoefficient)
		pFnSetClothDampingCoefficient = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothDampingCoefficient");

	Engine_SetClothDampingCoefficient_Parms SetClothDampingCoefficient_Parms;
	SetClothDampingCoefficient_Parms.ClothDampingCoefficient = ClothDampingCoefficient;
	pFnSetClothDampingCoefficient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothDampingCoefficient,NULL,&SetClothDampingCoefficient_Parms,NULL);
	pFnSetClothDampingCoefficient->FunctionFlags |= 0x400;
}

struct Engine_SetClothFlags_Parms
{
	int                                                ClothFlags;                                       		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothFlags(int ClothFlags)
{
	static UFieldFunc* pFnSetClothFlags = NULL;
	if(!pFnSetClothFlags)
		pFnSetClothFlags = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothFlags");

	Engine_SetClothFlags_Parms SetClothFlags_Parms;
	SetClothFlags_Parms.ClothFlags = ClothFlags;
	pFnSetClothFlags->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothFlags,NULL,&SetClothFlags_Parms,NULL);
	pFnSetClothFlags->FunctionFlags |= 0x400;
}

struct Engine_SetClothVelocity_Parms
{
	FVector3                                           VelocityOffSet;                                   		// 0x000000 (0x000C)              
};

void USkeletalMeshComponent::SetClothVelocity(FVector3 VelocityOffSet)
{
	static UFieldFunc* pFnSetClothVelocity = NULL;
	if(!pFnSetClothVelocity)
		pFnSetClothVelocity = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothVelocity");

	Engine_SetClothVelocity_Parms SetClothVelocity_Parms;
	memcpy(&SetClothVelocity_Parms.VelocityOffSet,&VelocityOffSet,0xC);
	pFnSetClothVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothVelocity,NULL,&SetClothVelocity_Parms,NULL);
	pFnSetClothVelocity->FunctionFlags |= 0x400;
}

struct Engine_SetClothSleep_Parms
{
	unsigned long                                      IfClothSleep : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetClothSleep(bool IfClothSleep)
{
	static UFieldFunc* pFnSetClothSleep = NULL;
	if(!pFnSetClothSleep)
		pFnSetClothSleep = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothSleep");

	Engine_SetClothSleep_Parms SetClothSleep_Parms;
	SetClothSleep_Parms.IfClothSleep = IfClothSleep;
	pFnSetClothSleep->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothSleep,NULL,&SetClothSleep_Parms,NULL);
	pFnSetClothSleep->FunctionFlags |= 0x400;
}

struct Engine_DetachComponent_Parms
{
	class UActorComponent*                             Component;                                        		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::DetachComponent(class UActorComponent* Component)
{
	static UFieldFunc* pFnDetachComponent = NULL;
	if(!pFnDetachComponent)
		pFnDetachComponent = UObject::FindFunction("Function Engine.SkeletalMeshComponent.DetachComponent");

	Engine_DetachComponent_Parms DetachComponent_Parms;
	DetachComponent_Parms.Component = Component;
	pFnDetachComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDetachComponent,NULL,&DetachComponent_Parms,NULL);
	pFnDetachComponent->FunctionFlags |= 0x400;
}

struct Engine_SetSkeletalMesh_Parms
{
	class USkeletalMesh*                               NewMesh;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bKeepSpaceBases : 1;                              		// 0x000004 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetSkeletalMesh(class USkeletalMesh* NewMesh,bool bKeepSpaceBases)
{
	static UFieldFunc* pFnSetSkeletalMesh = NULL;
	if(!pFnSetSkeletalMesh)
		pFnSetSkeletalMesh = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetSkeletalMesh");

	Engine_SetSkeletalMesh_Parms SetSkeletalMesh_Parms;
	SetSkeletalMesh_Parms.NewMesh = NewMesh;
	SetSkeletalMesh_Parms.bKeepSpaceBases = bKeepSpaceBases;
	pFnSetSkeletalMesh->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSkeletalMesh,NULL,&SetSkeletalMesh_Parms,NULL);
	pFnSetSkeletalMesh->FunctionFlags |= 0x400;
}

struct Engine_UpdateSoftBodyParams_Parms
{
};

void USkeletalMeshComponent::UpdateSoftBodyParams()
{
	static UFieldFunc* pFnUpdateSoftBodyParams = NULL;
	if(!pFnUpdateSoftBodyParams)
		pFnUpdateSoftBodyParams = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UpdateSoftBodyParams");

	Engine_UpdateSoftBodyParams_Parms UpdateSoftBodyParams_Parms;
	pFnUpdateSoftBodyParams->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateSoftBodyParams,NULL,&UpdateSoftBodyParams_Parms,NULL);
	pFnUpdateSoftBodyParams->FunctionFlags |= 0x400;
}

struct Engine_SetClothStretchingStiffness_Parms
{
	float                                              ClothStretchingStiffness;                         		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothStretchingStiffness(float ClothStretchingStiffness)
{
	static UFieldFunc* pFnSetClothStretchingStiffness = NULL;
	if(!pFnSetClothStretchingStiffness)
		pFnSetClothStretchingStiffness = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothStretchingStiffness");

	Engine_SetClothStretchingStiffness_Parms SetClothStretchingStiffness_Parms;
	SetClothStretchingStiffness_Parms.ClothStretchingStiffness = ClothStretchingStiffness;
	pFnSetClothStretchingStiffness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothStretchingStiffness,NULL,&SetClothStretchingStiffness_Parms,NULL);
	pFnSetClothStretchingStiffness->FunctionFlags |= 0x400;
}

struct Engine_SetClothSolverIterations_Parms
{
	int                                                ClothSolverIterations;                            		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothSolverIterations(int ClothSolverIterations)
{
	static UFieldFunc* pFnSetClothSolverIterations = NULL;
	if(!pFnSetClothSolverIterations)
		pFnSetClothSolverIterations = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothSolverIterations");

	Engine_SetClothSolverIterations_Parms SetClothSolverIterations_Parms;
	SetClothSolverIterations_Parms.ClothSolverIterations = ClothSolverIterations;
	pFnSetClothSolverIterations->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothSolverIterations,NULL,&SetClothSolverIterations_Parms,NULL);
	pFnSetClothSolverIterations->FunctionFlags |= 0x400;
}

struct Engine_GetClothThickness_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothThickness()
{
	static UFieldFunc* pFnGetClothThickness = NULL;
	if(!pFnGetClothThickness)
		pFnGetClothThickness = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothThickness");

	Engine_GetClothThickness_Parms GetClothThickness_Parms;
	pFnGetClothThickness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothThickness,NULL,&GetClothThickness_Parms,NULL);
	pFnGetClothThickness->FunctionFlags |= 0x400;
	return GetClothThickness_Parms.ReturnValue;
}

struct Engine_GetBoneQuaternion_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	int                                                Space;                                            		// 0x000008 (0x0004)              
	unsigned char                                      _0x00000C[0x4];                                   		// 0x00000C (0x0004) MISSED OFFSET
	struct FQuat                                       ReturnValue;                                      		// 0x000010 (0x0010)              
};

struct FQuat USkeletalMeshComponent::GetBoneQuaternion(struct FName BoneName,int Space)
{
	static UFieldFunc* pFnGetBoneQuaternion = NULL;
	if(!pFnGetBoneQuaternion)
		pFnGetBoneQuaternion = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBoneQuaternion");

	Engine_GetBoneQuaternion_Parms GetBoneQuaternion_Parms;
	memcpy(&GetBoneQuaternion_Parms.BoneName,&BoneName,0x8);
	GetBoneQuaternion_Parms.Space = Space;
	pFnGetBoneQuaternion->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoneQuaternion,NULL,&GetBoneQuaternion_Parms,NULL);
	pFnGetBoneQuaternion->FunctionFlags |= 0x400;
	return GetBoneQuaternion_Parms.ReturnValue;
}

struct Engine_UpdateAnimations_Parms
{
};

void USkeletalMeshComponent::UpdateAnimations()
{
	static UFieldFunc* pFnUpdateAnimations = NULL;
	if(!pFnUpdateAnimations)
		pFnUpdateAnimations = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UpdateAnimations");

	Engine_UpdateAnimations_Parms UpdateAnimations_Parms;
	pFnUpdateAnimations->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateAnimations,NULL,&UpdateAnimations_Parms,NULL);
	pFnUpdateAnimations->FunctionFlags |= 0x400;
}

struct Engine_FindMorphTarget_Parms
{
	struct FName                                       MorphTargetName;                                  		// 0x000000 (0x0008)              
	class UMorphTarget*                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UMorphTarget* USkeletalMeshComponent::FindMorphTarget(struct FName MorphTargetName)
{
	static UFieldFunc* pFnFindMorphTarget = NULL;
	if(!pFnFindMorphTarget)
		pFnFindMorphTarget = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindMorphTarget");

	Engine_FindMorphTarget_Parms FindMorphTarget_Parms;
	memcpy(&FindMorphTarget_Parms.MorphTargetName,&MorphTargetName,0x8);
	pFnFindMorphTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindMorphTarget,NULL,&FindMorphTarget_Parms,NULL);
	pFnFindMorphTarget->FunctionFlags |= 0x400;
	return FindMorphTarget_Parms.ReturnValue;
}

struct Engine_PlayAnim_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	float                                              Duration;                                         		// 0x000008 (0x0004)              
	unsigned long                                      bLoop : 1;                                        		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bRestartIfAlreadyPlaying : 1;                     		// 0x000010 (0x0004) [0x00000001] 
	//class UAnimNodeSequence*                           AnimNode;                                         		// 0x000014 (0x0004)              
	//float                                              DesiredRate;                                      		// 0x000018 (0x0004)              
};

void USkeletalMeshComponent::PlayAnim(struct FName AnimName,float Duration,bool bLoop,bool bRestartIfAlreadyPlaying)
{
	static UFieldFunc* pFnPlayAnim = NULL;
	if(!pFnPlayAnim)
		pFnPlayAnim = UObject::FindFunction("Function Engine.SkeletalMeshComponent.PlayAnim");

	Engine_PlayAnim_Parms PlayAnim_Parms;
	memcpy(&PlayAnim_Parms.AnimName,&AnimName,0x8);
	PlayAnim_Parms.Duration = Duration;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.bRestartIfAlreadyPlaying = bRestartIfAlreadyPlaying;
	ProcessEvent(pFnPlayAnim,NULL,&PlayAnim_Parms,NULL);
}

struct Engine_GetAnimLength_Parms
{
	struct FName                                       AnimSeqName;                                      		// 0x000000 (0x0008)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
	//class UAnimSequence*                               AnimSeq;                                          		// 0x00000C (0x0004)              
};

float USkeletalMeshComponent::GetAnimLength(struct FName AnimSeqName)
{
	static UFieldFunc* pFnGetAnimLength = NULL;
	if(!pFnGetAnimLength)
		pFnGetAnimLength = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetAnimLength");

	Engine_GetAnimLength_Parms GetAnimLength_Parms;
	memcpy(&GetAnimLength_Parms.AnimSeqName,&AnimSeqName,0x8);
	ProcessEvent(pFnGetAnimLength,NULL,&GetAnimLength_Parms,NULL);
	return GetAnimLength_Parms.ReturnValue;
}

struct Engine_AttachClothToCollidingShapes_Parms
{
	unsigned long                                      AttatchTwoWay : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      AttachTearable : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::AttachClothToCollidingShapes(bool AttatchTwoWay,bool AttachTearable)
{
	static UFieldFunc* pFnAttachClothToCollidingShapes = NULL;
	if(!pFnAttachClothToCollidingShapes)
		pFnAttachClothToCollidingShapes = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AttachClothToCollidingShapes");

	Engine_AttachClothToCollidingShapes_Parms AttachClothToCollidingShapes_Parms;
	AttachClothToCollidingShapes_Parms.AttatchTwoWay = AttatchTwoWay;
	AttachClothToCollidingShapes_Parms.AttachTearable = AttachTearable;
	pFnAttachClothToCollidingShapes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAttachClothToCollidingShapes,NULL,&AttachClothToCollidingShapes_Parms,NULL);
	pFnAttachClothToCollidingShapes->FunctionFlags |= 0x400;
}

struct Engine_ToggleInstanceVertexWeights_Parms
{
	unsigned long                                      bEnable : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::ToggleInstanceVertexWeights(bool bEnable)
{
	static UFieldFunc* pFnToggleInstanceVertexWeights = NULL;
	if(!pFnToggleInstanceVertexWeights)
		pFnToggleInstanceVertexWeights = UObject::FindFunction("Function Engine.SkeletalMeshComponent.ToggleInstanceVertexWeights");

	Engine_ToggleInstanceVertexWeights_Parms ToggleInstanceVertexWeights_Parms;
	ToggleInstanceVertexWeights_Parms.bEnable = bEnable;
	pFnToggleInstanceVertexWeights->FunctionFlags |= ~0x400;
	ProcessEvent(pFnToggleInstanceVertexWeights,NULL,&ToggleInstanceVertexWeights_Parms,NULL);
	pFnToggleInstanceVertexWeights->FunctionFlags |= 0x400;
}

struct Engine_GetClothSleepLinearVelocity_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothSleepLinearVelocity()
{
	static UFieldFunc* pFnGetClothSleepLinearVelocity = NULL;
	if(!pFnGetClothSleepLinearVelocity)
		pFnGetClothSleepLinearVelocity = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothSleepLinearVelocity");

	Engine_GetClothSleepLinearVelocity_Parms GetClothSleepLinearVelocity_Parms;
	pFnGetClothSleepLinearVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothSleepLinearVelocity,NULL,&GetClothSleepLinearVelocity_Parms,NULL);
	pFnGetClothSleepLinearVelocity->FunctionFlags |= 0x400;
	return GetClothSleepLinearVelocity_Parms.ReturnValue;
}

struct Engine_FindBodyInstanceNamed_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	class URB_BodyInstance*                            ReturnValue;                                      		// 0x000008 (0x0004)              
};

class URB_BodyInstance* USkeletalMeshComponent::FindBodyInstanceNamed(struct FName BoneName)
{
	static UFieldFunc* pFnFindBodyInstanceNamed = NULL;
	if(!pFnFindBodyInstanceNamed)
		pFnFindBodyInstanceNamed = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindBodyInstanceNamed");

	Engine_FindBodyInstanceNamed_Parms FindBodyInstanceNamed_Parms;
	memcpy(&FindBodyInstanceNamed_Parms.BoneName,&BoneName,0x8);
	pFnFindBodyInstanceNamed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindBodyInstanceNamed,NULL,&FindBodyInstanceNamed_Parms,NULL);
	pFnFindBodyInstanceNamed->FunctionFlags |= 0x400;
	return FindBodyInstanceNamed_Parms.ReturnValue;
}

struct Engine_SetEnableClothSimulation_Parms
{
	unsigned long                                      bInEnable : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetEnableClothSimulation(bool bInEnable)
{
	static UFieldFunc* pFnSetEnableClothSimulation = NULL;
	if(!pFnSetEnableClothSimulation)
		pFnSetEnableClothSimulation = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetEnableClothSimulation");

	Engine_SetEnableClothSimulation_Parms SetEnableClothSimulation_Parms;
	SetEnableClothSimulation_Parms.bInEnable = bInEnable;
	pFnSetEnableClothSimulation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnableClothSimulation,NULL,&SetEnableClothSimulation_Parms,NULL);
	pFnSetEnableClothSimulation->FunctionFlags |= 0x400;
}

struct Engine_TransformFromBoneSpace_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	FVector3                                           InPosition;                                       		// 0x000008 (0x000C)              
	FRotator                                           InRotation;                                       		// 0x000014 (0x000C)              
	FVector3                                           OutPosition;                                      		// 0x000020 (0x000C)              
	FRotator                                           OutRotation;                                      		// 0x00002C (0x000C)              
};

void USkeletalMeshComponent::TransformFromBoneSpace(struct FName BoneName,FVector3 InPosition,FRotator InRotation,FVector3* OutPosition,FRotator* OutRotation)
{
	static UFieldFunc* pFnTransformFromBoneSpace = NULL;
	if(!pFnTransformFromBoneSpace)
		pFnTransformFromBoneSpace = UObject::FindFunction("Function Engine.SkeletalMeshComponent.TransformFromBoneSpace");

	Engine_TransformFromBoneSpace_Parms TransformFromBoneSpace_Parms;
	memcpy(&TransformFromBoneSpace_Parms.BoneName,&BoneName,0x8);
	memcpy(&TransformFromBoneSpace_Parms.InPosition,&InPosition,0xC);
	memcpy(&TransformFromBoneSpace_Parms.InRotation,&InRotation,0xC);
	pFnTransformFromBoneSpace->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTransformFromBoneSpace,NULL,&TransformFromBoneSpace_Parms,NULL);
	pFnTransformFromBoneSpace->FunctionFlags |= 0x400;
	if(OutPosition)
		memcpy(OutPosition,&TransformFromBoneSpace_Parms.OutPosition,0xC);
	if(OutRotation)
		memcpy(OutRotation,&TransformFromBoneSpace_Parms.OutRotation,0xC);
}

struct Engine_SetClothTearFactor_Parms
{
	float                                              ClothTearFactor;                                  		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothTearFactor(float ClothTearFactor)
{
	static UFieldFunc* pFnSetClothTearFactor = NULL;
	if(!pFnSetClothTearFactor)
		pFnSetClothTearFactor = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothTearFactor");

	Engine_SetClothTearFactor_Parms SetClothTearFactor_Parms;
	SetClothTearFactor_Parms.ClothTearFactor = ClothTearFactor;
	pFnSetClothTearFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothTearFactor,NULL,&SetClothTearFactor_Parms,NULL);
	pFnSetClothTearFactor->FunctionFlags |= 0x400;
}

struct Engine_SetClothFrozen_Parms
{
	unsigned long                                      bNewFrozen : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetClothFrozen(bool bNewFrozen)
{
	static UFieldFunc* pFnSetClothFrozen = NULL;
	if(!pFnSetClothFrozen)
		pFnSetClothFrozen = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothFrozen");

	Engine_SetClothFrozen_Parms SetClothFrozen_Parms;
	SetClothFrozen_Parms.bNewFrozen = bNewFrozen;
	pFnSetClothFrozen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothFrozen,NULL,&SetClothFrozen_Parms,NULL);
	pFnSetClothFrozen->FunctionFlags |= 0x400;
}

struct Engine_FindInstanceVertexweightBonePair_Parms
{
	struct FBonePair                                   Bones;                                            		// 0x000000 (0x0010)              
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
};

int USkeletalMeshComponent::FindInstanceVertexweightBonePair(struct FBonePair Bones)
{
	static UFieldFunc* pFnFindInstanceVertexweightBonePair = NULL;
	if(!pFnFindInstanceVertexweightBonePair)
		pFnFindInstanceVertexweightBonePair = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindInstanceVertexweightBonePair");

	Engine_FindInstanceVertexweightBonePair_Parms FindInstanceVertexweightBonePair_Parms;
	memcpy(&FindInstanceVertexweightBonePair_Parms.Bones,&Bones,0x10);
	pFnFindInstanceVertexweightBonePair->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindInstanceVertexweightBonePair,NULL,&FindInstanceVertexweightBonePair_Parms,NULL);
	pFnFindInstanceVertexweightBonePair->FunctionFlags |= 0x400;
	return FindInstanceVertexweightBonePair_Parms.ReturnValue;
}

struct Engine_GetClothAttachmentResponseCoefficient_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothAttachmentResponseCoefficient()
{
	static UFieldFunc* pFnGetClothAttachmentResponseCoefficient = NULL;
	if(!pFnGetClothAttachmentResponseCoefficient)
		pFnGetClothAttachmentResponseCoefficient = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothAttachmentResponseCoefficient");

	Engine_GetClothAttachmentResponseCoefficient_Parms GetClothAttachmentResponseCoefficient_Parms;
	pFnGetClothAttachmentResponseCoefficient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothAttachmentResponseCoefficient,NULL,&GetClothAttachmentResponseCoefficient_Parms,NULL);
	pFnGetClothAttachmentResponseCoefficient->FunctionFlags |= 0x400;
	return GetClothAttachmentResponseCoefficient_Parms.ReturnValue;
}

struct Engine_ForceSkelUpdate_Parms
{
};

void USkeletalMeshComponent::ForceSkelUpdate()
{
	static UFieldFunc* pFnForceSkelUpdate = NULL;
	if(!pFnForceSkelUpdate)
		pFnForceSkelUpdate = UObject::FindFunction("Function Engine.SkeletalMeshComponent.ForceSkelUpdate");

	Engine_ForceSkelUpdate_Parms ForceSkelUpdate_Parms;
	pFnForceSkelUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceSkelUpdate,NULL,&ForceSkelUpdate_Parms,NULL);
	pFnForceSkelUpdate->FunctionFlags |= 0x400;
}

struct Engine_GetClothAttachmentTearFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothAttachmentTearFactor()
{
	static UFieldFunc* pFnGetClothAttachmentTearFactor = NULL;
	if(!pFnGetClothAttachmentTearFactor)
		pFnGetClothAttachmentTearFactor = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothAttachmentTearFactor");

	Engine_GetClothAttachmentTearFactor_Parms GetClothAttachmentTearFactor_Parms;
	pFnGetClothAttachmentTearFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothAttachmentTearFactor,NULL,&GetClothAttachmentTearFactor_Parms,NULL);
	pFnGetClothAttachmentTearFactor->FunctionFlags |= 0x400;
	return GetClothAttachmentTearFactor_Parms.ReturnValue;
}

struct Engine_SetClothValidBounds_Parms
{
	FVector3                                           ClothValidBoundsMin;                              		// 0x000000 (0x000C)              
	FVector3                                           ClothValidBoundsMax;                              		// 0x00000C (0x000C)              
};

void USkeletalMeshComponent::SetClothValidBounds(FVector3 ClothValidBoundsMin,FVector3 ClothValidBoundsMax)
{
	static UFieldFunc* pFnSetClothValidBounds = NULL;
	if(!pFnSetClothValidBounds)
		pFnSetClothValidBounds = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothValidBounds");

	Engine_SetClothValidBounds_Parms SetClothValidBounds_Parms;
	memcpy(&SetClothValidBounds_Parms.ClothValidBoundsMin,&ClothValidBoundsMin,0xC);
	memcpy(&SetClothValidBounds_Parms.ClothValidBoundsMax,&ClothValidBoundsMax,0xC);
	pFnSetClothValidBounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothValidBounds,NULL,&SetClothValidBounds_Parms,NULL);
	pFnSetClothValidBounds->FunctionFlags |= 0x400;
}

struct Engine_GetClothFriction_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothFriction()
{
	static UFieldFunc* pFnGetClothFriction = NULL;
	if(!pFnGetClothFriction)
		pFnGetClothFriction = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothFriction");

	Engine_GetClothFriction_Parms GetClothFriction_Parms;
	pFnGetClothFriction->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothFriction,NULL,&GetClothFriction_Parms,NULL);
	pFnGetClothFriction->FunctionFlags |= 0x400;
	return GetClothFriction_Parms.ReturnValue;
}

struct Engine_UnHideBone_Parms
{
	int                                                BoneIndex;                                        		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::UnHideBone(int BoneIndex)
{
	static UFieldFunc* pFnUnHideBone = NULL;
	if(!pFnUnHideBone)
		pFnUnHideBone = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UnHideBone");

	Engine_UnHideBone_Parms UnHideBone_Parms;
	UnHideBone_Parms.BoneIndex = BoneIndex;
	pFnUnHideBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnHideBone,NULL,&UnHideBone_Parms,NULL);
	pFnUnHideBone->FunctionFlags |= 0x400;
}

struct Engine_GetClothBendingStiffness_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothBendingStiffness()
{
	static UFieldFunc* pFnGetClothBendingStiffness = NULL;
	if(!pFnGetClothBendingStiffness)
		pFnGetClothBendingStiffness = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothBendingStiffness");

	Engine_GetClothBendingStiffness_Parms GetClothBendingStiffness_Parms;
	pFnGetClothBendingStiffness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothBendingStiffness,NULL,&GetClothBendingStiffness_Parms,NULL);
	pFnGetClothBendingStiffness->FunctionFlags |= 0x400;
	return GetClothBendingStiffness_Parms.ReturnValue;
}

struct Engine_UpdateRBBonesFromSpaceBases_Parms
{
	unsigned long                                      bMoveUnfixedBodies : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bTeleport : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::UpdateRBBonesFromSpaceBases(bool bMoveUnfixedBodies,bool bTeleport)
{
	static UFieldFunc* pFnUpdateRBBonesFromSpaceBases = NULL;
	if(!pFnUpdateRBBonesFromSpaceBases)
		pFnUpdateRBBonesFromSpaceBases = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UpdateRBBonesFromSpaceBases");

	Engine_UpdateRBBonesFromSpaceBases_Parms UpdateRBBonesFromSpaceBases_Parms;
	UpdateRBBonesFromSpaceBases_Parms.bMoveUnfixedBodies = bMoveUnfixedBodies;
	UpdateRBBonesFromSpaceBases_Parms.bTeleport = bTeleport;
	pFnUpdateRBBonesFromSpaceBases->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateRBBonesFromSpaceBases,NULL,&UpdateRBBonesFromSpaceBases_Parms,NULL);
	pFnUpdateRBBonesFromSpaceBases->FunctionFlags |= 0x400;
}

struct Engine_SetAnimTreeTemplate_Parms
{
	class UAnimTree*                                   NewTemplate;                                      		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetAnimTreeTemplate(class UAnimTree* NewTemplate)
{
	static UFieldFunc* pFnSetAnimTreeTemplate = NULL;
	if(!pFnSetAnimTreeTemplate)
		pFnSetAnimTreeTemplate = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetAnimTreeTemplate");

	Engine_SetAnimTreeTemplate_Parms SetAnimTreeTemplate_Parms;
	SetAnimTreeTemplate_Parms.NewTemplate = NewTemplate;
	pFnSetAnimTreeTemplate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAnimTreeTemplate,NULL,&SetAnimTreeTemplate_Parms,NULL);
	pFnSetAnimTreeTemplate->FunctionFlags |= 0x400;
}

struct Engine_SetSoftBodyFrozen_Parms
{
	unsigned long                                      bNewFrozen : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetSoftBodyFrozen(bool bNewFrozen)
{
	static UFieldFunc* pFnSetSoftBodyFrozen = NULL;
	if(!pFnSetSoftBodyFrozen)
		pFnSetSoftBodyFrozen = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetSoftBodyFrozen");

	Engine_SetSoftBodyFrozen_Parms SetSoftBodyFrozen_Parms;
	SetSoftBodyFrozen_Parms.bNewFrozen = bNewFrozen;
	pFnSetSoftBodyFrozen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSoftBodyFrozen,NULL,&SetSoftBodyFrozen_Parms,NULL);
	pFnSetSoftBodyFrozen->FunctionFlags |= 0x400;
}

struct Engine_SetAttachClothVertsToBaseBody_Parms
{
	unsigned long                                      bAttachVerts : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetAttachClothVertsToBaseBody(bool bAttachVerts)
{
	static UFieldFunc* pFnSetAttachClothVertsToBaseBody = NULL;
	if(!pFnSetAttachClothVertsToBaseBody)
		pFnSetAttachClothVertsToBaseBody = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetAttachClothVertsToBaseBody");

	Engine_SetAttachClothVertsToBaseBody_Parms SetAttachClothVertsToBaseBody_Parms;
	SetAttachClothVertsToBaseBody_Parms.bAttachVerts = bAttachVerts;
	pFnSetAttachClothVertsToBaseBody->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAttachClothVertsToBaseBody,NULL,&SetAttachClothVertsToBaseBody_Parms,NULL);
	pFnSetAttachClothVertsToBaseBody->FunctionFlags |= 0x400;
}

struct Engine_FindAnimSequence_Parms
{
	struct FName                                       AnimSeqName;                                      		// 0x000000 (0x0008)              
	class UAnimSequence*                               ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UAnimSequence* USkeletalMeshComponent::FindAnimSequence(struct FName AnimSeqName)
{
	static UFieldFunc* pFnFindAnimSequence = NULL;
	if(!pFnFindAnimSequence)
		pFnFindAnimSequence = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindAnimSequence");

	Engine_FindAnimSequence_Parms FindAnimSequence_Parms;
	memcpy(&FindAnimSequence_Parms.AnimSeqName,&AnimSeqName,0x8);
	pFnFindAnimSequence->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindAnimSequence,NULL,&FindAnimSequence_Parms,NULL);
	pFnFindAnimSequence->FunctionFlags |= 0x400;
	return FindAnimSequence_Parms.ReturnValue;
}

struct Engine_RestoreSavedAnimSets_Parms
{
};

void USkeletalMeshComponent::RestoreSavedAnimSets()
{
	static UFieldFunc* pFnRestoreSavedAnimSets = NULL;
	if(!pFnRestoreSavedAnimSets)
		pFnRestoreSavedAnimSets = UObject::FindFunction("Function Engine.SkeletalMeshComponent.RestoreSavedAnimSets");

	Engine_RestoreSavedAnimSets_Parms RestoreSavedAnimSets_Parms;
	pFnRestoreSavedAnimSets->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRestoreSavedAnimSets,NULL,&RestoreSavedAnimSets_Parms,NULL);
	pFnRestoreSavedAnimSets->FunctionFlags |= 0x400;
}

struct Engine_GetBoneNames_Parms
{
	TArray<struct FName>                               BoneNames;                                        		// 0x000000 (0x000C)              
};

void USkeletalMeshComponent::GetBoneNames(TArray<struct FName>* BoneNames)
{
	static UFieldFunc* pFnGetBoneNames = NULL;
	if(!pFnGetBoneNames)
		pFnGetBoneNames = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBoneNames");

	Engine_GetBoneNames_Parms GetBoneNames_Parms;
	pFnGetBoneNames->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoneNames,NULL,&GetBoneNames_Parms,NULL);
	pFnGetBoneNames->FunctionFlags |= 0x400;
	if(BoneNames)
		memcpy(BoneNames,&GetBoneNames_Parms.BoneNames,0xC);
}

struct Engine_GetClothCollisionResponseCoefficient_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothCollisionResponseCoefficient()
{
	static UFieldFunc* pFnGetClothCollisionResponseCoefficient = NULL;
	if(!pFnGetClothCollisionResponseCoefficient)
		pFnGetClothCollisionResponseCoefficient = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothCollisionResponseCoefficient");

	Engine_GetClothCollisionResponseCoefficient_Parms GetClothCollisionResponseCoefficient_Parms;
	pFnGetClothCollisionResponseCoefficient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothCollisionResponseCoefficient,NULL,&GetClothCollisionResponseCoefficient_Parms,NULL);
	pFnGetClothCollisionResponseCoefficient->FunctionFlags |= 0x400;
	return GetClothCollisionResponseCoefficient_Parms.ReturnValue;
}

struct Engine_GetSocketBoneName_Parms
{
	struct FName                                       InSocketName;                                     		// 0x000000 (0x0008)              
	struct FName                                       ReturnValue;                                      		// 0x000008 (0x0008)              
};

struct FName USkeletalMeshComponent::GetSocketBoneName(struct FName InSocketName)
{
	static UFieldFunc* pFnGetSocketBoneName = NULL;
	if(!pFnGetSocketBoneName)
		pFnGetSocketBoneName = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetSocketBoneName");

	Engine_GetSocketBoneName_Parms GetSocketBoneName_Parms;
	memcpy(&GetSocketBoneName_Parms.InSocketName,&InSocketName,0x8);
	pFnGetSocketBoneName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSocketBoneName,NULL,&GetSocketBoneName_Parms,NULL);
	pFnGetSocketBoneName->FunctionFlags |= 0x400;
	return GetSocketBoneName_Parms.ReturnValue;
}

struct Engine_SetHasPhysicsAssetInstance_Parms
{
	unsigned long                                      bHasInstance : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetHasPhysicsAssetInstance(bool bHasInstance)
{
	static UFieldFunc* pFnSetHasPhysicsAssetInstance = NULL;
	if(!pFnSetHasPhysicsAssetInstance)
		pFnSetHasPhysicsAssetInstance = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetHasPhysicsAssetInstance");

	Engine_SetHasPhysicsAssetInstance_Parms SetHasPhysicsAssetInstance_Parms;
	SetHasPhysicsAssetInstance_Parms.bHasInstance = bHasInstance;
	pFnSetHasPhysicsAssetInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHasPhysicsAssetInstance,NULL,&SetHasPhysicsAssetInstance_Parms,NULL);
	pFnSetHasPhysicsAssetInstance->FunctionFlags |= 0x400;
}

struct Engine_GetClothStretchingStiffness_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothStretchingStiffness()
{
	static UFieldFunc* pFnGetClothStretchingStiffness = NULL;
	if(!pFnGetClothStretchingStiffness)
		pFnGetClothStretchingStiffness = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothStretchingStiffness");

	Engine_GetClothStretchingStiffness_Parms GetClothStretchingStiffness_Parms;
	pFnGetClothStretchingStiffness->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothStretchingStiffness,NULL,&GetClothStretchingStiffness_Parms,NULL);
	pFnGetClothStretchingStiffness->FunctionFlags |= 0x400;
	return GetClothStretchingStiffness_Parms.ReturnValue;
}

struct Engine_SetFaceFXRegisterEx_Parms
{
	struct FString                                     RegName;                                          		// 0x000000 (0x000C)              
	unsigned char                                      RegOp;                                            		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	float                                              FirstValue;                                       		// 0x000010 (0x0004)              
	float                                              FirstInterpDuration;                              		// 0x000014 (0x0004)              
	float                                              NextValue;                                        		// 0x000018 (0x0004)              
	float                                              NextInterpDuration;                               		// 0x00001C (0x0004)              
};

void USkeletalMeshComponent::SetFaceFXRegisterEx(struct FString RegName,unsigned char RegOp,float FirstValue,float FirstInterpDuration,float NextValue,float NextInterpDuration)
{
	static UFieldFunc* pFnSetFaceFXRegisterEx = NULL;
	if(!pFnSetFaceFXRegisterEx)
		pFnSetFaceFXRegisterEx = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetFaceFXRegisterEx");

	Engine_SetFaceFXRegisterEx_Parms SetFaceFXRegisterEx_Parms;
	memcpy(&SetFaceFXRegisterEx_Parms.RegName,&RegName,0xC);
	SetFaceFXRegisterEx_Parms.RegOp = RegOp;
	SetFaceFXRegisterEx_Parms.FirstValue = FirstValue;
	SetFaceFXRegisterEx_Parms.FirstInterpDuration = FirstInterpDuration;
	SetFaceFXRegisterEx_Parms.NextValue = NextValue;
	SetFaceFXRegisterEx_Parms.NextInterpDuration = NextInterpDuration;
	pFnSetFaceFXRegisterEx->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFaceFXRegisterEx,NULL,&SetFaceFXRegisterEx_Parms,NULL);
	pFnSetFaceFXRegisterEx->FunctionFlags |= 0x400;
}

struct Engine_GetSocketWorldLocationAndRotation_Parms
{
	struct FName                                       InSocketName;                                     		// 0x000000 (0x0008)              
	FVector3                                           OutLocation;                                      		// 0x000008 (0x000C)              
	FRotator                                           OutRotation;                                      		// 0x000014 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool USkeletalMeshComponent::GetSocketWorldLocationAndRotation(struct FName InSocketName,FVector3* OutLocation,FRotator* OutRotation)
{
	static UFieldFunc* pFnGetSocketWorldLocationAndRotation = NULL;
	if(!pFnGetSocketWorldLocationAndRotation)
		pFnGetSocketWorldLocationAndRotation = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetSocketWorldLocationAndRotation");

	Engine_GetSocketWorldLocationAndRotation_Parms GetSocketWorldLocationAndRotation_Parms;
	memcpy(&GetSocketWorldLocationAndRotation_Parms.InSocketName,&InSocketName,0x8);
	pFnGetSocketWorldLocationAndRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSocketWorldLocationAndRotation,NULL,&GetSocketWorldLocationAndRotation_Parms,NULL);
	pFnGetSocketWorldLocationAndRotation->FunctionFlags |= 0x400;
	if(OutLocation)
		memcpy(OutLocation,&GetSocketWorldLocationAndRotation_Parms.OutLocation,0xC);
	if(OutRotation)
		memcpy(OutRotation,&GetSocketWorldLocationAndRotation_Parms.OutRotation,0xC);
	return GetSocketWorldLocationAndRotation_Parms.ReturnValue;
}

struct Engine_FindConstraintBoneName_Parms
{
	int                                                ConstraintIndex;                                  		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName USkeletalMeshComponent::FindConstraintBoneName(int ConstraintIndex)
{
	static UFieldFunc* pFnFindConstraintBoneName = NULL;
	if(!pFnFindConstraintBoneName)
		pFnFindConstraintBoneName = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindConstraintBoneName");

	Engine_FindConstraintBoneName_Parms FindConstraintBoneName_Parms;
	FindConstraintBoneName_Parms.ConstraintIndex = ConstraintIndex;
	pFnFindConstraintBoneName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindConstraintBoneName,NULL,&FindConstraintBoneName_Parms,NULL);
	pFnFindConstraintBoneName->FunctionFlags |= 0x400;
	return FindConstraintBoneName_Parms.ReturnValue;
}

struct Engine_SaveAnimSets_Parms
{
};

void USkeletalMeshComponent::SaveAnimSets()
{
	static UFieldFunc* pFnSaveAnimSets = NULL;
	if(!pFnSaveAnimSets)
		pFnSaveAnimSets = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SaveAnimSets");

	Engine_SaveAnimSets_Parms SaveAnimSets_Parms;
	pFnSaveAnimSets->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveAnimSets,NULL,&SaveAnimSets_Parms,NULL);
	pFnSaveAnimSets->FunctionFlags |= 0x400;
}

struct Engine_GetClothTearFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothTearFactor()
{
	static UFieldFunc* pFnGetClothTearFactor = NULL;
	if(!pFnGetClothTearFactor)
		pFnGetClothTearFactor = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothTearFactor");

	Engine_GetClothTearFactor_Parms GetClothTearFactor_Parms;
	pFnGetClothTearFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothTearFactor,NULL,&GetClothTearFactor_Parms,NULL);
	pFnGetClothTearFactor->FunctionFlags |= 0x400;
	return GetClothTearFactor_Parms.ReturnValue;
}

struct Engine_UpdateInstanceVertexWeightBones_Parms
{
	TArray<struct FBonePair>                           BonePairs;                                        		// 0x000000 (0x000C)              
};

void USkeletalMeshComponent::UpdateInstanceVertexWeightBones(TArray<struct FBonePair> BonePairs)
{
	static UFieldFunc* pFnUpdateInstanceVertexWeightBones = NULL;
	if(!pFnUpdateInstanceVertexWeightBones)
		pFnUpdateInstanceVertexWeightBones = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UpdateInstanceVertexWeightBones");

	Engine_UpdateInstanceVertexWeightBones_Parms UpdateInstanceVertexWeightBones_Parms;
	memcpy(&UpdateInstanceVertexWeightBones_Parms.BonePairs,&BonePairs,0xC);
	pFnUpdateInstanceVertexWeightBones->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateInstanceVertexWeightBones,NULL,&UpdateInstanceVertexWeightBones_Parms,NULL);
	pFnUpdateInstanceVertexWeightBones->FunctionFlags |= 0x400;
}

struct Engine_FindSkelControl_Parms
{
	struct FName                                       InControlName;                                    		// 0x000000 (0x0008)              
	class USkelControlBase*                            ReturnValue;                                      		// 0x000008 (0x0004)              
};

class USkelControlBase* USkeletalMeshComponent::FindSkelControl(struct FName InControlName)
{
	static UFieldFunc* pFnFindSkelControl = NULL;
	if(!pFnFindSkelControl)
		pFnFindSkelControl = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindSkelControl");

	Engine_FindSkelControl_Parms FindSkelControl_Parms;
	memcpy(&FindSkelControl_Parms.InControlName,&InControlName,0x8);
	pFnFindSkelControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindSkelControl,NULL,&FindSkelControl_Parms,NULL);
	pFnFindSkelControl->FunctionFlags |= 0x400;
	return FindSkelControl_Parms.ReturnValue;
}

struct Engine_IsPlayingFaceFXAnim_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USkeletalMeshComponent::IsPlayingFaceFXAnim()
{
	static UFieldFunc* pFnIsPlayingFaceFXAnim = NULL;
	if(!pFnIsPlayingFaceFXAnim)
		pFnIsPlayingFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshComponent.IsPlayingFaceFXAnim");

	Engine_IsPlayingFaceFXAnim_Parms IsPlayingFaceFXAnim_Parms;
	pFnIsPlayingFaceFXAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPlayingFaceFXAnim,NULL,&IsPlayingFaceFXAnim_Parms,NULL);
	pFnIsPlayingFaceFXAnim->FunctionFlags |= 0x400;
	return IsPlayingFaceFXAnim_Parms.ReturnValue;
}

struct Engine_MatchRefBone_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int USkeletalMeshComponent::MatchRefBone(struct FName BoneName)
{
	static UFieldFunc* pFnMatchRefBone = NULL;
	if(!pFnMatchRefBone)
		pFnMatchRefBone = UObject::FindFunction("Function Engine.SkeletalMeshComponent.MatchRefBone");

	Engine_MatchRefBone_Parms MatchRefBone_Parms;
	memcpy(&MatchRefBone_Parms.BoneName,&BoneName,0x8);
	pFnMatchRefBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMatchRefBone,NULL,&MatchRefBone_Parms,NULL);
	pFnMatchRefBone->FunctionFlags |= 0x400;
	return MatchRefBone_Parms.ReturnValue;
}

struct Engine_RemoveInstanceVertexWeightBoneParented_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
};

void USkeletalMeshComponent::RemoveInstanceVertexWeightBoneParented(struct FName BoneName)
{
	static UFieldFunc* pFnRemoveInstanceVertexWeightBoneParented = NULL;
	if(!pFnRemoveInstanceVertexWeightBoneParented)
		pFnRemoveInstanceVertexWeightBoneParented = UObject::FindFunction("Function Engine.SkeletalMeshComponent.RemoveInstanceVertexWeightBoneParented");

	Engine_RemoveInstanceVertexWeightBoneParented_Parms RemoveInstanceVertexWeightBoneParented_Parms;
	memcpy(&RemoveInstanceVertexWeightBoneParented_Parms.BoneName,&BoneName,0x8);
	pFnRemoveInstanceVertexWeightBoneParented->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveInstanceVertexWeightBoneParented,NULL,&RemoveInstanceVertexWeightBoneParented_Parms,NULL);
	pFnRemoveInstanceVertexWeightBoneParented->FunctionFlags |= 0x400;
}

struct Engine_GetBoneLocation_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	int                                                Space;                                            		// 0x000008 (0x0004)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 USkeletalMeshComponent::GetBoneLocation(struct FName BoneName,int Space)
{
	static UFieldFunc* pFnGetBoneLocation = NULL;
	if(!pFnGetBoneLocation)
		pFnGetBoneLocation = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBoneLocation");

	Engine_GetBoneLocation_Parms GetBoneLocation_Parms;
	memcpy(&GetBoneLocation_Parms.BoneName,&BoneName,0x8);
	GetBoneLocation_Parms.Space = Space;
	pFnGetBoneLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoneLocation,NULL,&GetBoneLocation_Parms,NULL);
	pFnGetBoneLocation->FunctionFlags |= 0x400;
	return GetBoneLocation_Parms.ReturnValue;
}

struct Engine_FindConstraintIndex_Parms
{
	struct FName                                       ConstraintName;                                   		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int USkeletalMeshComponent::FindConstraintIndex(struct FName ConstraintName)
{
	static UFieldFunc* pFnFindConstraintIndex = NULL;
	if(!pFnFindConstraintIndex)
		pFnFindConstraintIndex = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindConstraintIndex");

	Engine_FindConstraintIndex_Parms FindConstraintIndex_Parms;
	memcpy(&FindConstraintIndex_Parms.ConstraintName,&ConstraintName,0x8);
	pFnFindConstraintIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindConstraintIndex,NULL,&FindConstraintIndex_Parms,NULL);
	pFnFindConstraintIndex->FunctionFlags |= 0x400;
	return FindConstraintIndex_Parms.ReturnValue;
}

struct Engine_AttachedComponents_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class UActorComponent*                             OutComponent;                                     		// 0x000004 (0x0004)              
};

void USkeletalMeshComponent::AttachedComponents(class UClass* BaseClass,class UActorComponent** OutComponent)
{
	static UFieldFunc* pFnAttachedComponents = NULL;
	if(!pFnAttachedComponents)
		pFnAttachedComponents = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AttachedComponents");

	Engine_AttachedComponents_Parms AttachedComponents_Parms;
	AttachedComponents_Parms.BaseClass = BaseClass;
	pFnAttachedComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAttachedComponents,NULL,&AttachedComponents_Parms,NULL);
	pFnAttachedComponents->FunctionFlags |= 0x400;
	if(OutComponent)
		*OutComponent = AttachedComponents_Parms.OutComponent;
}

struct Engine_SetForceRefPose_Parms
{
	unsigned long                                      bNewForceRefPose : 1;                             		// 0x000000 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::SetForceRefPose(bool bNewForceRefPose)
{
	static UFieldFunc* pFnSetForceRefPose = NULL;
	if(!pFnSetForceRefPose)
		pFnSetForceRefPose = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetForceRefPose");

	Engine_SetForceRefPose_Parms SetForceRefPose_Parms;
	SetForceRefPose_Parms.bNewForceRefPose = bNewForceRefPose;
	pFnSetForceRefPose->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetForceRefPose,NULL,&SetForceRefPose_Parms,NULL);
	pFnSetForceRefPose->FunctionFlags |= 0x400;
}

struct Engine_TransformToBoneSpace_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	FVector3                                           InPosition;                                       		// 0x000008 (0x000C)              
	FRotator                                           InRotation;                                       		// 0x000014 (0x000C)              
	FVector3                                           OutPosition;                                      		// 0x000020 (0x000C)              
	FRotator                                           OutRotation;                                      		// 0x00002C (0x000C)              
};

void USkeletalMeshComponent::TransformToBoneSpace(struct FName BoneName,FVector3 InPosition,FRotator InRotation,FVector3* OutPosition,FRotator* OutRotation)
{
	static UFieldFunc* pFnTransformToBoneSpace = NULL;
	if(!pFnTransformToBoneSpace)
		pFnTransformToBoneSpace = UObject::FindFunction("Function Engine.SkeletalMeshComponent.TransformToBoneSpace");

	Engine_TransformToBoneSpace_Parms TransformToBoneSpace_Parms;
	memcpy(&TransformToBoneSpace_Parms.BoneName,&BoneName,0x8);
	memcpy(&TransformToBoneSpace_Parms.InPosition,&InPosition,0xC);
	memcpy(&TransformToBoneSpace_Parms.InRotation,&InRotation,0xC);
	pFnTransformToBoneSpace->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTransformToBoneSpace,NULL,&TransformToBoneSpace_Parms,NULL);
	pFnTransformToBoneSpace->FunctionFlags |= 0x400;
	if(OutPosition)
		memcpy(OutPosition,&TransformToBoneSpace_Parms.OutPosition,0xC);
	if(OutRotation)
		memcpy(OutRotation,&TransformToBoneSpace_Parms.OutRotation,0xC);
}

struct Engine_FindComponentAttachedToBone_Parms
{
	struct FName                                       InBoneName;                                       		// 0x000000 (0x0008)              
	class UActorComponent*                             ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UActorComponent* USkeletalMeshComponent::FindComponentAttachedToBone(struct FName InBoneName)
{
	static UFieldFunc* pFnFindComponentAttachedToBone = NULL;
	if(!pFnFindComponentAttachedToBone)
		pFnFindComponentAttachedToBone = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindComponentAttachedToBone");

	Engine_FindComponentAttachedToBone_Parms FindComponentAttachedToBone_Parms;
	memcpy(&FindComponentAttachedToBone_Parms.InBoneName,&InBoneName,0x8);
	pFnFindComponentAttachedToBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindComponentAttachedToBone,NULL,&FindComponentAttachedToBone_Parms,NULL);
	pFnFindComponentAttachedToBone->FunctionFlags |= 0x400;
	return FindComponentAttachedToBone_Parms.ReturnValue;
}

struct Engine_IsComponentAttached_Parms
{
	class UActorComponent*                             Component;                                        		// 0x000000 (0x0004)              
	struct FName                                       BoneName;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USkeletalMeshComponent::IsComponentAttached(class UActorComponent* Component,struct FName BoneName)
{
	static UFieldFunc* pFnIsComponentAttached = NULL;
	if(!pFnIsComponentAttached)
		pFnIsComponentAttached = UObject::FindFunction("Function Engine.SkeletalMeshComponent.IsComponentAttached");

	Engine_IsComponentAttached_Parms IsComponentAttached_Parms;
	IsComponentAttached_Parms.Component = Component;
	memcpy(&IsComponentAttached_Parms.BoneName,&BoneName,0x8);
	pFnIsComponentAttached->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsComponentAttached,NULL,&IsComponentAttached_Parms,NULL);
	pFnIsComponentAttached->FunctionFlags |= 0x400;
	return IsComponentAttached_Parms.ReturnValue;
}

struct Engine_GetBoneAxis_Parms
{
	struct FName                                       BoneName;                                         		// 0x000000 (0x0008)              
	unsigned char                                      Axis;                                             		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 USkeletalMeshComponent::GetBoneAxis(struct FName BoneName,unsigned char Axis)
{
	static UFieldFunc* pFnGetBoneAxis = NULL;
	if(!pFnGetBoneAxis)
		pFnGetBoneAxis = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBoneAxis");

	Engine_GetBoneAxis_Parms GetBoneAxis_Parms;
	memcpy(&GetBoneAxis_Parms.BoneName,&BoneName,0x8);
	GetBoneAxis_Parms.Axis = Axis;
	pFnGetBoneAxis->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoneAxis,NULL,&GetBoneAxis_Parms,NULL);
	pFnGetBoneAxis->FunctionFlags |= 0x400;
	return GetBoneAxis_Parms.ReturnValue;
}

struct Engine_InitSkelControls_Parms
{
};

void USkeletalMeshComponent::InitSkelControls()
{
	static UFieldFunc* pFnInitSkelControls = NULL;
	if(!pFnInitSkelControls)
		pFnInitSkelControls = UObject::FindFunction("Function Engine.SkeletalMeshComponent.InitSkelControls");

	Engine_InitSkelControls_Parms InitSkelControls_Parms;
	pFnInitSkelControls->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitSkelControls,NULL,&InitSkelControls_Parms,NULL);
	pFnInitSkelControls->FunctionFlags |= 0x400;
}

struct Engine_GetSocketByName_Parms
{
	struct FName                                       InSocketName;                                     		// 0x000000 (0x0008)              
	class USkeletalMeshSocket*                         ReturnValue;                                      		// 0x000008 (0x0004)              
};

class USkeletalMeshSocket* USkeletalMeshComponent::GetSocketByName(struct FName InSocketName)
{
	static UFieldFunc* pFnGetSocketByName = NULL;
	if(!pFnGetSocketByName)
		pFnGetSocketByName = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetSocketByName");

	Engine_GetSocketByName_Parms GetSocketByName_Parms;
	memcpy(&GetSocketByName_Parms.InSocketName,&InSocketName,0x8);
	pFnGetSocketByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSocketByName,NULL,&GetSocketByName_Parms,NULL);
	pFnGetSocketByName->FunctionFlags |= 0x400;
	return GetSocketByName_Parms.ReturnValue;
}

struct Engine_SetFaceFXRegister_Parms
{
	struct FString                                     RegName;                                          		// 0x000000 (0x000C)              
	float                                              RegVal;                                           		// 0x00000C (0x0004)              
	unsigned char                                      RegOp;                                            		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	float                                              InterpDuration;                                   		// 0x000014 (0x0004)              
};

void USkeletalMeshComponent::SetFaceFXRegister(struct FString RegName,float RegVal,unsigned char RegOp,float InterpDuration)
{
	static UFieldFunc* pFnSetFaceFXRegister = NULL;
	if(!pFnSetFaceFXRegister)
		pFnSetFaceFXRegister = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetFaceFXRegister");

	Engine_SetFaceFXRegister_Parms SetFaceFXRegister_Parms;
	memcpy(&SetFaceFXRegister_Parms.RegName,&RegName,0xC);
	SetFaceFXRegister_Parms.RegVal = RegVal;
	SetFaceFXRegister_Parms.RegOp = RegOp;
	SetFaceFXRegister_Parms.InterpDuration = InterpDuration;
	pFnSetFaceFXRegister->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFaceFXRegister,NULL,&SetFaceFXRegister_Parms,NULL);
	pFnSetFaceFXRegister->FunctionFlags |= 0x400;
}

struct Engine_GetClothSolverIterations_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USkeletalMeshComponent::GetClothSolverIterations()
{
	static UFieldFunc* pFnGetClothSolverIterations = NULL;
	if(!pFnGetClothSolverIterations)
		pFnGetClothSolverIterations = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothSolverIterations");

	Engine_GetClothSolverIterations_Parms GetClothSolverIterations_Parms;
	pFnGetClothSolverIterations->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothSolverIterations,NULL,&GetClothSolverIterations_Parms,NULL);
	pFnGetClothSolverIterations->FunctionFlags |= 0x400;
	return GetClothSolverIterations_Parms.ReturnValue;
}

struct Engine_IsBoneHidden_Parms
{
	int                                                BoneIndex;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USkeletalMeshComponent::IsBoneHidden(int BoneIndex)
{
	static UFieldFunc* pFnIsBoneHidden = NULL;
	if(!pFnIsBoneHidden)
		pFnIsBoneHidden = UObject::FindFunction("Function Engine.SkeletalMeshComponent.IsBoneHidden");

	Engine_IsBoneHidden_Parms IsBoneHidden_Parms;
	IsBoneHidden_Parms.BoneIndex = BoneIndex;
	pFnIsBoneHidden->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsBoneHidden,NULL,&IsBoneHidden_Parms,NULL);
	pFnIsBoneHidden->FunctionFlags |= 0x400;
	return IsBoneHidden_Parms.ReturnValue;
}

struct Engine_HideBone_Parms
{
	int                                                BoneIndex;                                        		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::HideBone(int BoneIndex)
{
	static UFieldFunc* pFnHideBone = NULL;
	if(!pFnHideBone)
		pFnHideBone = UObject::FindFunction("Function Engine.SkeletalMeshComponent.HideBone");

	Engine_HideBone_Parms HideBone_Parms;
	HideBone_Parms.BoneIndex = BoneIndex;
	pFnHideBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHideBone,NULL,&HideBone_Parms,NULL);
	pFnHideBone->FunctionFlags |= 0x400;
}

struct Engine_UpdateClothParams_Parms
{
};

void USkeletalMeshComponent::UpdateClothParams()
{
	static UFieldFunc* pFnUpdateClothParams = NULL;
	if(!pFnUpdateClothParams)
		pFnUpdateClothParams = UObject::FindFunction("Function Engine.SkeletalMeshComponent.UpdateClothParams");

	Engine_UpdateClothParams_Parms UpdateClothParams_Parms;
	pFnUpdateClothParams->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateClothParams,NULL,&UpdateClothParams_Parms,NULL);
	pFnUpdateClothParams->FunctionFlags |= 0x400;
}

struct Engine_GetClothFlags_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USkeletalMeshComponent::GetClothFlags()
{
	static UFieldFunc* pFnGetClothFlags = NULL;
	if(!pFnGetClothFlags)
		pFnGetClothFlags = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothFlags");

	Engine_GetClothFlags_Parms GetClothFlags_Parms;
	pFnGetClothFlags->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothFlags,NULL,&GetClothFlags_Parms,NULL);
	pFnGetClothFlags->FunctionFlags |= 0x400;
	return GetClothFlags_Parms.ReturnValue;
}

struct Engine_GetBonesWithinRadius_Parms
{
	FVector3                                           Origin;                                           		// 0x000000 (0x000C)              
	float                                              Radius;                                           		// 0x00000C (0x0004)              
	int                                                TraceFlags;                                       		// 0x000010 (0x0004)              
	TArray<struct FName>                               out_Bones;                                        		// 0x000014 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool USkeletalMeshComponent::GetBonesWithinRadius(FVector3 Origin,float Radius,int TraceFlags,TArray<struct FName>* out_Bones)
{
	static UFieldFunc* pFnGetBonesWithinRadius = NULL;
	if(!pFnGetBonesWithinRadius)
		pFnGetBonesWithinRadius = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetBonesWithinRadius");

	Engine_GetBonesWithinRadius_Parms GetBonesWithinRadius_Parms;
	memcpy(&GetBonesWithinRadius_Parms.Origin,&Origin,0xC);
	GetBonesWithinRadius_Parms.Radius = Radius;
	GetBonesWithinRadius_Parms.TraceFlags = TraceFlags;
	pFnGetBonesWithinRadius->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBonesWithinRadius,NULL,&GetBonesWithinRadius_Parms,NULL);
	pFnGetBonesWithinRadius->FunctionFlags |= 0x400;
	if(out_Bones)
		memcpy(out_Bones,&GetBonesWithinRadius_Parms.out_Bones,0xC);
	return GetBonesWithinRadius_Parms.ReturnValue;
}

struct Engine_DeclareFaceFXRegister_Parms
{
	struct FString                                     RegName;                                          		// 0x000000 (0x000C)              
};

void USkeletalMeshComponent::DeclareFaceFXRegister(struct FString RegName)
{
	static UFieldFunc* pFnDeclareFaceFXRegister = NULL;
	if(!pFnDeclareFaceFXRegister)
		pFnDeclareFaceFXRegister = UObject::FindFunction("Function Engine.SkeletalMeshComponent.DeclareFaceFXRegister");

	Engine_DeclareFaceFXRegister_Parms DeclareFaceFXRegister_Parms;
	memcpy(&DeclareFaceFXRegister_Parms.RegName,&RegName,0xC);
	pFnDeclareFaceFXRegister->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeclareFaceFXRegister,NULL,&DeclareFaceFXRegister_Parms,NULL);
	pFnDeclareFaceFXRegister->FunctionFlags |= 0x400;
}

struct Engine_SetClothAttachmentTearFactor_Parms
{
	float                                              ClothAttachTearFactor;                            		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothAttachmentTearFactor(float ClothAttachTearFactor)
{
	static UFieldFunc* pFnSetClothAttachmentTearFactor = NULL;
	if(!pFnSetClothAttachmentTearFactor)
		pFnSetClothAttachmentTearFactor = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothAttachmentTearFactor");

	Engine_SetClothAttachmentTearFactor_Parms SetClothAttachmentTearFactor_Parms;
	SetClothAttachmentTearFactor_Parms.ClothAttachTearFactor = ClothAttachTearFactor;
	pFnSetClothAttachmentTearFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothAttachmentTearFactor,NULL,&SetClothAttachmentTearFactor_Parms,NULL);
	pFnSetClothAttachmentTearFactor->FunctionFlags |= 0x400;
}

struct Engine_PlayFaceFXAnim_Parms
{
	class UFaceFXAnimSet*                              FaceFXAnimSetRef;                                 		// 0x000000 (0x0004)              
	struct FString                                     AnimName;                                         		// 0x000004 (0x000C)              
	struct FString                                     GroupName;                                        		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool USkeletalMeshComponent::PlayFaceFXAnim(class UFaceFXAnimSet* FaceFXAnimSetRef,struct FString AnimName,struct FString GroupName)
{
	static UFieldFunc* pFnPlayFaceFXAnim = NULL;
	if(!pFnPlayFaceFXAnim)
		pFnPlayFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshComponent.PlayFaceFXAnim");

	Engine_PlayFaceFXAnim_Parms PlayFaceFXAnim_Parms;
	PlayFaceFXAnim_Parms.FaceFXAnimSetRef = FaceFXAnimSetRef;
	memcpy(&PlayFaceFXAnim_Parms.AnimName,&AnimName,0xC);
	memcpy(&PlayFaceFXAnim_Parms.GroupName,&GroupName,0xC);
	pFnPlayFaceFXAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayFaceFXAnim,NULL,&PlayFaceFXAnim_Parms,NULL);
	pFnPlayFaceFXAnim->FunctionFlags |= 0x400;
	return PlayFaceFXAnim_Parms.ReturnValue;
}

struct Engine_GetClothDampingCoefficient_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USkeletalMeshComponent::GetClothDampingCoefficient()
{
	static UFieldFunc* pFnGetClothDampingCoefficient = NULL;
	if(!pFnGetClothDampingCoefficient)
		pFnGetClothDampingCoefficient = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetClothDampingCoefficient");

	Engine_GetClothDampingCoefficient_Parms GetClothDampingCoefficient_Parms;
	pFnGetClothDampingCoefficient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClothDampingCoefficient,NULL,&GetClothDampingCoefficient_Parms,NULL);
	pFnGetClothDampingCoefficient->FunctionFlags |= 0x400;
	return GetClothDampingCoefficient_Parms.ReturnValue;
}

struct Engine_FindAnimNode_Parms
{
	struct FName                                       InNodeName;                                       		// 0x000000 (0x0008)              
	class UAnimNode*                                   ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UAnimNode* USkeletalMeshComponent::FindAnimNode(struct FName InNodeName)
{
	static UFieldFunc* pFnFindAnimNode = NULL;
	if(!pFnFindAnimNode)
		pFnFindAnimNode = UObject::FindFunction("Function Engine.SkeletalMeshComponent.FindAnimNode");

	Engine_FindAnimNode_Parms FindAnimNode_Parms;
	memcpy(&FindAnimNode_Parms.InNodeName,&InNodeName,0x8);
	pFnFindAnimNode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindAnimNode,NULL,&FindAnimNode_Parms,NULL);
	pFnFindAnimNode->FunctionFlags |= 0x400;
	return FindAnimNode_Parms.ReturnValue;
}

struct Engine_AddLogicalAnimation_Parms
{
	class UAnimNode*                                   Animation;                                        		// 0x000000 (0x0004)              
	unsigned long                                      bRootMotion : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

void USkeletalMeshComponent::AddLogicalAnimation(class UAnimNode* Animation,bool bRootMotion)
{
	static UFieldFunc* pFnAddLogicalAnimation = NULL;
	if(!pFnAddLogicalAnimation)
		pFnAddLogicalAnimation = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AddLogicalAnimation");

	Engine_AddLogicalAnimation_Parms AddLogicalAnimation_Parms;
	AddLogicalAnimation_Parms.Animation = Animation;
	AddLogicalAnimation_Parms.bRootMotion = bRootMotion;
	pFnAddLogicalAnimation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddLogicalAnimation,NULL,&AddLogicalAnimation_Parms,NULL);
	pFnAddLogicalAnimation->FunctionFlags |= 0x400;
}

struct Engine_SetClothPosition_Parms
{
	FVector3                                           ClothOffSet;                                      		// 0x000000 (0x000C)              
};

void USkeletalMeshComponent::SetClothPosition(FVector3 ClothOffSet)
{
	static UFieldFunc* pFnSetClothPosition = NULL;
	if(!pFnSetClothPosition)
		pFnSetClothPosition = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothPosition");

	Engine_SetClothPosition_Parms SetClothPosition_Parms;
	memcpy(&SetClothPosition_Parms.ClothOffSet,&ClothOffSet,0xC);
	pFnSetClothPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothPosition,NULL,&SetClothPosition_Parms,NULL);
	pFnSetClothPosition->FunctionFlags |= 0x400;
}

struct Engine_GetFaceFXRegister_Parms
{
	struct FString                                     RegName;                                          		// 0x000000 (0x000C)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float USkeletalMeshComponent::GetFaceFXRegister(struct FString RegName)
{
	static UFieldFunc* pFnGetFaceFXRegister = NULL;
	if(!pFnGetFaceFXRegister)
		pFnGetFaceFXRegister = UObject::FindFunction("Function Engine.SkeletalMeshComponent.GetFaceFXRegister");

	Engine_GetFaceFXRegister_Parms GetFaceFXRegister_Parms;
	memcpy(&GetFaceFXRegister_Parms.RegName,&RegName,0xC);
	pFnGetFaceFXRegister->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFaceFXRegister,NULL,&GetFaceFXRegister_Parms,NULL);
	pFnGetFaceFXRegister->FunctionFlags |= 0x400;
	return GetFaceFXRegister_Parms.ReturnValue;
}

struct Engine_SetClothSleepLinearVelocity_Parms
{
	float                                              ClothSleepLinearVelocity;                         		// 0x000000 (0x0004)              
};

void USkeletalMeshComponent::SetClothSleepLinearVelocity(float ClothSleepLinearVelocity)
{
	static UFieldFunc* pFnSetClothSleepLinearVelocity = NULL;
	if(!pFnSetClothSleepLinearVelocity)
		pFnSetClothSleepLinearVelocity = UObject::FindFunction("Function Engine.SkeletalMeshComponent.SetClothSleepLinearVelocity");

	Engine_SetClothSleepLinearVelocity_Parms SetClothSleepLinearVelocity_Parms;
	SetClothSleepLinearVelocity_Parms.ClothSleepLinearVelocity = ClothSleepLinearVelocity;
	pFnSetClothSleepLinearVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClothSleepLinearVelocity,NULL,&SetClothSleepLinearVelocity_Parms,NULL);
	pFnSetClothSleepLinearVelocity->FunctionFlags |= 0x400;
}

struct Engine_StopFaceFXAnim_Parms
{
};

void USkeletalMeshComponent::StopFaceFXAnim()
{
	static UFieldFunc* pFnStopFaceFXAnim = NULL;
	if(!pFnStopFaceFXAnim)
		pFnStopFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshComponent.StopFaceFXAnim");

	Engine_StopFaceFXAnim_Parms StopFaceFXAnim_Parms;
	pFnStopFaceFXAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopFaceFXAnim,NULL,&StopFaceFXAnim_Parms,NULL);
	pFnStopFaceFXAnim->FunctionFlags |= 0x400;
}

struct Engine_AllAnimNodes_Parms
{
	class UClass*                                      BaseClass;                                        		// 0x000000 (0x0004)              
	class UAnimNode*                                   Node;                                             		// 0x000004 (0x0004)              
};

void USkeletalMeshComponent::AllAnimNodes(class UClass* BaseClass,class UAnimNode** Node)
{
	static UFieldFunc* pFnAllAnimNodes = NULL;
	if(!pFnAllAnimNodes)
		pFnAllAnimNodes = UObject::FindFunction("Function Engine.SkeletalMeshComponent.AllAnimNodes");

	Engine_AllAnimNodes_Parms AllAnimNodes_Parms;
	AllAnimNodes_Parms.BaseClass = BaseClass;
	pFnAllAnimNodes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAllAnimNodes,NULL,&AllAnimNodes_Parms,NULL);
	pFnAllAnimNodes->FunctionFlags |= 0x400;
	if(Node)
		*Node = AllAnimNodes_Parms.Node;
}

struct Engine_SetFrameRate_Parms
{
	float                                              NewFrameRate;                                     		// 0x000000 (0x0004)              
};

void USceneCaptureComponent::SetFrameRate(float NewFrameRate)
{
	static UFieldFunc* pFnSetFrameRate = NULL;
	if(!pFnSetFrameRate)
		pFnSetFrameRate = UObject::FindFunction("Function Engine.SceneCaptureComponent.SetFrameRate");

	Engine_SetFrameRate_Parms SetFrameRate_Parms;
	SetFrameRate_Parms.NewFrameRate = NewFrameRate;
	pFnSetFrameRate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFrameRate,NULL,&SetFrameRate_Parms,NULL);
	pFnSetFrameRate->FunctionFlags |= 0x400;
}

struct Engine_SetCaptureParameters_Parms
{
	class UTextureRenderTarget2D*                      NewTextureTarget;                                 		// 0x000000 (0x0004)              
	float                                              NewFOV;                                           		// 0x000004 (0x0004)              
	float                                              NewNearPlane;                                     		// 0x000008 (0x0004)              
	float                                              NewFarPlane;                                      		// 0x00000C (0x0004)              
};

void USceneCapture2DComponent::SetCaptureParameters(class UTextureRenderTarget2D* NewTextureTarget,float NewFOV,float NewNearPlane,float NewFarPlane)
{
	static UFieldFunc* pFnSetCaptureParameters = NULL;
	if(!pFnSetCaptureParameters)
		pFnSetCaptureParameters = UObject::FindFunction("Function Engine.SceneCapture2DComponent.SetCaptureParameters");

	Engine_SetCaptureParameters_Parms SetCaptureParameters_Parms;
	SetCaptureParameters_Parms.NewTextureTarget = NewTextureTarget;
	SetCaptureParameters_Parms.NewFOV = NewFOV;
	SetCaptureParameters_Parms.NewNearPlane = NewNearPlane;
	SetCaptureParameters_Parms.NewFarPlane = NewFarPlane;
	pFnSetCaptureParameters->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCaptureParameters,NULL,&SetCaptureParameters_Parms,NULL);
	pFnSetCaptureParameters->FunctionFlags |= 0x400;
}

struct Engine_SetView_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
	FRotator                                           NewRotation;                                      		// 0x00000C (0x000C)              
};

void USceneCapture2DComponent::SetView(FVector3 NewLocation,FRotator NewRotation)
{
	static UFieldFunc* pFnSetView = NULL;
	if(!pFnSetView)
		pFnSetView = UObject::FindFunction("Function Engine.SceneCapture2DComponent.SetView");

	Engine_SetView_Parms SetView_Parms;
	memcpy(&SetView_Parms.NewLocation,&NewLocation,0xC);
	memcpy(&SetView_Parms.NewRotation,&NewRotation,0xC);
	pFnSetView->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetView,NULL,&SetView_Parms,NULL);
	pFnSetView->FunctionFlags |= 0x400;
}

struct Engine_SetCaptureParameters_Parms
{
	class UTextureRenderTarget2D*                      NewTextureTarget;                                 		// 0x000000 (0x0004)              
	float                                              NewScaleFOV;                                      		// 0x000004 (0x0004)              
	class AActor*                                      NewViewDest;                                      		// 0x000008 (0x0004)              
};

void USceneCapturePortalComponent::SetCaptureParameters(class UTextureRenderTarget2D* NewTextureTarget,float NewScaleFOV,class AActor* NewViewDest)
{
	static UFieldFunc* pFnSetCaptureParameters = NULL;
	if(!pFnSetCaptureParameters)
		pFnSetCaptureParameters = UObject::FindFunction("Function Engine.SceneCapturePortalComponent.SetCaptureParameters");

	Engine_SetCaptureParameters_Parms SetCaptureParameters_Parms;
	SetCaptureParameters_Parms.NewTextureTarget = NewTextureTarget;
	SetCaptureParameters_Parms.NewScaleFOV = NewScaleFOV;
	SetCaptureParameters_Parms.NewViewDest = NewViewDest;
	pFnSetCaptureParameters->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCaptureParameters,NULL,&SetCaptureParameters_Parms,NULL);
	pFnSetCaptureParameters->FunctionFlags |= 0x400;
}

struct Engine_Play_Parms
{
	class UCameraAnim*                                 Anim;                                             		// 0x000000 (0x0004)              
	class AActor*                                      CamActor;                                         		// 0x000004 (0x0004)              
	float                                              InRate;                                           		// 0x000008 (0x0004)              
	float                                              InScale;                                          		// 0x00000C (0x0004)              
	float                                              InBlendInTime;                                    		// 0x000010 (0x0004)              
	float                                              InBlendOutTime;                                   		// 0x000014 (0x0004)              
	unsigned long                                      bInLoop : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bRandomStartTime : 1;                             		// 0x00001C (0x0004) [0x00000001] 
	float                                              Duration;                                         		// 0x000020 (0x0004)              
};

void UCameraAnimInst::Play(class UCameraAnim* Anim,class AActor* CamActor,float InRate,float InScale,float InBlendInTime,float InBlendOutTime,bool bInLoop,bool bRandomStartTime,float Duration)
{
	static UFieldFunc* pFnPlay = NULL;
	if(!pFnPlay)
		pFnPlay = UObject::FindFunction("Function Engine.CameraAnimInst.Play");

	Engine_Play_Parms Play_Parms;
	Play_Parms.Anim = Anim;
	Play_Parms.CamActor = CamActor;
	Play_Parms.InRate = InRate;
	Play_Parms.InScale = InScale;
	Play_Parms.InBlendInTime = InBlendInTime;
	Play_Parms.InBlendOutTime = InBlendOutTime;
	Play_Parms.bInLoop = bInLoop;
	Play_Parms.bRandomStartTime = bRandomStartTime;
	Play_Parms.Duration = Duration;
	pFnPlay->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlay,NULL,&Play_Parms,NULL);
	pFnPlay->FunctionFlags |= 0x400;
}

struct Engine_ApplyTransientScaling_Parms
{
	float                                              Scalar;                                           		// 0x000000 (0x0004)              
};

void UCameraAnimInst::ApplyTransientScaling(float Scalar)
{
	static UFieldFunc* pFnApplyTransientScaling = NULL;
	if(!pFnApplyTransientScaling)
		pFnApplyTransientScaling = UObject::FindFunction("Function Engine.CameraAnimInst.ApplyTransientScaling");

	Engine_ApplyTransientScaling_Parms ApplyTransientScaling_Parms;
	ApplyTransientScaling_Parms.Scalar = Scalar;
	pFnApplyTransientScaling->FunctionFlags |= ~0x400;
	ProcessEvent(pFnApplyTransientScaling,NULL,&ApplyTransientScaling_Parms,NULL);
	pFnApplyTransientScaling->FunctionFlags |= 0x400;
}

struct Engine_AdvanceAnim_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	unsigned long                                      bJump : 1;                                        		// 0x000004 (0x0004) [0x00000001] 
};

void UCameraAnimInst::AdvanceAnim(float DeltaTime,bool bJump)
{
	static UFieldFunc* pFnAdvanceAnim = NULL;
	if(!pFnAdvanceAnim)
		pFnAdvanceAnim = UObject::FindFunction("Function Engine.CameraAnimInst.AdvanceAnim");

	Engine_AdvanceAnim_Parms AdvanceAnim_Parms;
	AdvanceAnim_Parms.DeltaTime = DeltaTime;
	AdvanceAnim_Parms.bJump = bJump;
	pFnAdvanceAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAdvanceAnim,NULL,&AdvanceAnim_Parms,NULL);
	pFnAdvanceAnim->FunctionFlags |= 0x400;
}

struct Engine_Stop_Parms
{
	unsigned long                                      bImmediate : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UCameraAnimInst::Stop(bool bImmediate)
{
	static UFieldFunc* pFnStop = NULL;
	if(!pFnStop)
		pFnStop = UObject::FindFunction("Function Engine.CameraAnimInst.Stop");

	Engine_Stop_Parms Stop_Parms;
	Stop_Parms.bImmediate = bImmediate;
	pFnStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStop,NULL,&Stop_Parms,NULL);
	pFnStop->FunctionFlags |= 0x400;
}

struct Engine_DrawTexture_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	float                                              Scale;                                            		// 0x000004 (0x0004)              
};

void UCanvas::DrawTexture(class UTexture2D* Tex,float Scale)
{
	static UFieldFunc* pFnDrawTexture = NULL;
	if(!pFnDrawTexture)
		pFnDrawTexture = UObject::FindFunction("Function Engine.Canvas.DrawTexture");

	Engine_DrawTexture_Parms DrawTexture_Parms;
	DrawTexture_Parms.Tex = Tex;
	DrawTexture_Parms.Scale = Scale;
	ProcessEvent(pFnDrawTexture,NULL,&DrawTexture_Parms,NULL);
}

struct Engine_PopTransform_Parms
{
};

void UCanvas::PopTransform()
{
	static UFieldFunc* pFnPopTransform = NULL;
	if(!pFnPopTransform)
		pFnPopTransform = UObject::FindFunction("Function Engine.Canvas.PopTransform");

	Engine_PopTransform_Parms PopTransform_Parms;
	pFnPopTransform->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPopTransform,NULL,&PopTransform_Parms,NULL);
	pFnPopTransform->FunctionFlags |= 0x400;
}

struct Engine_DrawTextClipped_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
	unsigned long                                      bCheckHotKey : 1;                                 		// 0x00000C (0x0004) [0x00000001] 
	float                                              XScale;                                           		// 0x000010 (0x0004)              
	float                                              YScale;                                           		// 0x000014 (0x0004)              
};

void UCanvas::DrawTextClipped(struct FString Text,bool bCheckHotKey,float XScale,float YScale)
{
	static UFieldFunc* pFnDrawTextClipped = NULL;
	if(!pFnDrawTextClipped)
		pFnDrawTextClipped = UObject::FindFunction("Function Engine.Canvas.DrawTextClipped");

	Engine_DrawTextClipped_Parms DrawTextClipped_Parms;
	memcpy(&DrawTextClipped_Parms.Text,&Text,0xC);
	DrawTextClipped_Parms.bCheckHotKey = bCheckHotKey;
	DrawTextClipped_Parms.XScale = XScale;
	DrawTextClipped_Parms.YScale = YScale;
	pFnDrawTextClipped->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawTextClipped,NULL,&DrawTextClipped_Parms,NULL);
	pFnDrawTextClipped->FunctionFlags |= 0x400;
}

struct Engine_TextSize_Parms
{
	struct FString                                     String;                                           		// 0x000000 (0x000C)              
	float                                              XL;                                               		// 0x00000C (0x0004)              
	float                                              YL;                                               		// 0x000010 (0x0004)              
};

void UCanvas::TextSize(struct FString String,float* XL,float* YL)
{
	static UFieldFunc* pFnTextSize = NULL;
	if(!pFnTextSize)
		pFnTextSize = UObject::FindFunction("Function Engine.Canvas.TextSize");

	Engine_TextSize_Parms TextSize_Parms;
	memcpy(&TextSize_Parms.String,&String,0xC);
	pFnTextSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTextSize,NULL,&TextSize_Parms,NULL);
	pFnTextSize->FunctionFlags |= 0x400;
	if(XL)
		*XL = TextSize_Parms.XL;
	if(YL)
		*YL = TextSize_Parms.YL;
}

struct Engine_SetClip_Parms
{
	float                                              X;                                                		// 0x000000 (0x0004)              
	float                                              Y;                                                		// 0x000004 (0x0004)              
};

void UCanvas::SetClip(float X,float Y)
{
	static UFieldFunc* pFnSetClip = NULL;
	if(!pFnSetClip)
		pFnSetClip = UObject::FindFunction("Function Engine.Canvas.SetClip");

	Engine_SetClip_Parms SetClip_Parms;
	SetClip_Parms.X = X;
	SetClip_Parms.Y = Y;
	ProcessEvent(pFnSetClip,NULL,&SetClip_Parms,NULL);
}

struct Engine_Reset_Parms
{
	unsigned long                                      bKeepOrigin : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void UCanvas::Reset(bool bKeepOrigin)
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.Canvas.Reset");

	Engine_Reset_Parms Reset_Parms;
	Reset_Parms.bKeepOrigin = bKeepOrigin;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_DrawIcon_Parms
{
	struct FCanvasIcon                                 Icon;                                             		// 0x000000 (0x0014)              
	float                                              X;                                                		// 0x000014 (0x0004)              
	float                                              Y;                                                		// 0x000018 (0x0004)              
	float                                              Scale;                                            		// 0x00001C (0x0004)              
};

void UCanvas::DrawIcon(struct FCanvasIcon Icon,float X,float Y,float Scale)
{
	static UFieldFunc* pFnDrawIcon = NULL;
	if(!pFnDrawIcon)
		pFnDrawIcon = UObject::FindFunction("Function Engine.Canvas.DrawIcon");

	Engine_DrawIcon_Parms DrawIcon_Parms;
	memcpy(&DrawIcon_Parms.Icon,&Icon,0x14);
	DrawIcon_Parms.X = X;
	DrawIcon_Parms.Y = Y;
	DrawIcon_Parms.Scale = Scale;
	ProcessEvent(pFnDrawIcon,NULL,&DrawIcon_Parms,NULL);
}

struct Engine_DrawLine2D_Parms
{
	float                                              XL;                                               		// 0x000000 (0x0004)              
	float                                              YL;                                               		// 0x000004 (0x0004)              
};

void UCanvas::DrawLine2D(float XL,float YL)
{
	static UFieldFunc* pFnDrawLine2D = NULL;
	if(!pFnDrawLine2D)
		pFnDrawLine2D = UObject::FindFunction("Function Engine.Canvas.DrawLine2D");

	Engine_DrawLine2D_Parms DrawLine2D_Parms;
	DrawLine2D_Parms.XL = XL;
	DrawLine2D_Parms.YL = YL;
	pFnDrawLine2D->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawLine2D,NULL,&DrawLine2D_Parms,NULL);
	pFnDrawLine2D->FunctionFlags |= 0x400;
}

struct Engine_DrawMaterialTile_Parms
{
	class UMaterialInterface*                          Mat;                                              		// 0x000000 (0x0004)              
	float                                              XL;                                               		// 0x000004 (0x0004)              
	float                                              YL;                                               		// 0x000008 (0x0004)              
	float                                              U;                                                		// 0x00000C (0x0004)              
	float                                              V;                                                		// 0x000010 (0x0004)              
	float                                              UL;                                               		// 0x000014 (0x0004)              
	float                                              VL;                                               		// 0x000018 (0x0004)              
};

void UCanvas::DrawMaterialTile(class UMaterialInterface* Mat,float XL,float YL,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnDrawMaterialTile = NULL;
	if(!pFnDrawMaterialTile)
		pFnDrawMaterialTile = UObject::FindFunction("Function Engine.Canvas.DrawMaterialTile");

	Engine_DrawMaterialTile_Parms DrawMaterialTile_Parms;
	DrawMaterialTile_Parms.Mat = Mat;
	DrawMaterialTile_Parms.XL = XL;
	DrawMaterialTile_Parms.YL = YL;
	DrawMaterialTile_Parms.U = U;
	DrawMaterialTile_Parms.V = V;
	DrawMaterialTile_Parms.UL = UL;
	DrawMaterialTile_Parms.VL = VL;
	pFnDrawMaterialTile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawMaterialTile,NULL,&DrawMaterialTile_Parms,NULL);
	pFnDrawMaterialTile->FunctionFlags |= 0x400;
}

struct Engine_StrLen_Parms
{
	struct FString                                     String;                                           		// 0x000000 (0x000C)              
	float                                              XL;                                               		// 0x00000C (0x0004)              
	float                                              YL;                                               		// 0x000010 (0x0004)              
};

void UCanvas::StrLen(struct FString String,float* XL,float* YL)
{
	static UFieldFunc* pFnStrLen = NULL;
	if(!pFnStrLen)
		pFnStrLen = UObject::FindFunction("Function Engine.Canvas.StrLen");

	Engine_StrLen_Parms StrLen_Parms;
	memcpy(&StrLen_Parms.String,&String,0xC);
	pFnStrLen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStrLen,NULL,&StrLen_Parms,NULL);
	pFnStrLen->FunctionFlags |= 0x400;
	if(XL)
		*XL = StrLen_Parms.XL;
	if(YL)
		*YL = StrLen_Parms.YL;
}

struct Engine_DrawTile_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	float                                              XL;                                               		// 0x000004 (0x0004)              
	float                                              YL;                                               		// 0x000008 (0x0004)              
	float                                              U;                                                		// 0x00000C (0x0004)              
	float                                              V;                                                		// 0x000010 (0x0004)              
	float                                              UL;                                               		// 0x000014 (0x0004)              
	float                                              VL;                                               		// 0x000018 (0x0004)              
};

void UCanvas::DrawTile(class UTexture2D* Tex,float XL,float YL,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnDrawTile = NULL;
	if(!pFnDrawTile)
		pFnDrawTile = UObject::FindFunction("Function Engine.Canvas.DrawTile");

	Engine_DrawTile_Parms DrawTile_Parms;
	DrawTile_Parms.Tex = Tex;
	DrawTile_Parms.XL = XL;
	DrawTile_Parms.YL = YL;
	DrawTile_Parms.U = U;
	DrawTile_Parms.V = V;
	DrawTile_Parms.UL = UL;
	DrawTile_Parms.VL = VL;
	pFnDrawTile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawTile,NULL,&DrawTile_Parms,NULL);
	pFnDrawTile->FunctionFlags |= 0x400;
}

struct Engine_DrawTextureDoubleLine_Parms
{
	FVector3                                           StartPoint;                                       		// 0x000000 (0x000C)              
	FVector3                                           EndPoint;                                         		// 0x00000C (0x000C)              
	float                                              Perc;                                             		// 0x000018 (0x0004)              
	float                                              Spacing;                                          		// 0x00001C (0x0004)              
	float                                              Width;                                            		// 0x000020 (0x0004)              
	DWORD                                              LineColor;                                        		// 0x000024 (0x0004)              
	DWORD                                              AltLineColor;                                     		// 0x000028 (0x0004)              
	class UTexture2D*                                  Tex;                                              		// 0x00002C (0x0004)              
	float                                              U;                                                		// 0x000030 (0x0004)              
	float                                              V;                                                		// 0x000034 (0x0004)              
	float                                              UL;                                               		// 0x000038 (0x0004)              
	float                                              VL;                                               		// 0x00003C (0x0004)              
};

void UCanvas::DrawTextureDoubleLine(FVector3 StartPoint,FVector3 EndPoint,float Perc,float Spacing,float Width,DWORD LineColor,DWORD AltLineColor,class UTexture2D* Tex,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnDrawTextureDoubleLine = NULL;
	if(!pFnDrawTextureDoubleLine)
		pFnDrawTextureDoubleLine = UObject::FindFunction("Function Engine.Canvas.DrawTextureDoubleLine");

	Engine_DrawTextureDoubleLine_Parms DrawTextureDoubleLine_Parms;
	memcpy(&DrawTextureDoubleLine_Parms.StartPoint,&StartPoint,0xC);
	memcpy(&DrawTextureDoubleLine_Parms.EndPoint,&EndPoint,0xC);
	DrawTextureDoubleLine_Parms.Perc = Perc;
	DrawTextureDoubleLine_Parms.Spacing = Spacing;
	DrawTextureDoubleLine_Parms.Width = Width;
	memcpy(&DrawTextureDoubleLine_Parms.LineColor,&LineColor,0x4);
	memcpy(&DrawTextureDoubleLine_Parms.AltLineColor,&AltLineColor,0x4);
	DrawTextureDoubleLine_Parms.Tex = Tex;
	DrawTextureDoubleLine_Parms.U = U;
	DrawTextureDoubleLine_Parms.V = V;
	DrawTextureDoubleLine_Parms.UL = UL;
	DrawTextureDoubleLine_Parms.VL = VL;
	pFnDrawTextureDoubleLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawTextureDoubleLine,NULL,&DrawTextureDoubleLine_Parms,NULL);
	pFnDrawTextureDoubleLine->FunctionFlags |= 0x400;
}

struct Engine_PushTranslationMatrix_Parms
{
	FVector3                                           TranslationVector;                                		// 0x000000 (0x000C)              
};

void UCanvas::PushTranslationMatrix(FVector3 TranslationVector)
{
	static UFieldFunc* pFnPushTranslationMatrix = NULL;
	if(!pFnPushTranslationMatrix)
		pFnPushTranslationMatrix = UObject::FindFunction("Function Engine.Canvas.PushTranslationMatrix");

	Engine_PushTranslationMatrix_Parms PushTranslationMatrix_Parms;
	memcpy(&PushTranslationMatrix_Parms.TranslationVector,&TranslationVector,0xC);
	pFnPushTranslationMatrix->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPushTranslationMatrix,NULL,&PushTranslationMatrix_Parms,NULL);
	pFnPushTranslationMatrix->FunctionFlags |= 0x400;
}

struct Engine_DrawRotatedTile_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	FRotator                                           Rotation;                                         		// 0x000004 (0x000C)              
	float                                              XL;                                               		// 0x000010 (0x0004)              
	float                                              YL;                                               		// 0x000014 (0x0004)              
	float                                              U;                                                		// 0x000018 (0x0004)              
	float                                              V;                                                		// 0x00001C (0x0004)              
	float                                              UL;                                               		// 0x000020 (0x0004)              
	float                                              VL;                                               		// 0x000024 (0x0004)              
	float                                              AnchorX;                                          		// 0x000028 (0x0004)              
	float                                              AnchorY;                                          		// 0x00002C (0x0004)              
};

void UCanvas::DrawRotatedTile(class UTexture2D* Tex,FRotator Rotation,float XL,float YL,float U,float V,float UL,float VL,float AnchorX,float AnchorY)
{
	static UFieldFunc* pFnDrawRotatedTile = NULL;
	if(!pFnDrawRotatedTile)
		pFnDrawRotatedTile = UObject::FindFunction("Function Engine.Canvas.DrawRotatedTile");

	Engine_DrawRotatedTile_Parms DrawRotatedTile_Parms;
	DrawRotatedTile_Parms.Tex = Tex;
	memcpy(&DrawRotatedTile_Parms.Rotation,&Rotation,0xC);
	DrawRotatedTile_Parms.XL = XL;
	DrawRotatedTile_Parms.YL = YL;
	DrawRotatedTile_Parms.U = U;
	DrawRotatedTile_Parms.V = V;
	DrawRotatedTile_Parms.UL = UL;
	DrawRotatedTile_Parms.VL = VL;
	DrawRotatedTile_Parms.AnchorX = AnchorX;
	DrawRotatedTile_Parms.AnchorY = AnchorY;
	pFnDrawRotatedTile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawRotatedTile,NULL,&DrawRotatedTile_Parms,NULL);
	pFnDrawRotatedTile->FunctionFlags |= 0x400;
}

struct Engine_DrawColorizedTile_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	float                                              XL;                                               		// 0x000004 (0x0004)              
	float                                              YL;                                               		// 0x000008 (0x0004)              
	float                                              U;                                                		// 0x00000C (0x0004)              
	float                                              V;                                                		// 0x000010 (0x0004)              
	float                                              UL;                                               		// 0x000014 (0x0004)              
	float                                              VL;                                               		// 0x000018 (0x0004)              
	struct FLinearColor                                LColor;                                           		// 0x00001C (0x0010)              
};

void UCanvas::DrawColorizedTile(class UTexture2D* Tex,float XL,float YL,float U,float V,float UL,float VL,struct FLinearColor LColor)
{
	static UFieldFunc* pFnDrawColorizedTile = NULL;
	if(!pFnDrawColorizedTile)
		pFnDrawColorizedTile = UObject::FindFunction("Function Engine.Canvas.DrawColorizedTile");

	Engine_DrawColorizedTile_Parms DrawColorizedTile_Parms;
	DrawColorizedTile_Parms.Tex = Tex;
	DrawColorizedTile_Parms.XL = XL;
	DrawColorizedTile_Parms.YL = YL;
	DrawColorizedTile_Parms.U = U;
	DrawColorizedTile_Parms.V = V;
	DrawColorizedTile_Parms.UL = UL;
	DrawColorizedTile_Parms.VL = VL;
	memcpy(&DrawColorizedTile_Parms.LColor,&LColor,0x10);
	pFnDrawColorizedTile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawColorizedTile,NULL,&DrawColorizedTile_Parms,NULL);
	pFnDrawColorizedTile->FunctionFlags |= 0x400;
}

struct Engine_DrawTextRA_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
	unsigned long                                      CR : 1;                                           		// 0x00000C (0x0004) [0x00000001] 
	//float                                              XL;                                               		// 0x000010 (0x0004)              
	//float                                              YL;                                               		// 0x000014 (0x0004)              
};

void UCanvas::DrawTextRA(struct FString Text,bool CR)
{
	static UFieldFunc* pFnDrawTextRA = NULL;
	if(!pFnDrawTextRA)
		pFnDrawTextRA = UObject::FindFunction("Function Engine.Canvas.DrawTextRA");

	Engine_DrawTextRA_Parms DrawTextRA_Parms;
	memcpy(&DrawTextRA_Parms.Text,&Text,0xC);
	DrawTextRA_Parms.CR = CR;
	ProcessEvent(pFnDrawTextRA,NULL,&DrawTextRA_Parms,NULL);
}

struct Engine_DrawTextureLine_Parms
{
	FVector3                                           StartPoint;                                       		// 0x000000 (0x000C)              
	FVector3                                           EndPoint;                                         		// 0x00000C (0x000C)              
	float                                              Perc;                                             		// 0x000018 (0x0004)              
	float                                              Width;                                            		// 0x00001C (0x0004)              
	DWORD                                              LineColor;                                        		// 0x000020 (0x0004)              
	class UTexture2D*                                  LineTexture;                                      		// 0x000024 (0x0004)              
	float                                              U;                                                		// 0x000028 (0x0004)              
	float                                              V;                                                		// 0x00002C (0x0004)              
	float                                              UL;                                               		// 0x000030 (0x0004)              
	float                                              VL;                                               		// 0x000034 (0x0004)              
};

void UCanvas::DrawTextureLine(FVector3 StartPoint,FVector3 EndPoint,float Perc,float Width,DWORD LineColor,class UTexture2D* LineTexture,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnDrawTextureLine = NULL;
	if(!pFnDrawTextureLine)
		pFnDrawTextureLine = UObject::FindFunction("Function Engine.Canvas.DrawTextureLine");

	Engine_DrawTextureLine_Parms DrawTextureLine_Parms;
	memcpy(&DrawTextureLine_Parms.StartPoint,&StartPoint,0xC);
	memcpy(&DrawTextureLine_Parms.EndPoint,&EndPoint,0xC);
	DrawTextureLine_Parms.Perc = Perc;
	DrawTextureLine_Parms.Width = Width;
	memcpy(&DrawTextureLine_Parms.LineColor,&LineColor,0x4);
	DrawTextureLine_Parms.LineTexture = LineTexture;
	DrawTextureLine_Parms.U = U;
	DrawTextureLine_Parms.V = V;
	DrawTextureLine_Parms.UL = UL;
	DrawTextureLine_Parms.VL = VL;
	pFnDrawTextureLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawTextureLine,NULL,&DrawTextureLine_Parms,NULL);
	pFnDrawTextureLine->FunctionFlags |= 0x400;
}

struct Engine_DrawMaterialTileClipped_Parms
{
	class UMaterialInterface*                          Mat;                                              		// 0x000000 (0x0004)              
	float                                              XL;                                               		// 0x000004 (0x0004)              
	float                                              YL;                                               		// 0x000008 (0x0004)              
	float                                              U;                                                		// 0x00000C (0x0004)              
	float                                              V;                                                		// 0x000010 (0x0004)              
	float                                              UL;                                               		// 0x000014 (0x0004)              
	float                                              VL;                                               		// 0x000018 (0x0004)              
};

void UCanvas::DrawMaterialTileClipped(class UMaterialInterface* Mat,float XL,float YL,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnDrawMaterialTileClipped = NULL;
	if(!pFnDrawMaterialTileClipped)
		pFnDrawMaterialTileClipped = UObject::FindFunction("Function Engine.Canvas.DrawMaterialTileClipped");

	Engine_DrawMaterialTileClipped_Parms DrawMaterialTileClipped_Parms;
	DrawMaterialTileClipped_Parms.Mat = Mat;
	DrawMaterialTileClipped_Parms.XL = XL;
	DrawMaterialTileClipped_Parms.YL = YL;
	DrawMaterialTileClipped_Parms.U = U;
	DrawMaterialTileClipped_Parms.V = V;
	DrawMaterialTileClipped_Parms.UL = UL;
	DrawMaterialTileClipped_Parms.VL = VL;
	pFnDrawMaterialTileClipped->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawMaterialTileClipped,NULL,&DrawMaterialTileClipped_Parms,NULL);
	pFnDrawMaterialTileClipped->FunctionFlags |= 0x400;
}

struct Engine_DrawRect_Parms
{
	float                                              RectX;                                            		// 0x000000 (0x0004)              
	float                                              RectY;                                            		// 0x000004 (0x0004)              
	class UTexture2D*                                  Tex;                                              		// 0x000008 (0x0004)              
};

void UCanvas::DrawRect(float RectX,float RectY,class UTexture2D* Tex)
{
	static UFieldFunc* pFnDrawRect = NULL;
	if(!pFnDrawRect)
		pFnDrawRect = UObject::FindFunction("Function Engine.Canvas.DrawRect");

	Engine_DrawRect_Parms DrawRect_Parms;
	DrawRect_Parms.RectX = RectX;
	DrawRect_Parms.RectY = RectY;
	DrawRect_Parms.Tex = Tex;
	pFnDrawRect->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawRect,NULL,&DrawRect_Parms,NULL);
	pFnDrawRect->FunctionFlags |= 0x400;
}

struct Engine_DrawTileStretched_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	float                                              Left;                                             		// 0x000004 (0x0004)              
	float                                              Top;                                              		// 0x000008 (0x0004)              
	float                                              AWidth;                                           		// 0x00000C (0x0004)              
	float                                              AHeight;                                          		// 0x000010 (0x0004)              
	float                                              U;                                                		// 0x000014 (0x0004)              
	float                                              V;                                                		// 0x000018 (0x0004)              
	float                                              UL;                                               		// 0x00001C (0x0004)              
	float                                              VL;                                               		// 0x000020 (0x0004)              
	struct FLinearColor                                LDrawColor;                                       		// 0x000024 (0x0010)              
	unsigned long                                      bStretchHorizontally : 1;                         		// 0x000034 (0x0004) [0x00000001] 
	unsigned long                                      bStretchVertically : 1;                           		// 0x000038 (0x0004) [0x00000001] 
	float                                              ScalingFactor;                                    		// 0x00003C (0x0004)              
};

void UCanvas::DrawTileStretched(class UTexture2D* Tex,float Left,float Top,float AWidth,float AHeight,float U,float V,float UL,float VL,struct FLinearColor LDrawColor,bool bStretchHorizontally,bool bStretchVertically,float ScalingFactor)
{
	static UFieldFunc* pFnDrawTileStretched = NULL;
	if(!pFnDrawTileStretched)
		pFnDrawTileStretched = UObject::FindFunction("Function Engine.Canvas.DrawTileStretched");

	Engine_DrawTileStretched_Parms DrawTileStretched_Parms;
	DrawTileStretched_Parms.Tex = Tex;
	DrawTileStretched_Parms.Left = Left;
	DrawTileStretched_Parms.Top = Top;
	DrawTileStretched_Parms.AWidth = AWidth;
	DrawTileStretched_Parms.AHeight = AHeight;
	DrawTileStretched_Parms.U = U;
	DrawTileStretched_Parms.V = V;
	DrawTileStretched_Parms.UL = UL;
	DrawTileStretched_Parms.VL = VL;
	memcpy(&DrawTileStretched_Parms.LDrawColor,&LDrawColor,0x10);
	DrawTileStretched_Parms.bStretchHorizontally = bStretchHorizontally;
	DrawTileStretched_Parms.bStretchVertically = bStretchVertically;
	DrawTileStretched_Parms.ScalingFactor = ScalingFactor;
	pFnDrawTileStretched->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawTileStretched,NULL,&DrawTileStretched_Parms,NULL);
	pFnDrawTileStretched->FunctionFlags |= 0x400;
}

struct Engine_DrawQuad_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	float                                              XL;                                               		// 0x000004 (0x0004)              
	float                                              YL;                                               		// 0x000008 (0x0004)              
	float                                              U1;                                               		// 0x00000C (0x0004)              
	float                                              v1;                                               		// 0x000010 (0x0004)              
	float                                              U2;                                               		// 0x000014 (0x0004)              
	float                                              v2;                                               		// 0x000018 (0x0004)              
	float                                              U3;                                               		// 0x00001C (0x0004)              
	float                                              V3;                                               		// 0x000020 (0x0004)              
	float                                              U4;                                               		// 0x000024 (0x0004)              
	float                                              V4;                                               		// 0x000028 (0x0004)              
};

void UCanvas::DrawQuad(class UTexture2D* Tex,float XL,float YL,float U1,float v1,float U2,float v2,float U3,float V3,float U4,float V4)
{
	static UFieldFunc* pFnDrawQuad = NULL;
	if(!pFnDrawQuad)
		pFnDrawQuad = UObject::FindFunction("Function Engine.Canvas.DrawQuad");

	Engine_DrawQuad_Parms DrawQuad_Parms;
	DrawQuad_Parms.Tex = Tex;
	DrawQuad_Parms.XL = XL;
	DrawQuad_Parms.YL = YL;
	DrawQuad_Parms.U1 = U1;
	DrawQuad_Parms.v1 = v1;
	DrawQuad_Parms.U2 = U2;
	DrawQuad_Parms.v2 = v2;
	DrawQuad_Parms.U3 = U3;
	DrawQuad_Parms.V3 = V3;
	DrawQuad_Parms.U4 = U4;
	DrawQuad_Parms.V4 = V4;
	pFnDrawQuad->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawQuad,NULL,&DrawQuad_Parms,NULL);
	pFnDrawQuad->FunctionFlags |= 0x400;
}

struct Engine_SetPos_Parms
{
	float                                              PosX;                                             		// 0x000000 (0x0004)              
	float                                              PosY;                                             		// 0x000004 (0x0004)              
};

void UCanvas::SetPos(float PosX,float PosY)
{
	static UFieldFunc* pFnSetPos = NULL;
	if(!pFnSetPos)
		pFnSetPos = UObject::FindFunction("Function Engine.Canvas.SetPos");

	Engine_SetPos_Parms SetPos_Parms;
	SetPos_Parms.PosX = PosX;
	SetPos_Parms.PosY = PosY;
	pFnSetPos->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPos,NULL,&SetPos_Parms,NULL);
	pFnSetPos->FunctionFlags |= 0x400;
}

struct Engine_SetDrawColor_Parms
{
	unsigned char                                      R;                                                		// 0x000000 (0x0001)              
	unsigned char                                      G;                                                		// 0x000001 (0x0001)              
	unsigned char                                      B;                                                		// 0x000002 (0x0001)              
	unsigned char                                      A;                                                		// 0x000003 (0x0001)              
};

void UCanvas::SetDrawColor(unsigned char R,unsigned char G,unsigned char B,unsigned char A)
{
	static UFieldFunc* pFnSetDrawColor = NULL;
	if(!pFnSetDrawColor)
		pFnSetDrawColor = UObject::FindFunction("Function Engine.Canvas.SetDrawColor");

	Engine_SetDrawColor_Parms SetDrawColor_Parms;
	SetDrawColor_Parms.R = R;
	SetDrawColor_Parms.G = G;
	SetDrawColor_Parms.B = B;
	SetDrawColor_Parms.A = A;
	pFnSetDrawColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDrawColor,NULL,&SetDrawColor_Parms,NULL);
	pFnSetDrawColor->FunctionFlags |= 0x400;
}

struct Engine_DrawRotatedMaterialTile_Parms
{
	class UMaterialInterface*                          Mat;                                              		// 0x000000 (0x0004)              
	FRotator                                           Rotation;                                         		// 0x000004 (0x000C)              
	float                                              XL;                                               		// 0x000010 (0x0004)              
	float                                              YL;                                               		// 0x000014 (0x0004)              
	float                                              U;                                                		// 0x000018 (0x0004)              
	float                                              V;                                                		// 0x00001C (0x0004)              
	float                                              UL;                                               		// 0x000020 (0x0004)              
	float                                              VL;                                               		// 0x000024 (0x0004)              
	float                                              AnchorX;                                          		// 0x000028 (0x0004)              
	float                                              AnchorY;                                          		// 0x00002C (0x0004)              
};

void UCanvas::DrawRotatedMaterialTile(class UMaterialInterface* Mat,FRotator Rotation,float XL,float YL,float U,float V,float UL,float VL,float AnchorX,float AnchorY)
{
	static UFieldFunc* pFnDrawRotatedMaterialTile = NULL;
	if(!pFnDrawRotatedMaterialTile)
		pFnDrawRotatedMaterialTile = UObject::FindFunction("Function Engine.Canvas.DrawRotatedMaterialTile");

	Engine_DrawRotatedMaterialTile_Parms DrawRotatedMaterialTile_Parms;
	DrawRotatedMaterialTile_Parms.Mat = Mat;
	memcpy(&DrawRotatedMaterialTile_Parms.Rotation,&Rotation,0xC);
	DrawRotatedMaterialTile_Parms.XL = XL;
	DrawRotatedMaterialTile_Parms.YL = YL;
	DrawRotatedMaterialTile_Parms.U = U;
	DrawRotatedMaterialTile_Parms.V = V;
	DrawRotatedMaterialTile_Parms.UL = UL;
	DrawRotatedMaterialTile_Parms.VL = VL;
	DrawRotatedMaterialTile_Parms.AnchorX = AnchorX;
	DrawRotatedMaterialTile_Parms.AnchorY = AnchorY;
	pFnDrawRotatedMaterialTile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawRotatedMaterialTile,NULL,&DrawRotatedMaterialTile_Parms,NULL);
	pFnDrawRotatedMaterialTile->FunctionFlags |= 0x400;
}

struct Engine_DrawBox_Parms
{
	float                                              Width;                                            		// 0x000000 (0x0004)              
	float                                              Height;                                           		// 0x000004 (0x0004)              
	//int                                                X;                                                		// 0x000008 (0x0004)              
	//int                                                Y;                                                		// 0x00000C (0x0004)              
};

void UCanvas::DrawBox(float Width,float Height)
{
	static UFieldFunc* pFnDrawBox = NULL;
	if(!pFnDrawBox)
		pFnDrawBox = UObject::FindFunction("Function Engine.Canvas.DrawBox");

	Engine_DrawBox_Parms DrawBox_Parms;
	DrawBox_Parms.Width = Width;
	DrawBox_Parms.Height = Height;
	ProcessEvent(pFnDrawBox,NULL,&DrawBox_Parms,NULL);
}

struct Engine_Draw2DLine_Parms
{
	float                                              X1;                                               		// 0x000000 (0x0004)              
	float                                              Y1;                                               		// 0x000004 (0x0004)              
	float                                              X2;                                               		// 0x000008 (0x0004)              
	float                                              Y2;                                               		// 0x00000C (0x0004)              
	DWORD                                              LineColor;                                        		// 0x000010 (0x0004)              
};

void UCanvas::Draw2DLine(float X1,float Y1,float X2,float Y2,DWORD LineColor)
{
	static UFieldFunc* pFnDraw2DLine = NULL;
	if(!pFnDraw2DLine)
		pFnDraw2DLine = UObject::FindFunction("Function Engine.Canvas.Draw2DLine");

	Engine_Draw2DLine_Parms Draw2DLine_Parms;
	Draw2DLine_Parms.X1 = X1;
	Draw2DLine_Parms.Y1 = Y1;
	Draw2DLine_Parms.X2 = X2;
	Draw2DLine_Parms.Y2 = Y2;
	memcpy(&Draw2DLine_Parms.LineColor,&LineColor,0x4);
	pFnDraw2DLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDraw2DLine,NULL,&Draw2DLine_Parms,NULL);
	pFnDraw2DLine->FunctionFlags |= 0x400;
}

struct Engine_DrawTileClipped_Parms
{
	class UTexture2D*                                  Tex;                                              		// 0x000000 (0x0004)              
	float                                              XL;                                               		// 0x000004 (0x0004)              
	float                                              YL;                                               		// 0x000008 (0x0004)              
	float                                              U;                                                		// 0x00000C (0x0004)              
	float                                              V;                                                		// 0x000010 (0x0004)              
	float                                              UL;                                               		// 0x000014 (0x0004)              
	float                                              VL;                                               		// 0x000018 (0x0004)              
};

void UCanvas::DrawTileClipped(class UTexture2D* Tex,float XL,float YL,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnDrawTileClipped = NULL;
	if(!pFnDrawTileClipped)
		pFnDrawTileClipped = UObject::FindFunction("Function Engine.Canvas.DrawTileClipped");

	Engine_DrawTileClipped_Parms DrawTileClipped_Parms;
	DrawTileClipped_Parms.Tex = Tex;
	DrawTileClipped_Parms.XL = XL;
	DrawTileClipped_Parms.YL = YL;
	DrawTileClipped_Parms.U = U;
	DrawTileClipped_Parms.V = V;
	DrawTileClipped_Parms.UL = UL;
	DrawTileClipped_Parms.VL = VL;

	unsigned short NativeIndex = pFnDrawTileClipped->iNative;
	pFnDrawTileClipped->iNative = 0;
	pFnDrawTileClipped->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawTileClipped,NULL,&DrawTileClipped_Parms,NULL);
	pFnDrawTileClipped->FunctionFlags |= 0x400;
	pFnDrawTileClipped->iNative = NativeIndex;
}

struct Engine_Project_Parms
{
	FVector3                                           Location;                                         		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 UCanvas::Project(FVector3 Location)
{
	static UFieldFunc* pFnProject = NULL;
	if(!pFnProject)
		pFnProject = UObject::FindFunction("Function Engine.Canvas.Project");

	Engine_Project_Parms Project_Parms;
	memcpy(&Project_Parms.Location,&Location,0xC);
	pFnProject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProject,NULL,&Project_Parms,NULL);
	pFnProject->FunctionFlags |= 0x400;
	return Project_Parms.ReturnValue;
}

struct Engine_SetOrigin_Parms
{
	float                                              X;                                                		// 0x000000 (0x0004)              
	float                                              Y;                                                		// 0x000004 (0x0004)              
};

void UCanvas::SetOrigin(float X,float Y)
{
	static UFieldFunc* pFnSetOrigin = NULL;
	if(!pFnSetOrigin)
		pFnSetOrigin = UObject::FindFunction("Function Engine.Canvas.SetOrigin");

	Engine_SetOrigin_Parms SetOrigin_Parms;
	SetOrigin_Parms.X = X;
	SetOrigin_Parms.Y = Y;
	ProcessEvent(pFnSetOrigin,NULL,&SetOrigin_Parms,NULL);
}

struct Engine_MakeIcon_Parms
{
	class UTexture2D*                                  Texture;                                          		// 0x000000 (0x0004)              
	float                                              U;                                                		// 0x000004 (0x0004)              
	float                                              V;                                                		// 0x000008 (0x0004)              
	float                                              UL;                                               		// 0x00000C (0x0004)              
	float                                              VL;                                               		// 0x000010 (0x0004)              
	struct FCanvasIcon                                 ReturnValue;                                      		// 0x000014 (0x0014)              
	//struct FCanvasIcon                                 Icon;                                             		// 0x000028 (0x0014)              
};

struct FCanvasIcon UCanvas::MakeIcon(class UTexture2D* Texture,float U,float V,float UL,float VL)
{
	static UFieldFunc* pFnMakeIcon = NULL;
	if(!pFnMakeIcon)
		pFnMakeIcon = UObject::FindFunction("Function Engine.Canvas.MakeIcon");

	Engine_MakeIcon_Parms MakeIcon_Parms;
	MakeIcon_Parms.Texture = Texture;
	MakeIcon_Parms.U = U;
	MakeIcon_Parms.V = V;
	MakeIcon_Parms.UL = UL;
	MakeIcon_Parms.VL = VL;
	ProcessEvent(pFnMakeIcon,NULL,&MakeIcon_Parms,NULL);
	return MakeIcon_Parms.ReturnValue;
}

struct Engine_CreateFontRenderInfo_Parms
{
	unsigned long                                      bClipText : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableShadow : 1;                                		// 0x000004 (0x0004) [0x00000001] 
	struct FLinearColor                                GlowColor;                                        		// 0x000008 (0x0010)              
	FVector2                                           GlowOuterRadius;                                  		// 0x000018 (0x0008)              
	FVector2                                           GlowInnerRadius;                                  		// 0x000020 (0x0008)              
	struct FFontRenderInfo                             ReturnValue;                                      		// 0x000028 (0x0028)              
	//struct FFontRenderInfo                             Result;                                           		// 0x000050 (0x0028)              
};

struct FFontRenderInfo UCanvas::CreateFontRenderInfo(bool bClipText,bool bEnableShadow,struct FLinearColor GlowColor,FVector2 GlowOuterRadius,FVector2 GlowInnerRadius)
{
	static UFieldFunc* pFnCreateFontRenderInfo = NULL;
	if(!pFnCreateFontRenderInfo)
		pFnCreateFontRenderInfo = UObject::FindFunction("Function Engine.Canvas.CreateFontRenderInfo");

	Engine_CreateFontRenderInfo_Parms CreateFontRenderInfo_Parms;
	CreateFontRenderInfo_Parms.bClipText = bClipText;
	CreateFontRenderInfo_Parms.bEnableShadow = bEnableShadow;
	memcpy(&CreateFontRenderInfo_Parms.GlowColor,&GlowColor,0x10);
	memcpy(&CreateFontRenderInfo_Parms.GlowOuterRadius,&GlowOuterRadius,0x8);
	memcpy(&CreateFontRenderInfo_Parms.GlowInnerRadius,&GlowInnerRadius,0x8);
	ProcessEvent(pFnCreateFontRenderInfo,NULL,&CreateFontRenderInfo_Parms,NULL);
	return CreateFontRenderInfo_Parms.ReturnValue;
}

struct Engine_DrawText_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
	unsigned long                                      CR : 1;                                           		// 0x00000C (0x0004) [0x00000001] 
	float                                              XScale;                                           		// 0x000010 (0x0004)              
	float                                              YScale;                                           		// 0x000014 (0x0004)              
};

void UCanvas::DrawText(struct FString Text,bool CR,float XScale,float YScale)
{
	static UFieldFunc* pFnDrawText = NULL;
	if(!pFnDrawText)
		pFnDrawText = UObject::FindFunction("Function Engine.Canvas.DrawText");

	Engine_DrawText_Parms DrawText_Parms;
	memcpy(&DrawText_Parms.Text,&Text,0xC);
	DrawText_Parms.CR = CR;
	DrawText_Parms.XScale = XScale;
	DrawText_Parms.YScale = YScale;
	pFnDrawText->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDrawText,NULL,&DrawText_Parms,NULL);
	pFnDrawText->FunctionFlags |= 0x400;
}

struct Engine_DrawIconSection_Parms
{
	struct FCanvasIcon                                 Icon;                                             		// 0x000000 (0x0014)              
	float                                              X;                                                		// 0x000014 (0x0004)              
	float                                              Y;                                                		// 0x000018 (0x0004)              
	float                                              UStartPct;                                        		// 0x00001C (0x0004)              
	float                                              VStartPct;                                        		// 0x000020 (0x0004)              
	float                                              UEndPct;                                          		// 0x000024 (0x0004)              
	float                                              VEndPct;                                          		// 0x000028 (0x0004)              
	float                                              Scale;                                            		// 0x00002C (0x0004)              
};

void UCanvas::DrawIconSection(struct FCanvasIcon Icon,float X,float Y,float UStartPct,float VStartPct,float UEndPct,float VEndPct,float Scale)
{
	static UFieldFunc* pFnDrawIconSection = NULL;
	if(!pFnDrawIconSection)
		pFnDrawIconSection = UObject::FindFunction("Function Engine.Canvas.DrawIconSection");

	Engine_DrawIconSection_Parms DrawIconSection_Parms;
	memcpy(&DrawIconSection_Parms.Icon,&Icon,0x14);
	DrawIconSection_Parms.X = X;
	DrawIconSection_Parms.Y = Y;
	DrawIconSection_Parms.UStartPct = UStartPct;
	DrawIconSection_Parms.VStartPct = VStartPct;
	DrawIconSection_Parms.UEndPct = UEndPct;
	DrawIconSection_Parms.VEndPct = VEndPct;
	DrawIconSection_Parms.Scale = Scale;
	ProcessEvent(pFnDrawIconSection,NULL,&DrawIconSection_Parms,NULL);
}

struct Engine_NotifyActorIrrelevant_Parms
{
	class AActor*                                      pActor;                                           		// 0x000000 (0x0004)              
};

void UcBuildManagerBase::NotifyActorIrrelevant(class AActor* pActor)
{
	static UFieldFunc* pFnNotifyActorIrrelevant = NULL;
	if(!pFnNotifyActorIrrelevant)
		pFnNotifyActorIrrelevant = UObject::FindFunction("Function Engine.cBuildManagerBase.NotifyActorIrrelevant");

	Engine_NotifyActorIrrelevant_Parms NotifyActorIrrelevant_Parms;
	NotifyActorIrrelevant_Parms.pActor = pActor;
	ProcessEvent(pFnNotifyActorIrrelevant,NULL,&NotifyActorIrrelevant_Parms,NULL);
}

struct Engine_SetIdleTimeBudget_Parms
{
	unsigned long                                      bStreamWithTimeReserve : 1;                       		// 0x000000 (0x0004) [0x00000001] 
};

void UcBuildManagerBase::SetIdleTimeBudget(bool bStreamWithTimeReserve)
{
	static UFieldFunc* pFnSetIdleTimeBudget = NULL;
	if(!pFnSetIdleTimeBudget)
		pFnSetIdleTimeBudget = UObject::FindFunction("Function Engine.cBuildManagerBase.SetIdleTimeBudget");

	Engine_SetIdleTimeBudget_Parms SetIdleTimeBudget_Parms;
	SetIdleTimeBudget_Parms.bStreamWithTimeReserve = bStreamWithTimeReserve;
	pFnSetIdleTimeBudget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIdleTimeBudget,NULL,&SetIdleTimeBudget_Parms,NULL);
	pFnSetIdleTimeBudget->FunctionFlags |= 0x400;
}

struct Engine_SetIngameTimeBudget_Parms
{
	unsigned long                                      bAction : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void UcBuildManagerBase::SetIngameTimeBudget(bool bAction)
{
	static UFieldFunc* pFnSetIngameTimeBudget = NULL;
	if(!pFnSetIngameTimeBudget)
		pFnSetIngameTimeBudget = UObject::FindFunction("Function Engine.cBuildManagerBase.SetIngameTimeBudget");

	Engine_SetIngameTimeBudget_Parms SetIngameTimeBudget_Parms;
	SetIngameTimeBudget_Parms.bAction = bAction;
	pFnSetIngameTimeBudget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIngameTimeBudget,NULL,&SetIngameTimeBudget_Parms,NULL);
	pFnSetIngameTimeBudget->FunctionFlags |= 0x400;
}

struct Engine_SetThumbTimeBudget_Parms
{
};

void UcBuildManagerBase::SetThumbTimeBudget()
{
	static UFieldFunc* pFnSetThumbTimeBudget = NULL;
	if(!pFnSetThumbTimeBudget)
		pFnSetThumbTimeBudget = UObject::FindFunction("Function Engine.cBuildManagerBase.SetThumbTimeBudget");

	Engine_SetThumbTimeBudget_Parms SetThumbTimeBudget_Parms;
	pFnSetThumbTimeBudget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetThumbTimeBudget,NULL,&SetThumbTimeBudget_Parms,NULL);
	pFnSetThumbTimeBudget->FunctionFlags |= 0x400;
}

struct Engine_AddItem_Parms
{
	struct FString                                     r_ItemName;                                       		// 0x000000 (0x000C)              
	struct FString                                     r_UsageString;                                    		// 0x00000C (0x000C)              
	struct FString                                     r_HelpString;                                     		// 0x000018 (0x000C)              
	int                                                ReturnValue;                                      		// 0x000024 (0x0004)              
	//int                                                l_CurIdx;                                         		// 0x000028 (0x0004)              
};

int UcConsoleCmdDebugPage::AddItem(struct FString r_ItemName,struct FString r_UsageString,struct FString r_HelpString)
{
	static UFieldFunc* pFnAddItem = NULL;
	if(!pFnAddItem)
		pFnAddItem = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.AddItem");

	Engine_AddItem_Parms AddItem_Parms;
	memcpy(&AddItem_Parms.r_ItemName,&r_ItemName,0xC);
	memcpy(&AddItem_Parms.r_UsageString,&r_UsageString,0xC);
	memcpy(&AddItem_Parms.r_HelpString,&r_HelpString,0xC);
	ProcessEvent(pFnAddItem,NULL,&AddItem_Parms,NULL);
	return AddItem_Parms.ReturnValue;
}

struct Engine_DrawPage_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//float                                              l_ItemSizeX;                                      		// 0x000008 (0x0004)              
	//float                                              l_ItemSizeY;                                      		// 0x00000C (0x0004)              
};

void UcConsoleCmdDebugPage::DrawPage(class UCanvas* Canvas)
{
	static UFieldFunc* pFnDrawPage = NULL;
	if(!pFnDrawPage)
		pFnDrawPage = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.DrawPage");

	Engine_DrawPage_Parms DrawPage_Parms;
	DrawPage_Parms.Canvas = Canvas;
	ProcessEvent(pFnDrawPage,NULL,&DrawPage_Parms,NULL);
}

struct Engine_MoveToPrevItem_Parms
{
};

void UcConsoleCmdDebugPage::MoveToPrevItem()
{
	static UFieldFunc* pFnMoveToPrevItem = NULL;
	if(!pFnMoveToPrevItem)
		pFnMoveToPrevItem = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.MoveToPrevItem");

	Engine_MoveToPrevItem_Parms MoveToPrevItem_Parms;
	ProcessEvent(pFnMoveToPrevItem,NULL,&MoveToPrevItem_Parms,NULL);
}

struct Engine_ActivateItem_Parms
{
};

void UcConsoleCmdDebugPage::ActivateItem()
{
	static UFieldFunc* pFnActivateItem = NULL;
	if(!pFnActivateItem)
		pFnActivateItem = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.ActivateItem");

	Engine_ActivateItem_Parms ActivateItem_Parms;
	ProcessEvent(pFnActivateItem,NULL,&ActivateItem_Parms,NULL);
}

struct Engine_MoveToNextItem_Parms
{
};

void UcConsoleCmdDebugPage::MoveToNextItem()
{
	static UFieldFunc* pFnMoveToNextItem = NULL;
	if(!pFnMoveToNextItem)
		pFnMoveToNextItem = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.MoveToNextItem");

	Engine_MoveToNextItem_Parms MoveToNextItem_Parms;
	ProcessEvent(pFnMoveToNextItem,NULL,&MoveToNextItem_Parms,NULL);
}

struct Engine_Init_Parms
{
	class UObject*                                     r_Obj;                                            		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//class UcDebugPage*                                 l_DebugPage;                                      		// 0x000008 (0x0004)              
};

int UcConsoleCmdDebugPage::Init(class UObject* r_Obj)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.Init");

	Engine_Init_Parms Init_Parms;
	Init_Parms.r_Obj = r_Obj;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	return Init_Parms.ReturnValue;
}

struct Engine_Clear_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UcConsoleCmdDebugPage::Clear()
{
	static UFieldFunc* pFnClear = NULL;
	if(!pFnClear)
		pFnClear = UObject::FindFunction("Function Engine.cConsoleCmdDebugPage.Clear");

	Engine_Clear_Parms Clear_Parms;
	ProcessEvent(pFnClear,NULL,&Clear_Parms,NULL);
	return Clear_Parms.ReturnValue;
}

struct Engine_ExecCommand_DelegateToCommandPointer_Parms
{
	unsigned char                                      eMode;                                            		// 0x000000 (0x0001)              
	TArray<struct FString>                             arguments;                                        		// 0x000004 (0x000C)              
	class UcConsoleCommandManager*                     manager;                                          		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UcConsoleCommand::ExecCommand_DelegateToCommandPointer(unsigned char eMode,TArray<struct FString> arguments,class UcConsoleCommandManager* manager)
{
	static UFieldFunc* pFnExecCommand_DelegateToCommandPointer = NULL;
	if(!pFnExecCommand_DelegateToCommandPointer)
		pFnExecCommand_DelegateToCommandPointer = UObject::FindFunction("Function Engine.cConsoleCommand.ExecCommand_DelegateToCommandPointer");

	Engine_ExecCommand_DelegateToCommandPointer_Parms ExecCommand_DelegateToCommandPointer_Parms;
	ExecCommand_DelegateToCommandPointer_Parms.eMode = eMode;
	memcpy(&ExecCommand_DelegateToCommandPointer_Parms.arguments,&arguments,0xC);
	ExecCommand_DelegateToCommandPointer_Parms.manager = manager;
	pFnExecCommand_DelegateToCommandPointer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnExecCommand_DelegateToCommandPointer,NULL,&ExecCommand_DelegateToCommandPointer_Parms,NULL);
	pFnExecCommand_DelegateToCommandPointer->FunctionFlags |= 0x400;
	return ExecCommand_DelegateToCommandPointer_Parms.ReturnValue;
}

struct Engine_ExecCommand_Parms
{
	unsigned char                                      eMode;                                            		// 0x000000 (0x0001)              
	TArray<struct FString>                             arguments;                                        		// 0x000004 (0x000C)              
	class UcConsoleCommandManager*                     manager;                                          		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UcConsoleCommand::ExecCommand(unsigned char eMode,TArray<struct FString> arguments,class UcConsoleCommandManager* manager)
{
	static UFieldFunc* pFnExecCommand = NULL;
	if(!pFnExecCommand)
		pFnExecCommand = UObject::FindFunction("Function Engine.cConsoleCommand.ExecCommand");

	Engine_ExecCommand_Parms ExecCommand_Parms;
	ExecCommand_Parms.eMode = eMode;
	memcpy(&ExecCommand_Parms.arguments,&arguments,0xC);
	ExecCommand_Parms.manager = manager;
	ProcessEvent(pFnExecCommand,NULL,&ExecCommand_Parms,NULL);
	return ExecCommand_Parms.ReturnValue;
}

struct Engine_GetCompletion_Parms
{
	TArray<struct FString>                             completions;                                      		// 0x000000 (0x000C)              
	struct FString                                     cmdStart;                                         		// 0x00000C (0x000C)              
};

void UcConsoleCommandManager::GetCompletion(TArray<struct FString>* completions,struct FString cmdStart)
{
	static UFieldFunc* pFnGetCompletion = NULL;
	if(!pFnGetCompletion)
		pFnGetCompletion = UObject::FindFunction("Function Engine.cConsoleCommandManager.GetCompletion");

	Engine_GetCompletion_Parms GetCompletion_Parms;
	memcpy(&GetCompletion_Parms.cmdStart,&cmdStart,0xC);
	pFnGetCompletion->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCompletion,NULL,&GetCompletion_Parms,NULL);
	pFnGetCompletion->FunctionFlags |= 0x400;
	if(completions)
		memcpy(completions,&GetCompletion_Parms.completions,0xC);
}

struct Engine_Print_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void UcConsoleCommandManager::Print(struct FString Text)
{
	static UFieldFunc* pFnPrint = NULL;
	if(!pFnPrint)
		pFnPrint = UObject::FindFunction("Function Engine.cConsoleCommandManager.Print");

	Engine_Print_Parms Print_Parms;
	memcpy(&Print_Parms.Text,&Text,0xC);
	pFnPrint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPrint,NULL,&Print_Parms,NULL);
	pFnPrint->FunctionFlags |= 0x400;
}

struct Engine_DestroyCommand_Parms
{
	struct FString                                     cmdName;                                          		// 0x000000 (0x000C)              
};

void UcConsoleCommandManager::DestroyCommand(struct FString cmdName)
{
	static UFieldFunc* pFnDestroyCommand = NULL;
	if(!pFnDestroyCommand)
		pFnDestroyCommand = UObject::FindFunction("Function Engine.cConsoleCommandManager.DestroyCommand");

	Engine_DestroyCommand_Parms DestroyCommand_Parms;
	memcpy(&DestroyCommand_Parms.cmdName,&cmdName,0xC);
	pFnDestroyCommand->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDestroyCommand,NULL,&DestroyCommand_Parms,NULL);
	pFnDestroyCommand->FunctionFlags |= 0x400;
}

struct Engine_ExecCommand_Parms
{
	unsigned char                                      eMode;                                            		// 0x000000 (0x0001)              
	TArray<struct FString>                             arguments;                                        		// 0x000004 (0x000C)              
	class UcConsoleCommandManager*                     manager;                                          		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UcConsoleCommandManager::ExecCommand(unsigned char eMode,TArray<struct FString> arguments,class UcConsoleCommandManager* manager)
{
	static UFieldFunc* pFnExecCommand = NULL;
	if(!pFnExecCommand)
		pFnExecCommand = UObject::FindFunction("Function Engine.cConsoleCommandManager.ExecCommand");

	Engine_ExecCommand_Parms ExecCommand_Parms;
	ExecCommand_Parms.eMode = eMode;
	memcpy(&ExecCommand_Parms.arguments,&arguments,0xC);
	ExecCommand_Parms.manager = manager;
	ProcessEvent(pFnExecCommand,NULL,&ExecCommand_Parms,NULL);
	return ExecCommand_Parms.ReturnValue;
}

struct Engine_GetEngine_Parms
{
	class UEngine*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UEngine* UcConsoleCommandManager::GetEngine()
{
	static UFieldFunc* pFnGetEngine = NULL;
	if(!pFnGetEngine)
		pFnGetEngine = UObject::FindFunction("Function Engine.cConsoleCommandManager.GetEngine");

	Engine_GetEngine_Parms GetEngine_Parms;
	pFnGetEngine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetEngine,NULL,&GetEngine_Parms,NULL);
	pFnGetEngine->FunctionFlags |= 0x400;
	return GetEngine_Parms.ReturnValue;
}

struct Engine_SendToAllClients_Parms
{
	struct FString                                     arguments;                                        		// 0x000000 (0x000C)              
	//class APlayerController*                           C;                                                		// 0x00000C (0x0004)              
};

void UcConsoleCommandManager::SendToAllClients(struct FString arguments)
{
	static UFieldFunc* pFnSendToAllClients = NULL;
	if(!pFnSendToAllClients)
		pFnSendToAllClients = UObject::FindFunction("Function Engine.cConsoleCommandManager.SendToAllClients");

	Engine_SendToAllClients_Parms SendToAllClients_Parms;
	memcpy(&SendToAllClients_Parms.arguments,&arguments,0xC);
	ProcessEvent(pFnSendToAllClients,NULL,&SendToAllClients_Parms,NULL);
}

struct Engine_SafeStrToBool_Parms
{
	struct FString                                     str;                                              		// 0x000000 (0x000C)              
	int                                                bIsSafe;                                          		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UcConsoleCommandManager::SafeStrToBool(struct FString str,int* bIsSafe)
{
	static UFieldFunc* pFnSafeStrToBool = NULL;
	if(!pFnSafeStrToBool)
		pFnSafeStrToBool = UObject::FindFunction("Function Engine.cConsoleCommandManager.SafeStrToBool");

	Engine_SafeStrToBool_Parms SafeStrToBool_Parms;
	memcpy(&SafeStrToBool_Parms.str,&str,0xC);
	pFnSafeStrToBool->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSafeStrToBool,NULL,&SafeStrToBool_Parms,NULL);
	pFnSafeStrToBool->FunctionFlags |= 0x400;
	if(bIsSafe)
		*bIsSafe = SafeStrToBool_Parms.bIsSafe;
	return SafeStrToBool_Parms.ReturnValue;
}

struct Engine_SafeStrToInt_Parms
{
	struct FString                                     str;                                              		// 0x000000 (0x000C)              
	int                                                bIsSafe;                                          		// 0x00000C (0x0004)              
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
};

int UcConsoleCommandManager::SafeStrToInt(struct FString str,int* bIsSafe)
{
	static UFieldFunc* pFnSafeStrToInt = NULL;
	if(!pFnSafeStrToInt)
		pFnSafeStrToInt = UObject::FindFunction("Function Engine.cConsoleCommandManager.SafeStrToInt");

	Engine_SafeStrToInt_Parms SafeStrToInt_Parms;
	memcpy(&SafeStrToInt_Parms.str,&str,0xC);
	pFnSafeStrToInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSafeStrToInt,NULL,&SafeStrToInt_Parms,NULL);
	pFnSafeStrToInt->FunctionFlags |= 0x400;
	if(bIsSafe)
		*bIsSafe = SafeStrToInt_Parms.bIsSafe;
	return SafeStrToInt_Parms.ReturnValue;
}

struct Engine_SendToServer_Parms
{
	struct FString                                     arguments;                                        		// 0x000000 (0x000C)              
};

void UcConsoleCommandManager::SendToServer(struct FString arguments)
{
	static UFieldFunc* pFnSendToServer = NULL;
	if(!pFnSendToServer)
		pFnSendToServer = UObject::FindFunction("Function Engine.cConsoleCommandManager.SendToServer");

	Engine_SendToServer_Parms SendToServer_Parms;
	memcpy(&SendToServer_Parms.arguments,&arguments,0xC);
	ProcessEvent(pFnSendToServer,NULL,&SendToServer_Parms,NULL);
}

struct Engine_SafeStrToFloat_Parms
{
	struct FString                                     str;                                              		// 0x000000 (0x000C)              
	int                                                bIsSafe;                                          		// 0x00000C (0x0004)              
	float                                              ReturnValue;                                      		// 0x000010 (0x0004)              
};

float UcConsoleCommandManager::SafeStrToFloat(struct FString str,int* bIsSafe)
{
	static UFieldFunc* pFnSafeStrToFloat = NULL;
	if(!pFnSafeStrToFloat)
		pFnSafeStrToFloat = UObject::FindFunction("Function Engine.cConsoleCommandManager.SafeStrToFloat");

	Engine_SafeStrToFloat_Parms SafeStrToFloat_Parms;
	memcpy(&SafeStrToFloat_Parms.str,&str,0xC);
	pFnSafeStrToFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSafeStrToFloat,NULL,&SafeStrToFloat_Parms,NULL);
	pFnSafeStrToFloat->FunctionFlags |= 0x400;
	if(bIsSafe)
		*bIsSafe = SafeStrToFloat_Parms.bIsSafe;
	return SafeStrToFloat_Parms.ReturnValue;
}

struct Engine_CreateCommandScript_Parms
{
	struct FString                                     cmdName;                                          		// 0x000000 (0x000C)              
	struct FString                                     cmdUsage;                                         		// 0x00000C (0x000C)              
	struct FString                                     cmdHelp;                                          		// 0x000018 (0x000C)              
	class UClass*                                      tObjectClass;                                     		// 0x000024 (0x0004)              
	int                                                cmdFlags;                                         		// 0x000028 (0x0004)              
	struct FScriptDelegate                             cmdDelegate;                                      		// 0x00002C (0x000C)              
};

void UcConsoleCommandManager::CreateCommandScript(struct FString cmdName,struct FString cmdUsage,struct FString cmdHelp,class UClass* tObjectClass,int cmdFlags,struct FScriptDelegate cmdDelegate)
{
	static UFieldFunc* pFnCreateCommandScript = NULL;
	if(!pFnCreateCommandScript)
		pFnCreateCommandScript = UObject::FindFunction("Function Engine.cConsoleCommandManager.CreateCommandScript");

	Engine_CreateCommandScript_Parms CreateCommandScript_Parms;
	memcpy(&CreateCommandScript_Parms.cmdName,&cmdName,0xC);
	memcpy(&CreateCommandScript_Parms.cmdUsage,&cmdUsage,0xC);
	memcpy(&CreateCommandScript_Parms.cmdHelp,&cmdHelp,0xC);
	CreateCommandScript_Parms.tObjectClass = tObjectClass;
	CreateCommandScript_Parms.cmdFlags = cmdFlags;
	memcpy(&CreateCommandScript_Parms.cmdDelegate,&cmdDelegate,0xC);
	pFnCreateCommandScript->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateCommandScript,NULL,&CreateCommandScript_Parms,NULL);
	pFnCreateCommandScript->FunctionFlags |= 0x400;
}

struct Engine_LocalExec_Parms
{
	struct FString                                     arguments;                                        		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UcConsoleCommandManager::LocalExec(struct FString arguments)
{
	static UFieldFunc* pFnLocalExec = NULL;
	if(!pFnLocalExec)
		pFnLocalExec = UObject::FindFunction("Function Engine.cConsoleCommandManager.LocalExec");

	Engine_LocalExec_Parms LocalExec_Parms;
	memcpy(&LocalExec_Parms.arguments,&arguments,0xC);
	pFnLocalExec->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLocalExec,NULL,&LocalExec_Parms,NULL);
	pFnLocalExec->FunctionFlags |= 0x400;
	return LocalExec_Parms.ReturnValue;
}

struct Engine_CallNativeLostFocus_Parms
{
};

void UcDebugPage::CallNativeLostFocus()
{
	static UFieldFunc* pFnCallNativeLostFocus = NULL;
	if(!pFnCallNativeLostFocus)
		pFnCallNativeLostFocus = UObject::FindFunction("Function Engine.cDebugPage.CallNativeLostFocus");

	Engine_CallNativeLostFocus_Parms CallNativeLostFocus_Parms;
	pFnCallNativeLostFocus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativeLostFocus,NULL,&CallNativeLostFocus_Parms,NULL);
	pFnCallNativeLostFocus->FunctionFlags |= 0x400;
}

struct Engine_CallNativePageEnter_Parms
{
};

void UcDebugPage::CallNativePageEnter()
{
	static UFieldFunc* pFnCallNativePageEnter = NULL;
	if(!pFnCallNativePageEnter)
		pFnCallNativePageEnter = UObject::FindFunction("Function Engine.cDebugPage.CallNativePageEnter");

	Engine_CallNativePageEnter_Parms CallNativePageEnter_Parms;
	pFnCallNativePageEnter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativePageEnter,NULL,&CallNativePageEnter_Parms,NULL);
	pFnCallNativePageEnter->FunctionFlags |= 0x400;
}

struct Engine_SetDebugPageName_Parms
{
	struct FString                                     sNewPageName;                                     		// 0x000000 (0x000C)              
};

void UcDebugPage::SetDebugPageName(struct FString sNewPageName)
{
	static UFieldFunc* pFnSetDebugPageName = NULL;
	if(!pFnSetDebugPageName)
		pFnSetDebugPageName = UObject::FindFunction("Function Engine.cDebugPage.SetDebugPageName");

	Engine_SetDebugPageName_Parms SetDebugPageName_Parms;
	memcpy(&SetDebugPageName_Parms.sNewPageName,&sNewPageName,0xC);
	pFnSetDebugPageName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDebugPageName,NULL,&SetDebugPageName_Parms,NULL);
	pFnSetDebugPageName->FunctionFlags |= 0x400;
}

struct Engine_LostFocus_Parms
{
};

void UcDebugPage::LostFocus()
{
	static UFieldFunc* pFnLostFocus = NULL;
	if(!pFnLostFocus)
		pFnLostFocus = UObject::FindFunction("Function Engine.cDebugPage.LostFocus");

	Engine_LostFocus_Parms LostFocus_Parms;
	ProcessEvent(pFnLostFocus,NULL,&LostFocus_Parms,NULL);
}

struct Engine_CallNativePageRight_Parms
{
};

void UcDebugPage::CallNativePageRight()
{
	static UFieldFunc* pFnCallNativePageRight = NULL;
	if(!pFnCallNativePageRight)
		pFnCallNativePageRight = UObject::FindFunction("Function Engine.cDebugPage.CallNativePageRight");

	Engine_CallNativePageRight_Parms CallNativePageRight_Parms;
	pFnCallNativePageRight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativePageRight,NULL,&CallNativePageRight_Parms,NULL);
	pFnCallNativePageRight->FunctionFlags |= 0x400;
}

struct Engine_UnRegisterDebugPage_Parms
{
};

void UcDebugPage::UnRegisterDebugPage()
{
	static UFieldFunc* pFnUnRegisterDebugPage = NULL;
	if(!pFnUnRegisterDebugPage)
		pFnUnRegisterDebugPage = UObject::FindFunction("Function Engine.cDebugPage.UnRegisterDebugPage");

	Engine_UnRegisterDebugPage_Parms UnRegisterDebugPage_Parms;
	ProcessEvent(pFnUnRegisterDebugPage,NULL,&UnRegisterDebugPage_Parms,NULL);
}

struct Engine_CallNativePageDown_Parms
{
};

void UcDebugPage::CallNativePageDown()
{
	static UFieldFunc* pFnCallNativePageDown = NULL;
	if(!pFnCallNativePageDown)
		pFnCallNativePageDown = UObject::FindFunction("Function Engine.cDebugPage.CallNativePageDown");

	Engine_CallNativePageDown_Parms CallNativePageDown_Parms;
	pFnCallNativePageDown->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativePageDown,NULL,&CallNativePageDown_Parms,NULL);
	pFnCallNativePageDown->FunctionFlags |= 0x400;
}

struct Engine_DebugPageEnter_Parms
{
};

void UcDebugPage::DebugPageEnter()
{
	static UFieldFunc* pFnDebugPageEnter = NULL;
	if(!pFnDebugPageEnter)
		pFnDebugPageEnter = UObject::FindFunction("Function Engine.cDebugPage.DebugPageEnter");

	Engine_DebugPageEnter_Parms DebugPageEnter_Parms;
	ProcessEvent(pFnDebugPageEnter,NULL,&DebugPageEnter_Parms,NULL);
}

struct Engine_DebugPageUp_Parms
{
};

void UcDebugPage::DebugPageUp()
{
	static UFieldFunc* pFnDebugPageUp = NULL;
	if(!pFnDebugPageUp)
		pFnDebugPageUp = UObject::FindFunction("Function Engine.cDebugPage.DebugPageUp");

	Engine_DebugPageUp_Parms DebugPageUp_Parms;
	ProcessEvent(pFnDebugPageUp,NULL,&DebugPageUp_Parms,NULL);
}

struct Engine_RegisterDebugPage_Parms
{
	class UcDebugPageManager*                          theManager;                                       		// 0x000000 (0x0004)              
};

void UcDebugPage::RegisterDebugPage(class UcDebugPageManager* theManager)
{
	static UFieldFunc* pFnRegisterDebugPage = NULL;
	if(!pFnRegisterDebugPage)
		pFnRegisterDebugPage = UObject::FindFunction("Function Engine.cDebugPage.RegisterDebugPage");

	Engine_RegisterDebugPage_Parms RegisterDebugPage_Parms;
	RegisterDebugPage_Parms.theManager = theManager;
	ProcessEvent(pFnRegisterDebugPage,NULL,&RegisterDebugPage_Parms,NULL);
}

struct Engine_CallNativePageUp_Parms
{
};

void UcDebugPage::CallNativePageUp()
{
	static UFieldFunc* pFnCallNativePageUp = NULL;
	if(!pFnCallNativePageUp)
		pFnCallNativePageUp = UObject::FindFunction("Function Engine.cDebugPage.CallNativePageUp");

	Engine_CallNativePageUp_Parms CallNativePageUp_Parms;
	pFnCallNativePageUp->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativePageUp,NULL,&CallNativePageUp_Parms,NULL);
	pFnCallNativePageUp->FunctionFlags |= 0x400;
}

struct Engine_DebugPageRight_Parms
{
};

void UcDebugPage::DebugPageRight()
{
	static UFieldFunc* pFnDebugPageRight = NULL;
	if(!pFnDebugPageRight)
		pFnDebugPageRight = UObject::FindFunction("Function Engine.cDebugPage.DebugPageRight");

	Engine_DebugPageRight_Parms DebugPageRight_Parms;
	ProcessEvent(pFnDebugPageRight,NULL,&DebugPageRight_Parms,NULL);
}

struct Engine_CallNativeRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UcDebugPage::CallNativeRender(class UCanvas* Canvas)
{
	static UFieldFunc* pFnCallNativeRender = NULL;
	if(!pFnCallNativeRender)
		pFnCallNativeRender = UObject::FindFunction("Function Engine.cDebugPage.CallNativeRender");

	Engine_CallNativeRender_Parms CallNativeRender_Parms;
	CallNativeRender_Parms.Canvas = Canvas;
	pFnCallNativeRender->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativeRender,NULL,&CallNativeRender_Parms,NULL);
	pFnCallNativeRender->FunctionFlags |= 0x400;
}

struct Engine_RenderDebugPage_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UcDebugPage::RenderDebugPage(class UCanvas* Canvas)
{
	static UFieldFunc* pFnRenderDebugPage = NULL;
	if(!pFnRenderDebugPage)
		pFnRenderDebugPage = UObject::FindFunction("Function Engine.cDebugPage.RenderDebugPage");

	Engine_RenderDebugPage_Parms RenderDebugPage_Parms;
	RenderDebugPage_Parms.Canvas = Canvas;
	ProcessEvent(pFnRenderDebugPage,NULL,&RenderDebugPage_Parms,NULL);
}

struct Engine_CallNativeTick_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
};

void UcDebugPage::CallNativeTick(float fDeltaTime)
{
	static UFieldFunc* pFnCallNativeTick = NULL;
	if(!pFnCallNativeTick)
		pFnCallNativeTick = UObject::FindFunction("Function Engine.cDebugPage.CallNativeTick");

	Engine_CallNativeTick_Parms CallNativeTick_Parms;
	CallNativeTick_Parms.fDeltaTime = fDeltaTime;
	pFnCallNativeTick->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativeTick,NULL,&CallNativeTick_Parms,NULL);
	pFnCallNativeTick->FunctionFlags |= 0x400;
}

struct Engine_RetDebugPageName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UcDebugPage::RetDebugPageName()
{
	static UFieldFunc* pFnRetDebugPageName = NULL;
	if(!pFnRetDebugPageName)
		pFnRetDebugPageName = UObject::FindFunction("Function Engine.cDebugPage.RetDebugPageName");

	Engine_RetDebugPageName_Parms RetDebugPageName_Parms;
	pFnRetDebugPageName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRetDebugPageName,NULL,&RetDebugPageName_Parms,NULL);
	pFnRetDebugPageName->FunctionFlags |= 0x400;
	return RetDebugPageName_Parms.ReturnValue;
}

struct Engine_UnRegisterDebugPage_native_Parms
{
};

void UcDebugPage::UnRegisterDebugPage_native()
{
	static UFieldFunc* pFnUnRegisterDebugPage_native = NULL;
	if(!pFnUnRegisterDebugPage_native)
		pFnUnRegisterDebugPage_native = UObject::FindFunction("Function Engine.cDebugPage.UnRegisterDebugPage_native");

	Engine_UnRegisterDebugPage_native_Parms UnRegisterDebugPage_native_Parms;
	pFnUnRegisterDebugPage_native->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnRegisterDebugPage_native,NULL,&UnRegisterDebugPage_native_Parms,NULL);
	pFnUnRegisterDebugPage_native->FunctionFlags |= 0x400;
}

struct Engine_DebugPageLeft_Parms
{
};

void UcDebugPage::DebugPageLeft()
{
	static UFieldFunc* pFnDebugPageLeft = NULL;
	if(!pFnDebugPageLeft)
		pFnDebugPageLeft = UObject::FindFunction("Function Engine.cDebugPage.DebugPageLeft");

	Engine_DebugPageLeft_Parms DebugPageLeft_Parms;
	ProcessEvent(pFnDebugPageLeft,NULL,&DebugPageLeft_Parms,NULL);
}

struct Engine_SetDebugPageCategory_Parms
{
	struct FString                                     sNewPageCategory;                                 		// 0x000000 (0x000C)              
};

void UcDebugPage::SetDebugPageCategory(struct FString sNewPageCategory)
{
	static UFieldFunc* pFnSetDebugPageCategory = NULL;
	if(!pFnSetDebugPageCategory)
		pFnSetDebugPageCategory = UObject::FindFunction("Function Engine.cDebugPage.SetDebugPageCategory");

	Engine_SetDebugPageCategory_Parms SetDebugPageCategory_Parms;
	memcpy(&SetDebugPageCategory_Parms.sNewPageCategory,&sNewPageCategory,0xC);
	pFnSetDebugPageCategory->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDebugPageCategory,NULL,&SetDebugPageCategory_Parms,NULL);
	pFnSetDebugPageCategory->FunctionFlags |= 0x400;
}

struct Engine_DebugPageRefresh_Parms
{
};

void UcDebugPage::DebugPageRefresh()
{
	static UFieldFunc* pFnDebugPageRefresh = NULL;
	if(!pFnDebugPageRefresh)
		pFnDebugPageRefresh = UObject::FindFunction("Function Engine.cDebugPage.DebugPageRefresh");

	Engine_DebugPageRefresh_Parms DebugPageRefresh_Parms;
	ProcessEvent(pFnDebugPageRefresh,NULL,&DebugPageRefresh_Parms,NULL);
}

struct Engine_RetDebugPageCategory_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UcDebugPage::RetDebugPageCategory()
{
	static UFieldFunc* pFnRetDebugPageCategory = NULL;
	if(!pFnRetDebugPageCategory)
		pFnRetDebugPageCategory = UObject::FindFunction("Function Engine.cDebugPage.RetDebugPageCategory");

	Engine_RetDebugPageCategory_Parms RetDebugPageCategory_Parms;
	pFnRetDebugPageCategory->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRetDebugPageCategory,NULL,&RetDebugPageCategory_Parms,NULL);
	pFnRetDebugPageCategory->FunctionFlags |= 0x400;
	return RetDebugPageCategory_Parms.ReturnValue;
}

struct Engine_DebugPageDown_Parms
{
};

void UcDebugPage::DebugPageDown()
{
	static UFieldFunc* pFnDebugPageDown = NULL;
	if(!pFnDebugPageDown)
		pFnDebugPageDown = UObject::FindFunction("Function Engine.cDebugPage.DebugPageDown");

	Engine_DebugPageDown_Parms DebugPageDown_Parms;
	ProcessEvent(pFnDebugPageDown,NULL,&DebugPageDown_Parms,NULL);
}

struct Engine_CallNativePageLeft_Parms
{
};

void UcDebugPage::CallNativePageLeft()
{
	static UFieldFunc* pFnCallNativePageLeft = NULL;
	if(!pFnCallNativePageLeft)
		pFnCallNativePageLeft = UObject::FindFunction("Function Engine.cDebugPage.CallNativePageLeft");

	Engine_CallNativePageLeft_Parms CallNativePageLeft_Parms;
	pFnCallNativePageLeft->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativePageLeft,NULL,&CallNativePageLeft_Parms,NULL);
	pFnCallNativePageLeft->FunctionFlags |= 0x400;
}

struct Engine_TickDebugPage_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
};

void UcDebugPage::TickDebugPage(float fDeltaTime)
{
	static UFieldFunc* pFnTickDebugPage = NULL;
	if(!pFnTickDebugPage)
		pFnTickDebugPage = UObject::FindFunction("Function Engine.cDebugPage.TickDebugPage");

	Engine_TickDebugPage_Parms TickDebugPage_Parms;
	TickDebugPage_Parms.fDeltaTime = fDeltaTime;
	ProcessEvent(pFnTickDebugPage,NULL,&TickDebugPage_Parms,NULL);
}

struct Engine_CallNativePageRefresh_Parms
{
};

void UcDebugPage::CallNativePageRefresh()
{
	static UFieldFunc* pFnCallNativePageRefresh = NULL;
	if(!pFnCallNativePageRefresh)
		pFnCallNativePageRefresh = UObject::FindFunction("Function Engine.cDebugPage.CallNativePageRefresh");

	Engine_CallNativePageRefresh_Parms CallNativePageRefresh_Parms;
	pFnCallNativePageRefresh->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallNativePageRefresh,NULL,&CallNativePageRefresh_Parms,NULL);
	pFnCallNativePageRefresh->FunctionFlags |= 0x400;
}

struct Engine_RegisterEngineConsoleCommands_Script_Parms
{
	class UcConsoleCommandManager*                     manager;                                          		// 0x000000 (0x0004)              
};

void UcEngineConsoleCommands::RegisterEngineConsoleCommands_Script(class UcConsoleCommandManager* manager)
{
	static UFieldFunc* pFnRegisterEngineConsoleCommands_Script = NULL;
	if(!pFnRegisterEngineConsoleCommands_Script)
		pFnRegisterEngineConsoleCommands_Script = UObject::FindFunction("Function Engine.cEngineConsoleCommands.RegisterEngineConsoleCommands_Script");

	Engine_RegisterEngineConsoleCommands_Script_Parms RegisterEngineConsoleCommands_Script_Parms;
	RegisterEngineConsoleCommands_Script_Parms.manager = manager;
	ProcessEvent(pFnRegisterEngineConsoleCommands_Script,NULL,&RegisterEngineConsoleCommands_Script_Parms,NULL);
}

struct Engine_Command_Echo_Parms
{
	unsigned char                                      eMode;                                            		// 0x000000 (0x0001)              
	TArray<struct FString>                             arguments;                                        		// 0x000004 (0x000C)              
	class UcConsoleCommandManager*                     manager;                                          		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//unsigned long                                      bOk : 1;                                          		// 0x000018 (0x0004) [0x00000001] 
	//struct FString                                     sTmp;                                             		// 0x00001C (0x000C)              
	//int                                                I;                                                		// 0x000028 (0x0004)              
};

bool UcEngineConsoleCommands::Command_Echo(unsigned char eMode,TArray<struct FString> arguments,class UcConsoleCommandManager* manager)
{
	static UFieldFunc* pFnCommand_Echo = NULL;
	if(!pFnCommand_Echo)
		pFnCommand_Echo = UObject::FindFunction("Function Engine.cEngineConsoleCommands.Command_Echo");

	Engine_Command_Echo_Parms Command_Echo_Parms;
	Command_Echo_Parms.eMode = eMode;
	memcpy(&Command_Echo_Parms.arguments,&arguments,0xC);
	Command_Echo_Parms.manager = manager;
	ProcessEvent(pFnCommand_Echo,NULL,&Command_Echo_Parms,NULL);
	return Command_Echo_Parms.ReturnValue;
}

struct Engine_AllWeapons_Parms
{
};

void UCheatManager::AllWeapons()
{
	static UFieldFunc* pFnAllWeapons = NULL;
	if(!pFnAllWeapons)
		pFnAllWeapons = UObject::FindFunction("Function Engine.CheatManager.AllWeapons");

	Engine_AllWeapons_Parms AllWeapons_Parms;
	ProcessEvent(pFnAllWeapons,NULL,&AllWeapons_Parms,NULL);
}

struct Engine_TestLevel_Parms
{
	//class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	//class AActor*                                      Found;                                            		// 0x000004 (0x0004)              
	//unsigned long                                      bFoundErrors : 1;                                 		// 0x000008 (0x0004) [0x00000001] 
};

void UCheatManager::TestLevel()
{
	static UFieldFunc* pFnTestLevel = NULL;
	if(!pFnTestLevel)
		pFnTestLevel = UObject::FindFunction("Function Engine.CheatManager.TestLevel");

	Engine_TestLevel_Parms TestLevel_Parms;
	ProcessEvent(pFnTestLevel,NULL,&TestLevel_Parms,NULL);
}

struct Engine_BugIt_Parms
{
	struct FString                                     ScreenShotDescription;                            		// 0x000000 (0x000C)              
	//FVector3                                           ViewLocation;                                     		// 0x00000C (0x000C)              
	//FRotator                                           ViewRotation;                                     		// 0x000018 (0x000C)              
};

void UCheatManager::BugIt(struct FString ScreenShotDescription)
{
	static UFieldFunc* pFnBugIt = NULL;
	if(!pFnBugIt)
		pFnBugIt = UObject::FindFunction("Function Engine.CheatManager.BugIt");

	Engine_BugIt_Parms BugIt_Parms;
	memcpy(&BugIt_Parms.ScreenShotDescription,&ScreenShotDescription,0xC);
	ProcessEvent(pFnBugIt,NULL,&BugIt_Parms,NULL);
}

struct Engine_KillPawns_Parms
{
};

void UCheatManager::KillPawns()
{
	static UFieldFunc* pFnKillPawns = NULL;
	if(!pFnKillPawns)
		pFnKillPawns = UObject::FindFunction("Function Engine.CheatManager.KillPawns");

	Engine_KillPawns_Parms KillPawns_Parms;
	ProcessEvent(pFnKillPawns,NULL,&KillPawns_Parms,NULL);
}

struct Engine_ChangeSize_Parms
{
	float                                              F;                                                		// 0x000000 (0x0004)              
};

void UCheatManager::ChangeSize(float F)
{
	static UFieldFunc* pFnChangeSize = NULL;
	if(!pFnChangeSize)
		pFnChangeSize = UObject::FindFunction("Function Engine.CheatManager.ChangeSize");

	Engine_ChangeSize_Parms ChangeSize_Parms;
	ChangeSize_Parms.F = F;
	ProcessEvent(pFnChangeSize,NULL,&ChangeSize_Parms,NULL);
}

struct Engine_Fly_Parms
{
};

void UCheatManager::Fly()
{
	static UFieldFunc* pFnFly = NULL;
	if(!pFnFly)
		pFnFly = UObject::FindFunction("Function Engine.CheatManager.Fly");

	Engine_Fly_Parms Fly_Parms;
	ProcessEvent(pFnFly,NULL,&Fly_Parms,NULL);
}

struct Engine_EndPath_Parms
{
};

void UCheatManager::EndPath()
{
	static UFieldFunc* pFnEndPath = NULL;
	if(!pFnEndPath)
		pFnEndPath = UObject::FindFunction("Function Engine.CheatManager.EndPath");

	Engine_EndPath_Parms EndPath_Parms;
	ProcessEvent(pFnEndPath,NULL,&EndPath_Parms,NULL);
}

struct Engine_ViewPlayer_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
	//class AController*                                 P;                                                		// 0x00000C (0x0004)              
};

void UCheatManager::ViewPlayer(struct FString S)
{
	static UFieldFunc* pFnViewPlayer = NULL;
	if(!pFnViewPlayer)
		pFnViewPlayer = UObject::FindFunction("Function Engine.CheatManager.ViewPlayer");

	Engine_ViewPlayer_Parms ViewPlayer_Parms;
	memcpy(&ViewPlayer_Parms.S,&S,0xC);
	ProcessEvent(pFnViewPlayer,NULL,&ViewPlayer_Parms,NULL);
}

struct Engine_PlayersOnly_Parms
{
};

void UCheatManager::PlayersOnly()
{
	static UFieldFunc* pFnPlayersOnly = NULL;
	if(!pFnPlayersOnly)
		pFnPlayersOnly = UObject::FindFunction("Function Engine.CheatManager.PlayersOnly");

	Engine_PlayersOnly_Parms PlayersOnly_Parms;
	ProcessEvent(pFnPlayersOnly,NULL,&PlayersOnly_Parms,NULL);
}

struct Engine_RememberSpot_Parms
{
};

void UCheatManager::RememberSpot()
{
	static UFieldFunc* pFnRememberSpot = NULL;
	if(!pFnRememberSpot)
		pFnRememberSpot = UObject::FindFunction("Function Engine.CheatManager.RememberSpot");

	Engine_RememberSpot_Parms RememberSpot_Parms;
	ProcessEvent(pFnRememberSpot,NULL,&RememberSpot_Parms,NULL);
}

struct Engine_StreamLevelIn_Parms
{
	struct FName                                       PackageName;                                      		// 0x000000 (0x0008)              
};

void UCheatManager::StreamLevelIn(struct FName PackageName)
{
	static UFieldFunc* pFnStreamLevelIn = NULL;
	if(!pFnStreamLevelIn)
		pFnStreamLevelIn = UObject::FindFunction("Function Engine.CheatManager.StreamLevelIn");

	Engine_StreamLevelIn_Parms StreamLevelIn_Parms;
	memcpy(&StreamLevelIn_Parms.PackageName,&PackageName,0x8);
	ProcessEvent(pFnStreamLevelIn,NULL,&StreamLevelIn_Parms,NULL);
}

struct Engine_ViewSelf_Parms
{
	unsigned long                                      bQuiet : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void UCheatManager::ViewSelf(bool bQuiet)
{
	static UFieldFunc* pFnViewSelf = NULL;
	if(!pFnViewSelf)
		pFnViewSelf = UObject::FindFunction("Function Engine.CheatManager.ViewSelf");

	Engine_ViewSelf_Parms ViewSelf_Parms;
	ViewSelf_Parms.bQuiet = bQuiet;
	ProcessEvent(pFnViewSelf,NULL,&ViewSelf_Parms,NULL);
}

struct Engine_SetGravity_Parms
{
	float                                              F;                                                		// 0x000000 (0x0004)              
};

void UCheatManager::SetGravity(float F)
{
	static UFieldFunc* pFnSetGravity = NULL;
	if(!pFnSetGravity)
		pFnSetGravity = UObject::FindFunction("Function Engine.CheatManager.SetGravity");

	Engine_SetGravity_Parms SetGravity_Parms;
	SetGravity_Parms.F = F;
	ProcessEvent(pFnSetGravity,NULL,&SetGravity_Parms,NULL);
}

struct Engine_ViewClass_Parms
{
	class UClass*                                      aClass;                                           		// 0x000000 (0x0004)              
	//class AActor*                                      Other;                                            		// 0x000004 (0x0004)              
	//class AActor*                                      first;                                            		// 0x000008 (0x0004)              
	//unsigned long                                      bFound : 1;                                       		// 0x00000C (0x0004) [0x00000001] 
};

void UCheatManager::ViewClass(class UClass* aClass)
{
	static UFieldFunc* pFnViewClass = NULL;
	if(!pFnViewClass)
		pFnViewClass = UObject::FindFunction("Function Engine.CheatManager.ViewClass");

	Engine_ViewClass_Parms ViewClass_Parms;
	ViewClass_Parms.aClass = aClass;
	ProcessEvent(pFnViewClass,NULL,&ViewClass_Parms,NULL);
}

struct Engine_AllAmmo_Parms
{
};

void UCheatManager::AllAmmo()
{
	static UFieldFunc* pFnAllAmmo = NULL;
	if(!pFnAllAmmo)
		pFnAllAmmo = UObject::FindFunction("Function Engine.CheatManager.AllAmmo");

	Engine_AllAmmo_Parms AllAmmo_Parms;
	ProcessEvent(pFnAllAmmo,NULL,&AllAmmo_Parms,NULL);
}

struct Engine_BugItGoString_Parms
{
	struct FString                                     TheLocation;                                      		// 0x000000 (0x000C)              
	struct FString                                     TheRotation;                                      		// 0x00000C (0x000C)              
};

void UCheatManager::BugItGoString(struct FString TheLocation,struct FString TheRotation)
{
	static UFieldFunc* pFnBugItGoString = NULL;
	if(!pFnBugItGoString)
		pFnBugItGoString = UObject::FindFunction("Function Engine.CheatManager.BugItGoString");

	Engine_BugItGoString_Parms BugItGoString_Parms;
	memcpy(&BugItGoString_Parms.TheLocation,&TheLocation,0xC);
	memcpy(&BugItGoString_Parms.TheRotation,&TheRotation,0xC);
	ProcessEvent(pFnBugItGoString,NULL,&BugItGoString_Parms,NULL);
}

struct Engine_ListDynamicActors_Parms
{
	//class AActor*                                      A;                                                		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void UCheatManager::ListDynamicActors()
{
	static UFieldFunc* pFnListDynamicActors = NULL;
	if(!pFnListDynamicActors)
		pFnListDynamicActors = UObject::FindFunction("Function Engine.CheatManager.ListDynamicActors");

	Engine_ListDynamicActors_Parms ListDynamicActors_Parms;
	ProcessEvent(pFnListDynamicActors,NULL,&ListDynamicActors_Parms,NULL);
}

struct Engine_ViewBot_Parms
{
	//class AActor*                                      first;                                            		// 0x000000 (0x0004)              
	//unsigned long                                      bFound : 1;                                       		// 0x000004 (0x0004) [0x00000001] 
	//class AAIController*                               C;                                                		// 0x000008 (0x0004)              
};

void UCheatManager::ViewBot()
{
	static UFieldFunc* pFnViewBot = NULL;
	if(!pFnViewBot)
		pFnViewBot = UObject::FindFunction("Function Engine.CheatManager.ViewBot");

	Engine_ViewBot_Parms ViewBot_Parms;
	ProcessEvent(pFnViewBot,NULL,&ViewBot_Parms,NULL);
}

struct Engine_StreamLevelOut_Parms
{
	struct FName                                       PackageName;                                      		// 0x000000 (0x0008)              
};

void UCheatManager::StreamLevelOut(struct FName PackageName)
{
	static UFieldFunc* pFnStreamLevelOut = NULL;
	if(!pFnStreamLevelOut)
		pFnStreamLevelOut = UObject::FindFunction("Function Engine.CheatManager.StreamLevelOut");

	Engine_StreamLevelOut_Parms StreamLevelOut_Parms;
	memcpy(&StreamLevelOut_Parms.PackageName,&PackageName,0x8);
	ProcessEvent(pFnStreamLevelOut,NULL,&StreamLevelOut_Parms,NULL);
}

struct Engine_Avatar_Parms
{
	struct FName                                       ClassName;                                        		// 0x000000 (0x0008)              
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
	//class APawn*                                       TargetPawn;                                       		// 0x00000C (0x0004)              
	//class APawn*                                       FirstPawn;                                        		// 0x000010 (0x0004)              
	//class APawn*                                       OldPawn;                                          		// 0x000014 (0x0004)              
	//unsigned long                                      bPickNextPawn : 1;                                		// 0x000018 (0x0004) [0x00000001] 
};

void UCheatManager::Avatar(struct FName ClassName)
{
	static UFieldFunc* pFnAvatar = NULL;
	if(!pFnAvatar)
		pFnAvatar = UObject::FindFunction("Function Engine.CheatManager.Avatar");

	Engine_Avatar_Parms Avatar_Parms;
	memcpy(&Avatar_Parms.ClassName,&ClassName,0x8);
	ProcessEvent(pFnAvatar,NULL,&Avatar_Parms,NULL);
}

struct Engine_BugItGo_Parms
{
	float                                              X;                                                		// 0x000000 (0x0004)              
	float                                              Y;                                                		// 0x000004 (0x0004)              
	float                                              Z;                                                		// 0x000008 (0x0004)              
	int                                                Pitch;                                            		// 0x00000C (0x0004)              
	int                                                Yaw;                                              		// 0x000010 (0x0004)              
	int                                                Roll;                                             		// 0x000014 (0x0004)              
	//FVector3                                           TheLocation;                                      		// 0x000018 (0x000C)              
	//FRotator                                           TheRotation;                                      		// 0x000024 (0x000C)              
};

void UCheatManager::BugItGo(float X,float Y,float Z,int Pitch,int Yaw,int Roll)
{
	static UFieldFunc* pFnBugItGo = NULL;
	if(!pFnBugItGo)
		pFnBugItGo = UObject::FindFunction("Function Engine.CheatManager.BugItGo");

	Engine_BugItGo_Parms BugItGo_Parms;
	BugItGo_Parms.X = X;
	BugItGo_Parms.Y = Y;
	BugItGo_Parms.Z = Z;
	BugItGo_Parms.Pitch = Pitch;
	BugItGo_Parms.Yaw = Yaw;
	BugItGo_Parms.Roll = Roll;
	ProcessEvent(pFnBugItGo,NULL,&BugItGo_Parms,NULL);
}

struct Engine_OnlyLoadLevel_Parms
{
	struct FName                                       PackageName;                                      		// 0x000000 (0x0008)              
};

void UCheatManager::OnlyLoadLevel(struct FName PackageName)
{
	static UFieldFunc* pFnOnlyLoadLevel = NULL;
	if(!pFnOnlyLoadLevel)
		pFnOnlyLoadLevel = UObject::FindFunction("Function Engine.CheatManager.OnlyLoadLevel");

	Engine_OnlyLoadLevel_Parms OnlyLoadLevel_Parms;
	memcpy(&OnlyLoadLevel_Parms.PackageName,&PackageName,0x8);
	ProcessEvent(pFnOnlyLoadLevel,NULL,&OnlyLoadLevel_Parms,NULL);
}

struct Engine_Ghost_Parms
{
};

void UCheatManager::Ghost()
{
	static UFieldFunc* pFnGhost = NULL;
	if(!pFnGhost)
		pFnGhost = UObject::FindFunction("Function Engine.CheatManager.Ghost");

	Engine_Ghost_Parms Ghost_Parms;
	ProcessEvent(pFnGhost,NULL,&Ghost_Parms,NULL);
}

struct Engine_SetJumpZ_Parms
{
	float                                              F;                                                		// 0x000000 (0x0004)              
};

void UCheatManager::SetJumpZ(float F)
{
	static UFieldFunc* pFnSetJumpZ = NULL;
	if(!pFnSetJumpZ)
		pFnSetJumpZ = UObject::FindFunction("Function Engine.CheatManager.SetJumpZ");

	Engine_SetJumpZ_Parms SetJumpZ_Parms;
	SetJumpZ_Parms.F = F;
	ProcessEvent(pFnSetJumpZ,NULL,&SetJumpZ_Parms,NULL);
}

struct Engine_BugItWorker_Parms
{
	FVector3                                           TheLocation;                                      		// 0x000000 (0x000C)              
	FRotator                                           TheRotation;                                      		// 0x00000C (0x000C)              
};

void UCheatManager::BugItWorker(FVector3 TheLocation,FRotator TheRotation)
{
	static UFieldFunc* pFnBugItWorker = NULL;
	if(!pFnBugItWorker)
		pFnBugItWorker = UObject::FindFunction("Function Engine.CheatManager.BugItWorker");

	Engine_BugItWorker_Parms BugItWorker_Parms;
	memcpy(&BugItWorker_Parms.TheLocation,&TheLocation,0xC);
	memcpy(&BugItWorker_Parms.TheRotation,&TheRotation,0xC);
	ProcessEvent(pFnBugItWorker,NULL,&BugItWorker_Parms,NULL);
}

struct Engine_ViewActor_Parms
{
	struct FName                                       actorName;                                        		// 0x000000 (0x0008)              
	//class AActor*                                      A;                                                		// 0x000008 (0x0004)              
};

void UCheatManager::ViewActor(struct FName actorName)
{
	static UFieldFunc* pFnViewActor = NULL;
	if(!pFnViewActor)
		pFnViewActor = UObject::FindFunction("Function Engine.CheatManager.ViewActor");

	Engine_ViewActor_Parms ViewActor_Parms;
	memcpy(&ViewActor_Parms.actorName,&actorName,0x8);
	ProcessEvent(pFnViewActor,NULL,&ViewActor_Parms,NULL);
}

struct Engine_SetLevelStreamingStatus_Parms
{
	struct FName                                       PackageName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bShouldBeLoaded : 1;                              		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bShouldBeVisible : 1;                             		// 0x00000C (0x0004) [0x00000001] 
	//class APlayerController*                           PC;                                               		// 0x000010 (0x0004)              
	//int                                                I;                                                		// 0x000014 (0x0004)              
};

void UCheatManager::SetLevelStreamingStatus(struct FName PackageName,bool bShouldBeLoaded,bool bShouldBeVisible)
{
	static UFieldFunc* pFnSetLevelStreamingStatus = NULL;
	if(!pFnSetLevelStreamingStatus)
		pFnSetLevelStreamingStatus = UObject::FindFunction("Function Engine.CheatManager.SetLevelStreamingStatus");

	Engine_SetLevelStreamingStatus_Parms SetLevelStreamingStatus_Parms;
	memcpy(&SetLevelStreamingStatus_Parms.PackageName,&PackageName,0x8);
	SetLevelStreamingStatus_Parms.bShouldBeLoaded = bShouldBeLoaded;
	SetLevelStreamingStatus_Parms.bShouldBeVisible = bShouldBeVisible;
	ProcessEvent(pFnSetLevelStreamingStatus,NULL,&SetLevelStreamingStatus_Parms,NULL);
}

struct Engine_ViewFlag_Parms
{
	//class AAIController*                               C;                                                		// 0x000000 (0x0004)              
};

void UCheatManager::ViewFlag()
{
	static UFieldFunc* pFnViewFlag = NULL;
	if(!pFnViewFlag)
		pFnViewFlag = UObject::FindFunction("Function Engine.CheatManager.ViewFlag");

	Engine_ViewFlag_Parms ViewFlag_Parms;
	ProcessEvent(pFnViewFlag,NULL,&ViewFlag_Parms,NULL);
}

struct Engine_KillAll_Parms
{
	class UClass*                                      aClass;                                           		// 0x000000 (0x0004)              
	//class AActor*                                      A;                                                		// 0x000004 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000008 (0x0004)              
};

void UCheatManager::KillAll(class UClass* aClass)
{
	static UFieldFunc* pFnKillAll = NULL;
	if(!pFnKillAll)
		pFnKillAll = UObject::FindFunction("Function Engine.CheatManager.KillAll");

	Engine_KillAll_Parms KillAll_Parms;
	KillAll_Parms.aClass = aClass;
	ProcessEvent(pFnKillAll,NULL,&KillAll_Parms,NULL);
}

struct Engine_SloMo_Parms
{
	float                                              T;                                                		// 0x000000 (0x0004)              
};

void UCheatManager::SloMo(float T)
{
	static UFieldFunc* pFnSloMo = NULL;
	if(!pFnSloMo)
		pFnSloMo = UObject::FindFunction("Function Engine.CheatManager.SloMo");

	Engine_SloMo_Parms SloMo_Parms;
	SloMo_Parms.T = T;
	ProcessEvent(pFnSloMo,NULL,&SloMo_Parms,NULL);
}

struct Engine_KillAllPawns_Parms
{
	class UClass*                                      aClass;                                           		// 0x000000 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000004 (0x0004)              
};

void UCheatManager::KillAllPawns(class UClass* aClass)
{
	static UFieldFunc* pFnKillAllPawns = NULL;
	if(!pFnKillAllPawns)
		pFnKillAllPawns = UObject::FindFunction("Function Engine.CheatManager.KillAllPawns");

	Engine_KillAllPawns_Parms KillAllPawns_Parms;
	KillAllPawns_Parms.aClass = aClass;
	ProcessEvent(pFnKillAllPawns,NULL,&KillAllPawns_Parms,NULL);
}

struct Engine_God_Parms
{
};

void UCheatManager::God()
{
	static UFieldFunc* pFnGod = NULL;
	if(!pFnGod)
		pFnGod = UObject::FindFunction("Function Engine.CheatManager.God");

	Engine_God_Parms God_Parms;
	ProcessEvent(pFnGod,NULL,&God_Parms,NULL);
}

struct Engine_ToggleDebugCamera_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
	//class ADebugCameraController*                      DCC;                                              		// 0x000004 (0x0004)              
};

void UCheatManager::ToggleDebugCamera()
{
	static UFieldFunc* pFnToggleDebugCamera = NULL;
	if(!pFnToggleDebugCamera)
		pFnToggleDebugCamera = UObject::FindFunction("Function Engine.CheatManager.ToggleDebugCamera");

	Engine_ToggleDebugCamera_Parms ToggleDebugCamera_Parms;
	ProcessEvent(pFnToggleDebugCamera,NULL,&ToggleDebugCamera_Parms,NULL);
}

struct Engine_GetFRotatorFromString_Parms
{
	struct FString                                     InStr;                                            		// 0x000000 (0x000C)              
	FRotator                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FRotator UCheatManager::GetFRotatorFromString(struct FString InStr)
{
	static UFieldFunc* pFnGetFRotatorFromString = NULL;
	if(!pFnGetFRotatorFromString)
		pFnGetFRotatorFromString = UObject::FindFunction("Function Engine.CheatManager.GetFRotatorFromString");

	Engine_GetFRotatorFromString_Parms GetFRotatorFromString_Parms;
	memcpy(&GetFRotatorFromString_Parms.InStr,&InStr,0xC);
	pFnGetFRotatorFromString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFRotatorFromString,NULL,&GetFRotatorFromString_Parms,NULL);
	pFnGetFRotatorFromString->FunctionFlags |= 0x400;
	return GetFRotatorFromString_Parms.ReturnValue;
}

struct Engine_Walk_Parms
{
};

void UCheatManager::Walk()
{
	static UFieldFunc* pFnWalk = NULL;
	if(!pFnWalk)
		pFnWalk = UObject::FindFunction("Function Engine.CheatManager.Walk");

	Engine_Walk_Parms Walk_Parms;
	ProcessEvent(pFnWalk,NULL,&Walk_Parms,NULL);
}

struct Engine_GetFVectorFromString_Parms
{
	struct FString                                     InStr;                                            		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 UCheatManager::GetFVectorFromString(struct FString InStr)
{
	static UFieldFunc* pFnGetFVectorFromString = NULL;
	if(!pFnGetFVectorFromString)
		pFnGetFVectorFromString = UObject::FindFunction("Function Engine.CheatManager.GetFVectorFromString");

	Engine_GetFVectorFromString_Parms GetFVectorFromString_Parms;
	memcpy(&GetFVectorFromString_Parms.InStr,&InStr,0xC);
	pFnGetFVectorFromString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFVectorFromString,NULL,&GetFVectorFromString_Parms,NULL);
	pFnGetFVectorFromString->FunctionFlags |= 0x400;
	return GetFVectorFromString_Parms.ReturnValue;
}

struct Engine_KillViewedActor_Parms
{
};

void UCheatManager::KillViewedActor()
{
	static UFieldFunc* pFnKillViewedActor = NULL;
	if(!pFnKillViewedActor)
		pFnKillViewedActor = UObject::FindFunction("Function Engine.CheatManager.KillViewedActor");

	Engine_KillViewedActor_Parms KillViewedActor_Parms;
	ProcessEvent(pFnKillViewedActor,NULL,&KillViewedActor_Parms,NULL);
}

struct Engine_WriteToLog_Parms
{
	struct FString                                     Param;                                            		// 0x000000 (0x000C)              
};

void UCheatManager::WriteToLog(struct FString Param)
{
	static UFieldFunc* pFnWriteToLog = NULL;
	if(!pFnWriteToLog)
		pFnWriteToLog = UObject::FindFunction("Function Engine.CheatManager.WriteToLog");

	Engine_WriteToLog_Parms WriteToLog_Parms;
	memcpy(&WriteToLog_Parms.Param,&Param,0xC);
	ProcessEvent(pFnWriteToLog,NULL,&WriteToLog_Parms,NULL);
}

struct Engine_FreezeFrame_Parms
{
	float                                              delay;                                            		// 0x000000 (0x0004)              
};

void UCheatManager::FreezeFrame(float delay)
{
	static UFieldFunc* pFnFreezeFrame = NULL;
	if(!pFnFreezeFrame)
		pFnFreezeFrame = UObject::FindFunction("Function Engine.CheatManager.FreezeFrame");

	Engine_FreezeFrame_Parms FreezeFrame_Parms;
	FreezeFrame_Parms.delay = delay;
	ProcessEvent(pFnFreezeFrame,NULL,&FreezeFrame_Parms,NULL);
}

struct Engine_Loaded_Parms
{
};

void UCheatManager::Loaded()
{
	static UFieldFunc* pFnLoaded = NULL;
	if(!pFnLoaded)
		pFnLoaded = UObject::FindFunction("Function Engine.CheatManager.Loaded");

	Engine_Loaded_Parms Loaded_Parms;
	ProcessEvent(pFnLoaded,NULL,&Loaded_Parms,NULL);
}

struct Engine_AffectedByHitEffects_Parms
{
};

void UCheatManager::AffectedByHitEffects()
{
	static UFieldFunc* pFnAffectedByHitEffects = NULL;
	if(!pFnAffectedByHitEffects)
		pFnAffectedByHitEffects = UObject::FindFunction("Function Engine.CheatManager.AffectedByHitEffects");

	Engine_AffectedByHitEffects_Parms AffectedByHitEffects_Parms;
	ProcessEvent(pFnAffectedByHitEffects,NULL,&AffectedByHitEffects_Parms,NULL);
}

struct Engine_SetSpeed_Parms
{
	float                                              F;                                                		// 0x000000 (0x0004)              
};

void UCheatManager::SetSpeed(float F)
{
	static UFieldFunc* pFnSetSpeed = NULL;
	if(!pFnSetSpeed)
		pFnSetSpeed = UObject::FindFunction("Function Engine.CheatManager.SetSpeed");

	Engine_SetSpeed_Parms SetSpeed_Parms;
	SetSpeed_Parms.F = F;
	ProcessEvent(pFnSetSpeed,NULL,&SetSpeed_Parms,NULL);
}

struct Engine_Teleport_Parms
{
	//class AActor*                                      HitActor;                                         		// 0x000000 (0x0004)              
	//FVector3                                           HitNormal;                                        		// 0x000004 (0x000C)              
	//FVector3                                           HitLocation;                                      		// 0x000010 (0x000C)              
	//FVector3                                           ViewLocation;                                     		// 0x00001C (0x000C)              
	//FVector3                                           ReticuleDirn;                                     		// 0x000028 (0x000C)              
};

void UCheatManager::Teleport()
{
	static UFieldFunc* pFnTeleport = NULL;
	if(!pFnTeleport)
		pFnTeleport = UObject::FindFunction("Function Engine.CheatManager.Teleport");

	Engine_Teleport_Parms Teleport_Parms;
	ProcessEvent(pFnTeleport,NULL,&Teleport_Parms,NULL);
}

struct Engine_GetNumberOfSaveSlots_Parms
{
	int                                                NumSaveSlots;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//struct FPlatformInterfaceDelegateResult            KVRes;                                            		// 0x000008 (0x0034)              
	//unsigned long                                      RValue : 1;                                       		// 0x00003C (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::GetNumberOfSaveSlots(int* NumSaveSlots)
{
	static UFieldFunc* pFnGetNumberOfSaveSlots = NULL;
	if(!pFnGetNumberOfSaveSlots)
		pFnGetNumberOfSaveSlots = UObject::FindFunction("Function Engine.CloudSaveSystem.GetNumberOfSaveSlots");

	Engine_GetNumberOfSaveSlots_Parms GetNumberOfSaveSlots_Parms;
	ProcessEvent(pFnGetNumberOfSaveSlots,NULL,&GetNumberOfSaveSlots_Parms,NULL);
	if(NumSaveSlots)
		*NumSaveSlots = GetNumberOfSaveSlots_Parms.NumSaveSlots;
	return GetNumberOfSaveSlots_Parms.ReturnValue;
}

struct Engine_SaveSystemCallback_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	int                                                SaveSlot;                                         		// 0x000004 (0x0004)              
	struct FString                                     Error;                                            		// 0x000008 (0x000C)              
};

void UCloudSaveSystem::SaveSystemCallback(bool bWasSuccessful,int SaveSlot,struct FString Error)
{
	static UFieldFunc* pFnSaveSystemCallback = NULL;
	if(!pFnSaveSystemCallback)
		pFnSaveSystemCallback = UObject::FindFunction("Function Engine.CloudSaveSystem.SaveSystemCallback");

	Engine_SaveSystemCallback_Parms SaveSystemCallback_Parms;
	SaveSystemCallback_Parms.bWasSuccessful = bWasSuccessful;
	SaveSystemCallback_Parms.SaveSlot = SaveSlot;
	memcpy(&SaveSystemCallback_Parms.Error,&Error,0xC);
	ProcessEvent(pFnSaveSystemCallback,NULL,&SaveSystemCallback_Parms,NULL);
}

struct Engine_SerializeObject_Parms
{
	class UObject*                                     ObjectToSerialize;                                		// 0x000000 (0x0004)              
	TArray<unsigned char>                              Data;                                             		// 0x000004 (0x000C)              
	int                                                DataVersion;                                      		// 0x000010 (0x0004)              
};

void UCloudSaveSystem::SerializeObject(class UObject* ObjectToSerialize,TArray<unsigned char>* Data,int DataVersion)
{
	static UFieldFunc* pFnSerializeObject = NULL;
	if(!pFnSerializeObject)
		pFnSerializeObject = UObject::FindFunction("Function Engine.CloudSaveSystem.SerializeObject");

	Engine_SerializeObject_Parms SerializeObject_Parms;
	SerializeObject_Parms.ObjectToSerialize = ObjectToSerialize;
	SerializeObject_Parms.DataVersion = DataVersion;
	pFnSerializeObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSerializeObject,NULL,&SerializeObject_Parms,NULL);
	pFnSerializeObject->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&SerializeObject_Parms.Data,0xC);
}

struct Engine_OnSetSaveDataComplete_Parms
{
	unsigned long                                      bWasSucessfull : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	struct FString                                     Error;                                            		// 0x00001C (0x000C)              
	//int                                                SaveSlotIndex;                                    		// 0x000028 (0x0004)              
	//int                                                Index;                                            		// 0x00002C (0x0004)              
	//struct FScriptDelegate                             LocalCallback;                                    		// 0x000030 (0x000C)              
};

void UCloudSaveSystem::OnSetSaveDataComplete(bool bWasSucessfull,struct FString StorageID,struct FString BlobName,struct FString Error)
{
	static UFieldFunc* pFnOnSetSaveDataComplete = NULL;
	if(!pFnOnSetSaveDataComplete)
		pFnOnSetSaveDataComplete = UObject::FindFunction("Function Engine.CloudSaveSystem.OnSetSaveDataComplete");

	Engine_OnSetSaveDataComplete_Parms OnSetSaveDataComplete_Parms;
	OnSetSaveDataComplete_Parms.bWasSucessfull = bWasSucessfull;
	memcpy(&OnSetSaveDataComplete_Parms.StorageID,&StorageID,0xC);
	memcpy(&OnSetSaveDataComplete_Parms.BlobName,&BlobName,0xC);
	memcpy(&OnSetSaveDataComplete_Parms.Error,&Error,0xC);
	ProcessEvent(pFnOnSetSaveDataComplete,NULL,&OnSetSaveDataComplete_Parms,NULL);
}

struct Engine_DeserializeObject_Parms
{
	class UClass*                                      ObjectClass;                                      		// 0x000000 (0x0004)              
	TArray<unsigned char>                              Data;                                             		// 0x000004 (0x000C)              
	unsigned char                                      VersionSupport;                                   		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	int                                                DataVersion;                                      		// 0x000014 (0x0004)              
	class UObject*                                     ReturnValue;                                      		// 0x000018 (0x0004)              
};

class UObject* UCloudSaveSystem::DeserializeObject(class UClass* ObjectClass,TArray<unsigned char>* Data,unsigned char VersionSupport,int DataVersion)
{
	static UFieldFunc* pFnDeserializeObject = NULL;
	if(!pFnDeserializeObject)
		pFnDeserializeObject = UObject::FindFunction("Function Engine.CloudSaveSystem.DeserializeObject");

	Engine_DeserializeObject_Parms DeserializeObject_Parms;
	DeserializeObject_Parms.ObjectClass = ObjectClass;
	DeserializeObject_Parms.VersionSupport = VersionSupport;
	DeserializeObject_Parms.DataVersion = DataVersion;
	pFnDeserializeObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeserializeObject,NULL,&DeserializeObject_Parms,NULL);
	pFnDeserializeObject->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&DeserializeObject_Parms.Data,0xC);
	return DeserializeObject_Parms.ReturnValue;
}

struct Engine_GetKeyValue_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	unsigned char                                      Type;                                             		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	struct FPlatformInterfaceDelegateResult            Value;                                            		// 0x000014 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000048 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::GetKeyValue(int SaveSlot,struct FString KeyName,unsigned char Type,struct FPlatformInterfaceDelegateResult* Value)
{
	static UFieldFunc* pFnGetKeyValue = NULL;
	if(!pFnGetKeyValue)
		pFnGetKeyValue = UObject::FindFunction("Function Engine.CloudSaveSystem.GetKeyValue");

	Engine_GetKeyValue_Parms GetKeyValue_Parms;
	GetKeyValue_Parms.SaveSlot = SaveSlot;
	memcpy(&GetKeyValue_Parms.KeyName,&KeyName,0xC);
	GetKeyValue_Parms.Type = Type;
	ProcessEvent(pFnGetKeyValue,NULL,&GetKeyValue_Parms,NULL);
	if(Value)
		memcpy(Value,&GetKeyValue_Parms.Value,0x34);
	return GetKeyValue_Parms.ReturnValue;
}

struct Engine_SetKeyValue_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	struct FPlatformInterfaceData                      Value;                                            		// 0x000010 (0x0030)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000040 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::SetKeyValue(int SaveSlot,struct FString KeyName,struct FPlatformInterfaceData* Value)
{
	static UFieldFunc* pFnSetKeyValue = NULL;
	if(!pFnSetKeyValue)
		pFnSetKeyValue = UObject::FindFunction("Function Engine.CloudSaveSystem.SetKeyValue");

	Engine_SetKeyValue_Parms SetKeyValue_Parms;
	SetKeyValue_Parms.SaveSlot = SaveSlot;
	memcpy(&SetKeyValue_Parms.KeyName,&KeyName,0xC);
	ProcessEvent(pFnSetKeyValue,NULL,&SetKeyValue_Parms,NULL);
	if(Value)
		memcpy(Value,&SetKeyValue_Parms.Value,0x30);
	return SetKeyValue_Parms.ReturnValue;
}

struct Engine_GetSaveData_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FScriptDelegate                             OnGetSaveDataCallback;                            		// 0x000004 (0x000C)              
	//struct FString                                     DataStoreID;                                      		// 0x000010 (0x000C)              
	//struct FGetSaveDataCallbackStruct                  CallbackStruct;                                   		// 0x00001C (0x0010)              
	//struct FSaveSlotOperation                          SlotOperation;                                    		// 0x00002C (0x0008)              
	//TArray<unsigned char>                              EmptyBuffer;                                      		// 0x000034 (0x000C)              
	//struct FString                                     BlobName;                                         		// 0x000040 (0x000C)              
	//unsigned long                                      ErrorOccured : 1;                                 		// 0x00004C (0x0004) [0x00000001] 
	//struct FString                                     Error;                                            		// 0x000050 (0x000C)              
};

void UCloudSaveSystem::GetSaveData(int SaveSlot,struct FScriptDelegate OnGetSaveDataCallback)
{
	static UFieldFunc* pFnGetSaveData = NULL;
	if(!pFnGetSaveData)
		pFnGetSaveData = UObject::FindFunction("Function Engine.CloudSaveSystem.GetSaveData");

	Engine_GetSaveData_Parms GetSaveData_Parms;
	GetSaveData_Parms.SaveSlot = SaveSlot;
	memcpy(&GetSaveData_Parms.OnGetSaveDataCallback,&OnGetSaveDataCallback,0xC);
	ProcessEvent(pFnGetSaveData,NULL,&GetSaveData_Parms,NULL);
}

struct Engine_OnGetSaveDataComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	TArray<unsigned char>                              DataBlob;                                         		// 0x00001C (0x000C)              
	struct FString                                     Error;                                            		// 0x000028 (0x000C)              
	//int                                                SaveSlotIndex;                                    		// 0x000034 (0x0004)              
	//int                                                Index;                                            		// 0x000038 (0x0004)              
	//struct FScriptDelegate                             LocalCallback;                                    		// 0x00003C (0x000C)              
};

void UCloudSaveSystem::OnGetSaveDataComplete(bool bWasSuccessful,struct FString StorageID,struct FString BlobName,TArray<unsigned char>* DataBlob,struct FString Error)
{
	static UFieldFunc* pFnOnGetSaveDataComplete = NULL;
	if(!pFnOnGetSaveDataComplete)
		pFnOnGetSaveDataComplete = UObject::FindFunction("Function Engine.CloudSaveSystem.OnGetSaveDataComplete");

	Engine_OnGetSaveDataComplete_Parms OnGetSaveDataComplete_Parms;
	OnGetSaveDataComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnGetSaveDataComplete_Parms.StorageID,&StorageID,0xC);
	memcpy(&OnGetSaveDataComplete_Parms.BlobName,&BlobName,0xC);
	memcpy(&OnGetSaveDataComplete_Parms.Error,&Error,0xC);
	ProcessEvent(pFnOnGetSaveDataComplete,NULL,&OnGetSaveDataComplete_Parms,NULL);
	if(DataBlob)
		memcpy(DataBlob,&OnGetSaveDataComplete_Parms.DataBlob,0xC);
}

struct Engine_WriteNumSaveSlots_Parms
{
	int                                                NumSaveSlots;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//struct FPlatformInterfaceData                      KVSet;                                            		// 0x000008 (0x0030)              
};

bool UCloudSaveSystem::WriteNumSaveSlots(int NumSaveSlots)
{
	static UFieldFunc* pFnWriteNumSaveSlots = NULL;
	if(!pFnWriteNumSaveSlots)
		pFnWriteNumSaveSlots = UObject::FindFunction("Function Engine.CloudSaveSystem.WriteNumSaveSlots");

	Engine_WriteNumSaveSlots_Parms WriteNumSaveSlots_Parms;
	WriteNumSaveSlots_Parms.NumSaveSlots = NumSaveSlots;
	ProcessEvent(pFnWriteNumSaveSlots,NULL,&WriteNumSaveSlots_Parms,NULL);
	return WriteNumSaveSlots_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
	class UCloudSaveSystemKVSInterface*                InKeyValueStore;                                  		// 0x000000 (0x0008)              
	class UCloudSaveSystemDataBlobStoreInterface*      InDataBlobStore;                                  		// 0x000008 (0x0008)              
	int                                                VersionNumber;                                    		// 0x000010 (0x0004)              
	//struct FPlatformInterfaceDelegateResult            SaveSystemVersionNumber;                          		// 0x000014 (0x0034)              
	//struct FPlatformInterfaceData                      SaveSystemVersionNumberSet;                       		// 0x000048 (0x0030)              
};

void UCloudSaveSystem::Init(class UCloudSaveSystemKVSInterface* InKeyValueStore,class UCloudSaveSystemDataBlobStoreInterface* InDataBlobStore,int VersionNumber)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.CloudSaveSystem.Init");

	Engine_Init_Parms Init_Parms;
	Init_Parms.InKeyValueStore = InKeyValueStore;
	Init_Parms.InDataBlobStore = InDataBlobStore;
	Init_Parms.VersionNumber = VersionNumber;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_InternalSetSaveSlotKeyValues_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FString                                     DataStoreID;                                      		// 0x000004 (0x000C)              
	struct FString                                     SaveDataBlobName;                                 		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//struct FPlatformInterfaceData                      KVSet;                                            		// 0x000020 (0x0030)              
	//unsigned long                                      RValue : 1;                                       		// 0x000050 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::InternalSetSaveSlotKeyValues(int SaveSlot,struct FString DataStoreID,struct FString SaveDataBlobName)
{
	static UFieldFunc* pFnInternalSetSaveSlotKeyValues = NULL;
	if(!pFnInternalSetSaveSlotKeyValues)
		pFnInternalSetSaveSlotKeyValues = UObject::FindFunction("Function Engine.CloudSaveSystem.InternalSetSaveSlotKeyValues");

	Engine_InternalSetSaveSlotKeyValues_Parms InternalSetSaveSlotKeyValues_Parms;
	InternalSetSaveSlotKeyValues_Parms.SaveSlot = SaveSlot;
	memcpy(&InternalSetSaveSlotKeyValues_Parms.DataStoreID,&DataStoreID,0xC);
	memcpy(&InternalSetSaveSlotKeyValues_Parms.SaveDataBlobName,&SaveDataBlobName,0xC);
	ProcessEvent(pFnInternalSetSaveSlotKeyValues,NULL,&InternalSetSaveSlotKeyValues_Parms,NULL);
	return InternalSetSaveSlotKeyValues_Parms.ReturnValue;
}

struct Engine_OnDeleteSaveDataComplete_Parms
{
	unsigned long                                      bWasSucessfull : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	struct FString                                     Error;                                            		// 0x00001C (0x000C)              
	//struct FScriptDelegate                             Callback;                                         		// 0x000028 (0x000C)              
	//int                                                Scan;                                             		// 0x000034 (0x0004)              
	//int                                                Index;                                            		// 0x000038 (0x0004)              
	//int                                                SlotDeleted;                                      		// 0x00003C (0x0004)              
	//int                                                NumSaveSlots;                                     		// 0x000040 (0x0004)              
	//struct FString                                     DataStoreID;                                      		// 0x000044 (0x000C)              
	//struct FString                                     DataBlobName;                                     		// 0x000050 (0x000C)              
};

void UCloudSaveSystem::OnDeleteSaveDataComplete(bool bWasSucessfull,struct FString StorageID,struct FString BlobName,struct FString Error)
{
	static UFieldFunc* pFnOnDeleteSaveDataComplete = NULL;
	if(!pFnOnDeleteSaveDataComplete)
		pFnOnDeleteSaveDataComplete = UObject::FindFunction("Function Engine.CloudSaveSystem.OnDeleteSaveDataComplete");

	Engine_OnDeleteSaveDataComplete_Parms OnDeleteSaveDataComplete_Parms;
	OnDeleteSaveDataComplete_Parms.bWasSucessfull = bWasSucessfull;
	memcpy(&OnDeleteSaveDataComplete_Parms.StorageID,&StorageID,0xC);
	memcpy(&OnDeleteSaveDataComplete_Parms.BlobName,&BlobName,0xC);
	memcpy(&OnDeleteSaveDataComplete_Parms.Error,&Error,0xC);
	ProcessEvent(pFnOnDeleteSaveDataComplete,NULL,&OnDeleteSaveDataComplete_Parms,NULL);
}

struct Engine_SetSaveData_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FScriptDelegate                             InSetSaveDataCallback;                            		// 0x000004 (0x000C)              
	TArray<unsigned char>                              SaveDataBlob;                                     		// 0x000010 (0x000C)              
	//struct FSetSaveDataCallbackStruct                  CallbackStruct;                                   		// 0x00001C (0x0010)              
	//struct FSaveSlotOperation                          SlotOperation;                                    		// 0x00002C (0x0008)              
	//struct FString                                     DataStoreID;                                      		// 0x000034 (0x000C)              
	//struct FString                                     BlobName;                                         		// 0x000040 (0x000C)              
	//unsigned long                                      ErrorOccured : 1;                                 		// 0x00004C (0x0004) [0x00000001] 
	//struct FString                                     Error;                                            		// 0x000050 (0x000C)              
};

void UCloudSaveSystem::SetSaveData(int SaveSlot,struct FScriptDelegate InSetSaveDataCallback,TArray<unsigned char>* SaveDataBlob)
{
	static UFieldFunc* pFnSetSaveData = NULL;
	if(!pFnSetSaveData)
		pFnSetSaveData = UObject::FindFunction("Function Engine.CloudSaveSystem.SetSaveData");

	Engine_SetSaveData_Parms SetSaveData_Parms;
	SetSaveData_Parms.SaveSlot = SaveSlot;
	memcpy(&SetSaveData_Parms.InSetSaveDataCallback,&InSetSaveDataCallback,0xC);
	ProcessEvent(pFnSetSaveData,NULL,&SetSaveData_Parms,NULL);
	if(SaveDataBlob)
		memcpy(SaveDataBlob,&SetSaveData_Parms.SaveDataBlob,0xC);
}

struct Engine_AreAnySlotOperationsActive_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::AreAnySlotOperationsActive()
{
	static UFieldFunc* pFnAreAnySlotOperationsActive = NULL;
	if(!pFnAreAnySlotOperationsActive)
		pFnAreAnySlotOperationsActive = UObject::FindFunction("Function Engine.CloudSaveSystem.AreAnySlotOperationsActive");

	Engine_AreAnySlotOperationsActive_Parms AreAnySlotOperationsActive_Parms;
	ProcessEvent(pFnAreAnySlotOperationsActive,NULL,&AreAnySlotOperationsActive_Parms,NULL);
	return AreAnySlotOperationsActive_Parms.ReturnValue;
}

struct Engine_DoesSaveSlotKeyValueDataAlreadyExist_Parms
{
	struct FString                                     DataStoreID;                                      		// 0x000000 (0x000C)              
	struct FString                                     DataBlobName;                                     		// 0x00000C (0x000C)              
	int                                                ReturnValue;                                      		// 0x000018 (0x0004)              
	//int                                                SaveSlotScan;                                     		// 0x00001C (0x0004)              
	//int                                                NumSaveSlots;                                     		// 0x000020 (0x0004)              
	//struct FString                                     CompareDataStoreID;                               		// 0x000024 (0x000C)              
	//struct FString                                     CompareDataBlobName;                              		// 0x000030 (0x000C)              
	//int                                                RValue;                                           		// 0x00003C (0x0004)              
};

int UCloudSaveSystem::DoesSaveSlotKeyValueDataAlreadyExist(struct FString DataStoreID,struct FString DataBlobName)
{
	static UFieldFunc* pFnDoesSaveSlotKeyValueDataAlreadyExist = NULL;
	if(!pFnDoesSaveSlotKeyValueDataAlreadyExist)
		pFnDoesSaveSlotKeyValueDataAlreadyExist = UObject::FindFunction("Function Engine.CloudSaveSystem.DoesSaveSlotKeyValueDataAlreadyExist");

	Engine_DoesSaveSlotKeyValueDataAlreadyExist_Parms DoesSaveSlotKeyValueDataAlreadyExist_Parms;
	memcpy(&DoesSaveSlotKeyValueDataAlreadyExist_Parms.DataStoreID,&DataStoreID,0xC);
	memcpy(&DoesSaveSlotKeyValueDataAlreadyExist_Parms.DataBlobName,&DataBlobName,0xC);
	ProcessEvent(pFnDoesSaveSlotKeyValueDataAlreadyExist,NULL,&DoesSaveSlotKeyValueDataAlreadyExist_Parms,NULL);
	return DoesSaveSlotKeyValueDataAlreadyExist_Parms.ReturnValue;
}

struct Engine_IsDeleteOperationActive_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::IsDeleteOperationActive()
{
	static UFieldFunc* pFnIsDeleteOperationActive = NULL;
	if(!pFnIsDeleteOperationActive)
		pFnIsDeleteOperationActive = UObject::FindFunction("Function Engine.CloudSaveSystem.IsDeleteOperationActive");

	Engine_IsDeleteOperationActive_Parms IsDeleteOperationActive_Parms;
	ProcessEvent(pFnIsDeleteOperationActive,NULL,&IsDeleteOperationActive_Parms,NULL);
	return IsDeleteOperationActive_Parms.ReturnValue;
}

struct Engine_SetSaveSlotKeyValues_Parms
{
	struct FString                                     DataStoreID;                                      		// 0x000000 (0x000C)              
	struct FString                                     SaveDataBlobName;                                 		// 0x00000C (0x000C)              
	int                                                SaveSlot;                                         		// 0x000018 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//unsigned long                                      RValue : 1;                                       		// 0x000020 (0x0004) [0x00000001] 
	//int                                                NumSaveSlots;                                     		// 0x000024 (0x0004)              
	//unsigned long                                      IncSlotCount : 1;                                 		// 0x000028 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::SetSaveSlotKeyValues(struct FString DataStoreID,struct FString SaveDataBlobName,int* SaveSlot)
{
	static UFieldFunc* pFnSetSaveSlotKeyValues = NULL;
	if(!pFnSetSaveSlotKeyValues)
		pFnSetSaveSlotKeyValues = UObject::FindFunction("Function Engine.CloudSaveSystem.SetSaveSlotKeyValues");

	Engine_SetSaveSlotKeyValues_Parms SetSaveSlotKeyValues_Parms;
	memcpy(&SetSaveSlotKeyValues_Parms.DataStoreID,&DataStoreID,0xC);
	memcpy(&SetSaveSlotKeyValues_Parms.SaveDataBlobName,&SaveDataBlobName,0xC);
	ProcessEvent(pFnSetSaveSlotKeyValues,NULL,&SetSaveSlotKeyValues_Parms,NULL);
	if(SaveSlot)
		*SaveSlot = SetSaveSlotKeyValues_Parms.SaveSlot;
	return SetSaveSlotKeyValues_Parms.ReturnValue;
}

struct Engine_GetDataStoreIDAndBlobNameForSaveSlot_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FString                                     DataStoreID;                                      		// 0x000004 (0x000C)              
	struct FString                                     DataBlobName;                                     		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//struct FPlatformInterfaceDelegateResult            KVRes;                                            		// 0x000020 (0x0034)              
	//unsigned long                                      RValue : 1;                                       		// 0x000054 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::GetDataStoreIDAndBlobNameForSaveSlot(int SaveSlot,struct FString* DataStoreID,struct FString* DataBlobName)
{
	static UFieldFunc* pFnGetDataStoreIDAndBlobNameForSaveSlot = NULL;
	if(!pFnGetDataStoreIDAndBlobNameForSaveSlot)
		pFnGetDataStoreIDAndBlobNameForSaveSlot = UObject::FindFunction("Function Engine.CloudSaveSystem.GetDataStoreIDAndBlobNameForSaveSlot");

	Engine_GetDataStoreIDAndBlobNameForSaveSlot_Parms GetDataStoreIDAndBlobNameForSaveSlot_Parms;
	GetDataStoreIDAndBlobNameForSaveSlot_Parms.SaveSlot = SaveSlot;
	ProcessEvent(pFnGetDataStoreIDAndBlobNameForSaveSlot,NULL,&GetDataStoreIDAndBlobNameForSaveSlot_Parms,NULL);
	if(DataStoreID)
		memcpy(DataStoreID,&GetDataStoreIDAndBlobNameForSaveSlot_Parms.DataStoreID,0xC);
	if(DataBlobName)
		memcpy(DataBlobName,&GetDataStoreIDAndBlobNameForSaveSlot_Parms.DataBlobName,0xC);
	return GetDataStoreIDAndBlobNameForSaveSlot_Parms.ReturnValue;
}

struct Engine_OnGetSaveDataCallback_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	int                                                SaveSlot;                                         		// 0x000004 (0x0004)              
	TArray<unsigned char>                              DataBlob;                                         		// 0x000008 (0x000C)              
	struct FString                                     Error;                                            		// 0x000014 (0x000C)              
};

void UCloudSaveSystem::OnGetSaveDataCallback(bool bWasSuccessful,int SaveSlot,TArray<unsigned char>* DataBlob,struct FString Error)
{
	static UFieldFunc* pFnOnGetSaveDataCallback = NULL;
	if(!pFnOnGetSaveDataCallback)
		pFnOnGetSaveDataCallback = UObject::FindFunction("Function Engine.CloudSaveSystem.OnGetSaveDataCallback");

	Engine_OnGetSaveDataCallback_Parms OnGetSaveDataCallback_Parms;
	OnGetSaveDataCallback_Parms.bWasSuccessful = bWasSuccessful;
	OnGetSaveDataCallback_Parms.SaveSlot = SaveSlot;
	memcpy(&OnGetSaveDataCallback_Parms.Error,&Error,0xC);
	ProcessEvent(pFnOnGetSaveDataCallback,NULL,&OnGetSaveDataCallback_Parms,NULL);
	if(DataBlob)
		memcpy(DataBlob,&OnGetSaveDataCallback_Parms.DataBlob,0xC);
}

struct Engine_DeleteSaveData_Parms
{
	int                                                SaveSlot;                                         		// 0x000000 (0x0004)              
	struct FScriptDelegate                             InDeleteSaveDataCallback;                         		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//struct FString                                     DataStoreID;                                      		// 0x000014 (0x000C)              
	//struct FString                                     BlobName;                                         		// 0x000020 (0x000C)              
	//struct FSaveSlotOperation                          SlotOperation;                                    		// 0x00002C (0x0008)              
	//unsigned long                                      RValue : 1;                                       		// 0x000034 (0x0004) [0x00000001] 
};

bool UCloudSaveSystem::DeleteSaveData(int SaveSlot,struct FScriptDelegate InDeleteSaveDataCallback)
{
	static UFieldFunc* pFnDeleteSaveData = NULL;
	if(!pFnDeleteSaveData)
		pFnDeleteSaveData = UObject::FindFunction("Function Engine.CloudSaveSystem.DeleteSaveData");

	Engine_DeleteSaveData_Parms DeleteSaveData_Parms;
	DeleteSaveData_Parms.SaveSlot = SaveSlot;
	memcpy(&DeleteSaveData_Parms.InDeleteSaveDataCallback,&InDeleteSaveDataCallback,0xC);
	ProcessEvent(pFnDeleteSaveData,NULL,&DeleteSaveData_Parms,NULL);
	return DeleteSaveData_Parms.ReturnValue;
}

struct Engine_IsOperationActiveForSlot_Parms
{
	int                                                SlotIndex;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                Index;                                            		// 0x000008 (0x0004)              
};

bool UCloudSaveSystem::IsOperationActiveForSlot(int SlotIndex)
{
	static UFieldFunc* pFnIsOperationActiveForSlot = NULL;
	if(!pFnIsOperationActiveForSlot)
		pFnIsOperationActiveForSlot = UObject::FindFunction("Function Engine.CloudSaveSystem.IsOperationActiveForSlot");

	Engine_IsOperationActiveForSlot_Parms IsOperationActiveForSlot_Parms;
	IsOperationActiveForSlot_Parms.SlotIndex = SlotIndex;
	ProcessEvent(pFnIsOperationActiveForSlot,NULL,&IsOperationActiveForSlot_Parms,NULL);
	return IsOperationActiveForSlot_Parms.ReturnValue;
}

struct Engine_DeathMessage_Parms
{
	class APlayerReplicationInfo*                      Killer;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      Victim;                                           		// 0x000004 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UDamageType::DeathMessage(class APlayerReplicationInfo* Killer,class APlayerReplicationInfo* Victim)
{
	static UFieldFunc* pFnDeathMessage = NULL;
	if(!pFnDeathMessage)
		pFnDeathMessage = UObject::FindFunction("Function Engine.DamageType.DeathMessage");

	Engine_DeathMessage_Parms DeathMessage_Parms;
	DeathMessage_Parms.Killer = Killer;
	DeathMessage_Parms.Victim = Victim;
	ProcessEvent(pFnDeathMessage,NULL,&DeathMessage_Parms,NULL);
	return DeathMessage_Parms.ReturnValue;
}

struct Engine_SuicideMessage_Parms
{
	class APlayerReplicationInfo*                      Victim;                                           		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UDamageType::SuicideMessage(class APlayerReplicationInfo* Victim)
{
	static UFieldFunc* pFnSuicideMessage = NULL;
	if(!pFnSuicideMessage)
		pFnSuicideMessage = UObject::FindFunction("Function Engine.DamageType.SuicideMessage");

	Engine_SuicideMessage_Parms SuicideMessage_Parms;
	SuicideMessage_Parms.Victim = Victim;
	ProcessEvent(pFnSuicideMessage,NULL,&SuicideMessage_Parms,NULL);
	return SuicideMessage_Parms.ReturnValue;
}

struct Engine_VehicleDamageScalingFor_Parms
{
	class AVehicle*                                    V;                                                		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UDamageType::VehicleDamageScalingFor(class AVehicle* V)
{
	static UFieldFunc* pFnVehicleDamageScalingFor = NULL;
	if(!pFnVehicleDamageScalingFor)
		pFnVehicleDamageScalingFor = UObject::FindFunction("Function Engine.DamageType.VehicleDamageScalingFor");

	Engine_VehicleDamageScalingFor_Parms VehicleDamageScalingFor_Parms;
	VehicleDamageScalingFor_Parms.V = V;
	ProcessEvent(pFnVehicleDamageScalingFor,NULL,&VehicleDamageScalingFor_Parms,NULL);
	return VehicleDamageScalingFor_Parms.ReturnValue;
}

struct Engine_MountFaceFXAnimSet_Parms
{
	class UFaceFXAnimSet*                              AnimSet;                                          		// 0x000000 (0x0004)              
};

void UFaceFXAsset::MountFaceFXAnimSet(class UFaceFXAnimSet* AnimSet)
{
	static UFieldFunc* pFnMountFaceFXAnimSet = NULL;
	if(!pFnMountFaceFXAnimSet)
		pFnMountFaceFXAnimSet = UObject::FindFunction("Function Engine.FaceFXAsset.MountFaceFXAnimSet");

	Engine_MountFaceFXAnimSet_Parms MountFaceFXAnimSet_Parms;
	MountFaceFXAnimSet_Parms.AnimSet = AnimSet;
	pFnMountFaceFXAnimSet->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMountFaceFXAnimSet,NULL,&MountFaceFXAnimSet_Parms,NULL);
	pFnMountFaceFXAnimSet->FunctionFlags |= 0x400;
}

struct Engine_UnmountFaceFXAnimSet_Parms
{
	class UFaceFXAnimSet*                              AnimSet;                                          		// 0x000000 (0x0004)              
};

void UFaceFXAsset::UnmountFaceFXAnimSet(class UFaceFXAnimSet* AnimSet)
{
	static UFieldFunc* pFnUnmountFaceFXAnimSet = NULL;
	if(!pFnUnmountFaceFXAnimSet)
		pFnUnmountFaceFXAnimSet = UObject::FindFunction("Function Engine.FaceFXAsset.UnmountFaceFXAnimSet");

	Engine_UnmountFaceFXAnimSet_Parms UnmountFaceFXAnimSet_Parms;
	UnmountFaceFXAnimSet_Parms.AnimSet = AnimSet;
	pFnUnmountFaceFXAnimSet->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnmountFaceFXAnimSet,NULL,&UnmountFaceFXAnimSet_Parms,NULL);
	pFnUnmountFaceFXAnimSet->FunctionFlags |= 0x400;
}

struct Engine_GetAuthoredViewportHeight_Parms
{
	float                                              ViewportHeight;                                   		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UFont::GetAuthoredViewportHeight(float ViewportHeight)
{
	static UFieldFunc* pFnGetAuthoredViewportHeight = NULL;
	if(!pFnGetAuthoredViewportHeight)
		pFnGetAuthoredViewportHeight = UObject::FindFunction("Function Engine.Font.GetAuthoredViewportHeight");

	Engine_GetAuthoredViewportHeight_Parms GetAuthoredViewportHeight_Parms;
	GetAuthoredViewportHeight_Parms.ViewportHeight = ViewportHeight;
	pFnGetAuthoredViewportHeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAuthoredViewportHeight,NULL,&GetAuthoredViewportHeight_Parms,NULL);
	pFnGetAuthoredViewportHeight->FunctionFlags |= 0x400;
	return GetAuthoredViewportHeight_Parms.ReturnValue;
}

struct Engine_GetResolutionPageIndex_Parms
{
	float                                              HeightTest;                                       		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UFont::GetResolutionPageIndex(float HeightTest)
{
	static UFieldFunc* pFnGetResolutionPageIndex = NULL;
	if(!pFnGetResolutionPageIndex)
		pFnGetResolutionPageIndex = UObject::FindFunction("Function Engine.Font.GetResolutionPageIndex");

	Engine_GetResolutionPageIndex_Parms GetResolutionPageIndex_Parms;
	GetResolutionPageIndex_Parms.HeightTest = HeightTest;
	pFnGetResolutionPageIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetResolutionPageIndex,NULL,&GetResolutionPageIndex_Parms,NULL);
	pFnGetResolutionPageIndex->FunctionFlags |= 0x400;
	return GetResolutionPageIndex_Parms.ReturnValue;
}

struct Engine_GetScalingFactor_Parms
{
	float                                              HeightTest;                                       		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UFont::GetScalingFactor(float HeightTest)
{
	static UFieldFunc* pFnGetScalingFactor = NULL;
	if(!pFnGetScalingFactor)
		pFnGetScalingFactor = UObject::FindFunction("Function Engine.Font.GetScalingFactor");

	Engine_GetScalingFactor_Parms GetScalingFactor_Parms;
	GetScalingFactor_Parms.HeightTest = HeightTest;
	pFnGetScalingFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetScalingFactor,NULL,&GetScalingFactor_Parms,NULL);
	pFnGetScalingFactor->FunctionFlags |= 0x400;
	return GetScalingFactor_Parms.ReturnValue;
}

struct Engine_GetMaxCharHeight_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UFont::GetMaxCharHeight()
{
	static UFieldFunc* pFnGetMaxCharHeight = NULL;
	if(!pFnGetMaxCharHeight)
		pFnGetMaxCharHeight = UObject::FindFunction("Function Engine.Font.GetMaxCharHeight");

	Engine_GetMaxCharHeight_Parms GetMaxCharHeight_Parms;
	pFnGetMaxCharHeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaxCharHeight,NULL,&GetMaxCharHeight_Parms,NULL);
	pFnGetMaxCharHeight->FunctionFlags |= 0x400;
	return GetMaxCharHeight_Parms.ReturnValue;
}

struct Engine_GetResolutionTestTableIndex_Parms
{
	float                                              HeightTest;                                       		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UMultiFont::GetResolutionTestTableIndex(float HeightTest)
{
	static UFieldFunc* pFnGetResolutionTestTableIndex = NULL;
	if(!pFnGetResolutionTestTableIndex)
		pFnGetResolutionTestTableIndex = UObject::FindFunction("Function Engine.MultiFont.GetResolutionTestTableIndex");

	Engine_GetResolutionTestTableIndex_Parms GetResolutionTestTableIndex_Parms;
	GetResolutionTestTableIndex_Parms.HeightTest = HeightTest;
	pFnGetResolutionTestTableIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetResolutionTestTableIndex,NULL,&GetResolutionTestTableIndex_Parms,NULL);
	pFnGetResolutionTestTableIndex->FunctionFlags |= 0x400;
	return GetResolutionTestTableIndex_Parms.ReturnValue;
}

struct Engine_StopForceFeedbackWaveform_Parms
{
	class UForceFeedbackWaveform*                      Waveform;                                         		// 0x000000 (0x0004)              
};

void UForceFeedbackManager::StopForceFeedbackWaveform(class UForceFeedbackWaveform* Waveform)
{
	static UFieldFunc* pFnStopForceFeedbackWaveform = NULL;
	if(!pFnStopForceFeedbackWaveform)
		pFnStopForceFeedbackWaveform = UObject::FindFunction("Function Engine.ForceFeedbackManager.StopForceFeedbackWaveform");

	Engine_StopForceFeedbackWaveform_Parms StopForceFeedbackWaveform_Parms;
	StopForceFeedbackWaveform_Parms.Waveform = Waveform;
	ProcessEvent(pFnStopForceFeedbackWaveform,NULL,&StopForceFeedbackWaveform_Parms,NULL);
}

struct Engine_PlayForceFeedbackWaveform_Parms
{
	class UForceFeedbackWaveform*                      Waveform;                                         		// 0x000000 (0x0004)              
};

void UForceFeedbackManager::PlayForceFeedbackWaveform(class UForceFeedbackWaveform* Waveform)
{
	static UFieldFunc* pFnPlayForceFeedbackWaveform = NULL;
	if(!pFnPlayForceFeedbackWaveform)
		pFnPlayForceFeedbackWaveform = UObject::FindFunction("Function Engine.ForceFeedbackManager.PlayForceFeedbackWaveform");

	Engine_PlayForceFeedbackWaveform_Parms PlayForceFeedbackWaveform_Parms;
	PlayForceFeedbackWaveform_Parms.Waveform = Waveform;
	ProcessEvent(pFnPlayForceFeedbackWaveform,NULL,&PlayForceFeedbackWaveform_Parms,NULL);
}

struct Engine_PauseWaveform_Parms
{
	unsigned long                                      bPause : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void UForceFeedbackManager::PauseWaveform(bool bPause)
{
	static UFieldFunc* pFnPauseWaveform = NULL;
	if(!pFnPauseWaveform)
		pFnPauseWaveform = UObject::FindFunction("Function Engine.ForceFeedbackManager.PauseWaveform");

	Engine_PauseWaveform_Parms PauseWaveform_Parms;
	PauseWaveform_Parms.bPause = bPause;
	ProcessEvent(pFnPauseWaveform,NULL,&PauseWaveform_Parms,NULL);
}

struct Engine_CalculateSafeZoneValues_Parms
{
	float                                              out_Horizontal;                                   		// 0x000000 (0x0004)              
	float                                              out_Vertical;                                     		// 0x000004 (0x0004)              
	class UCanvas*                                     Canvas;                                           		// 0x000008 (0x0004)              
	int                                                LocalPlayerIndex;                                 		// 0x00000C (0x0004)              
	unsigned long                                      bUseMaxPercent : 1;                               		// 0x000010 (0x0004) [0x00000001] 
	//float                                              ScreenWidth;                                      		// 0x000014 (0x0004)              
	//float                                              ScreenHeight;                                     		// 0x000018 (0x0004)              
	//float                                              XSafeZoneToUse;                                   		// 0x00001C (0x0004)              
	//float                                              YSafeZoneToUse;                                   		// 0x000020 (0x0004)              
};

void UGameViewportClient::CalculateSafeZoneValues(float* out_Horizontal,float* out_Vertical,class UCanvas* Canvas,int LocalPlayerIndex,bool bUseMaxPercent)
{
	static UFieldFunc* pFnCalculateSafeZoneValues = NULL;
	if(!pFnCalculateSafeZoneValues)
		pFnCalculateSafeZoneValues = UObject::FindFunction("Function Engine.GameViewportClient.CalculateSafeZoneValues");

	Engine_CalculateSafeZoneValues_Parms CalculateSafeZoneValues_Parms;
	CalculateSafeZoneValues_Parms.Canvas = Canvas;
	CalculateSafeZoneValues_Parms.LocalPlayerIndex = LocalPlayerIndex;
	CalculateSafeZoneValues_Parms.bUseMaxPercent = bUseMaxPercent;
	ProcessEvent(pFnCalculateSafeZoneValues,NULL,&CalculateSafeZoneValues_Parms,NULL);
	if(out_Horizontal)
		*out_Horizontal = CalculateSafeZoneValues_Parms.out_Horizontal;
	if(out_Vertical)
		*out_Vertical = CalculateSafeZoneValues_Parms.out_Vertical;
}

struct Engine_LayoutPlayers_Parms
{
};

void UGameViewportClient::LayoutPlayers()
{
	static UFieldFunc* pFnLayoutPlayers = NULL;
	if(!pFnLayoutPlayers)
		pFnLayoutPlayers = UObject::FindFunction("Function Engine.GameViewportClient.LayoutPlayers");

	Engine_LayoutPlayers_Parms LayoutPlayers_Parms;
	ProcessEvent(pFnLayoutPlayers,NULL,&LayoutPlayers_Parms,NULL);
}

struct Engine_CreatePlayer_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FString                                     OutError;                                         		// 0x000004 (0x000C)              
	unsigned long                                      bSpawnActor : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	class ULocalPlayer*                                ReturnValue;                                      		// 0x000014 (0x0004)              
	//class ULocalPlayer*                                NewPlayer;                                        		// 0x000018 (0x0004)              
};

class ULocalPlayer* UGameViewportClient::CreatePlayer(int ControllerId,struct FString* OutError,bool bSpawnActor)
{
	static UFieldFunc* pFnCreatePlayer = NULL;
	if(!pFnCreatePlayer)
		pFnCreatePlayer = UObject::FindFunction("Function Engine.GameViewportClient.CreatePlayer");

	Engine_CreatePlayer_Parms CreatePlayer_Parms;
	CreatePlayer_Parms.ControllerId = ControllerId;
	CreatePlayer_Parms.bSpawnActor = bSpawnActor;
	ProcessEvent(pFnCreatePlayer,NULL,&CreatePlayer_Parms,NULL);
	if(OutError)
		memcpy(OutError,&CreatePlayer_Parms.OutError,0xC);
	return CreatePlayer_Parms.ReturnValue;
}

struct Engine_NotifyPlayerRemoved_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                RemovedPlayer;                                    		// 0x000004 (0x0004)              
	//int                                                InteractionIndex;                                 		// 0x000008 (0x0004)              
};

void UGameViewportClient::NotifyPlayerRemoved(int PlayerIndex,class ULocalPlayer* RemovedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerRemoved = NULL;
	if(!pFnNotifyPlayerRemoved)
		pFnNotifyPlayerRemoved = UObject::FindFunction("Function Engine.GameViewportClient.NotifyPlayerRemoved");

	Engine_NotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;
	NotifyPlayerRemoved_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerRemoved_Parms.RemovedPlayer = RemovedPlayer;
	ProcessEvent(pFnNotifyPlayerRemoved,NULL,&NotifyPlayerRemoved_Parms,NULL);
}

struct Engine_HasLeftSafeZone_Parms
{
	int                                                LocalPlayerIndex;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HasLeftSafeZone(int LocalPlayerIndex)
{
	static UFieldFunc* pFnHasLeftSafeZone = NULL;
	if(!pFnHasLeftSafeZone)
		pFnHasLeftSafeZone = UObject::FindFunction("Function Engine.GameViewportClient.HasLeftSafeZone");

	Engine_HasLeftSafeZone_Parms HasLeftSafeZone_Parms;
	HasLeftSafeZone_Parms.LocalPlayerIndex = LocalPlayerIndex;
	ProcessEvent(pFnHasLeftSafeZone,NULL,&HasLeftSafeZone_Parms,NULL);
	return HasLeftSafeZone_Parms.ReturnValue;
}

struct Engine_HandleInputAxis_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	float                                              Delta;                                            		// 0x00000C (0x0004)              
	float                                              DeltaTime;                                        		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HandleInputAxis(int ControllerId,struct FName Key,float Delta,float DeltaTime,bool bGamepad)
{
	static UFieldFunc* pFnHandleInputAxis = NULL;
	if(!pFnHandleInputAxis)
		pFnHandleInputAxis = UObject::FindFunction("Function Engine.GameViewportClient.HandleInputAxis");

	Engine_HandleInputAxis_Parms HandleInputAxis_Parms;
	HandleInputAxis_Parms.ControllerId = ControllerId;
	memcpy(&HandleInputAxis_Parms.Key,&Key,0x8);
	HandleInputAxis_Parms.Delta = Delta;
	HandleInputAxis_Parms.DeltaTime = DeltaTime;
	HandleInputAxis_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnHandleInputAxis,NULL,&HandleInputAxis_Parms,NULL);
	return HandleInputAxis_Parms.ReturnValue;
}

struct Engine_ShowTitleSafeArea_Parms
{
};

void UGameViewportClient::ShowTitleSafeArea()
{
	static UFieldFunc* pFnShowTitleSafeArea = NULL;
	if(!pFnShowTitleSafeArea)
		pFnShowTitleSafeArea = UObject::FindFunction("Function Engine.GameViewportClient.ShowTitleSafeArea");

	Engine_ShowTitleSafeArea_Parms ShowTitleSafeArea_Parms;
	ProcessEvent(pFnShowTitleSafeArea,NULL,&ShowTitleSafeArea_Parms,NULL);
}

struct Engine_Tick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void UGameViewportClient::Tick(float DeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.GameViewportClient.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_DebugSetUISystemEnabled_Parms
{
	unsigned long                                      bOldUISystemActive : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bGFxUISystemActive : 1;                           		// 0x000004 (0x0004) [0x00000001] 
};

void UGameViewportClient::DebugSetUISystemEnabled(bool bOldUISystemActive,bool bGFxUISystemActive)
{
	static UFieldFunc* pFnDebugSetUISystemEnabled = NULL;
	if(!pFnDebugSetUISystemEnabled)
		pFnDebugSetUISystemEnabled = UObject::FindFunction("Function Engine.GameViewportClient.DebugSetUISystemEnabled");

	Engine_DebugSetUISystemEnabled_Parms DebugSetUISystemEnabled_Parms;
	DebugSetUISystemEnabled_Parms.bOldUISystemActive = bOldUISystemActive;
	DebugSetUISystemEnabled_Parms.bGFxUISystemActive = bGFxUISystemActive;
	pFnDebugSetUISystemEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDebugSetUISystemEnabled,NULL,&DebugSetUISystemEnabled_Parms,NULL);
	pFnDebugSetUISystemEnabled->FunctionFlags |= 0x400;
}

struct Engine_GameSessionEnded_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UGameViewportClient::GameSessionEnded()
{
	static UFieldFunc* pFnGameSessionEnded = NULL;
	if(!pFnGameSessionEnded)
		pFnGameSessionEnded = UObject::FindFunction("Function Engine.GameViewportClient.GameSessionEnded");

	Engine_GameSessionEnded_Parms GameSessionEnded_Parms;
	ProcessEvent(pFnGameSessionEnded,NULL,&GameSessionEnded_Parms,NULL);
}

struct Engine_ClearProgressMessages_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UGameViewportClient::ClearProgressMessages()
{
	static UFieldFunc* pFnClearProgressMessages = NULL;
	if(!pFnClearProgressMessages)
		pFnClearProgressMessages = UObject::FindFunction("Function Engine.GameViewportClient.ClearProgressMessages");

	Engine_ClearProgressMessages_Parms ClearProgressMessages_Parms;
	ProcessEvent(pFnClearProgressMessages,NULL,&ClearProgressMessages_Parms,NULL);
}

struct Engine_Init_Parms
{
	struct FString                                     OutError;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//class UPlayerManagerInteraction*                   PlayerInteraction;                                		// 0x000010 (0x0004)              
	//int                                                NumCustomInteractions;                            		// 0x000014 (0x0004)              
	//class UClass*                                      CustomInteractionClass;                           		// 0x000018 (0x0004)              
	//class UUIInteraction*                              CustomInteraction;                                		// 0x00001C (0x0004)              
	//int                                                Idx;                                              		// 0x000020 (0x0004)              
};

bool UGameViewportClient::Init(struct FString* OutError)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.GameViewportClient.Init");

	Engine_Init_Parms Init_Parms;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	if(OutError)
		memcpy(OutError,&Init_Parms.OutError,0xC);
	return Init_Parms.ReturnValue;
}

struct Engine_DebugCreatePlayer_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	//struct FString                                     Error;                                            		// 0x000004 (0x000C)              
};

void UGameViewportClient::DebugCreatePlayer(int ControllerId)
{
	static UFieldFunc* pFnDebugCreatePlayer = NULL;
	if(!pFnDebugCreatePlayer)
		pFnDebugCreatePlayer = UObject::FindFunction("Function Engine.GameViewportClient.DebugCreatePlayer");

	Engine_DebugCreatePlayer_Parms DebugCreatePlayer_Parms;
	DebugCreatePlayer_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnDebugCreatePlayer,NULL,&DebugCreatePlayer_Parms,NULL);
}

struct Engine_GetViewportSize_Parms
{
	FVector2                                           out_ViewportSize;                                 		// 0x000000 (0x0008)              
};

void UGameViewportClient::GetViewportSize(FVector2* out_ViewportSize)
{
	static UFieldFunc* pFnGetViewportSize = NULL;
	if(!pFnGetViewportSize)
		pFnGetViewportSize = UObject::FindFunction("Function Engine.GameViewportClient.GetViewportSize");

	Engine_GetViewportSize_Parms GetViewportSize_Parms;
	pFnGetViewportSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportSize,NULL,&GetViewportSize_Parms,NULL);
	pFnGetViewportSize->FunctionFlags |= 0x400;
	if(out_ViewportSize)
		memcpy(out_ViewportSize,&GetViewportSize_Parms.out_ViewportSize,0x8);
}

struct Engine_GetSubtitleRegion_Parms
{
	FVector2                                           MinPos;                                           		// 0x000000 (0x0008)              
	FVector2                                           MaxPos;                                           		// 0x000008 (0x0008)              
};

void UGameViewportClient::GetSubtitleRegion(FVector2* MinPos,FVector2* MaxPos)
{
	static UFieldFunc* pFnGetSubtitleRegion = NULL;
	if(!pFnGetSubtitleRegion)
		pFnGetSubtitleRegion = UObject::FindFunction("Function Engine.GameViewportClient.GetSubtitleRegion");

	Engine_GetSubtitleRegion_Parms GetSubtitleRegion_Parms;
	ProcessEvent(pFnGetSubtitleRegion,NULL,&GetSubtitleRegion_Parms,NULL);
	if(MinPos)
		memcpy(MinPos,&GetSubtitleRegion_Parms.MinPos,0x8);
	if(MaxPos)
		memcpy(MaxPos,&GetSubtitleRegion_Parms.MaxPos,0x8);
}

struct Engine_NotifyPlayerAdded_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                AddedPlayer;                                      		// 0x000004 (0x0004)              
	//int                                                InteractionIndex;                                 		// 0x000008 (0x0004)              
};

void UGameViewportClient::NotifyPlayerAdded(int PlayerIndex,class ULocalPlayer* AddedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerAdded = NULL;
	if(!pFnNotifyPlayerAdded)
		pFnNotifyPlayerAdded = UObject::FindFunction("Function Engine.GameViewportClient.NotifyPlayerAdded");

	Engine_NotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;
	NotifyPlayerAdded_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerAdded_Parms.AddedPlayer = AddedPlayer;
	ProcessEvent(pFnNotifyPlayerAdded,NULL,&NotifyPlayerAdded_Parms,NULL);
}

struct Engine_FixupOwnerReferences_Parms
{
	TArray<int>                                        IDMappings;                                       		// 0x000000 (0x000C)              
};

void UGameViewportClient::FixupOwnerReferences(TArray<int> IDMappings)
{
	static UFieldFunc* pFnFixupOwnerReferences = NULL;
	if(!pFnFixupOwnerReferences)
		pFnFixupOwnerReferences = UObject::FindFunction("Function Engine.GameViewportClient.FixupOwnerReferences");

	Engine_FixupOwnerReferences_Parms FixupOwnerReferences_Parms;
	memcpy(&FixupOwnerReferences_Parms.IDMappings,&IDMappings,0xC);
	pFnFixupOwnerReferences->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFixupOwnerReferences,NULL,&FixupOwnerReferences_Parms,NULL);
	pFnFixupOwnerReferences->FunctionFlags |= 0x400;
}

struct Engine_HandleInputKey_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	unsigned char                                      EventType;                                        		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	float                                              AmountDepressed;                                  		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HandleInputKey(int ControllerId,struct FName Key,unsigned char EventType,float AmountDepressed,bool bGamepad)
{
	static UFieldFunc* pFnHandleInputKey = NULL;
	if(!pFnHandleInputKey)
		pFnHandleInputKey = UObject::FindFunction("Function Engine.GameViewportClient.HandleInputKey");

	Engine_HandleInputKey_Parms HandleInputKey_Parms;
	HandleInputKey_Parms.ControllerId = ControllerId;
	memcpy(&HandleInputKey_Parms.Key,&Key,0x8);
	HandleInputKey_Parms.EventType = EventType;
	HandleInputKey_Parms.AmountDepressed = AmountDepressed;
	HandleInputKey_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnHandleInputKey,NULL,&HandleInputKey_Parms,NULL);
	return HandleInputKey_Parms.ReturnValue;
}

struct Engine_CalculatePixelCenter_Parms
{
	float                                              out_CenterX;                                      		// 0x000000 (0x0004)              
	float                                              out_CenterY;                                      		// 0x000004 (0x0004)              
	class ULocalPlayer*                                LPlayer;                                          		// 0x000008 (0x0004)              
	class UCanvas*                                     Canvas;                                           		// 0x00000C (0x0004)              
	unsigned long                                      bUseMaxPercent : 1;                               		// 0x000010 (0x0004) [0x00000001] 
	//int                                                LocalPlayerIndex;                                 		// 0x000014 (0x0004)              
	//float                                              HorizSafeZoneValue;                               		// 0x000018 (0x0004)              
	//float                                              VertSafeZoneValue;                                		// 0x00001C (0x0004)              
};

void UGameViewportClient::CalculatePixelCenter(float* out_CenterX,float* out_CenterY,class ULocalPlayer* LPlayer,class UCanvas* Canvas,bool bUseMaxPercent)
{
	static UFieldFunc* pFnCalculatePixelCenter = NULL;
	if(!pFnCalculatePixelCenter)
		pFnCalculatePixelCenter = UObject::FindFunction("Function Engine.GameViewportClient.CalculatePixelCenter");

	Engine_CalculatePixelCenter_Parms CalculatePixelCenter_Parms;
	CalculatePixelCenter_Parms.LPlayer = LPlayer;
	CalculatePixelCenter_Parms.Canvas = Canvas;
	CalculatePixelCenter_Parms.bUseMaxPercent = bUseMaxPercent;
	ProcessEvent(pFnCalculatePixelCenter,NULL,&CalculatePixelCenter_Parms,NULL);
	if(out_CenterX)
		*out_CenterX = CalculatePixelCenter_Parms.out_CenterX;
	if(out_CenterY)
		*out_CenterY = CalculatePixelCenter_Parms.out_CenterY;
}

struct Engine_IsFullScreenViewport_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UGameViewportClient::IsFullScreenViewport()
{
	static UFieldFunc* pFnIsFullScreenViewport = NULL;
	if(!pFnIsFullScreenViewport)
		pFnIsFullScreenViewport = UObject::FindFunction("Function Engine.GameViewportClient.IsFullScreenViewport");

	Engine_IsFullScreenViewport_Parms IsFullScreenViewport_Parms;
	pFnIsFullScreenViewport->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsFullScreenViewport,NULL,&IsFullScreenViewport_Parms,NULL);
	pFnIsFullScreenViewport->FunctionFlags |= 0x400;
	return IsFullScreenViewport_Parms.ReturnValue;
}

struct Engine_NotifyConnectionError_Parms
{
	unsigned char                                      MessageType;                                      		// 0x000000 (0x0001)              
	struct FString                                     Message;                                          		// 0x000004 (0x000C)              
	struct FString                                     Title;                                            		// 0x000010 (0x000C)              
	//class AWorldInfo*                                  WI;                                               		// 0x00001C (0x0004)              
};

void UGameViewportClient::NotifyConnectionError(unsigned char MessageType,struct FString Message,struct FString Title)
{
	static UFieldFunc* pFnNotifyConnectionError = NULL;
	if(!pFnNotifyConnectionError)
		pFnNotifyConnectionError = UObject::FindFunction("Function Engine.GameViewportClient.NotifyConnectionError");

	Engine_NotifyConnectionError_Parms NotifyConnectionError_Parms;
	NotifyConnectionError_Parms.MessageType = MessageType;
	memcpy(&NotifyConnectionError_Parms.Message,&Message,0xC);
	memcpy(&NotifyConnectionError_Parms.Title,&Title,0xC);
	ProcessEvent(pFnNotifyConnectionError,NULL,&NotifyConnectionError_Parms,NULL);
}

struct Engine_CalculateDeadZone_Parms
{
	class ULocalPlayer*                                LPlayer;                                          		// 0x000000 (0x0004)              
	unsigned char                                      SZType;                                           		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	class UCanvas*                                     Canvas;                                           		// 0x000008 (0x0004)              
	unsigned long                                      bUseMaxPercent : 1;                               		// 0x00000C (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000010 (0x0004)              
	//unsigned long                                      bHasSafeZone : 1;                                 		// 0x000014 (0x0004) [0x00000001] 
	//int                                                LocalPlayerIndex;                                 		// 0x000018 (0x0004)              
	//float                                              HorizSafeZoneValue;                               		// 0x00001C (0x0004)              
	//float                                              VertSafeZoneValue;                                		// 0x000020 (0x0004)              
};

float UGameViewportClient::CalculateDeadZone(class ULocalPlayer* LPlayer,unsigned char SZType,class UCanvas* Canvas,bool bUseMaxPercent)
{
	static UFieldFunc* pFnCalculateDeadZone = NULL;
	if(!pFnCalculateDeadZone)
		pFnCalculateDeadZone = UObject::FindFunction("Function Engine.GameViewportClient.CalculateDeadZone");

	Engine_CalculateDeadZone_Parms CalculateDeadZone_Parms;
	CalculateDeadZone_Parms.LPlayer = LPlayer;
	CalculateDeadZone_Parms.SZType = SZType;
	CalculateDeadZone_Parms.Canvas = Canvas;
	CalculateDeadZone_Parms.bUseMaxPercent = bUseMaxPercent;
	ProcessEvent(pFnCalculateDeadZone,NULL,&CalculateDeadZone_Parms,NULL);
	return CalculateDeadZone_Parms.ReturnValue;
}

struct Engine_ConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UGameViewportClient::ConsoleCommand(struct FString Command)
{
	static UFieldFunc* pFnConsoleCommand = NULL;
	if(!pFnConsoleCommand)
		pFnConsoleCommand = UObject::FindFunction("Function Engine.GameViewportClient.ConsoleCommand");

	Engine_ConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy(&ConsoleCommand_Parms.Command,&Command,0xC);
	pFnConsoleCommand->FunctionFlags |= ~0x400;
	ProcessEvent(pFnConsoleCommand,NULL,&ConsoleCommand_Parms,NULL);
	pFnConsoleCommand->FunctionFlags |= 0x400;
	return ConsoleCommand_Parms.ReturnValue;
}

struct Engine_AddLocalPlayer_Parms
{
	class ULocalPlayer*                                NewPlayer;                                        		// 0x000000 (0x0004)              
	//int                                                InsertIndex;                                      		// 0x000004 (0x0004)              
};

void UGameViewportClient::AddLocalPlayer(class ULocalPlayer* NewPlayer)
{
	static UFieldFunc* pFnAddLocalPlayer = NULL;
	if(!pFnAddLocalPlayer)
		pFnAddLocalPlayer = UObject::FindFunction("Function Engine.GameViewportClient.AddLocalPlayer");

	Engine_AddLocalPlayer_Parms AddLocalPlayer_Parms;
	AddLocalPlayer_Parms.NewPlayer = NewPlayer;
	ProcessEvent(pFnAddLocalPlayer,NULL,&AddLocalPlayer_Parms,NULL);
}

struct Engine_DrawTransitionMessage_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
	struct FString                                     Message;                                          		// 0x000004 (0x000C)              
	//float                                              XL;                                               		// 0x000010 (0x0004)              
	//float                                              YL;                                               		// 0x000014 (0x0004)              
};

void UGameViewportClient::DrawTransitionMessage(class UCanvas* Canvas,struct FString Message)
{
	static UFieldFunc* pFnDrawTransitionMessage = NULL;
	if(!pFnDrawTransitionMessage)
		pFnDrawTransitionMessage = UObject::FindFunction("Function Engine.GameViewportClient.DrawTransitionMessage");

	Engine_DrawTransitionMessage_Parms DrawTransitionMessage_Parms;
	DrawTransitionMessage_Parms.Canvas = Canvas;
	memcpy(&DrawTransitionMessage_Parms.Message,&Message,0xC);
	ProcessEvent(pFnDrawTransitionMessage,NULL,&DrawTransitionMessage_Parms,NULL);
}

struct Engine_HandleInputChar_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FString                                     Unicode;                                          		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HandleInputChar(int ControllerId,struct FString Unicode)
{
	static UFieldFunc* pFnHandleInputChar = NULL;
	if(!pFnHandleInputChar)
		pFnHandleInputChar = UObject::FindFunction("Function Engine.GameViewportClient.HandleInputChar");

	Engine_HandleInputChar_Parms HandleInputChar_Parms;
	HandleInputChar_Parms.ControllerId = ControllerId;
	memcpy(&HandleInputChar_Parms.Unicode,&Unicode,0xC);
	ProcessEvent(pFnHandleInputChar,NULL,&HandleInputChar_Parms,NULL);
	return HandleInputChar_Parms.ReturnValue;
}

struct Engine_InsertInteraction_Parms
{
	class UInteraction*                                NewInteraction;                                   		// 0x000000 (0x0004)              
	int                                                InIndex;                                          		// 0x000004 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                Result;                                           		// 0x00000C (0x0004)              
};

int UGameViewportClient::InsertInteraction(class UInteraction* NewInteraction,int InIndex)
{
	static UFieldFunc* pFnInsertInteraction = NULL;
	if(!pFnInsertInteraction)
		pFnInsertInteraction = UObject::FindFunction("Function Engine.GameViewportClient.InsertInteraction");

	Engine_InsertInteraction_Parms InsertInteraction_Parms;
	InsertInteraction_Parms.NewInteraction = NewInteraction;
	InsertInteraction_Parms.InIndex = InIndex;
	ProcessEvent(pFnInsertInteraction,NULL,&InsertInteraction_Parms,NULL);
	return InsertInteraction_Parms.ReturnValue;
}

struct Engine_RemoveLocalPlayer_Parms
{
	class ULocalPlayer*                                ExistingPlayer;                                   		// 0x000000 (0x0004)              
	//int                                                Index;                                            		// 0x000004 (0x0004)              
};

void UGameViewportClient::RemoveLocalPlayer(class ULocalPlayer* ExistingPlayer)
{
	static UFieldFunc* pFnRemoveLocalPlayer = NULL;
	if(!pFnRemoveLocalPlayer)
		pFnRemoveLocalPlayer = UObject::FindFunction("Function Engine.GameViewportClient.RemoveLocalPlayer");

	Engine_RemoveLocalPlayer_Parms RemoveLocalPlayer_Parms;
	RemoveLocalPlayer_Parms.ExistingPlayer = ExistingPlayer;
	ProcessEvent(pFnRemoveLocalPlayer,NULL,&RemoveLocalPlayer_Parms,NULL);
}

struct Engine_PostRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UGameViewportClient::PostRender(class UCanvas* Canvas)
{
	static UFieldFunc* pFnPostRender = NULL;
	if(!pFnPostRender)
		pFnPostRender = UObject::FindFunction("Function Engine.GameViewportClient.PostRender");

	Engine_PostRender_Parms PostRender_Parms;
	PostRender_Parms.Canvas = Canvas;
	ProcessEvent(pFnPostRender,NULL,&PostRender_Parms,NULL);
}

struct Engine_FindPlayerByControllerId_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	class ULocalPlayer*                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
};

class ULocalPlayer* UGameViewportClient::FindPlayerByControllerId(int ControllerId)
{
	static UFieldFunc* pFnFindPlayerByControllerId = NULL;
	if(!pFnFindPlayerByControllerId)
		pFnFindPlayerByControllerId = UObject::FindFunction("Function Engine.GameViewportClient.FindPlayerByControllerId");

	Engine_FindPlayerByControllerId_Parms FindPlayerByControllerId_Parms;
	FindPlayerByControllerId_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnFindPlayerByControllerId,NULL,&FindPlayerByControllerId_Parms,NULL);
	return FindPlayerByControllerId_Parms.ReturnValue;
}

struct Engine_RenderDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UGameViewportClient::RenderDebug(class UCanvas* Canvas)
{
	static UFieldFunc* pFnRenderDebug = NULL;
	if(!pFnRenderDebug)
		pFnRenderDebug = UObject::FindFunction("Function Engine.GameViewportClient.RenderDebug");

	Engine_RenderDebug_Parms RenderDebug_Parms;
	RenderDebug_Parms.Canvas = Canvas;
	ProcessEvent(pFnRenderDebug,NULL,&RenderDebug_Parms,NULL);
}

struct Engine_SetConsoleTarget_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
};

void UGameViewportClient::SetConsoleTarget(int PlayerIndex)
{
	static UFieldFunc* pFnSetConsoleTarget = NULL;
	if(!pFnSetConsoleTarget)
		pFnSetConsoleTarget = UObject::FindFunction("Function Engine.GameViewportClient.SetConsoleTarget");

	Engine_SetConsoleTarget_Parms SetConsoleTarget_Parms;
	SetConsoleTarget_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnSetConsoleTarget,NULL,&SetConsoleTarget_Parms,NULL);
}

struct Engine_HasBottomSafeZone_Parms
{
	int                                                LocalPlayerIndex;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HasBottomSafeZone(int LocalPlayerIndex)
{
	static UFieldFunc* pFnHasBottomSafeZone = NULL;
	if(!pFnHasBottomSafeZone)
		pFnHasBottomSafeZone = UObject::FindFunction("Function Engine.GameViewportClient.HasBottomSafeZone");

	Engine_HasBottomSafeZone_Parms HasBottomSafeZone_Parms;
	HasBottomSafeZone_Parms.LocalPlayerIndex = LocalPlayerIndex;
	ProcessEvent(pFnHasBottomSafeZone,NULL,&HasBottomSafeZone_Parms,NULL);
	return HasBottomSafeZone_Parms.ReturnValue;
}

struct Engine_ConvertLocalPlayerToGamePlayerIndex_Parms
{
	class ULocalPlayer*                                LPlayer;                                          		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UGameViewportClient::ConvertLocalPlayerToGamePlayerIndex(class ULocalPlayer* LPlayer)
{
	static UFieldFunc* pFnConvertLocalPlayerToGamePlayerIndex = NULL;
	if(!pFnConvertLocalPlayerToGamePlayerIndex)
		pFnConvertLocalPlayerToGamePlayerIndex = UObject::FindFunction("Function Engine.GameViewportClient.ConvertLocalPlayerToGamePlayerIndex");

	Engine_ConvertLocalPlayerToGamePlayerIndex_Parms ConvertLocalPlayerToGamePlayerIndex_Parms;
	ConvertLocalPlayerToGamePlayerIndex_Parms.LPlayer = LPlayer;
	ProcessEvent(pFnConvertLocalPlayerToGamePlayerIndex,NULL,&ConvertLocalPlayerToGamePlayerIndex_Parms,NULL);
	return ConvertLocalPlayerToGamePlayerIndex_Parms.ReturnValue;
}

struct Engine_SetCustomInteractionObject_Parms
{
	class UInteraction*                                InInteraction;                                    		// 0x000000 (0x0004)              
};

void UGameViewportClient::SetCustomInteractionObject(class UInteraction* InInteraction)
{
	static UFieldFunc* pFnSetCustomInteractionObject = NULL;
	if(!pFnSetCustomInteractionObject)
		pFnSetCustomInteractionObject = UObject::FindFunction("Function Engine.GameViewportClient.SetCustomInteractionObject");

	Engine_SetCustomInteractionObject_Parms SetCustomInteractionObject_Parms;
	SetCustomInteractionObject_Parms.InInteraction = InInteraction;
	pFnSetCustomInteractionObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCustomInteractionObject,NULL,&SetCustomInteractionObject_Parms,NULL);
	pFnSetCustomInteractionObject->FunctionFlags |= 0x400;
}

struct Engine_ChangedInputLanguage_Parms
{
	struct FString                                     sInputLangId;                                     		// 0x000000 (0x000C)              
	unsigned long                                      bHasIME : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bIMEActive : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
	//int                                                InteractionIndex;                                 		// 0x000014 (0x0004)              
};

void UGameViewportClient::ChangedInputLanguage(struct FString sInputLangId,bool bHasIME,bool bIMEActive)
{
	static UFieldFunc* pFnChangedInputLanguage = NULL;
	if(!pFnChangedInputLanguage)
		pFnChangedInputLanguage = UObject::FindFunction("Function Engine.GameViewportClient.ChangedInputLanguage");

	Engine_ChangedInputLanguage_Parms ChangedInputLanguage_Parms;
	memcpy(&ChangedInputLanguage_Parms.sInputLangId,&sInputLangId,0xC);
	ChangedInputLanguage_Parms.bHasIME = bHasIME;
	ChangedInputLanguage_Parms.bIMEActive = bIMEActive;
	ProcessEvent(pFnChangedInputLanguage,NULL,&ChangedInputLanguage_Parms,NULL);
}

struct Engine_SetSplitscreenConfiguration_Parms
{
	unsigned char                                      SplitType;                                        		// 0x000000 (0x0001)              
	//int                                                Idx;                                              		// 0x000004 (0x0004)              
	//unsigned char                                      PreviousSplitType;                                		// 0x000008 (0x0001)              
};

void UGameViewportClient::SetSplitscreenConfiguration(unsigned char SplitType)
{
	static UFieldFunc* pFnSetSplitscreenConfiguration = NULL;
	if(!pFnSetSplitscreenConfiguration)
		pFnSetSplitscreenConfiguration = UObject::FindFunction("Function Engine.GameViewportClient.SetSplitscreenConfiguration");

	Engine_SetSplitscreenConfiguration_Parms SetSplitscreenConfiguration_Parms;
	SetSplitscreenConfiguration_Parms.SplitType = SplitType;
	ProcessEvent(pFnSetSplitscreenConfiguration,NULL,&SetSplitscreenConfiguration_Parms,NULL);
}

struct Engine_SSSwapControllers_Parms
{
	//int                                                Idx;                                              		// 0x000000 (0x0004)              
	//int                                                TmpControllerID;                                  		// 0x000004 (0x0004)              
};

void UGameViewportClient::SSSwapControllers()
{
	static UFieldFunc* pFnSSSwapControllers = NULL;
	if(!pFnSSSwapControllers)
		pFnSSSwapControllers = UObject::FindFunction("Function Engine.GameViewportClient.SSSwapControllers");

	Engine_SSSwapControllers_Parms SSSwapControllers_Parms;
	ProcessEvent(pFnSSSwapControllers,NULL,&SSSwapControllers_Parms,NULL);
}

struct Engine_NativeRenderDebug_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UGameViewportClient::NativeRenderDebug(class UCanvas* Canvas)
{
	static UFieldFunc* pFnNativeRenderDebug = NULL;
	if(!pFnNativeRenderDebug)
		pFnNativeRenderDebug = UObject::FindFunction("Function Engine.GameViewportClient.NativeRenderDebug");

	Engine_NativeRenderDebug_Parms NativeRenderDebug_Parms;
	NativeRenderDebug_Parms.Canvas = Canvas;
	pFnNativeRenderDebug->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNativeRenderDebug,NULL,&NativeRenderDebug_Parms,NULL);
	pFnNativeRenderDebug->FunctionFlags |= 0x400;
}

struct Engine_DebugRemovePlayer_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                ExPlayer;                                         		// 0x000004 (0x0004)              
};

void UGameViewportClient::DebugRemovePlayer(int ControllerId)
{
	static UFieldFunc* pFnDebugRemovePlayer = NULL;
	if(!pFnDebugRemovePlayer)
		pFnDebugRemovePlayer = UObject::FindFunction("Function Engine.GameViewportClient.DebugRemovePlayer");

	Engine_DebugRemovePlayer_Parms DebugRemovePlayer_Parms;
	DebugRemovePlayer_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnDebugRemovePlayer,NULL,&DebugRemovePlayer_Parms,NULL);
}

struct Engine_SetProgressMessage_Parms
{
	unsigned char                                      MessageType;                                      		// 0x000000 (0x0001)              
	struct FString                                     Message;                                          		// 0x000004 (0x000C)              
	struct FString                                     Title;                                            		// 0x000010 (0x000C)              
	unsigned long                                      bIgnoreFutureNetworkMessages : 1;                 		// 0x00001C (0x0004) [0x00000001] 
	//class AWorldInfo*                                  WI;                                               		// 0x000020 (0x0004)              
};

void UGameViewportClient::SetProgressMessage(unsigned char MessageType,struct FString Message,struct FString Title,bool bIgnoreFutureNetworkMessages)
{
	static UFieldFunc* pFnSetProgressMessage = NULL;
	if(!pFnSetProgressMessage)
		pFnSetProgressMessage = UObject::FindFunction("Function Engine.GameViewportClient.SetProgressMessage");

	Engine_SetProgressMessage_Parms SetProgressMessage_Parms;
	SetProgressMessage_Parms.MessageType = MessageType;
	memcpy(&SetProgressMessage_Parms.Message,&Message,0xC);
	memcpy(&SetProgressMessage_Parms.Title,&Title,0xC);
	SetProgressMessage_Parms.bIgnoreFutureNetworkMessages = bIgnoreFutureNetworkMessages;
	ProcessEvent(pFnSetProgressMessage,NULL,&SetProgressMessage_Parms,NULL);
}

struct Engine_HasTopSafeZone_Parms
{
	int                                                LocalPlayerIndex;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HasTopSafeZone(int LocalPlayerIndex)
{
	static UFieldFunc* pFnHasTopSafeZone = NULL;
	if(!pFnHasTopSafeZone)
		pFnHasTopSafeZone = UObject::FindFunction("Function Engine.GameViewportClient.HasTopSafeZone");

	Engine_HasTopSafeZone_Parms HasTopSafeZone_Parms;
	HasTopSafeZone_Parms.LocalPlayerIndex = LocalPlayerIndex;
	ProcessEvent(pFnHasTopSafeZone,NULL,&HasTopSafeZone_Parms,NULL);
	return HasTopSafeZone_Parms.ReturnValue;
}

struct Engine_NotifySplitscreenLayoutChanged_Parms
{
};

void UGameViewportClient::NotifySplitscreenLayoutChanged()
{
	static UFieldFunc* pFnNotifySplitscreenLayoutChanged = NULL;
	if(!pFnNotifySplitscreenLayoutChanged)
		pFnNotifySplitscreenLayoutChanged = UObject::FindFunction("Function Engine.GameViewportClient.NotifySplitscreenLayoutChanged");

	Engine_NotifySplitscreenLayoutChanged_Parms NotifySplitscreenLayoutChanged_Parms;
	pFnNotifySplitscreenLayoutChanged->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifySplitscreenLayoutChanged,NULL,&NotifySplitscreenLayoutChanged_Parms,NULL);
	pFnNotifySplitscreenLayoutChanged->FunctionFlags |= 0x400;
}

struct Engine_GetPixelSizeOfScreen_Parms
{
	float                                              out_Width;                                        		// 0x000000 (0x0004)              
	float                                              out_Height;                                       		// 0x000004 (0x0004)              
	class UCanvas*                                     Canvas;                                           		// 0x000008 (0x0004)              
	int                                                LocalPlayerIndex;                                 		// 0x00000C (0x0004)              
};

void UGameViewportClient::GetPixelSizeOfScreen(float* out_Width,float* out_Height,class UCanvas* Canvas,int LocalPlayerIndex)
{
	static UFieldFunc* pFnGetPixelSizeOfScreen = NULL;
	if(!pFnGetPixelSizeOfScreen)
		pFnGetPixelSizeOfScreen = UObject::FindFunction("Function Engine.GameViewportClient.GetPixelSizeOfScreen");

	Engine_GetPixelSizeOfScreen_Parms GetPixelSizeOfScreen_Parms;
	GetPixelSizeOfScreen_Parms.Canvas = Canvas;
	GetPixelSizeOfScreen_Parms.LocalPlayerIndex = LocalPlayerIndex;
	ProcessEvent(pFnGetPixelSizeOfScreen,NULL,&GetPixelSizeOfScreen_Parms,NULL);
	if(out_Width)
		*out_Width = GetPixelSizeOfScreen_Parms.out_Width;
	if(out_Height)
		*out_Height = GetPixelSizeOfScreen_Parms.out_Height;
}

struct Engine_HasRightSafeZone_Parms
{
	int                                                LocalPlayerIndex;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UGameViewportClient::HasRightSafeZone(int LocalPlayerIndex)
{
	static UFieldFunc* pFnHasRightSafeZone = NULL;
	if(!pFnHasRightSafeZone)
		pFnHasRightSafeZone = UObject::FindFunction("Function Engine.GameViewportClient.HasRightSafeZone");

	Engine_HasRightSafeZone_Parms HasRightSafeZone_Parms;
	HasRightSafeZone_Parms.LocalPlayerIndex = LocalPlayerIndex;
	ProcessEvent(pFnHasRightSafeZone,NULL,&HasRightSafeZone_Parms,NULL);
	return HasRightSafeZone_Parms.ReturnValue;
}

struct Engine_RemovePlayer_Parms
{
	class ULocalPlayer*                                ExPlayer;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UGameViewportClient::RemovePlayer(class ULocalPlayer* ExPlayer)
{
	static UFieldFunc* pFnRemovePlayer = NULL;
	if(!pFnRemovePlayer)
		pFnRemovePlayer = UObject::FindFunction("Function Engine.GameViewportClient.RemovePlayer");

	Engine_RemovePlayer_Parms RemovePlayer_Parms;
	RemovePlayer_Parms.ExPlayer = ExPlayer;
	ProcessEvent(pFnRemovePlayer,NULL,&RemovePlayer_Parms,NULL);
	return RemovePlayer_Parms.ReturnValue;
}

struct Engine_GetCustomInteractionClass_Parms
{
	int                                                InIndex;                                          		// 0x000000 (0x0004)              
	class UClass*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UClass* UGameViewportClient::GetCustomInteractionClass(int InIndex)
{
	static UFieldFunc* pFnGetCustomInteractionClass = NULL;
	if(!pFnGetCustomInteractionClass)
		pFnGetCustomInteractionClass = UObject::FindFunction("Function Engine.GameViewportClient.GetCustomInteractionClass");

	Engine_GetCustomInteractionClass_Parms GetCustomInteractionClass_Parms;
	GetCustomInteractionClass_Parms.InIndex = InIndex;
	pFnGetCustomInteractionClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCustomInteractionClass,NULL,&GetCustomInteractionClass_Parms,NULL);
	pFnGetCustomInteractionClass->FunctionFlags |= 0x400;
	return GetCustomInteractionClass_Parms.ReturnValue;
}

struct Engine_GetCurrentPlayerNum_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UGameViewportClient::GetCurrentPlayerNum()
{
	static UFieldFunc* pFnGetCurrentPlayerNum = NULL;
	if(!pFnGetCurrentPlayerNum)
		pFnGetCurrentPlayerNum = UObject::FindFunction("Function Engine.GameViewportClient.GetCurrentPlayerNum");

	Engine_GetCurrentPlayerNum_Parms GetCurrentPlayerNum_Parms;
	pFnGetCurrentPlayerNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentPlayerNum,NULL,&GetCurrentPlayerNum_Parms,NULL);
	pFnGetCurrentPlayerNum->FunctionFlags |= 0x400;
	return GetCurrentPlayerNum_Parms.ReturnValue;
}

struct Engine_SetSplit_Parms
{
	int                                                Mode;                                             		// 0x000000 (0x0004)              
};

void UGameViewportClient::SetSplit(int Mode)
{
	static UFieldFunc* pFnSetSplit = NULL;
	if(!pFnSetSplit)
		pFnSetSplit = UObject::FindFunction("Function Engine.GameViewportClient.SetSplit");

	Engine_SetSplit_Parms SetSplit_Parms;
	SetSplit_Parms.Mode = Mode;
	ProcessEvent(pFnSetSplit,NULL,&SetSplit_Parms,NULL);
}

struct Engine_GetNumCustomInteractions_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UGameViewportClient::GetNumCustomInteractions()
{
	static UFieldFunc* pFnGetNumCustomInteractions = NULL;
	if(!pFnGetNumCustomInteractions)
		pFnGetNumCustomInteractions = UObject::FindFunction("Function Engine.GameViewportClient.GetNumCustomInteractions");

	Engine_GetNumCustomInteractions_Parms GetNumCustomInteractions_Parms;
	pFnGetNumCustomInteractions->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumCustomInteractions,NULL,&GetNumCustomInteractions_Parms,NULL);
	pFnGetNumCustomInteractions->FunctionFlags |= 0x400;
	return GetNumCustomInteractions_Parms.ReturnValue;
}

struct Engine_PostRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UcVSViewportClient::PostRender(class UCanvas* Canvas)
{
	static UFieldFunc* pFnPostRender = NULL;
	if(!pFnPostRender)
		pFnPostRender = UObject::FindFunction("Function Engine.cVSViewportClient.PostRender");

	Engine_PostRender_Parms PostRender_Parms;
	PostRender_Parms.Canvas = Canvas;
	ProcessEvent(pFnPostRender,NULL,&PostRender_Parms,NULL);
}

struct Engine_SetSplitscreenConfiguration_Parms
{
	unsigned char                                      SplitType;                                        		// 0x000000 (0x0001)              
};

void UcVSViewportClient::SetSplitscreenConfiguration(unsigned char SplitType)
{
	static UFieldFunc* pFnSetSplitscreenConfiguration = NULL;
	if(!pFnSetSplitscreenConfiguration)
		pFnSetSplitscreenConfiguration = UObject::FindFunction("Function Engine.cVSViewportClient.SetSplitscreenConfiguration");

	Engine_SetSplitscreenConfiguration_Parms SetSplitscreenConfiguration_Parms;
	SetSplitscreenConfiguration_Parms.SplitType = SplitType;
	ProcessEvent(pFnSetSplitscreenConfiguration,NULL,&SetSplitscreenConfiguration_Parms,NULL);
}

struct Engine_Tick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void UcVSViewportClient::Tick(float DeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.cVSViewportClient.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_Init_Parms
{
	struct FString                                     OutError;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//class UPlayerManagerInteraction*                   PlayerInteraction;                                		// 0x000010 (0x0004)              
};

bool UcVSViewportClient::Init(struct FString* OutError)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.cVSViewportClient.Init");

	Engine_Init_Parms Init_Parms;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	if(OutError)
		memcpy(OutError,&Init_Parms.OutError,0xC);
	return Init_Parms.ReturnValue;
}

struct Engine_GameSessionEnded_Parms
{
};

void UcVSViewportClient::GameSessionEnded()
{
	static UFieldFunc* pFnGameSessionEnded = NULL;
	if(!pFnGameSessionEnded)
		pFnGameSessionEnded = UObject::FindFunction("Function Engine.cVSViewportClient.GameSessionEnded");

	Engine_GameSessionEnded_Parms GameSessionEnded_Parms;
	ProcessEvent(pFnGameSessionEnded,NULL,&GameSessionEnded_Parms,NULL);
}

struct Engine_GetHeader_Parms
{
	struct FString                                     HeaderName;                                       		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UHttpBaseInterface::GetHeader(struct FString HeaderName)
{
	static UFieldFunc* pFnGetHeader = NULL;
	if(!pFnGetHeader)
		pFnGetHeader = UObject::FindFunction("Function Engine.HttpBaseInterface.GetHeader");

	Engine_GetHeader_Parms GetHeader_Parms;
	memcpy(&GetHeader_Parms.HeaderName,&HeaderName,0xC);
	pFnGetHeader->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetHeader,NULL,&GetHeader_Parms,NULL);
	pFnGetHeader->FunctionFlags |= 0x400;
	return GetHeader_Parms.ReturnValue;
}

struct Engine_GetHeaders_Parms
{
	TArray<struct FString>                             ReturnValue;                                      		// 0x000000 (0x000C)              
};

TArray<struct FString> UHttpBaseInterface::GetHeaders()
{
	static UFieldFunc* pFnGetHeaders = NULL;
	if(!pFnGetHeaders)
		pFnGetHeaders = UObject::FindFunction("Function Engine.HttpBaseInterface.GetHeaders");

	Engine_GetHeaders_Parms GetHeaders_Parms;
	pFnGetHeaders->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetHeaders,NULL,&GetHeaders_Parms,NULL);
	pFnGetHeaders->FunctionFlags |= 0x400;
	return GetHeaders_Parms.ReturnValue;
}

struct Engine_GetContentLength_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UHttpBaseInterface::GetContentLength()
{
	static UFieldFunc* pFnGetContentLength = NULL;
	if(!pFnGetContentLength)
		pFnGetContentLength = UObject::FindFunction("Function Engine.HttpBaseInterface.GetContentLength");

	Engine_GetContentLength_Parms GetContentLength_Parms;
	pFnGetContentLength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetContentLength,NULL,&GetContentLength_Parms,NULL);
	pFnGetContentLength->FunctionFlags |= 0x400;
	return GetContentLength_Parms.ReturnValue;
}

struct Engine_GetURLParameter_Parms
{
	struct FString                                     ParameterName;                                    		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UHttpBaseInterface::GetURLParameter(struct FString ParameterName)
{
	static UFieldFunc* pFnGetURLParameter = NULL;
	if(!pFnGetURLParameter)
		pFnGetURLParameter = UObject::FindFunction("Function Engine.HttpBaseInterface.GetURLParameter");

	Engine_GetURLParameter_Parms GetURLParameter_Parms;
	memcpy(&GetURLParameter_Parms.ParameterName,&ParameterName,0xC);
	pFnGetURLParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetURLParameter,NULL,&GetURLParameter_Parms,NULL);
	pFnGetURLParameter->FunctionFlags |= 0x400;
	return GetURLParameter_Parms.ReturnValue;
}

struct Engine_GetContent_Parms
{
	TArray<unsigned char>                              Content;                                          		// 0x000000 (0x000C)              
};

void UHttpBaseInterface::GetContent(TArray<unsigned char>* Content)
{
	static UFieldFunc* pFnGetContent = NULL;
	if(!pFnGetContent)
		pFnGetContent = UObject::FindFunction("Function Engine.HttpBaseInterface.GetContent");

	Engine_GetContent_Parms GetContent_Parms;
	pFnGetContent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetContent,NULL,&GetContent_Parms,NULL);
	pFnGetContent->FunctionFlags |= 0x400;
	if(Content)
		memcpy(Content,&GetContent_Parms.Content,0xC);
}

struct Engine_GetContentType_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UHttpBaseInterface::GetContentType()
{
	static UFieldFunc* pFnGetContentType = NULL;
	if(!pFnGetContentType)
		pFnGetContentType = UObject::FindFunction("Function Engine.HttpBaseInterface.GetContentType");

	Engine_GetContentType_Parms GetContentType_Parms;
	pFnGetContentType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetContentType,NULL,&GetContentType_Parms,NULL);
	pFnGetContentType->FunctionFlags |= 0x400;
	return GetContentType_Parms.ReturnValue;
}

struct Engine_GetURL_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UHttpBaseInterface::GetURL()
{
	static UFieldFunc* pFnGetURL = NULL;
	if(!pFnGetURL)
		pFnGetURL = UObject::FindFunction("Function Engine.HttpBaseInterface.GetURL");

	Engine_GetURL_Parms GetURL_Parms;
	pFnGetURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetURL,NULL,&GetURL_Parms,NULL);
	pFnGetURL->FunctionFlags |= 0x400;
	return GetURL_Parms.ReturnValue;
}

struct Engine_SetContent_Parms
{
	TArray<unsigned char>                              ContentPayload;                                   		// 0x000000 (0x000C)              
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UHttpRequestInterface* UHttpRequestInterface::SetContent(TArray<unsigned char>* ContentPayload)
{
	static UFieldFunc* pFnSetContent = NULL;
	if(!pFnSetContent)
		pFnSetContent = UObject::FindFunction("Function Engine.HttpRequestInterface.SetContent");

	Engine_SetContent_Parms SetContent_Parms;
	pFnSetContent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetContent,NULL,&SetContent_Parms,NULL);
	pFnSetContent->FunctionFlags |= 0x400;
	if(ContentPayload)
		memcpy(ContentPayload,&SetContent_Parms.ContentPayload,0xC);
	return SetContent_Parms.ReturnValue;
}

struct Engine_SetVerb_Parms
{
	struct FString                                     Verb;                                             		// 0x000000 (0x000C)              
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UHttpRequestInterface* UHttpRequestInterface::SetVerb(struct FString Verb)
{
	static UFieldFunc* pFnSetVerb = NULL;
	if(!pFnSetVerb)
		pFnSetVerb = UObject::FindFunction("Function Engine.HttpRequestInterface.SetVerb");

	Engine_SetVerb_Parms SetVerb_Parms;
	memcpy(&SetVerb_Parms.Verb,&Verb,0xC);
	pFnSetVerb->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVerb,NULL,&SetVerb_Parms,NULL);
	pFnSetVerb->FunctionFlags |= 0x400;
	return SetVerb_Parms.ReturnValue;
}

struct Engine_SetContentAsString_Parms
{
	struct FString                                     ContentString;                                    		// 0x000000 (0x000C)              
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UHttpRequestInterface* UHttpRequestInterface::SetContentAsString(struct FString ContentString)
{
	static UFieldFunc* pFnSetContentAsString = NULL;
	if(!pFnSetContentAsString)
		pFnSetContentAsString = UObject::FindFunction("Function Engine.HttpRequestInterface.SetContentAsString");

	Engine_SetContentAsString_Parms SetContentAsString_Parms;
	memcpy(&SetContentAsString_Parms.ContentString,&ContentString,0xC);
	pFnSetContentAsString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetContentAsString,NULL,&SetContentAsString_Parms,NULL);
	pFnSetContentAsString->FunctionFlags |= 0x400;
	return SetContentAsString_Parms.ReturnValue;
}

struct Engine_SetProcessRequestCompleteDelegate_Parms
{
	struct FScriptDelegate                             ProcessRequestCompleteDelegate;                   		// 0x000000 (0x000C)              
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UHttpRequestInterface* UHttpRequestInterface::SetProcessRequestCompleteDelegate(struct FScriptDelegate ProcessRequestCompleteDelegate)
{
	static UFieldFunc* pFnSetProcessRequestCompleteDelegate = NULL;
	if(!pFnSetProcessRequestCompleteDelegate)
		pFnSetProcessRequestCompleteDelegate = UObject::FindFunction("Function Engine.HttpRequestInterface.SetProcessRequestCompleteDelegate");

	Engine_SetProcessRequestCompleteDelegate_Parms SetProcessRequestCompleteDelegate_Parms;
	memcpy(&SetProcessRequestCompleteDelegate_Parms.ProcessRequestCompleteDelegate,&ProcessRequestCompleteDelegate,0xC);
	ProcessEvent(pFnSetProcessRequestCompleteDelegate,NULL,&SetProcessRequestCompleteDelegate_Parms,NULL);
	return SetProcessRequestCompleteDelegate_Parms.ReturnValue;
}

struct Engine_ProcessRequest_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UHttpRequestInterface::ProcessRequest()
{
	static UFieldFunc* pFnProcessRequest = NULL;
	if(!pFnProcessRequest)
		pFnProcessRequest = UObject::FindFunction("Function Engine.HttpRequestInterface.ProcessRequest");

	Engine_ProcessRequest_Parms ProcessRequest_Parms;
	pFnProcessRequest->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProcessRequest,NULL,&ProcessRequest_Parms,NULL);
	pFnProcessRequest->FunctionFlags |= 0x400;
	return ProcessRequest_Parms.ReturnValue;
}

struct Engine_SetURL_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UHttpRequestInterface* UHttpRequestInterface::SetURL(struct FString URL)
{
	static UFieldFunc* pFnSetURL = NULL;
	if(!pFnSetURL)
		pFnSetURL = UObject::FindFunction("Function Engine.HttpRequestInterface.SetURL");

	Engine_SetURL_Parms SetURL_Parms;
	memcpy(&SetURL_Parms.URL,&URL,0xC);
	pFnSetURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetURL,NULL,&SetURL_Parms,NULL);
	pFnSetURL->FunctionFlags |= 0x400;
	return SetURL_Parms.ReturnValue;
}

struct Engine_SetHeader_Parms
{
	struct FString                                     HeaderName;                                       		// 0x000000 (0x000C)              
	struct FString                                     HeaderValue;                                      		// 0x00000C (0x000C)              
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x000018 (0x0004)              
};

class UHttpRequestInterface* UHttpRequestInterface::SetHeader(struct FString HeaderName,struct FString HeaderValue)
{
	static UFieldFunc* pFnSetHeader = NULL;
	if(!pFnSetHeader)
		pFnSetHeader = UObject::FindFunction("Function Engine.HttpRequestInterface.SetHeader");

	Engine_SetHeader_Parms SetHeader_Parms;
	memcpy(&SetHeader_Parms.HeaderName,&HeaderName,0xC);
	memcpy(&SetHeader_Parms.HeaderValue,&HeaderValue,0xC);
	pFnSetHeader->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHeader,NULL,&SetHeader_Parms,NULL);
	pFnSetHeader->FunctionFlags |= 0x400;
	return SetHeader_Parms.ReturnValue;
}

struct Engine_GetVerb_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UHttpRequestInterface::GetVerb()
{
	static UFieldFunc* pFnGetVerb = NULL;
	if(!pFnGetVerb)
		pFnGetVerb = UObject::FindFunction("Function Engine.HttpRequestInterface.GetVerb");

	Engine_GetVerb_Parms GetVerb_Parms;
	pFnGetVerb->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVerb,NULL,&GetVerb_Parms,NULL);
	pFnGetVerb->FunctionFlags |= 0x400;
	return GetVerb_Parms.ReturnValue;
}

struct Engine_OnProcessRequestComplete_Parms
{
	class UHttpRequestInterface*                       OriginalRequest;                                  		// 0x000000 (0x0004)              
	class UHttpResponseInterface*                      InHttpResponse;                                   		// 0x000004 (0x0004)              
	unsigned long                                      bDidSucceed : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

void UHttpRequestInterface::OnProcessRequestComplete(class UHttpRequestInterface* OriginalRequest,class UHttpResponseInterface* InHttpResponse,bool bDidSucceed)
{
	static UFieldFunc* pFnOnProcessRequestComplete = NULL;
	if(!pFnOnProcessRequestComplete)
		pFnOnProcessRequestComplete = UObject::FindFunction("Function Engine.HttpRequestInterface.OnProcessRequestComplete");

	Engine_OnProcessRequestComplete_Parms OnProcessRequestComplete_Parms;
	OnProcessRequestComplete_Parms.OriginalRequest = OriginalRequest;
	OnProcessRequestComplete_Parms.InHttpResponse = InHttpResponse;
	OnProcessRequestComplete_Parms.bDidSucceed = bDidSucceed;
	ProcessEvent(pFnOnProcessRequestComplete,NULL,&OnProcessRequestComplete_Parms,NULL);
}

struct Engine_GetResponseCode_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UHttpResponseInterface::GetResponseCode()
{
	static UFieldFunc* pFnGetResponseCode = NULL;
	if(!pFnGetResponseCode)
		pFnGetResponseCode = UObject::FindFunction("Function Engine.HttpResponseInterface.GetResponseCode");

	Engine_GetResponseCode_Parms GetResponseCode_Parms;
	pFnGetResponseCode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetResponseCode,NULL,&GetResponseCode_Parms,NULL);
	pFnGetResponseCode->FunctionFlags |= 0x400;
	return GetResponseCode_Parms.ReturnValue;
}

struct Engine_GetContentAsString_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UHttpResponseInterface::GetContentAsString()
{
	static UFieldFunc* pFnGetContentAsString = NULL;
	if(!pFnGetContentAsString)
		pFnGetContentAsString = UObject::FindFunction("Function Engine.HttpResponseInterface.GetContentAsString");

	Engine_GetContentAsString_Parms GetContentAsString_Parms;
	pFnGetContentAsString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetContentAsString,NULL,&GetContentAsString_Parms,NULL);
	pFnGetContentAsString->FunctionFlags |= 0x400;
	return GetContentAsString_Parms.ReturnValue;
}

struct Engine_UpdateLocFileName_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UIniLocPatcher::UpdateLocFileName(struct FString Filename)
{
	static UFieldFunc* pFnUpdateLocFileName = NULL;
	if(!pFnUpdateLocFileName)
		pFnUpdateLocFileName = UObject::FindFunction("Function Engine.IniLocPatcher.UpdateLocFileName");

	Engine_UpdateLocFileName_Parms UpdateLocFileName_Parms;
	memcpy(&UpdateLocFileName_Parms.Filename,&Filename,0xC);
	pFnUpdateLocFileName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateLocFileName,NULL,&UpdateLocFileName_Parms,NULL);
	pFnUpdateLocFileName->FunctionFlags |= 0x400;
	return UpdateLocFileName_Parms.ReturnValue;
}

struct Engine_ClearCachedFiles_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
};

void UIniLocPatcher::ClearCachedFiles()
{
	static UFieldFunc* pFnClearCachedFiles = NULL;
	if(!pFnClearCachedFiles)
		pFnClearCachedFiles = UObject::FindFunction("Function Engine.IniLocPatcher.ClearCachedFiles");

	Engine_ClearCachedFiles_Parms ClearCachedFiles_Parms;
	ProcessEvent(pFnClearCachedFiles,NULL,&ClearCachedFiles_Parms,NULL);
}

struct Engine_CheckForAllFilesComplete_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
	//unsigned long                                      bAllFilesComplete : 1;                            		// 0x000004 (0x0004) [0x00000001] 
};

void UIniLocPatcher::CheckForAllFilesComplete()
{
	static UFieldFunc* pFnCheckForAllFilesComplete = NULL;
	if(!pFnCheckForAllFilesComplete)
		pFnCheckForAllFilesComplete = UObject::FindFunction("Function Engine.IniLocPatcher.CheckForAllFilesComplete");

	Engine_CheckForAllFilesComplete_Parms CheckForAllFilesComplete_Parms;
	ProcessEvent(pFnCheckForAllFilesComplete,NULL,&CheckForAllFilesComplete_Parms,NULL);
}

struct Engine_Init_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//int                                                Index;                                            		// 0x000004 (0x0004)              
};

void UIniLocPatcher::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.IniLocPatcher.Init");

	Engine_Init_Parms Init_Parms;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_OnReadTitleFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
};

void UIniLocPatcher::OnReadTitleFileComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnReadTitleFileComplete = NULL;
	if(!pFnOnReadTitleFileComplete)
		pFnOnReadTitleFileComplete = UObject::FindFunction("Function Engine.IniLocPatcher.OnReadTitleFileComplete");

	Engine_OnReadTitleFileComplete_Parms OnReadTitleFileComplete_Parms;
	OnReadTitleFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnReadTitleFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnReadTitleFileComplete,NULL,&OnReadTitleFileComplete_Parms,NULL);
}

struct Engine_OnDownloadFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
	//unsigned long                                      bSuccessLoad : 1;                                 		// 0x000010 (0x0004) [0x00000001] 
	//int                                                Index;                                            		// 0x000014 (0x0004)              
	//TArray<unsigned char>                              FileData;                                         		// 0x000018 (0x000C)              
};

void UIniLocPatcher::OnDownloadFileComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnDownloadFileComplete = NULL;
	if(!pFnOnDownloadFileComplete)
		pFnOnDownloadFileComplete = UObject::FindFunction("Function Engine.IniLocPatcher.OnDownloadFileComplete");

	Engine_OnDownloadFileComplete_Parms OnDownloadFileComplete_Parms;
	OnDownloadFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnDownloadFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnDownloadFileComplete,NULL,&OnDownloadFileComplete_Parms,NULL);
}

struct Engine_AddReadFileDelegate_Parms
{
	struct FScriptDelegate                             ReadTitleFileCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UIniLocPatcher::AddReadFileDelegate(struct FScriptDelegate ReadTitleFileCompleteDelegate)
{
	static UFieldFunc* pFnAddReadFileDelegate = NULL;
	if(!pFnAddReadFileDelegate)
		pFnAddReadFileDelegate = UObject::FindFunction("Function Engine.IniLocPatcher.AddReadFileDelegate");

	Engine_AddReadFileDelegate_Parms AddReadFileDelegate_Parms;
	memcpy(&AddReadFileDelegate_Parms.ReadTitleFileCompleteDelegate,&ReadTitleFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadFileDelegate,NULL,&AddReadFileDelegate_Parms,NULL);
}

struct Engine_OnAllTitleFilesCompleted_Parms
{
};

void UIniLocPatcher::OnAllTitleFilesCompleted()
{
	static UFieldFunc* pFnOnAllTitleFilesCompleted = NULL;
	if(!pFnOnAllTitleFilesCompleted)
		pFnOnAllTitleFilesCompleted = UObject::FindFunction("Function Engine.IniLocPatcher.OnAllTitleFilesCompleted");

	Engine_OnAllTitleFilesCompleted_Parms OnAllTitleFilesCompleted_Parms;
	ProcessEvent(pFnOnAllTitleFilesCompleted,NULL,&OnAllTitleFilesCompleted_Parms,NULL);
}

struct Engine_AddFileToDownload_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	//int                                                FileIndex;                                        		// 0x00000C (0x0004)              
};

void UIniLocPatcher::AddFileToDownload(struct FString Filename)
{
	static UFieldFunc* pFnAddFileToDownload = NULL;
	if(!pFnAddFileToDownload)
		pFnAddFileToDownload = UObject::FindFunction("Function Engine.IniLocPatcher.AddFileToDownload");

	Engine_AddFileToDownload_Parms AddFileToDownload_Parms;
	memcpy(&AddFileToDownload_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnAddFileToDownload,NULL,&AddFileToDownload_Parms,NULL);
}

struct Engine_TriggerDownloadCompleteDelegates_Parms
{
	unsigned long                                      bSuccess : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
	//int                                                Index;                                            		// 0x000010 (0x0004)              
	//struct FScriptDelegate                             OnReadTitleFileComplete;                          		// 0x000014 (0x000C)              
};

void UIniLocPatcher::TriggerDownloadCompleteDelegates(bool bSuccess,struct FString Filename)
{
	static UFieldFunc* pFnTriggerDownloadCompleteDelegates = NULL;
	if(!pFnTriggerDownloadCompleteDelegates)
		pFnTriggerDownloadCompleteDelegates = UObject::FindFunction("Function Engine.IniLocPatcher.TriggerDownloadCompleteDelegates");

	Engine_TriggerDownloadCompleteDelegates_Parms TriggerDownloadCompleteDelegates_Parms;
	TriggerDownloadCompleteDelegates_Parms.bSuccess = bSuccess;
	memcpy(&TriggerDownloadCompleteDelegates_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnTriggerDownloadCompleteDelegates,NULL,&TriggerDownloadCompleteDelegates_Parms,NULL);
}

struct Engine_StartLoadingFiles_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
};

void UIniLocPatcher::StartLoadingFiles()
{
	static UFieldFunc* pFnStartLoadingFiles = NULL;
	if(!pFnStartLoadingFiles)
		pFnStartLoadingFiles = UObject::FindFunction("Function Engine.IniLocPatcher.StartLoadingFiles");

	Engine_StartLoadingFiles_Parms StartLoadingFiles_Parms;
	ProcessEvent(pFnStartLoadingFiles,NULL,&StartLoadingFiles_Parms,NULL);
}

struct Engine_ProcessIniLocFile_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned long                                      bIsUnicode : 1;                                   		// 0x00000C (0x0004) [0x00000001] 
	TArray<unsigned char>                              FileData;                                         		// 0x000010 (0x000C)              
};

void UIniLocPatcher::ProcessIniLocFile(struct FString Filename,bool bIsUnicode,TArray<unsigned char>* FileData)
{
	static UFieldFunc* pFnProcessIniLocFile = NULL;
	if(!pFnProcessIniLocFile)
		pFnProcessIniLocFile = UObject::FindFunction("Function Engine.IniLocPatcher.ProcessIniLocFile");

	Engine_ProcessIniLocFile_Parms ProcessIniLocFile_Parms;
	memcpy(&ProcessIniLocFile_Parms.Filename,&Filename,0xC);
	ProcessIniLocFile_Parms.bIsUnicode = bIsUnicode;
	pFnProcessIniLocFile->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProcessIniLocFile,NULL,&ProcessIniLocFile_Parms,NULL);
	pFnProcessIniLocFile->FunctionFlags |= 0x400;
	if(FileData)
		memcpy(FileData,&ProcessIniLocFile_Parms.FileData,0xC);
}

struct Engine_OnFileCacheLoadComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
	//int                                                Index;                                            		// 0x000010 (0x0004)              
	//TArray<unsigned char>                              FileData;                                         		// 0x000014 (0x000C)              
	//unsigned long                                      bRequiresDownload : 1;                            		// 0x000020 (0x0004) [0x00000001] 
};

void UIniLocPatcher::OnFileCacheLoadComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnFileCacheLoadComplete = NULL;
	if(!pFnOnFileCacheLoadComplete)
		pFnOnFileCacheLoadComplete = UObject::FindFunction("Function Engine.IniLocPatcher.OnFileCacheLoadComplete");

	Engine_OnFileCacheLoadComplete_Parms OnFileCacheLoadComplete_Parms;
	OnFileCacheLoadComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnFileCacheLoadComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnFileCacheLoadComplete,NULL,&OnFileCacheLoadComplete_Parms,NULL);
}

struct Engine_DownloadFiles_Parms
{
	//int                                                FileIdx;                                          		// 0x000000 (0x0004)              
};

void UIniLocPatcher::DownloadFiles()
{
	static UFieldFunc* pFnDownloadFiles = NULL;
	if(!pFnDownloadFiles)
		pFnDownloadFiles = UObject::FindFunction("Function Engine.IniLocPatcher.DownloadFiles");

	Engine_DownloadFiles_Parms DownloadFiles_Parms;
	ProcessEvent(pFnDownloadFiles,NULL,&DownloadFiles_Parms,NULL);
}

struct Engine_ClearReadFileDelegate_Parms
{
	struct FScriptDelegate                             ReadTitleFileCompleteDelegate;                    		// 0x000000 (0x000C)              
	//int                                                RemoveIndex;                                      		// 0x00000C (0x0004)              
};

void UIniLocPatcher::ClearReadFileDelegate(struct FScriptDelegate ReadTitleFileCompleteDelegate)
{
	static UFieldFunc* pFnClearReadFileDelegate = NULL;
	if(!pFnClearReadFileDelegate)
		pFnClearReadFileDelegate = UObject::FindFunction("Function Engine.IniLocPatcher.ClearReadFileDelegate");

	Engine_ClearReadFileDelegate_Parms ClearReadFileDelegate_Parms;
	memcpy(&ClearReadFileDelegate_Parms.ReadTitleFileCompleteDelegate,&ReadTitleFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadFileDelegate,NULL,&ClearReadFileDelegate_Parms,NULL);
}

struct Engine_OnRequestTitleFileListComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ResultStr;                                        		// 0x000004 (0x000C)              
	//class UJsonObject*                                 Root;                                             		// 0x000010 (0x0004)              
	//int                                                JsonObjectIdx;                                    		// 0x000014 (0x0004)              
	//struct FIniLocFileEntry                            RequestFileEntry;                                 		// 0x000018 (0x002C)              
};

void UIniLocPatcher::OnRequestTitleFileListComplete(bool bWasSuccessful,struct FString ResultStr)
{
	static UFieldFunc* pFnOnRequestTitleFileListComplete = NULL;
	if(!pFnOnRequestTitleFileListComplete)
		pFnOnRequestTitleFileListComplete = UObject::FindFunction("Function Engine.IniLocPatcher.OnRequestTitleFileListComplete");

	Engine_OnRequestTitleFileListComplete_Parms OnRequestTitleFileListComplete_Parms;
	OnRequestTitleFileListComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnRequestTitleFileListComplete_Parms.ResultStr,&ResultStr,0xC);
	ProcessEvent(pFnOnRequestTitleFileListComplete,NULL,&OnRequestTitleFileListComplete_Parms,NULL);
}

struct Engine_OnFileCacheSaveComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
	//struct FString                                     LogicalName;                                      		// 0x000010 (0x000C)              
};

void UIniLocPatcher::OnFileCacheSaveComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnFileCacheSaveComplete = NULL;
	if(!pFnOnFileCacheSaveComplete)
		pFnOnFileCacheSaveComplete = UObject::FindFunction("Function Engine.IniLocPatcher.OnFileCacheSaveComplete");

	Engine_OnFileCacheSaveComplete_Parms OnFileCacheSaveComplete_Parms;
	OnFileCacheSaveComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnFileCacheSaveComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnFileCacheSaveComplete,NULL,&OnFileCacheSaveComplete_Parms,NULL);
}

struct Engine_GetBoolValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//struct FString                                     Value;                                            		// 0x000010 (0x000C)              
};

bool UJsonObject::GetBoolValue(struct FString Key)
{
	static UFieldFunc* pFnGetBoolValue = NULL;
	if(!pFnGetBoolValue)
		pFnGetBoolValue = UObject::FindFunction("Function Engine.JsonObject.GetBoolValue");

	Engine_GetBoolValue_Parms GetBoolValue_Parms;
	memcpy(&GetBoolValue_Parms.Key,&Key,0xC);
	ProcessEvent(pFnGetBoolValue,NULL,&GetBoolValue_Parms,NULL);
	return GetBoolValue_Parms.ReturnValue;
}

struct Engine_SetIntValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	int                                                Value;                                            		// 0x00000C (0x0004)              
};

void UJsonObject::SetIntValue(struct FString Key,int Value)
{
	static UFieldFunc* pFnSetIntValue = NULL;
	if(!pFnSetIntValue)
		pFnSetIntValue = UObject::FindFunction("Function Engine.JsonObject.SetIntValue");

	Engine_SetIntValue_Parms SetIntValue_Parms;
	memcpy(&SetIntValue_Parms.Key,&Key,0xC);
	SetIntValue_Parms.Value = Value;
	ProcessEvent(pFnSetIntValue,NULL,&SetIntValue_Parms,NULL);
}

struct Engine_SetFloatValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	float                                              Value;                                            		// 0x00000C (0x0004)              
};

void UJsonObject::SetFloatValue(struct FString Key,float Value)
{
	static UFieldFunc* pFnSetFloatValue = NULL;
	if(!pFnSetFloatValue)
		pFnSetFloatValue = UObject::FindFunction("Function Engine.JsonObject.SetFloatValue");

	Engine_SetFloatValue_Parms SetFloatValue_Parms;
	memcpy(&SetFloatValue_Parms.Key,&Key,0xC);
	SetFloatValue_Parms.Value = Value;
	ProcessEvent(pFnSetFloatValue,NULL,&SetFloatValue_Parms,NULL);
}

struct Engine_SetObject_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	class UJsonObject*                                 Object;                                           		// 0x00000C (0x0004)              
};

void UJsonObject::SetObject(struct FString Key,class UJsonObject* Object)
{
	static UFieldFunc* pFnSetObject = NULL;
	if(!pFnSetObject)
		pFnSetObject = UObject::FindFunction("Function Engine.JsonObject.SetObject");

	Engine_SetObject_Parms SetObject_Parms;
	memcpy(&SetObject_Parms.Key,&Key,0xC);
	SetObject_Parms.Object = Object;
	pFnSetObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetObject,NULL,&SetObject_Parms,NULL);
	pFnSetObject->FunctionFlags |= 0x400;
}

struct Engine_DecodeJson_Parms
{
	struct FString                                     str;                                              		// 0x000000 (0x000C)              
	class UJsonObject*                                 ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UJsonObject* UJsonObject::DecodeJson(struct FString str)
{
	static UFieldFunc* pFnDecodeJson = NULL;
	if(!pFnDecodeJson)
		pFnDecodeJson = UObject::FindFunction("Function Engine.JsonObject.DecodeJson");

	Engine_DecodeJson_Parms DecodeJson_Parms;
	memcpy(&DecodeJson_Parms.str,&str,0xC);
	pFnDecodeJson->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDecodeJson,NULL,&DecodeJson_Parms,NULL);
	pFnDecodeJson->FunctionFlags |= 0x400;
	return DecodeJson_Parms.ReturnValue;
}

struct Engine_EncodeJson_Parms
{
	class UJsonObject*                                 Root;                                             		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UJsonObject::EncodeJson(class UJsonObject* Root)
{
	static UFieldFunc* pFnEncodeJson = NULL;
	if(!pFnEncodeJson)
		pFnEncodeJson = UObject::FindFunction("Function Engine.JsonObject.EncodeJson");

	Engine_EncodeJson_Parms EncodeJson_Parms;
	EncodeJson_Parms.Root = Root;
	pFnEncodeJson->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEncodeJson,NULL,&EncodeJson_Parms,NULL);
	pFnEncodeJson->FunctionFlags |= 0x400;
	return EncodeJson_Parms.ReturnValue;
}

struct Engine_HasKey_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UJsonObject::HasKey(struct FString Key)
{
	static UFieldFunc* pFnHasKey = NULL;
	if(!pFnHasKey)
		pFnHasKey = UObject::FindFunction("Function Engine.JsonObject.HasKey");

	Engine_HasKey_Parms HasKey_Parms;
	memcpy(&HasKey_Parms.Key,&Key,0xC);
	pFnHasKey->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasKey,NULL,&HasKey_Parms,NULL);
	pFnHasKey->FunctionFlags |= 0x400;
	return HasKey_Parms.ReturnValue;
}

struct Engine_GetObject_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	class UJsonObject*                                 ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UJsonObject* UJsonObject::GetObject(struct FString Key)
{
	static UFieldFunc* pFnGetObject = NULL;
	if(!pFnGetObject)
		pFnGetObject = UObject::FindFunction("Function Engine.JsonObject.GetObject");

	Engine_GetObject_Parms GetObject_Parms;
	memcpy(&GetObject_Parms.Key,&Key,0xC);
	pFnGetObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetObject,NULL,&GetObject_Parms,NULL);
	pFnGetObject->FunctionFlags |= 0x400;
	return GetObject_Parms.ReturnValue;
}

struct Engine_GetStringValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UJsonObject::GetStringValue(struct FString Key)
{
	static UFieldFunc* pFnGetStringValue = NULL;
	if(!pFnGetStringValue)
		pFnGetStringValue = UObject::FindFunction("Function Engine.JsonObject.GetStringValue");

	Engine_GetStringValue_Parms GetStringValue_Parms;
	memcpy(&GetStringValue_Parms.Key,&Key,0xC);
	pFnGetStringValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringValue,NULL,&GetStringValue_Parms,NULL);
	pFnGetStringValue->FunctionFlags |= 0x400;
	return GetStringValue_Parms.ReturnValue;
}

struct Engine_SetStringValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	struct FString                                     Value;                                            		// 0x00000C (0x000C)              
};

void UJsonObject::SetStringValue(struct FString Key,struct FString Value)
{
	static UFieldFunc* pFnSetStringValue = NULL;
	if(!pFnSetStringValue)
		pFnSetStringValue = UObject::FindFunction("Function Engine.JsonObject.SetStringValue");

	Engine_SetStringValue_Parms SetStringValue_Parms;
	memcpy(&SetStringValue_Parms.Key,&Key,0xC);
	memcpy(&SetStringValue_Parms.Value,&Value,0xC);
	pFnSetStringValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStringValue,NULL,&SetStringValue_Parms,NULL);
	pFnSetStringValue->FunctionFlags |= 0x400;
}

struct Engine_GetIntValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
	//struct FString                                     Value;                                            		// 0x000010 (0x000C)              
};

int UJsonObject::GetIntValue(struct FString Key)
{
	static UFieldFunc* pFnGetIntValue = NULL;
	if(!pFnGetIntValue)
		pFnGetIntValue = UObject::FindFunction("Function Engine.JsonObject.GetIntValue");

	Engine_GetIntValue_Parms GetIntValue_Parms;
	memcpy(&GetIntValue_Parms.Key,&Key,0xC);
	ProcessEvent(pFnGetIntValue,NULL,&GetIntValue_Parms,NULL);
	return GetIntValue_Parms.ReturnValue;
}

struct Engine_GetFloatValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
	//struct FString                                     Value;                                            		// 0x000010 (0x000C)              
};

float UJsonObject::GetFloatValue(struct FString Key)
{
	static UFieldFunc* pFnGetFloatValue = NULL;
	if(!pFnGetFloatValue)
		pFnGetFloatValue = UObject::FindFunction("Function Engine.JsonObject.GetFloatValue");

	Engine_GetFloatValue_Parms GetFloatValue_Parms;
	memcpy(&GetFloatValue_Parms.Key,&Key,0xC);
	ProcessEvent(pFnGetFloatValue,NULL,&GetFloatValue_Parms,NULL);
	return GetFloatValue_Parms.ReturnValue;
}

struct Engine_SetBoolValue_Parms
{
	struct FString                                     Key;                                              		// 0x000000 (0x000C)              
	unsigned long                                      Value : 1;                                        		// 0x00000C (0x0004) [0x00000001] 
};

void UJsonObject::SetBoolValue(struct FString Key,bool Value)
{
	static UFieldFunc* pFnSetBoolValue = NULL;
	if(!pFnSetBoolValue)
		pFnSetBoolValue = UObject::FindFunction("Function Engine.JsonObject.SetBoolValue");

	Engine_SetBoolValue_Parms SetBoolValue_Parms;
	memcpy(&SetBoolValue_Parms.Key,&Key,0xC);
	SetBoolValue_Parms.Value = Value;
	ProcessEvent(pFnSetBoolValue,NULL,&SetBoolValue_Parms,NULL);
}

struct Engine_GetSurfaceWidth_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USurface::GetSurfaceWidth()
{
	static UFieldFunc* pFnGetSurfaceWidth = NULL;
	if(!pFnGetSurfaceWidth)
		pFnGetSurfaceWidth = UObject::FindFunction("Function Engine.Surface.GetSurfaceWidth");

	Engine_GetSurfaceWidth_Parms GetSurfaceWidth_Parms;
	pFnGetSurfaceWidth->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSurfaceWidth,NULL,&GetSurfaceWidth_Parms,NULL);
	pFnGetSurfaceWidth->FunctionFlags |= 0x400;
	return GetSurfaceWidth_Parms.ReturnValue;
}

struct Engine_GetSurfaceHeight_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USurface::GetSurfaceHeight()
{
	static UFieldFunc* pFnGetSurfaceHeight = NULL;
	if(!pFnGetSurfaceHeight)
		pFnGetSurfaceHeight = UObject::FindFunction("Function Engine.Surface.GetSurfaceHeight");

	Engine_GetSurfaceHeight_Parms GetSurfaceHeight_Parms;
	pFnGetSurfaceHeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSurfaceHeight,NULL,&GetSurfaceHeight_Parms,NULL);
	pFnGetSurfaceHeight->FunctionFlags |= 0x400;
	return GetSurfaceHeight_Parms.ReturnValue;
}

struct Engine_GetVectorParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FLinearColor                                OutValue;                                         		// 0x000008 (0x0010)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UMaterialInterface::GetVectorParameterValue(struct FName ParameterName,struct FLinearColor* OutValue)
{
	static UFieldFunc* pFnGetVectorParameterValue = NULL;
	if(!pFnGetVectorParameterValue)
		pFnGetVectorParameterValue = UObject::FindFunction("Function Engine.MaterialInterface.GetVectorParameterValue");

	Engine_GetVectorParameterValue_Parms GetVectorParameterValue_Parms;
	memcpy(&GetVectorParameterValue_Parms.ParameterName,&ParameterName,0x8);
	pFnGetVectorParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVectorParameterValue,NULL,&GetVectorParameterValue_Parms,NULL);
	pFnGetVectorParameterValue->FunctionFlags |= 0x400;
	if(OutValue)
		memcpy(OutValue,&GetVectorParameterValue_Parms.OutValue,0x10);
	return GetVectorParameterValue_Parms.ReturnValue;
}

struct Engine_GetVectorCurveParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FInterpCurveVector                          OutValue;                                         		// 0x000008 (0x0010)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UMaterialInterface::GetVectorCurveParameterValue(struct FName ParameterName,struct FInterpCurveVector* OutValue)
{
	static UFieldFunc* pFnGetVectorCurveParameterValue = NULL;
	if(!pFnGetVectorCurveParameterValue)
		pFnGetVectorCurveParameterValue = UObject::FindFunction("Function Engine.MaterialInterface.GetVectorCurveParameterValue");

	Engine_GetVectorCurveParameterValue_Parms GetVectorCurveParameterValue_Parms;
	memcpy(&GetVectorCurveParameterValue_Parms.ParameterName,&ParameterName,0x8);
	pFnGetVectorCurveParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVectorCurveParameterValue,NULL,&GetVectorCurveParameterValue_Parms,NULL);
	pFnGetVectorCurveParameterValue->FunctionFlags |= 0x400;
	if(OutValue)
		memcpy(OutValue,&GetVectorCurveParameterValue_Parms.OutValue,0x10);
	return GetVectorCurveParameterValue_Parms.ReturnValue;
}

struct Engine_GetTextureParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UTexture*                                    OutValue;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UMaterialInterface::GetTextureParameterValue(struct FName ParameterName,class UTexture** OutValue)
{
	static UFieldFunc* pFnGetTextureParameterValue = NULL;
	if(!pFnGetTextureParameterValue)
		pFnGetTextureParameterValue = UObject::FindFunction("Function Engine.MaterialInterface.GetTextureParameterValue");

	Engine_GetTextureParameterValue_Parms GetTextureParameterValue_Parms;
	memcpy(&GetTextureParameterValue_Parms.ParameterName,&ParameterName,0x8);
	pFnGetTextureParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTextureParameterValue,NULL,&GetTextureParameterValue_Parms,NULL);
	pFnGetTextureParameterValue->FunctionFlags |= 0x400;
	if(OutValue)
		*OutValue = GetTextureParameterValue_Parms.OutValue;
	return GetTextureParameterValue_Parms.ReturnValue;
}

struct Engine_GetScalarParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              OutValue;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UMaterialInterface::GetScalarParameterValue(struct FName ParameterName,float* OutValue)
{
	static UFieldFunc* pFnGetScalarParameterValue = NULL;
	if(!pFnGetScalarParameterValue)
		pFnGetScalarParameterValue = UObject::FindFunction("Function Engine.MaterialInterface.GetScalarParameterValue");

	Engine_GetScalarParameterValue_Parms GetScalarParameterValue_Parms;
	memcpy(&GetScalarParameterValue_Parms.ParameterName,&ParameterName,0x8);
	pFnGetScalarParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetScalarParameterValue,NULL,&GetScalarParameterValue_Parms,NULL);
	pFnGetScalarParameterValue->FunctionFlags |= 0x400;
	if(OutValue)
		*OutValue = GetScalarParameterValue_Parms.OutValue;
	return GetScalarParameterValue_Parms.ReturnValue;
}

struct Engine_GetFontParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UFont*                                       OutFontValue;                                     		// 0x000008 (0x0004)              
	int                                                OutFontPage;                                      		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UMaterialInterface::GetFontParameterValue(struct FName ParameterName,class UFont** OutFontValue,int* OutFontPage)
{
	static UFieldFunc* pFnGetFontParameterValue = NULL;
	if(!pFnGetFontParameterValue)
		pFnGetFontParameterValue = UObject::FindFunction("Function Engine.MaterialInterface.GetFontParameterValue");

	Engine_GetFontParameterValue_Parms GetFontParameterValue_Parms;
	memcpy(&GetFontParameterValue_Parms.ParameterName,&ParameterName,0x8);
	pFnGetFontParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFontParameterValue,NULL,&GetFontParameterValue_Parms,NULL);
	pFnGetFontParameterValue->FunctionFlags |= 0x400;
	if(OutFontValue)
		*OutFontValue = GetFontParameterValue_Parms.OutFontValue;
	if(OutFontPage)
		*OutFontPage = GetFontParameterValue_Parms.OutFontPage;
	return GetFontParameterValue_Parms.ReturnValue;
}

struct Engine_GetPhysicalMaterial_Parms
{
	class UPhysicalMaterial*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPhysicalMaterial* UMaterialInterface::GetPhysicalMaterial()
{
	static UFieldFunc* pFnGetPhysicalMaterial = NULL;
	if(!pFnGetPhysicalMaterial)
		pFnGetPhysicalMaterial = UObject::FindFunction("Function Engine.MaterialInterface.GetPhysicalMaterial");

	Engine_GetPhysicalMaterial_Parms GetPhysicalMaterial_Parms;
	pFnGetPhysicalMaterial->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPhysicalMaterial,NULL,&GetPhysicalMaterial_Parms,NULL);
	pFnGetPhysicalMaterial->FunctionFlags |= 0x400;
	return GetPhysicalMaterial_Parms.ReturnValue;
}

struct Engine_GetMaterial_Parms
{
	class UMaterial*                                   ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UMaterial* UMaterialInterface::GetMaterial()
{
	static UFieldFunc* pFnGetMaterial = NULL;
	if(!pFnGetMaterial)
		pFnGetMaterial = UObject::FindFunction("Function Engine.MaterialInterface.GetMaterial");

	Engine_GetMaterial_Parms GetMaterial_Parms;
	pFnGetMaterial->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaterial,NULL,&GetMaterial_Parms,NULL);
	pFnGetMaterial->FunctionFlags |= 0x400;
	return GetMaterial_Parms.ReturnValue;
}

struct Engine_GetScalarCurveParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FInterpCurveFloat                           OutValue;                                         		// 0x000008 (0x0010)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UMaterialInterface::GetScalarCurveParameterValue(struct FName ParameterName,struct FInterpCurveFloat* OutValue)
{
	static UFieldFunc* pFnGetScalarCurveParameterValue = NULL;
	if(!pFnGetScalarCurveParameterValue)
		pFnGetScalarCurveParameterValue = UObject::FindFunction("Function Engine.MaterialInterface.GetScalarCurveParameterValue");

	Engine_GetScalarCurveParameterValue_Parms GetScalarCurveParameterValue_Parms;
	memcpy(&GetScalarCurveParameterValue_Parms.ParameterName,&ParameterName,0x8);
	pFnGetScalarCurveParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetScalarCurveParameterValue,NULL,&GetScalarCurveParameterValue_Parms,NULL);
	pFnGetScalarCurveParameterValue->FunctionFlags |= 0x400;
	if(OutValue)
		memcpy(OutValue,&GetScalarCurveParameterValue_Parms.OutValue,0x10);
	return GetScalarCurveParameterValue_Parms.ReturnValue;
}

struct Engine_GetTextures_Parms
{
	TArray<class UTexture*>                            ReturnValue;                                      		// 0x000000 (0x000C)              
};

TArray<class UTexture*> UMaterial::GetTextures()
{
	static UFieldFunc* pFnGetTextures = NULL;
	if(!pFnGetTextures)
		pFnGetTextures = UObject::FindFunction("Function Engine.Material.GetTextures");

	Engine_GetTextures_Parms GetTextures_Parms;
	ProcessEvent(pFnGetTextures,NULL,&GetTextures_Parms,NULL);
	return GetTextures_Parms.ReturnValue;
}

struct Engine_StopTimer_Parms
{
	struct FMMStats_Timer                              Timer;                                            		// 0x000000 (0x000C)              
};

void UOnlineMatchmakingStats::StopTimer(struct FMMStats_Timer* Timer)
{
	static UFieldFunc* pFnStopTimer = NULL;
	if(!pFnStopTimer)
		pFnStopTimer = UObject::FindFunction("Function Engine.OnlineMatchmakingStats.StopTimer");

	Engine_StopTimer_Parms StopTimer_Parms;
	pFnStopTimer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopTimer,NULL,&StopTimer_Parms,NULL);
	pFnStopTimer->FunctionFlags |= 0x400;
	if(Timer)
		memcpy(Timer,&StopTimer_Parms.Timer,0xC);
}

struct Engine_StartTimer_Parms
{
	struct FMMStats_Timer                              Timer;                                            		// 0x000000 (0x000C)              
};

void UOnlineMatchmakingStats::StartTimer(struct FMMStats_Timer* Timer)
{
	static UFieldFunc* pFnStartTimer = NULL;
	if(!pFnStartTimer)
		pFnStartTimer = UObject::FindFunction("Function Engine.OnlineMatchmakingStats.StartTimer");

	Engine_StartTimer_Parms StartTimer_Parms;
	pFnStartTimer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStartTimer,NULL,&StartTimer_Parms,NULL);
	pFnStartTimer->FunctionFlags |= 0x400;
	if(Timer)
		memcpy(Timer,&StartTimer_Parms.Timer,0xC);
}

struct Engine_GetVersionNumber_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UOnlinePlayerStorage::GetVersionNumber()
{
	static UFieldFunc* pFnGetVersionNumber = NULL;
	if(!pFnGetVersionNumber)
		pFnGetVersionNumber = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetVersionNumber");

	Engine_GetVersionNumber_Parms GetVersionNumber_Parms;
	pFnGetVersionNumber->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVersionNumber,NULL,&GetVersionNumber_Parms,NULL);
	pFnGetVersionNumber->FunctionFlags |= 0x400;
	return GetVersionNumber_Parms.ReturnValue;
}

struct Engine_AppendVersionToSettings_Parms
{
};

void UOnlinePlayerStorage::AppendVersionToSettings()
{
	static UFieldFunc* pFnAppendVersionToSettings = NULL;
	if(!pFnAppendVersionToSettings)
		pFnAppendVersionToSettings = UObject::FindFunction("Function Engine.OnlinePlayerStorage.AppendVersionToSettings");

	Engine_AppendVersionToSettings_Parms AppendVersionToSettings_Parms;
	pFnAppendVersionToSettings->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAppendVersionToSettings,NULL,&AppendVersionToSettings_Parms,NULL);
	pFnAppendVersionToSettings->FunctionFlags |= 0x400;
}

struct Engine_FindProfileMappingIndex_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UOnlinePlayerStorage::FindProfileMappingIndex(int ProfileSettingId)
{
	static UFieldFunc* pFnFindProfileMappingIndex = NULL;
	if(!pFnFindProfileMappingIndex)
		pFnFindProfileMappingIndex = UObject::FindFunction("Function Engine.OnlinePlayerStorage.FindProfileMappingIndex");

	Engine_FindProfileMappingIndex_Parms FindProfileMappingIndex_Parms;
	FindProfileMappingIndex_Parms.ProfileSettingId = ProfileSettingId;
	pFnFindProfileMappingIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindProfileMappingIndex,NULL,&FindProfileMappingIndex_Parms,NULL);
	pFnFindProfileMappingIndex->FunctionFlags |= 0x400;
	return FindProfileMappingIndex_Parms.ReturnValue;
}

struct Engine_SetProfileSettingValueId_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::SetProfileSettingValueId(int ProfileSettingId,int Value)
{
	static UFieldFunc* pFnSetProfileSettingValueId = NULL;
	if(!pFnSetProfileSettingValueId)
		pFnSetProfileSettingValueId = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetProfileSettingValueId");

	Engine_SetProfileSettingValueId_Parms SetProfileSettingValueId_Parms;
	SetProfileSettingValueId_Parms.ProfileSettingId = ProfileSettingId;
	SetProfileSettingValueId_Parms.Value = Value;
	pFnSetProfileSettingValueId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetProfileSettingValueId,NULL,&SetProfileSettingValueId_Parms,NULL);
	pFnSetProfileSettingValueId->FunctionFlags |= 0x400;
	return SetProfileSettingValueId_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValueId_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                ValueId;                                          		// 0x000004 (0x0004)              
	int                                                ListIndex;                                        		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValueId(int ProfileSettingId,int* ValueId,int* ListIndex)
{
	static UFieldFunc* pFnGetProfileSettingValueId = NULL;
	if(!pFnGetProfileSettingValueId)
		pFnGetProfileSettingValueId = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValueId");

	Engine_GetProfileSettingValueId_Parms GetProfileSettingValueId_Parms;
	GetProfileSettingValueId_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingValueId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValueId,NULL,&GetProfileSettingValueId_Parms,NULL);
	pFnGetProfileSettingValueId->FunctionFlags |= 0x400;
	if(ValueId)
		*ValueId = GetProfileSettingValueId_Parms.ValueId;
	if(ListIndex)
		*ListIndex = GetProfileSettingValueId_Parms.ListIndex;
	return GetProfileSettingValueId_Parms.ReturnValue;
}

struct Engine_SetDefaultVersionNumber_Parms
{
};

void UOnlinePlayerStorage::SetDefaultVersionNumber()
{
	static UFieldFunc* pFnSetDefaultVersionNumber = NULL;
	if(!pFnSetDefaultVersionNumber)
		pFnSetDefaultVersionNumber = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetDefaultVersionNumber");

	Engine_SetDefaultVersionNumber_Parms SetDefaultVersionNumber_Parms;
	pFnSetDefaultVersionNumber->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDefaultVersionNumber,NULL,&SetDefaultVersionNumber_Parms,NULL);
	pFnSetDefaultVersionNumber->FunctionFlags |= 0x400;
}

struct Engine_AddSettingInt_Parms
{
	int                                                SettingId;                                        		// 0x000000 (0x0004)              
};

void UOnlinePlayerStorage::AddSettingInt(int SettingId)
{
	static UFieldFunc* pFnAddSettingInt = NULL;
	if(!pFnAddSettingInt)
		pFnAddSettingInt = UObject::FindFunction("Function Engine.OnlinePlayerStorage.AddSettingInt");

	Engine_AddSettingInt_Parms AddSettingInt_Parms;
	AddSettingInt_Parms.SettingId = SettingId;
	pFnAddSettingInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddSettingInt,NULL,&AddSettingInt_Parms,NULL);
	pFnAddSettingInt->FunctionFlags |= 0x400;
}

struct Engine_SetToDefaults_Parms
{
};

void UOnlinePlayerStorage::SetToDefaults()
{
	static UFieldFunc* pFnSetToDefaults = NULL;
	if(!pFnSetToDefaults)
		pFnSetToDefaults = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetToDefaults");

	Engine_SetToDefaults_Parms SetToDefaults_Parms;
	pFnSetToDefaults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetToDefaults,NULL,&SetToDefaults_Parms,NULL);
	pFnSetToDefaults->FunctionFlags |= 0x400;
}

struct Engine_AddSettingFloat_Parms
{
	int                                                SettingId;                                        		// 0x000000 (0x0004)              
};

void UOnlinePlayerStorage::AddSettingFloat(int SettingId)
{
	static UFieldFunc* pFnAddSettingFloat = NULL;
	if(!pFnAddSettingFloat)
		pFnAddSettingFloat = UObject::FindFunction("Function Engine.OnlinePlayerStorage.AddSettingFloat");

	Engine_AddSettingFloat_Parms AddSettingFloat_Parms;
	AddSettingFloat_Parms.SettingId = SettingId;
	pFnAddSettingFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddSettingFloat,NULL,&AddSettingFloat_Parms,NULL);
	pFnAddSettingFloat->FunctionFlags |= 0x400;
}

struct Engine_FindDefaultProfileMappingIndexByName_Parms
{
	struct FName                                       ProfileSettingName;                               		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UOnlinePlayerStorage::FindDefaultProfileMappingIndexByName(struct FName ProfileSettingName)
{
	static UFieldFunc* pFnFindDefaultProfileMappingIndexByName = NULL;
	if(!pFnFindDefaultProfileMappingIndexByName)
		pFnFindDefaultProfileMappingIndexByName = UObject::FindFunction("Function Engine.OnlinePlayerStorage.FindDefaultProfileMappingIndexByName");

	Engine_FindDefaultProfileMappingIndexByName_Parms FindDefaultProfileMappingIndexByName_Parms;
	memcpy(&FindDefaultProfileMappingIndexByName_Parms.ProfileSettingName,&ProfileSettingName,0x8);
	pFnFindDefaultProfileMappingIndexByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindDefaultProfileMappingIndexByName,NULL,&FindDefaultProfileMappingIndexByName_Parms,NULL);
	pFnFindDefaultProfileMappingIndexByName->FunctionFlags |= 0x400;
	return FindDefaultProfileMappingIndexByName_Parms.ReturnValue;
}

struct Engine_GetRangedProfileSettingValue_Parms
{
	int                                                ProfileId;                                        		// 0x000000 (0x0004)              
	float                                              OutValue;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetRangedProfileSettingValue(int ProfileId,float* OutValue)
{
	static UFieldFunc* pFnGetRangedProfileSettingValue = NULL;
	if(!pFnGetRangedProfileSettingValue)
		pFnGetRangedProfileSettingValue = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetRangedProfileSettingValue");

	Engine_GetRangedProfileSettingValue_Parms GetRangedProfileSettingValue_Parms;
	GetRangedProfileSettingValue_Parms.ProfileId = ProfileId;
	pFnGetRangedProfileSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRangedProfileSettingValue,NULL,&GetRangedProfileSettingValue_Parms,NULL);
	pFnGetRangedProfileSettingValue->FunctionFlags |= 0x400;
	if(OutValue)
		*OutValue = GetRangedProfileSettingValue_Parms.OutValue;
	return GetRangedProfileSettingValue_Parms.ReturnValue;
}

struct Engine_SetProfileSettingValue_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	struct FString                                     NewValue;                                         		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::SetProfileSettingValue(int ProfileSettingId,struct FString* NewValue)
{
	static UFieldFunc* pFnSetProfileSettingValue = NULL;
	if(!pFnSetProfileSettingValue)
		pFnSetProfileSettingValue = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetProfileSettingValue");

	Engine_SetProfileSettingValue_Parms SetProfileSettingValue_Parms;
	SetProfileSettingValue_Parms.ProfileSettingId = ProfileSettingId;
	pFnSetProfileSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetProfileSettingValue,NULL,&SetProfileSettingValue_Parms,NULL);
	pFnSetProfileSettingValue->FunctionFlags |= 0x400;
	if(NewValue)
		memcpy(NewValue,&SetProfileSettingValue_Parms.NewValue,0xC);
	return SetProfileSettingValue_Parms.ReturnValue;
}

struct Engine_GetProfileSettingName_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName UOnlinePlayerStorage::GetProfileSettingName(int ProfileSettingId)
{
	static UFieldFunc* pFnGetProfileSettingName = NULL;
	if(!pFnGetProfileSettingName)
		pFnGetProfileSettingName = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingName");

	Engine_GetProfileSettingName_Parms GetProfileSettingName_Parms;
	GetProfileSettingName_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingName,NULL,&GetProfileSettingName_Parms,NULL);
	pFnGetProfileSettingName->FunctionFlags |= 0x400;
	return GetProfileSettingName_Parms.ReturnValue;
}

struct Engine_GetProfileSettingId_Parms
{
	struct FName                                       ProfileSettingName;                               		// 0x000000 (0x0008)              
	int                                                ProfileSettingId;                                 		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingId(struct FName ProfileSettingName,int* ProfileSettingId)
{
	static UFieldFunc* pFnGetProfileSettingId = NULL;
	if(!pFnGetProfileSettingId)
		pFnGetProfileSettingId = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingId");

	Engine_GetProfileSettingId_Parms GetProfileSettingId_Parms;
	memcpy(&GetProfileSettingId_Parms.ProfileSettingName,&ProfileSettingName,0x8);
	pFnGetProfileSettingId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingId,NULL,&GetProfileSettingId_Parms,NULL);
	pFnGetProfileSettingId->FunctionFlags |= 0x400;
	if(ProfileSettingId)
		*ProfileSettingId = GetProfileSettingId_Parms.ProfileSettingId;
	return GetProfileSettingId_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValueFromListIndex_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                ListIndex;                                        		// 0x000004 (0x0004)              
	int                                                Value;                                            		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValueFromListIndex(int ProfileSettingId,int ListIndex,int* Value)
{
	static UFieldFunc* pFnGetProfileSettingValueFromListIndex = NULL;
	if(!pFnGetProfileSettingValueFromListIndex)
		pFnGetProfileSettingValueFromListIndex = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValueFromListIndex");

	Engine_GetProfileSettingValueFromListIndex_Parms GetProfileSettingValueFromListIndex_Parms;
	GetProfileSettingValueFromListIndex_Parms.ProfileSettingId = ProfileSettingId;
	GetProfileSettingValueFromListIndex_Parms.ListIndex = ListIndex;
	pFnGetProfileSettingValueFromListIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValueFromListIndex,NULL,&GetProfileSettingValueFromListIndex_Parms,NULL);
	pFnGetProfileSettingValueFromListIndex->FunctionFlags |= 0x400;
	if(Value)
		*Value = GetProfileSettingValueFromListIndex_Parms.Value;
	return GetProfileSettingValueFromListIndex_Parms.ReturnValue;
}

struct Engine_FindProfileSettingIndex_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UOnlinePlayerStorage::FindProfileSettingIndex(int ProfileSettingId)
{
	static UFieldFunc* pFnFindProfileSettingIndex = NULL;
	if(!pFnFindProfileSettingIndex)
		pFnFindProfileSettingIndex = UObject::FindFunction("Function Engine.OnlinePlayerStorage.FindProfileSettingIndex");

	Engine_FindProfileSettingIndex_Parms FindProfileSettingIndex_Parms;
	FindProfileSettingIndex_Parms.ProfileSettingId = ProfileSettingId;
	pFnFindProfileSettingIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindProfileSettingIndex,NULL,&FindProfileSettingIndex_Parms,NULL);
	pFnFindProfileSettingIndex->FunctionFlags |= 0x400;
	return FindProfileSettingIndex_Parms.ReturnValue;
}

struct Engine_GetProfileSettingMappingType_Parms
{
	int                                                ProfileId;                                        		// 0x000000 (0x0004)              
	unsigned char                                      OutType;                                          		// 0x000004 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingMappingType(int ProfileId,unsigned char* OutType)
{
	static UFieldFunc* pFnGetProfileSettingMappingType = NULL;
	if(!pFnGetProfileSettingMappingType)
		pFnGetProfileSettingMappingType = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingMappingType");

	Engine_GetProfileSettingMappingType_Parms GetProfileSettingMappingType_Parms;
	GetProfileSettingMappingType_Parms.ProfileId = ProfileId;
	pFnGetProfileSettingMappingType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingMappingType,NULL,&GetProfileSettingMappingType_Parms,NULL);
	pFnGetProfileSettingMappingType->FunctionFlags |= 0x400;
	if(OutType)
		*OutType = GetProfileSettingMappingType_Parms.OutType;
	return GetProfileSettingMappingType_Parms.ReturnValue;
}

struct Engine_SetProfileSettingValueByName_Parms
{
	struct FName                                       ProfileSettingName;                               		// 0x000000 (0x0008)              
	struct FString                                     NewValue;                                         		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::SetProfileSettingValueByName(struct FName ProfileSettingName,struct FString* NewValue)
{
	static UFieldFunc* pFnSetProfileSettingValueByName = NULL;
	if(!pFnSetProfileSettingValueByName)
		pFnSetProfileSettingValueByName = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetProfileSettingValueByName");

	Engine_SetProfileSettingValueByName_Parms SetProfileSettingValueByName_Parms;
	memcpy(&SetProfileSettingValueByName_Parms.ProfileSettingName,&ProfileSettingName,0x8);
	pFnSetProfileSettingValueByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetProfileSettingValueByName,NULL,&SetProfileSettingValueByName_Parms,NULL);
	pFnSetProfileSettingValueByName->FunctionFlags |= 0x400;
	if(NewValue)
		memcpy(NewValue,&SetProfileSettingValueByName_Parms.NewValue,0xC);
	return SetProfileSettingValueByName_Parms.ReturnValue;
}

struct Engine_GetProfileSettingColumnHeader_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UOnlinePlayerStorage::GetProfileSettingColumnHeader(int ProfileSettingId)
{
	static UFieldFunc* pFnGetProfileSettingColumnHeader = NULL;
	if(!pFnGetProfileSettingColumnHeader)
		pFnGetProfileSettingColumnHeader = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingColumnHeader");

	Engine_GetProfileSettingColumnHeader_Parms GetProfileSettingColumnHeader_Parms;
	GetProfileSettingColumnHeader_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingColumnHeader->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingColumnHeader,NULL,&GetProfileSettingColumnHeader_Parms,NULL);
	pFnGetProfileSettingColumnHeader->FunctionFlags |= 0x400;
	return GetProfileSettingColumnHeader_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValue_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	struct FString                                     Value;                                            		// 0x000004 (0x000C)              
	int                                                ValueMapID;                                       		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValue(int ProfileSettingId,struct FString* Value,int ValueMapID)
{
	static UFieldFunc* pFnGetProfileSettingValue = NULL;
	if(!pFnGetProfileSettingValue)
		pFnGetProfileSettingValue = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValue");

	Engine_GetProfileSettingValue_Parms GetProfileSettingValue_Parms;
	GetProfileSettingValue_Parms.ProfileSettingId = ProfileSettingId;
	GetProfileSettingValue_Parms.ValueMapID = ValueMapID;
	pFnGetProfileSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValue,NULL,&GetProfileSettingValue_Parms,NULL);
	pFnGetProfileSettingValue->FunctionFlags |= 0x400;
	if(Value)
		memcpy(Value,&GetProfileSettingValue_Parms.Value,0xC);
	return GetProfileSettingValue_Parms.ReturnValue;
}

struct Engine_SetRangedProfileSettingValue_Parms
{
	int                                                ProfileId;                                        		// 0x000000 (0x0004)              
	float                                              NewValue;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::SetRangedProfileSettingValue(int ProfileId,float NewValue)
{
	static UFieldFunc* pFnSetRangedProfileSettingValue = NULL;
	if(!pFnSetRangedProfileSettingValue)
		pFnSetRangedProfileSettingValue = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetRangedProfileSettingValue");

	Engine_SetRangedProfileSettingValue_Parms SetRangedProfileSettingValue_Parms;
	SetRangedProfileSettingValue_Parms.ProfileId = ProfileId;
	SetRangedProfileSettingValue_Parms.NewValue = NewValue;
	pFnSetRangedProfileSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRangedProfileSettingValue,NULL,&SetRangedProfileSettingValue_Parms,NULL);
	pFnSetRangedProfileSettingValue->FunctionFlags |= 0x400;
	return SetRangedProfileSettingValue_Parms.ReturnValue;
}

struct Engine_GetProfileSettingMappingIds_Parms
{
	int                                                ProfileId;                                        		// 0x000000 (0x0004)              
	TArray<int>                                        Ids;                                              		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingMappingIds(int ProfileId,TArray<int>* Ids)
{
	static UFieldFunc* pFnGetProfileSettingMappingIds = NULL;
	if(!pFnGetProfileSettingMappingIds)
		pFnGetProfileSettingMappingIds = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingMappingIds");

	Engine_GetProfileSettingMappingIds_Parms GetProfileSettingMappingIds_Parms;
	GetProfileSettingMappingIds_Parms.ProfileId = ProfileId;
	pFnGetProfileSettingMappingIds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingMappingIds,NULL,&GetProfileSettingMappingIds_Parms,NULL);
	pFnGetProfileSettingMappingIds->FunctionFlags |= 0x400;
	if(Ids)
		memcpy(Ids,&GetProfileSettingMappingIds_Parms.Ids,0xC);
	return GetProfileSettingMappingIds_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValueByName_Parms
{
	struct FName                                       ProfileSettingName;                               		// 0x000000 (0x0008)              
	struct FString                                     Value;                                            		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValueByName(struct FName ProfileSettingName,struct FString* Value)
{
	static UFieldFunc* pFnGetProfileSettingValueByName = NULL;
	if(!pFnGetProfileSettingValueByName)
		pFnGetProfileSettingValueByName = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValueByName");

	Engine_GetProfileSettingValueByName_Parms GetProfileSettingValueByName_Parms;
	memcpy(&GetProfileSettingValueByName_Parms.ProfileSettingName,&ProfileSettingName,0x8);
	pFnGetProfileSettingValueByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValueByName,NULL,&GetProfileSettingValueByName_Parms,NULL);
	pFnGetProfileSettingValueByName->FunctionFlags |= 0x400;
	if(Value)
		memcpy(Value,&GetProfileSettingValueByName_Parms.Value,0xC);
	return GetProfileSettingValueByName_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValues_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	TArray<struct FName>                               Values;                                           		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValues(int ProfileSettingId,TArray<struct FName>* Values)
{
	static UFieldFunc* pFnGetProfileSettingValues = NULL;
	if(!pFnGetProfileSettingValues)
		pFnGetProfileSettingValues = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValues");

	Engine_GetProfileSettingValues_Parms GetProfileSettingValues_Parms;
	GetProfileSettingValues_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValues,NULL,&GetProfileSettingValues_Parms,NULL);
	pFnGetProfileSettingValues->FunctionFlags |= 0x400;
	if(Values)
		memcpy(Values,&GetProfileSettingValues_Parms.Values,0xC);
	return GetProfileSettingValues_Parms.ReturnValue;
}

struct Engine_IsProfileSettingIdMapped_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::IsProfileSettingIdMapped(int ProfileSettingId)
{
	static UFieldFunc* pFnIsProfileSettingIdMapped = NULL;
	if(!pFnIsProfileSettingIdMapped)
		pFnIsProfileSettingIdMapped = UObject::FindFunction("Function Engine.OnlinePlayerStorage.IsProfileSettingIdMapped");

	Engine_IsProfileSettingIdMapped_Parms IsProfileSettingIdMapped_Parms;
	IsProfileSettingIdMapped_Parms.ProfileSettingId = ProfileSettingId;
	pFnIsProfileSettingIdMapped->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsProfileSettingIdMapped,NULL,&IsProfileSettingIdMapped_Parms,NULL);
	pFnIsProfileSettingIdMapped->FunctionFlags |= 0x400;
	return IsProfileSettingIdMapped_Parms.ReturnValue;
}

struct Engine_SetProfileSettingValueInt_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::SetProfileSettingValueInt(int ProfileSettingId,int Value)
{
	static UFieldFunc* pFnSetProfileSettingValueInt = NULL;
	if(!pFnSetProfileSettingValueInt)
		pFnSetProfileSettingValueInt = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetProfileSettingValueInt");

	Engine_SetProfileSettingValueInt_Parms SetProfileSettingValueInt_Parms;
	SetProfileSettingValueInt_Parms.ProfileSettingId = ProfileSettingId;
	SetProfileSettingValueInt_Parms.Value = Value;
	pFnSetProfileSettingValueInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetProfileSettingValueInt,NULL,&SetProfileSettingValueInt_Parms,NULL);
	pFnSetProfileSettingValueInt->FunctionFlags |= 0x400;
	return SetProfileSettingValueInt_Parms.ReturnValue;
}

struct Engine_FindProfileMappingIndexByName_Parms
{
	struct FName                                       ProfileSettingName;                               		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UOnlinePlayerStorage::FindProfileMappingIndexByName(struct FName ProfileSettingName)
{
	static UFieldFunc* pFnFindProfileMappingIndexByName = NULL;
	if(!pFnFindProfileMappingIndexByName)
		pFnFindProfileMappingIndexByName = UObject::FindFunction("Function Engine.OnlinePlayerStorage.FindProfileMappingIndexByName");

	Engine_FindProfileMappingIndexByName_Parms FindProfileMappingIndexByName_Parms;
	memcpy(&FindProfileMappingIndexByName_Parms.ProfileSettingName,&ProfileSettingName,0x8);
	pFnFindProfileMappingIndexByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindProfileMappingIndexByName,NULL,&FindProfileMappingIndexByName_Parms,NULL);
	pFnFindProfileMappingIndexByName->FunctionFlags |= 0x400;
	return FindProfileMappingIndexByName_Parms.ReturnValue;
}

struct Engine_GetProfileSettingRange_Parms
{
	int                                                ProfileId;                                        		// 0x000000 (0x0004)              
	float                                              OutMinValue;                                      		// 0x000004 (0x0004)              
	float                                              OutMaxValue;                                      		// 0x000008 (0x0004)              
	float                                              RangeIncrement;                                   		// 0x00000C (0x0004)              
	unsigned char                                      bFormatAsInt;                                     		// 0x000010 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingRange(int ProfileId,float* OutMinValue,float* OutMaxValue,float* RangeIncrement,unsigned char* bFormatAsInt)
{
	static UFieldFunc* pFnGetProfileSettingRange = NULL;
	if(!pFnGetProfileSettingRange)
		pFnGetProfileSettingRange = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingRange");

	Engine_GetProfileSettingRange_Parms GetProfileSettingRange_Parms;
	GetProfileSettingRange_Parms.ProfileId = ProfileId;
	pFnGetProfileSettingRange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingRange,NULL,&GetProfileSettingRange_Parms,NULL);
	pFnGetProfileSettingRange->FunctionFlags |= 0x400;
	if(OutMinValue)
		*OutMinValue = GetProfileSettingRange_Parms.OutMinValue;
	if(OutMaxValue)
		*OutMaxValue = GetProfileSettingRange_Parms.OutMaxValue;
	if(RangeIncrement)
		*RangeIncrement = GetProfileSettingRange_Parms.RangeIncrement;
	if(bFormatAsInt)
		*bFormatAsInt = GetProfileSettingRange_Parms.bFormatAsInt;
	return GetProfileSettingRange_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValueName_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName UOnlinePlayerStorage::GetProfileSettingValueName(int ProfileSettingId)
{
	static UFieldFunc* pFnGetProfileSettingValueName = NULL;
	if(!pFnGetProfileSettingValueName)
		pFnGetProfileSettingValueName = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValueName");

	Engine_GetProfileSettingValueName_Parms GetProfileSettingValueName_Parms;
	GetProfileSettingValueName_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingValueName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValueName,NULL,&GetProfileSettingValueName_Parms,NULL);
	pFnGetProfileSettingValueName->FunctionFlags |= 0x400;
	return GetProfileSettingValueName_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValueFloat_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	float                                              Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValueFloat(int ProfileSettingId,float* Value)
{
	static UFieldFunc* pFnGetProfileSettingValueFloat = NULL;
	if(!pFnGetProfileSettingValueFloat)
		pFnGetProfileSettingValueFloat = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValueFloat");

	Engine_GetProfileSettingValueFloat_Parms GetProfileSettingValueFloat_Parms;
	GetProfileSettingValueFloat_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingValueFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValueFloat,NULL,&GetProfileSettingValueFloat_Parms,NULL);
	pFnGetProfileSettingValueFloat->FunctionFlags |= 0x400;
	if(Value)
		*Value = GetProfileSettingValueFloat_Parms.Value;
	return GetProfileSettingValueFloat_Parms.ReturnValue;
}

struct Engine_GetProfileSettingValueInt_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::GetProfileSettingValueInt(int ProfileSettingId,int* Value)
{
	static UFieldFunc* pFnGetProfileSettingValueInt = NULL;
	if(!pFnGetProfileSettingValueInt)
		pFnGetProfileSettingValueInt = UObject::FindFunction("Function Engine.OnlinePlayerStorage.GetProfileSettingValueInt");

	Engine_GetProfileSettingValueInt_Parms GetProfileSettingValueInt_Parms;
	GetProfileSettingValueInt_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingValueInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingValueInt,NULL,&GetProfileSettingValueInt_Parms,NULL);
	pFnGetProfileSettingValueInt->FunctionFlags |= 0x400;
	if(Value)
		*Value = GetProfileSettingValueInt_Parms.Value;
	return GetProfileSettingValueInt_Parms.ReturnValue;
}

struct Engine_SetProfileSettingValueFloat_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	float                                              Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerStorage::SetProfileSettingValueFloat(int ProfileSettingId,float Value)
{
	static UFieldFunc* pFnSetProfileSettingValueFloat = NULL;
	if(!pFnSetProfileSettingValueFloat)
		pFnSetProfileSettingValueFloat = UObject::FindFunction("Function Engine.OnlinePlayerStorage.SetProfileSettingValueFloat");

	Engine_SetProfileSettingValueFloat_Parms SetProfileSettingValueFloat_Parms;
	SetProfileSettingValueFloat_Parms.ProfileSettingId = ProfileSettingId;
	SetProfileSettingValueFloat_Parms.Value = Value;
	pFnSetProfileSettingValueFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetProfileSettingValueFloat,NULL,&SetProfileSettingValueFloat_Parms,NULL);
	pFnSetProfileSettingValueFloat->FunctionFlags |= 0x400;
	return SetProfileSettingValueFloat_Parms.ReturnValue;
}

struct Engine_GetProfileSettingDefaultId_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                DefaultId;                                        		// 0x000004 (0x0004)              
	int                                                ListIndex;                                        		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineProfileSettings::GetProfileSettingDefaultId(int ProfileSettingId,int* DefaultId,int* ListIndex)
{
	static UFieldFunc* pFnGetProfileSettingDefaultId = NULL;
	if(!pFnGetProfileSettingDefaultId)
		pFnGetProfileSettingDefaultId = UObject::FindFunction("Function Engine.OnlineProfileSettings.GetProfileSettingDefaultId");

	Engine_GetProfileSettingDefaultId_Parms GetProfileSettingDefaultId_Parms;
	GetProfileSettingDefaultId_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingDefaultId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingDefaultId,NULL,&GetProfileSettingDefaultId_Parms,NULL);
	pFnGetProfileSettingDefaultId->FunctionFlags |= 0x400;
	if(DefaultId)
		*DefaultId = GetProfileSettingDefaultId_Parms.DefaultId;
	if(ListIndex)
		*ListIndex = GetProfileSettingDefaultId_Parms.ListIndex;
	return GetProfileSettingDefaultId_Parms.ReturnValue;
}

struct Engine_AppendVersionToReadIds_Parms
{
};

void UOnlineProfileSettings::AppendVersionToReadIds()
{
	static UFieldFunc* pFnAppendVersionToReadIds = NULL;
	if(!pFnAppendVersionToReadIds)
		pFnAppendVersionToReadIds = UObject::FindFunction("Function Engine.OnlineProfileSettings.AppendVersionToReadIds");

	Engine_AppendVersionToReadIds_Parms AppendVersionToReadIds_Parms;
	pFnAppendVersionToReadIds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAppendVersionToReadIds,NULL,&AppendVersionToReadIds_Parms,NULL);
	pFnAppendVersionToReadIds->FunctionFlags |= 0x400;
}

struct Engine_GetProfileSettingDefaultInt_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	int                                                DefaultInt;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineProfileSettings::GetProfileSettingDefaultInt(int ProfileSettingId,int* DefaultInt)
{
	static UFieldFunc* pFnGetProfileSettingDefaultInt = NULL;
	if(!pFnGetProfileSettingDefaultInt)
		pFnGetProfileSettingDefaultInt = UObject::FindFunction("Function Engine.OnlineProfileSettings.GetProfileSettingDefaultInt");

	Engine_GetProfileSettingDefaultInt_Parms GetProfileSettingDefaultInt_Parms;
	GetProfileSettingDefaultInt_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingDefaultInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingDefaultInt,NULL,&GetProfileSettingDefaultInt_Parms,NULL);
	pFnGetProfileSettingDefaultInt->FunctionFlags |= 0x400;
	if(DefaultInt)
		*DefaultInt = GetProfileSettingDefaultInt_Parms.DefaultInt;
	return GetProfileSettingDefaultInt_Parms.ReturnValue;
}

struct Engine_SetToDefaults_Parms
{
};

void UOnlineProfileSettings::SetToDefaults()
{
	static UFieldFunc* pFnSetToDefaults = NULL;
	if(!pFnSetToDefaults)
		pFnSetToDefaults = UObject::FindFunction("Function Engine.OnlineProfileSettings.SetToDefaults");

	Engine_SetToDefaults_Parms SetToDefaults_Parms;
	pFnSetToDefaults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetToDefaults,NULL,&SetToDefaults_Parms,NULL);
	pFnSetToDefaults->FunctionFlags |= 0x400;
}

struct Engine_ModifyAvailableProfileSettings_Parms
{
};

void UOnlineProfileSettings::ModifyAvailableProfileSettings()
{
	static UFieldFunc* pFnModifyAvailableProfileSettings = NULL;
	if(!pFnModifyAvailableProfileSettings)
		pFnModifyAvailableProfileSettings = UObject::FindFunction("Function Engine.OnlineProfileSettings.ModifyAvailableProfileSettings");

	Engine_ModifyAvailableProfileSettings_Parms ModifyAvailableProfileSettings_Parms;
	ProcessEvent(pFnModifyAvailableProfileSettings,NULL,&ModifyAvailableProfileSettings_Parms,NULL);
}

struct Engine_GetProfileSettingDefaultFloat_Parms
{
	int                                                ProfileSettingId;                                 		// 0x000000 (0x0004)              
	float                                              DefaultFloat;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineProfileSettings::GetProfileSettingDefaultFloat(int ProfileSettingId,float* DefaultFloat)
{
	static UFieldFunc* pFnGetProfileSettingDefaultFloat = NULL;
	if(!pFnGetProfileSettingDefaultFloat)
		pFnGetProfileSettingDefaultFloat = UObject::FindFunction("Function Engine.OnlineProfileSettings.GetProfileSettingDefaultFloat");

	Engine_GetProfileSettingDefaultFloat_Parms GetProfileSettingDefaultFloat_Parms;
	GetProfileSettingDefaultFloat_Parms.ProfileSettingId = ProfileSettingId;
	pFnGetProfileSettingDefaultFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProfileSettingDefaultFloat,NULL,&GetProfileSettingDefaultFloat_Parms,NULL);
	pFnGetProfileSettingDefaultFloat->FunctionFlags |= 0x400;
	if(DefaultFloat)
		*DefaultFloat = GetProfileSettingDefaultFloat_Parms.DefaultFloat;
	return GetProfileSettingDefaultFloat_Parms.ReturnValue;
}

struct Engine_GetViewId_Parms
{
	struct FName                                       ViewName;                                         		// 0x000000 (0x0008)              
	int                                                ViewId;                                           		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineStats::GetViewId(struct FName ViewName,int* ViewId)
{
	static UFieldFunc* pFnGetViewId = NULL;
	if(!pFnGetViewId)
		pFnGetViewId = UObject::FindFunction("Function Engine.OnlineStats.GetViewId");

	Engine_GetViewId_Parms GetViewId_Parms;
	memcpy(&GetViewId_Parms.ViewName,&ViewName,0x8);
	pFnGetViewId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewId,NULL,&GetViewId_Parms,NULL);
	pFnGetViewId->FunctionFlags |= 0x400;
	if(ViewId)
		*ViewId = GetViewId_Parms.ViewId;
	return GetViewId_Parms.ReturnValue;
}

struct Engine_GetViewName_Parms
{
	int                                                ViewId;                                           		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName UOnlineStats::GetViewName(int ViewId)
{
	static UFieldFunc* pFnGetViewName = NULL;
	if(!pFnGetViewName)
		pFnGetViewName = UObject::FindFunction("Function Engine.OnlineStats.GetViewName");

	Engine_GetViewName_Parms GetViewName_Parms;
	GetViewName_Parms.ViewId = ViewId;
	pFnGetViewName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewName,NULL,&GetViewName_Parms,NULL);
	pFnGetViewName->FunctionFlags |= 0x400;
	return GetViewName_Parms.ReturnValue;
}

struct Engine_GetIntStatValueForPlayer_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                StatColumnNo;                                     		// 0x000008 (0x0004)              
	int                                                StatValue;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineStatsRead::GetIntStatValueForPlayer(struct FUniqueNetId PlayerID,int StatColumnNo,int* StatValue)
{
	static UFieldFunc* pFnGetIntStatValueForPlayer = NULL;
	if(!pFnGetIntStatValueForPlayer)
		pFnGetIntStatValueForPlayer = UObject::FindFunction("Function Engine.OnlineStatsRead.GetIntStatValueForPlayer");

	Engine_GetIntStatValueForPlayer_Parms GetIntStatValueForPlayer_Parms;
	memcpy(&GetIntStatValueForPlayer_Parms.PlayerID,&PlayerID,0x8);
	GetIntStatValueForPlayer_Parms.StatColumnNo = StatColumnNo;
	pFnGetIntStatValueForPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetIntStatValueForPlayer,NULL,&GetIntStatValueForPlayer_Parms,NULL);
	pFnGetIntStatValueForPlayer->FunctionFlags |= 0x400;
	if(StatValue)
		*StatValue = GetIntStatValueForPlayer_Parms.StatValue;
	return GetIntStatValueForPlayer_Parms.ReturnValue;
}

struct Engine_OnReadComplete_Parms
{
};

void UOnlineStatsRead::OnReadComplete()
{
	static UFieldFunc* pFnOnReadComplete = NULL;
	if(!pFnOnReadComplete)
		pFnOnReadComplete = UObject::FindFunction("Function Engine.OnlineStatsRead.OnReadComplete");

	Engine_OnReadComplete_Parms OnReadComplete_Parms;
	ProcessEvent(pFnOnReadComplete,NULL,&OnReadComplete_Parms,NULL);
}

struct Engine_IsStatZero_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                StatColumnNo;                                     		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineStatsRead::IsStatZero(struct FUniqueNetId PlayerID,int StatColumnNo)
{
	static UFieldFunc* pFnIsStatZero = NULL;
	if(!pFnIsStatZero)
		pFnIsStatZero = UObject::FindFunction("Function Engine.OnlineStatsRead.IsStatZero");

	Engine_IsStatZero_Parms IsStatZero_Parms;
	memcpy(&IsStatZero_Parms.PlayerID,&PlayerID,0x8);
	IsStatZero_Parms.StatColumnNo = StatColumnNo;
	pFnIsStatZero->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsStatZero,NULL,&IsStatZero_Parms,NULL);
	pFnIsStatZero->FunctionFlags |= 0x400;
	return IsStatZero_Parms.ReturnValue;
}

struct Engine_GetFloatStatValueForPlayer_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                StatColumnNo;                                     		// 0x000008 (0x0004)              
	float                                              StatValue;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineStatsRead::GetFloatStatValueForPlayer(struct FUniqueNetId PlayerID,int StatColumnNo,float* StatValue)
{
	static UFieldFunc* pFnGetFloatStatValueForPlayer = NULL;
	if(!pFnGetFloatStatValueForPlayer)
		pFnGetFloatStatValueForPlayer = UObject::FindFunction("Function Engine.OnlineStatsRead.GetFloatStatValueForPlayer");

	Engine_GetFloatStatValueForPlayer_Parms GetFloatStatValueForPlayer_Parms;
	memcpy(&GetFloatStatValueForPlayer_Parms.PlayerID,&PlayerID,0x8);
	GetFloatStatValueForPlayer_Parms.StatColumnNo = StatColumnNo;
	pFnGetFloatStatValueForPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFloatStatValueForPlayer,NULL,&GetFloatStatValueForPlayer_Parms,NULL);
	pFnGetFloatStatValueForPlayer->FunctionFlags |= 0x400;
	if(StatValue)
		*StatValue = GetFloatStatValueForPlayer_Parms.StatValue;
	return GetFloatStatValueForPlayer_Parms.ReturnValue;
}

struct Engine_SetFloatStatValueForPlayer_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                StatColumnNo;                                     		// 0x000008 (0x0004)              
	float                                              StatValue;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineStatsRead::SetFloatStatValueForPlayer(struct FUniqueNetId PlayerID,int StatColumnNo,float StatValue)
{
	static UFieldFunc* pFnSetFloatStatValueForPlayer = NULL;
	if(!pFnSetFloatStatValueForPlayer)
		pFnSetFloatStatValueForPlayer = UObject::FindFunction("Function Engine.OnlineStatsRead.SetFloatStatValueForPlayer");

	Engine_SetFloatStatValueForPlayer_Parms SetFloatStatValueForPlayer_Parms;
	memcpy(&SetFloatStatValueForPlayer_Parms.PlayerID,&PlayerID,0x8);
	SetFloatStatValueForPlayer_Parms.StatColumnNo = StatColumnNo;
	SetFloatStatValueForPlayer_Parms.StatValue = StatValue;
	pFnSetFloatStatValueForPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFloatStatValueForPlayer,NULL,&SetFloatStatValueForPlayer_Parms,NULL);
	pFnSetFloatStatValueForPlayer->FunctionFlags |= 0x400;
	return SetFloatStatValueForPlayer_Parms.ReturnValue;
}

struct Engine_SetIntStatValueForPlayer_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                StatColumnNo;                                     		// 0x000008 (0x0004)              
	int                                                StatValue;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineStatsRead::SetIntStatValueForPlayer(struct FUniqueNetId PlayerID,int StatColumnNo,int StatValue)
{
	static UFieldFunc* pFnSetIntStatValueForPlayer = NULL;
	if(!pFnSetIntStatValueForPlayer)
		pFnSetIntStatValueForPlayer = UObject::FindFunction("Function Engine.OnlineStatsRead.SetIntStatValueForPlayer");

	Engine_SetIntStatValueForPlayer_Parms SetIntStatValueForPlayer_Parms;
	memcpy(&SetIntStatValueForPlayer_Parms.PlayerID,&PlayerID,0x8);
	SetIntStatValueForPlayer_Parms.StatColumnNo = StatColumnNo;
	SetIntStatValueForPlayer_Parms.StatValue = StatValue;
	pFnSetIntStatValueForPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIntStatValueForPlayer,NULL,&SetIntStatValueForPlayer_Parms,NULL);
	pFnSetIntStatValueForPlayer->FunctionFlags |= 0x400;
	return SetIntStatValueForPlayer_Parms.ReturnValue;
}

struct Engine_GetStatValueForPlayerAsString_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                StatColumnNo;                                     		// 0x000008 (0x0004)              
	struct FString                                     StatValue;                                        		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineStatsRead::GetStatValueForPlayerAsString(struct FUniqueNetId PlayerID,int StatColumnNo,struct FString* StatValue)
{
	static UFieldFunc* pFnGetStatValueForPlayerAsString = NULL;
	if(!pFnGetStatValueForPlayerAsString)
		pFnGetStatValueForPlayerAsString = UObject::FindFunction("Function Engine.OnlineStatsRead.GetStatValueForPlayerAsString");

	Engine_GetStatValueForPlayerAsString_Parms GetStatValueForPlayerAsString_Parms;
	memcpy(&GetStatValueForPlayerAsString_Parms.PlayerID,&PlayerID,0x8);
	GetStatValueForPlayerAsString_Parms.StatColumnNo = StatColumnNo;
	pFnGetStatValueForPlayerAsString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStatValueForPlayerAsString,NULL,&GetStatValueForPlayerAsString_Parms,NULL);
	pFnGetStatValueForPlayerAsString->FunctionFlags |= 0x400;
	if(StatValue)
		memcpy(StatValue,&GetStatValueForPlayerAsString_Parms.StatValue,0xC);
	return GetStatValueForPlayerAsString_Parms.ReturnValue;
}

struct Engine_AddPlayer_Parms
{
	struct FString                                     PlayerName;                                       		// 0x000000 (0x000C)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x00000C (0x0008)              
};

void UOnlineStatsRead::AddPlayer(struct FString PlayerName,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnAddPlayer = NULL;
	if(!pFnAddPlayer)
		pFnAddPlayer = UObject::FindFunction("Function Engine.OnlineStatsRead.AddPlayer");

	Engine_AddPlayer_Parms AddPlayer_Parms;
	memcpy(&AddPlayer_Parms.PlayerName,&PlayerName,0xC);
	memcpy(&AddPlayer_Parms.PlayerID,&PlayerID,0x8);
	pFnAddPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddPlayer,NULL,&AddPlayer_Parms,NULL);
	pFnAddPlayer->FunctionFlags |= 0x400;
}

struct Engine_GetRankForPlayer_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UOnlineStatsRead::GetRankForPlayer(struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnGetRankForPlayer = NULL;
	if(!pFnGetRankForPlayer)
		pFnGetRankForPlayer = UObject::FindFunction("Function Engine.OnlineStatsRead.GetRankForPlayer");

	Engine_GetRankForPlayer_Parms GetRankForPlayer_Parms;
	memcpy(&GetRankForPlayer_Parms.PlayerID,&PlayerID,0x8);
	pFnGetRankForPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRankForPlayer,NULL,&GetRankForPlayer_Parms,NULL);
	pFnGetRankForPlayer->FunctionFlags |= 0x400;
	return GetRankForPlayer_Parms.ReturnValue;
}

struct Engine_GetStatName_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName UOnlineStatsWrite::GetStatName(int StatId)
{
	static UFieldFunc* pFnGetStatName = NULL;
	if(!pFnGetStatName)
		pFnGetStatName = UObject::FindFunction("Function Engine.OnlineStatsWrite.GetStatName");

	Engine_GetStatName_Parms GetStatName_Parms;
	GetStatName_Parms.StatId = StatId;
	pFnGetStatName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStatName,NULL,&GetStatName_Parms,NULL);
	pFnGetStatName->FunctionFlags |= 0x400;
	return GetStatName_Parms.ReturnValue;
}

struct Engine_DecrementIntStat_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	int                                                DecBy;                                            		// 0x000004 (0x0004)              
};

void UOnlineStatsWrite::DecrementIntStat(int StatId,int DecBy)
{
	static UFieldFunc* pFnDecrementIntStat = NULL;
	if(!pFnDecrementIntStat)
		pFnDecrementIntStat = UObject::FindFunction("Function Engine.OnlineStatsWrite.DecrementIntStat");

	Engine_DecrementIntStat_Parms DecrementIntStat_Parms;
	DecrementIntStat_Parms.StatId = StatId;
	DecrementIntStat_Parms.DecBy = DecBy;
	pFnDecrementIntStat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDecrementIntStat,NULL,&DecrementIntStat_Parms,NULL);
	pFnDecrementIntStat->FunctionFlags |= 0x400;
}

struct Engine_DecrementFloatStat_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	float                                              DecBy;                                            		// 0x000004 (0x0004)              
};

void UOnlineStatsWrite::DecrementFloatStat(int StatId,float DecBy)
{
	static UFieldFunc* pFnDecrementFloatStat = NULL;
	if(!pFnDecrementFloatStat)
		pFnDecrementFloatStat = UObject::FindFunction("Function Engine.OnlineStatsWrite.DecrementFloatStat");

	Engine_DecrementFloatStat_Parms DecrementFloatStat_Parms;
	DecrementFloatStat_Parms.StatId = StatId;
	DecrementFloatStat_Parms.DecBy = DecBy;
	pFnDecrementFloatStat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDecrementFloatStat,NULL,&DecrementFloatStat_Parms,NULL);
	pFnDecrementFloatStat->FunctionFlags |= 0x400;
}

struct Engine_SetIntStat_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	int                                                Value;                                            		// 0x000004 (0x0004)              
};

void UOnlineStatsWrite::SetIntStat(int StatId,int Value)
{
	static UFieldFunc* pFnSetIntStat = NULL;
	if(!pFnSetIntStat)
		pFnSetIntStat = UObject::FindFunction("Function Engine.OnlineStatsWrite.SetIntStat");

	Engine_SetIntStat_Parms SetIntStat_Parms;
	SetIntStat_Parms.StatId = StatId;
	SetIntStat_Parms.Value = Value;
	pFnSetIntStat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIntStat,NULL,&SetIntStat_Parms,NULL);
	pFnSetIntStat->FunctionFlags |= 0x400;
}

struct Engine_IncrementIntStat_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	int                                                IncBy;                                            		// 0x000004 (0x0004)              
};

void UOnlineStatsWrite::IncrementIntStat(int StatId,int IncBy)
{
	static UFieldFunc* pFnIncrementIntStat = NULL;
	if(!pFnIncrementIntStat)
		pFnIncrementIntStat = UObject::FindFunction("Function Engine.OnlineStatsWrite.IncrementIntStat");

	Engine_IncrementIntStat_Parms IncrementIntStat_Parms;
	IncrementIntStat_Parms.StatId = StatId;
	IncrementIntStat_Parms.IncBy = IncBy;
	pFnIncrementIntStat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIncrementIntStat,NULL,&IncrementIntStat_Parms,NULL);
	pFnIncrementIntStat->FunctionFlags |= 0x400;
}

struct Engine_OnStatsWriteComplete_Parms
{
};

void UOnlineStatsWrite::OnStatsWriteComplete()
{
	static UFieldFunc* pFnOnStatsWriteComplete = NULL;
	if(!pFnOnStatsWriteComplete)
		pFnOnStatsWriteComplete = UObject::FindFunction("Function Engine.OnlineStatsWrite.OnStatsWriteComplete");

	Engine_OnStatsWriteComplete_Parms OnStatsWriteComplete_Parms;
	ProcessEvent(pFnOnStatsWriteComplete,NULL,&OnStatsWriteComplete_Parms,NULL);
}

struct Engine_GetStatId_Parms
{
	struct FName                                       StatName;                                         		// 0x000000 (0x0008)              
	int                                                StatId;                                           		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineStatsWrite::GetStatId(struct FName StatName,int* StatId)
{
	static UFieldFunc* pFnGetStatId = NULL;
	if(!pFnGetStatId)
		pFnGetStatId = UObject::FindFunction("Function Engine.OnlineStatsWrite.GetStatId");

	Engine_GetStatId_Parms GetStatId_Parms;
	memcpy(&GetStatId_Parms.StatName,&StatName,0x8);
	pFnGetStatId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStatId,NULL,&GetStatId_Parms,NULL);
	pFnGetStatId->FunctionFlags |= 0x400;
	if(StatId)
		*StatId = GetStatId_Parms.StatId;
	return GetStatId_Parms.ReturnValue;
}

struct Engine_IncrementFloatStat_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	float                                              IncBy;                                            		// 0x000004 (0x0004)              
};

void UOnlineStatsWrite::IncrementFloatStat(int StatId,float IncBy)
{
	static UFieldFunc* pFnIncrementFloatStat = NULL;
	if(!pFnIncrementFloatStat)
		pFnIncrementFloatStat = UObject::FindFunction("Function Engine.OnlineStatsWrite.IncrementFloatStat");

	Engine_IncrementFloatStat_Parms IncrementFloatStat_Parms;
	IncrementFloatStat_Parms.StatId = StatId;
	IncrementFloatStat_Parms.IncBy = IncBy;
	pFnIncrementFloatStat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIncrementFloatStat,NULL,&IncrementFloatStat_Parms,NULL);
	pFnIncrementFloatStat->FunctionFlags |= 0x400;
}

struct Engine_SetFloatStat_Parms
{
	int                                                StatId;                                           		// 0x000000 (0x0004)              
	float                                              Value;                                            		// 0x000004 (0x0004)              
};

void UOnlineStatsWrite::SetFloatStat(int StatId,float Value)
{
	static UFieldFunc* pFnSetFloatStat = NULL;
	if(!pFnSetFloatStat)
		pFnSetFloatStat = UObject::FindFunction("Function Engine.OnlineStatsWrite.SetFloatStat");

	Engine_SetFloatStat_Parms SetFloatStat_Parms;
	SetFloatStat_Parms.StatId = StatId;
	SetFloatStat_Parms.Value = Value;
	pFnSetFloatStat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFloatStat,NULL,&SetFloatStat_Parms,NULL);
	pFnSetFloatStat->FunctionFlags |= 0x400;
}

struct Engine_SetSystemInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetSystemInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetSystemInterface = NULL;
	if(!pFnSetSystemInterface)
		pFnSetSystemInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetSystemInterface");

	Engine_SetSystemInterface_Parms SetSystemInterface_Parms;
	SetSystemInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetSystemInterface,NULL,&SetSystemInterface_Parms,NULL);
	return SetSystemInterface_Parms.ReturnValue;
}

struct Engine_SetSocialInterface_Parms
{
	class UObject*                                     InSocialInterface;                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetSocialInterface(class UObject* InSocialInterface)
{
	static UFieldFunc* pFnSetSocialInterface = NULL;
	if(!pFnSetSocialInterface)
		pFnSetSocialInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetSocialInterface");

	Engine_SetSocialInterface_Parms SetSocialInterface_Parms;
	SetSocialInterface_Parms.InSocialInterface = InSocialInterface;
	ProcessEvent(pFnSetSocialInterface,NULL,&SetSocialInterface_Parms,NULL);
	return SetSocialInterface_Parms.ReturnValue;
}

struct Engine_SetPlayerInterfaceEx_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetPlayerInterfaceEx(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetPlayerInterfaceEx = NULL;
	if(!pFnSetPlayerInterfaceEx)
		pFnSetPlayerInterfaceEx = UObject::FindFunction("Function Engine.OnlineSubsystem.SetPlayerInterfaceEx");

	Engine_SetPlayerInterfaceEx_Parms SetPlayerInterfaceEx_Parms;
	SetPlayerInterfaceEx_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetPlayerInterfaceEx,NULL,&SetPlayerInterfaceEx_Parms,NULL);
	return SetPlayerInterfaceEx_Parms.ReturnValue;
}

struct Engine_SetNamedInterface_Parms
{
	struct FName                                       InterfaceName;                                    		// 0x000000 (0x0008)              
	class UObject*                                     NewInterface;                                     		// 0x000008 (0x0004)              
	//int                                                InterfaceIndex;                                   		// 0x00000C (0x0004)              
};

void UOnlineSubsystem::SetNamedInterface(struct FName InterfaceName,class UObject* NewInterface)
{
	static UFieldFunc* pFnSetNamedInterface = NULL;
	if(!pFnSetNamedInterface)
		pFnSetNamedInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetNamedInterface");

	Engine_SetNamedInterface_Parms SetNamedInterface_Parms;
	memcpy(&SetNamedInterface_Parms.InterfaceName,&InterfaceName,0x8);
	SetNamedInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetNamedInterface,NULL,&SetNamedInterface_Parms,NULL);
}

struct Engine_DumpGameSettings_Parms
{
	class UOnlineGameSettings*                         GameSettings;                                     		// 0x000000 (0x0004)              
};

void UOnlineSubsystem::DumpGameSettings(class UOnlineGameSettings* GameSettings)
{
	static UFieldFunc* pFnDumpGameSettings = NULL;
	if(!pFnDumpGameSettings)
		pFnDumpGameSettings = UObject::FindFunction("Function Engine.OnlineSubsystem.DumpGameSettings");

	Engine_DumpGameSettings_Parms DumpGameSettings_Parms;
	DumpGameSettings_Parms.GameSettings = GameSettings;
	ProcessEvent(pFnDumpGameSettings,NULL,&DumpGameSettings_Parms,NULL);
}

struct Engine_GetNamedInterface_Parms
{
	struct FName                                       InterfaceName;                                    		// 0x000000 (0x0008)              
	class UObject*                                     ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                InterfaceIndex;                                   		// 0x00000C (0x0004)              
};

class UObject* UOnlineSubsystem::GetNamedInterface(struct FName InterfaceName)
{
	static UFieldFunc* pFnGetNamedInterface = NULL;
	if(!pFnGetNamedInterface)
		pFnGetNamedInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.GetNamedInterface");

	Engine_GetNamedInterface_Parms GetNamedInterface_Parms;
	memcpy(&GetNamedInterface_Parms.InterfaceName,&InterfaceName,0x8);
	ProcessEvent(pFnGetNamedInterface,NULL,&GetNamedInterface_Parms,NULL);
	return GetNamedInterface_Parms.ReturnValue;
}

struct Engine_SetDebugSpewLevel_Parms
{
	int                                                DebugSpewLevel;                                   		// 0x000000 (0x0004)              
};

void UOnlineSubsystem::SetDebugSpewLevel(int DebugSpewLevel)
{
	static UFieldFunc* pFnSetDebugSpewLevel = NULL;
	if(!pFnSetDebugSpewLevel)
		pFnSetDebugSpewLevel = UObject::FindFunction("Function Engine.OnlineSubsystem.SetDebugSpewLevel");

	Engine_SetDebugSpewLevel_Parms SetDebugSpewLevel_Parms;
	SetDebugSpewLevel_Parms.DebugSpewLevel = DebugSpewLevel;
	ProcessEvent(pFnSetDebugSpewLevel,NULL,&SetDebugSpewLevel_Parms,NULL);
}

struct Engine_SetTitleFileInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetTitleFileInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetTitleFileInterface = NULL;
	if(!pFnSetTitleFileInterface)
		pFnSetTitleFileInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetTitleFileInterface");

	Engine_SetTitleFileInterface_Parms SetTitleFileInterface_Parms;
	SetTitleFileInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetTitleFileInterface,NULL,&SetTitleFileInterface_Parms,NULL);
	return SetTitleFileInterface_Parms.ReturnValue;
}

struct Engine_SetUserCloudInterface_Parms
{
	class UObject*                                     InCloudInterface;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetUserCloudInterface(class UObject* InCloudInterface)
{
	static UFieldFunc* pFnSetUserCloudInterface = NULL;
	if(!pFnSetUserCloudInterface)
		pFnSetUserCloudInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetUserCloudInterface");

	Engine_SetUserCloudInterface_Parms SetUserCloudInterface_Parms;
	SetUserCloudInterface_Parms.InCloudInterface = InCloudInterface;
	ProcessEvent(pFnSetUserCloudInterface,NULL,&SetUserCloudInterface_Parms,NULL);
	return SetUserCloudInterface_Parms.ReturnValue;
}

struct Engine_SetAccountInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetAccountInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetAccountInterface = NULL;
	if(!pFnSetAccountInterface)
		pFnSetAccountInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetAccountInterface");

	Engine_SetAccountInterface_Parms SetAccountInterface_Parms;
	SetAccountInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetAccountInterface,NULL,&SetAccountInterface_Parms,NULL);
	return SetAccountInterface_Parms.ReturnValue;
}

struct Engine_SetStatsInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetStatsInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetStatsInterface = NULL;
	if(!pFnSetStatsInterface)
		pFnSetStatsInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetStatsInterface");

	Engine_SetStatsInterface_Parms SetStatsInterface_Parms;
	SetStatsInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetStatsInterface,NULL,&SetStatsInterface_Parms,NULL);
	return SetStatsInterface_Parms.ReturnValue;
}

struct Engine_SetVoiceInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetVoiceInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetVoiceInterface = NULL;
	if(!pFnSetVoiceInterface)
		pFnSetVoiceInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetVoiceInterface");

	Engine_SetVoiceInterface_Parms SetVoiceInterface_Parms;
	SetVoiceInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetVoiceInterface,NULL,&SetVoiceInterface_Parms,NULL);
	return SetVoiceInterface_Parms.ReturnValue;
}

struct Engine_DumpVoiceRegistration_Parms
{
};

void UOnlineSubsystem::DumpVoiceRegistration()
{
	static UFieldFunc* pFnDumpVoiceRegistration = NULL;
	if(!pFnDumpVoiceRegistration)
		pFnDumpVoiceRegistration = UObject::FindFunction("Function Engine.OnlineSubsystem.DumpVoiceRegistration");

	Engine_DumpVoiceRegistration_Parms DumpVoiceRegistration_Parms;
	ProcessEvent(pFnDumpVoiceRegistration,NULL,&DumpVoiceRegistration_Parms,NULL);
}

struct Engine_PostInit_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class UClass*                                      IniLocPatcherClass;                               		// 0x000004 (0x0004)              
};

bool UOnlineSubsystem::PostInit()
{
	static UFieldFunc* pFnPostInit = NULL;
	if(!pFnPostInit)
		pFnPostInit = UObject::FindFunction("Function Engine.OnlineSubsystem.PostInit");

	Engine_PostInit_Parms PostInit_Parms;
	ProcessEvent(pFnPostInit,NULL,&PostInit_Parms,NULL);
	return PostInit_Parms.ReturnValue;
}

struct Engine_SetPlayerInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetPlayerInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetPlayerInterface = NULL;
	if(!pFnSetPlayerInterface)
		pFnSetPlayerInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetPlayerInterface");

	Engine_SetPlayerInterface_Parms SetPlayerInterface_Parms;
	SetPlayerInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetPlayerInterface,NULL,&SetPlayerInterface_Parms,NULL);
	return SetPlayerInterface_Parms.ReturnValue;
}

struct Engine_SetPartyChatInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetPartyChatInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetPartyChatInterface = NULL;
	if(!pFnSetPartyChatInterface)
		pFnSetPartyChatInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetPartyChatInterface");

	Engine_SetPartyChatInterface_Parms SetPartyChatInterface_Parms;
	SetPartyChatInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetPartyChatInterface,NULL,&SetPartyChatInterface_Parms,NULL);
	return SetPartyChatInterface_Parms.ReturnValue;
}

struct Engine_DumpSessionState_Parms
{
	//int                                                Index;                                            		// 0x000000 (0x0004)              
	//int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	//struct FUniqueNetId                                NetId;                                            		// 0x000008 (0x0008)              
	//struct FUniqueNetId                                ZeroId;                                           		// 0x000010 (0x0008)              
};

void UOnlineSubsystem::DumpSessionState()
{
	static UFieldFunc* pFnDumpSessionState = NULL;
	if(!pFnDumpSessionState)
		pFnDumpSessionState = UObject::FindFunction("Function Engine.OnlineSubsystem.DumpSessionState");

	Engine_DumpSessionState_Parms DumpSessionState_Parms;
	ProcessEvent(pFnDumpSessionState,NULL,&DumpSessionState_Parms,NULL);
}

struct Engine_SetSharedCloudInterface_Parms
{
	class UObject*                                     InCloudInterface;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetSharedCloudInterface(class UObject* InCloudInterface)
{
	static UFieldFunc* pFnSetSharedCloudInterface = NULL;
	if(!pFnSetSharedCloudInterface)
		pFnSetSharedCloudInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetSharedCloudInterface");

	Engine_SetSharedCloudInterface_Parms SetSharedCloudInterface_Parms;
	SetSharedCloudInterface_Parms.InCloudInterface = InCloudInterface;
	ProcessEvent(pFnSetSharedCloudInterface,NULL,&SetSharedCloudInterface_Parms,NULL);
	return SetSharedCloudInterface_Parms.ReturnValue;
}

struct Engine_Exit_Parms
{
};

void UOnlineSubsystem::Exit()
{
	static UFieldFunc* pFnExit = NULL;
	if(!pFnExit)
		pFnExit = UObject::FindFunction("Function Engine.OnlineSubsystem.Exit");

	Engine_Exit_Parms Exit_Parms;
	ProcessEvent(pFnExit,NULL,&Exit_Parms,NULL);
}

struct Engine_SetNewsInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetNewsInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetNewsInterface = NULL;
	if(!pFnSetNewsInterface)
		pFnSetNewsInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetNewsInterface");

	Engine_SetNewsInterface_Parms SetNewsInterface_Parms;
	SetNewsInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetNewsInterface,NULL,&SetNewsInterface_Parms,NULL);
	return SetNewsInterface_Parms.ReturnValue;
}

struct Engine_GetPlayerUniqueNetIdFromIndex_Parms
{
	int                                                UserIndex;                                        		// 0x000000 (0x0004)              
	struct FUniqueNetId                                ReturnValue;                                      		// 0x000004 (0x0008)              
	//struct FUniqueNetId                                ReturnVal;                                        		// 0x00000C (0x0008)              
	//struct FUniqueNetId                                NullId;                                           		// 0x000014 (0x0008)              
};

struct FUniqueNetId UOnlineSubsystem::GetPlayerUniqueNetIdFromIndex(int UserIndex)
{
	static UFieldFunc* pFnGetPlayerUniqueNetIdFromIndex = NULL;
	if(!pFnGetPlayerUniqueNetIdFromIndex)
		pFnGetPlayerUniqueNetIdFromIndex = UObject::FindFunction("Function Engine.OnlineSubsystem.GetPlayerUniqueNetIdFromIndex");

	Engine_GetPlayerUniqueNetIdFromIndex_Parms GetPlayerUniqueNetIdFromIndex_Parms;
	GetPlayerUniqueNetIdFromIndex_Parms.UserIndex = UserIndex;
	ProcessEvent(pFnGetPlayerUniqueNetIdFromIndex,NULL,&GetPlayerUniqueNetIdFromIndex_Parms,NULL);
	return GetPlayerUniqueNetIdFromIndex_Parms.ReturnValue;
}

struct Engine_UniqueNetIdToString_Parms
{
	struct FUniqueNetId                                IdToConvert;                                      		// 0x000000 (0x0008)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UOnlineSubsystem::UniqueNetIdToString(struct FUniqueNetId* IdToConvert)
{
	static UFieldFunc* pFnUniqueNetIdToString = NULL;
	if(!pFnUniqueNetIdToString)
		pFnUniqueNetIdToString = UObject::FindFunction("Function Engine.OnlineSubsystem.UniqueNetIdToString");

	Engine_UniqueNetIdToString_Parms UniqueNetIdToString_Parms;
	pFnUniqueNetIdToString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUniqueNetIdToString,NULL,&UniqueNetIdToString_Parms,NULL);
	pFnUniqueNetIdToString->FunctionFlags |= 0x400;
	if(IdToConvert)
		memcpy(IdToConvert,&UniqueNetIdToString_Parms.IdToConvert,0x8);
	return UniqueNetIdToString_Parms.ReturnValue;
}

struct Engine_GetBuildUniqueId_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UOnlineSubsystem::GetBuildUniqueId()
{
	static UFieldFunc* pFnGetBuildUniqueId = NULL;
	if(!pFnGetBuildUniqueId)
		pFnGetBuildUniqueId = UObject::FindFunction("Function Engine.OnlineSubsystem.GetBuildUniqueId");

	Engine_GetBuildUniqueId_Parms GetBuildUniqueId_Parms;
	pFnGetBuildUniqueId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBuildUniqueId,NULL,&GetBuildUniqueId_Parms,NULL);
	pFnGetBuildUniqueId->FunctionFlags |= 0x400;
	return GetBuildUniqueId_Parms.ReturnValue;
}

struct Engine_DumpNetIds_Parms
{
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000000 (0x000C)              
	struct FString                                     DebugLabel;                                       		// 0x00000C (0x000C)              
	//int                                                PlayerIdx;                                        		// 0x000018 (0x0004)              
	//struct FUniqueNetId                                NetId;                                            		// 0x00001C (0x0008)              
};

void UOnlineSubsystem::DumpNetIds(TArray<struct FUniqueNetId>* Players,struct FString DebugLabel)
{
	static UFieldFunc* pFnDumpNetIds = NULL;
	if(!pFnDumpNetIds)
		pFnDumpNetIds = UObject::FindFunction("Function Engine.OnlineSubsystem.DumpNetIds");

	Engine_DumpNetIds_Parms DumpNetIds_Parms;
	memcpy(&DumpNetIds_Parms.DebugLabel,&DebugLabel,0xC);
	ProcessEvent(pFnDumpNetIds,NULL,&DumpNetIds_Parms,NULL);
	if(Players)
		memcpy(Players,&DumpNetIds_Parms.Players,0xC);
}

struct Engine_GetNumSupportedLogins_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UOnlineSubsystem::GetNumSupportedLogins()
{
	static UFieldFunc* pFnGetNumSupportedLogins = NULL;
	if(!pFnGetNumSupportedLogins)
		pFnGetNumSupportedLogins = UObject::FindFunction("Function Engine.OnlineSubsystem.GetNumSupportedLogins");

	Engine_GetNumSupportedLogins_Parms GetNumSupportedLogins_Parms;
	pFnGetNumSupportedLogins->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumSupportedLogins,NULL,&GetNumSupportedLogins_Parms,NULL);
	pFnGetNumSupportedLogins->FunctionFlags |= 0x400;
	return GetNumSupportedLogins_Parms.ReturnValue;
}

struct Engine_SetGameInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetGameInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetGameInterface = NULL;
	if(!pFnSetGameInterface)
		pFnSetGameInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetGameInterface");

	Engine_SetGameInterface_Parms SetGameInterface_Parms;
	SetGameInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetGameInterface,NULL,&SetGameInterface_Parms,NULL);
	return SetGameInterface_Parms.ReturnValue;
}

struct Engine_StringToUniqueNetId_Parms
{
	struct FString                                     UniqueNetIdString;                                		// 0x000000 (0x000C)              
	struct FUniqueNetId                                out_UniqueId;                                     		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::StringToUniqueNetId(struct FString UniqueNetIdString,struct FUniqueNetId* out_UniqueId)
{
	static UFieldFunc* pFnStringToUniqueNetId = NULL;
	if(!pFnStringToUniqueNetId)
		pFnStringToUniqueNetId = UObject::FindFunction("Function Engine.OnlineSubsystem.StringToUniqueNetId");

	Engine_StringToUniqueNetId_Parms StringToUniqueNetId_Parms;
	memcpy(&StringToUniqueNetId_Parms.UniqueNetIdString,&UniqueNetIdString,0xC);
	pFnStringToUniqueNetId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStringToUniqueNetId,NULL,&StringToUniqueNetId_Parms,NULL);
	pFnStringToUniqueNetId->FunctionFlags |= 0x400;
	if(out_UniqueId)
		memcpy(out_UniqueId,&StringToUniqueNetId_Parms.out_UniqueId,0x8);
	return StringToUniqueNetId_Parms.ReturnValue;
}

struct Engine_SetTitleFileCacheInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetTitleFileCacheInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetTitleFileCacheInterface = NULL;
	if(!pFnSetTitleFileCacheInterface)
		pFnSetTitleFileCacheInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetTitleFileCacheInterface");

	Engine_SetTitleFileCacheInterface_Parms SetTitleFileCacheInterface_Parms;
	SetTitleFileCacheInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetTitleFileCacheInterface,NULL,&SetTitleFileCacheInterface_Parms,NULL);
	return SetTitleFileCacheInterface_Parms.ReturnValue;
}

struct Engine_SetContentInterface_Parms
{
	class UObject*                                     NewInterface;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::SetContentInterface(class UObject* NewInterface)
{
	static UFieldFunc* pFnSetContentInterface = NULL;
	if(!pFnSetContentInterface)
		pFnSetContentInterface = UObject::FindFunction("Function Engine.OnlineSubsystem.SetContentInterface");

	Engine_SetContentInterface_Parms SetContentInterface_Parms;
	SetContentInterface_Parms.NewInterface = NewInterface;
	ProcessEvent(pFnSetContentInterface,NULL,&SetContentInterface_Parms,NULL);
	return SetContentInterface_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineSubsystem::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.OnlineSubsystem.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
	return Init_Parms.ReturnValue;
}

struct Engine_SwitchController_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void UPlayer::SwitchController(class APlayerController* PC)
{
	static UFieldFunc* pFnSwitchController = NULL;
	if(!pFnSwitchController)
		pFnSwitchController = UObject::FindFunction("Function Engine.Player.SwitchController");

	Engine_SwitchController_Parms SwitchController_Parms;
	SwitchController_Parms.PC = PC;
	pFnSwitchController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSwitchController,NULL,&SwitchController_Parms,NULL);
	pFnSwitchController->FunctionFlags |= 0x400;
}

struct Engine_SendSplitJoin_Parms
{
};

void ULocalPlayer::SendSplitJoin()
{
	static UFieldFunc* pFnSendSplitJoin = NULL;
	if(!pFnSendSplitJoin)
		pFnSendSplitJoin = UObject::FindFunction("Function Engine.LocalPlayer.SendSplitJoin");

	Engine_SendSplitJoin_Parms SendSplitJoin_Parms;
	pFnSendSplitJoin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSendSplitJoin,NULL,&SendSplitJoin_Parms,NULL);
	pFnSendSplitJoin->FunctionFlags |= 0x400;
}

struct Engine_SetControllerId_Parms
{
	int                                                NewControllerId;                                  		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                OtherPlayer;                                      		// 0x000004 (0x0004)              
	//int                                                CurrentControllerId;                              		// 0x000008 (0x0004)              
};

void ULocalPlayer::SetControllerId(int NewControllerId)
{
	static UFieldFunc* pFnSetControllerId = NULL;
	if(!pFnSetControllerId)
		pFnSetControllerId = UObject::FindFunction("Function Engine.LocalPlayer.SetControllerId");

	Engine_SetControllerId_Parms SetControllerId_Parms;
	SetControllerId_Parms.NewControllerId = NewControllerId;
	ProcessEvent(pFnSetControllerId,NULL,&SetControllerId_Parms,NULL);
}

struct Engine_GetActorVisibility_Parms
{
	class AActor*                                      TestActor;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ULocalPlayer::GetActorVisibility(class AActor* TestActor)
{
	static UFieldFunc* pFnGetActorVisibility = NULL;
	if(!pFnGetActorVisibility)
		pFnGetActorVisibility = UObject::FindFunction("Function Engine.LocalPlayer.GetActorVisibility");

	Engine_GetActorVisibility_Parms GetActorVisibility_Parms;
	GetActorVisibility_Parms.TestActor = TestActor;
	pFnGetActorVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActorVisibility,NULL,&GetActorVisibility_Parms,NULL);
	pFnGetActorVisibility->FunctionFlags |= 0x400;
	return GetActorVisibility_Parms.ReturnValue;
}

struct Engine_GetUniqueNetId_Parms
{
	struct FUniqueNetId                                ReturnValue;                                      		// 0x000000 (0x0008)              
	//struct FUniqueNetId                                Result;                                           		// 0x000008 (0x0008)              
	//class UGameEngine*                                 TheEngine;                                        		// 0x000010 (0x0004)              
};

struct FUniqueNetId ULocalPlayer::GetUniqueNetId()
{
	static UFieldFunc* pFnGetUniqueNetId = NULL;
	if(!pFnGetUniqueNetId)
		pFnGetUniqueNetId = UObject::FindFunction("Function Engine.LocalPlayer.GetUniqueNetId");

	Engine_GetUniqueNetId_Parms GetUniqueNetId_Parms;
	ProcessEvent(pFnGetUniqueNetId,NULL,&GetUniqueNetId_Parms,NULL);
	return GetUniqueNetId_Parms.ReturnValue;
}

struct Engine_UpdateOverridePostProcessSettings_Parms
{
	struct FPostProcessSettings                        OverrideSettings;                                 		// 0x000000 (0x00CC)              
};

void ULocalPlayer::UpdateOverridePostProcessSettings(struct FPostProcessSettings OverrideSettings)
{
	static UFieldFunc* pFnUpdateOverridePostProcessSettings = NULL;
	if(!pFnUpdateOverridePostProcessSettings)
		pFnUpdateOverridePostProcessSettings = UObject::FindFunction("Function Engine.LocalPlayer.UpdateOverridePostProcessSettings");

	Engine_UpdateOverridePostProcessSettings_Parms UpdateOverridePostProcessSettings_Parms;
	memcpy(&UpdateOverridePostProcessSettings_Parms.OverrideSettings,&OverrideSettings,0xCC);
	ProcessEvent(pFnUpdateOverridePostProcessSettings,NULL,&UpdateOverridePostProcessSettings_Parms,NULL);
}

struct Engine_RemovePostProcessingChain_Parms
{
	int                                                InIndex;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ULocalPlayer::RemovePostProcessingChain(int InIndex)
{
	static UFieldFunc* pFnRemovePostProcessingChain = NULL;
	if(!pFnRemovePostProcessingChain)
		pFnRemovePostProcessingChain = UObject::FindFunction("Function Engine.LocalPlayer.RemovePostProcessingChain");

	Engine_RemovePostProcessingChain_Parms RemovePostProcessingChain_Parms;
	RemovePostProcessingChain_Parms.InIndex = InIndex;
	pFnRemovePostProcessingChain->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemovePostProcessingChain,NULL,&RemovePostProcessingChain_Parms,NULL);
	pFnRemovePostProcessingChain->FunctionFlags |= 0x400;
	return RemovePostProcessingChain_Parms.ReturnValue;
}

struct Engine_GetNickname_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
	//class UGameEngine*                                 TheEngine;                                        		// 0x00000C (0x0004)              
};

struct FString ULocalPlayer::GetNickname()
{
	static UFieldFunc* pFnGetNickname = NULL;
	if(!pFnGetNickname)
		pFnGetNickname = UObject::FindFunction("Function Engine.LocalPlayer.GetNickname");

	Engine_GetNickname_Parms GetNickname_Parms;
	ProcessEvent(pFnGetNickname,NULL,&GetNickname_Parms,NULL);
	return GetNickname_Parms.ReturnValue;
}

struct Engine_OverridePostProcessSettings_Parms
{
	struct FPostProcessSettings                        OverrideSettings;                                 		// 0x000000 (0x00CC)              
	double                                             StartBlendTime;                                   		// 0x0000CC (0x0008)              
};

void ULocalPlayer::OverridePostProcessSettings(struct FPostProcessSettings OverrideSettings,double StartBlendTime)
{
	static UFieldFunc* pFnOverridePostProcessSettings = NULL;
	if(!pFnOverridePostProcessSettings)
		pFnOverridePostProcessSettings = UObject::FindFunction("Function Engine.LocalPlayer.OverridePostProcessSettings");

	Engine_OverridePostProcessSettings_Parms OverridePostProcessSettings_Parms;
	memcpy(&OverridePostProcessSettings_Parms.OverrideSettings,&OverrideSettings,0xCC);
	OverridePostProcessSettings_Parms.StartBlendTime = StartBlendTime;
	ProcessEvent(pFnOverridePostProcessSettings,NULL,&OverridePostProcessSettings_Parms,NULL);
}

struct Engine_InsertPostProcessingChain_Parms
{
	class UPostProcessChain*                           InChain;                                          		// 0x000000 (0x0004)              
	int                                                InIndex;                                          		// 0x000004 (0x0004)              
	unsigned long                                      bInClone : 1;                                     		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool ULocalPlayer::InsertPostProcessingChain(class UPostProcessChain* InChain,int InIndex,bool bInClone)
{
	static UFieldFunc* pFnInsertPostProcessingChain = NULL;
	if(!pFnInsertPostProcessingChain)
		pFnInsertPostProcessingChain = UObject::FindFunction("Function Engine.LocalPlayer.InsertPostProcessingChain");

	Engine_InsertPostProcessingChain_Parms InsertPostProcessingChain_Parms;
	InsertPostProcessingChain_Parms.InChain = InChain;
	InsertPostProcessingChain_Parms.InIndex = InIndex;
	InsertPostProcessingChain_Parms.bInClone = bInClone;
	pFnInsertPostProcessingChain->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInsertPostProcessingChain,NULL,&InsertPostProcessingChain_Parms,NULL);
	pFnInsertPostProcessingChain->FunctionFlags |= 0x400;
	return InsertPostProcessingChain_Parms.ReturnValue;
}

struct Engine_ClearPostProcessSettingsOverride_Parms
{
};

void ULocalPlayer::ClearPostProcessSettingsOverride()
{
	static UFieldFunc* pFnClearPostProcessSettingsOverride = NULL;
	if(!pFnClearPostProcessSettingsOverride)
		pFnClearPostProcessSettingsOverride = UObject::FindFunction("Function Engine.LocalPlayer.ClearPostProcessSettingsOverride");

	Engine_ClearPostProcessSettingsOverride_Parms ClearPostProcessSettingsOverride_Parms;
	ProcessEvent(pFnClearPostProcessSettingsOverride,NULL,&ClearPostProcessSettingsOverride_Parms,NULL);
}

struct Engine_TouchPlayerPostProcessChain_Parms
{
};

void ULocalPlayer::TouchPlayerPostProcessChain()
{
	static UFieldFunc* pFnTouchPlayerPostProcessChain = NULL;
	if(!pFnTouchPlayerPostProcessChain)
		pFnTouchPlayerPostProcessChain = UObject::FindFunction("Function Engine.LocalPlayer.TouchPlayerPostProcessChain");

	Engine_TouchPlayerPostProcessChain_Parms TouchPlayerPostProcessChain_Parms;
	pFnTouchPlayerPostProcessChain->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTouchPlayerPostProcessChain,NULL,&TouchPlayerPostProcessChain_Parms,NULL);
	pFnTouchPlayerPostProcessChain->FunctionFlags |= 0x400;
}

struct Engine_SpawnPlayActor_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	struct FString                                     OutError;                                         		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool ULocalPlayer::SpawnPlayActor(struct FString URL,struct FString* OutError)
{
	static UFieldFunc* pFnSpawnPlayActor = NULL;
	if(!pFnSpawnPlayActor)
		pFnSpawnPlayActor = UObject::FindFunction("Function Engine.LocalPlayer.SpawnPlayActor");

	Engine_SpawnPlayActor_Parms SpawnPlayActor_Parms;
	memcpy(&SpawnPlayActor_Parms.URL,&URL,0xC);
	pFnSpawnPlayActor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSpawnPlayActor,NULL,&SpawnPlayActor_Parms,NULL);
	pFnSpawnPlayActor->FunctionFlags |= 0x400;
	if(OutError)
		memcpy(OutError,&SpawnPlayActor_Parms.OutError,0xC);
	return SpawnPlayActor_Parms.ReturnValue;
}

struct Engine_GetTranslationContext_Parms
{
	class UTranslationContext*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UTranslationContext* ULocalPlayer::GetTranslationContext()
{
	static UFieldFunc* pFnGetTranslationContext = NULL;
	if(!pFnGetTranslationContext)
		pFnGetTranslationContext = UObject::FindFunction("Function Engine.LocalPlayer.GetTranslationContext");

	Engine_GetTranslationContext_Parms GetTranslationContext_Parms;
	pFnGetTranslationContext->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTranslationContext,NULL,&GetTranslationContext_Parms,NULL);
	pFnGetTranslationContext->FunctionFlags |= 0x400;
	return GetTranslationContext_Parms.ReturnValue;
}

struct Engine_GetPostProcessChain_Parms
{
	int                                                InIndex;                                          		// 0x000000 (0x0004)              
	class UPostProcessChain*                           ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UPostProcessChain* ULocalPlayer::GetPostProcessChain(int InIndex)
{
	static UFieldFunc* pFnGetPostProcessChain = NULL;
	if(!pFnGetPostProcessChain)
		pFnGetPostProcessChain = UObject::FindFunction("Function Engine.LocalPlayer.GetPostProcessChain");

	Engine_GetPostProcessChain_Parms GetPostProcessChain_Parms;
	GetPostProcessChain_Parms.InIndex = InIndex;
	pFnGetPostProcessChain->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPostProcessChain,NULL,&GetPostProcessChain_Parms,NULL);
	pFnGetPostProcessChain->FunctionFlags |= 0x400;
	return GetPostProcessChain_Parms.ReturnValue;
}

struct Engine_RemoveAllPostProcessingChains_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool ULocalPlayer::RemoveAllPostProcessingChains()
{
	static UFieldFunc* pFnRemoveAllPostProcessingChains = NULL;
	if(!pFnRemoveAllPostProcessingChains)
		pFnRemoveAllPostProcessingChains = UObject::FindFunction("Function Engine.LocalPlayer.RemoveAllPostProcessingChains");

	Engine_RemoveAllPostProcessingChains_Parms RemoveAllPostProcessingChains_Parms;
	pFnRemoveAllPostProcessingChains->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveAllPostProcessingChains,NULL,&RemoveAllPostProcessingChains_Parms,NULL);
	pFnRemoveAllPostProcessingChains->FunctionFlags |= 0x400;
	return RemoveAllPostProcessingChains_Parms.ReturnValue;
}

struct Engine_FindPostProcessEffect_Parms
{
	struct FName                                       EffectName;                                       		// 0x000000 (0x0008)              
	class UPostProcessEffect*                          ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                Idx;                                              		// 0x00000C (0x0004)              
};

class UPostProcessEffect* UPostProcessChain::FindPostProcessEffect(struct FName EffectName)
{
	static UFieldFunc* pFnFindPostProcessEffect = NULL;
	if(!pFnFindPostProcessEffect)
		pFnFindPostProcessEffect = UObject::FindFunction("Function Engine.PostProcessChain.FindPostProcessEffect");

	Engine_FindPostProcessEffect_Parms FindPostProcessEffect_Parms;
	memcpy(&FindPostProcessEffect_Parms.EffectName,&EffectName,0x8);
	ProcessEvent(pFnFindPostProcessEffect,NULL,&FindPostProcessEffect_Parms,NULL);
	return FindPostProcessEffect_Parms.ReturnValue;
}

struct Engine_IsBlockedFor_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UReachSpec::IsBlockedFor(class APawn* P)
{
	static UFieldFunc* pFnIsBlockedFor = NULL;
	if(!pFnIsBlockedFor)
		pFnIsBlockedFor = UObject::FindFunction("Function Engine.ReachSpec.IsBlockedFor");

	Engine_IsBlockedFor_Parms IsBlockedFor_Parms;
	IsBlockedFor_Parms.P = P;
	ProcessEvent(pFnIsBlockedFor,NULL,&IsBlockedFor_Parms,NULL);
	return IsBlockedFor_Parms.ReturnValue;
}

struct Engine_CostFor_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UReachSpec::CostFor(class APawn* P)
{
	static UFieldFunc* pFnCostFor = NULL;
	if(!pFnCostFor)
		pFnCostFor = UObject::FindFunction("Function Engine.ReachSpec.CostFor");

	Engine_CostFor_Parms CostFor_Parms;
	CostFor_Parms.P = P;
	pFnCostFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCostFor,NULL,&CostFor_Parms,NULL);
	pFnCostFor->FunctionFlags |= 0x400;
	return CostFor_Parms.ReturnValue;
}

struct Engine_DisconnectAllEdges_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool URWTechNode::DisconnectAllEdges()
{
	static UFieldFunc* pFnDisconnectAllEdges = NULL;
	if(!pFnDisconnectAllEdges)
		pFnDisconnectAllEdges = UObject::FindFunction("Function Engine.RWTechNode.DisconnectAllEdges");

	Engine_DisconnectAllEdges_Parms DisconnectAllEdges_Parms;
	pFnDisconnectAllEdges->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisconnectAllEdges,NULL,&DisconnectAllEdges_Parms,NULL);
	pFnDisconnectAllEdges->FunctionFlags |= 0x400;
	return DisconnectAllEdges_Parms.ReturnValue;
}

struct Engine_UndoLastEdgeDisconnection_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool URWTechNode::UndoLastEdgeDisconnection()
{
	static UFieldFunc* pFnUndoLastEdgeDisconnection = NULL;
	if(!pFnUndoLastEdgeDisconnection)
		pFnUndoLastEdgeDisconnection = UObject::FindFunction("Function Engine.RWTechNode.UndoLastEdgeDisconnection");

	Engine_UndoLastEdgeDisconnection_Parms UndoLastEdgeDisconnection_Parms;
	pFnUndoLastEdgeDisconnection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUndoLastEdgeDisconnection,NULL,&UndoLastEdgeDisconnection_Parms,NULL);
	pFnUndoLastEdgeDisconnection->FunctionFlags |= 0x400;
	return UndoLastEdgeDisconnection_Parms.ReturnValue;
}

struct Engine_DisconnectAllEdgesExceptOne_Parms
{
	int                                                pr_nEdgeIDNotToDisconnect;                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool URWTechNode::DisconnectAllEdgesExceptOne(int pr_nEdgeIDNotToDisconnect)
{
	static UFieldFunc* pFnDisconnectAllEdgesExceptOne = NULL;
	if(!pFnDisconnectAllEdgesExceptOne)
		pFnDisconnectAllEdgesExceptOne = UObject::FindFunction("Function Engine.RWTechNode.DisconnectAllEdgesExceptOne");

	Engine_DisconnectAllEdgesExceptOne_Parms DisconnectAllEdgesExceptOne_Parms;
	DisconnectAllEdgesExceptOne_Parms.pr_nEdgeIDNotToDisconnect = pr_nEdgeIDNotToDisconnect;
	pFnDisconnectAllEdgesExceptOne->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisconnectAllEdgesExceptOne,NULL,&DisconnectAllEdgesExceptOne_Parms,NULL);
	pFnDisconnectAllEdgesExceptOne->FunctionFlags |= 0x400;
	return DisconnectAllEdgesExceptOne_Parms.ReturnValue;
}

struct Engine_Render2D_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
	struct FLinearColor                                Col;                                              		// 0x000004 (0x0010)              
};

void URWTechReachSpec::Render2D(class UCanvas* Canvas,struct FLinearColor Col)
{
	static UFieldFunc* pFnRender2D = NULL;
	if(!pFnRender2D)
		pFnRender2D = UObject::FindFunction("Function Engine.RWTechReachSpec.Render2D");

	Engine_Render2D_Parms Render2D_Parms;
	Render2D_Parms.Canvas = Canvas;
	memcpy(&Render2D_Parms.Col,&Col,0x10);
	pFnRender2D->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRender2D,NULL,&Render2D_Parms,NULL);
	pFnRender2D->FunctionFlags |= 0x400;
}

struct Engine_GetReferenceIndex_Parms
{
	class URWTechReachSpec*                            pr_pRefEdge;                                      		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int URWTechReachSpec::GetReferenceIndex(class URWTechReachSpec* pr_pRefEdge)
{
	static UFieldFunc* pFnGetReferenceIndex = NULL;
	if(!pFnGetReferenceIndex)
		pFnGetReferenceIndex = UObject::FindFunction("Function Engine.RWTechReachSpec.GetReferenceIndex");

	Engine_GetReferenceIndex_Parms GetReferenceIndex_Parms;
	GetReferenceIndex_Parms.pr_pRefEdge = pr_pRefEdge;
	pFnGetReferenceIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetReferenceIndex,NULL,&GetReferenceIndex_Parms,NULL);
	pFnGetReferenceIndex->FunctionFlags |= 0x400;
	return GetReferenceIndex_Parms.ReturnValue;
}

struct Engine_IsInAllowedPathList_Parms
{
	int                                                pr_nEdgeId;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool URWTechReachSpec::IsInAllowedPathList(int pr_nEdgeId)
{
	static UFieldFunc* pFnIsInAllowedPathList = NULL;
	if(!pFnIsInAllowedPathList)
		pFnIsInAllowedPathList = UObject::FindFunction("Function Engine.RWTechReachSpec.IsInAllowedPathList");

	Engine_IsInAllowedPathList_Parms IsInAllowedPathList_Parms;
	IsInAllowedPathList_Parms.pr_nEdgeId = pr_nEdgeId;
	pFnIsInAllowedPathList->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsInAllowedPathList,NULL,&IsInAllowedPathList_Parms,NULL);
	pFnIsInAllowedPathList->FunctionFlags |= 0x400;
	return IsInAllowedPathList_Parms.ReturnValue;
}

struct Engine_GetLaneCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int URWTechReachSpec::GetLaneCount()
{
	static UFieldFunc* pFnGetLaneCount = NULL;
	if(!pFnGetLaneCount)
		pFnGetLaneCount = UObject::FindFunction("Function Engine.RWTechReachSpec.GetLaneCount");

	Engine_GetLaneCount_Parms GetLaneCount_Parms;
	pFnGetLaneCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLaneCount,NULL,&GetLaneCount_Parms,NULL);
	pFnGetLaneCount->FunctionFlags |= 0x400;
	return GetLaneCount_Parms.ReturnValue;
}

struct Engine_GetMidpoint_Parms
{
	FVector3                                           pr_vMidpoint;                                     		// 0x000000 (0x000C)              
};

void URWTechReachSpec::GetMidpoint(FVector3* pr_vMidpoint)
{
	static UFieldFunc* pFnGetMidpoint = NULL;
	if(!pFnGetMidpoint)
		pFnGetMidpoint = UObject::FindFunction("Function Engine.RWTechReachSpec.GetMidpoint");

	Engine_GetMidpoint_Parms GetMidpoint_Parms;
	pFnGetMidpoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMidpoint,NULL,&GetMidpoint_Parms,NULL);
	pFnGetMidpoint->FunctionFlags |= 0x400;
	if(pr_vMidpoint)
		memcpy(pr_vMidpoint,&GetMidpoint_Parms.pr_vMidpoint,0xC);
}

struct Engine_GenerateDTNodes_Parms
{
	class URWTechNode*                                 pr_pStartDTNode;                                  		// 0x000000 (0x0004)              
	class URWTechReachSpec*                            pr_pNextPFEdge;                                   		// 0x000004 (0x0004)              
	TArray<class URWTechNode*>                         pr_aOutNodes;                                     		// 0x000008 (0x000C)              
	unsigned long                                      pr_bRemoveExistingNodes : 1;                      		// 0x000014 (0x0004) [0x00000001] 
};

void URWTechReachSpec::GenerateDTNodes(class URWTechNode* pr_pStartDTNode,class URWTechReachSpec* pr_pNextPFEdge,TArray<class URWTechNode*>* pr_aOutNodes,bool pr_bRemoveExistingNodes)
{
	static UFieldFunc* pFnGenerateDTNodes = NULL;
	if(!pFnGenerateDTNodes)
		pFnGenerateDTNodes = UObject::FindFunction("Function Engine.RWTechReachSpec.GenerateDTNodes");

	Engine_GenerateDTNodes_Parms GenerateDTNodes_Parms;
	GenerateDTNodes_Parms.pr_pStartDTNode = pr_pStartDTNode;
	GenerateDTNodes_Parms.pr_pNextPFEdge = pr_pNextPFEdge;
	GenerateDTNodes_Parms.pr_bRemoveExistingNodes = pr_bRemoveExistingNodes;
	pFnGenerateDTNodes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGenerateDTNodes,NULL,&GenerateDTNodes_Parms,NULL);
	pFnGenerateDTNodes->FunctionFlags |= 0x400;
	if(pr_aOutNodes)
		memcpy(pr_aOutNodes,&GenerateDTNodes_Parms.pr_aOutNodes,0xC);
}

struct Engine_GetOtherDirectionEdge_Parms
{
	class URWTechReachSpec*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class URWTechReachSpec* URWTechReachSpec::GetOtherDirectionEdge()
{
	static UFieldFunc* pFnGetOtherDirectionEdge = NULL;
	if(!pFnGetOtherDirectionEdge)
		pFnGetOtherDirectionEdge = UObject::FindFunction("Function Engine.RWTechReachSpec.GetOtherDirectionEdge");

	Engine_GetOtherDirectionEdge_Parms GetOtherDirectionEdge_Parms;
	pFnGetOtherDirectionEdge->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOtherDirectionEdge,NULL,&GetOtherDirectionEdge_Parms,NULL);
	pFnGetOtherDirectionEdge->FunctionFlags |= 0x400;
	return GetOtherDirectionEdge_Parms.ReturnValue;
}

struct Engine_GetEdgeIntersection_Parms
{
	class URWTechReachSpec*                            pCrossingEdge;                                    		// 0x000000 (0x0004)              
	float                                              U;                                                		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool URWTechReachSpec::GetEdgeIntersection(class URWTechReachSpec* pCrossingEdge,float* U)
{
	static UFieldFunc* pFnGetEdgeIntersection = NULL;
	if(!pFnGetEdgeIntersection)
		pFnGetEdgeIntersection = UObject::FindFunction("Function Engine.RWTechReachSpec.GetEdgeIntersection");

	Engine_GetEdgeIntersection_Parms GetEdgeIntersection_Parms;
	GetEdgeIntersection_Parms.pCrossingEdge = pCrossingEdge;
	pFnGetEdgeIntersection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetEdgeIntersection,NULL,&GetEdgeIntersection_Parms,NULL);
	pFnGetEdgeIntersection->FunctionFlags |= 0x400;
	if(U)
		*U = GetEdgeIntersection_Parms.U;
	return GetEdgeIntersection_Parms.ReturnValue;
}

struct Engine_FindEdgeInNextPaths_Parms
{
	class URWTechReachSpec*                            pEdge;                                            		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int URWTechReachSpec::FindEdgeInNextPaths(class URWTechReachSpec* pEdge)
{
	static UFieldFunc* pFnFindEdgeInNextPaths = NULL;
	if(!pFnFindEdgeInNextPaths)
		pFnFindEdgeInNextPaths = UObject::FindFunction("Function Engine.RWTechReachSpec.FindEdgeInNextPaths");

	Engine_FindEdgeInNextPaths_Parms FindEdgeInNextPaths_Parms;
	FindEdgeInNextPaths_Parms.pEdge = pEdge;
	pFnFindEdgeInNextPaths->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindEdgeInNextPaths,NULL,&FindEdgeInNextPaths_Parms,NULL);
	pFnFindEdgeInNextPaths->FunctionFlags |= 0x400;
	return FindEdgeInNextPaths_Parms.ReturnValue;
}

struct Engine_IsEdgeInNextPaths_Parms
{
	class URWTechReachSpec*                            pEdge;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool URWTechReachSpec::IsEdgeInNextPaths(class URWTechReachSpec* pEdge)
{
	static UFieldFunc* pFnIsEdgeInNextPaths = NULL;
	if(!pFnIsEdgeInNextPaths)
		pFnIsEdgeInNextPaths = UObject::FindFunction("Function Engine.RWTechReachSpec.IsEdgeInNextPaths");

	Engine_IsEdgeInNextPaths_Parms IsEdgeInNextPaths_Parms;
	IsEdgeInNextPaths_Parms.pEdge = pEdge;
	pFnIsEdgeInNextPaths->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsEdgeInNextPaths,NULL,&IsEdgeInNextPaths_Parms,NULL);
	pFnIsEdgeInNextPaths->FunctionFlags |= 0x400;
	return IsEdgeInNextPaths_Parms.ReturnValue;
}

struct Engine_IsVehicleTypeAllowed_Parms
{
	unsigned char                                      pr_type;                                          		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool URWTechReachSpec::IsVehicleTypeAllowed(unsigned char pr_type)
{
	static UFieldFunc* pFnIsVehicleTypeAllowed = NULL;
	if(!pFnIsVehicleTypeAllowed)
		pFnIsVehicleTypeAllowed = UObject::FindFunction("Function Engine.RWTechReachSpec.IsVehicleTypeAllowed");

	Engine_IsVehicleTypeAllowed_Parms IsVehicleTypeAllowed_Parms;
	IsVehicleTypeAllowed_Parms.pr_type = pr_type;
	pFnIsVehicleTypeAllowed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsVehicleTypeAllowed,NULL,&IsVehicleTypeAllowed_Parms,NULL);
	pFnIsVehicleTypeAllowed->FunctionFlags |= 0x400;
	return IsVehicleTypeAllowed_Parms.ReturnValue;
}

struct Engine_GetLocationAndDirection_Parms
{
	float                                              fDistance;                                        		// 0x000000 (0x0004)              
	FVector3                                           vLocation;                                        		// 0x000004 (0x000C)              
	FVector3                                           vDirection;                                       		// 0x000010 (0x000C)              
};

void URWTechReachSpec::GetLocationAndDirection(float fDistance,FVector3* vLocation,FVector3* vDirection)
{
	static UFieldFunc* pFnGetLocationAndDirection = NULL;
	if(!pFnGetLocationAndDirection)
		pFnGetLocationAndDirection = UObject::FindFunction("Function Engine.RWTechReachSpec.GetLocationAndDirection");

	Engine_GetLocationAndDirection_Parms GetLocationAndDirection_Parms;
	GetLocationAndDirection_Parms.fDistance = fDistance;
	pFnGetLocationAndDirection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLocationAndDirection,NULL,&GetLocationAndDirection_Parms,NULL);
	pFnGetLocationAndDirection->FunctionFlags |= 0x400;
	if(vLocation)
		memcpy(vLocation,&GetLocationAndDirection_Parms.vLocation,0xC);
	if(vDirection)
		memcpy(vDirection,&GetLocationAndDirection_Parms.vDirection,0xC);
}

struct Engine_Render_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
	DWORD                                              Col;                                              		// 0x000004 (0x0004)              
	float                                              fZOffset;                                         		// 0x000008 (0x0004)              
};

void URWTechReachSpec::Render(class UCanvas* Canvas,DWORD Col,float fZOffset)
{
	static UFieldFunc* pFnRender = NULL;
	if(!pFnRender)
		pFnRender = UObject::FindFunction("Function Engine.RWTechReachSpec.Render");

	Engine_Render_Parms Render_Parms;
	Render_Parms.Canvas = Canvas;
	memcpy(&Render_Parms.Col,&Col,0x4);
	Render_Parms.fZOffset = fZOffset;
	pFnRender->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRender,NULL,&Render_Parms,NULL);
	pFnRender->FunctionFlags |= 0x400;
}

struct Engine_Clear_Parms
{
};

void USavedMove::Clear()
{
	static UFieldFunc* pFnClear = NULL;
	if(!pFnClear)
		pFnClear = UObject::FindFunction("Function Engine.SavedMove.Clear");

	Engine_Clear_Parms Clear_Parms;
	pFnClear->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClear,NULL,&Clear_Parms,NULL);
	pFnClear->FunctionFlags |= 0x400;
}

struct Engine_GetStartLocation_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 USavedMove::GetStartLocation()
{
	static UFieldFunc* pFnGetStartLocation = NULL;
	if(!pFnGetStartLocation)
		pFnGetStartLocation = UObject::FindFunction("Function Engine.SavedMove.GetStartLocation");

	Engine_GetStartLocation_Parms GetStartLocation_Parms;
	pFnGetStartLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStartLocation,NULL,&GetStartLocation_Parms,NULL);
	pFnGetStartLocation->FunctionFlags |= 0x400;
	return GetStartLocation_Parms.ReturnValue;
}

struct Engine_SetInitialPosition_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void USavedMove::SetInitialPosition(class APawn* P)
{
	static UFieldFunc* pFnSetInitialPosition = NULL;
	if(!pFnSetInitialPosition)
		pFnSetInitialPosition = UObject::FindFunction("Function Engine.SavedMove.SetInitialPosition");

	Engine_SetInitialPosition_Parms SetInitialPosition_Parms;
	SetInitialPosition_Parms.P = P;
	pFnSetInitialPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetInitialPosition,NULL,&SetInitialPosition_Parms,NULL);
	pFnSetInitialPosition->FunctionFlags |= 0x400;
}

struct Engine_CompressedFlags_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char USavedMove::CompressedFlags()
{
	static UFieldFunc* pFnCompressedFlags = NULL;
	if(!pFnCompressedFlags)
		pFnCompressedFlags = UObject::FindFunction("Function Engine.SavedMove.CompressedFlags");

	Engine_CompressedFlags_Parms CompressedFlags_Parms;
	pFnCompressedFlags->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCompressedFlags,NULL,&CompressedFlags_Parms,NULL);
	pFnCompressedFlags->FunctionFlags |= 0x400;
	return CompressedFlags_Parms.ReturnValue;
}

struct Engine_GetStringProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	struct FString                                     Value;                                            		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool USettings::GetStringProperty(int PropertyId,struct FString* Value)
{
	static UFieldFunc* pFnGetStringProperty = NULL;
	if(!pFnGetStringProperty)
		pFnGetStringProperty = UObject::FindFunction("Function Engine.Settings.GetStringProperty");

	Engine_GetStringProperty_Parms GetStringProperty_Parms;
	GetStringProperty_Parms.PropertyId = PropertyId;
	pFnGetStringProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringProperty,NULL,&GetStringProperty_Parms,NULL);
	pFnGetStringProperty->FunctionFlags |= 0x400;
	if(Value)
		memcpy(Value,&GetStringProperty_Parms.Value,0xC);
	return GetStringProperty_Parms.ReturnValue;
}

struct Engine_GetSettingsDataBlob_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	TArray<unsigned char>                              OutBlob;                                          		// 0x00000C (0x000C)              
};

void USettings::GetSettingsDataBlob(struct FSettingsData* Data,TArray<unsigned char>* OutBlob)
{
	static UFieldFunc* pFnGetSettingsDataBlob = NULL;
	if(!pFnGetSettingsDataBlob)
		pFnGetSettingsDataBlob = UObject::FindFunction("Function Engine.Settings.GetSettingsDataBlob");

	Engine_GetSettingsDataBlob_Parms GetSettingsDataBlob_Parms;
	pFnGetSettingsDataBlob->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSettingsDataBlob,NULL,&GetSettingsDataBlob_Parms,NULL);
	pFnGetSettingsDataBlob->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&GetSettingsDataBlob_Parms.Data,0xC);
	if(OutBlob)
		memcpy(OutBlob,&GetSettingsDataBlob_Parms.OutBlob,0xC);
}

struct Engine_GetStringSettingValueNameByName_Parms
{
	struct FName                                       StringSettingName;                                		// 0x000000 (0x0008)              
	struct FName                                       ReturnValue;                                      		// 0x000008 (0x0008)              
};

struct FName USettings::GetStringSettingValueNameByName(struct FName StringSettingName)
{
	static UFieldFunc* pFnGetStringSettingValueNameByName = NULL;
	if(!pFnGetStringSettingValueNameByName)
		pFnGetStringSettingValueNameByName = UObject::FindFunction("Function Engine.Settings.GetStringSettingValueNameByName");

	Engine_GetStringSettingValueNameByName_Parms GetStringSettingValueNameByName_Parms;
	memcpy(&GetStringSettingValueNameByName_Parms.StringSettingName,&StringSettingName,0x8);
	pFnGetStringSettingValueNameByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingValueNameByName,NULL,&GetStringSettingValueNameByName_Parms,NULL);
	pFnGetStringSettingValueNameByName->FunctionFlags |= 0x400;
	return GetStringSettingValueNameByName_Parms.ReturnValue;
}

struct Engine_SetStringSettingValueFromStringByName_Parms
{
	struct FName                                       StringSettingName;                                		// 0x000000 (0x0008)              
	struct FString                                     NewValue;                                         		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool USettings::SetStringSettingValueFromStringByName(struct FName StringSettingName,struct FString* NewValue)
{
	static UFieldFunc* pFnSetStringSettingValueFromStringByName = NULL;
	if(!pFnSetStringSettingValueFromStringByName)
		pFnSetStringSettingValueFromStringByName = UObject::FindFunction("Function Engine.Settings.SetStringSettingValueFromStringByName");

	Engine_SetStringSettingValueFromStringByName_Parms SetStringSettingValueFromStringByName_Parms;
	memcpy(&SetStringSettingValueFromStringByName_Parms.StringSettingName,&StringSettingName,0x8);
	pFnSetStringSettingValueFromStringByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStringSettingValueFromStringByName,NULL,&SetStringSettingValueFromStringByName_Parms,NULL);
	pFnSetStringSettingValueFromStringByName->FunctionFlags |= 0x400;
	if(NewValue)
		memcpy(NewValue,&SetStringSettingValueFromStringByName_Parms.NewValue,0xC);
	return SetStringSettingValueFromStringByName_Parms.ReturnValue;
}

struct Engine_GetQoSAdvertisedProperties_Parms
{
	TArray<struct FSettingsProperty>                   QoSProps;                                         		// 0x000000 (0x000C)              
};

void USettings::GetQoSAdvertisedProperties(TArray<struct FSettingsProperty>* QoSProps)
{
	static UFieldFunc* pFnGetQoSAdvertisedProperties = NULL;
	if(!pFnGetQoSAdvertisedProperties)
		pFnGetQoSAdvertisedProperties = UObject::FindFunction("Function Engine.Settings.GetQoSAdvertisedProperties");

	Engine_GetQoSAdvertisedProperties_Parms GetQoSAdvertisedProperties_Parms;
	pFnGetQoSAdvertisedProperties->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetQoSAdvertisedProperties,NULL,&GetQoSAdvertisedProperties_Parms,NULL);
	pFnGetQoSAdvertisedProperties->FunctionFlags |= 0x400;
	if(QoSProps)
		memcpy(QoSProps,&GetQoSAdvertisedProperties_Parms.QoSProps,0xC);
}

struct Engine_GetPropertyType_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char USettings::GetPropertyType(int PropertyId)
{
	static UFieldFunc* pFnGetPropertyType = NULL;
	if(!pFnGetPropertyType)
		pFnGetPropertyType = UObject::FindFunction("Function Engine.Settings.GetPropertyType");

	Engine_GetPropertyType_Parms GetPropertyType_Parms;
	GetPropertyType_Parms.PropertyId = PropertyId;
	pFnGetPropertyType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyType,NULL,&GetPropertyType_Parms,NULL);
	pFnGetPropertyType->FunctionFlags |= 0x400;
	return GetPropertyType_Parms.ReturnValue;
}

struct Engine_SetSettingsDataFloat_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	float                                              InFloat;                                          		// 0x00000C (0x0004)              
};

void USettings::SetSettingsDataFloat(struct FSettingsData* Data,float InFloat)
{
	static UFieldFunc* pFnSetSettingsDataFloat = NULL;
	if(!pFnSetSettingsDataFloat)
		pFnSetSettingsDataFloat = UObject::FindFunction("Function Engine.Settings.SetSettingsDataFloat");

	Engine_SetSettingsDataFloat_Parms SetSettingsDataFloat_Parms;
	SetSettingsDataFloat_Parms.InFloat = InFloat;
	pFnSetSettingsDataFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSettingsDataFloat,NULL,&SetSettingsDataFloat_Parms,NULL);
	pFnSetSettingsDataFloat->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&SetSettingsDataFloat_Parms.Data,0xC);
}

struct Engine_GetSettingsDataInt_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int USettings::GetSettingsDataInt(struct FSettingsData* Data)
{
	static UFieldFunc* pFnGetSettingsDataInt = NULL;
	if(!pFnGetSettingsDataInt)
		pFnGetSettingsDataInt = UObject::FindFunction("Function Engine.Settings.GetSettingsDataInt");

	Engine_GetSettingsDataInt_Parms GetSettingsDataInt_Parms;
	pFnGetSettingsDataInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSettingsDataInt,NULL,&GetSettingsDataInt_Parms,NULL);
	pFnGetSettingsDataInt->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&GetSettingsDataInt_Parms.Data,0xC);
	return GetSettingsDataInt_Parms.ReturnValue;
}

struct Engine_GetStringSettingName_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName USettings::GetStringSettingName(int StringSettingId)
{
	static UFieldFunc* pFnGetStringSettingName = NULL;
	if(!pFnGetStringSettingName)
		pFnGetStringSettingName = UObject::FindFunction("Function Engine.Settings.GetStringSettingName");

	Engine_GetStringSettingName_Parms GetStringSettingName_Parms;
	GetStringSettingName_Parms.StringSettingId = StringSettingId;
	pFnGetStringSettingName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingName,NULL,&GetStringSettingName_Parms,NULL);
	pFnGetStringSettingName->FunctionFlags |= 0x400;
	return GetStringSettingName_Parms.ReturnValue;
}

struct Engine_GetPropertyValueId_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	int                                                ValueId;                                          		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::GetPropertyValueId(int PropertyId,int* ValueId)
{
	static UFieldFunc* pFnGetPropertyValueId = NULL;
	if(!pFnGetPropertyValueId)
		pFnGetPropertyValueId = UObject::FindFunction("Function Engine.Settings.GetPropertyValueId");

	Engine_GetPropertyValueId_Parms GetPropertyValueId_Parms;
	GetPropertyValueId_Parms.PropertyId = PropertyId;
	pFnGetPropertyValueId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyValueId,NULL,&GetPropertyValueId_Parms,NULL);
	pFnGetPropertyValueId->FunctionFlags |= 0x400;
	if(ValueId)
		*ValueId = GetPropertyValueId_Parms.ValueId;
	return GetPropertyValueId_Parms.ReturnValue;
}

struct Engine_HasProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USettings::HasProperty(int PropertyId)
{
	static UFieldFunc* pFnHasProperty = NULL;
	if(!pFnHasProperty)
		pFnHasProperty = UObject::FindFunction("Function Engine.Settings.HasProperty");

	Engine_HasProperty_Parms HasProperty_Parms;
	HasProperty_Parms.PropertyId = PropertyId;
	pFnHasProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasProperty,NULL,&HasProperty_Parms,NULL);
	pFnHasProperty->FunctionFlags |= 0x400;
	return HasProperty_Parms.ReturnValue;
}

struct Engine_GetStringSettingValueNames_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	TArray<struct FIdToStringMapping>                  Values;                                           		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool USettings::GetStringSettingValueNames(int StringSettingId,TArray<struct FIdToStringMapping>* Values)
{
	static UFieldFunc* pFnGetStringSettingValueNames = NULL;
	if(!pFnGetStringSettingValueNames)
		pFnGetStringSettingValueNames = UObject::FindFunction("Function Engine.Settings.GetStringSettingValueNames");

	Engine_GetStringSettingValueNames_Parms GetStringSettingValueNames_Parms;
	GetStringSettingValueNames_Parms.StringSettingId = StringSettingId;
	pFnGetStringSettingValueNames->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingValueNames,NULL,&GetStringSettingValueNames_Parms,NULL);
	pFnGetStringSettingValueNames->FunctionFlags |= 0x400;
	if(Values)
		memcpy(Values,&GetStringSettingValueNames_Parms.Values,0xC);
	return GetStringSettingValueNames_Parms.ReturnValue;
}

struct Engine_GetPropertyName_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName USettings::GetPropertyName(int PropertyId)
{
	static UFieldFunc* pFnGetPropertyName = NULL;
	if(!pFnGetPropertyName)
		pFnGetPropertyName = UObject::FindFunction("Function Engine.Settings.GetPropertyName");

	Engine_GetPropertyName_Parms GetPropertyName_Parms;
	GetPropertyName_Parms.PropertyId = PropertyId;
	pFnGetPropertyName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyName,NULL,&GetPropertyName_Parms,NULL);
	pFnGetPropertyName->FunctionFlags |= 0x400;
	return GetPropertyName_Parms.ReturnValue;
}

struct Engine_AppendContextsToURL_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void USettings::AppendContextsToURL(struct FString* URL)
{
	static UFieldFunc* pFnAppendContextsToURL = NULL;
	if(!pFnAppendContextsToURL)
		pFnAppendContextsToURL = UObject::FindFunction("Function Engine.Settings.AppendContextsToURL");

	Engine_AppendContextsToURL_Parms AppendContextsToURL_Parms;
	pFnAppendContextsToURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAppendContextsToURL,NULL,&AppendContextsToURL_Parms,NULL);
	pFnAppendContextsToURL->FunctionFlags |= 0x400;
	if(URL)
		memcpy(URL,&AppendContextsToURL_Parms.URL,0xC);
}

struct Engine_AppendPropertiesToURL_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void USettings::AppendPropertiesToURL(struct FString* URL)
{
	static UFieldFunc* pFnAppendPropertiesToURL = NULL;
	if(!pFnAppendPropertiesToURL)
		pFnAppendPropertiesToURL = UObject::FindFunction("Function Engine.Settings.AppendPropertiesToURL");

	Engine_AppendPropertiesToURL_Parms AppendPropertiesToURL_Parms;
	pFnAppendPropertiesToURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAppendPropertiesToURL,NULL,&AppendPropertiesToURL_Parms,NULL);
	pFnAppendPropertiesToURL->FunctionFlags |= 0x400;
	if(URL)
		memcpy(URL,&AppendPropertiesToURL_Parms.URL,0xC);
}

struct Engine_GetStringSettingValueByName_Parms
{
	struct FName                                       StringSettingName;                                		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USettings::GetStringSettingValueByName(struct FName StringSettingName,int* ValueIndex)
{
	static UFieldFunc* pFnGetStringSettingValueByName = NULL;
	if(!pFnGetStringSettingValueByName)
		pFnGetStringSettingValueByName = UObject::FindFunction("Function Engine.Settings.GetStringSettingValueByName");

	Engine_GetStringSettingValueByName_Parms GetStringSettingValueByName_Parms;
	memcpy(&GetStringSettingValueByName_Parms.StringSettingName,&StringSettingName,0x8);
	pFnGetStringSettingValueByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingValueByName,NULL,&GetStringSettingValueByName_Parms,NULL);
	pFnGetStringSettingValueByName->FunctionFlags |= 0x400;
	if(ValueIndex)
		*ValueIndex = GetStringSettingValueByName_Parms.ValueIndex;
	return GetStringSettingValueByName_Parms.ReturnValue;
}

struct Engine_GetStringSettingColumnHeader_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString USettings::GetStringSettingColumnHeader(int StringSettingId)
{
	static UFieldFunc* pFnGetStringSettingColumnHeader = NULL;
	if(!pFnGetStringSettingColumnHeader)
		pFnGetStringSettingColumnHeader = UObject::FindFunction("Function Engine.Settings.GetStringSettingColumnHeader");

	Engine_GetStringSettingColumnHeader_Parms GetStringSettingColumnHeader_Parms;
	GetStringSettingColumnHeader_Parms.StringSettingId = StringSettingId;
	pFnGetStringSettingColumnHeader->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingColumnHeader,NULL,&GetStringSettingColumnHeader_Parms,NULL);
	pFnGetStringSettingColumnHeader->FunctionFlags |= 0x400;
	return GetStringSettingColumnHeader_Parms.ReturnValue;
}

struct Engine_UpdateFromURL_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	class AGameInfo*                                   Game;                                             		// 0x00000C (0x0004)              
};

void USettings::UpdateFromURL(struct FString* URL,class AGameInfo* Game)
{
	static UFieldFunc* pFnUpdateFromURL = NULL;
	if(!pFnUpdateFromURL)
		pFnUpdateFromURL = UObject::FindFunction("Function Engine.Settings.UpdateFromURL");

	Engine_UpdateFromURL_Parms UpdateFromURL_Parms;
	UpdateFromURL_Parms.Game = Game;
	pFnUpdateFromURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateFromURL,NULL,&UpdateFromURL_Parms,NULL);
	pFnUpdateFromURL->FunctionFlags |= 0x400;
	if(URL)
		memcpy(URL,&UpdateFromURL_Parms.URL,0xC);
}

struct Engine_BuildURL_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void USettings::BuildURL(struct FString* URL)
{
	static UFieldFunc* pFnBuildURL = NULL;
	if(!pFnBuildURL)
		pFnBuildURL = UObject::FindFunction("Function Engine.Settings.BuildURL");

	Engine_BuildURL_Parms BuildURL_Parms;
	pFnBuildURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBuildURL,NULL,&BuildURL_Parms,NULL);
	pFnBuildURL->FunctionFlags |= 0x400;
	if(URL)
		memcpy(URL,&BuildURL_Parms.URL,0xC);
}

struct Engine_GetPropertyAsStringByName_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString USettings::GetPropertyAsStringByName(struct FName PropertyName)
{
	static UFieldFunc* pFnGetPropertyAsStringByName = NULL;
	if(!pFnGetPropertyAsStringByName)
		pFnGetPropertyAsStringByName = UObject::FindFunction("Function Engine.Settings.GetPropertyAsStringByName");

	Engine_GetPropertyAsStringByName_Parms GetPropertyAsStringByName_Parms;
	memcpy(&GetPropertyAsStringByName_Parms.PropertyName,&PropertyName,0x8);
	pFnGetPropertyAsStringByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyAsStringByName,NULL,&GetPropertyAsStringByName_Parms,NULL);
	pFnGetPropertyAsStringByName->FunctionFlags |= 0x400;
	return GetPropertyAsStringByName_Parms.ReturnValue;
}

struct Engine_GetSettingsDataFloat_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float USettings::GetSettingsDataFloat(struct FSettingsData* Data)
{
	static UFieldFunc* pFnGetSettingsDataFloat = NULL;
	if(!pFnGetSettingsDataFloat)
		pFnGetSettingsDataFloat = UObject::FindFunction("Function Engine.Settings.GetSettingsDataFloat");

	Engine_GetSettingsDataFloat_Parms GetSettingsDataFloat_Parms;
	pFnGetSettingsDataFloat->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSettingsDataFloat,NULL,&GetSettingsDataFloat_Parms,NULL);
	pFnGetSettingsDataFloat->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&GetSettingsDataFloat_Parms.Data,0xC);
	return GetSettingsDataFloat_Parms.ReturnValue;
}

struct Engine_SetSettingsDataDateTime_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	int                                                InInt1;                                           		// 0x00000C (0x0004)              
	int                                                InInt2;                                           		// 0x000010 (0x0004)              
};

void USettings::SetSettingsDataDateTime(struct FSettingsData* Data,int InInt1,int InInt2)
{
	static UFieldFunc* pFnSetSettingsDataDateTime = NULL;
	if(!pFnSetSettingsDataDateTime)
		pFnSetSettingsDataDateTime = UObject::FindFunction("Function Engine.Settings.SetSettingsDataDateTime");

	Engine_SetSettingsDataDateTime_Parms SetSettingsDataDateTime_Parms;
	SetSettingsDataDateTime_Parms.InInt1 = InInt1;
	SetSettingsDataDateTime_Parms.InInt2 = InInt2;
	pFnSetSettingsDataDateTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSettingsDataDateTime,NULL,&SetSettingsDataDateTime_Parms,NULL);
	pFnSetSettingsDataDateTime->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&SetSettingsDataDateTime_Parms.Data,0xC);
}

struct Engine_HasStringSetting_Parms
{
	int                                                SettingId;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USettings::HasStringSetting(int SettingId)
{
	static UFieldFunc* pFnHasStringSetting = NULL;
	if(!pFnHasStringSetting)
		pFnHasStringSetting = UObject::FindFunction("Function Engine.Settings.HasStringSetting");

	Engine_HasStringSetting_Parms HasStringSetting_Parms;
	HasStringSetting_Parms.SettingId = SettingId;
	pFnHasStringSetting->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasStringSetting,NULL,&HasStringSetting_Parms,NULL);
	pFnHasStringSetting->FunctionFlags |= 0x400;
	return HasStringSetting_Parms.ReturnValue;
}

struct Engine_GetFloatProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	float                                              Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::GetFloatProperty(int PropertyId,float* Value)
{
	static UFieldFunc* pFnGetFloatProperty = NULL;
	if(!pFnGetFloatProperty)
		pFnGetFloatProperty = UObject::FindFunction("Function Engine.Settings.GetFloatProperty");

	Engine_GetFloatProperty_Parms GetFloatProperty_Parms;
	GetFloatProperty_Parms.PropertyId = PropertyId;
	pFnGetFloatProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFloatProperty,NULL,&GetFloatProperty_Parms,NULL);
	pFnGetFloatProperty->FunctionFlags |= 0x400;
	if(Value)
		*Value = GetFloatProperty_Parms.Value;
	return GetFloatProperty_Parms.ReturnValue;
}

struct Engine_SetSettingsData_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	struct FSettingsData                               Data2Copy;                                        		// 0x00000C (0x000C)              
};

void USettings::SetSettingsData(struct FSettingsData* Data,struct FSettingsData* Data2Copy)
{
	static UFieldFunc* pFnSetSettingsData = NULL;
	if(!pFnSetSettingsData)
		pFnSetSettingsData = UObject::FindFunction("Function Engine.Settings.SetSettingsData");

	Engine_SetSettingsData_Parms SetSettingsData_Parms;
	pFnSetSettingsData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSettingsData,NULL,&SetSettingsData_Parms,NULL);
	pFnSetSettingsData->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&SetSettingsData_Parms.Data,0xC);
	if(Data2Copy)
		memcpy(Data2Copy,&SetSettingsData_Parms.Data2Copy,0xC);
}

struct Engine_GetStringSettingValue_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	int                                                ValueIndex;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::GetStringSettingValue(int StringSettingId,int* ValueIndex)
{
	static UFieldFunc* pFnGetStringSettingValue = NULL;
	if(!pFnGetStringSettingValue)
		pFnGetStringSettingValue = UObject::FindFunction("Function Engine.Settings.GetStringSettingValue");

	Engine_GetStringSettingValue_Parms GetStringSettingValue_Parms;
	GetStringSettingValue_Parms.StringSettingId = StringSettingId;
	pFnGetStringSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingValue,NULL,&GetStringSettingValue_Parms,NULL);
	pFnGetStringSettingValue->FunctionFlags |= 0x400;
	if(ValueIndex)
		*ValueIndex = GetStringSettingValue_Parms.ValueIndex;
	return GetStringSettingValue_Parms.ReturnValue;
}

struct Engine_AppendDataBindingsToURL_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void USettings::AppendDataBindingsToURL(struct FString* URL)
{
	static UFieldFunc* pFnAppendDataBindingsToURL = NULL;
	if(!pFnAppendDataBindingsToURL)
		pFnAppendDataBindingsToURL = UObject::FindFunction("Function Engine.Settings.AppendDataBindingsToURL");

	Engine_AppendDataBindingsToURL_Parms AppendDataBindingsToURL_Parms;
	pFnAppendDataBindingsToURL->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAppendDataBindingsToURL,NULL,&AppendDataBindingsToURL_Parms,NULL);
	pFnAppendDataBindingsToURL->FunctionFlags |= 0x400;
	if(URL)
		memcpy(URL,&AppendDataBindingsToURL_Parms.URL,0xC);
}

struct Engine_SetPropertyFromStringByName_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	struct FString                                     NewValue;                                         		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool USettings::SetPropertyFromStringByName(struct FName PropertyName,struct FString* NewValue)
{
	static UFieldFunc* pFnSetPropertyFromStringByName = NULL;
	if(!pFnSetPropertyFromStringByName)
		pFnSetPropertyFromStringByName = UObject::FindFunction("Function Engine.Settings.SetPropertyFromStringByName");

	Engine_SetPropertyFromStringByName_Parms SetPropertyFromStringByName_Parms;
	memcpy(&SetPropertyFromStringByName_Parms.PropertyName,&PropertyName,0x8);
	pFnSetPropertyFromStringByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPropertyFromStringByName,NULL,&SetPropertyFromStringByName_Parms,NULL);
	pFnSetPropertyFromStringByName->FunctionFlags |= 0x400;
	if(NewValue)
		memcpy(NewValue,&SetPropertyFromStringByName_Parms.NewValue,0xC);
	return SetPropertyFromStringByName_Parms.ReturnValue;
}

struct Engine_GetQoSAdvertisedStringSettings_Parms
{
	TArray<struct FLocalizedStringSetting>             QoSSettings;                                      		// 0x000000 (0x000C)              
};

void USettings::GetQoSAdvertisedStringSettings(TArray<struct FLocalizedStringSetting>* QoSSettings)
{
	static UFieldFunc* pFnGetQoSAdvertisedStringSettings = NULL;
	if(!pFnGetQoSAdvertisedStringSettings)
		pFnGetQoSAdvertisedStringSettings = UObject::FindFunction("Function Engine.Settings.GetQoSAdvertisedStringSettings");

	Engine_GetQoSAdvertisedStringSettings_Parms GetQoSAdvertisedStringSettings_Parms;
	pFnGetQoSAdvertisedStringSettings->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetQoSAdvertisedStringSettings,NULL,&GetQoSAdvertisedStringSettings_Parms,NULL);
	pFnGetQoSAdvertisedStringSettings->FunctionFlags |= 0x400;
	if(QoSSettings)
		memcpy(QoSSettings,&GetQoSAdvertisedStringSettings_Parms.QoSSettings,0xC);
}

struct Engine_GetIntProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	int                                                Value;                                            		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::GetIntProperty(int PropertyId,int* Value)
{
	static UFieldFunc* pFnGetIntProperty = NULL;
	if(!pFnGetIntProperty)
		pFnGetIntProperty = UObject::FindFunction("Function Engine.Settings.GetIntProperty");

	Engine_GetIntProperty_Parms GetIntProperty_Parms;
	GetIntProperty_Parms.PropertyId = PropertyId;
	pFnGetIntProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetIntProperty,NULL,&GetIntProperty_Parms,NULL);
	pFnGetIntProperty->FunctionFlags |= 0x400;
	if(Value)
		*Value = GetIntProperty_Parms.Value;
	return GetIntProperty_Parms.ReturnValue;
}

struct Engine_SetStringSettingValueByName_Parms
{
	struct FName                                       StringSettingName;                                		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	unsigned long                                      bShouldAutoAdd : 1;                               		// 0x00000C (0x0004) [0x00000001] 
};

void USettings::SetStringSettingValueByName(struct FName StringSettingName,int ValueIndex,bool bShouldAutoAdd)
{
	static UFieldFunc* pFnSetStringSettingValueByName = NULL;
	if(!pFnSetStringSettingValueByName)
		pFnSetStringSettingValueByName = UObject::FindFunction("Function Engine.Settings.SetStringSettingValueByName");

	Engine_SetStringSettingValueByName_Parms SetStringSettingValueByName_Parms;
	memcpy(&SetStringSettingValueByName_Parms.StringSettingName,&StringSettingName,0x8);
	SetStringSettingValueByName_Parms.ValueIndex = ValueIndex;
	SetStringSettingValueByName_Parms.bShouldAutoAdd = bShouldAutoAdd;
	pFnSetStringSettingValueByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStringSettingValueByName,NULL,&SetStringSettingValueByName_Parms,NULL);
	pFnSetStringSettingValueByName->FunctionFlags |= 0x400;
}

struct Engine_SetSettingsDataBlob_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	TArray<unsigned char>                              InBlob;                                           		// 0x00000C (0x000C)              
};

void USettings::SetSettingsDataBlob(struct FSettingsData* Data,TArray<unsigned char>* InBlob)
{
	static UFieldFunc* pFnSetSettingsDataBlob = NULL;
	if(!pFnSetSettingsDataBlob)
		pFnSetSettingsDataBlob = UObject::FindFunction("Function Engine.Settings.SetSettingsDataBlob");

	Engine_SetSettingsDataBlob_Parms SetSettingsDataBlob_Parms;
	pFnSetSettingsDataBlob->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSettingsDataBlob,NULL,&SetSettingsDataBlob_Parms,NULL);
	pFnSetSettingsDataBlob->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&SetSettingsDataBlob_Parms.Data,0xC);
	if(InBlob)
		memcpy(InBlob,&SetSettingsDataBlob_Parms.InBlob,0xC);
}

struct Engine_IsWildcardStringSetting_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USettings::IsWildcardStringSetting(int StringSettingId)
{
	static UFieldFunc* pFnIsWildcardStringSetting = NULL;
	if(!pFnIsWildcardStringSetting)
		pFnIsWildcardStringSetting = UObject::FindFunction("Function Engine.Settings.IsWildcardStringSetting");

	Engine_IsWildcardStringSetting_Parms IsWildcardStringSetting_Parms;
	IsWildcardStringSetting_Parms.StringSettingId = StringSettingId;
	pFnIsWildcardStringSetting->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsWildcardStringSetting,NULL,&IsWildcardStringSetting_Parms,NULL);
	pFnIsWildcardStringSetting->FunctionFlags |= 0x400;
	return IsWildcardStringSetting_Parms.ReturnValue;
}

struct Engine_GetPropertyId_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	int                                                PropertyId;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USettings::GetPropertyId(struct FName PropertyName,int* PropertyId)
{
	static UFieldFunc* pFnGetPropertyId = NULL;
	if(!pFnGetPropertyId)
		pFnGetPropertyId = UObject::FindFunction("Function Engine.Settings.GetPropertyId");

	Engine_GetPropertyId_Parms GetPropertyId_Parms;
	memcpy(&GetPropertyId_Parms.PropertyName,&PropertyName,0x8);
	pFnGetPropertyId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyId,NULL,&GetPropertyId_Parms,NULL);
	pFnGetPropertyId->FunctionFlags |= 0x400;
	if(PropertyId)
		*PropertyId = GetPropertyId_Parms.PropertyId;
	return GetPropertyId_Parms.ReturnValue;
}

struct Engine_UpdateProperties_Parms
{
	TArray<struct FSettingsProperty>                   Props;                                            		// 0x000000 (0x000C)              
	unsigned long                                      bShouldAddIfMissing : 1;                          		// 0x00000C (0x0004) [0x00000001] 
};

void USettings::UpdateProperties(TArray<struct FSettingsProperty>* Props,bool bShouldAddIfMissing)
{
	static UFieldFunc* pFnUpdateProperties = NULL;
	if(!pFnUpdateProperties)
		pFnUpdateProperties = UObject::FindFunction("Function Engine.Settings.UpdateProperties");

	Engine_UpdateProperties_Parms UpdateProperties_Parms;
	UpdateProperties_Parms.bShouldAddIfMissing = bShouldAddIfMissing;
	pFnUpdateProperties->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateProperties,NULL,&UpdateProperties_Parms,NULL);
	pFnUpdateProperties->FunctionFlags |= 0x400;
	if(Props)
		memcpy(Props,&UpdateProperties_Parms.Props,0xC);
}

struct Engine_SetStringSettingValue_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	int                                                ValueIndex;                                       		// 0x000004 (0x0004)              
	unsigned long                                      bShouldAutoAdd : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void USettings::SetStringSettingValue(int StringSettingId,int ValueIndex,bool bShouldAutoAdd)
{
	static UFieldFunc* pFnSetStringSettingValue = NULL;
	if(!pFnSetStringSettingValue)
		pFnSetStringSettingValue = UObject::FindFunction("Function Engine.Settings.SetStringSettingValue");

	Engine_SetStringSettingValue_Parms SetStringSettingValue_Parms;
	SetStringSettingValue_Parms.StringSettingId = StringSettingId;
	SetStringSettingValue_Parms.ValueIndex = ValueIndex;
	SetStringSettingValue_Parms.bShouldAutoAdd = bShouldAutoAdd;
	pFnSetStringSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStringSettingValue,NULL,&SetStringSettingValue_Parms,NULL);
	pFnSetStringSettingValue->FunctionFlags |= 0x400;
}

struct Engine_SetFloatProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	float                                              Value;                                            		// 0x000004 (0x0004)              
};

void USettings::SetFloatProperty(int PropertyId,float Value)
{
	static UFieldFunc* pFnSetFloatProperty = NULL;
	if(!pFnSetFloatProperty)
		pFnSetFloatProperty = UObject::FindFunction("Function Engine.Settings.SetFloatProperty");

	Engine_SetFloatProperty_Parms SetFloatProperty_Parms;
	SetFloatProperty_Parms.PropertyId = PropertyId;
	SetFloatProperty_Parms.Value = Value;
	pFnSetFloatProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFloatProperty,NULL,&SetFloatProperty_Parms,NULL);
	pFnSetFloatProperty->FunctionFlags |= 0x400;
}

struct Engine_GetRangedPropertyValue_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	float                                              OutValue;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::GetRangedPropertyValue(int PropertyId,float* OutValue)
{
	static UFieldFunc* pFnGetRangedPropertyValue = NULL;
	if(!pFnGetRangedPropertyValue)
		pFnGetRangedPropertyValue = UObject::FindFunction("Function Engine.Settings.GetRangedPropertyValue");

	Engine_GetRangedPropertyValue_Parms GetRangedPropertyValue_Parms;
	GetRangedPropertyValue_Parms.PropertyId = PropertyId;
	pFnGetRangedPropertyValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRangedPropertyValue,NULL,&GetRangedPropertyValue_Parms,NULL);
	pFnGetRangedPropertyValue->FunctionFlags |= 0x400;
	if(OutValue)
		*OutValue = GetRangedPropertyValue_Parms.OutValue;
	return GetRangedPropertyValue_Parms.ReturnValue;
}

struct Engine_EmptySettingsData_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
};

void USettings::EmptySettingsData(struct FSettingsData* Data)
{
	static UFieldFunc* pFnEmptySettingsData = NULL;
	if(!pFnEmptySettingsData)
		pFnEmptySettingsData = UObject::FindFunction("Function Engine.Settings.EmptySettingsData");

	Engine_EmptySettingsData_Parms EmptySettingsData_Parms;
	pFnEmptySettingsData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEmptySettingsData,NULL,&EmptySettingsData_Parms,NULL);
	pFnEmptySettingsData->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&EmptySettingsData_Parms.Data,0xC);
}

struct Engine_GetPropertyMappingType_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	unsigned char                                      OutType;                                          		// 0x000004 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::GetPropertyMappingType(int PropertyId,unsigned char* OutType)
{
	static UFieldFunc* pFnGetPropertyMappingType = NULL;
	if(!pFnGetPropertyMappingType)
		pFnGetPropertyMappingType = UObject::FindFunction("Function Engine.Settings.GetPropertyMappingType");

	Engine_GetPropertyMappingType_Parms GetPropertyMappingType_Parms;
	GetPropertyMappingType_Parms.PropertyId = PropertyId;
	pFnGetPropertyMappingType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyMappingType,NULL,&GetPropertyMappingType_Parms,NULL);
	pFnGetPropertyMappingType->FunctionFlags |= 0x400;
	if(OutType)
		*OutType = GetPropertyMappingType_Parms.OutType;
	return GetPropertyMappingType_Parms.ReturnValue;
}

struct Engine_GetSettingsDataDateTime_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	int                                                OutInt1;                                          		// 0x00000C (0x0004)              
	int                                                OutInt2;                                          		// 0x000010 (0x0004)              
};

void USettings::GetSettingsDataDateTime(struct FSettingsData* Data,int* OutInt1,int* OutInt2)
{
	static UFieldFunc* pFnGetSettingsDataDateTime = NULL;
	if(!pFnGetSettingsDataDateTime)
		pFnGetSettingsDataDateTime = UObject::FindFunction("Function Engine.Settings.GetSettingsDataDateTime");

	Engine_GetSettingsDataDateTime_Parms GetSettingsDataDateTime_Parms;
	pFnGetSettingsDataDateTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSettingsDataDateTime,NULL,&GetSettingsDataDateTime_Parms,NULL);
	pFnGetSettingsDataDateTime->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&GetSettingsDataDateTime_Parms.Data,0xC);
	if(OutInt1)
		*OutInt1 = GetSettingsDataDateTime_Parms.OutInt1;
	if(OutInt2)
		*OutInt2 = GetSettingsDataDateTime_Parms.OutInt2;
}

struct Engine_SetRangedPropertyValue_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	float                                              NewValue;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::SetRangedPropertyValue(int PropertyId,float NewValue)
{
	static UFieldFunc* pFnSetRangedPropertyValue = NULL;
	if(!pFnSetRangedPropertyValue)
		pFnSetRangedPropertyValue = UObject::FindFunction("Function Engine.Settings.SetRangedPropertyValue");

	Engine_SetRangedPropertyValue_Parms SetRangedPropertyValue_Parms;
	SetRangedPropertyValue_Parms.PropertyId = PropertyId;
	SetRangedPropertyValue_Parms.NewValue = NewValue;
	pFnSetRangedPropertyValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRangedPropertyValue,NULL,&SetRangedPropertyValue_Parms,NULL);
	pFnSetRangedPropertyValue->FunctionFlags |= 0x400;
	return SetRangedPropertyValue_Parms.ReturnValue;
}

struct Engine_SetIntProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	int                                                Value;                                            		// 0x000004 (0x0004)              
};

void USettings::SetIntProperty(int PropertyId,int Value)
{
	static UFieldFunc* pFnSetIntProperty = NULL;
	if(!pFnSetIntProperty)
		pFnSetIntProperty = UObject::FindFunction("Function Engine.Settings.SetIntProperty");

	Engine_SetIntProperty_Parms SetIntProperty_Parms;
	SetIntProperty_Parms.PropertyId = PropertyId;
	SetIntProperty_Parms.Value = Value;
	pFnSetIntProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIntProperty,NULL,&SetIntProperty_Parms,NULL);
	pFnSetIntProperty->FunctionFlags |= 0x400;
}

struct Engine_GetStringSettingValueName_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	int                                                ValueIndex;                                       		// 0x000004 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000008 (0x0008)              
};

struct FName USettings::GetStringSettingValueName(int StringSettingId,int ValueIndex)
{
	static UFieldFunc* pFnGetStringSettingValueName = NULL;
	if(!pFnGetStringSettingValueName)
		pFnGetStringSettingValueName = UObject::FindFunction("Function Engine.Settings.GetStringSettingValueName");

	Engine_GetStringSettingValueName_Parms GetStringSettingValueName_Parms;
	GetStringSettingValueName_Parms.StringSettingId = StringSettingId;
	GetStringSettingValueName_Parms.ValueIndex = ValueIndex;
	pFnGetStringSettingValueName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingValueName,NULL,&GetStringSettingValueName_Parms,NULL);
	pFnGetStringSettingValueName->FunctionFlags |= 0x400;
	return GetStringSettingValueName_Parms.ReturnValue;
}

struct Engine_GetPropertyRange_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	float                                              OutMinValue;                                      		// 0x000004 (0x0004)              
	float                                              OutMaxValue;                                      		// 0x000008 (0x0004)              
	float                                              RangeIncrement;                                   		// 0x00000C (0x0004)              
	unsigned char                                      bFormatAsInt;                                     		// 0x000010 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool USettings::GetPropertyRange(int PropertyId,float* OutMinValue,float* OutMaxValue,float* RangeIncrement,unsigned char* bFormatAsInt)
{
	static UFieldFunc* pFnGetPropertyRange = NULL;
	if(!pFnGetPropertyRange)
		pFnGetPropertyRange = UObject::FindFunction("Function Engine.Settings.GetPropertyRange");

	Engine_GetPropertyRange_Parms GetPropertyRange_Parms;
	GetPropertyRange_Parms.PropertyId = PropertyId;
	pFnGetPropertyRange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyRange,NULL,&GetPropertyRange_Parms,NULL);
	pFnGetPropertyRange->FunctionFlags |= 0x400;
	if(OutMinValue)
		*OutMinValue = GetPropertyRange_Parms.OutMinValue;
	if(OutMaxValue)
		*OutMaxValue = GetPropertyRange_Parms.OutMaxValue;
	if(RangeIncrement)
		*RangeIncrement = GetPropertyRange_Parms.RangeIncrement;
	if(bFormatAsInt)
		*bFormatAsInt = GetPropertyRange_Parms.bFormatAsInt;
	return GetPropertyRange_Parms.ReturnValue;
}

struct Engine_SetStringProperty_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	struct FString                                     Value;                                            		// 0x000004 (0x000C)              
};

void USettings::SetStringProperty(int PropertyId,struct FString Value)
{
	static UFieldFunc* pFnSetStringProperty = NULL;
	if(!pFnSetStringProperty)
		pFnSetStringProperty = UObject::FindFunction("Function Engine.Settings.SetStringProperty");

	Engine_SetStringProperty_Parms SetStringProperty_Parms;
	SetStringProperty_Parms.PropertyId = PropertyId;
	memcpy(&SetStringProperty_Parms.Value,&Value,0xC);
	pFnSetStringProperty->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStringProperty,NULL,&SetStringProperty_Parms,NULL);
	pFnSetStringProperty->FunctionFlags |= 0x400;
}

struct Engine_GetPropertyAsString_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString USettings::GetPropertyAsString(int PropertyId)
{
	static UFieldFunc* pFnGetPropertyAsString = NULL;
	if(!pFnGetPropertyAsString)
		pFnGetPropertyAsString = UObject::FindFunction("Function Engine.Settings.GetPropertyAsString");

	Engine_GetPropertyAsString_Parms GetPropertyAsString_Parms;
	GetPropertyAsString_Parms.PropertyId = PropertyId;
	pFnGetPropertyAsString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyAsString,NULL,&GetPropertyAsString_Parms,NULL);
	pFnGetPropertyAsString->FunctionFlags |= 0x400;
	return GetPropertyAsString_Parms.ReturnValue;
}

struct Engine_GetStringSettingId_Parms
{
	struct FName                                       StringSettingName;                                		// 0x000000 (0x0008)              
	int                                                StringSettingId;                                  		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USettings::GetStringSettingId(struct FName StringSettingName,int* StringSettingId)
{
	static UFieldFunc* pFnGetStringSettingId = NULL;
	if(!pFnGetStringSettingId)
		pFnGetStringSettingId = UObject::FindFunction("Function Engine.Settings.GetStringSettingId");

	Engine_GetStringSettingId_Parms GetStringSettingId_Parms;
	memcpy(&GetStringSettingId_Parms.StringSettingName,&StringSettingName,0x8);
	pFnGetStringSettingId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringSettingId,NULL,&GetStringSettingId_Parms,NULL);
	pFnGetStringSettingId->FunctionFlags |= 0x400;
	if(StringSettingId)
		*StringSettingId = GetStringSettingId_Parms.StringSettingId;
	return GetStringSettingId_Parms.ReturnValue;
}

struct Engine_SetSettingsDataInt_Parms
{
	struct FSettingsData                               Data;                                             		// 0x000000 (0x000C)              
	int                                                InInt;                                            		// 0x00000C (0x0004)              
};

void USettings::SetSettingsDataInt(struct FSettingsData* Data,int InInt)
{
	static UFieldFunc* pFnSetSettingsDataInt = NULL;
	if(!pFnSetSettingsDataInt)
		pFnSetSettingsDataInt = UObject::FindFunction("Function Engine.Settings.SetSettingsDataInt");

	Engine_SetSettingsDataInt_Parms SetSettingsDataInt_Parms;
	SetSettingsDataInt_Parms.InInt = InInt;
	pFnSetSettingsDataInt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSettingsDataInt,NULL,&SetSettingsDataInt_Parms,NULL);
	pFnSetSettingsDataInt->FunctionFlags |= 0x400;
	if(Data)
		memcpy(Data,&SetSettingsDataInt_Parms.Data,0xC);
}

struct Engine_SetPropertyValueId_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	int                                                ValueId;                                          		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USettings::SetPropertyValueId(int PropertyId,int ValueId)
{
	static UFieldFunc* pFnSetPropertyValueId = NULL;
	if(!pFnSetPropertyValueId)
		pFnSetPropertyValueId = UObject::FindFunction("Function Engine.Settings.SetPropertyValueId");

	Engine_SetPropertyValueId_Parms SetPropertyValueId_Parms;
	SetPropertyValueId_Parms.PropertyId = PropertyId;
	SetPropertyValueId_Parms.ValueId = ValueId;
	pFnSetPropertyValueId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPropertyValueId,NULL,&SetPropertyValueId_Parms,NULL);
	pFnSetPropertyValueId->FunctionFlags |= 0x400;
	return SetPropertyValueId_Parms.ReturnValue;
}

struct Engine_GetPropertyColumnHeader_Parms
{
	int                                                PropertyId;                                       		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString USettings::GetPropertyColumnHeader(int PropertyId)
{
	static UFieldFunc* pFnGetPropertyColumnHeader = NULL;
	if(!pFnGetPropertyColumnHeader)
		pFnGetPropertyColumnHeader = UObject::FindFunction("Function Engine.Settings.GetPropertyColumnHeader");

	Engine_GetPropertyColumnHeader_Parms GetPropertyColumnHeader_Parms;
	GetPropertyColumnHeader_Parms.PropertyId = PropertyId;
	pFnGetPropertyColumnHeader->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPropertyColumnHeader,NULL,&GetPropertyColumnHeader_Parms,NULL);
	pFnGetPropertyColumnHeader->FunctionFlags |= 0x400;
	return GetPropertyColumnHeader_Parms.ReturnValue;
}

struct Engine_UpdateStringSettings_Parms
{
	TArray<struct FLocalizedStringSetting>             Settings;                                         		// 0x000000 (0x000C)              
	unsigned long                                      bShouldAddIfMissing : 1;                          		// 0x00000C (0x0004) [0x00000001] 
};

void USettings::UpdateStringSettings(TArray<struct FLocalizedStringSetting>* Settings,bool bShouldAddIfMissing)
{
	static UFieldFunc* pFnUpdateStringSettings = NULL;
	if(!pFnUpdateStringSettings)
		pFnUpdateStringSettings = UObject::FindFunction("Function Engine.Settings.UpdateStringSettings");

	Engine_UpdateStringSettings_Parms UpdateStringSettings_Parms;
	UpdateStringSettings_Parms.bShouldAddIfMissing = bShouldAddIfMissing;
	pFnUpdateStringSettings->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateStringSettings,NULL,&UpdateStringSettings_Parms,NULL);
	pFnUpdateStringSettings->FunctionFlags |= 0x400;
	if(Settings)
		memcpy(Settings,&UpdateStringSettings_Parms.Settings,0xC);
}

struct Engine_IncrementStringSettingValue_Parms
{
	int                                                StringSettingId;                                  		// 0x000000 (0x0004)              
	int                                                Direction;                                        		// 0x000004 (0x0004)              
	unsigned long                                      bShouldWrap : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USettings::IncrementStringSettingValue(int StringSettingId,int Direction,bool bShouldWrap)
{
	static UFieldFunc* pFnIncrementStringSettingValue = NULL;
	if(!pFnIncrementStringSettingValue)
		pFnIncrementStringSettingValue = UObject::FindFunction("Function Engine.Settings.IncrementStringSettingValue");

	Engine_IncrementStringSettingValue_Parms IncrementStringSettingValue_Parms;
	IncrementStringSettingValue_Parms.StringSettingId = StringSettingId;
	IncrementStringSettingValue_Parms.Direction = Direction;
	IncrementStringSettingValue_Parms.bShouldWrap = bShouldWrap;
	pFnIncrementStringSettingValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIncrementStringSettingValue,NULL,&IncrementStringSettingValue_Parms,NULL);
	pFnIncrementStringSettingValue->FunctionFlags |= 0x400;
	return IncrementStringSettingValue_Parms.ReturnValue;
}

struct Engine_SetSkillOverride_Parms
{
	int                                                LeaderboardId;                                    		// 0x000000 (0x0004)              
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000004 (0x000C)              
};

void UOnlineGameSearch::SetSkillOverride(int LeaderboardId,TArray<struct FUniqueNetId>* Players)
{
	static UFieldFunc* pFnSetSkillOverride = NULL;
	if(!pFnSetSkillOverride)
		pFnSetSkillOverride = UObject::FindFunction("Function Engine.OnlineGameSearch.SetSkillOverride");

	Engine_SetSkillOverride_Parms SetSkillOverride_Parms;
	SetSkillOverride_Parms.LeaderboardId = LeaderboardId;
	ProcessEvent(pFnSetSkillOverride,NULL,&SetSkillOverride_Parms,NULL);
	if(Players)
		memcpy(Players,&SetSkillOverride_Parms.Players,0xC);
}

struct Engine_SortSearchResults_Parms
{
};

void UOnlineGameSearch::SortSearchResults()
{
	static UFieldFunc* pFnSortSearchResults = NULL;
	if(!pFnSortSearchResults)
		pFnSortSearchResults = UObject::FindFunction("Function Engine.OnlineGameSearch.SortSearchResults");

	Engine_SortSearchResults_Parms SortSearchResults_Parms;
	pFnSortSearchResults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSortSearchResults,NULL,&SortSearchResults_Parms,NULL);
	pFnSortSearchResults->FunctionFlags |= 0x400;
}

struct Engine_GetCueDuration_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USoundCue::GetCueDuration()
{
	static UFieldFunc* pFnGetCueDuration = NULL;
	if(!pFnGetCueDuration)
		pFnGetCueDuration = UObject::FindFunction("Function Engine.SoundCue.GetCueDuration");

	Engine_GetCueDuration_Parms GetCueDuration_Parms;
	pFnGetCueDuration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCueDuration,NULL,&GetCueDuration_Parms,NULL);
	pFnGetCueDuration->FunctionFlags |= 0x400;
	return GetCueDuration_Parms.ReturnValue;
}

struct Engine_SetCurrentFrame_Parms
{
	int                                                Row;                                              		// 0x000000 (0x0004)              
	int                                                Col;                                              		// 0x000004 (0x0004)              
};

void UTextureFlipBook::SetCurrentFrame(int Row,int Col)
{
	static UFieldFunc* pFnSetCurrentFrame = NULL;
	if(!pFnSetCurrentFrame)
		pFnSetCurrentFrame = UObject::FindFunction("Function Engine.TextureFlipBook.SetCurrentFrame");

	Engine_SetCurrentFrame_Parms SetCurrentFrame_Parms;
	SetCurrentFrame_Parms.Row = Row;
	SetCurrentFrame_Parms.Col = Col;
	pFnSetCurrentFrame->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCurrentFrame,NULL,&SetCurrentFrame_Parms,NULL);
	pFnSetCurrentFrame->FunctionFlags |= 0x400;
}

struct Engine_Play_Parms
{
};

void UTextureFlipBook::Play()
{
	static UFieldFunc* pFnPlay = NULL;
	if(!pFnPlay)
		pFnPlay = UObject::FindFunction("Function Engine.TextureFlipBook.Play");

	Engine_Play_Parms Play_Parms;
	pFnPlay->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlay,NULL,&Play_Parms,NULL);
	pFnPlay->FunctionFlags |= 0x400;
}

struct Engine_Pause_Parms
{
};

void UTextureFlipBook::Pause()
{
	static UFieldFunc* pFnPause = NULL;
	if(!pFnPause)
		pFnPause = UObject::FindFunction("Function Engine.TextureFlipBook.Pause");

	Engine_Pause_Parms Pause_Parms;
	pFnPause->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPause,NULL,&Pause_Parms,NULL);
	pFnPause->FunctionFlags |= 0x400;
}

struct Engine_Stop_Parms
{
};

void UTextureFlipBook::Stop()
{
	static UFieldFunc* pFnStop = NULL;
	if(!pFnStop)
		pFnStop = UObject::FindFunction("Function Engine.TextureFlipBook.Stop");

	Engine_Stop_Parms Stop_Parms;
	pFnStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStop,NULL,&Stop_Parms,NULL);
	pFnStop->FunctionFlags |= 0x400;
}

struct Engine_UpdateCompositeTexture_Parms
{
	int                                                NumMipsToGenerate;                                		// 0x000000 (0x0004)              
};

void UTexture2DComposite::UpdateCompositeTexture(int NumMipsToGenerate)
{
	static UFieldFunc* pFnUpdateCompositeTexture = NULL;
	if(!pFnUpdateCompositeTexture)
		pFnUpdateCompositeTexture = UObject::FindFunction("Function Engine.Texture2DComposite.UpdateCompositeTexture");

	Engine_UpdateCompositeTexture_Parms UpdateCompositeTexture_Parms;
	UpdateCompositeTexture_Parms.NumMipsToGenerate = NumMipsToGenerate;
	pFnUpdateCompositeTexture->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateCompositeTexture,NULL,&UpdateCompositeTexture_Parms,NULL);
	pFnUpdateCompositeTexture->FunctionFlags |= 0x400;
}

struct Engine_ResetSourceRegions_Parms
{
};

void UTexture2DComposite::ResetSourceRegions()
{
	static UFieldFunc* pFnResetSourceRegions = NULL;
	if(!pFnResetSourceRegions)
		pFnResetSourceRegions = UObject::FindFunction("Function Engine.Texture2DComposite.ResetSourceRegions");

	Engine_ResetSourceRegions_Parms ResetSourceRegions_Parms;
	pFnResetSourceRegions->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetSourceRegions,NULL,&ResetSourceRegions_Parms,NULL);
	pFnResetSourceRegions->FunctionFlags |= 0x400;
}

struct Engine_SourceTexturesFullyStreamedIn_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UTexture2DComposite::SourceTexturesFullyStreamedIn()
{
	static UFieldFunc* pFnSourceTexturesFullyStreamedIn = NULL;
	if(!pFnSourceTexturesFullyStreamedIn)
		pFnSourceTexturesFullyStreamedIn = UObject::FindFunction("Function Engine.Texture2DComposite.SourceTexturesFullyStreamedIn");

	Engine_SourceTexturesFullyStreamedIn_Parms SourceTexturesFullyStreamedIn_Parms;
	pFnSourceTexturesFullyStreamedIn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSourceTexturesFullyStreamedIn,NULL,&SourceTexturesFullyStreamedIn_Parms,NULL);
	pFnSourceTexturesFullyStreamedIn->FunctionFlags |= 0x400;
	return SourceTexturesFullyStreamedIn_Parms.ReturnValue;
}

struct Engine_Pause_Parms
{
};

void UTextureMovie::Pause()
{
	static UFieldFunc* pFnPause = NULL;
	if(!pFnPause)
		pFnPause = UObject::FindFunction("Function Engine.TextureMovie.Pause");

	Engine_Pause_Parms Pause_Parms;
	pFnPause->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPause,NULL,&Pause_Parms,NULL);
	pFnPause->FunctionFlags |= 0x400;
}

struct Engine_Stop_Parms
{
};

void UTextureMovie::Stop()
{
	static UFieldFunc* pFnStop = NULL;
	if(!pFnStop)
		pFnStop = UObject::FindFunction("Function Engine.TextureMovie.Stop");

	Engine_Stop_Parms Stop_Parms;
	pFnStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStop,NULL,&Stop_Parms,NULL);
	pFnStop->FunctionFlags |= 0x400;
}

struct Engine_Play_Parms
{
};

void UTextureMovie::Play()
{
	static UFieldFunc* pFnPlay = NULL;
	if(!pFnPlay)
		pFnPlay = UObject::FindFunction("Function Engine.TextureMovie.Play");

	Engine_Play_Parms Play_Parms;
	pFnPlay->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlay,NULL,&Play_Parms,NULL);
	pFnPlay->FunctionFlags |= 0x400;
}

struct Engine_Create_Parms
{
	int                                                InSizeX;                                          		// 0x000000 (0x0004)              
	int                                                InSizeY;                                          		// 0x000004 (0x0004)              
	unsigned char                                      InFormat;                                         		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	struct FLinearColor                                InClearColor;                                     		// 0x00000C (0x0010)              
	unsigned long                                      bOnlyRenderOnce : 1;                              		// 0x00001C (0x0004) [0x00000001] 
	class UTextureRenderTarget2D*                      ReturnValue;                                      		// 0x000020 (0x0004)              
};

class UTextureRenderTarget2D* UTextureRenderTarget2D::Create(int InSizeX,int InSizeY,unsigned char InFormat,struct FLinearColor InClearColor,bool bOnlyRenderOnce)
{
	static UFieldFunc* pFnCreate = NULL;
	if(!pFnCreate)
		pFnCreate = UObject::FindFunction("Function Engine.TextureRenderTarget2D.Create");

	Engine_Create_Parms Create_Parms;
	Create_Parms.InSizeX = InSizeX;
	Create_Parms.InSizeY = InSizeY;
	Create_Parms.InFormat = InFormat;
	memcpy(&Create_Parms.InClearColor,&InClearColor,0x10);
	Create_Parms.bOnlyRenderOnce = bOnlyRenderOnce;
	pFnCreate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreate,NULL,&Create_Parms,NULL);
	pFnCreate->FunctionFlags |= 0x400;
	return Create_Parms.ReturnValue;
}

struct Engine_RegisterTranslatorTag_Parms
{
	class UTranslatorTag*                              InTagHandler;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UTranslationContext::RegisterTranslatorTag(class UTranslatorTag* InTagHandler)
{
	static UFieldFunc* pFnRegisterTranslatorTag = NULL;
	if(!pFnRegisterTranslatorTag)
		pFnRegisterTranslatorTag = UObject::FindFunction("Function Engine.TranslationContext.RegisterTranslatorTag");

	Engine_RegisterTranslatorTag_Parms RegisterTranslatorTag_Parms;
	RegisterTranslatorTag_Parms.InTagHandler = InTagHandler;
	pFnRegisterTranslatorTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRegisterTranslatorTag,NULL,&RegisterTranslatorTag_Parms,NULL);
	pFnRegisterTranslatorTag->FunctionFlags |= 0x400;
	return RegisterTranslatorTag_Parms.ReturnValue;
}

struct Engine_Translate_Parms
{
	struct FString                                     InArgument;                                       		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UTranslatorTag::Translate(struct FString InArgument)
{
	static UFieldFunc* pFnTranslate = NULL;
	if(!pFnTranslate)
		pFnTranslate = UObject::FindFunction("Function Engine.TranslatorTag.Translate");

	Engine_Translate_Parms Translate_Parms;
	memcpy(&Translate_Parms.InArgument,&InArgument,0xC);
	pFnTranslate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTranslate,NULL,&Translate_Parms,NULL);
	pFnTranslate->FunctionFlags |= 0x400;
	return Translate_Parms.ReturnValue;
}

struct Engine_Translate_Parms
{
	struct FString                                     InArgument;                                       		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UStringsTag::Translate(struct FString InArgument)
{
	static UFieldFunc* pFnTranslate = NULL;
	if(!pFnTranslate)
		pFnTranslate = UObject::FindFunction("Function Engine.StringsTag.Translate");

	Engine_Translate_Parms Translate_Parms;
	memcpy(&Translate_Parms.InArgument,&InArgument,0xC);
	pFnTranslate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTranslate,NULL,&Translate_Parms,NULL);
	pFnTranslate->FunctionFlags |= 0x400;
	return Translate_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AAIController::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.AIController.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_PriorityObjective_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AAIController::PriorityObjective()
{
	static UFieldFunc* pFnPriorityObjective = NULL;
	if(!pFnPriorityObjective)
		pFnPriorityObjective = UObject::FindFunction("Function Engine.AIController.PriorityObjective");

	Engine_PriorityObjective_Parms PriorityObjective_Parms;
	ProcessEvent(pFnPriorityObjective,NULL,&PriorityObjective_Parms,NULL);
	return PriorityObjective_Parms.ReturnValue;
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
	//struct FString                                     T;                                                		// 0x000010 (0x000C)              
	//class UCanvas*                                     Canvas;                                           		// 0x00001C (0x0004)              
};

void AAIController::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.AIController.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_OnAIMoveToActor_Parms
{
	class USeqAct_AIMoveToActor*                       Action;                                           		// 0x000000 (0x0004)              
	//class AActor*                                      destActor;                                        		// 0x000004 (0x0004)              
	//class USeqVar_Object*                              ObjVar;                                           		// 0x000008 (0x0004)              
};

void AAIController::OnAIMoveToActor(class USeqAct_AIMoveToActor* Action)
{
	static UFieldFunc* pFnOnAIMoveToActor = NULL;
	if(!pFnOnAIMoveToActor)
		pFnOnAIMoveToActor = UObject::FindFunction("Function Engine.AIController.OnAIMoveToActor");

	Engine_OnAIMoveToActor_Parms OnAIMoveToActor_Parms;
	OnAIMoveToActor_Parms.Action = Action;
	ProcessEvent(pFnOnAIMoveToActor,NULL,&OnAIMoveToActor_Parms,NULL);
}

struct Engine_PreBeginPlay_Parms
{
};

void AAIController::PreBeginPlay()
{
	static UFieldFunc* pFnPreBeginPlay = NULL;
	if(!pFnPreBeginPlay)
		pFnPreBeginPlay = UObject::FindFunction("Function Engine.AIController.PreBeginPlay");

	Engine_PreBeginPlay_Parms PreBeginPlay_Parms;
	ProcessEvent(pFnPreBeginPlay,NULL,&PreBeginPlay_Parms,NULL);
}

struct Engine_ShouldAutoReload_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AAIController::ShouldAutoReload()
{
	static UFieldFunc* pFnShouldAutoReload = NULL;
	if(!pFnShouldAutoReload)
		pFnShouldAutoReload = UObject::FindFunction("Function Engine.AIController.ShouldAutoReload");

	Engine_ShouldAutoReload_Parms ShouldAutoReload_Parms;
	ProcessEvent(pFnShouldAutoReload,NULL,&ShouldAutoReload_Parms,NULL);
	return ShouldAutoReload_Parms.ReturnValue;
}

struct Engine_SetOrders_Parms
{
	struct FName                                       NewOrders;                                        		// 0x000000 (0x0008)              
	class AController*                                 OrderGiver;                                       		// 0x000008 (0x0004)              
};

void AAIController::SetOrders(struct FName NewOrders,class AController* OrderGiver)
{
	static UFieldFunc* pFnSetOrders = NULL;
	if(!pFnSetOrders)
		pFnSetOrders = UObject::FindFunction("Function Engine.AIController.SetOrders");

	Engine_SetOrders_Parms SetOrders_Parms;
	memcpy(&SetOrders_Parms.NewOrders,&NewOrders,0x8);
	SetOrders_Parms.OrderGiver = OrderGiver;
	ProcessEvent(pFnSetOrders,NULL,&SetOrders_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void AAIController::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.AIController.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_GetOrderObject_Parms
{
	class AActor*                                      ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AActor* AAIController::GetOrderObject()
{
	static UFieldFunc* pFnGetOrderObject = NULL;
	if(!pFnGetOrderObject)
		pFnGetOrderObject = UObject::FindFunction("Function Engine.AIController.GetOrderObject");

	Engine_GetOrderObject_Parms GetOrderObject_Parms;
	ProcessEvent(pFnGetOrderObject,NULL,&GetOrderObject_Parms,NULL);
	return GetOrderObject_Parms.ReturnValue;
}

struct Engine_GetPlayerViewPoint_Parms
{
	FVector3                                           out_Location;                                     		// 0x000000 (0x000C)              
	FRotator                                           out_Rotation;                                     		// 0x00000C (0x000C)              
};

void AAIController::GetPlayerViewPoint(FVector3* out_Location,FRotator* out_Rotation)
{
	static UFieldFunc* pFnGetPlayerViewPoint = NULL;
	if(!pFnGetPlayerViewPoint)
		pFnGetPlayerViewPoint = UObject::FindFunction("Function Engine.AIController.GetPlayerViewPoint");

	Engine_GetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;
	pFnGetPlayerViewPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerViewPoint,NULL,&GetPlayerViewPoint_Parms,NULL);
	pFnGetPlayerViewPoint->FunctionFlags |= 0x400;
	if(out_Location)
		memcpy(out_Location,&GetPlayerViewPoint_Parms.out_Location,0xC);
	if(out_Rotation)
		memcpy(out_Rotation,&GetPlayerViewPoint_Parms.out_Rotation,0xC);
}

struct Engine_CanFireWeapon_Parms
{
	class AWeapon*                                     Wpn;                                              		// 0x000000 (0x0004)              
	unsigned char                                      FireModeNum;                                      		// 0x000004 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool AAIController::CanFireWeapon(class AWeapon* Wpn,unsigned char FireModeNum)
{
	static UFieldFunc* pFnCanFireWeapon = NULL;
	if(!pFnCanFireWeapon)
		pFnCanFireWeapon = UObject::FindFunction("Function Engine.AIController.CanFireWeapon");

	Engine_CanFireWeapon_Parms CanFireWeapon_Parms;
	CanFireWeapon_Parms.Wpn = Wpn;
	CanFireWeapon_Parms.FireModeNum = FireModeNum;
	ProcessEvent(pFnCanFireWeapon,NULL,&CanFireWeapon_Parms,NULL);
	return CanFireWeapon_Parms.ReturnValue;
}

struct Engine_ShouldRefire_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AAIController::ShouldRefire()
{
	static UFieldFunc* pFnShouldRefire = NULL;
	if(!pFnShouldRefire)
		pFnShouldRefire = UObject::FindFunction("Function Engine.AIController.ShouldRefire");

	Engine_ShouldRefire_Parms ShouldRefire_Parms;
	ProcessEvent(pFnShouldRefire,NULL,&ShouldRefire_Parms,NULL);
	return ShouldRefire_Parms.ReturnValue;
}

struct Engine_SetTeam_Parms
{
	int                                                inTeamIdx;                                        		// 0x000000 (0x0004)              
};

void AAIController::SetTeam(int inTeamIdx)
{
	static UFieldFunc* pFnSetTeam = NULL;
	if(!pFnSetTeam)
		pFnSetTeam = UObject::FindFunction("Function Engine.AIController.SetTeam");

	Engine_SetTeam_Parms SetTeam_Parms;
	SetTeam_Parms.inTeamIdx = inTeamIdx;
	ProcessEvent(pFnSetTeam,NULL,&SetTeam_Parms,NULL);
}

struct Engine_GetOrders_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName AAIController::GetOrders()
{
	static UFieldFunc* pFnGetOrders = NULL;
	if(!pFnGetOrders)
		pFnGetOrders = UObject::FindFunction("Function Engine.AIController.GetOrders");

	Engine_GetOrders_Parms GetOrders_Parms;
	ProcessEvent(pFnGetOrders,NULL,&GetOrders_Parms,NULL);
	return GetOrders_Parms.ReturnValue;
}

struct Engine_AlongLine_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	FVector3                                           Dir;                                              		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//class UPath_AlongLine*                             Con;                                              		// 0x000014 (0x0004)              
};

bool UPath_AlongLine::AlongLine(class APawn* P,FVector3 Dir)
{
	static UFieldFunc* pFnAlongLine = NULL;
	if(!pFnAlongLine)
		pFnAlongLine = UObject::FindFunction("Function Engine.Path_AlongLine.AlongLine");

	Engine_AlongLine_Parms AlongLine_Parms;
	AlongLine_Parms.P = P;
	memcpy(&AlongLine_Parms.Dir,&Dir,0xC);
	ProcessEvent(pFnAlongLine,NULL,&AlongLine_Parms,NULL);
	return AlongLine_Parms.ReturnValue;
}

struct Engine_TowardGoal_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	class AActor*                                      Goal;                                             		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class UPath_TowardGoal*                            Con;                                              		// 0x00000C (0x0004)              
};

bool UPath_TowardGoal::TowardGoal(class APawn* P,class AActor* Goal)
{
	static UFieldFunc* pFnTowardGoal = NULL;
	if(!pFnTowardGoal)
		pFnTowardGoal = UObject::FindFunction("Function Engine.Path_TowardGoal.TowardGoal");

	Engine_TowardGoal_Parms TowardGoal_Parms;
	TowardGoal_Parms.P = P;
	TowardGoal_Parms.Goal = Goal;
	ProcessEvent(pFnTowardGoal,NULL,&TowardGoal_Parms,NULL);
	return TowardGoal_Parms.ReturnValue;
}

struct Engine_DontExceedMaxDist_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	float                                              InMaxTraversalDist;                               		// 0x000004 (0x0004)              
	unsigned long                                      bInSoft : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//class UPath_WithinTraversalDist*                   Con;                                              		// 0x000010 (0x0004)              
};

bool UPath_WithinTraversalDist::DontExceedMaxDist(class APawn* P,float InMaxTraversalDist,bool bInSoft)
{
	static UFieldFunc* pFnDontExceedMaxDist = NULL;
	if(!pFnDontExceedMaxDist)
		pFnDontExceedMaxDist = UObject::FindFunction("Function Engine.Path_WithinTraversalDist.DontExceedMaxDist");

	Engine_DontExceedMaxDist_Parms DontExceedMaxDist_Parms;
	DontExceedMaxDist_Parms.P = P;
	DontExceedMaxDist_Parms.InMaxTraversalDist = InMaxTraversalDist;
	DontExceedMaxDist_Parms.bInSoft = bInSoft;
	ProcessEvent(pFnDontExceedMaxDist,NULL,&DontExceedMaxDist_Parms,NULL);
	return DontExceedMaxDist_Parms.ReturnValue;
}

struct Engine_AtActor_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	class AActor*                                      Goal;                                             		// 0x000004 (0x0004)              
	float                                              Dist;                                             		// 0x000008 (0x0004)              
	unsigned long                                      bReturnPartial : 1;                               		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//class UGoal_AtActor*                               Eval;                                             		// 0x000014 (0x0004)              
	//class APawn*                                       GoalPawn;                                         		// 0x000018 (0x0004)              
	//class AController*                                 GoalController;                                   		// 0x00001C (0x0004)              
	//float                                              AnchorDist;                                       		// 0x000020 (0x0004)              
};

bool UGoal_AtActor::AtActor(class APawn* P,class AActor* Goal,float Dist,bool bReturnPartial)
{
	static UFieldFunc* pFnAtActor = NULL;
	if(!pFnAtActor)
		pFnAtActor = UObject::FindFunction("Function Engine.Goal_AtActor.AtActor");

	Engine_AtActor_Parms AtActor_Parms;
	AtActor_Parms.P = P;
	AtActor_Parms.Goal = Goal;
	AtActor_Parms.Dist = Dist;
	AtActor_Parms.bReturnPartial = bReturnPartial;
	ProcessEvent(pFnAtActor,NULL,&AtActor_Parms,NULL);
	return AtActor_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void ASkeletalMeshActor::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.SkeletalMeshActor.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_BeginAnimControl_Parms
{
	TArray<class UAnimSet*>                            InAnimSets;                                       		// 0x000000 (0x000C)              
	//class UAnimNodeSequence*                           SeqNode;                                          		// 0x00000C (0x0004)              
};

void ASkeletalMeshActor::BeginAnimControl(TArray<class UAnimSet*> InAnimSets)
{
	static UFieldFunc* pFnBeginAnimControl = NULL;
	if(!pFnBeginAnimControl)
		pFnBeginAnimControl = UObject::FindFunction("Function Engine.SkeletalMeshActor.BeginAnimControl");

	Engine_BeginAnimControl_Parms BeginAnimControl_Parms;
	memcpy(&BeginAnimControl_Parms.InAnimSets,&InAnimSets,0xC);
	ProcessEvent(pFnBeginAnimControl,NULL,&BeginAnimControl_Parms,NULL);
}

struct Engine_FinishAnimControl_Parms
{
};

void ASkeletalMeshActor::FinishAnimControl()
{
	static UFieldFunc* pFnFinishAnimControl = NULL;
	if(!pFnFinishAnimControl)
		pFnFinishAnimControl = UObject::FindFunction("Function Engine.SkeletalMeshActor.FinishAnimControl");

	Engine_FinishAnimControl_Parms FinishAnimControl_Parms;
	ProcessEvent(pFnFinishAnimControl,NULL,&FinishAnimControl_Parms,NULL);
}

struct Engine_SetAnimWeights_Parms
{
	TArray<struct FAnimSlotInfo>                       SlotInfos;                                        		// 0x000000 (0x000C)              
};

void ASkeletalMeshActor::SetAnimWeights(TArray<struct FAnimSlotInfo> SlotInfos)
{
	static UFieldFunc* pFnSetAnimWeights = NULL;
	if(!pFnSetAnimWeights)
		pFnSetAnimWeights = UObject::FindFunction("Function Engine.SkeletalMeshActor.SetAnimWeights");

	Engine_SetAnimWeights_Parms SetAnimWeights_Parms;
	memcpy(&SetAnimWeights_Parms.SlotInfos,&SlotInfos,0xC);
	ProcessEvent(pFnSetAnimWeights,NULL,&SetAnimWeights_Parms,NULL);
}

struct Engine_DoKismetAttachment_Parms
{
	class AActor*                                      Attachment;                                       		// 0x000000 (0x0004)              
	class USeqAct_AttachToActor*                       Action;                                           		// 0x000004 (0x0004)              
	//unsigned long                                      bOldCollideActors : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bOldBlockActors : 1;                              		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bValidBone : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bValidSocket : 1;                                 		// 0x000014 (0x0004) [0x00000001] 
};

void ASkeletalMeshActor::DoKismetAttachment(class AActor* Attachment,class USeqAct_AttachToActor* Action)
{
	static UFieldFunc* pFnDoKismetAttachment = NULL;
	if(!pFnDoKismetAttachment)
		pFnDoKismetAttachment = UObject::FindFunction("Function Engine.SkeletalMeshActor.DoKismetAttachment");

	Engine_DoKismetAttachment_Parms DoKismetAttachment_Parms;
	DoKismetAttachment_Parms.Attachment = Attachment;
	DoKismetAttachment_Parms.Action = Action;
	ProcessEvent(pFnDoKismetAttachment,NULL,&DoKismetAttachment_Parms,NULL);
}

struct Engine_OnPlayFaceFXAnim_Parms
{
	class USeqAct_PlayFaceFXAnim*                      inAction;                                         		// 0x000000 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

void ASkeletalMeshActor::OnPlayFaceFXAnim(class USeqAct_PlayFaceFXAnim* inAction)
{
	static UFieldFunc* pFnOnPlayFaceFXAnim = NULL;
	if(!pFnOnPlayFaceFXAnim)
		pFnOnPlayFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshActor.OnPlayFaceFXAnim");

	Engine_OnPlayFaceFXAnim_Parms OnPlayFaceFXAnim_Parms;
	OnPlayFaceFXAnim_Parms.inAction = inAction;
	ProcessEvent(pFnOnPlayFaceFXAnim,NULL,&OnPlayFaceFXAnim_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ASkeletalMeshActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.SkeletalMeshActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_GetActorFaceFXAsset_Parms
{
	class UFaceFXAsset*                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFaceFXAsset* ASkeletalMeshActor::GetActorFaceFXAsset()
{
	static UFieldFunc* pFnGetActorFaceFXAsset = NULL;
	if(!pFnGetActorFaceFXAsset)
		pFnGetActorFaceFXAsset = UObject::FindFunction("Function Engine.SkeletalMeshActor.GetActorFaceFXAsset");

	Engine_GetActorFaceFXAsset_Parms GetActorFaceFXAsset_Parms;
	ProcessEvent(pFnGetActorFaceFXAsset,NULL,&GetActorFaceFXAsset_Parms,NULL);
	return GetActorFaceFXAsset_Parms.ReturnValue;
}

struct Engine_SetAnimPosition_Parms
{
	struct FName                                       SlotName;                                         		// 0x000000 (0x0008)              
	int                                                ChannelIndex;                                     		// 0x000008 (0x0004)              
	struct FName                                       InAnimSeqName;                                    		// 0x00000C (0x0008)              
	float                                              InPosition;                                       		// 0x000014 (0x0004)              
	unsigned long                                      bFireNotifies : 1;                                		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bLooping : 1;                                     		// 0x00001C (0x0004) [0x00000001] 
	//class UAnimNodeSequence*                           SeqNode;                                          		// 0x000020 (0x0004)              
};

void ASkeletalMeshActor::SetAnimPosition(struct FName SlotName,int ChannelIndex,struct FName InAnimSeqName,float InPosition,bool bFireNotifies,bool bLooping)
{
	static UFieldFunc* pFnSetAnimPosition = NULL;
	if(!pFnSetAnimPosition)
		pFnSetAnimPosition = UObject::FindFunction("Function Engine.SkeletalMeshActor.SetAnimPosition");

	Engine_SetAnimPosition_Parms SetAnimPosition_Parms;
	memcpy(&SetAnimPosition_Parms.SlotName,&SlotName,0x8);
	SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy(&SetAnimPosition_Parms.InAnimSeqName,&InAnimSeqName,0x8);
	SetAnimPosition_Parms.InPosition = InPosition;
	SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	SetAnimPosition_Parms.bLooping = bLooping;
	ProcessEvent(pFnSetAnimPosition,NULL,&SetAnimPosition_Parms,NULL);
}

struct Engine_GetFaceFXAudioComponent_Parms
{
	class UAudioComponent*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAudioComponent* ASkeletalMeshActor::GetFaceFXAudioComponent()
{
	static UFieldFunc* pFnGetFaceFXAudioComponent = NULL;
	if(!pFnGetFaceFXAudioComponent)
		pFnGetFaceFXAudioComponent = UObject::FindFunction("Function Engine.SkeletalMeshActor.GetFaceFXAudioComponent");

	Engine_GetFaceFXAudioComponent_Parms GetFaceFXAudioComponent_Parms;
	ProcessEvent(pFnGetFaceFXAudioComponent,NULL,&GetFaceFXAudioComponent_Parms,NULL);
	return GetFaceFXAudioComponent_Parms.ReturnValue;
}

struct Engine_OnSetSkeletalMesh_Parms
{
	class USeqAct_SetSkeletalMesh*                     Action;                                           		// 0x000000 (0x0004)              
};

void ASkeletalMeshActor::OnSetSkeletalMesh(class USeqAct_SetSkeletalMesh* Action)
{
	static UFieldFunc* pFnOnSetSkeletalMesh = NULL;
	if(!pFnOnSetSkeletalMesh)
		pFnOnSetSkeletalMesh = UObject::FindFunction("Function Engine.SkeletalMeshActor.OnSetSkeletalMesh");

	Engine_OnSetSkeletalMesh_Parms OnSetSkeletalMesh_Parms;
	OnSetSkeletalMesh_Parms.Action = Action;
	ProcessEvent(pFnOnSetSkeletalMesh,NULL,&OnSetSkeletalMesh_Parms,NULL);
}

struct Engine_StopActorFaceFXAnim_Parms
{
};

void ASkeletalMeshActor::StopActorFaceFXAnim()
{
	static UFieldFunc* pFnStopActorFaceFXAnim = NULL;
	if(!pFnStopActorFaceFXAnim)
		pFnStopActorFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshActor.StopActorFaceFXAnim");

	Engine_StopActorFaceFXAnim_Parms StopActorFaceFXAnim_Parms;
	ProcessEvent(pFnStopActorFaceFXAnim,NULL,&StopActorFaceFXAnim_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
	//class UAnimNodeSequence*                           SeqNode;                                          		// 0x000004 (0x0004)              
};

void ASkeletalMeshActor::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.SkeletalMeshActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_IsActorPlayingFaceFXAnim_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool ASkeletalMeshActor::IsActorPlayingFaceFXAnim()
{
	static UFieldFunc* pFnIsActorPlayingFaceFXAnim = NULL;
	if(!pFnIsActorPlayingFaceFXAnim)
		pFnIsActorPlayingFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshActor.IsActorPlayingFaceFXAnim");

	Engine_IsActorPlayingFaceFXAnim_Parms IsActorPlayingFaceFXAnim_Parms;
	ProcessEvent(pFnIsActorPlayingFaceFXAnim,NULL,&IsActorPlayingFaceFXAnim_Parms,NULL);
	return IsActorPlayingFaceFXAnim_Parms.ReturnValue;
}

struct Engine_OnSetMaterial_Parms
{
	class USeqAct_SetMaterial*                         Action;                                           		// 0x000000 (0x0004)              
};

void ASkeletalMeshActor::OnSetMaterial(class USeqAct_SetMaterial* Action)
{
	static UFieldFunc* pFnOnSetMaterial = NULL;
	if(!pFnOnSetMaterial)
		pFnOnSetMaterial = UObject::FindFunction("Function Engine.SkeletalMeshActor.OnSetMaterial");

	Engine_OnSetMaterial_Parms OnSetMaterial_Parms;
	OnSetMaterial_Parms.Action = Action;
	ProcessEvent(pFnOnSetMaterial,NULL,&OnSetMaterial_Parms,NULL);
}

struct Engine_PlayActorFaceFXAnim_Parms
{
	class UFaceFXAnimSet*                              AnimSet;                                          		// 0x000000 (0x0004)              
	struct FString                                     GroupName;                                        		// 0x000004 (0x000C)              
	struct FString                                     SeqName;                                          		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool ASkeletalMeshActor::PlayActorFaceFXAnim(class UFaceFXAnimSet* AnimSet,struct FString GroupName,struct FString SeqName)
{
	static UFieldFunc* pFnPlayActorFaceFXAnim = NULL;
	if(!pFnPlayActorFaceFXAnim)
		pFnPlayActorFaceFXAnim = UObject::FindFunction("Function Engine.SkeletalMeshActor.PlayActorFaceFXAnim");

	Engine_PlayActorFaceFXAnim_Parms PlayActorFaceFXAnim_Parms;
	PlayActorFaceFXAnim_Parms.AnimSet = AnimSet;
	memcpy(&PlayActorFaceFXAnim_Parms.GroupName,&GroupName,0xC);
	memcpy(&PlayActorFaceFXAnim_Parms.SeqName,&SeqName,0xC);
	ProcessEvent(pFnPlayActorFaceFXAnim,NULL,&PlayActorFaceFXAnim_Parms,NULL);
	return PlayActorFaceFXAnim_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void ASkeletalMeshActor::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.SkeletalMeshActor.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_BeginAnimControl_Parms
{
	TArray<class UAnimSet*>                            InAnimSets;                                       		// 0x000000 (0x000C)              
};

void ASkeletalMeshActorMAT::BeginAnimControl(TArray<class UAnimSet*> InAnimSets)
{
	static UFieldFunc* pFnBeginAnimControl = NULL;
	if(!pFnBeginAnimControl)
		pFnBeginAnimControl = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.BeginAnimControl");

	Engine_BeginAnimControl_Parms BeginAnimControl_Parms;
	memcpy(&BeginAnimControl_Parms.InAnimSets,&InAnimSets,0xC);
	ProcessEvent(pFnBeginAnimControl,NULL,&BeginAnimControl_Parms,NULL);
}

struct Engine_MAT_BeginAnimControl_Parms
{
	TArray<class UAnimSet*>                            InAnimSets;                                       		// 0x000000 (0x000C)              
};

void ASkeletalMeshActorMAT::MAT_BeginAnimControl(TArray<class UAnimSet*> InAnimSets)
{
	static UFieldFunc* pFnMAT_BeginAnimControl = NULL;
	if(!pFnMAT_BeginAnimControl)
		pFnMAT_BeginAnimControl = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.MAT_BeginAnimControl");

	Engine_MAT_BeginAnimControl_Parms MAT_BeginAnimControl_Parms;
	memcpy(&MAT_BeginAnimControl_Parms.InAnimSets,&InAnimSets,0xC);
	pFnMAT_BeginAnimControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMAT_BeginAnimControl,NULL,&MAT_BeginAnimControl_Parms,NULL);
	pFnMAT_BeginAnimControl->FunctionFlags |= 0x400;
}

struct Engine_SetAnimWeights_Parms
{
	TArray<struct FAnimSlotInfo>                       SlotInfos;                                        		// 0x000000 (0x000C)              
};

void ASkeletalMeshActorMAT::SetAnimWeights(TArray<struct FAnimSlotInfo> SlotInfos)
{
	static UFieldFunc* pFnSetAnimWeights = NULL;
	if(!pFnSetAnimWeights)
		pFnSetAnimWeights = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.SetAnimWeights");

	Engine_SetAnimWeights_Parms SetAnimWeights_Parms;
	memcpy(&SetAnimWeights_Parms.SlotInfos,&SlotInfos,0xC);
	ProcessEvent(pFnSetAnimWeights,NULL,&SetAnimWeights_Parms,NULL);
}

struct Engine_SetMorphWeight_Parms
{
	struct FName                                       MorphNodeName;                                    		// 0x000000 (0x0008)              
	float                                              MorphWeight;                                      		// 0x000008 (0x0004)              
};

void ASkeletalMeshActorMAT::SetMorphWeight(struct FName MorphNodeName,float MorphWeight)
{
	static UFieldFunc* pFnSetMorphWeight = NULL;
	if(!pFnSetMorphWeight)
		pFnSetMorphWeight = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.SetMorphWeight");

	Engine_SetMorphWeight_Parms SetMorphWeight_Parms;
	memcpy(&SetMorphWeight_Parms.MorphNodeName,&MorphNodeName,0x8);
	SetMorphWeight_Parms.MorphWeight = MorphWeight;
	ProcessEvent(pFnSetMorphWeight,NULL,&SetMorphWeight_Parms,NULL);
}

struct Engine_MAT_SetMorphWeight_Parms
{
	struct FName                                       MorphNodeName;                                    		// 0x000000 (0x0008)              
	float                                              MorphWeight;                                      		// 0x000008 (0x0004)              
};

void ASkeletalMeshActorMAT::MAT_SetMorphWeight(struct FName MorphNodeName,float MorphWeight)
{
	static UFieldFunc* pFnMAT_SetMorphWeight = NULL;
	if(!pFnMAT_SetMorphWeight)
		pFnMAT_SetMorphWeight = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.MAT_SetMorphWeight");

	Engine_MAT_SetMorphWeight_Parms MAT_SetMorphWeight_Parms;
	memcpy(&MAT_SetMorphWeight_Parms.MorphNodeName,&MorphNodeName,0x8);
	MAT_SetMorphWeight_Parms.MorphWeight = MorphWeight;
	pFnMAT_SetMorphWeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMAT_SetMorphWeight,NULL,&MAT_SetMorphWeight_Parms,NULL);
	pFnMAT_SetMorphWeight->FunctionFlags |= 0x400;
}

struct Engine_MAT_FinishAnimControl_Parms
{
};

void ASkeletalMeshActorMAT::MAT_FinishAnimControl()
{
	static UFieldFunc* pFnMAT_FinishAnimControl = NULL;
	if(!pFnMAT_FinishAnimControl)
		pFnMAT_FinishAnimControl = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.MAT_FinishAnimControl");

	Engine_MAT_FinishAnimControl_Parms MAT_FinishAnimControl_Parms;
	pFnMAT_FinishAnimControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMAT_FinishAnimControl,NULL,&MAT_FinishAnimControl_Parms,NULL);
	pFnMAT_FinishAnimControl->FunctionFlags |= 0x400;
}

struct Engine_MAT_SetSkelControlScale_Parms
{
	struct FName                                       SkelControlName;                                  		// 0x000000 (0x0008)              
	float                                              Scale;                                            		// 0x000008 (0x0004)              
};

void ASkeletalMeshActorMAT::MAT_SetSkelControlScale(struct FName SkelControlName,float Scale)
{
	static UFieldFunc* pFnMAT_SetSkelControlScale = NULL;
	if(!pFnMAT_SetSkelControlScale)
		pFnMAT_SetSkelControlScale = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.MAT_SetSkelControlScale");

	Engine_MAT_SetSkelControlScale_Parms MAT_SetSkelControlScale_Parms;
	memcpy(&MAT_SetSkelControlScale_Parms.SkelControlName,&SkelControlName,0x8);
	MAT_SetSkelControlScale_Parms.Scale = Scale;
	pFnMAT_SetSkelControlScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMAT_SetSkelControlScale,NULL,&MAT_SetSkelControlScale_Parms,NULL);
	pFnMAT_SetSkelControlScale->FunctionFlags |= 0x400;
}

struct Engine_SetAnimPosition_Parms
{
	struct FName                                       SlotName;                                         		// 0x000000 (0x0008)              
	int                                                ChannelIndex;                                     		// 0x000008 (0x0004)              
	struct FName                                       InAnimSeqName;                                    		// 0x00000C (0x0008)              
	float                                              InPosition;                                       		// 0x000014 (0x0004)              
	unsigned long                                      bFireNotifies : 1;                                		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bLooping : 1;                                     		// 0x00001C (0x0004) [0x00000001] 
};

void ASkeletalMeshActorMAT::SetAnimPosition(struct FName SlotName,int ChannelIndex,struct FName InAnimSeqName,float InPosition,bool bFireNotifies,bool bLooping)
{
	static UFieldFunc* pFnSetAnimPosition = NULL;
	if(!pFnSetAnimPosition)
		pFnSetAnimPosition = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.SetAnimPosition");

	Engine_SetAnimPosition_Parms SetAnimPosition_Parms;
	memcpy(&SetAnimPosition_Parms.SlotName,&SlotName,0x8);
	SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy(&SetAnimPosition_Parms.InAnimSeqName,&InAnimSeqName,0x8);
	SetAnimPosition_Parms.InPosition = InPosition;
	SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	SetAnimPosition_Parms.bLooping = bLooping;
	ProcessEvent(pFnSetAnimPosition,NULL,&SetAnimPosition_Parms,NULL);
}

struct Engine_MAT_SetAnimWeights_Parms
{
	TArray<struct FAnimSlotInfo>                       SlotInfos;                                        		// 0x000000 (0x000C)              
};

void ASkeletalMeshActorMAT::MAT_SetAnimWeights(TArray<struct FAnimSlotInfo> SlotInfos)
{
	static UFieldFunc* pFnMAT_SetAnimWeights = NULL;
	if(!pFnMAT_SetAnimWeights)
		pFnMAT_SetAnimWeights = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.MAT_SetAnimWeights");

	Engine_MAT_SetAnimWeights_Parms MAT_SetAnimWeights_Parms;
	memcpy(&MAT_SetAnimWeights_Parms.SlotInfos,&SlotInfos,0xC);
	pFnMAT_SetAnimWeights->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMAT_SetAnimWeights,NULL,&MAT_SetAnimWeights_Parms,NULL);
	pFnMAT_SetAnimWeights->FunctionFlags |= 0x400;
}

struct Engine_FinishAnimControl_Parms
{
};

void ASkeletalMeshActorMAT::FinishAnimControl()
{
	static UFieldFunc* pFnFinishAnimControl = NULL;
	if(!pFnFinishAnimControl)
		pFnFinishAnimControl = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.FinishAnimControl");

	Engine_FinishAnimControl_Parms FinishAnimControl_Parms;
	ProcessEvent(pFnFinishAnimControl,NULL,&FinishAnimControl_Parms,NULL);
}

struct Engine_MAT_SetAnimPosition_Parms
{
	struct FName                                       SlotName;                                         		// 0x000000 (0x0008)              
	int                                                ChannelIndex;                                     		// 0x000008 (0x0004)              
	struct FName                                       InAnimSeqName;                                    		// 0x00000C (0x0008)              
	float                                              InPosition;                                       		// 0x000014 (0x0004)              
	unsigned long                                      bFireNotifies : 1;                                		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bLooping : 1;                                     		// 0x00001C (0x0004) [0x00000001] 
};

void ASkeletalMeshActorMAT::MAT_SetAnimPosition(struct FName SlotName,int ChannelIndex,struct FName InAnimSeqName,float InPosition,bool bFireNotifies,bool bLooping)
{
	static UFieldFunc* pFnMAT_SetAnimPosition = NULL;
	if(!pFnMAT_SetAnimPosition)
		pFnMAT_SetAnimPosition = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.MAT_SetAnimPosition");

	Engine_MAT_SetAnimPosition_Parms MAT_SetAnimPosition_Parms;
	memcpy(&MAT_SetAnimPosition_Parms.SlotName,&SlotName,0x8);
	MAT_SetAnimPosition_Parms.ChannelIndex = ChannelIndex;
	memcpy(&MAT_SetAnimPosition_Parms.InAnimSeqName,&InAnimSeqName,0x8);
	MAT_SetAnimPosition_Parms.InPosition = InPosition;
	MAT_SetAnimPosition_Parms.bFireNotifies = bFireNotifies;
	MAT_SetAnimPosition_Parms.bLooping = bLooping;
	pFnMAT_SetAnimPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMAT_SetAnimPosition,NULL,&MAT_SetAnimPosition_Parms,NULL);
	pFnMAT_SetAnimPosition->FunctionFlags |= 0x400;
}

struct Engine_SetSkelControlScale_Parms
{
	struct FName                                       SkelControlName;                                  		// 0x000000 (0x0008)              
	float                                              Scale;                                            		// 0x000008 (0x0004)              
};

void ASkeletalMeshActorMAT::SetSkelControlScale(struct FName SkelControlName,float Scale)
{
	static UFieldFunc* pFnSetSkelControlScale = NULL;
	if(!pFnSetSkelControlScale)
		pFnSetSkelControlScale = UObject::FindFunction("Function Engine.SkeletalMeshActorMAT.SetSkelControlScale");

	Engine_SetSkelControlScale_Parms SetSkelControlScale_Parms;
	memcpy(&SetSkelControlScale_Parms.SkelControlName,&SkelControlName,0x8);
	SetSkelControlScale_Parms.Scale = Scale;
	ProcessEvent(pFnSetSkelControlScale,NULL,&SetSkelControlScale_Parms,NULL);
}

struct Engine_StopAnim_Parms
{
};

void UAnimNode::StopAnim()
{
	static UFieldFunc* pFnStopAnim = NULL;
	if(!pFnStopAnim)
		pFnStopAnim = UObject::FindFunction("Function Engine.AnimNode.StopAnim");

	Engine_StopAnim_Parms StopAnim_Parms;
	pFnStopAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopAnim,NULL,&StopAnim_Parms,NULL);
	pFnStopAnim->FunctionFlags |= 0x400;
}

struct Engine_FindAnimNode_Parms
{
	struct FName                                       InNodeName;                                       		// 0x000000 (0x0008)              
	class UAnimNode*                                   ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UAnimNode* UAnimNode::FindAnimNode(struct FName InNodeName)
{
	static UFieldFunc* pFnFindAnimNode = NULL;
	if(!pFnFindAnimNode)
		pFnFindAnimNode = UObject::FindFunction("Function Engine.AnimNode.FindAnimNode");

	Engine_FindAnimNode_Parms FindAnimNode_Parms;
	memcpy(&FindAnimNode_Parms.InNodeName,&InNodeName,0x8);
	pFnFindAnimNode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindAnimNode,NULL,&FindAnimNode_Parms,NULL);
	pFnFindAnimNode->FunctionFlags |= 0x400;
	return FindAnimNode_Parms.ReturnValue;
}

struct Engine_PlayAnim_Parms
{
	unsigned long                                      bLoop : 1;                                        		// 0x000000 (0x0004) [0x00000001] 
	float                                              Rate;                                             		// 0x000004 (0x0004)              
	float                                              StartTime;                                        		// 0x000008 (0x0004)              
};

void UAnimNode::PlayAnim(bool bLoop,float Rate,float StartTime)
{
	static UFieldFunc* pFnPlayAnim = NULL;
	if(!pFnPlayAnim)
		pFnPlayAnim = UObject::FindFunction("Function Engine.AnimNode.PlayAnim");

	Engine_PlayAnim_Parms PlayAnim_Parms;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.Rate = Rate;
	PlayAnim_Parms.StartTime = StartTime;
	pFnPlayAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayAnim,NULL,&PlayAnim_Parms,NULL);
	pFnPlayAnim->FunctionFlags |= 0x400;
}

struct Engine_OnBecomeRelevant_Parms
{
};

void UAnimNode::OnBecomeRelevant()
{
	static UFieldFunc* pFnOnBecomeRelevant = NULL;
	if(!pFnOnBecomeRelevant)
		pFnOnBecomeRelevant = UObject::FindFunction("Function Engine.AnimNode.OnBecomeRelevant");

	Engine_OnBecomeRelevant_Parms OnBecomeRelevant_Parms;
	ProcessEvent(pFnOnBecomeRelevant,NULL,&OnBecomeRelevant_Parms,NULL);
}

struct Engine_OnCeaseRelevant_Parms
{
};

void UAnimNode::OnCeaseRelevant()
{
	static UFieldFunc* pFnOnCeaseRelevant = NULL;
	if(!pFnOnCeaseRelevant)
		pFnOnCeaseRelevant = UObject::FindFunction("Function Engine.AnimNode.OnCeaseRelevant");

	Engine_OnCeaseRelevant_Parms OnCeaseRelevant_Parms;
	ProcessEvent(pFnOnCeaseRelevant,NULL,&OnCeaseRelevant_Parms,NULL);
}

struct Engine_PlayAnim_Parms
{
	unsigned long                                      bLoop : 1;                                        		// 0x000000 (0x0004) [0x00000001] 
	float                                              Rate;                                             		// 0x000004 (0x0004)              
	float                                              StartTime;                                        		// 0x000008 (0x0004)              
};

void UAnimNodeBlendBase::PlayAnim(bool bLoop,float Rate,float StartTime)
{
	static UFieldFunc* pFnPlayAnim = NULL;
	if(!pFnPlayAnim)
		pFnPlayAnim = UObject::FindFunction("Function Engine.AnimNodeBlendBase.PlayAnim");

	Engine_PlayAnim_Parms PlayAnim_Parms;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.Rate = Rate;
	PlayAnim_Parms.StartTime = StartTime;
	pFnPlayAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayAnim,NULL,&PlayAnim_Parms,NULL);
	pFnPlayAnim->FunctionFlags |= 0x400;
}

struct Engine_StopAnim_Parms
{
};

void UAnimNodeBlendBase::StopAnim()
{
	static UFieldFunc* pFnStopAnim = NULL;
	if(!pFnStopAnim)
		pFnStopAnim = UObject::FindFunction("Function Engine.AnimNodeBlendBase.StopAnim");

	Engine_StopAnim_Parms StopAnim_Parms;
	pFnStopAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopAnim,NULL,&StopAnim_Parms,NULL);
	pFnStopAnim->FunctionFlags |= 0x400;
}

struct Engine_SetActiveProfileByIndex_Parms
{
	int                                                ProfileIndex;                                     		// 0x000000 (0x0004)              
};

void UAnimNodeAimOffset::SetActiveProfileByIndex(int ProfileIndex)
{
	static UFieldFunc* pFnSetActiveProfileByIndex = NULL;
	if(!pFnSetActiveProfileByIndex)
		pFnSetActiveProfileByIndex = UObject::FindFunction("Function Engine.AnimNodeAimOffset.SetActiveProfileByIndex");

	Engine_SetActiveProfileByIndex_Parms SetActiveProfileByIndex_Parms;
	SetActiveProfileByIndex_Parms.ProfileIndex = ProfileIndex;
	pFnSetActiveProfileByIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveProfileByIndex,NULL,&SetActiveProfileByIndex_Parms,NULL);
	pFnSetActiveProfileByIndex->FunctionFlags |= 0x400;
}

struct Engine_SetActiveProfileByName_Parms
{
	struct FName                                       ProfileName;                                      		// 0x000000 (0x0008)              
};

void UAnimNodeAimOffset::SetActiveProfileByName(struct FName ProfileName)
{
	static UFieldFunc* pFnSetActiveProfileByName = NULL;
	if(!pFnSetActiveProfileByName)
		pFnSetActiveProfileByName = UObject::FindFunction("Function Engine.AnimNodeAimOffset.SetActiveProfileByName");

	Engine_SetActiveProfileByName_Parms SetActiveProfileByName_Parms;
	memcpy(&SetActiveProfileByName_Parms.ProfileName,&ProfileName,0x8);
	pFnSetActiveProfileByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveProfileByName,NULL,&SetActiveProfileByName_Parms,NULL);
	pFnSetActiveProfileByName->FunctionFlags |= 0x400;
}

struct Engine_SetBlendTarget_Parms
{
	float                                              BlendTarget;                                      		// 0x000000 (0x0004)              
	float                                              BlendTime;                                        		// 0x000004 (0x0004)              
};

void UAnimNodeBlend::SetBlendTarget(float BlendTarget,float BlendTime)
{
	static UFieldFunc* pFnSetBlendTarget = NULL;
	if(!pFnSetBlendTarget)
		pFnSetBlendTarget = UObject::FindFunction("Function Engine.AnimNodeBlend.SetBlendTarget");

	Engine_SetBlendTarget_Parms SetBlendTarget_Parms;
	SetBlendTarget_Parms.BlendTarget = BlendTarget;
	SetBlendTarget_Parms.BlendTime = BlendTime;
	pFnSetBlendTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBlendTarget,NULL,&SetBlendTarget_Parms,NULL);
	pFnSetBlendTarget->FunctionFlags |= 0x400;
}

struct Engine_PlayOneShotAnim_Parms
{
	struct FName                                       AnimSeqName;                                      		// 0x000000 (0x0008)              
	float                                              BlendInTime;                                      		// 0x000008 (0x0004)              
	float                                              BlendOutTime;                                     		// 0x00000C (0x0004)              
	unsigned long                                      bDontBlendOut : 1;                                		// 0x000010 (0x0004) [0x00000001] 
	float                                              Rate;                                             		// 0x000014 (0x0004)              
};

void UAnimNodeCrossfader::PlayOneShotAnim(struct FName AnimSeqName,float BlendInTime,float BlendOutTime,bool bDontBlendOut,float Rate)
{
	static UFieldFunc* pFnPlayOneShotAnim = NULL;
	if(!pFnPlayOneShotAnim)
		pFnPlayOneShotAnim = UObject::FindFunction("Function Engine.AnimNodeCrossfader.PlayOneShotAnim");

	Engine_PlayOneShotAnim_Parms PlayOneShotAnim_Parms;
	memcpy(&PlayOneShotAnim_Parms.AnimSeqName,&AnimSeqName,0x8);
	PlayOneShotAnim_Parms.BlendInTime = BlendInTime;
	PlayOneShotAnim_Parms.BlendOutTime = BlendOutTime;
	PlayOneShotAnim_Parms.bDontBlendOut = bDontBlendOut;
	PlayOneShotAnim_Parms.Rate = Rate;
	pFnPlayOneShotAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayOneShotAnim,NULL,&PlayOneShotAnim_Parms,NULL);
	pFnPlayOneShotAnim->FunctionFlags |= 0x400;
}

struct Engine_BlendToLoopingAnim_Parms
{
	struct FName                                       AnimSeqName;                                      		// 0x000000 (0x0008)              
	float                                              BlendInTime;                                      		// 0x000008 (0x0004)              
	float                                              Rate;                                             		// 0x00000C (0x0004)              
};

void UAnimNodeCrossfader::BlendToLoopingAnim(struct FName AnimSeqName,float BlendInTime,float Rate)
{
	static UFieldFunc* pFnBlendToLoopingAnim = NULL;
	if(!pFnBlendToLoopingAnim)
		pFnBlendToLoopingAnim = UObject::FindFunction("Function Engine.AnimNodeCrossfader.BlendToLoopingAnim");

	Engine_BlendToLoopingAnim_Parms BlendToLoopingAnim_Parms;
	memcpy(&BlendToLoopingAnim_Parms.AnimSeqName,&AnimSeqName,0x8);
	BlendToLoopingAnim_Parms.BlendInTime = BlendInTime;
	BlendToLoopingAnim_Parms.Rate = Rate;
	pFnBlendToLoopingAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBlendToLoopingAnim,NULL,&BlendToLoopingAnim_Parms,NULL);
	pFnBlendToLoopingAnim->FunctionFlags |= 0x400;
}

struct Engine_GetAnimName_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName UAnimNodeCrossfader::GetAnimName()
{
	static UFieldFunc* pFnGetAnimName = NULL;
	if(!pFnGetAnimName)
		pFnGetAnimName = UObject::FindFunction("Function Engine.AnimNodeCrossfader.GetAnimName");

	Engine_GetAnimName_Parms GetAnimName_Parms;
	pFnGetAnimName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAnimName,NULL,&GetAnimName_Parms,NULL);
	pFnGetAnimName->FunctionFlags |= 0x400;
	return GetAnimName_Parms.ReturnValue;
}

struct Engine_GetActiveChild_Parms
{
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAnimNodeSequence* UAnimNodeCrossfader::GetActiveChild()
{
	static UFieldFunc* pFnGetActiveChild = NULL;
	if(!pFnGetActiveChild)
		pFnGetActiveChild = UObject::FindFunction("Function Engine.AnimNodeCrossfader.GetActiveChild");

	Engine_GetActiveChild_Parms GetActiveChild_Parms;
	pFnGetActiveChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActiveChild,NULL,&GetActiveChild_Parms,NULL);
	pFnGetActiveChild->FunctionFlags |= 0x400;
	return GetActiveChild_Parms.ReturnValue;
}

struct Engine_StopCustomAnim_Parms
{
	float                                              BlendOutTime;                                     		// 0x000000 (0x0004)              
};

void UAnimNodePlayCustomAnim::StopCustomAnim(float BlendOutTime)
{
	static UFieldFunc* pFnStopCustomAnim = NULL;
	if(!pFnStopCustomAnim)
		pFnStopCustomAnim = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.StopCustomAnim");

	Engine_StopCustomAnim_Parms StopCustomAnim_Parms;
	StopCustomAnim_Parms.BlendOutTime = BlendOutTime;
	pFnStopCustomAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopCustomAnim,NULL,&StopCustomAnim_Parms,NULL);
	pFnStopCustomAnim->FunctionFlags |= 0x400;
}

struct Engine_PlayCustomAnimByDuration_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	float                                              Duration;                                         		// 0x000008 (0x0004)              
	float                                              BlendInTime;                                      		// 0x00000C (0x0004)              
	float                                              BlendOutTime;                                     		// 0x000010 (0x0004)              
	unsigned long                                      bLooping : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bOverride : 1;                                    		// 0x000018 (0x0004) [0x00000001] 
};

void UAnimNodePlayCustomAnim::PlayCustomAnimByDuration(struct FName AnimName,float Duration,float BlendInTime,float BlendOutTime,bool bLooping,bool bOverride)
{
	static UFieldFunc* pFnPlayCustomAnimByDuration = NULL;
	if(!pFnPlayCustomAnimByDuration)
		pFnPlayCustomAnimByDuration = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.PlayCustomAnimByDuration");

	Engine_PlayCustomAnimByDuration_Parms PlayCustomAnimByDuration_Parms;
	memcpy(&PlayCustomAnimByDuration_Parms.AnimName,&AnimName,0x8);
	PlayCustomAnimByDuration_Parms.Duration = Duration;
	PlayCustomAnimByDuration_Parms.BlendInTime = BlendInTime;
	PlayCustomAnimByDuration_Parms.BlendOutTime = BlendOutTime;
	PlayCustomAnimByDuration_Parms.bLooping = bLooping;
	PlayCustomAnimByDuration_Parms.bOverride = bOverride;
	pFnPlayCustomAnimByDuration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayCustomAnimByDuration,NULL,&PlayCustomAnimByDuration_Parms,NULL);
	pFnPlayCustomAnimByDuration->FunctionFlags |= 0x400;
}

struct Engine_SetRootBoneAxisOption_Parms
{
	unsigned char                                      AxisX;                                            		// 0x000000 (0x0001)              
	unsigned char                                      AxisY;                                            		// 0x000001 (0x0001)              
	unsigned char                                      AxisZ;                                            		// 0x000002 (0x0001)              
	unsigned char                                      _0x000003[0x1];                                   		// 0x000003 (0x0001) ALIGNEMENT
	//class UAnimNodeSequence*                           AnimSeq;                                          		// 0x000004 (0x0004)              
};

void UAnimNodePlayCustomAnim::SetRootBoneAxisOption(unsigned char AxisX,unsigned char AxisY,unsigned char AxisZ)
{
	static UFieldFunc* pFnSetRootBoneAxisOption = NULL;
	if(!pFnSetRootBoneAxisOption)
		pFnSetRootBoneAxisOption = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.SetRootBoneAxisOption");

	Engine_SetRootBoneAxisOption_Parms SetRootBoneAxisOption_Parms;
	SetRootBoneAxisOption_Parms.AxisX = AxisX;
	SetRootBoneAxisOption_Parms.AxisY = AxisY;
	SetRootBoneAxisOption_Parms.AxisZ = AxisZ;
	ProcessEvent(pFnSetRootBoneAxisOption,NULL,&SetRootBoneAxisOption_Parms,NULL);
}

struct Engine_SetCustomAnim_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	//class UAnimNodeSequence*                           SeqNode;                                          		// 0x000008 (0x0004)              
};

void UAnimNodePlayCustomAnim::SetCustomAnim(struct FName AnimName)
{
	static UFieldFunc* pFnSetCustomAnim = NULL;
	if(!pFnSetCustomAnim)
		pFnSetCustomAnim = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.SetCustomAnim");

	Engine_SetCustomAnim_Parms SetCustomAnim_Parms;
	memcpy(&SetCustomAnim_Parms.AnimName,&AnimName,0x8);
	ProcessEvent(pFnSetCustomAnim,NULL,&SetCustomAnim_Parms,NULL);
}

struct Engine_PlayCustomAnim_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	float                                              Rate;                                             		// 0x000008 (0x0004)              
	float                                              BlendInTime;                                      		// 0x00000C (0x0004)              
	float                                              BlendOutTime;                                     		// 0x000010 (0x0004)              
	unsigned long                                      bLooping : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bOverride : 1;                                    		// 0x000018 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x00001C (0x0004)              
};

float UAnimNodePlayCustomAnim::PlayCustomAnim(struct FName AnimName,float Rate,float BlendInTime,float BlendOutTime,bool bLooping,bool bOverride)
{
	static UFieldFunc* pFnPlayCustomAnim = NULL;
	if(!pFnPlayCustomAnim)
		pFnPlayCustomAnim = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.PlayCustomAnim");

	Engine_PlayCustomAnim_Parms PlayCustomAnim_Parms;
	memcpy(&PlayCustomAnim_Parms.AnimName,&AnimName,0x8);
	PlayCustomAnim_Parms.Rate = Rate;
	PlayCustomAnim_Parms.BlendInTime = BlendInTime;
	PlayCustomAnim_Parms.BlendOutTime = BlendOutTime;
	PlayCustomAnim_Parms.bLooping = bLooping;
	PlayCustomAnim_Parms.bOverride = bOverride;
	pFnPlayCustomAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayCustomAnim,NULL,&PlayCustomAnim_Parms,NULL);
	pFnPlayCustomAnim->FunctionFlags |= 0x400;
	return PlayCustomAnim_Parms.ReturnValue;
}

struct Engine_GetCustomAnimNodeSeq_Parms
{
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAnimNodeSequence* UAnimNodePlayCustomAnim::GetCustomAnimNodeSeq()
{
	static UFieldFunc* pFnGetCustomAnimNodeSeq = NULL;
	if(!pFnGetCustomAnimNodeSeq)
		pFnGetCustomAnimNodeSeq = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.GetCustomAnimNodeSeq");

	Engine_GetCustomAnimNodeSeq_Parms GetCustomAnimNodeSeq_Parms;
	pFnGetCustomAnimNodeSeq->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCustomAnimNodeSeq,NULL,&GetCustomAnimNodeSeq_Parms,NULL);
	pFnGetCustomAnimNodeSeq->FunctionFlags |= 0x400;
	return GetCustomAnimNodeSeq_Parms.ReturnValue;
}

struct Engine_SetActorAnimEndNotification_Parms
{
	unsigned long                                      bNewStatus : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
	//class UAnimNodeSequence*                           SeqNode;                                          		// 0x000004 (0x0004)              
};

void UAnimNodePlayCustomAnim::SetActorAnimEndNotification(bool bNewStatus)
{
	static UFieldFunc* pFnSetActorAnimEndNotification = NULL;
	if(!pFnSetActorAnimEndNotification)
		pFnSetActorAnimEndNotification = UObject::FindFunction("Function Engine.AnimNodePlayCustomAnim.SetActorAnimEndNotification");

	Engine_SetActorAnimEndNotification_Parms SetActorAnimEndNotification_Parms;
	SetActorAnimEndNotification_Parms.bNewStatus = bNewStatus;
	ProcessEvent(pFnSetActorAnimEndNotification,NULL,&SetActorAnimEndNotification_Parms,NULL);
}

struct Engine_SetActiveChild_Parms
{
	int                                                ChildIndex;                                       		// 0x000000 (0x0004)              
	float                                              BlendTime;                                        		// 0x000004 (0x0004)              
};

void UAnimNodeBlendList::SetActiveChild(int ChildIndex,float BlendTime)
{
	static UFieldFunc* pFnSetActiveChild = NULL;
	if(!pFnSetActiveChild)
		pFnSetActiveChild = UObject::FindFunction("Function Engine.AnimNodeBlendList.SetActiveChild");

	Engine_SetActiveChild_Parms SetActiveChild_Parms;
	SetActiveChild_Parms.ChildIndex = ChildIndex;
	SetActiveChild_Parms.BlendTime = BlendTime;
	pFnSetActiveChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveChild,NULL,&SetActiveChild_Parms,NULL);
	pFnSetActiveChild->FunctionFlags |= 0x400;
}

struct Engine_SetTargetStartBone_Parms
{
	int                                                TargetIdx;                                        		// 0x000000 (0x0004)              
	struct FName                                       StartBoneName;                                    		// 0x000004 (0x0008)              
	float                                              PerBoneIncrease;                                  		// 0x00000C (0x0004)              
};

void UAnimNodeBlendMultiBone::SetTargetStartBone(int TargetIdx,struct FName StartBoneName,float PerBoneIncrease)
{
	static UFieldFunc* pFnSetTargetStartBone = NULL;
	if(!pFnSetTargetStartBone)
		pFnSetTargetStartBone = UObject::FindFunction("Function Engine.AnimNodeBlendMultiBone.SetTargetStartBone");

	Engine_SetTargetStartBone_Parms SetTargetStartBone_Parms;
	SetTargetStartBone_Parms.TargetIdx = TargetIdx;
	memcpy(&SetTargetStartBone_Parms.StartBoneName,&StartBoneName,0x8);
	SetTargetStartBone_Parms.PerBoneIncrease = PerBoneIncrease;
	pFnSetTargetStartBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTargetStartBone,NULL,&SetTargetStartBone_Parms,NULL);
	pFnSetTargetStartBone->FunctionFlags |= 0x400;
}

struct Engine_GetCustomAnimNodeSeq_Parms
{
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAnimNodeSequence* UAnimNodeSlot::GetCustomAnimNodeSeq()
{
	static UFieldFunc* pFnGetCustomAnimNodeSeq = NULL;
	if(!pFnGetCustomAnimNodeSeq)
		pFnGetCustomAnimNodeSeq = UObject::FindFunction("Function Engine.AnimNodeSlot.GetCustomAnimNodeSeq");

	Engine_GetCustomAnimNodeSeq_Parms GetCustomAnimNodeSeq_Parms;
	pFnGetCustomAnimNodeSeq->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCustomAnimNodeSeq,NULL,&GetCustomAnimNodeSeq_Parms,NULL);
	pFnGetCustomAnimNodeSeq->FunctionFlags |= 0x400;
	return GetCustomAnimNodeSeq_Parms.ReturnValue;
}

struct Engine_SetActorAnimEndNotification_Parms
{
	unsigned long                                      bNewStatus : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UAnimNodeSlot::SetActorAnimEndNotification(bool bNewStatus)
{
	static UFieldFunc* pFnSetActorAnimEndNotification = NULL;
	if(!pFnSetActorAnimEndNotification)
		pFnSetActorAnimEndNotification = UObject::FindFunction("Function Engine.AnimNodeSlot.SetActorAnimEndNotification");

	Engine_SetActorAnimEndNotification_Parms SetActorAnimEndNotification_Parms;
	SetActorAnimEndNotification_Parms.bNewStatus = bNewStatus;
	pFnSetActorAnimEndNotification->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActorAnimEndNotification,NULL,&SetActorAnimEndNotification_Parms,NULL);
	pFnSetActorAnimEndNotification->FunctionFlags |= 0x400;
}

struct Engine_StopCustomAnim_Parms
{
	float                                              BlendOutTime;                                     		// 0x000000 (0x0004)              
};

void UAnimNodeSlot::StopCustomAnim(float BlendOutTime)
{
	static UFieldFunc* pFnStopCustomAnim = NULL;
	if(!pFnStopCustomAnim)
		pFnStopCustomAnim = UObject::FindFunction("Function Engine.AnimNodeSlot.StopCustomAnim");

	Engine_StopCustomAnim_Parms StopCustomAnim_Parms;
	StopCustomAnim_Parms.BlendOutTime = BlendOutTime;
	pFnStopCustomAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopCustomAnim,NULL,&StopCustomAnim_Parms,NULL);
	pFnStopCustomAnim->FunctionFlags |= 0x400;
}

struct Engine_PlayCustomAnim_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	float                                              Rate;                                             		// 0x000008 (0x0004)              
	float                                              BlendInTime;                                      		// 0x00000C (0x0004)              
	float                                              BlendOutTime;                                     		// 0x000010 (0x0004)              
	unsigned long                                      bLooping : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bOverride : 1;                                    		// 0x000018 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x00001C (0x0004)              
};

float UAnimNodeSlot::PlayCustomAnim(struct FName AnimName,float Rate,float BlendInTime,float BlendOutTime,bool bLooping,bool bOverride)
{
	static UFieldFunc* pFnPlayCustomAnim = NULL;
	if(!pFnPlayCustomAnim)
		pFnPlayCustomAnim = UObject::FindFunction("Function Engine.AnimNodeSlot.PlayCustomAnim");

	Engine_PlayCustomAnim_Parms PlayCustomAnim_Parms;
	memcpy(&PlayCustomAnim_Parms.AnimName,&AnimName,0x8);
	PlayCustomAnim_Parms.Rate = Rate;
	PlayCustomAnim_Parms.BlendInTime = BlendInTime;
	PlayCustomAnim_Parms.BlendOutTime = BlendOutTime;
	PlayCustomAnim_Parms.bLooping = bLooping;
	PlayCustomAnim_Parms.bOverride = bOverride;
	pFnPlayCustomAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayCustomAnim,NULL,&PlayCustomAnim_Parms,NULL);
	pFnPlayCustomAnim->FunctionFlags |= 0x400;
	return PlayCustomAnim_Parms.ReturnValue;
}

struct Engine_SetCustomAnim_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
};

void UAnimNodeSlot::SetCustomAnim(struct FName AnimName)
{
	static UFieldFunc* pFnSetCustomAnim = NULL;
	if(!pFnSetCustomAnim)
		pFnSetCustomAnim = UObject::FindFunction("Function Engine.AnimNodeSlot.SetCustomAnim");

	Engine_SetCustomAnim_Parms SetCustomAnim_Parms;
	memcpy(&SetCustomAnim_Parms.AnimName,&AnimName,0x8);
	pFnSetCustomAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCustomAnim,NULL,&SetCustomAnim_Parms,NULL);
	pFnSetCustomAnim->FunctionFlags |= 0x400;
}

struct Engine_PlayCustomAnimByDuration_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	float                                              Duration;                                         		// 0x000008 (0x0004)              
	float                                              BlendInTime;                                      		// 0x00000C (0x0004)              
	float                                              BlendOutTime;                                     		// 0x000010 (0x0004)              
	unsigned long                                      bLooping : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      bOverride : 1;                                    		// 0x000018 (0x0004) [0x00000001] 
};

void UAnimNodeSlot::PlayCustomAnimByDuration(struct FName AnimName,float Duration,float BlendInTime,float BlendOutTime,bool bLooping,bool bOverride)
{
	static UFieldFunc* pFnPlayCustomAnimByDuration = NULL;
	if(!pFnPlayCustomAnimByDuration)
		pFnPlayCustomAnimByDuration = UObject::FindFunction("Function Engine.AnimNodeSlot.PlayCustomAnimByDuration");

	Engine_PlayCustomAnimByDuration_Parms PlayCustomAnimByDuration_Parms;
	memcpy(&PlayCustomAnimByDuration_Parms.AnimName,&AnimName,0x8);
	PlayCustomAnimByDuration_Parms.Duration = Duration;
	PlayCustomAnimByDuration_Parms.BlendInTime = BlendInTime;
	PlayCustomAnimByDuration_Parms.BlendOutTime = BlendOutTime;
	PlayCustomAnimByDuration_Parms.bLooping = bLooping;
	PlayCustomAnimByDuration_Parms.bOverride = bOverride;
	pFnPlayCustomAnimByDuration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayCustomAnimByDuration,NULL,&PlayCustomAnimByDuration_Parms,NULL);
	pFnPlayCustomAnimByDuration->FunctionFlags |= 0x400;
}

struct Engine_SetRootBoneAxisOption_Parms
{
	unsigned char                                      AxisX;                                            		// 0x000000 (0x0001)              
	unsigned char                                      AxisY;                                            		// 0x000001 (0x0001)              
	unsigned char                                      AxisZ;                                            		// 0x000002 (0x0001)              
};

void UAnimNodeSlot::SetRootBoneAxisOption(unsigned char AxisX,unsigned char AxisY,unsigned char AxisZ)
{
	static UFieldFunc* pFnSetRootBoneAxisOption = NULL;
	if(!pFnSetRootBoneAxisOption)
		pFnSetRootBoneAxisOption = UObject::FindFunction("Function Engine.AnimNodeSlot.SetRootBoneAxisOption");

	Engine_SetRootBoneAxisOption_Parms SetRootBoneAxisOption_Parms;
	SetRootBoneAxisOption_Parms.AxisX = AxisX;
	SetRootBoneAxisOption_Parms.AxisY = AxisY;
	SetRootBoneAxisOption_Parms.AxisZ = AxisZ;
	pFnSetRootBoneAxisOption->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRootBoneAxisOption,NULL,&SetRootBoneAxisOption_Parms,NULL);
	pFnSetRootBoneAxisOption->FunctionFlags |= 0x400;
}

struct Engine_AddToSynchGroup_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
};

void UAnimNodeSlot::AddToSynchGroup(struct FName GroupName)
{
	static UFieldFunc* pFnAddToSynchGroup = NULL;
	if(!pFnAddToSynchGroup)
		pFnAddToSynchGroup = UObject::FindFunction("Function Engine.AnimNodeSlot.AddToSynchGroup");

	Engine_AddToSynchGroup_Parms AddToSynchGroup_Parms;
	memcpy(&AddToSynchGroup_Parms.GroupName,&GroupName,0x8);
	pFnAddToSynchGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddToSynchGroup,NULL,&AddToSynchGroup_Parms,NULL);
	pFnAddToSynchGroup->FunctionFlags |= 0x400;
}

struct Engine_GetPlayedAnimation_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName UAnimNodeSlot::GetPlayedAnimation()
{
	static UFieldFunc* pFnGetPlayedAnimation = NULL;
	if(!pFnGetPlayedAnimation)
		pFnGetPlayedAnimation = UObject::FindFunction("Function Engine.AnimNodeSlot.GetPlayedAnimation");

	Engine_GetPlayedAnimation_Parms GetPlayedAnimation_Parms;
	pFnGetPlayedAnimation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayedAnimation,NULL,&GetPlayedAnimation_Parms,NULL);
	pFnGetPlayedAnimation->FunctionFlags |= 0x400;
	return GetPlayedAnimation_Parms.ReturnValue;
}

struct Engine_GetMasterNodeOfGroup_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UAnimNodeSequence* UAnimNodeSynch::GetMasterNodeOfGroup(struct FName GroupName)
{
	static UFieldFunc* pFnGetMasterNodeOfGroup = NULL;
	if(!pFnGetMasterNodeOfGroup)
		pFnGetMasterNodeOfGroup = UObject::FindFunction("Function Engine.AnimNodeSynch.GetMasterNodeOfGroup");

	Engine_GetMasterNodeOfGroup_Parms GetMasterNodeOfGroup_Parms;
	memcpy(&GetMasterNodeOfGroup_Parms.GroupName,&GroupName,0x8);
	pFnGetMasterNodeOfGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMasterNodeOfGroup,NULL,&GetMasterNodeOfGroup_Parms,NULL);
	pFnGetMasterNodeOfGroup->FunctionFlags |= 0x400;
	return GetMasterNodeOfGroup_Parms.ReturnValue;
}

struct Engine_ForceRelativePosition_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              RelativePosition;                                 		// 0x000008 (0x0004)              
};

void UAnimNodeSynch::ForceRelativePosition(struct FName GroupName,float RelativePosition)
{
	static UFieldFunc* pFnForceRelativePosition = NULL;
	if(!pFnForceRelativePosition)
		pFnForceRelativePosition = UObject::FindFunction("Function Engine.AnimNodeSynch.ForceRelativePosition");

	Engine_ForceRelativePosition_Parms ForceRelativePosition_Parms;
	memcpy(&ForceRelativePosition_Parms.GroupName,&GroupName,0x8);
	ForceRelativePosition_Parms.RelativePosition = RelativePosition;
	pFnForceRelativePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceRelativePosition,NULL,&ForceRelativePosition_Parms,NULL);
	pFnForceRelativePosition->FunctionFlags |= 0x400;
}

struct Engine_RemoveNodeFromGroup_Parms
{
	class UAnimNodeSequence*                           SeqNode;                                          		// 0x000000 (0x0004)              
	struct FName                                       GroupName;                                        		// 0x000004 (0x0008)              
};

void UAnimNodeSynch::RemoveNodeFromGroup(class UAnimNodeSequence* SeqNode,struct FName GroupName)
{
	static UFieldFunc* pFnRemoveNodeFromGroup = NULL;
	if(!pFnRemoveNodeFromGroup)
		pFnRemoveNodeFromGroup = UObject::FindFunction("Function Engine.AnimNodeSynch.RemoveNodeFromGroup");

	Engine_RemoveNodeFromGroup_Parms RemoveNodeFromGroup_Parms;
	RemoveNodeFromGroup_Parms.SeqNode = SeqNode;
	memcpy(&RemoveNodeFromGroup_Parms.GroupName,&GroupName,0x8);
	pFnRemoveNodeFromGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveNodeFromGroup,NULL,&RemoveNodeFromGroup_Parms,NULL);
	pFnRemoveNodeFromGroup->FunctionFlags |= 0x400;
}

struct Engine_AddNodeToGroup_Parms
{
	class UAnimNodeSequence*                           SeqNode;                                          		// 0x000000 (0x0004)              
	struct FName                                       GroupName;                                        		// 0x000004 (0x0008)              
};

void UAnimNodeSynch::AddNodeToGroup(class UAnimNodeSequence* SeqNode,struct FName GroupName)
{
	static UFieldFunc* pFnAddNodeToGroup = NULL;
	if(!pFnAddNodeToGroup)
		pFnAddNodeToGroup = UObject::FindFunction("Function Engine.AnimNodeSynch.AddNodeToGroup");

	Engine_AddNodeToGroup_Parms AddNodeToGroup_Parms;
	AddNodeToGroup_Parms.SeqNode = SeqNode;
	memcpy(&AddNodeToGroup_Parms.GroupName,&GroupName,0x8);
	pFnAddNodeToGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddNodeToGroup,NULL,&AddNodeToGroup_Parms,NULL);
	pFnAddNodeToGroup->FunctionFlags |= 0x400;
}

struct Engine_GetRelativePosition_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float UAnimNodeSynch::GetRelativePosition(struct FName GroupName)
{
	static UFieldFunc* pFnGetRelativePosition = NULL;
	if(!pFnGetRelativePosition)
		pFnGetRelativePosition = UObject::FindFunction("Function Engine.AnimNodeSynch.GetRelativePosition");

	Engine_GetRelativePosition_Parms GetRelativePosition_Parms;
	memcpy(&GetRelativePosition_Parms.GroupName,&GroupName,0x8);
	pFnGetRelativePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRelativePosition,NULL,&GetRelativePosition_Parms,NULL);
	pFnGetRelativePosition->FunctionFlags |= 0x400;
	return GetRelativePosition_Parms.ReturnValue;
}

struct Engine_SetGroupRateScale_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              NewRateScale;                                     		// 0x000008 (0x0004)              
};

void UAnimNodeSynch::SetGroupRateScale(struct FName GroupName,float NewRateScale)
{
	static UFieldFunc* pFnSetGroupRateScale = NULL;
	if(!pFnSetGroupRateScale)
		pFnSetGroupRateScale = UObject::FindFunction("Function Engine.AnimNodeSynch.SetGroupRateScale");

	Engine_SetGroupRateScale_Parms SetGroupRateScale_Parms;
	memcpy(&SetGroupRateScale_Parms.GroupName,&GroupName,0x8);
	SetGroupRateScale_Parms.NewRateScale = NewRateScale;
	pFnSetGroupRateScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetGroupRateScale,NULL,&SetGroupRateScale_Parms,NULL);
	pFnSetGroupRateScale->FunctionFlags |= 0x400;
}

struct Engine_GetGroupNotifyMaster_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UAnimNodeSequence* UAnimTree::GetGroupNotifyMaster(struct FName GroupName)
{
	static UFieldFunc* pFnGetGroupNotifyMaster = NULL;
	if(!pFnGetGroupNotifyMaster)
		pFnGetGroupNotifyMaster = UObject::FindFunction("Function Engine.AnimTree.GetGroupNotifyMaster");

	Engine_GetGroupNotifyMaster_Parms GetGroupNotifyMaster_Parms;
	memcpy(&GetGroupNotifyMaster_Parms.GroupName,&GroupName,0x8);
	pFnGetGroupNotifyMaster->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGroupNotifyMaster,NULL,&GetGroupNotifyMaster_Parms,NULL);
	pFnGetGroupNotifyMaster->FunctionFlags |= 0x400;
	return GetGroupNotifyMaster_Parms.ReturnValue;
}

struct Engine_FindConfigureNode_Parms
{
	struct FName                                       sNodeName;                                        		// 0x000000 (0x0008)              
	class UcAnimConfigureNode*                         ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UcAnimConfigureNode* UAnimTree::FindConfigureNode(struct FName sNodeName)
{
	static UFieldFunc* pFnFindConfigureNode = NULL;
	if(!pFnFindConfigureNode)
		pFnFindConfigureNode = UObject::FindFunction("Function Engine.AnimTree.FindConfigureNode");

	Engine_FindConfigureNode_Parms FindConfigureNode_Parms;
	memcpy(&FindConfigureNode_Parms.sNodeName,&sNodeName,0x8);
	pFnFindConfigureNode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindConfigureNode,NULL,&FindConfigureNode_Parms,NULL);
	pFnFindConfigureNode->FunctionFlags |= 0x400;
	return FindConfigureNode_Parms.ReturnValue;
}

struct Engine_SetAnimGroupForNode_Parms
{
	class UAnimNodeSequence*                           SeqNode;                                          		// 0x000000 (0x0004)              
	struct FName                                       GroupName;                                        		// 0x000004 (0x0008)              
	unsigned long                                      bCreateIfNotFound : 1;                            		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UAnimTree::SetAnimGroupForNode(class UAnimNodeSequence* SeqNode,struct FName GroupName,bool bCreateIfNotFound)
{
	static UFieldFunc* pFnSetAnimGroupForNode = NULL;
	if(!pFnSetAnimGroupForNode)
		pFnSetAnimGroupForNode = UObject::FindFunction("Function Engine.AnimTree.SetAnimGroupForNode");

	Engine_SetAnimGroupForNode_Parms SetAnimGroupForNode_Parms;
	SetAnimGroupForNode_Parms.SeqNode = SeqNode;
	memcpy(&SetAnimGroupForNode_Parms.GroupName,&GroupName,0x8);
	SetAnimGroupForNode_Parms.bCreateIfNotFound = bCreateIfNotFound;
	pFnSetAnimGroupForNode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAnimGroupForNode,NULL,&SetAnimGroupForNode_Parms,NULL);
	pFnSetAnimGroupForNode->FunctionFlags |= 0x400;
	return SetAnimGroupForNode_Parms.ReturnValue;
}

struct Engine_GetGroupIndex_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UAnimTree::GetGroupIndex(struct FName GroupName)
{
	static UFieldFunc* pFnGetGroupIndex = NULL;
	if(!pFnGetGroupIndex)
		pFnGetGroupIndex = UObject::FindFunction("Function Engine.AnimTree.GetGroupIndex");

	Engine_GetGroupIndex_Parms GetGroupIndex_Parms;
	memcpy(&GetGroupIndex_Parms.GroupName,&GroupName,0x8);
	pFnGetGroupIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGroupIndex,NULL,&GetGroupIndex_Parms,NULL);
	pFnGetGroupIndex->FunctionFlags |= 0x400;
	return GetGroupIndex_Parms.ReturnValue;
}

struct Engine_SetGroupRateScale_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              NewRateScale;                                     		// 0x000008 (0x0004)              
};

void UAnimTree::SetGroupRateScale(struct FName GroupName,float NewRateScale)
{
	static UFieldFunc* pFnSetGroupRateScale = NULL;
	if(!pFnSetGroupRateScale)
		pFnSetGroupRateScale = UObject::FindFunction("Function Engine.AnimTree.SetGroupRateScale");

	Engine_SetGroupRateScale_Parms SetGroupRateScale_Parms;
	memcpy(&SetGroupRateScale_Parms.GroupName,&GroupName,0x8);
	SetGroupRateScale_Parms.NewRateScale = NewRateScale;
	pFnSetGroupRateScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetGroupRateScale,NULL,&SetGroupRateScale_Parms,NULL);
	pFnSetGroupRateScale->FunctionFlags |= 0x400;
}

struct Engine_GetGroupRelativePosition_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float UAnimTree::GetGroupRelativePosition(struct FName GroupName)
{
	static UFieldFunc* pFnGetGroupRelativePosition = NULL;
	if(!pFnGetGroupRelativePosition)
		pFnGetGroupRelativePosition = UObject::FindFunction("Function Engine.AnimTree.GetGroupRelativePosition");

	Engine_GetGroupRelativePosition_Parms GetGroupRelativePosition_Parms;
	memcpy(&GetGroupRelativePosition_Parms.GroupName,&GroupName,0x8);
	pFnGetGroupRelativePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGroupRelativePosition,NULL,&GetGroupRelativePosition_Parms,NULL);
	pFnGetGroupRelativePosition->FunctionFlags |= 0x400;
	return GetGroupRelativePosition_Parms.ReturnValue;
}

struct Engine_FindMorphNode_Parms
{
	struct FName                                       InNodeName;                                       		// 0x000000 (0x0008)              
	class UMorphNodeBase*                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UMorphNodeBase* UAnimTree::FindMorphNode(struct FName InNodeName)
{
	static UFieldFunc* pFnFindMorphNode = NULL;
	if(!pFnFindMorphNode)
		pFnFindMorphNode = UObject::FindFunction("Function Engine.AnimTree.FindMorphNode");

	Engine_FindMorphNode_Parms FindMorphNode_Parms;
	memcpy(&FindMorphNode_Parms.InNodeName,&InNodeName,0x8);
	pFnFindMorphNode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindMorphNode,NULL,&FindMorphNode_Parms,NULL);
	pFnFindMorphNode->FunctionFlags |= 0x400;
	return FindMorphNode_Parms.ReturnValue;
}

struct Engine_GetGroupSynchMaster_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	class UAnimNodeSequence*                           ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UAnimNodeSequence* UAnimTree::GetGroupSynchMaster(struct FName GroupName)
{
	static UFieldFunc* pFnGetGroupSynchMaster = NULL;
	if(!pFnGetGroupSynchMaster)
		pFnGetGroupSynchMaster = UObject::FindFunction("Function Engine.AnimTree.GetGroupSynchMaster");

	Engine_GetGroupSynchMaster_Parms GetGroupSynchMaster_Parms;
	memcpy(&GetGroupSynchMaster_Parms.GroupName,&GroupName,0x8);
	pFnGetGroupSynchMaster->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGroupSynchMaster,NULL,&GetGroupSynchMaster_Parms,NULL);
	pFnGetGroupSynchMaster->FunctionFlags |= 0x400;
	return GetGroupSynchMaster_Parms.ReturnValue;
}

struct Engine_FindSkelControl_Parms
{
	struct FName                                       InControlName;                                    		// 0x000000 (0x0008)              
	class USkelControlBase*                            ReturnValue;                                      		// 0x000008 (0x0004)              
};

class USkelControlBase* UAnimTree::FindSkelControl(struct FName InControlName)
{
	static UFieldFunc* pFnFindSkelControl = NULL;
	if(!pFnFindSkelControl)
		pFnFindSkelControl = UObject::FindFunction("Function Engine.AnimTree.FindSkelControl");

	Engine_FindSkelControl_Parms FindSkelControl_Parms;
	memcpy(&FindSkelControl_Parms.InControlName,&InControlName,0x8);
	pFnFindSkelControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindSkelControl,NULL,&FindSkelControl_Parms,NULL);
	pFnFindSkelControl->FunctionFlags |= 0x400;
	return FindSkelControl_Parms.ReturnValue;
}

struct Engine_ForceGroupRelativePosition_Parms
{
	struct FName                                       GroupName;                                        		// 0x000000 (0x0008)              
	float                                              RelativePosition;                                 		// 0x000008 (0x0004)              
};

void UAnimTree::ForceGroupRelativePosition(struct FName GroupName,float RelativePosition)
{
	static UFieldFunc* pFnForceGroupRelativePosition = NULL;
	if(!pFnForceGroupRelativePosition)
		pFnForceGroupRelativePosition = UObject::FindFunction("Function Engine.AnimTree.ForceGroupRelativePosition");

	Engine_ForceGroupRelativePosition_Parms ForceGroupRelativePosition_Parms;
	memcpy(&ForceGroupRelativePosition_Parms.GroupName,&GroupName,0x8);
	ForceGroupRelativePosition_Parms.RelativePosition = RelativePosition;
	pFnForceGroupRelativePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceGroupRelativePosition,NULL,&ForceGroupRelativePosition_Parms,NULL);
	pFnForceGroupRelativePosition->FunctionFlags |= 0x400;
}

struct Engine_PlayAnim_Parms
{
	unsigned long                                      bLoop : 1;                                        		// 0x000000 (0x0004) [0x00000001] 
	float                                              InRate;                                           		// 0x000004 (0x0004)              
	float                                              StartTime;                                        		// 0x000008 (0x0004)              
};

void UAnimNodeSequence::PlayAnim(bool bLoop,float InRate,float StartTime)
{
	static UFieldFunc* pFnPlayAnim = NULL;
	if(!pFnPlayAnim)
		pFnPlayAnim = UObject::FindFunction("Function Engine.AnimNodeSequence.PlayAnim");

	Engine_PlayAnim_Parms PlayAnim_Parms;
	PlayAnim_Parms.bLoop = bLoop;
	PlayAnim_Parms.InRate = InRate;
	PlayAnim_Parms.StartTime = StartTime;
	pFnPlayAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayAnim,NULL,&PlayAnim_Parms,NULL);
	pFnPlayAnim->FunctionFlags |= 0x400;
}

struct Engine_FindNormalizedPositionFromGroupRelativePosition_Parms
{
	float                                              GroupRelativePosition;                            		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UAnimNodeSequence::FindNormalizedPositionFromGroupRelativePosition(float GroupRelativePosition)
{
	static UFieldFunc* pFnFindNormalizedPositionFromGroupRelativePosition = NULL;
	if(!pFnFindNormalizedPositionFromGroupRelativePosition)
		pFnFindNormalizedPositionFromGroupRelativePosition = UObject::FindFunction("Function Engine.AnimNodeSequence.FindNormalizedPositionFromGroupRelativePosition");

	Engine_FindNormalizedPositionFromGroupRelativePosition_Parms FindNormalizedPositionFromGroupRelativePosition_Parms;
	FindNormalizedPositionFromGroupRelativePosition_Parms.GroupRelativePosition = GroupRelativePosition;
	pFnFindNormalizedPositionFromGroupRelativePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindNormalizedPositionFromGroupRelativePosition,NULL,&FindNormalizedPositionFromGroupRelativePosition_Parms,NULL);
	pFnFindNormalizedPositionFromGroupRelativePosition->FunctionFlags |= 0x400;
	return FindNormalizedPositionFromGroupRelativePosition_Parms.ReturnValue;
}

struct Engine_SetAnim_Parms
{
	struct FName                                       Sequence;                                         		// 0x000000 (0x0008)              
};

void UAnimNodeSequence::SetAnim(struct FName Sequence)
{
	static UFieldFunc* pFnSetAnim = NULL;
	if(!pFnSetAnim)
		pFnSetAnim = UObject::FindFunction("Function Engine.AnimNodeSequence.SetAnim");

	Engine_SetAnim_Parms SetAnim_Parms;
	memcpy(&SetAnim_Parms.Sequence,&Sequence,0x8);
	pFnSetAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAnim,NULL,&SetAnim_Parms,NULL);
	pFnSetAnim->FunctionFlags |= 0x400;
}

struct Engine_GetGlobalPlayRate_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UAnimNodeSequence::GetGlobalPlayRate()
{
	static UFieldFunc* pFnGetGlobalPlayRate = NULL;
	if(!pFnGetGlobalPlayRate)
		pFnGetGlobalPlayRate = UObject::FindFunction("Function Engine.AnimNodeSequence.GetGlobalPlayRate");

	Engine_GetGlobalPlayRate_Parms GetGlobalPlayRate_Parms;
	pFnGetGlobalPlayRate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetGlobalPlayRate,NULL,&GetGlobalPlayRate_Parms,NULL);
	pFnGetGlobalPlayRate->FunctionFlags |= 0x400;
	return GetGlobalPlayRate_Parms.ReturnValue;
}

struct Engine_GetNormalizedPosition_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UAnimNodeSequence::GetNormalizedPosition()
{
	static UFieldFunc* pFnGetNormalizedPosition = NULL;
	if(!pFnGetNormalizedPosition)
		pFnGetNormalizedPosition = UObject::FindFunction("Function Engine.AnimNodeSequence.GetNormalizedPosition");

	Engine_GetNormalizedPosition_Parms GetNormalizedPosition_Parms;
	pFnGetNormalizedPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNormalizedPosition,NULL,&GetNormalizedPosition_Parms,NULL);
	pFnGetNormalizedPosition->FunctionFlags |= 0x400;
	return GetNormalizedPosition_Parms.ReturnValue;
}

struct Engine_GetAnimPlaybackLength_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UAnimNodeSequence::GetAnimPlaybackLength()
{
	static UFieldFunc* pFnGetAnimPlaybackLength = NULL;
	if(!pFnGetAnimPlaybackLength)
		pFnGetAnimPlaybackLength = UObject::FindFunction("Function Engine.AnimNodeSequence.GetAnimPlaybackLength");

	Engine_GetAnimPlaybackLength_Parms GetAnimPlaybackLength_Parms;
	pFnGetAnimPlaybackLength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAnimPlaybackLength,NULL,&GetAnimPlaybackLength_Parms,NULL);
	pFnGetAnimPlaybackLength->FunctionFlags |= 0x400;
	return GetAnimPlaybackLength_Parms.ReturnValue;
}

struct Engine_StopAnim_Parms
{
};

void UAnimNodeSequence::StopAnim()
{
	static UFieldFunc* pFnStopAnim = NULL;
	if(!pFnStopAnim)
		pFnStopAnim = UObject::FindFunction("Function Engine.AnimNodeSequence.StopAnim");

	Engine_StopAnim_Parms StopAnim_Parms;
	pFnStopAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopAnim,NULL,&StopAnim_Parms,NULL);
	pFnStopAnim->FunctionFlags |= 0x400;
}

struct Engine_SetPosition_Parms
{
	float                                              NewTime;                                          		// 0x000000 (0x0004)              
	unsigned long                                      bFireNotifies : 1;                                		// 0x000004 (0x0004) [0x00000001] 
};

void UAnimNodeSequence::SetPosition(float NewTime,bool bFireNotifies)
{
	static UFieldFunc* pFnSetPosition = NULL;
	if(!pFnSetPosition)
		pFnSetPosition = UObject::FindFunction("Function Engine.AnimNodeSequence.SetPosition");

	Engine_SetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.NewTime = NewTime;
	SetPosition_Parms.bFireNotifies = bFireNotifies;
	pFnSetPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPosition,NULL,&SetPosition_Parms,NULL);
	pFnSetPosition->FunctionFlags |= 0x400;
}

struct Engine_GetTimeLeft_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UAnimNodeSequence::GetTimeLeft()
{
	static UFieldFunc* pFnGetTimeLeft = NULL;
	if(!pFnGetTimeLeft)
		pFnGetTimeLeft = UObject::FindFunction("Function Engine.AnimNodeSequence.GetTimeLeft");

	Engine_GetTimeLeft_Parms GetTimeLeft_Parms;
	pFnGetTimeLeft->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTimeLeft,NULL,&GetTimeLeft_Parms,NULL);
	pFnGetTimeLeft->FunctionFlags |= 0x400;
	return GetTimeLeft_Parms.ReturnValue;
}

struct Engine_Notify_Parms
{
	class AActor*                                      Owner;                                            		// 0x000000 (0x0004)              
	class UAnimNodeSequence*                           AnimSeqInstigator;                                		// 0x000004 (0x0004)              
};

void UAnimNotify_Scripted::Notify(class AActor* Owner,class UAnimNodeSequence* AnimSeqInstigator)
{
	static UFieldFunc* pFnNotify = NULL;
	if(!pFnNotify)
		pFnNotify = UObject::FindFunction("Function Engine.AnimNotify_Scripted.Notify");

	Engine_Notify_Parms Notify_Parms;
	Notify_Parms.Owner = Owner;
	Notify_Parms.AnimSeqInstigator = AnimSeqInstigator;
	ProcessEvent(pFnNotify,NULL,&Notify_Parms,NULL);
}

struct Engine_LinkIsValid_Parms
{
	class UAnimTree*                                   AnimTree;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UcAnimCameraNode::LinkIsValid(class UAnimTree* AnimTree)
{
	static UFieldFunc* pFnLinkIsValid = NULL;
	if(!pFnLinkIsValid)
		pFnLinkIsValid = UObject::FindFunction("Function Engine.cAnimCameraNode.LinkIsValid");

	Engine_LinkIsValid_Parms LinkIsValid_Parms;
	LinkIsValid_Parms.AnimTree = AnimTree;
	pFnLinkIsValid->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLinkIsValid,NULL,&LinkIsValid_Parms,NULL);
	pFnLinkIsValid->FunctionFlags |= 0x400;
	return LinkIsValid_Parms.ReturnValue;
}

struct Engine_IsActive_Parms
{
	class UAnimTree*                                   AnimTree;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UcAnimCameraNode::IsActive(class UAnimTree* AnimTree)
{
	static UFieldFunc* pFnIsActive = NULL;
	if(!pFnIsActive)
		pFnIsActive = UObject::FindFunction("Function Engine.cAnimCameraNode.IsActive");

	Engine_IsActive_Parms IsActive_Parms;
	IsActive_Parms.AnimTree = AnimTree;
	pFnIsActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsActive,NULL,&IsActive_Parms,NULL);
	pFnIsActive->FunctionFlags |= 0x400;
	return IsActive_Parms.ReturnValue;
}

struct Engine_LinkIsValid_Parms
{
	class UAnimTree*                                   pAnimTree;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UcAnimConfigureNode::LinkIsValid(class UAnimTree* pAnimTree)
{
	static UFieldFunc* pFnLinkIsValid = NULL;
	if(!pFnLinkIsValid)
		pFnLinkIsValid = UObject::FindFunction("Function Engine.cAnimConfigureNode.LinkIsValid");

	Engine_LinkIsValid_Parms LinkIsValid_Parms;
	LinkIsValid_Parms.pAnimTree = pAnimTree;
	pFnLinkIsValid->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLinkIsValid,NULL,&LinkIsValid_Parms,NULL);
	pFnLinkIsValid->FunctionFlags |= 0x400;
	return LinkIsValid_Parms.ReturnValue;
}

struct Engine_IsActive_Parms
{
	class UAnimTree*                                   pAnimTree;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UcAnimConfigureNode::IsActive(class UAnimTree* pAnimTree)
{
	static UFieldFunc* pFnIsActive = NULL;
	if(!pFnIsActive)
		pFnIsActive = UObject::FindFunction("Function Engine.cAnimConfigureNode.IsActive");

	Engine_IsActive_Parms IsActive_Parms;
	IsActive_Parms.pAnimTree = pAnimTree;
	pFnIsActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsActive,NULL,&IsActive_Parms,NULL);
	pFnIsActive->FunctionFlags |= 0x400;
	return IsActive_Parms.ReturnValue;
}

struct Engine_SetDecision_Parms
{
	class UAnimTree*                                   pAnimTree;                                        		// 0x000000 (0x0004)              
	int                                                nDecision;                                        		// 0x000004 (0x0004)              
};

void UcAnimConfigureNode::SetDecision(class UAnimTree* pAnimTree,int nDecision)
{
	static UFieldFunc* pFnSetDecision = NULL;
	if(!pFnSetDecision)
		pFnSetDecision = UObject::FindFunction("Function Engine.cAnimConfigureNode.SetDecision");

	Engine_SetDecision_Parms SetDecision_Parms;
	SetDecision_Parms.pAnimTree = pAnimTree;
	SetDecision_Parms.nDecision = nDecision;
	pFnSetDecision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDecision,NULL,&SetDecision_Parms,NULL);
	pFnSetDecision->FunctionFlags |= 0x400;
}

struct Engine_RetDecision_Parms
{
	class UAnimTree*                                   pAnimTree;                                        		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UcAnimConfigureNode::RetDecision(class UAnimTree* pAnimTree)
{
	static UFieldFunc* pFnRetDecision = NULL;
	if(!pFnRetDecision)
		pFnRetDecision = UObject::FindFunction("Function Engine.cAnimConfigureNode.RetDecision");

	Engine_RetDecision_Parms RetDecision_Parms;
	RetDecision_Parms.pAnimTree = pAnimTree;
	pFnRetDecision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRetDecision,NULL,&RetDecision_Parms,NULL);
	pFnRetDecision->FunctionFlags |= 0x400;
	return RetDecision_Parms.ReturnValue;
}

struct Engine_SetMorphTarget_Parms
{
	struct FName                                       MorphTargetName;                                  		// 0x000000 (0x0008)              
};

void UMorphNodePose::SetMorphTarget(struct FName MorphTargetName)
{
	static UFieldFunc* pFnSetMorphTarget = NULL;
	if(!pFnSetMorphTarget)
		pFnSetMorphTarget = UObject::FindFunction("Function Engine.MorphNodePose.SetMorphTarget");

	Engine_SetMorphTarget_Parms SetMorphTarget_Parms;
	memcpy(&SetMorphTarget_Parms.MorphTargetName,&MorphTargetName,0x8);
	pFnSetMorphTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMorphTarget,NULL,&SetMorphTarget_Parms,NULL);
	pFnSetMorphTarget->FunctionFlags |= 0x400;
}

struct Engine_SetNodeWeight_Parms
{
	float                                              NewWeight;                                        		// 0x000000 (0x0004)              
};

void UMorphNodeWeight::SetNodeWeight(float NewWeight)
{
	static UFieldFunc* pFnSetNodeWeight = NULL;
	if(!pFnSetNodeWeight)
		pFnSetNodeWeight = UObject::FindFunction("Function Engine.MorphNodeWeight.SetNodeWeight");

	Engine_SetNodeWeight_Parms SetNodeWeight_Parms;
	SetNodeWeight_Parms.NewWeight = NewWeight;
	pFnSetNodeWeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNodeWeight,NULL,&SetNodeWeight_Parms,NULL);
	pFnSetNodeWeight->FunctionFlags |= 0x400;
}

struct Engine_FindMorphTarget_Parms
{
	struct FName                                       MorphTargetName;                                  		// 0x000000 (0x0008)              
	class UMorphTarget*                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UMorphTarget* UMorphTargetSet::FindMorphTarget(struct FName MorphTargetName)
{
	static UFieldFunc* pFnFindMorphTarget = NULL;
	if(!pFnFindMorphTarget)
		pFnFindMorphTarget = UObject::FindFunction("Function Engine.MorphTargetSet.FindMorphTarget");

	Engine_FindMorphTarget_Parms FindMorphTarget_Parms;
	memcpy(&FindMorphTarget_Parms.MorphTargetName,&MorphTargetName,0x8);
	pFnFindMorphTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindMorphTarget,NULL,&FindMorphTarget_Parms,NULL);
	pFnFindMorphTarget->FunctionFlags |= 0x400;
	return FindMorphTarget_Parms.ReturnValue;
}

struct Engine_SetSkelControlStrength_Parms
{
	float                                              NewStrength;                                      		// 0x000000 (0x0004)              
	float                                              InBlendTime;                                      		// 0x000004 (0x0004)              
};

void USkelControlBase::SetSkelControlStrength(float NewStrength,float InBlendTime)
{
	static UFieldFunc* pFnSetSkelControlStrength = NULL;
	if(!pFnSetSkelControlStrength)
		pFnSetSkelControlStrength = UObject::FindFunction("Function Engine.SkelControlBase.SetSkelControlStrength");

	Engine_SetSkelControlStrength_Parms SetSkelControlStrength_Parms;
	SetSkelControlStrength_Parms.NewStrength = NewStrength;
	SetSkelControlStrength_Parms.InBlendTime = InBlendTime;
	pFnSetSkelControlStrength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSkelControlStrength,NULL,&SetSkelControlStrength_Parms,NULL);
	pFnSetSkelControlStrength->FunctionFlags |= 0x400;
}

struct Engine_SetSkelControlActive_Parms
{
	unsigned long                                      bInActive : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void USkelControlBase::SetSkelControlActive(bool bInActive)
{
	static UFieldFunc* pFnSetSkelControlActive = NULL;
	if(!pFnSetSkelControlActive)
		pFnSetSkelControlActive = UObject::FindFunction("Function Engine.SkelControlBase.SetSkelControlActive");

	Engine_SetSkelControlActive_Parms SetSkelControlActive_Parms;
	SetSkelControlActive_Parms.bInActive = bInActive;
	pFnSetSkelControlActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSkelControlActive,NULL,&SetSkelControlActive_Parms,NULL);
	pFnSetSkelControlActive->FunctionFlags |= 0x400;
}

struct Engine_InterpolateTargetLocation_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void USkelControlLookAt::InterpolateTargetLocation(float DeltaTime)
{
	static UFieldFunc* pFnInterpolateTargetLocation = NULL;
	if(!pFnInterpolateTargetLocation)
		pFnInterpolateTargetLocation = UObject::FindFunction("Function Engine.SkelControlLookAt.InterpolateTargetLocation");

	Engine_InterpolateTargetLocation_Parms InterpolateTargetLocation_Parms;
	InterpolateTargetLocation_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnInterpolateTargetLocation,NULL,&InterpolateTargetLocation_Parms,NULL);
}

struct Engine_SetTargetLocation_Parms
{
	FVector3                                           NewTargetLocation;                                		// 0x000000 (0x000C)              
};

void USkelControlLookAt::SetTargetLocation(FVector3 NewTargetLocation)
{
	static UFieldFunc* pFnSetTargetLocation = NULL;
	if(!pFnSetTargetLocation)
		pFnSetTargetLocation = UObject::FindFunction("Function Engine.SkelControlLookAt.SetTargetLocation");

	Engine_SetTargetLocation_Parms SetTargetLocation_Parms;
	memcpy(&SetTargetLocation_Parms.NewTargetLocation,&NewTargetLocation,0xC);
	ProcessEvent(pFnSetTargetLocation,NULL,&SetTargetLocation_Parms,NULL);
}

struct Engine_SetLookAtAlpha_Parms
{
	float                                              DesiredAlpha;                                     		// 0x000000 (0x0004)              
	float                                              DesiredBlendTime;                                 		// 0x000004 (0x0004)              
};

void USkelControlLookAt::SetLookAtAlpha(float DesiredAlpha,float DesiredBlendTime)
{
	static UFieldFunc* pFnSetLookAtAlpha = NULL;
	if(!pFnSetLookAtAlpha)
		pFnSetLookAtAlpha = UObject::FindFunction("Function Engine.SkelControlLookAt.SetLookAtAlpha");

	Engine_SetLookAtAlpha_Parms SetLookAtAlpha_Parms;
	SetLookAtAlpha_Parms.DesiredAlpha = DesiredAlpha;
	SetLookAtAlpha_Parms.DesiredBlendTime = DesiredBlendTime;
	pFnSetLookAtAlpha->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLookAtAlpha,NULL,&SetLookAtAlpha_Parms,NULL);
	pFnSetLookAtAlpha->FunctionFlags |= 0x400;
}

struct Engine_CanLookAtPoint_Parms
{
	FVector3                                           PointLoc;                                         		// 0x000000 (0x000C)              
	unsigned long                                      bDrawDebugInfo : 1;                               		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bDebugUsePersistentLines : 1;                     		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      bDebugFlushLinesFirst : 1;                        		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool USkelControlLookAt::CanLookAtPoint(FVector3 PointLoc,bool bDrawDebugInfo,bool bDebugUsePersistentLines,bool bDebugFlushLinesFirst)
{
	static UFieldFunc* pFnCanLookAtPoint = NULL;
	if(!pFnCanLookAtPoint)
		pFnCanLookAtPoint = UObject::FindFunction("Function Engine.SkelControlLookAt.CanLookAtPoint");

	Engine_CanLookAtPoint_Parms CanLookAtPoint_Parms;
	memcpy(&CanLookAtPoint_Parms.PointLoc,&PointLoc,0xC);
	CanLookAtPoint_Parms.bDrawDebugInfo = bDrawDebugInfo;
	CanLookAtPoint_Parms.bDebugUsePersistentLines = bDebugUsePersistentLines;
	CanLookAtPoint_Parms.bDebugFlushLinesFirst = bDebugFlushLinesFirst;
	pFnCanLookAtPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanLookAtPoint,NULL,&CanLookAtPoint_Parms,NULL);
	pFnCanLookAtPoint->FunctionFlags |= 0x400;
	return CanLookAtPoint_Parms.ReturnValue;
}

struct Engine_ResetToDefaults_Parms
{
};

void UDecalComponent::ResetToDefaults()
{
	static UFieldFunc* pFnResetToDefaults = NULL;
	if(!pFnResetToDefaults)
		pFnResetToDefaults = UObject::FindFunction("Function Engine.DecalComponent.ResetToDefaults");

	Engine_ResetToDefaults_Parms ResetToDefaults_Parms;
	pFnResetToDefaults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetToDefaults,NULL,&ResetToDefaults_Parms,NULL);
	pFnResetToDefaults->FunctionFlags |= 0x400;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AFogVolumeDensityInfo::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.FogVolumeDensityInfo.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AFogVolumeDensityInfo::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.FogVolumeDensityInfo.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AFogVolumeDensityInfo::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.FogVolumeDensityInfo.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AFogVolumeDensityInfo::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.FogVolumeDensityInfo.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetEnabled_Parms
{
	unsigned long                                      bSetEnabled : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void UFogVolumeDensityComponent::SetEnabled(bool bSetEnabled)
{
	static UFieldFunc* pFnSetEnabled = NULL;
	if(!pFnSetEnabled)
		pFnSetEnabled = UObject::FindFunction("Function Engine.FogVolumeDensityComponent.SetEnabled");

	Engine_SetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bSetEnabled = bSetEnabled;
	pFnSetEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnabled,NULL,&SetEnabled_Parms,NULL);
	pFnSetEnabled->FunctionFlags |= 0x400;
}

struct Engine_SetScalarCurveParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FInterpCurveFloat                           Value;                                            		// 0x000008 (0x0010)              
};

void UMaterialInstance::SetScalarCurveParameterValue(struct FName ParameterName,struct FInterpCurveFloat Value)
{
	static UFieldFunc* pFnSetScalarCurveParameterValue = NULL;
	if(!pFnSetScalarCurveParameterValue)
		pFnSetScalarCurveParameterValue = UObject::FindFunction("Function Engine.MaterialInstance.SetScalarCurveParameterValue");

	Engine_SetScalarCurveParameterValue_Parms SetScalarCurveParameterValue_Parms;
	memcpy(&SetScalarCurveParameterValue_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetScalarCurveParameterValue_Parms.Value,&Value,0x10);
	pFnSetScalarCurveParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScalarCurveParameterValue,NULL,&SetScalarCurveParameterValue_Parms,NULL);
	pFnSetScalarCurveParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetScalarParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstance::SetScalarParameterValue(struct FName ParameterName,float Value)
{
	static UFieldFunc* pFnSetScalarParameterValue = NULL;
	if(!pFnSetScalarParameterValue)
		pFnSetScalarParameterValue = UObject::FindFunction("Function Engine.MaterialInstance.SetScalarParameterValue");

	Engine_SetScalarParameterValue_Parms SetScalarParameterValue_Parms;
	memcpy(&SetScalarParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetScalarParameterValue_Parms.Value = Value;
	pFnSetScalarParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScalarParameterValue,NULL,&SetScalarParameterValue_Parms,NULL);
	pFnSetScalarParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetTextureParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UTexture*                                    Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstance::SetTextureParameterValue(struct FName ParameterName,class UTexture* Value)
{
	static UFieldFunc* pFnSetTextureParameterValue = NULL;
	if(!pFnSetTextureParameterValue)
		pFnSetTextureParameterValue = UObject::FindFunction("Function Engine.MaterialInstance.SetTextureParameterValue");

	Engine_SetTextureParameterValue_Parms SetTextureParameterValue_Parms;
	memcpy(&SetTextureParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetTextureParameterValue_Parms.Value = Value;
	pFnSetTextureParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTextureParameterValue,NULL,&SetTextureParameterValue_Parms,NULL);
	pFnSetTextureParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetFontParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UFont*                                       FontValue;                                        		// 0x000008 (0x0004)              
	int                                                FontPage;                                         		// 0x00000C (0x0004)              
};

void UMaterialInstance::SetFontParameterValue(struct FName ParameterName,class UFont* FontValue,int FontPage)
{
	static UFieldFunc* pFnSetFontParameterValue = NULL;
	if(!pFnSetFontParameterValue)
		pFnSetFontParameterValue = UObject::FindFunction("Function Engine.MaterialInstance.SetFontParameterValue");

	Engine_SetFontParameterValue_Parms SetFontParameterValue_Parms;
	memcpy(&SetFontParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetFontParameterValue_Parms.FontValue = FontValue;
	SetFontParameterValue_Parms.FontPage = FontPage;
	pFnSetFontParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFontParameterValue,NULL,&SetFontParameterValue_Parms,NULL);
	pFnSetFontParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetParent_Parms
{
	class UMaterialInterface*                          NewParent;                                        		// 0x000000 (0x0004)              
};

void UMaterialInstance::SetParent(class UMaterialInterface* NewParent)
{
	static UFieldFunc* pFnSetParent = NULL;
	if(!pFnSetParent)
		pFnSetParent = UObject::FindFunction("Function Engine.MaterialInstance.SetParent");

	Engine_SetParent_Parms SetParent_Parms;
	SetParent_Parms.NewParent = NewParent;
	pFnSetParent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetParent,NULL,&SetParent_Parms,NULL);
	pFnSetParent->FunctionFlags |= 0x400;
}

struct Engine_SetVectorParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FLinearColor                                Value;                                            		// 0x000008 (0x0010)              
};

void UMaterialInstance::SetVectorParameterValue(struct FName ParameterName,struct FLinearColor Value)
{
	static UFieldFunc* pFnSetVectorParameterValue = NULL;
	if(!pFnSetVectorParameterValue)
		pFnSetVectorParameterValue = UObject::FindFunction("Function Engine.MaterialInstance.SetVectorParameterValue");

	Engine_SetVectorParameterValue_Parms SetVectorParameterValue_Parms;
	memcpy(&SetVectorParameterValue_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorParameterValue_Parms.Value,&Value,0x10);
	pFnSetVectorParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVectorParameterValue,NULL,&SetVectorParameterValue_Parms,NULL);
	pFnSetVectorParameterValue->FunctionFlags |= 0x400;
}

struct Engine_ClearParameterValues_Parms
{
};

void UMaterialInstance::ClearParameterValues()
{
	static UFieldFunc* pFnClearParameterValues = NULL;
	if(!pFnClearParameterValues)
		pFnClearParameterValues = UObject::FindFunction("Function Engine.MaterialInstance.ClearParameterValues");

	Engine_ClearParameterValues_Parms ClearParameterValues_Parms;
	pFnClearParameterValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearParameterValues,NULL,&ClearParameterValues_Parms,NULL);
	pFnClearParameterValues->FunctionFlags |= 0x400;
}

struct Engine_SetParent_Parms
{
	class UMaterialInterface*                          NewParent;                                        		// 0x000000 (0x0004)              
};

void UMaterialInstanceConstant::SetParent(class UMaterialInterface* NewParent)
{
	static UFieldFunc* pFnSetParent = NULL;
	if(!pFnSetParent)
		pFnSetParent = UObject::FindFunction("Function Engine.MaterialInstanceConstant.SetParent");

	Engine_SetParent_Parms SetParent_Parms;
	SetParent_Parms.NewParent = NewParent;
	pFnSetParent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetParent,NULL,&SetParent_Parms,NULL);
	pFnSetParent->FunctionFlags |= 0x400;
}

struct Engine_SetFontParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UFont*                                       FontValue;                                        		// 0x000008 (0x0004)              
	int                                                FontPage;                                         		// 0x00000C (0x0004)              
};

void UMaterialInstanceConstant::SetFontParameterValue(struct FName ParameterName,class UFont* FontValue,int FontPage)
{
	static UFieldFunc* pFnSetFontParameterValue = NULL;
	if(!pFnSetFontParameterValue)
		pFnSetFontParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceConstant.SetFontParameterValue");

	Engine_SetFontParameterValue_Parms SetFontParameterValue_Parms;
	memcpy(&SetFontParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetFontParameterValue_Parms.FontValue = FontValue;
	SetFontParameterValue_Parms.FontPage = FontPage;
	pFnSetFontParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFontParameterValue,NULL,&SetFontParameterValue_Parms,NULL);
	pFnSetFontParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetScalarParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstanceConstant::SetScalarParameterValue(struct FName ParameterName,float Value)
{
	static UFieldFunc* pFnSetScalarParameterValue = NULL;
	if(!pFnSetScalarParameterValue)
		pFnSetScalarParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceConstant.SetScalarParameterValue");

	Engine_SetScalarParameterValue_Parms SetScalarParameterValue_Parms;
	memcpy(&SetScalarParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetScalarParameterValue_Parms.Value = Value;
	pFnSetScalarParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScalarParameterValue,NULL,&SetScalarParameterValue_Parms,NULL);
	pFnSetScalarParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetTextureParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UTexture*                                    Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstanceConstant::SetTextureParameterValue(struct FName ParameterName,class UTexture* Value)
{
	static UFieldFunc* pFnSetTextureParameterValue = NULL;
	if(!pFnSetTextureParameterValue)
		pFnSetTextureParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceConstant.SetTextureParameterValue");

	Engine_SetTextureParameterValue_Parms SetTextureParameterValue_Parms;
	memcpy(&SetTextureParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetTextureParameterValue_Parms.Value = Value;
	pFnSetTextureParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTextureParameterValue,NULL,&SetTextureParameterValue_Parms,NULL);
	pFnSetTextureParameterValue->FunctionFlags |= 0x400;
}

struct Engine_ClearParameterValues_Parms
{
};

void UMaterialInstanceConstant::ClearParameterValues()
{
	static UFieldFunc* pFnClearParameterValues = NULL;
	if(!pFnClearParameterValues)
		pFnClearParameterValues = UObject::FindFunction("Function Engine.MaterialInstanceConstant.ClearParameterValues");

	Engine_ClearParameterValues_Parms ClearParameterValues_Parms;
	pFnClearParameterValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearParameterValues,NULL,&ClearParameterValues_Parms,NULL);
	pFnClearParameterValues->FunctionFlags |= 0x400;
}

struct Engine_SetVectorParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FLinearColor                                Value;                                            		// 0x000008 (0x0010)              
};

void UMaterialInstanceConstant::SetVectorParameterValue(struct FName ParameterName,struct FLinearColor Value)
{
	static UFieldFunc* pFnSetVectorParameterValue = NULL;
	if(!pFnSetVectorParameterValue)
		pFnSetVectorParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceConstant.SetVectorParameterValue");

	Engine_SetVectorParameterValue_Parms SetVectorParameterValue_Parms;
	memcpy(&SetVectorParameterValue_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorParameterValue_Parms.Value,&Value,0x10);
	pFnSetVectorParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVectorParameterValue,NULL,&SetVectorParameterValue_Parms,NULL);
	pFnSetVectorParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetVectorCurveParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FInterpCurveVector                          Value;                                            		// 0x000008 (0x0010)              
};

void UMaterialInstanceTimeVarying::SetVectorCurveParameterValue(struct FName ParameterName,struct FInterpCurveVector Value)
{
	static UFieldFunc* pFnSetVectorCurveParameterValue = NULL;
	if(!pFnSetVectorCurveParameterValue)
		pFnSetVectorCurveParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetVectorCurveParameterValue");

	Engine_SetVectorCurveParameterValue_Parms SetVectorCurveParameterValue_Parms;
	memcpy(&SetVectorCurveParameterValue_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorCurveParameterValue_Parms.Value,&Value,0x10);
	pFnSetVectorCurveParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVectorCurveParameterValue,NULL,&SetVectorCurveParameterValue_Parms,NULL);
	pFnSetVectorCurveParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetVectorStartTime_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstanceTimeVarying::SetVectorStartTime(struct FName ParameterName,float Value)
{
	static UFieldFunc* pFnSetVectorStartTime = NULL;
	if(!pFnSetVectorStartTime)
		pFnSetVectorStartTime = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetVectorStartTime");

	Engine_SetVectorStartTime_Parms SetVectorStartTime_Parms;
	memcpy(&SetVectorStartTime_Parms.ParameterName,&ParameterName,0x8);
	SetVectorStartTime_Parms.Value = Value;
	pFnSetVectorStartTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVectorStartTime,NULL,&SetVectorStartTime_Parms,NULL);
	pFnSetVectorStartTime->FunctionFlags |= 0x400;
}

struct Engine_SetScalarCurveParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FInterpCurveFloat                           Value;                                            		// 0x000008 (0x0010)              
};

void UMaterialInstanceTimeVarying::SetScalarCurveParameterValue(struct FName ParameterName,struct FInterpCurveFloat Value)
{
	static UFieldFunc* pFnSetScalarCurveParameterValue = NULL;
	if(!pFnSetScalarCurveParameterValue)
		pFnSetScalarCurveParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetScalarCurveParameterValue");

	Engine_SetScalarCurveParameterValue_Parms SetScalarCurveParameterValue_Parms;
	memcpy(&SetScalarCurveParameterValue_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetScalarCurveParameterValue_Parms.Value,&Value,0x10);
	pFnSetScalarCurveParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScalarCurveParameterValue,NULL,&SetScalarCurveParameterValue_Parms,NULL);
	pFnSetScalarCurveParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetFontParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UFont*                                       FontValue;                                        		// 0x000008 (0x0004)              
	int                                                FontPage;                                         		// 0x00000C (0x0004)              
};

void UMaterialInstanceTimeVarying::SetFontParameterValue(struct FName ParameterName,class UFont* FontValue,int FontPage)
{
	static UFieldFunc* pFnSetFontParameterValue = NULL;
	if(!pFnSetFontParameterValue)
		pFnSetFontParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetFontParameterValue");

	Engine_SetFontParameterValue_Parms SetFontParameterValue_Parms;
	memcpy(&SetFontParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetFontParameterValue_Parms.FontValue = FontValue;
	SetFontParameterValue_Parms.FontPage = FontPage;
	pFnSetFontParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFontParameterValue,NULL,&SetFontParameterValue_Parms,NULL);
	pFnSetFontParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetScalarParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstanceTimeVarying::SetScalarParameterValue(struct FName ParameterName,float Value)
{
	static UFieldFunc* pFnSetScalarParameterValue = NULL;
	if(!pFnSetScalarParameterValue)
		pFnSetScalarParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetScalarParameterValue");

	Engine_SetScalarParameterValue_Parms SetScalarParameterValue_Parms;
	memcpy(&SetScalarParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetScalarParameterValue_Parms.Value = Value;
	pFnSetScalarParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScalarParameterValue,NULL,&SetScalarParameterValue_Parms,NULL);
	pFnSetScalarParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetParent_Parms
{
	class UMaterialInterface*                          NewParent;                                        		// 0x000000 (0x0004)              
};

void UMaterialInstanceTimeVarying::SetParent(class UMaterialInterface* NewParent)
{
	static UFieldFunc* pFnSetParent = NULL;
	if(!pFnSetParent)
		pFnSetParent = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetParent");

	Engine_SetParent_Parms SetParent_Parms;
	SetParent_Parms.NewParent = NewParent;
	pFnSetParent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetParent,NULL,&SetParent_Parms,NULL);
	pFnSetParent->FunctionFlags |= 0x400;
}

struct Engine_ClearParameterValues_Parms
{
};

void UMaterialInstanceTimeVarying::ClearParameterValues()
{
	static UFieldFunc* pFnClearParameterValues = NULL;
	if(!pFnClearParameterValues)
		pFnClearParameterValues = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.ClearParameterValues");

	Engine_ClearParameterValues_Parms ClearParameterValues_Parms;
	pFnClearParameterValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearParameterValues,NULL,&ClearParameterValues_Parms,NULL);
	pFnClearParameterValues->FunctionFlags |= 0x400;
}

struct Engine_SetTextureParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UTexture*                                    Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstanceTimeVarying::SetTextureParameterValue(struct FName ParameterName,class UTexture* Value)
{
	static UFieldFunc* pFnSetTextureParameterValue = NULL;
	if(!pFnSetTextureParameterValue)
		pFnSetTextureParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetTextureParameterValue");

	Engine_SetTextureParameterValue_Parms SetTextureParameterValue_Parms;
	memcpy(&SetTextureParameterValue_Parms.ParameterName,&ParameterName,0x8);
	SetTextureParameterValue_Parms.Value = Value;
	pFnSetTextureParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTextureParameterValue,NULL,&SetTextureParameterValue_Parms,NULL);
	pFnSetTextureParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetVectorParameterValue_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FLinearColor                                Value;                                            		// 0x000008 (0x0010)              
};

void UMaterialInstanceTimeVarying::SetVectorParameterValue(struct FName ParameterName,struct FLinearColor Value)
{
	static UFieldFunc* pFnSetVectorParameterValue = NULL;
	if(!pFnSetVectorParameterValue)
		pFnSetVectorParameterValue = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetVectorParameterValue");

	Engine_SetVectorParameterValue_Parms SetVectorParameterValue_Parms;
	memcpy(&SetVectorParameterValue_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorParameterValue_Parms.Value,&Value,0x10);
	pFnSetVectorParameterValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVectorParameterValue,NULL,&SetVectorParameterValue_Parms,NULL);
	pFnSetVectorParameterValue->FunctionFlags |= 0x400;
}

struct Engine_SetDuration_Parms
{
	float                                              Value;                                            		// 0x000000 (0x0004)              
};

void UMaterialInstanceTimeVarying::SetDuration(float Value)
{
	static UFieldFunc* pFnSetDuration = NULL;
	if(!pFnSetDuration)
		pFnSetDuration = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetDuration");

	Engine_SetDuration_Parms SetDuration_Parms;
	SetDuration_Parms.Value = Value;
	pFnSetDuration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDuration,NULL,&SetDuration_Parms,NULL);
	pFnSetDuration->FunctionFlags |= 0x400;
}

struct Engine_SetScalarStartTime_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Value;                                            		// 0x000008 (0x0004)              
};

void UMaterialInstanceTimeVarying::SetScalarStartTime(struct FName ParameterName,float Value)
{
	static UFieldFunc* pFnSetScalarStartTime = NULL;
	if(!pFnSetScalarStartTime)
		pFnSetScalarStartTime = UObject::FindFunction("Function Engine.MaterialInstanceTimeVarying.SetScalarStartTime");

	Engine_SetScalarStartTime_Parms SetScalarStartTime_Parms;
	memcpy(&SetScalarStartTime_Parms.ParameterName,&ParameterName,0x8);
	SetScalarStartTime_Parms.Value = Value;
	pFnSetScalarStartTime->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScalarStartTime,NULL,&SetScalarStartTime_Parms,NULL);
	pFnSetScalarStartTime->FunctionFlags |= 0x400;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AEmitter::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.Emitter.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_SetExtColorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	unsigned char                                      Red;                                              		// 0x000008 (0x0001)              
	unsigned char                                      Green;                                            		// 0x000009 (0x0001)              
	unsigned char                                      Blue;                                             		// 0x00000A (0x0001)              
	unsigned char                                      Alpha;                                            		// 0x00000B (0x0001)              
	//DWORD                                              C;                                                		// 0x00000C (0x0004)              
};

void AEmitter::SetExtColorParameter(struct FName ParameterName,unsigned char Red,unsigned char Green,unsigned char Blue,unsigned char Alpha)
{
	static UFieldFunc* pFnSetExtColorParameter = NULL;
	if(!pFnSetExtColorParameter)
		pFnSetExtColorParameter = UObject::FindFunction("Function Engine.Emitter.SetExtColorParameter");

	Engine_SetExtColorParameter_Parms SetExtColorParameter_Parms;
	memcpy(&SetExtColorParameter_Parms.ParameterName,&ParameterName,0x8);
	SetExtColorParameter_Parms.Red = Red;
	SetExtColorParameter_Parms.Green = Green;
	SetExtColorParameter_Parms.Blue = Blue;
	SetExtColorParameter_Parms.Alpha = Alpha;
	ProcessEvent(pFnSetExtColorParameter,NULL,&SetExtColorParameter_Parms,NULL);
}

struct Engine_SetTemplate_Parms
{
	class UParticleSystem*                             NewTemplate;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bDestroyOnFinish : 1;                             		// 0x000004 (0x0004) [0x00000001] 
};

void AEmitter::SetTemplate(class UParticleSystem* NewTemplate,bool bDestroyOnFinish)
{
	static UFieldFunc* pFnSetTemplate = NULL;
	if(!pFnSetTemplate)
		pFnSetTemplate = UObject::FindFunction("Function Engine.Emitter.SetTemplate");

	Engine_SetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	SetTemplate_Parms.bDestroyOnFinish = bDestroyOnFinish;
	pFnSetTemplate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTemplate,NULL,&SetTemplate_Parms,NULL);
	pFnSetTemplate->FunctionFlags |= 0x400;
}

struct Engine_SetFloatParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Param;                                            		// 0x000008 (0x0004)              
};

void AEmitter::SetFloatParameter(struct FName ParameterName,float Param)
{
	static UFieldFunc* pFnSetFloatParameter = NULL;
	if(!pFnSetFloatParameter)
		pFnSetFloatParameter = UObject::FindFunction("Function Engine.Emitter.SetFloatParameter");

	Engine_SetFloatParameter_Parms SetFloatParameter_Parms;
	memcpy(&SetFloatParameter_Parms.ParameterName,&ParameterName,0x8);
	SetFloatParameter_Parms.Param = Param;
	ProcessEvent(pFnSetFloatParameter,NULL,&SetFloatParameter_Parms,NULL);
}

struct Engine_SetVectorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	FVector3                                           Param;                                            		// 0x000008 (0x000C)              
};

void AEmitter::SetVectorParameter(struct FName ParameterName,FVector3 Param)
{
	static UFieldFunc* pFnSetVectorParameter = NULL;
	if(!pFnSetVectorParameter)
		pFnSetVectorParameter = UObject::FindFunction("Function Engine.Emitter.SetVectorParameter");

	Engine_SetVectorParameter_Parms SetVectorParameter_Parms;
	memcpy(&SetVectorParameter_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorParameter_Parms.Param,&Param,0xC);
	ProcessEvent(pFnSetVectorParameter,NULL,&SetVectorParameter_Parms,NULL);
}

struct Engine_OnSetParticleSysParam_Parms
{
	class USeqAct_SetParticleSysParam*                 Action;                                           		// 0x000000 (0x0004)              
	//int                                                Idx;                                              		// 0x000004 (0x0004)              
	//int                                                ParamIdx;                                         		// 0x000008 (0x0004)              
};

void AEmitter::OnSetParticleSysParam(class USeqAct_SetParticleSysParam* Action)
{
	static UFieldFunc* pFnOnSetParticleSysParam = NULL;
	if(!pFnOnSetParticleSysParam)
		pFnOnSetParticleSysParam = UObject::FindFunction("Function Engine.Emitter.OnSetParticleSysParam");

	Engine_OnSetParticleSysParam_Parms OnSetParticleSysParam_Parms;
	OnSetParticleSysParam_Parms.Action = Action;
	ProcessEvent(pFnOnSetParticleSysParam,NULL,&OnSetParticleSysParam_Parms,NULL);
}

struct Engine_SetColorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	DWORD                                              Param;                                            		// 0x000008 (0x0004)              
};

void AEmitter::SetColorParameter(struct FName ParameterName,DWORD Param)
{
	static UFieldFunc* pFnSetColorParameter = NULL;
	if(!pFnSetColorParameter)
		pFnSetColorParameter = UObject::FindFunction("Function Engine.Emitter.SetColorParameter");

	Engine_SetColorParameter_Parms SetColorParameter_Parms;
	memcpy(&SetColorParameter_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetColorParameter_Parms.Param,&Param,0x4);
	ProcessEvent(pFnSetColorParameter,NULL,&SetColorParameter_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AEmitter::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.Emitter.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AEmitter::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Emitter.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_PostFactorySpawn_Parms
{
	class USequence*                                   ParentSequence;                                   		// 0x000000 (0x0004)              
};

void AEmitter::PostFactorySpawn(class USequence* ParentSequence)
{
	static UFieldFunc* pFnPostFactorySpawn = NULL;
	if(!pFnPostFactorySpawn)
		pFnPostFactorySpawn = UObject::FindFunction("Function Engine.Emitter.PostFactorySpawn");

	Engine_PostFactorySpawn_Parms PostFactorySpawn_Parms;
	PostFactorySpawn_Parms.ParentSequence = ParentSequence;
	ProcessEvent(pFnPostFactorySpawn,NULL,&PostFactorySpawn_Parms,NULL);
}

struct Engine_OnParticleSystemFinished_Parms
{
	class UParticleSystemComponent*                    FinishedComponent;                                		// 0x000000 (0x0004)              
};

void AEmitter::OnParticleSystemFinished(class UParticleSystemComponent* FinishedComponent)
{
	static UFieldFunc* pFnOnParticleSystemFinished = NULL;
	if(!pFnOnParticleSystemFinished)
		pFnOnParticleSystemFinished = UObject::FindFunction("Function Engine.Emitter.OnParticleSystemFinished");

	Engine_OnParticleSystemFinished_Parms OnParticleSystemFinished_Parms;
	OnParticleSystemFinished_Parms.FinishedComponent = FinishedComponent;
	ProcessEvent(pFnOnParticleSystemFinished,NULL,&OnParticleSystemFinished_Parms,NULL);
}

struct Engine_SetActorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class AActor*                                      Param;                                            		// 0x000008 (0x0004)              
};

void AEmitter::SetActorParameter(struct FName ParameterName,class AActor* Param)
{
	static UFieldFunc* pFnSetActorParameter = NULL;
	if(!pFnSetActorParameter)
		pFnSetActorParameter = UObject::FindFunction("Function Engine.Emitter.SetActorParameter");

	Engine_SetActorParameter_Parms SetActorParameter_Parms;
	memcpy(&SetActorParameter_Parms.ParameterName,&ParameterName,0x8);
	SetActorParameter_Parms.Param = Param;
	ProcessEvent(pFnSetActorParameter,NULL,&SetActorParameter_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AEmitter::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.Emitter.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void APhysXEmitterSpawnable::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.PhysXEmitterSpawnable.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_Term_Parms
{
};

void APhysXEmitterSpawnable::Term()
{
	static UFieldFunc* pFnTerm = NULL;
	if(!pFnTerm)
		pFnTerm = UObject::FindFunction("Function Engine.PhysXEmitterSpawnable.Term");

	Engine_Term_Parms Term_Parms;
	pFnTerm->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTerm,NULL,&Term_Parms,NULL);
	pFnTerm->FunctionFlags |= 0x400;
}

struct Engine_SetTemplate_Parms
{
	class UParticleSystem*                             NewTemplate;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bDestroyOnFinish : 1;                             		// 0x000004 (0x0004) [0x00000001] 
};

void APhysXEmitterSpawnable::SetTemplate(class UParticleSystem* NewTemplate,bool bDestroyOnFinish)
{
	static UFieldFunc* pFnSetTemplate = NULL;
	if(!pFnSetTemplate)
		pFnSetTemplate = UObject::FindFunction("Function Engine.PhysXEmitterSpawnable.SetTemplate");

	Engine_SetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	SetTemplate_Parms.bDestroyOnFinish = bDestroyOnFinish;
	ProcessEvent(pFnSetTemplate,NULL,&SetTemplate_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void APhysXEmitterSpawnable::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.PhysXEmitterSpawnable.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_SetActive_Parms
{
	unsigned long                                      bNowActive : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UParticleSystemComponent::SetActive(bool bNowActive)
{
	static UFieldFunc* pFnSetActive = NULL;
	if(!pFnSetActive)
		pFnSetActive = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetActive");

	Engine_SetActive_Parms SetActive_Parms;
	SetActive_Parms.bNowActive = bNowActive;
	pFnSetActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActive,NULL,&SetActive_Parms,NULL);
	pFnSetActive->FunctionFlags |= 0x400;
}

struct Engine_SetBeamTargetTangent_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	FVector3                                           NewTangentPoint;                                  		// 0x000004 (0x000C)              
	int                                                TargetIndex;                                      		// 0x000010 (0x0004)              
};

void UParticleSystemComponent::SetBeamTargetTangent(int EmitterIndex,FVector3 NewTangentPoint,int TargetIndex)
{
	static UFieldFunc* pFnSetBeamTargetTangent = NULL;
	if(!pFnSetBeamTargetTangent)
		pFnSetBeamTargetTangent = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamTargetTangent");

	Engine_SetBeamTargetTangent_Parms SetBeamTargetTangent_Parms;
	SetBeamTargetTangent_Parms.EmitterIndex = EmitterIndex;
	memcpy(&SetBeamTargetTangent_Parms.NewTangentPoint,&NewTangentPoint,0xC);
	SetBeamTargetTangent_Parms.TargetIndex = TargetIndex;
	pFnSetBeamTargetTangent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamTargetTangent,NULL,&SetBeamTargetTangent_Parms,NULL);
	pFnSetBeamTargetTangent->FunctionFlags |= 0x400;
}

struct Engine_SetBeamTargetPoint_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	FVector3                                           NewTargetPoint;                                   		// 0x000004 (0x000C)              
	int                                                TargetIndex;                                      		// 0x000010 (0x0004)              
};

void UParticleSystemComponent::SetBeamTargetPoint(int EmitterIndex,FVector3 NewTargetPoint,int TargetIndex)
{
	static UFieldFunc* pFnSetBeamTargetPoint = NULL;
	if(!pFnSetBeamTargetPoint)
		pFnSetBeamTargetPoint = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamTargetPoint");

	Engine_SetBeamTargetPoint_Parms SetBeamTargetPoint_Parms;
	SetBeamTargetPoint_Parms.EmitterIndex = EmitterIndex;
	memcpy(&SetBeamTargetPoint_Parms.NewTargetPoint,&NewTargetPoint,0xC);
	SetBeamTargetPoint_Parms.TargetIndex = TargetIndex;
	pFnSetBeamTargetPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamTargetPoint,NULL,&SetBeamTargetPoint_Parms,NULL);
	pFnSetBeamTargetPoint->FunctionFlags |= 0x400;
}

struct Engine_ResetToDefaults_Parms
{
};

void UParticleSystemComponent::ResetToDefaults()
{
	static UFieldFunc* pFnResetToDefaults = NULL;
	if(!pFnResetToDefaults)
		pFnResetToDefaults = UObject::FindFunction("Function Engine.ParticleSystemComponent.ResetToDefaults");

	Engine_ResetToDefaults_Parms ResetToDefaults_Parms;
	pFnResetToDefaults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetToDefaults,NULL,&ResetToDefaults_Parms,NULL);
	pFnResetToDefaults->FunctionFlags |= 0x400;
}

struct Engine_GetVectorParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	FVector3                                           OutVector;                                        		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UParticleSystemComponent::GetVectorParameter(struct FName InName,FVector3* OutVector)
{
	static UFieldFunc* pFnGetVectorParameter = NULL;
	if(!pFnGetVectorParameter)
		pFnGetVectorParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetVectorParameter");

	Engine_GetVectorParameter_Parms GetVectorParameter_Parms;
	memcpy(&GetVectorParameter_Parms.InName,&InName,0x8);
	pFnGetVectorParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVectorParameter,NULL,&GetVectorParameter_Parms,NULL);
	pFnGetVectorParameter->FunctionFlags |= 0x400;
	if(OutVector)
		memcpy(OutVector,&GetVectorParameter_Parms.OutVector,0xC);
	return GetVectorParameter_Parms.ReturnValue;
}

struct Engine_SetVectorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	FVector3                                           Param;                                            		// 0x000008 (0x000C)              
};

void UParticleSystemComponent::SetVectorParameter(struct FName ParameterName,FVector3 Param)
{
	static UFieldFunc* pFnSetVectorParameter = NULL;
	if(!pFnSetVectorParameter)
		pFnSetVectorParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetVectorParameter");

	Engine_SetVectorParameter_Parms SetVectorParameter_Parms;
	memcpy(&SetVectorParameter_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorParameter_Parms.Param,&Param,0xC);
	pFnSetVectorParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVectorParameter,NULL,&SetVectorParameter_Parms,NULL);
	pFnSetVectorParameter->FunctionFlags |= 0x400;
}

struct Engine_GetEditorLODLevel_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UParticleSystemComponent::GetEditorLODLevel()
{
	static UFieldFunc* pFnGetEditorLODLevel = NULL;
	if(!pFnGetEditorLODLevel)
		pFnGetEditorLODLevel = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetEditorLODLevel");

	Engine_GetEditorLODLevel_Parms GetEditorLODLevel_Parms;
	pFnGetEditorLODLevel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetEditorLODLevel,NULL,&GetEditorLODLevel_Parms,NULL);
	pFnGetEditorLODLevel->FunctionFlags |= 0x400;
	return GetEditorLODLevel_Parms.ReturnValue;
}

struct Engine_SetBeamSourceTangent_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	FVector3                                           NewTangentPoint;                                  		// 0x000004 (0x000C)              
	int                                                SourceIndex;                                      		// 0x000010 (0x0004)              
};

void UParticleSystemComponent::SetBeamSourceTangent(int EmitterIndex,FVector3 NewTangentPoint,int SourceIndex)
{
	static UFieldFunc* pFnSetBeamSourceTangent = NULL;
	if(!pFnSetBeamSourceTangent)
		pFnSetBeamSourceTangent = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamSourceTangent");

	Engine_SetBeamSourceTangent_Parms SetBeamSourceTangent_Parms;
	SetBeamSourceTangent_Parms.EmitterIndex = EmitterIndex;
	memcpy(&SetBeamSourceTangent_Parms.NewTangentPoint,&NewTangentPoint,0xC);
	SetBeamSourceTangent_Parms.SourceIndex = SourceIndex;
	pFnSetBeamSourceTangent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamSourceTangent,NULL,&SetBeamSourceTangent_Parms,NULL);
	pFnSetBeamSourceTangent->FunctionFlags |= 0x400;
}

struct Engine_ActivateSystem_Parms
{
	unsigned long                                      bFlagAsJustAttached : 1;                          		// 0x000000 (0x0004) [0x00000001] 
};

void UParticleSystemComponent::ActivateSystem(bool bFlagAsJustAttached)
{
	static UFieldFunc* pFnActivateSystem = NULL;
	if(!pFnActivateSystem)
		pFnActivateSystem = UObject::FindFunction("Function Engine.ParticleSystemComponent.ActivateSystem");

	Engine_ActivateSystem_Parms ActivateSystem_Parms;
	ActivateSystem_Parms.bFlagAsJustAttached = bFlagAsJustAttached;
	pFnActivateSystem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActivateSystem,NULL,&ActivateSystem_Parms,NULL);
	pFnActivateSystem->FunctionFlags |= 0x400;
}

struct Engine_SetEditorLODLevel_Parms
{
	int                                                InLODLevel;                                       		// 0x000000 (0x0004)              
};

void UParticleSystemComponent::SetEditorLODLevel(int InLODLevel)
{
	static UFieldFunc* pFnSetEditorLODLevel = NULL;
	if(!pFnSetEditorLODLevel)
		pFnSetEditorLODLevel = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetEditorLODLevel");

	Engine_SetEditorLODLevel_Parms SetEditorLODLevel_Parms;
	SetEditorLODLevel_Parms.InLODLevel = InLODLevel;
	pFnSetEditorLODLevel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEditorLODLevel,NULL,&SetEditorLODLevel_Parms,NULL);
	pFnSetEditorLODLevel->FunctionFlags |= 0x400;
}

struct Engine_SetBeamTargetStrength_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	float                                              NewTargetStrength;                                		// 0x000004 (0x0004)              
	int                                                TargetIndex;                                      		// 0x000008 (0x0004)              
};

void UParticleSystemComponent::SetBeamTargetStrength(int EmitterIndex,float NewTargetStrength,int TargetIndex)
{
	static UFieldFunc* pFnSetBeamTargetStrength = NULL;
	if(!pFnSetBeamTargetStrength)
		pFnSetBeamTargetStrength = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamTargetStrength");

	Engine_SetBeamTargetStrength_Parms SetBeamTargetStrength_Parms;
	SetBeamTargetStrength_Parms.EmitterIndex = EmitterIndex;
	SetBeamTargetStrength_Parms.NewTargetStrength = NewTargetStrength;
	SetBeamTargetStrength_Parms.TargetIndex = TargetIndex;
	pFnSetBeamTargetStrength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamTargetStrength,NULL,&SetBeamTargetStrength_Parms,NULL);
	pFnSetBeamTargetStrength->FunctionFlags |= 0x400;
}

struct Engine_SetActorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class AActor*                                      Param;                                            		// 0x000008 (0x0004)              
};

void UParticleSystemComponent::SetActorParameter(struct FName ParameterName,class AActor* Param)
{
	static UFieldFunc* pFnSetActorParameter = NULL;
	if(!pFnSetActorParameter)
		pFnSetActorParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetActorParameter");

	Engine_SetActorParameter_Parms SetActorParameter_Parms;
	memcpy(&SetActorParameter_Parms.ParameterName,&ParameterName,0x8);
	SetActorParameter_Parms.Param = Param;
	pFnSetActorParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActorParameter,NULL,&SetActorParameter_Parms,NULL);
	pFnSetActorParameter->FunctionFlags |= 0x400;
}

struct Engine_GetActorParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	class AActor*                                      OutActor;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UParticleSystemComponent::GetActorParameter(struct FName InName,class AActor** OutActor)
{
	static UFieldFunc* pFnGetActorParameter = NULL;
	if(!pFnGetActorParameter)
		pFnGetActorParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetActorParameter");

	Engine_GetActorParameter_Parms GetActorParameter_Parms;
	memcpy(&GetActorParameter_Parms.InName,&InName,0x8);
	pFnGetActorParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActorParameter,NULL,&GetActorParameter_Parms,NULL);
	pFnGetActorParameter->FunctionFlags |= 0x400;
	if(OutActor)
		*OutActor = GetActorParameter_Parms.OutActor;
	return GetActorParameter_Parms.ReturnValue;
}

struct Engine_SetBeamDistance_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	float                                              Distance;                                         		// 0x000004 (0x0004)              
};

void UParticleSystemComponent::SetBeamDistance(int EmitterIndex,float Distance)
{
	static UFieldFunc* pFnSetBeamDistance = NULL;
	if(!pFnSetBeamDistance)
		pFnSetBeamDistance = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamDistance");

	Engine_SetBeamDistance_Parms SetBeamDistance_Parms;
	SetBeamDistance_Parms.EmitterIndex = EmitterIndex;
	SetBeamDistance_Parms.Distance = Distance;
	pFnSetBeamDistance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamDistance,NULL,&SetBeamDistance_Parms,NULL);
	pFnSetBeamDistance->FunctionFlags |= 0x400;
}

struct Engine_SetLODLevel_Parms
{
	int                                                InLODLevel;                                       		// 0x000000 (0x0004)              
};

void UParticleSystemComponent::SetLODLevel(int InLODLevel)
{
	static UFieldFunc* pFnSetLODLevel = NULL;
	if(!pFnSetLODLevel)
		pFnSetLODLevel = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetLODLevel");

	Engine_SetLODLevel_Parms SetLODLevel_Parms;
	SetLODLevel_Parms.InLODLevel = InLODLevel;
	pFnSetLODLevel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLODLevel,NULL,&SetLODLevel_Parms,NULL);
	pFnSetLODLevel->FunctionFlags |= 0x400;
}

struct Engine_SetBeamSourcePoint_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	FVector3                                           NewSourcePoint;                                   		// 0x000004 (0x000C)              
	int                                                SourceIndex;                                      		// 0x000010 (0x0004)              
};

void UParticleSystemComponent::SetBeamSourcePoint(int EmitterIndex,FVector3 NewSourcePoint,int SourceIndex)
{
	static UFieldFunc* pFnSetBeamSourcePoint = NULL;
	if(!pFnSetBeamSourcePoint)
		pFnSetBeamSourcePoint = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamSourcePoint");

	Engine_SetBeamSourcePoint_Parms SetBeamSourcePoint_Parms;
	SetBeamSourcePoint_Parms.EmitterIndex = EmitterIndex;
	memcpy(&SetBeamSourcePoint_Parms.NewSourcePoint,&NewSourcePoint,0xC);
	SetBeamSourcePoint_Parms.SourceIndex = SourceIndex;
	pFnSetBeamSourcePoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamSourcePoint,NULL,&SetBeamSourcePoint_Parms,NULL);
	pFnSetBeamSourcePoint->FunctionFlags |= 0x400;
}

struct Engine_DeactivateSystem_Parms
{
};

void UParticleSystemComponent::DeactivateSystem()
{
	static UFieldFunc* pFnDeactivateSystem = NULL;
	if(!pFnDeactivateSystem)
		pFnDeactivateSystem = UObject::FindFunction("Function Engine.ParticleSystemComponent.DeactivateSystem");

	Engine_DeactivateSystem_Parms DeactivateSystem_Parms;
	pFnDeactivateSystem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeactivateSystem,NULL,&DeactivateSystem_Parms,NULL);
	pFnDeactivateSystem->FunctionFlags |= 0x400;
}

struct Engine_SetMaterialParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class UMaterialInterface*                          Param;                                            		// 0x000008 (0x0004)              
};

void UParticleSystemComponent::SetMaterialParameter(struct FName ParameterName,class UMaterialInterface* Param)
{
	static UFieldFunc* pFnSetMaterialParameter = NULL;
	if(!pFnSetMaterialParameter)
		pFnSetMaterialParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetMaterialParameter");

	Engine_SetMaterialParameter_Parms SetMaterialParameter_Parms;
	memcpy(&SetMaterialParameter_Parms.ParameterName,&ParameterName,0x8);
	SetMaterialParameter_Parms.Param = Param;
	pFnSetMaterialParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMaterialParameter,NULL,&SetMaterialParameter_Parms,NULL);
	pFnSetMaterialParameter->FunctionFlags |= 0x400;
}

struct Engine_SetFloatParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Param;                                            		// 0x000008 (0x0004)              
};

void UParticleSystemComponent::SetFloatParameter(struct FName ParameterName,float Param)
{
	static UFieldFunc* pFnSetFloatParameter = NULL;
	if(!pFnSetFloatParameter)
		pFnSetFloatParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetFloatParameter");

	Engine_SetFloatParameter_Parms SetFloatParameter_Parms;
	memcpy(&SetFloatParameter_Parms.ParameterName,&ParameterName,0x8);
	SetFloatParameter_Parms.Param = Param;
	pFnSetFloatParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFloatParameter,NULL,&SetFloatParameter_Parms,NULL);
	pFnSetFloatParameter->FunctionFlags |= 0x400;
}

struct Engine_SetBeamEndPoint_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	FVector3                                           NewEndPoint;                                      		// 0x000004 (0x000C)              
};

void UParticleSystemComponent::SetBeamEndPoint(int EmitterIndex,FVector3 NewEndPoint)
{
	static UFieldFunc* pFnSetBeamEndPoint = NULL;
	if(!pFnSetBeamEndPoint)
		pFnSetBeamEndPoint = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamEndPoint");

	Engine_SetBeamEndPoint_Parms SetBeamEndPoint_Parms;
	SetBeamEndPoint_Parms.EmitterIndex = EmitterIndex;
	memcpy(&SetBeamEndPoint_Parms.NewEndPoint,&NewEndPoint,0xC);
	pFnSetBeamEndPoint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamEndPoint,NULL,&SetBeamEndPoint_Parms,NULL);
	pFnSetBeamEndPoint->FunctionFlags |= 0x400;
}

struct Engine_ClearParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	unsigned char                                      ParameterType;                                    		// 0x000008 (0x0001)              
};

void UParticleSystemComponent::ClearParameter(struct FName ParameterName,unsigned char ParameterType)
{
	static UFieldFunc* pFnClearParameter = NULL;
	if(!pFnClearParameter)
		pFnClearParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.ClearParameter");

	Engine_ClearParameter_Parms ClearParameter_Parms;
	memcpy(&ClearParameter_Parms.ParameterName,&ParameterName,0x8);
	ClearParameter_Parms.ParameterType = ParameterType;
	pFnClearParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearParameter,NULL,&ClearParameter_Parms,NULL);
	pFnClearParameter->FunctionFlags |= 0x400;
}

struct Engine_GetColorParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	DWORD                                              OutColor;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UParticleSystemComponent::GetColorParameter(struct FName InName,DWORD* OutColor)
{
	static UFieldFunc* pFnGetColorParameter = NULL;
	if(!pFnGetColorParameter)
		pFnGetColorParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetColorParameter");

	Engine_GetColorParameter_Parms GetColorParameter_Parms;
	memcpy(&GetColorParameter_Parms.InName,&InName,0x8);
	pFnGetColorParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetColorParameter,NULL,&GetColorParameter_Parms,NULL);
	pFnGetColorParameter->FunctionFlags |= 0x400;
	if(OutColor)
		memcpy(OutColor,&GetColorParameter_Parms.OutColor,0x4);
	return GetColorParameter_Parms.ReturnValue;
}

struct Engine_SetKillOnCompleted_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bKill : 1;                                        		// 0x000004 (0x0004) [0x00000001] 
};

void UParticleSystemComponent::SetKillOnCompleted(int EmitterIndex,bool bKill)
{
	static UFieldFunc* pFnSetKillOnCompleted = NULL;
	if(!pFnSetKillOnCompleted)
		pFnSetKillOnCompleted = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetKillOnCompleted");

	Engine_SetKillOnCompleted_Parms SetKillOnCompleted_Parms;
	SetKillOnCompleted_Parms.EmitterIndex = EmitterIndex;
	SetKillOnCompleted_Parms.bKill = bKill;
	pFnSetKillOnCompleted->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetKillOnCompleted,NULL,&SetKillOnCompleted_Parms,NULL);
	pFnSetKillOnCompleted->FunctionFlags |= 0x400;
}

struct Engine_RewindEmitterInstances_Parms
{
};

void UParticleSystemComponent::RewindEmitterInstances()
{
	static UFieldFunc* pFnRewindEmitterInstances = NULL;
	if(!pFnRewindEmitterInstances)
		pFnRewindEmitterInstances = UObject::FindFunction("Function Engine.ParticleSystemComponent.RewindEmitterInstances");

	Engine_RewindEmitterInstances_Parms RewindEmitterInstances_Parms;
	pFnRewindEmitterInstances->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRewindEmitterInstances,NULL,&RewindEmitterInstances_Parms,NULL);
	pFnRewindEmitterInstances->FunctionFlags |= 0x400;
}

struct Engine_GetFloatParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	float                                              OutFloat;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UParticleSystemComponent::GetFloatParameter(struct FName InName,float* OutFloat)
{
	static UFieldFunc* pFnGetFloatParameter = NULL;
	if(!pFnGetFloatParameter)
		pFnGetFloatParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetFloatParameter");

	Engine_GetFloatParameter_Parms GetFloatParameter_Parms;
	memcpy(&GetFloatParameter_Parms.InName,&InName,0x8);
	pFnGetFloatParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFloatParameter,NULL,&GetFloatParameter_Parms,NULL);
	pFnGetFloatParameter->FunctionFlags |= 0x400;
	if(OutFloat)
		*OutFloat = GetFloatParameter_Parms.OutFloat;
	return GetFloatParameter_Parms.ReturnValue;
}

struct Engine_SetTemplate_Parms
{
	class UParticleSystem*                             NewTemplate;                                      		// 0x000000 (0x0004)              
};

void UParticleSystemComponent::SetTemplate(class UParticleSystem* NewTemplate)
{
	static UFieldFunc* pFnSetTemplate = NULL;
	if(!pFnSetTemplate)
		pFnSetTemplate = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetTemplate");

	Engine_SetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	pFnSetTemplate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTemplate,NULL,&SetTemplate_Parms,NULL);
	pFnSetTemplate->FunctionFlags |= 0x400;
}

struct Engine_OnSystemFinished_Parms
{
	class UParticleSystemComponent*                    PSystem;                                          		// 0x000000 (0x0004)              
};

void UParticleSystemComponent::OnSystemFinished(class UParticleSystemComponent* PSystem)
{
	static UFieldFunc* pFnOnSystemFinished = NULL;
	if(!pFnOnSystemFinished)
		pFnOnSystemFinished = UObject::FindFunction("Function Engine.ParticleSystemComponent.OnSystemFinished");

	Engine_OnSystemFinished_Parms OnSystemFinished_Parms;
	OnSystemFinished_Parms.PSystem = PSystem;
	ProcessEvent(pFnOnSystemFinished,NULL,&OnSystemFinished_Parms,NULL);
}

struct Engine_SetKillOnDeactivate_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bKill : 1;                                        		// 0x000004 (0x0004) [0x00000001] 
};

void UParticleSystemComponent::SetKillOnDeactivate(int EmitterIndex,bool bKill)
{
	static UFieldFunc* pFnSetKillOnDeactivate = NULL;
	if(!pFnSetKillOnDeactivate)
		pFnSetKillOnDeactivate = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetKillOnDeactivate");

	Engine_SetKillOnDeactivate_Parms SetKillOnDeactivate_Parms;
	SetKillOnDeactivate_Parms.EmitterIndex = EmitterIndex;
	SetKillOnDeactivate_Parms.bKill = bKill;
	pFnSetKillOnDeactivate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetKillOnDeactivate,NULL,&SetKillOnDeactivate_Parms,NULL);
	pFnSetKillOnDeactivate->FunctionFlags |= 0x400;
}

struct Engine_SetBeamType_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	int                                                NewMethod;                                        		// 0x000004 (0x0004)              
};

void UParticleSystemComponent::SetBeamType(int EmitterIndex,int NewMethod)
{
	static UFieldFunc* pFnSetBeamType = NULL;
	if(!pFnSetBeamType)
		pFnSetBeamType = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamType");

	Engine_SetBeamType_Parms SetBeamType_Parms;
	SetBeamType_Parms.EmitterIndex = EmitterIndex;
	SetBeamType_Parms.NewMethod = NewMethod;
	pFnSetBeamType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamType,NULL,&SetBeamType_Parms,NULL);
	pFnSetBeamType->FunctionFlags |= 0x400;
}

struct Engine_SetBeamTessellationFactor_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	float                                              NewFactor;                                        		// 0x000004 (0x0004)              
};

void UParticleSystemComponent::SetBeamTessellationFactor(int EmitterIndex,float NewFactor)
{
	static UFieldFunc* pFnSetBeamTessellationFactor = NULL;
	if(!pFnSetBeamTessellationFactor)
		pFnSetBeamTessellationFactor = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamTessellationFactor");

	Engine_SetBeamTessellationFactor_Parms SetBeamTessellationFactor_Parms;
	SetBeamTessellationFactor_Parms.EmitterIndex = EmitterIndex;
	SetBeamTessellationFactor_Parms.NewFactor = NewFactor;
	pFnSetBeamTessellationFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamTessellationFactor,NULL,&SetBeamTessellationFactor_Parms,NULL);
	pFnSetBeamTessellationFactor->FunctionFlags |= 0x400;
}

struct Engine_SetBeamSourceStrength_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
	float                                              NewSourceStrength;                                		// 0x000004 (0x0004)              
	int                                                SourceIndex;                                      		// 0x000008 (0x0004)              
};

void UParticleSystemComponent::SetBeamSourceStrength(int EmitterIndex,float NewSourceStrength,int SourceIndex)
{
	static UFieldFunc* pFnSetBeamSourceStrength = NULL;
	if(!pFnSetBeamSourceStrength)
		pFnSetBeamSourceStrength = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetBeamSourceStrength");

	Engine_SetBeamSourceStrength_Parms SetBeamSourceStrength_Parms;
	SetBeamSourceStrength_Parms.EmitterIndex = EmitterIndex;
	SetBeamSourceStrength_Parms.NewSourceStrength = NewSourceStrength;
	SetBeamSourceStrength_Parms.SourceIndex = SourceIndex;
	pFnSetBeamSourceStrength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBeamSourceStrength,NULL,&SetBeamSourceStrength_Parms,NULL);
	pFnSetBeamSourceStrength->FunctionFlags |= 0x400;
}

struct Engine_SetSkipUpdateDynamicDataDuringTick_Parms
{
	unsigned long                                      bInSkipUpdateDynamicDataDuringTick : 1;           		// 0x000000 (0x0004) [0x00000001] 
};

void UParticleSystemComponent::SetSkipUpdateDynamicDataDuringTick(bool bInSkipUpdateDynamicDataDuringTick)
{
	static UFieldFunc* pFnSetSkipUpdateDynamicDataDuringTick = NULL;
	if(!pFnSetSkipUpdateDynamicDataDuringTick)
		pFnSetSkipUpdateDynamicDataDuringTick = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetSkipUpdateDynamicDataDuringTick");

	Engine_SetSkipUpdateDynamicDataDuringTick_Parms SetSkipUpdateDynamicDataDuringTick_Parms;
	SetSkipUpdateDynamicDataDuringTick_Parms.bInSkipUpdateDynamicDataDuringTick = bInSkipUpdateDynamicDataDuringTick;
	pFnSetSkipUpdateDynamicDataDuringTick->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSkipUpdateDynamicDataDuringTick,NULL,&SetSkipUpdateDynamicDataDuringTick_Parms,NULL);
	pFnSetSkipUpdateDynamicDataDuringTick->FunctionFlags |= 0x400;
}

struct Engine_SetColorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	DWORD                                              Param;                                            		// 0x000008 (0x0004)              
};

void UParticleSystemComponent::SetColorParameter(struct FName ParameterName,DWORD Param)
{
	static UFieldFunc* pFnSetColorParameter = NULL;
	if(!pFnSetColorParameter)
		pFnSetColorParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.SetColorParameter");

	Engine_SetColorParameter_Parms SetColorParameter_Parms;
	memcpy(&SetColorParameter_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetColorParameter_Parms.Param,&Param,0x4);
	pFnSetColorParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetColorParameter,NULL,&SetColorParameter_Parms,NULL);
	pFnSetColorParameter->FunctionFlags |= 0x400;
}

struct Engine_GetMaterialParameter_Parms
{
	struct FName                                       InName;                                           		// 0x000000 (0x0008)              
	class UMaterialInterface*                          OutMaterial;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UParticleSystemComponent::GetMaterialParameter(struct FName InName,class UMaterialInterface** OutMaterial)
{
	static UFieldFunc* pFnGetMaterialParameter = NULL;
	if(!pFnGetMaterialParameter)
		pFnGetMaterialParameter = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetMaterialParameter");

	Engine_GetMaterialParameter_Parms GetMaterialParameter_Parms;
	memcpy(&GetMaterialParameter_Parms.InName,&InName,0x8);
	pFnGetMaterialParameter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaterialParameter,NULL,&GetMaterialParameter_Parms,NULL);
	pFnGetMaterialParameter->FunctionFlags |= 0x400;
	if(OutMaterial)
		*OutMaterial = GetMaterialParameter_Parms.OutMaterial;
	return GetMaterialParameter_Parms.ReturnValue;
}

struct Engine_GetSkipUpdateDynamicDataDuringTick_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UParticleSystemComponent::GetSkipUpdateDynamicDataDuringTick()
{
	static UFieldFunc* pFnGetSkipUpdateDynamicDataDuringTick = NULL;
	if(!pFnGetSkipUpdateDynamicDataDuringTick)
		pFnGetSkipUpdateDynamicDataDuringTick = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetSkipUpdateDynamicDataDuringTick");

	Engine_GetSkipUpdateDynamicDataDuringTick_Parms GetSkipUpdateDynamicDataDuringTick_Parms;
	pFnGetSkipUpdateDynamicDataDuringTick->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSkipUpdateDynamicDataDuringTick,NULL,&GetSkipUpdateDynamicDataDuringTick_Parms,NULL);
	pFnGetSkipUpdateDynamicDataDuringTick->FunctionFlags |= 0x400;
	return GetSkipUpdateDynamicDataDuringTick_Parms.ReturnValue;
}

struct Engine_GetLODLevel_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UParticleSystemComponent::GetLODLevel()
{
	static UFieldFunc* pFnGetLODLevel = NULL;
	if(!pFnGetLODLevel)
		pFnGetLODLevel = UObject::FindFunction("Function Engine.ParticleSystemComponent.GetLODLevel");

	Engine_GetLODLevel_Parms GetLODLevel_Parms;
	pFnGetLODLevel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLODLevel,NULL,&GetLODLevel_Parms,NULL);
	pFnGetLODLevel->FunctionFlags |= 0x400;
	return GetLODLevel_Parms.ReturnValue;
}

struct Engine_KillParticlesForced_Parms
{
};

void UParticleSystemComponent::KillParticlesForced()
{
	static UFieldFunc* pFnKillParticlesForced = NULL;
	if(!pFnKillParticlesForced)
		pFnKillParticlesForced = UObject::FindFunction("Function Engine.ParticleSystemComponent.KillParticlesForced");

	Engine_KillParticlesForced_Parms KillParticlesForced_Parms;
	pFnKillParticlesForced->FunctionFlags |= ~0x400;
	ProcessEvent(pFnKillParticlesForced,NULL,&KillParticlesForced_Parms,NULL);
	pFnKillParticlesForced->FunctionFlags |= 0x400;
}

struct Engine_RewindEmitterInstance_Parms
{
	int                                                EmitterIndex;                                     		// 0x000000 (0x0004)              
};

void UParticleSystemComponent::RewindEmitterInstance(int EmitterIndex)
{
	static UFieldFunc* pFnRewindEmitterInstance = NULL;
	if(!pFnRewindEmitterInstance)
		pFnRewindEmitterInstance = UObject::FindFunction("Function Engine.ParticleSystemComponent.RewindEmitterInstance");

	Engine_RewindEmitterInstance_Parms RewindEmitterInstance_Parms;
	RewindEmitterInstance_Parms.EmitterIndex = EmitterIndex;
	pFnRewindEmitterInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRewindEmitterInstance,NULL,&RewindEmitterInstance_Parms,NULL);
	pFnRewindEmitterInstance->FunctionFlags |= 0x400;
}

struct Engine_GetLODLevelCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UParticleSystem::GetLODLevelCount()
{
	static UFieldFunc* pFnGetLODLevelCount = NULL;
	if(!pFnGetLODLevelCount)
		pFnGetLODLevelCount = UObject::FindFunction("Function Engine.ParticleSystem.GetLODLevelCount");

	Engine_GetLODLevelCount_Parms GetLODLevelCount_Parms;
	pFnGetLODLevelCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLODLevelCount,NULL,&GetLODLevelCount_Parms,NULL);
	pFnGetLODLevelCount->FunctionFlags |= 0x400;
	return GetLODLevelCount_Parms.ReturnValue;
}

struct Engine_SetCurrentLODMethod_Parms
{
	unsigned char                                      InMethod;                                         		// 0x000000 (0x0001)              
};

void UParticleSystem::SetCurrentLODMethod(unsigned char InMethod)
{
	static UFieldFunc* pFnSetCurrentLODMethod = NULL;
	if(!pFnSetCurrentLODMethod)
		pFnSetCurrentLODMethod = UObject::FindFunction("Function Engine.ParticleSystem.SetCurrentLODMethod");

	Engine_SetCurrentLODMethod_Parms SetCurrentLODMethod_Parms;
	SetCurrentLODMethod_Parms.InMethod = InMethod;
	pFnSetCurrentLODMethod->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCurrentLODMethod,NULL,&SetCurrentLODMethod_Parms,NULL);
	pFnSetCurrentLODMethod->FunctionFlags |= 0x400;
}

struct Engine_GetCurrentLODMethod_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UParticleSystem::GetCurrentLODMethod()
{
	static UFieldFunc* pFnGetCurrentLODMethod = NULL;
	if(!pFnGetCurrentLODMethod)
		pFnGetCurrentLODMethod = UObject::FindFunction("Function Engine.ParticleSystem.GetCurrentLODMethod");

	Engine_GetCurrentLODMethod_Parms GetCurrentLODMethod_Parms;
	pFnGetCurrentLODMethod->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentLODMethod,NULL,&GetCurrentLODMethod_Parms,NULL);
	pFnGetCurrentLODMethod->FunctionFlags |= 0x400;
	return GetCurrentLODMethod_Parms.ReturnValue;
}

struct Engine_SetLODDistance_Parms
{
	int                                                LODLevelIndex;                                    		// 0x000000 (0x0004)              
	float                                              InDistance;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UParticleSystem::SetLODDistance(int LODLevelIndex,float InDistance)
{
	static UFieldFunc* pFnSetLODDistance = NULL;
	if(!pFnSetLODDistance)
		pFnSetLODDistance = UObject::FindFunction("Function Engine.ParticleSystem.SetLODDistance");

	Engine_SetLODDistance_Parms SetLODDistance_Parms;
	SetLODDistance_Parms.LODLevelIndex = LODLevelIndex;
	SetLODDistance_Parms.InDistance = InDistance;
	pFnSetLODDistance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLODDistance,NULL,&SetLODDistance_Parms,NULL);
	pFnSetLODDistance->FunctionFlags |= 0x400;
	return SetLODDistance_Parms.ReturnValue;
}

struct Engine_GetLODDistance_Parms
{
	int                                                LODLevelIndex;                                    		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UParticleSystem::GetLODDistance(int LODLevelIndex)
{
	static UFieldFunc* pFnGetLODDistance = NULL;
	if(!pFnGetLODDistance)
		pFnGetLODDistance = UObject::FindFunction("Function Engine.ParticleSystem.GetLODDistance");

	Engine_GetLODDistance_Parms GetLODDistance_Parms;
	GetLODDistance_Parms.LODLevelIndex = LODLevelIndex;
	pFnGetLODDistance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLODDistance,NULL,&GetLODDistance_Parms,NULL);
	pFnGetLODDistance->FunctionFlags |= 0x400;
	return GetLODDistance_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AKActor::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.KActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_TakeRadiusDamage_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	float                                              BaseDamage;                                       		// 0x000004 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000014 (0x000C)              
	unsigned long                                      bFullDamage : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	class AActor*                                      DamageCauser;                                     		// 0x000024 (0x0004)              
	//int                                                Idx;                                              		// 0x000028 (0x0004)              
	//class USeqEvent_TakeDamage*                        DmgEvt;                                           		// 0x00002C (0x0004)              
};

void AKActor::TakeRadiusDamage(class AController* InstigatedBy,float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,bool bFullDamage,class AActor* DamageCauser)
{
	static UFieldFunc* pFnTakeRadiusDamage = NULL;
	if(!pFnTakeRadiusDamage)
		pFnTakeRadiusDamage = UObject::FindFunction("Function Engine.KActor.TakeRadiusDamage");

	Engine_TakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy(&TakeRadiusDamage_Parms.HurtOrigin,&HurtOrigin,0xC);
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	ProcessEvent(pFnTakeRadiusDamage,NULL,&TakeRadiusDamage_Parms,NULL);
}

struct Engine_ApplyImpulse_Parms
{
	FVector3                                           ImpulseDir;                                       		// 0x000000 (0x000C)              
	float                                              ImpulseMag;                                       		// 0x00000C (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000010 (0x000C)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x00001C (0x001C)              
	//FVector3                                           ApplyImpulse;                                     		// 0x000038 (0x000C)              
};

void AKActor::ApplyImpulse(FVector3 ImpulseDir,float ImpulseMag,FVector3 HitLocation,struct FTraceHitInfo HitInfo)
{
	static UFieldFunc* pFnApplyImpulse = NULL;
	if(!pFnApplyImpulse)
		pFnApplyImpulse = UObject::FindFunction("Function Engine.KActor.ApplyImpulse");

	Engine_ApplyImpulse_Parms ApplyImpulse_Parms;
	memcpy(&ApplyImpulse_Parms.ImpulseDir,&ImpulseDir,0xC);
	ApplyImpulse_Parms.ImpulseMag = ImpulseMag;
	memcpy(&ApplyImpulse_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&ApplyImpulse_Parms.HitInfo,&HitInfo,0x1C);
	ProcessEvent(pFnApplyImpulse,NULL,&ApplyImpulse_Parms,NULL);
}

struct Engine_ResolveRBState_Parms
{
};

void AKActor::ResolveRBState()
{
	static UFieldFunc* pFnResolveRBState = NULL;
	if(!pFnResolveRBState)
		pFnResolveRBState = UObject::FindFunction("Function Engine.KActor.ResolveRBState");

	Engine_ResolveRBState_Parms ResolveRBState_Parms;
	pFnResolveRBState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResolveRBState,NULL,&ResolveRBState_Parms,NULL);
	pFnResolveRBState->FunctionFlags |= 0x400;
}

struct Engine_FellOutOfWorld_Parms
{
	class UClass*                                      dmgType;                                          		// 0x000000 (0x0004)              
};

void AKActor::FellOutOfWorld(class UClass* dmgType)
{
	static UFieldFunc* pFnFellOutOfWorld = NULL;
	if(!pFnFellOutOfWorld)
		pFnFellOutOfWorld = UObject::FindFunction("Function Engine.KActor.FellOutOfWorld");

	Engine_FellOutOfWorld_Parms FellOutOfWorld_Parms;
	FellOutOfWorld_Parms.dmgType = dmgType;
	ProcessEvent(pFnFellOutOfWorld,NULL,&FellOutOfWorld_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void AKActor::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.KActor.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_OnTeleport_Parms
{
	class USeqAct_Teleport*                            inAction;                                         		// 0x000000 (0x0004)              
	//TArray<class UObject*>                             objVars;                                          		// 0x000004 (0x000C)              
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//class AActor*                                      destActor;                                        		// 0x000014 (0x0004)              
};

void AKActor::OnTeleport(class USeqAct_Teleport* inAction)
{
	static UFieldFunc* pFnOnTeleport = NULL;
	if(!pFnOnTeleport)
		pFnOnTeleport = UObject::FindFunction("Function Engine.KActor.OnTeleport");

	Engine_OnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.inAction = inAction;
	ProcessEvent(pFnOnTeleport,NULL,&OnTeleport_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
	//FVector3                                           NewDrawScale3D;                                   		// 0x000008 (0x000C)              
};

void AKActor::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.KActor.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_GetKActorPhysMaterial_Parms
{
	class UPhysicalMaterial*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPhysicalMaterial* AKActor::GetKActorPhysMaterial()
{
	static UFieldFunc* pFnGetKActorPhysMaterial = NULL;
	if(!pFnGetKActorPhysMaterial)
		pFnGetKActorPhysMaterial = UObject::FindFunction("Function Engine.KActor.GetKActorPhysMaterial");

	Engine_GetKActorPhysMaterial_Parms GetKActorPhysMaterial_Parms;
	pFnGetKActorPhysMaterial->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetKActorPhysMaterial,NULL,&GetKActorPhysMaterial_Parms,NULL);
	pFnGetKActorPhysMaterial->FunctionFlags |= 0x400;
	return GetKActorPhysMaterial_Parms.ReturnValue;
}

struct Engine_SetPhysicalCollisionProperties_Parms
{
	//class UPhysicalMaterial*                           PhysMat;                                          		// 0x000000 (0x0004)              
};

void AKActor::SetPhysicalCollisionProperties()
{
	static UFieldFunc* pFnSetPhysicalCollisionProperties = NULL;
	if(!pFnSetPhysicalCollisionProperties)
		pFnSetPhysicalCollisionProperties = UObject::FindFunction("Function Engine.KActor.SetPhysicalCollisionProperties");

	Engine_SetPhysicalCollisionProperties_Parms SetPhysicalCollisionProperties_Parms;
	ProcessEvent(pFnSetPhysicalCollisionProperties,NULL,&SetPhysicalCollisionProperties_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AKActor::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.KActor.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AKActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.KActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_Recycle_Parms
{
};

void AKActorSpawnable::Recycle()
{
	static UFieldFunc* pFnRecycle = NULL;
	if(!pFnRecycle)
		pFnRecycle = UObject::FindFunction("Function Engine.KActorSpawnable.Recycle");

	Engine_Recycle_Parms Recycle_Parms;
	ProcessEvent(pFnRecycle,NULL,&Recycle_Parms,NULL);
}

struct Engine_ResetComponents_Parms
{
};

void AKActorSpawnable::ResetComponents()
{
	static UFieldFunc* pFnResetComponents = NULL;
	if(!pFnResetComponents)
		pFnResetComponents = UObject::FindFunction("Function Engine.KActorSpawnable.ResetComponents");

	Engine_ResetComponents_Parms ResetComponents_Parms;
	pFnResetComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetComponents,NULL,&ResetComponents_Parms,NULL);
	pFnResetComponents->FunctionFlags |= 0x400;
}

struct Engine_Initialize_Parms
{
};

void AKActorSpawnable::Initialize()
{
	static UFieldFunc* pFnInitialize = NULL;
	if(!pFnInitialize)
		pFnInitialize = UObject::FindFunction("Function Engine.KActorSpawnable.Initialize");

	Engine_Initialize_Parms Initialize_Parms;
	ProcessEvent(pFnInitialize,NULL,&Initialize_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AKAsset::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.KAsset.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnTeleport_Parms
{
	class USeqAct_Teleport*                            inAction;                                         		// 0x000000 (0x0004)              
	//class AActor*                                      destActor;                                        		// 0x000004 (0x0004)              
};

void AKAsset::OnTeleport(class USeqAct_Teleport* inAction)
{
	static UFieldFunc* pFnOnTeleport = NULL;
	if(!pFnOnTeleport)
		pFnOnTeleport = UObject::FindFunction("Function Engine.KAsset.OnTeleport");

	Engine_OnTeleport_Parms OnTeleport_Parms;
	OnTeleport_Parms.inAction = inAction;
	ProcessEvent(pFnOnTeleport,NULL,&OnTeleport_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AKAsset::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.KAsset.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AKAsset::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.KAsset.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AKAsset::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.KAsset.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_TakeRadiusDamage_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	float                                              BaseDamage;                                       		// 0x000004 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000014 (0x000C)              
	unsigned long                                      bFullDamage : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	class AActor*                                      DamageCauser;                                     		// 0x000024 (0x0004)              
};

void AKAsset::TakeRadiusDamage(class AController* InstigatedBy,float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,bool bFullDamage,class AActor* DamageCauser)
{
	static UFieldFunc* pFnTakeRadiusDamage = NULL;
	if(!pFnTakeRadiusDamage)
		pFnTakeRadiusDamage = UObject::FindFunction("Function Engine.KAsset.TakeRadiusDamage");

	Engine_TakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy(&TakeRadiusDamage_Parms.HurtOrigin,&HurtOrigin,0xC);
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	ProcessEvent(pFnTakeRadiusDamage,NULL,&TakeRadiusDamage_Parms,NULL);
}

struct Engine_DoKismetAttachment_Parms
{
	class AActor*                                      Attachment;                                       		// 0x000000 (0x0004)              
	class USeqAct_AttachToActor*                       Action;                                           		// 0x000004 (0x0004)              
};

void AKAsset::DoKismetAttachment(class AActor* Attachment,class USeqAct_AttachToActor* Action)
{
	static UFieldFunc* pFnDoKismetAttachment = NULL;
	if(!pFnDoKismetAttachment)
		pFnDoKismetAttachment = UObject::FindFunction("Function Engine.KAsset.DoKismetAttachment");

	Engine_DoKismetAttachment_Parms DoKismetAttachment_Parms;
	DoKismetAttachment_Parms.Attachment = Attachment;
	DoKismetAttachment_Parms.Action = Action;
	ProcessEvent(pFnDoKismetAttachment,NULL,&DoKismetAttachment_Parms,NULL);
}

struct Engine_SuspensionHeavyShift_Parms
{
	float                                              Delta;                                            		// 0x000000 (0x0004)              
};

void ASVehicle::SuspensionHeavyShift(float Delta)
{
	static UFieldFunc* pFnSuspensionHeavyShift = NULL;
	if(!pFnSuspensionHeavyShift)
		pFnSuspensionHeavyShift = UObject::FindFunction("Function Engine.SVehicle.SuspensionHeavyShift");

	Engine_SuspensionHeavyShift_Parms SuspensionHeavyShift_Parms;
	SuspensionHeavyShift_Parms.Delta = Delta;
	ProcessEvent(pFnSuspensionHeavyShift,NULL,&SuspensionHeavyShift_Parms,NULL);
}

struct Engine_DrivingStatusChanged_Parms
{
};

void ASVehicle::DrivingStatusChanged()
{
	static UFieldFunc* pFnDrivingStatusChanged = NULL;
	if(!pFnDrivingStatusChanged)
		pFnDrivingStatusChanged = UObject::FindFunction("Function Engine.SVehicle.DrivingStatusChanged");

	Engine_DrivingStatusChanged_Parms DrivingStatusChanged_Parms;
	ProcessEvent(pFnDrivingStatusChanged,NULL,&DrivingStatusChanged_Parms,NULL);
}

struct Engine_GetDefaultCameraMode_Parms
{
	class APlayerController*                           RequestedBy;                                      		// 0x000000 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000004 (0x0008)              
};

struct FName ASVehicle::GetDefaultCameraMode(class APlayerController* RequestedBy)
{
	static UFieldFunc* pFnGetDefaultCameraMode = NULL;
	if(!pFnGetDefaultCameraMode)
		pFnGetDefaultCameraMode = UObject::FindFunction("Function Engine.SVehicle.GetDefaultCameraMode");

	Engine_GetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;
	GetDefaultCameraMode_Parms.RequestedBy = RequestedBy;
	pFnGetDefaultCameraMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultCameraMode,NULL,&GetDefaultCameraMode_Parms,NULL);
	pFnGetDefaultCameraMode->FunctionFlags |= 0x400;
	return GetDefaultCameraMode_Parms.ReturnValue;
}

struct Engine_InitVehicleRagdoll_Parms
{
	class USkeletalMesh*                               RagdollMesh;                                      		// 0x000000 (0x0004)              
	class UPhysicsAsset*                               RagdollPhysAsset;                                 		// 0x000004 (0x0004)              
	FVector3                                           ActorMove;                                        		// 0x000008 (0x000C)              
};

void ASVehicle::InitVehicleRagdoll(class USkeletalMesh* RagdollMesh,class UPhysicsAsset* RagdollPhysAsset,FVector3 ActorMove)
{
	static UFieldFunc* pFnInitVehicleRagdoll = NULL;
	if(!pFnInitVehicleRagdoll)
		pFnInitVehicleRagdoll = UObject::FindFunction("Function Engine.SVehicle.InitVehicleRagdoll");

	Engine_InitVehicleRagdoll_Parms InitVehicleRagdoll_Parms;
	InitVehicleRagdoll_Parms.RagdollMesh = RagdollMesh;
	InitVehicleRagdoll_Parms.RagdollPhysAsset = RagdollPhysAsset;
	memcpy(&InitVehicleRagdoll_Parms.ActorMove,&ActorMove,0xC);
	pFnInitVehicleRagdoll->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitVehicleRagdoll,NULL,&InitVehicleRagdoll_Parms,NULL);
	pFnInitVehicleRagdoll->FunctionFlags |= 0x400;
}

struct Engine_HasWheelsOnGround_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool ASVehicle::HasWheelsOnGround()
{
	static UFieldFunc* pFnHasWheelsOnGround = NULL;
	if(!pFnHasWheelsOnGround)
		pFnHasWheelsOnGround = UObject::FindFunction("Function Engine.SVehicle.HasWheelsOnGround");

	Engine_HasWheelsOnGround_Parms HasWheelsOnGround_Parms;
	pFnHasWheelsOnGround->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasWheelsOnGround,NULL,&HasWheelsOnGround_Parms,NULL);
	pFnHasWheelsOnGround->FunctionFlags |= 0x400;
	return HasWheelsOnGround_Parms.ReturnValue;
}

struct Engine_SetWheelCollision_Parms
{
	int                                                WheelNum;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bCollision : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
};

void ASVehicle::SetWheelCollision(int WheelNum,bool bCollision)
{
	static UFieldFunc* pFnSetWheelCollision = NULL;
	if(!pFnSetWheelCollision)
		pFnSetWheelCollision = UObject::FindFunction("Function Engine.SVehicle.SetWheelCollision");

	Engine_SetWheelCollision_Parms SetWheelCollision_Parms;
	SetWheelCollision_Parms.WheelNum = WheelNum;
	SetWheelCollision_Parms.bCollision = bCollision;
	pFnSetWheelCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetWheelCollision,NULL,&SetWheelCollision_Parms,NULL);
	pFnSetWheelCollision->FunctionFlags |= 0x400;
}

struct Engine_StopEngineSound_Parms
{
};

void ASVehicle::StopEngineSound()
{
	static UFieldFunc* pFnStopEngineSound = NULL;
	if(!pFnStopEngineSound)
		pFnStopEngineSound = UObject::FindFunction("Function Engine.SVehicle.StopEngineSound");

	Engine_StopEngineSound_Parms StopEngineSound_Parms;
	ProcessEvent(pFnStopEngineSound,NULL,&StopEngineSound_Parms,NULL);
}

struct Engine_VehiclePlayExitSound_Parms
{
};

void ASVehicle::VehiclePlayExitSound()
{
	static UFieldFunc* pFnVehiclePlayExitSound = NULL;
	if(!pFnVehiclePlayExitSound)
		pFnVehiclePlayExitSound = UObject::FindFunction("Function Engine.SVehicle.VehiclePlayExitSound");

	Engine_VehiclePlayExitSound_Parms VehiclePlayExitSound_Parms;
	ProcessEvent(pFnVehiclePlayExitSound,NULL,&VehiclePlayExitSound_Parms,NULL);
}

struct Engine_AddVelocity_Parms
{
	FVector3                                           NewVelocity;                                      		// 0x000000 (0x000C)              
	FVector3                                           HitLocation;                                      		// 0x00000C (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000018 (0x0004)              
	struct FTraceHitInfo                               HitInfo;                                          		// 0x00001C (0x001C)              
};

void ASVehicle::AddVelocity(FVector3 NewVelocity,FVector3 HitLocation,class UClass* DamageType,struct FTraceHitInfo HitInfo)
{
	static UFieldFunc* pFnAddVelocity = NULL;
	if(!pFnAddVelocity)
		pFnAddVelocity = UObject::FindFunction("Function Engine.SVehicle.AddVelocity");

	Engine_AddVelocity_Parms AddVelocity_Parms;
	memcpy(&AddVelocity_Parms.NewVelocity,&NewVelocity,0xC);
	memcpy(&AddVelocity_Parms.HitLocation,&HitLocation,0xC);
	AddVelocity_Parms.DamageType = DamageType;
	memcpy(&AddVelocity_Parms.HitInfo,&HitInfo,0x1C);
	ProcessEvent(pFnAddVelocity,NULL,&AddVelocity_Parms,NULL);
}

struct Engine_DisplayWheelsDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              YL;                                               		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//int                                                J;                                                		// 0x00000C (0x0004)              
	//FVector3                                           WorldLoc;                                         		// 0x000010 (0x000C)              
	//FVector3                                           ScreenLoc;                                        		// 0x00001C (0x000C)              
	//FVector3                                           X;                                                		// 0x000028 (0x000C)              
	//FVector3                                           Y;                                                		// 0x000034 (0x000C)              
	//FVector3                                           Z;                                                		// 0x000040 (0x000C)              
	//DWORD                                              SaveColor;                                        		// 0x00004C (0x0004)              
	//float                                              LastForceValue;                                   		// 0x000050 (0x0004)              
	//float                                              GraphScale;                                       		// 0x000054 (0x0004)              
	//float                                              ForceValue;                                       		// 0x000058 (0x0004)              
	//FVector3                                           ForceValueLoc;                                    		// 0x00005C (0x000C)              
};

void ASVehicle::DisplayWheelsDebug(class AHUD* HUD,float YL)
{
	static UFieldFunc* pFnDisplayWheelsDebug = NULL;
	if(!pFnDisplayWheelsDebug)
		pFnDisplayWheelsDebug = UObject::FindFunction("Function Engine.SVehicle.DisplayWheelsDebug");

	Engine_DisplayWheelsDebug_Parms DisplayWheelsDebug_Parms;
	DisplayWheelsDebug_Parms.HUD = HUD;
	DisplayWheelsDebug_Parms.YL = YL;
	ProcessEvent(pFnDisplayWheelsDebug,NULL,&DisplayWheelsDebug_Parms,NULL);
}

struct Engine_GetSVehicleDebug_Parms
{
	TArray<struct FString>                             DebugInfo;                                        		// 0x000000 (0x000C)              
};

void ASVehicle::GetSVehicleDebug(TArray<struct FString>* DebugInfo)
{
	static UFieldFunc* pFnGetSVehicleDebug = NULL;
	if(!pFnGetSVehicleDebug)
		pFnGetSVehicleDebug = UObject::FindFunction("Function Engine.SVehicle.GetSVehicleDebug");

	Engine_GetSVehicleDebug_Parms GetSVehicleDebug_Parms;
	ProcessEvent(pFnGetSVehicleDebug,NULL,&GetSVehicleDebug_Parms,NULL);
	if(DebugInfo)
		memcpy(DebugInfo,&GetSVehicleDebug_Parms.DebugInfo,0xC);
}

struct Engine_TurnOff_Parms
{
};

void ASVehicle::TurnOff()
{
	static UFieldFunc* pFnTurnOff = NULL;
	if(!pFnTurnOff)
		pFnTurnOff = UObject::FindFunction("Function Engine.SVehicle.TurnOff");

	Engine_TurnOff_Parms TurnOff_Parms;
	ProcessEvent(pFnTurnOff,NULL,&TurnOff_Parms,NULL);
}

struct Engine_StartEngineSoundTimed_Parms
{
};

void ASVehicle::StartEngineSoundTimed()
{
	static UFieldFunc* pFnStartEngineSoundTimed = NULL;
	if(!pFnStartEngineSoundTimed)
		pFnStartEngineSoundTimed = UObject::FindFunction("Function Engine.SVehicle.StartEngineSoundTimed");

	Engine_StartEngineSoundTimed_Parms StartEngineSoundTimed_Parms;
	ProcessEvent(pFnStartEngineSoundTimed,NULL,&StartEngineSoundTimed_Parms,NULL);
}

struct Engine_CalcCamera_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
	FVector3                                           out_CamLoc;                                       		// 0x000004 (0x000C)              
	FRotator                                           out_CamRot;                                       		// 0x000010 (0x000C)              
	float                                              out_FOV;                                          		// 0x00001C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool ASVehicle::CalcCamera(float fDeltaTime,FVector3* out_CamLoc,FRotator* out_CamRot,float* out_FOV)
{
	static UFieldFunc* pFnCalcCamera = NULL;
	if(!pFnCalcCamera)
		pFnCalcCamera = UObject::FindFunction("Function Engine.SVehicle.CalcCamera");

	Engine_CalcCamera_Parms CalcCamera_Parms;
	CalcCamera_Parms.fDeltaTime = fDeltaTime;
	pFnCalcCamera->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalcCamera,NULL,&CalcCamera_Parms,NULL);
	pFnCalcCamera->FunctionFlags |= 0x400;
	if(out_CamLoc)
		memcpy(out_CamLoc,&CalcCamera_Parms.out_CamLoc,0xC);
	if(out_CamRot)
		memcpy(out_CamRot,&CalcCamera_Parms.out_CamRot,0xC);
	if(out_FOV)
		*out_FOV = CalcCamera_Parms.out_FOV;
	return CalcCamera_Parms.ReturnValue;
}

struct Engine_TakeRadiusDamage_Parms
{
	class AController*                                 InstigatedBy;                                     		// 0x000000 (0x0004)              
	float                                              BaseDamage;                                       		// 0x000004 (0x0004)              
	float                                              DamageRadius;                                     		// 0x000008 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x00000C (0x0004)              
	float                                              Momentum;                                         		// 0x000010 (0x0004)              
	FVector3                                           HurtOrigin;                                       		// 0x000014 (0x000C)              
	unsigned long                                      bFullDamage : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	class AActor*                                      DamageCauser;                                     		// 0x000024 (0x0004)              
	//FVector3                                           HitLocation;                                      		// 0x000028 (0x000C)              
	//FVector3                                           Dir;                                              		// 0x000034 (0x000C)              
	//FVector3                                           NewDir;                                           		// 0x000040 (0x000C)              
	//float                                              Dist;                                             		// 0x00004C (0x0004)              
	//float                                              DamageScale;                                      		// 0x000050 (0x0004)              
	//struct FTraceHitInfo                               HitInfo;                                          		// 0x000054 (0x001C)              
};

void ASVehicle::TakeRadiusDamage(class AController* InstigatedBy,float BaseDamage,float DamageRadius,class UClass* DamageType,float Momentum,FVector3 HurtOrigin,bool bFullDamage,class AActor* DamageCauser)
{
	static UFieldFunc* pFnTakeRadiusDamage = NULL;
	if(!pFnTakeRadiusDamage)
		pFnTakeRadiusDamage = UObject::FindFunction("Function Engine.SVehicle.TakeRadiusDamage");

	Engine_TakeRadiusDamage_Parms TakeRadiusDamage_Parms;
	TakeRadiusDamage_Parms.InstigatedBy = InstigatedBy;
	TakeRadiusDamage_Parms.BaseDamage = BaseDamage;
	TakeRadiusDamage_Parms.DamageRadius = DamageRadius;
	TakeRadiusDamage_Parms.DamageType = DamageType;
	TakeRadiusDamage_Parms.Momentum = Momentum;
	memcpy(&TakeRadiusDamage_Parms.HurtOrigin,&HurtOrigin,0xC);
	TakeRadiusDamage_Parms.bFullDamage = bFullDamage;
	TakeRadiusDamage_Parms.DamageCauser = DamageCauser;
	ProcessEvent(pFnTakeRadiusDamage,NULL,&TakeRadiusDamage_Parms,NULL);
}

struct Engine_TryToDrive_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ASVehicle::TryToDrive(class APawn* P)
{
	static UFieldFunc* pFnTryToDrive = NULL;
	if(!pFnTryToDrive)
		pFnTryToDrive = UObject::FindFunction("Function Engine.SVehicle.TryToDrive");

	Engine_TryToDrive_Parms TryToDrive_Parms;
	TryToDrive_Parms.P = P;
	ProcessEvent(pFnTryToDrive,NULL,&TryToDrive_Parms,NULL);
	return TryToDrive_Parms.ReturnValue;
}

struct Engine_RigidBodyCollision_Parms
{
	class UPrimitiveComponent*                         HitComponent;                                     		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComponent;                                   		// 0x000004 (0x0004)              
	struct FCollisionImpactData                        RigidCollisionData;                               		// 0x000008 (0x0024)              
	int                                                ContactIndex;                                     		// 0x00002C (0x0004)              
};

void ASVehicle::RigidBodyCollision(class UPrimitiveComponent* HitComponent,class UPrimitiveComponent* OtherComponent,struct FCollisionImpactData* RigidCollisionData,int ContactIndex)
{
	static UFieldFunc* pFnRigidBodyCollision = NULL;
	if(!pFnRigidBodyCollision)
		pFnRigidBodyCollision = UObject::FindFunction("Function Engine.SVehicle.RigidBodyCollision");

	Engine_RigidBodyCollision_Parms RigidBodyCollision_Parms;
	RigidBodyCollision_Parms.HitComponent = HitComponent;
	RigidBodyCollision_Parms.OtherComponent = OtherComponent;
	RigidBodyCollision_Parms.ContactIndex = ContactIndex;
	ProcessEvent(pFnRigidBodyCollision,NULL,&RigidBodyCollision_Parms,NULL);
	if(RigidCollisionData)
		memcpy(RigidCollisionData,&RigidBodyCollision_Parms.RigidCollisionData,0x24);
}

struct Engine_StartEngineSound_Parms
{
};

void ASVehicle::StartEngineSound()
{
	static UFieldFunc* pFnStartEngineSound = NULL;
	if(!pFnStartEngineSound)
		pFnStartEngineSound = UObject::FindFunction("Function Engine.SVehicle.StartEngineSound");

	Engine_StartEngineSound_Parms StartEngineSound_Parms;
	ProcessEvent(pFnStartEngineSound,NULL,&StartEngineSound_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void ASVehicle::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.SVehicle.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_StopVehicleSounds_Parms
{
};

void ASVehicle::StopVehicleSounds()
{
	static UFieldFunc* pFnStopVehicleSounds = NULL;
	if(!pFnStopVehicleSounds)
		pFnStopVehicleSounds = UObject::FindFunction("Function Engine.SVehicle.StopVehicleSounds");

	Engine_StopVehicleSounds_Parms StopVehicleSounds_Parms;
	ProcessEvent(pFnStopVehicleSounds,NULL,&StopVehicleSounds_Parms,NULL);
}

struct Engine_HermiteEval_Parms
{
	float                                              Slip;                                             		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
	//float                                              LatExtremumSlip;                                  		// 0x000008 (0x0004)              
	//float                                              LatExtremumValue;                                 		// 0x00000C (0x0004)              
	//float                                              LatAsymptoteSlip;                                 		// 0x000010 (0x0004)              
	//float                                              LatAsymptoteValue;                                		// 0x000014 (0x0004)              
	//float                                              SlipSquared;                                      		// 0x000018 (0x0004)              
	//float                                              SlipCubed;                                        		// 0x00001C (0x0004)              
	//float                                              C0;                                               		// 0x000020 (0x0004)              
	//float                                              C1;                                               		// 0x000024 (0x0004)              
	//float                                              C3;                                               		// 0x000028 (0x0004)              
};

float ASVehicle::HermiteEval(float Slip)
{
	static UFieldFunc* pFnHermiteEval = NULL;
	if(!pFnHermiteEval)
		pFnHermiteEval = UObject::FindFunction("Function Engine.SVehicle.HermiteEval");

	Engine_HermiteEval_Parms HermiteEval_Parms;
	HermiteEval_Parms.Slip = Slip;
	ProcessEvent(pFnHermiteEval,NULL,&HermiteEval_Parms,NULL);
	return HermiteEval_Parms.ReturnValue;
}

struct Engine_Died_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	int                                                nWeaponType;                                      		// 0x000014 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool ASVehicle::Died(class AController* Killer,class UClass* DamageType,FVector3 HitLocation,int nWeaponType)
{
	static UFieldFunc* pFnDied = NULL;
	if(!pFnDied)
		pFnDied = UObject::FindFunction("Function Engine.SVehicle.Died");

	Engine_Died_Parms Died_Parms;
	Died_Parms.Killer = Killer;
	Died_Parms.DamageType = DamageType;
	memcpy(&Died_Parms.HitLocation,&HitLocation,0xC);
	Died_Parms.nWeaponType = nWeaponType;
	ProcessEvent(pFnDied,NULL,&Died_Parms,NULL);
	return Died_Parms.ReturnValue;
}

struct Engine_PostTeleport_Parms
{
	class ATeleporter*                                 OutTeleporter;                                    		// 0x000000 (0x0004)              
};

void ASVehicle::PostTeleport(class ATeleporter* OutTeleporter)
{
	static UFieldFunc* pFnPostTeleport = NULL;
	if(!pFnPostTeleport)
		pFnPostTeleport = UObject::FindFunction("Function Engine.SVehicle.PostTeleport");

	Engine_PostTeleport_Parms PostTeleport_Parms;
	PostTeleport_Parms.OutTeleporter = OutTeleporter;
	ProcessEvent(pFnPostTeleport,NULL,&PostTeleport_Parms,NULL);
}

struct Engine_StopEngineSoundTimed_Parms
{
};

void ASVehicle::StopEngineSoundTimed()
{
	static UFieldFunc* pFnStopEngineSoundTimed = NULL;
	if(!pFnStopEngineSoundTimed)
		pFnStopEngineSoundTimed = UObject::FindFunction("Function Engine.SVehicle.StopEngineSoundTimed");

	Engine_StopEngineSoundTimed_Parms StopEngineSoundTimed_Parms;
	ProcessEvent(pFnStopEngineSoundTimed,NULL,&StopEngineSoundTimed_Parms,NULL);
}

struct Engine_PostInitAnimTree_Parms
{
	class USkeletalMeshComponent*                      SkelComp;                                         		// 0x000000 (0x0004)              
	//int                                                WheelIndex;                                       		// 0x000004 (0x0004)              
	//class USVehicleWheel*                              Wheel;                                            		// 0x000008 (0x0004)              
};

void ASVehicle::PostInitAnimTree(class USkeletalMeshComponent* SkelComp)
{
	static UFieldFunc* pFnPostInitAnimTree = NULL;
	if(!pFnPostInitAnimTree)
		pFnPostInitAnimTree = UObject::FindFunction("Function Engine.SVehicle.PostInitAnimTree");

	Engine_PostInitAnimTree_Parms PostInitAnimTree_Parms;
	PostInitAnimTree_Parms.SkelComp = SkelComp;
	ProcessEvent(pFnPostInitAnimTree,NULL,&PostInitAnimTree_Parms,NULL);
}

struct Engine_VehiclePlayEnterSound_Parms
{
};

void ASVehicle::VehiclePlayEnterSound()
{
	static UFieldFunc* pFnVehiclePlayEnterSound = NULL;
	if(!pFnVehiclePlayEnterSound)
		pFnVehiclePlayEnterSound = UObject::FindFunction("Function Engine.SVehicle.VehiclePlayEnterSound");

	Engine_VehiclePlayEnterSound_Parms VehiclePlayEnterSound_Parms;
	ProcessEvent(pFnVehiclePlayEnterSound,NULL,&VehiclePlayEnterSound_Parms,NULL);
}

struct Engine_Destroyed_Parms
{
};

void ASVehicle::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.SVehicle.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_DisplayDebug_Parms
{
	class AHUD*                                        HUD;                                              		// 0x000000 (0x0004)              
	float                                              out_YL;                                           		// 0x000004 (0x0004)              
	float                                              out_YPos;                                         		// 0x000008 (0x0004)              
	//TArray<struct FString>                             DebugInfo;                                        		// 0x00000C (0x000C)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void ASVehicle::DisplayDebug(class AHUD* HUD,float* out_YL,float* out_YPos)
{
	static UFieldFunc* pFnDisplayDebug = NULL;
	if(!pFnDisplayDebug)
		pFnDisplayDebug = UObject::FindFunction("Function Engine.SVehicle.DisplayDebug");

	Engine_DisplayDebug_Parms DisplayDebug_Parms;
	DisplayDebug_Parms.HUD = HUD;
	ProcessEvent(pFnDisplayDebug,NULL,&DisplayDebug_Parms,NULL);
	if(out_YL)
		*out_YL = DisplayDebug_Parms.out_YL;
	if(out_YPos)
		*out_YPos = DisplayDebug_Parms.out_YPos;
}

struct Engine_SetDisableCollision_Parms
{
	unsigned long                                      NewDisableCollision : 1;                          		// 0x000000 (0x0004) [0x00000001] 
};

void ARB_ConstraintActor::SetDisableCollision(bool NewDisableCollision)
{
	static UFieldFunc* pFnSetDisableCollision = NULL;
	if(!pFnSetDisableCollision)
		pFnSetDisableCollision = UObject::FindFunction("Function Engine.RB_ConstraintActor.SetDisableCollision");

	Engine_SetDisableCollision_Parms SetDisableCollision_Parms;
	SetDisableCollision_Parms.NewDisableCollision = NewDisableCollision;
	pFnSetDisableCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDisableCollision,NULL,&SetDisableCollision_Parms,NULL);
	pFnSetDisableCollision->FunctionFlags |= 0x400;
}

struct Engine_TermConstraint_Parms
{
};

void ARB_ConstraintActor::TermConstraint()
{
	static UFieldFunc* pFnTermConstraint = NULL;
	if(!pFnTermConstraint)
		pFnTermConstraint = UObject::FindFunction("Function Engine.RB_ConstraintActor.TermConstraint");

	Engine_TermConstraint_Parms TermConstraint_Parms;
	pFnTermConstraint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTermConstraint,NULL,&TermConstraint_Parms,NULL);
	pFnTermConstraint->FunctionFlags |= 0x400;
}

struct Engine_OnDestroy_Parms
{
	class USeqAct_Destroy*                             Action;                                           		// 0x000000 (0x0004)              
};

void ARB_ConstraintActor::OnDestroy(class USeqAct_Destroy* Action)
{
	static UFieldFunc* pFnOnDestroy = NULL;
	if(!pFnOnDestroy)
		pFnOnDestroy = UObject::FindFunction("Function Engine.RB_ConstraintActor.OnDestroy");

	Engine_OnDestroy_Parms OnDestroy_Parms;
	OnDestroy_Parms.Action = Action;
	ProcessEvent(pFnOnDestroy,NULL,&OnDestroy_Parms,NULL);
}

struct Engine_InitConstraint_Parms
{
	class AActor*                                      Actor1;                                           		// 0x000000 (0x0004)              
	class AActor*                                      Actor2;                                           		// 0x000004 (0x0004)              
	struct FName                                       Actor1Bone;                                       		// 0x000008 (0x0008)              
	struct FName                                       Actor2Bone;                                       		// 0x000010 (0x0008)              
	float                                              BreakThreshold;                                   		// 0x000018 (0x0004)              
};

void ARB_ConstraintActor::InitConstraint(class AActor* Actor1,class AActor* Actor2,struct FName Actor1Bone,struct FName Actor2Bone,float BreakThreshold)
{
	static UFieldFunc* pFnInitConstraint = NULL;
	if(!pFnInitConstraint)
		pFnInitConstraint = UObject::FindFunction("Function Engine.RB_ConstraintActor.InitConstraint");

	Engine_InitConstraint_Parms InitConstraint_Parms;
	InitConstraint_Parms.Actor1 = Actor1;
	InitConstraint_Parms.Actor2 = Actor2;
	memcpy(&InitConstraint_Parms.Actor1Bone,&Actor1Bone,0x8);
	memcpy(&InitConstraint_Parms.Actor2Bone,&Actor2Bone,0x8);
	InitConstraint_Parms.BreakThreshold = BreakThreshold;
	pFnInitConstraint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitConstraint,NULL,&InitConstraint_Parms,NULL);
	pFnInitConstraint->FunctionFlags |= 0x400;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void ARB_LineImpulseActor::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.RB_LineImpulseActor.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ARB_LineImpulseActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.RB_LineImpulseActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_FireLineImpulse_Parms
{
};

void ARB_LineImpulseActor::FireLineImpulse()
{
	static UFieldFunc* pFnFireLineImpulse = NULL;
	if(!pFnFireLineImpulse)
		pFnFireLineImpulse = UObject::FindFunction("Function Engine.RB_LineImpulseActor.FireLineImpulse");

	Engine_FireLineImpulse_Parms FireLineImpulse_Parms;
	pFnFireLineImpulse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFireLineImpulse,NULL,&FireLineImpulse_Parms,NULL);
	pFnFireLineImpulse->FunctionFlags |= 0x400;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ARB_LineImpulseActor::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.RB_LineImpulseActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ARB_RadialImpulseActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.RB_RadialImpulseActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void ARB_RadialImpulseActor::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.RB_RadialImpulseActor.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ARB_RadialImpulseActor::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.RB_RadialImpulseActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void ARB_Thruster::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.RB_Thruster.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ARB_Thruster::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.RB_Thruster.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_FireImpulse_Parms
{
	FVector3                                           Origin;                                           		// 0x000000 (0x000C)              
};

void URB_RadialImpulseComponent::FireImpulse(FVector3 Origin)
{
	static UFieldFunc* pFnFireImpulse = NULL;
	if(!pFnFireImpulse)
		pFnFireImpulse = UObject::FindFunction("Function Engine.RB_RadialImpulseComponent.FireImpulse");

	Engine_FireImpulse_Parms FireImpulse_Parms;
	memcpy(&FireImpulse_Parms.Origin,&Origin,0xC);
	pFnFireImpulse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFireImpulse,NULL,&FireImpulse_Parms,NULL);
	pFnFireImpulse->FunctionFlags |= 0x400;
}

struct Engine_ReleaseComponent_Parms
{
};

void URB_Handle::ReleaseComponent()
{
	static UFieldFunc* pFnReleaseComponent = NULL;
	if(!pFnReleaseComponent)
		pFnReleaseComponent = UObject::FindFunction("Function Engine.RB_Handle.ReleaseComponent");

	Engine_ReleaseComponent_Parms ReleaseComponent_Parms;
	pFnReleaseComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReleaseComponent,NULL,&ReleaseComponent_Parms,NULL);
	pFnReleaseComponent->FunctionFlags |= 0x400;
}

struct Engine_SetSmoothLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
	float                                              MoveTime;                                         		// 0x00000C (0x0004)              
};

void URB_Handle::SetSmoothLocation(FVector3 NewLocation,float MoveTime)
{
	static UFieldFunc* pFnSetSmoothLocation = NULL;
	if(!pFnSetSmoothLocation)
		pFnSetSmoothLocation = UObject::FindFunction("Function Engine.RB_Handle.SetSmoothLocation");

	Engine_SetSmoothLocation_Parms SetSmoothLocation_Parms;
	memcpy(&SetSmoothLocation_Parms.NewLocation,&NewLocation,0xC);
	SetSmoothLocation_Parms.MoveTime = MoveTime;
	pFnSetSmoothLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSmoothLocation,NULL,&SetSmoothLocation_Parms,NULL);
	pFnSetSmoothLocation->FunctionFlags |= 0x400;
}

struct Engine_GrabComponent_Parms
{
	class UPrimitiveComponent*                         Component;                                        		// 0x000000 (0x0004)              
	struct FName                                       InBoneName;                                       		// 0x000004 (0x0008)              
	FVector3                                           GrabLocation;                                     		// 0x00000C (0x000C)              
	unsigned long                                      bConstrainRotation : 1;                           		// 0x000018 (0x0004) [0x00000001] 
};

void URB_Handle::GrabComponent(class UPrimitiveComponent* Component,struct FName InBoneName,FVector3 GrabLocation,bool bConstrainRotation)
{
	static UFieldFunc* pFnGrabComponent = NULL;
	if(!pFnGrabComponent)
		pFnGrabComponent = UObject::FindFunction("Function Engine.RB_Handle.GrabComponent");

	Engine_GrabComponent_Parms GrabComponent_Parms;
	GrabComponent_Parms.Component = Component;
	memcpy(&GrabComponent_Parms.InBoneName,&InBoneName,0x8);
	memcpy(&GrabComponent_Parms.GrabLocation,&GrabLocation,0xC);
	GrabComponent_Parms.bConstrainRotation = bConstrainRotation;
	pFnGrabComponent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGrabComponent,NULL,&GrabComponent_Parms,NULL);
	pFnGrabComponent->FunctionFlags |= 0x400;
}

struct Engine_UpdateSmoothLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
};

void URB_Handle::UpdateSmoothLocation(FVector3* NewLocation)
{
	static UFieldFunc* pFnUpdateSmoothLocation = NULL;
	if(!pFnUpdateSmoothLocation)
		pFnUpdateSmoothLocation = UObject::FindFunction("Function Engine.RB_Handle.UpdateSmoothLocation");

	Engine_UpdateSmoothLocation_Parms UpdateSmoothLocation_Parms;
	pFnUpdateSmoothLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateSmoothLocation,NULL,&UpdateSmoothLocation_Parms,NULL);
	pFnUpdateSmoothLocation->FunctionFlags |= 0x400;
	if(NewLocation)
		memcpy(NewLocation,&UpdateSmoothLocation_Parms.NewLocation,0xC);
}

struct Engine_GetOrientation_Parms
{
	struct FQuat                                       ReturnValue;                                      		// 0x000000 (0x0010)              
};

struct FQuat URB_Handle::GetOrientation()
{
	static UFieldFunc* pFnGetOrientation = NULL;
	if(!pFnGetOrientation)
		pFnGetOrientation = UObject::FindFunction("Function Engine.RB_Handle.GetOrientation");

	Engine_GetOrientation_Parms GetOrientation_Parms;
	pFnGetOrientation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOrientation,NULL,&GetOrientation_Parms,NULL);
	pFnGetOrientation->FunctionFlags |= 0x400;
	return GetOrientation_Parms.ReturnValue;
}

struct Engine_SetLocation_Parms
{
	FVector3                                           NewLocation;                                      		// 0x000000 (0x000C)              
};

void URB_Handle::SetLocation(FVector3 NewLocation)
{
	static UFieldFunc* pFnSetLocation = NULL;
	if(!pFnSetLocation)
		pFnSetLocation = UObject::FindFunction("Function Engine.RB_Handle.SetLocation");

	Engine_SetLocation_Parms SetLocation_Parms;
	memcpy(&SetLocation_Parms.NewLocation,&NewLocation,0xC);
	pFnSetLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLocation,NULL,&SetLocation_Parms,NULL);
	pFnSetLocation->FunctionFlags |= 0x400;
}

struct Engine_SetOrientation_Parms
{
	struct FQuat                                       NewOrientation;                                   		// 0x000000 (0x0010)              
};

void URB_Handle::SetOrientation(struct FQuat* NewOrientation)
{
	static UFieldFunc* pFnSetOrientation = NULL;
	if(!pFnSetOrientation)
		pFnSetOrientation = UObject::FindFunction("Function Engine.RB_Handle.SetOrientation");

	Engine_SetOrientation_Parms SetOrientation_Parms;
	pFnSetOrientation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOrientation,NULL,&SetOrientation_Parms,NULL);
	pFnSetOrientation->FunctionFlags |= 0x400;
	if(NewOrientation)
		memcpy(NewOrientation,&SetOrientation_Parms.NewOrientation,0x10);
}

struct Engine_SetComponents_Parms
{
	class UPrimitiveComponent*                         InComponent1;                                     		// 0x000000 (0x0004)              
	struct FName                                       InBoneName1;                                      		// 0x000004 (0x0008)              
	FVector3                                           Position1;                                        		// 0x00000C (0x000C)              
	class UPrimitiveComponent*                         InComponent2;                                     		// 0x000018 (0x0004)              
	struct FName                                       InBoneName2;                                      		// 0x00001C (0x0008)              
	FVector3                                           Position2;                                        		// 0x000024 (0x000C)              
};

void URB_Spring::SetComponents(class UPrimitiveComponent* InComponent1,struct FName InBoneName1,FVector3 Position1,class UPrimitiveComponent* InComponent2,struct FName InBoneName2,FVector3 Position2)
{
	static UFieldFunc* pFnSetComponents = NULL;
	if(!pFnSetComponents)
		pFnSetComponents = UObject::FindFunction("Function Engine.RB_Spring.SetComponents");

	Engine_SetComponents_Parms SetComponents_Parms;
	SetComponents_Parms.InComponent1 = InComponent1;
	memcpy(&SetComponents_Parms.InBoneName1,&InBoneName1,0x8);
	memcpy(&SetComponents_Parms.Position1,&Position1,0xC);
	SetComponents_Parms.InComponent2 = InComponent2;
	memcpy(&SetComponents_Parms.InBoneName2,&InBoneName2,0x8);
	memcpy(&SetComponents_Parms.Position2,&Position2,0xC);
	pFnSetComponents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetComponents,NULL,&SetComponents_Parms,NULL);
	pFnSetComponents->FunctionFlags |= 0x400;
}

struct Engine_Clear_Parms
{
};

void URB_Spring::Clear()
{
	static UFieldFunc* pFnClear = NULL;
	if(!pFnClear)
		pFnClear = UObject::FindFunction("Function Engine.RB_Spring.Clear");

	Engine_Clear_Parms Clear_Parms;
	pFnClear->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClear,NULL,&Clear_Parms,NULL);
	pFnClear->FunctionFlags |= 0x400;
}

struct Engine_GetLongExtremumSlip_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLongExtremumSlip()
{
	static UFieldFunc* pFnGetLongExtremumSlip = NULL;
	if(!pFnGetLongExtremumSlip)
		pFnGetLongExtremumSlip = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLongExtremumSlip");

	Engine_GetLongExtremumSlip_Parms GetLongExtremumSlip_Parms;
	ProcessEvent(pFnGetLongExtremumSlip,NULL,&GetLongExtremumSlip_Parms,NULL);
	return GetLongExtremumSlip_Parms.ReturnValue;
}

struct Engine_GetLongAsymptoteSlip_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLongAsymptoteSlip()
{
	static UFieldFunc* pFnGetLongAsymptoteSlip = NULL;
	if(!pFnGetLongAsymptoteSlip)
		pFnGetLongAsymptoteSlip = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLongAsymptoteSlip");

	Engine_GetLongAsymptoteSlip_Parms GetLongAsymptoteSlip_Parms;
	ProcessEvent(pFnGetLongAsymptoteSlip,NULL,&GetLongAsymptoteSlip_Parms,NULL);
	return GetLongAsymptoteSlip_Parms.ReturnValue;
}

struct Engine_GetLatExtremumValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLatExtremumValue()
{
	static UFieldFunc* pFnGetLatExtremumValue = NULL;
	if(!pFnGetLatExtremumValue)
		pFnGetLatExtremumValue = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLatExtremumValue");

	Engine_GetLatExtremumValue_Parms GetLatExtremumValue_Parms;
	ProcessEvent(pFnGetLatExtremumValue,NULL,&GetLatExtremumValue_Parms,NULL);
	return GetLatExtremumValue_Parms.ReturnValue;
}

struct Engine_GetLongAsymptoteValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLongAsymptoteValue()
{
	static UFieldFunc* pFnGetLongAsymptoteValue = NULL;
	if(!pFnGetLongAsymptoteValue)
		pFnGetLongAsymptoteValue = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLongAsymptoteValue");

	Engine_GetLongAsymptoteValue_Parms GetLongAsymptoteValue_Parms;
	ProcessEvent(pFnGetLongAsymptoteValue,NULL,&GetLongAsymptoteValue_Parms,NULL);
	return GetLongAsymptoteValue_Parms.ReturnValue;
}

struct Engine_GetLongExtremumValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLongExtremumValue()
{
	static UFieldFunc* pFnGetLongExtremumValue = NULL;
	if(!pFnGetLongExtremumValue)
		pFnGetLongExtremumValue = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLongExtremumValue");

	Engine_GetLongExtremumValue_Parms GetLongExtremumValue_Parms;
	ProcessEvent(pFnGetLongExtremumValue,NULL,&GetLongExtremumValue_Parms,NULL);
	return GetLongExtremumValue_Parms.ReturnValue;
}

struct Engine_GetLatExtremumSlip_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLatExtremumSlip()
{
	static UFieldFunc* pFnGetLatExtremumSlip = NULL;
	if(!pFnGetLatExtremumSlip)
		pFnGetLatExtremumSlip = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLatExtremumSlip");

	Engine_GetLatExtremumSlip_Parms GetLatExtremumSlip_Parms;
	ProcessEvent(pFnGetLatExtremumSlip,NULL,&GetLatExtremumSlip_Parms,NULL);
	return GetLatExtremumSlip_Parms.ReturnValue;
}

struct Engine_GetLatAsymptoteSlip_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLatAsymptoteSlip()
{
	static UFieldFunc* pFnGetLatAsymptoteSlip = NULL;
	if(!pFnGetLatAsymptoteSlip)
		pFnGetLatAsymptoteSlip = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLatAsymptoteSlip");

	Engine_GetLatAsymptoteSlip_Parms GetLatAsymptoteSlip_Parms;
	ProcessEvent(pFnGetLatAsymptoteSlip,NULL,&GetLatAsymptoteSlip_Parms,NULL);
	return GetLatAsymptoteSlip_Parms.ReturnValue;
}

struct Engine_GetLatAsymptoteValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleSimBase::GetLatAsymptoteValue()
{
	static UFieldFunc* pFnGetLatAsymptoteValue = NULL;
	if(!pFnGetLatAsymptoteValue)
		pFnGetLatAsymptoteValue = UObject::FindFunction("Function Engine.SVehicleSimBase.GetLatAsymptoteValue");

	Engine_GetLatAsymptoteValue_Parms GetLatAsymptoteValue_Parms;
	ProcessEvent(pFnGetLatAsymptoteValue,NULL,&GetLatAsymptoteValue_Parms,NULL);
	return GetLatAsymptoteValue_Parms.ReturnValue;
}

struct Engine_GetAudioMaterialNum_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UPhysicalMaterial::GetAudioMaterialNum()
{
	static UFieldFunc* pFnGetAudioMaterialNum = NULL;
	if(!pFnGetAudioMaterialNum)
		pFnGetAudioMaterialNum = UObject::FindFunction("Function Engine.PhysicalMaterial.GetAudioMaterialNum");

	Engine_GetAudioMaterialNum_Parms GetAudioMaterialNum_Parms;
	pFnGetAudioMaterialNum->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAudioMaterialNum,NULL,&GetAudioMaterialNum_Parms,NULL);
	pFnGetAudioMaterialNum->FunctionFlags |= 0x400;
	return GetAudioMaterialNum_Parms.ReturnValue;
}

struct Engine_GetPhysicalMaterialProperty_Parms
{
	class UClass*                                      DesiredClass;                                     		// 0x000000 (0x0004)              
	class UPhysicalMaterialPropertyBase*               ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UPhysicalMaterialPropertyBase* UPhysicalMaterial::GetPhysicalMaterialProperty(class UClass* DesiredClass)
{
	static UFieldFunc* pFnGetPhysicalMaterialProperty = NULL;
	if(!pFnGetPhysicalMaterialProperty)
		pFnGetPhysicalMaterialProperty = UObject::FindFunction("Function Engine.PhysicalMaterial.GetPhysicalMaterialProperty");

	Engine_GetPhysicalMaterialProperty_Parms GetPhysicalMaterialProperty_Parms;
	GetPhysicalMaterialProperty_Parms.DesiredClass = DesiredClass;
	ProcessEvent(pFnGetPhysicalMaterialProperty,NULL,&GetPhysicalMaterialProperty_Parms,NULL);
	return GetPhysicalMaterialProperty_Parms.ReturnValue;
}

struct Engine_SetLinearDriveScale_Parms
{
	float                                              InLinearSpringScale;                              		// 0x000000 (0x0004)              
	float                                              InLinearDampingScale;                             		// 0x000004 (0x0004)              
	float                                              InLinearForceLimitScale;                          		// 0x000008 (0x0004)              
};

void UPhysicsAssetInstance::SetLinearDriveScale(float InLinearSpringScale,float InLinearDampingScale,float InLinearForceLimitScale)
{
	static UFieldFunc* pFnSetLinearDriveScale = NULL;
	if(!pFnSetLinearDriveScale)
		pFnSetLinearDriveScale = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetLinearDriveScale");

	Engine_SetLinearDriveScale_Parms SetLinearDriveScale_Parms;
	SetLinearDriveScale_Parms.InLinearSpringScale = InLinearSpringScale;
	SetLinearDriveScale_Parms.InLinearDampingScale = InLinearDampingScale;
	SetLinearDriveScale_Parms.InLinearForceLimitScale = InLinearForceLimitScale;
	pFnSetLinearDriveScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearDriveScale,NULL,&SetLinearDriveScale_Parms,NULL);
	pFnSetLinearDriveScale->FunctionFlags |= 0x400;
}

struct Engine_SetNamedMotorsAngularPositionDrive_Parms
{
	unsigned long                                      bEnableSwingDrive : 1;                            		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableTwistDrive : 1;                            		// 0x000004 (0x0004) [0x00000001] 
	TArray<struct FName>                               BoneNames;                                        		// 0x000008 (0x000C)              
	class USkeletalMeshComponent*                      SkelMeshComp;                                     		// 0x000014 (0x0004)              
	unsigned long                                      bSetOtherBodiesToComplement : 1;                  		// 0x000018 (0x0004) [0x00000001] 
};

void UPhysicsAssetInstance::SetNamedMotorsAngularPositionDrive(bool bEnableSwingDrive,bool bEnableTwistDrive,TArray<struct FName> BoneNames,class USkeletalMeshComponent* SkelMeshComp,bool bSetOtherBodiesToComplement)
{
	static UFieldFunc* pFnSetNamedMotorsAngularPositionDrive = NULL;
	if(!pFnSetNamedMotorsAngularPositionDrive)
		pFnSetNamedMotorsAngularPositionDrive = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularPositionDrive");

	Engine_SetNamedMotorsAngularPositionDrive_Parms SetNamedMotorsAngularPositionDrive_Parms;
	SetNamedMotorsAngularPositionDrive_Parms.bEnableSwingDrive = bEnableSwingDrive;
	SetNamedMotorsAngularPositionDrive_Parms.bEnableTwistDrive = bEnableTwistDrive;
	memcpy(&SetNamedMotorsAngularPositionDrive_Parms.BoneNames,&BoneNames,0xC);
	SetNamedMotorsAngularPositionDrive_Parms.SkelMeshComp = SkelMeshComp;
	SetNamedMotorsAngularPositionDrive_Parms.bSetOtherBodiesToComplement = bSetOtherBodiesToComplement;
	pFnSetNamedMotorsAngularPositionDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNamedMotorsAngularPositionDrive,NULL,&SetNamedMotorsAngularPositionDrive_Parms,NULL);
	pFnSetNamedMotorsAngularPositionDrive->FunctionFlags |= 0x400;
}

struct Engine_SetNamedBodiesFixed_Parms
{
	unsigned long                                      bNewFixed : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
	TArray<struct FName>                               BoneNames;                                        		// 0x000004 (0x000C)              
	class USkeletalMeshComponent*                      SkelMesh;                                         		// 0x000010 (0x0004)              
	unsigned long                                      bSetOtherBodiesToComplement : 1;                  		// 0x000014 (0x0004) [0x00000001] 
};

void UPhysicsAssetInstance::SetNamedBodiesFixed(bool bNewFixed,TArray<struct FName> BoneNames,class USkeletalMeshComponent* SkelMesh,bool bSetOtherBodiesToComplement)
{
	static UFieldFunc* pFnSetNamedBodiesFixed = NULL;
	if(!pFnSetNamedBodiesFixed)
		pFnSetNamedBodiesFixed = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetNamedBodiesFixed");

	Engine_SetNamedBodiesFixed_Parms SetNamedBodiesFixed_Parms;
	SetNamedBodiesFixed_Parms.bNewFixed = bNewFixed;
	memcpy(&SetNamedBodiesFixed_Parms.BoneNames,&BoneNames,0xC);
	SetNamedBodiesFixed_Parms.SkelMesh = SkelMesh;
	SetNamedBodiesFixed_Parms.bSetOtherBodiesToComplement = bSetOtherBodiesToComplement;
	pFnSetNamedBodiesFixed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNamedBodiesFixed,NULL,&SetNamedBodiesFixed_Parms,NULL);
	pFnSetNamedBodiesFixed->FunctionFlags |= 0x400;
}

struct Engine_GetTotalMassBelowBone_Parms
{
	struct FName                                       InBoneName;                                       		// 0x000000 (0x0008)              
	class UPhysicsAsset*                               InAsset;                                          		// 0x000008 (0x0004)              
	class USkeletalMesh*                               InSkelMesh;                                       		// 0x00000C (0x0004)              
	float                                              ReturnValue;                                      		// 0x000010 (0x0004)              
};

float UPhysicsAssetInstance::GetTotalMassBelowBone(struct FName InBoneName,class UPhysicsAsset* InAsset,class USkeletalMesh* InSkelMesh)
{
	static UFieldFunc* pFnGetTotalMassBelowBone = NULL;
	if(!pFnGetTotalMassBelowBone)
		pFnGetTotalMassBelowBone = UObject::FindFunction("Function Engine.PhysicsAssetInstance.GetTotalMassBelowBone");

	Engine_GetTotalMassBelowBone_Parms GetTotalMassBelowBone_Parms;
	memcpy(&GetTotalMassBelowBone_Parms.InBoneName,&InBoneName,0x8);
	GetTotalMassBelowBone_Parms.InAsset = InAsset;
	GetTotalMassBelowBone_Parms.InSkelMesh = InSkelMesh;
	pFnGetTotalMassBelowBone->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTotalMassBelowBone,NULL,&GetTotalMassBelowBone_Parms,NULL);
	pFnGetTotalMassBelowBone->FunctionFlags |= 0x400;
	return GetTotalMassBelowBone_Parms.ReturnValue;
}

struct Engine_SetAllBodiesFixed_Parms
{
	unsigned long                                      bNewFixed : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void UPhysicsAssetInstance::SetAllBodiesFixed(bool bNewFixed)
{
	static UFieldFunc* pFnSetAllBodiesFixed = NULL;
	if(!pFnSetAllBodiesFixed)
		pFnSetAllBodiesFixed = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetAllBodiesFixed");

	Engine_SetAllBodiesFixed_Parms SetAllBodiesFixed_Parms;
	SetAllBodiesFixed_Parms.bNewFixed = bNewFixed;
	pFnSetAllBodiesFixed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAllBodiesFixed,NULL,&SetAllBodiesFixed_Parms,NULL);
	pFnSetAllBodiesFixed->FunctionFlags |= 0x400;
}

struct Engine_SetAllMotorsAngularDriveStrength_Parms
{
	float                                              InAngularSpringStrength;                          		// 0x000000 (0x0004)              
	float                                              InAngularDampingStrength;                         		// 0x000004 (0x0004)              
	float                                              InAngularForceLimitStrength;                      		// 0x000008 (0x0004)              
	class USkeletalMeshComponent*                      SkelMeshComp;                                     		// 0x00000C (0x0004)              
};

void UPhysicsAssetInstance::SetAllMotorsAngularDriveStrength(float InAngularSpringStrength,float InAngularDampingStrength,float InAngularForceLimitStrength,class USkeletalMeshComponent* SkelMeshComp)
{
	static UFieldFunc* pFnSetAllMotorsAngularDriveStrength = NULL;
	if(!pFnSetAllMotorsAngularDriveStrength)
		pFnSetAllMotorsAngularDriveStrength = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetAllMotorsAngularDriveStrength");

	Engine_SetAllMotorsAngularDriveStrength_Parms SetAllMotorsAngularDriveStrength_Parms;
	SetAllMotorsAngularDriveStrength_Parms.InAngularSpringStrength = InAngularSpringStrength;
	SetAllMotorsAngularDriveStrength_Parms.InAngularDampingStrength = InAngularDampingStrength;
	SetAllMotorsAngularDriveStrength_Parms.InAngularForceLimitStrength = InAngularForceLimitStrength;
	SetAllMotorsAngularDriveStrength_Parms.SkelMeshComp = SkelMeshComp;
	pFnSetAllMotorsAngularDriveStrength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAllMotorsAngularDriveStrength,NULL,&SetAllMotorsAngularDriveStrength_Parms,NULL);
	pFnSetAllMotorsAngularDriveStrength->FunctionFlags |= 0x400;
}

struct Engine_SetAllMotorsAngularPositionDrive_Parms
{
	unsigned long                                      bEnableSwingDrive : 1;                            		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableTwistDrive : 1;                            		// 0x000004 (0x0004) [0x00000001] 
};

void UPhysicsAssetInstance::SetAllMotorsAngularPositionDrive(bool bEnableSwingDrive,bool bEnableTwistDrive)
{
	static UFieldFunc* pFnSetAllMotorsAngularPositionDrive = NULL;
	if(!pFnSetAllMotorsAngularPositionDrive)
		pFnSetAllMotorsAngularPositionDrive = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetAllMotorsAngularPositionDrive");

	Engine_SetAllMotorsAngularPositionDrive_Parms SetAllMotorsAngularPositionDrive_Parms;
	SetAllMotorsAngularPositionDrive_Parms.bEnableSwingDrive = bEnableSwingDrive;
	SetAllMotorsAngularPositionDrive_Parms.bEnableTwistDrive = bEnableTwistDrive;
	pFnSetAllMotorsAngularPositionDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAllMotorsAngularPositionDrive,NULL,&SetAllMotorsAngularPositionDrive_Parms,NULL);
	pFnSetAllMotorsAngularPositionDrive->FunctionFlags |= 0x400;
}

struct Engine_SetAllMotorsAngularDriveParams_Parms
{
	float                                              InSpring;                                         		// 0x000000 (0x0004)              
	float                                              InDamping;                                        		// 0x000004 (0x0004)              
	float                                              InForceLimit;                                     		// 0x000008 (0x0004)              
};

void UPhysicsAssetInstance::SetAllMotorsAngularDriveParams(float InSpring,float InDamping,float InForceLimit)
{
	static UFieldFunc* pFnSetAllMotorsAngularDriveParams = NULL;
	if(!pFnSetAllMotorsAngularDriveParams)
		pFnSetAllMotorsAngularDriveParams = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetAllMotorsAngularDriveParams");

	Engine_SetAllMotorsAngularDriveParams_Parms SetAllMotorsAngularDriveParams_Parms;
	SetAllMotorsAngularDriveParams_Parms.InSpring = InSpring;
	SetAllMotorsAngularDriveParams_Parms.InDamping = InDamping;
	SetAllMotorsAngularDriveParams_Parms.InForceLimit = InForceLimit;
	pFnSetAllMotorsAngularDriveParams->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAllMotorsAngularDriveParams,NULL,&SetAllMotorsAngularDriveParams_Parms,NULL);
	pFnSetAllMotorsAngularDriveParams->FunctionFlags |= 0x400;
}

struct Engine_FindConstraintInstance_Parms
{
	struct FName                                       ConName;                                          		// 0x000000 (0x0008)              
	class UPhysicsAsset*                               InAsset;                                          		// 0x000008 (0x0004)              
	class URB_ConstraintInstance*                      ReturnValue;                                      		// 0x00000C (0x0004)              
};

class URB_ConstraintInstance* UPhysicsAssetInstance::FindConstraintInstance(struct FName ConName,class UPhysicsAsset* InAsset)
{
	static UFieldFunc* pFnFindConstraintInstance = NULL;
	if(!pFnFindConstraintInstance)
		pFnFindConstraintInstance = UObject::FindFunction("Function Engine.PhysicsAssetInstance.FindConstraintInstance");

	Engine_FindConstraintInstance_Parms FindConstraintInstance_Parms;
	memcpy(&FindConstraintInstance_Parms.ConName,&ConName,0x8);
	FindConstraintInstance_Parms.InAsset = InAsset;
	pFnFindConstraintInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindConstraintInstance,NULL,&FindConstraintInstance_Parms,NULL);
	pFnFindConstraintInstance->FunctionFlags |= 0x400;
	return FindConstraintInstance_Parms.ReturnValue;
}

struct Engine_SetAngularDriveScale_Parms
{
	float                                              InAngularSpringScale;                             		// 0x000000 (0x0004)              
	float                                              InAngularDampingScale;                            		// 0x000004 (0x0004)              
	float                                              InAngularForceLimitScale;                         		// 0x000008 (0x0004)              
};

void UPhysicsAssetInstance::SetAngularDriveScale(float InAngularSpringScale,float InAngularDampingScale,float InAngularForceLimitScale)
{
	static UFieldFunc* pFnSetAngularDriveScale = NULL;
	if(!pFnSetAngularDriveScale)
		pFnSetAngularDriveScale = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetAngularDriveScale");

	Engine_SetAngularDriveScale_Parms SetAngularDriveScale_Parms;
	SetAngularDriveScale_Parms.InAngularSpringScale = InAngularSpringScale;
	SetAngularDriveScale_Parms.InAngularDampingScale = InAngularDampingScale;
	SetAngularDriveScale_Parms.InAngularForceLimitScale = InAngularForceLimitScale;
	pFnSetAngularDriveScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularDriveScale,NULL,&SetAngularDriveScale_Parms,NULL);
	pFnSetAngularDriveScale->FunctionFlags |= 0x400;
}

struct Engine_SetNamedRBBoneSprings_Parms
{
	unsigned long                                      bEnable : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
	TArray<struct FName>                               BoneNames;                                        		// 0x000004 (0x000C)              
	float                                              InBoneLinearSpring;                               		// 0x000010 (0x0004)              
	float                                              InBoneAngularSpring;                              		// 0x000014 (0x0004)              
	class USkeletalMeshComponent*                      SkelMeshComp;                                     		// 0x000018 (0x0004)              
};

void UPhysicsAssetInstance::SetNamedRBBoneSprings(bool bEnable,TArray<struct FName> BoneNames,float InBoneLinearSpring,float InBoneAngularSpring,class USkeletalMeshComponent* SkelMeshComp)
{
	static UFieldFunc* pFnSetNamedRBBoneSprings = NULL;
	if(!pFnSetNamedRBBoneSprings)
		pFnSetNamedRBBoneSprings = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetNamedRBBoneSprings");

	Engine_SetNamedRBBoneSprings_Parms SetNamedRBBoneSprings_Parms;
	SetNamedRBBoneSprings_Parms.bEnable = bEnable;
	memcpy(&SetNamedRBBoneSprings_Parms.BoneNames,&BoneNames,0xC);
	SetNamedRBBoneSprings_Parms.InBoneLinearSpring = InBoneLinearSpring;
	SetNamedRBBoneSprings_Parms.InBoneAngularSpring = InBoneAngularSpring;
	SetNamedRBBoneSprings_Parms.SkelMeshComp = SkelMeshComp;
	pFnSetNamedRBBoneSprings->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNamedRBBoneSprings,NULL,&SetNamedRBBoneSprings_Parms,NULL);
	pFnSetNamedRBBoneSprings->FunctionFlags |= 0x400;
}

struct Engine_SetNamedBodiesBlockRigidBody_Parms
{
	unsigned long                                      bNewBlockRigidBody : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	TArray<struct FName>                               BoneNames;                                        		// 0x000004 (0x000C)              
	class USkeletalMeshComponent*                      SkelMesh;                                         		// 0x000010 (0x0004)              
};

void UPhysicsAssetInstance::SetNamedBodiesBlockRigidBody(bool bNewBlockRigidBody,TArray<struct FName> BoneNames,class USkeletalMeshComponent* SkelMesh)
{
	static UFieldFunc* pFnSetNamedBodiesBlockRigidBody = NULL;
	if(!pFnSetNamedBodiesBlockRigidBody)
		pFnSetNamedBodiesBlockRigidBody = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetNamedBodiesBlockRigidBody");

	Engine_SetNamedBodiesBlockRigidBody_Parms SetNamedBodiesBlockRigidBody_Parms;
	SetNamedBodiesBlockRigidBody_Parms.bNewBlockRigidBody = bNewBlockRigidBody;
	memcpy(&SetNamedBodiesBlockRigidBody_Parms.BoneNames,&BoneNames,0xC);
	SetNamedBodiesBlockRigidBody_Parms.SkelMesh = SkelMesh;
	pFnSetNamedBodiesBlockRigidBody->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNamedBodiesBlockRigidBody,NULL,&SetNamedBodiesBlockRigidBody_Parms,NULL);
	pFnSetNamedBodiesBlockRigidBody->FunctionFlags |= 0x400;
}

struct Engine_SetFullAnimWeightBonesFixed_Parms
{
	unsigned long                                      bNewFixed : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
	class USkeletalMeshComponent*                      SkelMesh;                                         		// 0x000004 (0x0004)              
};

void UPhysicsAssetInstance::SetFullAnimWeightBonesFixed(bool bNewFixed,class USkeletalMeshComponent* SkelMesh)
{
	static UFieldFunc* pFnSetFullAnimWeightBonesFixed = NULL;
	if(!pFnSetFullAnimWeightBonesFixed)
		pFnSetFullAnimWeightBonesFixed = UObject::FindFunction("Function Engine.PhysicsAssetInstance.SetFullAnimWeightBonesFixed");

	Engine_SetFullAnimWeightBonesFixed_Parms SetFullAnimWeightBonesFixed_Parms;
	SetFullAnimWeightBonesFixed_Parms.bNewFixed = bNewFixed;
	SetFullAnimWeightBonesFixed_Parms.SkelMesh = SkelMesh;
	pFnSetFullAnimWeightBonesFixed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFullAnimWeightBonesFixed,NULL,&SetFullAnimWeightBonesFixed_Parms,NULL);
	pFnSetFullAnimWeightBonesFixed->FunctionFlags |= 0x400;
}

struct Engine_FindBodyInstance_Parms
{
	struct FName                                       BodyName;                                         		// 0x000000 (0x0008)              
	class UPhysicsAsset*                               InAsset;                                          		// 0x000008 (0x0004)              
	class URB_BodyInstance*                            ReturnValue;                                      		// 0x00000C (0x0004)              
};

class URB_BodyInstance* UPhysicsAssetInstance::FindBodyInstance(struct FName BodyName,class UPhysicsAsset* InAsset)
{
	static UFieldFunc* pFnFindBodyInstance = NULL;
	if(!pFnFindBodyInstance)
		pFnFindBodyInstance = UObject::FindFunction("Function Engine.PhysicsAssetInstance.FindBodyInstance");

	Engine_FindBodyInstance_Parms FindBodyInstance_Parms;
	memcpy(&FindBodyInstance_Parms.BodyName,&BodyName,0x8);
	FindBodyInstance_Parms.InAsset = InAsset;
	pFnFindBodyInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindBodyInstance,NULL,&FindBodyInstance_Parms,NULL);
	pFnFindBodyInstance->FunctionFlags |= 0x400;
	return FindBodyInstance_Parms.ReturnValue;
}

struct Engine_SetContactReportForceThreshold_Parms
{
	float                                              Threshold;                                        		// 0x000000 (0x0004)              
};

void URB_BodyInstance::SetContactReportForceThreshold(float Threshold)
{
	static UFieldFunc* pFnSetContactReportForceThreshold = NULL;
	if(!pFnSetContactReportForceThreshold)
		pFnSetContactReportForceThreshold = UObject::FindFunction("Function Engine.RB_BodyInstance.SetContactReportForceThreshold");

	Engine_SetContactReportForceThreshold_Parms SetContactReportForceThreshold_Parms;
	SetContactReportForceThreshold_Parms.Threshold = Threshold;
	pFnSetContactReportForceThreshold->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetContactReportForceThreshold,NULL,&SetContactReportForceThreshold_Parms,NULL);
	pFnSetContactReportForceThreshold->FunctionFlags |= 0x400;
}

struct Engine_SetBoneSpringParams_Parms
{
	float                                              InLinearSpring;                                   		// 0x000000 (0x0004)              
	float                                              InLinearDamping;                                  		// 0x000004 (0x0004)              
	float                                              InAngularSpring;                                  		// 0x000008 (0x0004)              
	float                                              InAngularDamping;                                 		// 0x00000C (0x0004)              
};

void URB_BodyInstance::SetBoneSpringParams(float InLinearSpring,float InLinearDamping,float InAngularSpring,float InAngularDamping)
{
	static UFieldFunc* pFnSetBoneSpringParams = NULL;
	if(!pFnSetBoneSpringParams)
		pFnSetBoneSpringParams = UObject::FindFunction("Function Engine.RB_BodyInstance.SetBoneSpringParams");

	Engine_SetBoneSpringParams_Parms SetBoneSpringParams_Parms;
	SetBoneSpringParams_Parms.InLinearSpring = InLinearSpring;
	SetBoneSpringParams_Parms.InLinearDamping = InLinearDamping;
	SetBoneSpringParams_Parms.InAngularSpring = InAngularSpring;
	SetBoneSpringParams_Parms.InAngularDamping = InAngularDamping;
	pFnSetBoneSpringParams->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBoneSpringParams,NULL,&SetBoneSpringParams_Parms,NULL);
	pFnSetBoneSpringParams->FunctionFlags |= 0x400;
}

struct Engine_SetAwake_Parms
{
	unsigned long                                      bAwake : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void URB_BodyInstance::SetAwake(bool bAwake)
{
	static UFieldFunc* pFnSetAwake = NULL;
	if(!pFnSetAwake)
		pFnSetAwake = UObject::FindFunction("Function Engine.RB_BodyInstance.SetAwake");

	Engine_SetAwake_Parms SetAwake_Parms;
	SetAwake_Parms.bAwake = bAwake;
	pFnSetAwake->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAwake,NULL,&SetAwake_Parms,NULL);
	pFnSetAwake->FunctionFlags |= 0x400;
}

struct Engine_GetUnrealWorldAngularVelocity_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 URB_BodyInstance::GetUnrealWorldAngularVelocity()
{
	static UFieldFunc* pFnGetUnrealWorldAngularVelocity = NULL;
	if(!pFnGetUnrealWorldAngularVelocity)
		pFnGetUnrealWorldAngularVelocity = UObject::FindFunction("Function Engine.RB_BodyInstance.GetUnrealWorldAngularVelocity");

	Engine_GetUnrealWorldAngularVelocity_Parms GetUnrealWorldAngularVelocity_Parms;
	pFnGetUnrealWorldAngularVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUnrealWorldAngularVelocity,NULL,&GetUnrealWorldAngularVelocity_Parms,NULL);
	pFnGetUnrealWorldAngularVelocity->FunctionFlags |= 0x400;
	return GetUnrealWorldAngularVelocity_Parms.ReturnValue;
}

struct Engine_EnableBoneSpring_Parms
{
	unsigned long                                      bInEnableLinear : 1;                              		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bInEnableAngular : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	unsigned char                                      _0x000008[0x8];                                   		// 0x000008 (0x0008) MISSED OFFSET
	FMatrix                                            InBoneTarget;                                     		// 0x000010 (0x0040)              
};

void URB_BodyInstance::EnableBoneSpring(bool bInEnableLinear,bool bInEnableAngular,FMatrix* InBoneTarget)
{
	static UFieldFunc* pFnEnableBoneSpring = NULL;
	if(!pFnEnableBoneSpring)
		pFnEnableBoneSpring = UObject::FindFunction("Function Engine.RB_BodyInstance.EnableBoneSpring");

	Engine_EnableBoneSpring_Parms EnableBoneSpring_Parms;
	EnableBoneSpring_Parms.bInEnableLinear = bInEnableLinear;
	EnableBoneSpring_Parms.bInEnableAngular = bInEnableAngular;
	pFnEnableBoneSpring->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableBoneSpring,NULL,&EnableBoneSpring_Parms,NULL);
	pFnEnableBoneSpring->FunctionFlags |= 0x400;
	if(InBoneTarget)
		memcpy(InBoneTarget,&EnableBoneSpring_Parms.InBoneTarget,0x40);
}

struct Engine_IsValidBodyInstance_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool URB_BodyInstance::IsValidBodyInstance()
{
	static UFieldFunc* pFnIsValidBodyInstance = NULL;
	if(!pFnIsValidBodyInstance)
		pFnIsValidBodyInstance = UObject::FindFunction("Function Engine.RB_BodyInstance.IsValidBodyInstance");

	Engine_IsValidBodyInstance_Parms IsValidBodyInstance_Parms;
	pFnIsValidBodyInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsValidBodyInstance,NULL,&IsValidBodyInstance_Parms,NULL);
	pFnIsValidBodyInstance->FunctionFlags |= 0x400;
	return IsValidBodyInstance_Parms.ReturnValue;
}

struct Engine_GetUnrealWorldTM_Parms
{
	FMatrix                                            ReturnValue;                                      		// 0x000000 (0x0040)              
};

FMatrix URB_BodyInstance::GetUnrealWorldTM()
{
	static UFieldFunc* pFnGetUnrealWorldTM = NULL;
	if(!pFnGetUnrealWorldTM)
		pFnGetUnrealWorldTM = UObject::FindFunction("Function Engine.RB_BodyInstance.GetUnrealWorldTM");

	Engine_GetUnrealWorldTM_Parms GetUnrealWorldTM_Parms;
	pFnGetUnrealWorldTM->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUnrealWorldTM,NULL,&GetUnrealWorldTM_Parms,NULL);
	pFnGetUnrealWorldTM->FunctionFlags |= 0x400;
	return GetUnrealWorldTM_Parms.ReturnValue;
}

struct Engine_SetIsTrigger_Parms
{
	unsigned long                                      bNewIsTrigger : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void URB_BodyInstance::SetIsTrigger(bool bNewIsTrigger)
{
	static UFieldFunc* pFnSetIsTrigger = NULL;
	if(!pFnSetIsTrigger)
		pFnSetIsTrigger = UObject::FindFunction("Function Engine.RB_BodyInstance.SetIsTrigger");

	Engine_SetIsTrigger_Parms SetIsTrigger_Parms;
	SetIsTrigger_Parms.bNewIsTrigger = bNewIsTrigger;
	pFnSetIsTrigger->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIsTrigger,NULL,&SetIsTrigger_Parms,NULL);
	pFnSetIsTrigger->FunctionFlags |= 0x400;
}

struct Engine_GetUnrealWorldVelocity_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 URB_BodyInstance::GetUnrealWorldVelocity()
{
	static UFieldFunc* pFnGetUnrealWorldVelocity = NULL;
	if(!pFnGetUnrealWorldVelocity)
		pFnGetUnrealWorldVelocity = UObject::FindFunction("Function Engine.RB_BodyInstance.GetUnrealWorldVelocity");

	Engine_GetUnrealWorldVelocity_Parms GetUnrealWorldVelocity_Parms;
	pFnGetUnrealWorldVelocity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUnrealWorldVelocity,NULL,&GetUnrealWorldVelocity_Parms,NULL);
	pFnGetUnrealWorldVelocity->FunctionFlags |= 0x400;
	return GetUnrealWorldVelocity_Parms.ReturnValue;
}

struct Engine_SetAPBCollision_Parms
{
	struct FsAPBCollision                              newAPBCollision;                                  		// 0x000000 (0x0014)              
};

void URB_BodyInstance::SetAPBCollision(struct FsAPBCollision newAPBCollision)
{
	static UFieldFunc* pFnSetAPBCollision = NULL;
	if(!pFnSetAPBCollision)
		pFnSetAPBCollision = UObject::FindFunction("Function Engine.RB_BodyInstance.SetAPBCollision");

	Engine_SetAPBCollision_Parms SetAPBCollision_Parms;
	memcpy(&SetAPBCollision_Parms.newAPBCollision,&newAPBCollision,0x14);
	pFnSetAPBCollision->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAPBCollision,NULL,&SetAPBCollision_Parms,NULL);
	pFnSetAPBCollision->FunctionFlags |= 0x400;
}

struct Engine_IsFixed_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool URB_BodyInstance::IsFixed()
{
	static UFieldFunc* pFnIsFixed = NULL;
	if(!pFnIsFixed)
		pFnIsFixed = UObject::FindFunction("Function Engine.RB_BodyInstance.IsFixed");

	Engine_IsFixed_Parms IsFixed_Parms;
	pFnIsFixed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsFixed,NULL,&IsFixed_Parms,NULL);
	pFnIsFixed->FunctionFlags |= 0x400;
	return IsFixed_Parms.ReturnValue;
}

struct Engine_GetPhysicsAssetInstance_Parms
{
	class UPhysicsAssetInstance*                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPhysicsAssetInstance* URB_BodyInstance::GetPhysicsAssetInstance()
{
	static UFieldFunc* pFnGetPhysicsAssetInstance = NULL;
	if(!pFnGetPhysicsAssetInstance)
		pFnGetPhysicsAssetInstance = UObject::FindFunction("Function Engine.RB_BodyInstance.GetPhysicsAssetInstance");

	Engine_GetPhysicsAssetInstance_Parms GetPhysicsAssetInstance_Parms;
	pFnGetPhysicsAssetInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPhysicsAssetInstance,NULL,&GetPhysicsAssetInstance_Parms,NULL);
	pFnGetPhysicsAssetInstance->FunctionFlags |= 0x400;
	return GetPhysicsAssetInstance_Parms.ReturnValue;
}

struct Engine_SetGravityResponse_Parms
{
	unsigned long                                      bGravityResponse : 1;                             		// 0x000000 (0x0004) [0x00000001] 
};

void URB_BodyInstance::SetGravityResponse(bool bGravityResponse)
{
	static UFieldFunc* pFnSetGravityResponse = NULL;
	if(!pFnSetGravityResponse)
		pFnSetGravityResponse = UObject::FindFunction("Function Engine.RB_BodyInstance.SetGravityResponse");

	Engine_SetGravityResponse_Parms SetGravityResponse_Parms;
	SetGravityResponse_Parms.bGravityResponse = bGravityResponse;
	pFnSetGravityResponse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetGravityResponse,NULL,&SetGravityResponse_Parms,NULL);
	pFnSetGravityResponse->FunctionFlags |= 0x400;
}

struct Engine_SetPhysMaterialOverride_Parms
{
	class UPhysicalMaterial*                           NewPhysMaterial;                                  		// 0x000000 (0x0004)              
};

void URB_BodyInstance::SetPhysMaterialOverride(class UPhysicalMaterial* NewPhysMaterial)
{
	static UFieldFunc* pFnSetPhysMaterialOverride = NULL;
	if(!pFnSetPhysMaterialOverride)
		pFnSetPhysMaterialOverride = UObject::FindFunction("Function Engine.RB_BodyInstance.SetPhysMaterialOverride");

	Engine_SetPhysMaterialOverride_Parms SetPhysMaterialOverride_Parms;
	SetPhysMaterialOverride_Parms.NewPhysMaterial = NewPhysMaterial;
	pFnSetPhysMaterialOverride->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPhysMaterialOverride,NULL,&SetPhysMaterialOverride_Parms,NULL);
	pFnSetPhysMaterialOverride->FunctionFlags |= 0x400;
}

struct Engine_SetFixed_Parms
{
	unsigned long                                      bNewFixed : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void URB_BodyInstance::SetFixed(bool bNewFixed)
{
	static UFieldFunc* pFnSetFixed = NULL;
	if(!pFnSetFixed)
		pFnSetFixed = UObject::FindFunction("Function Engine.RB_BodyInstance.SetFixed");

	Engine_SetFixed_Parms SetFixed_Parms;
	SetFixed_Parms.bNewFixed = bNewFixed;
	pFnSetFixed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFixed,NULL,&SetFixed_Parms,NULL);
	pFnSetFixed->FunctionFlags |= 0x400;
}

struct Engine_SetBoneSpringTarget_Parms
{
	FMatrix                                            InBoneTarget;                                     		// 0x000000 (0x0040)              
	unsigned long                                      bTeleport : 1;                                    		// 0x000040 (0x0004) [0x00000001] 
};

void URB_BodyInstance::SetBoneSpringTarget(FMatrix* InBoneTarget,bool bTeleport)
{
	static UFieldFunc* pFnSetBoneSpringTarget = NULL;
	if(!pFnSetBoneSpringTarget)
		pFnSetBoneSpringTarget = UObject::FindFunction("Function Engine.RB_BodyInstance.SetBoneSpringTarget");

	Engine_SetBoneSpringTarget_Parms SetBoneSpringTarget_Parms;
	SetBoneSpringTarget_Parms.bTeleport = bTeleport;
	pFnSetBoneSpringTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBoneSpringTarget,NULL,&SetBoneSpringTarget_Parms,NULL);
	pFnSetBoneSpringTarget->FunctionFlags |= 0x400;
	if(InBoneTarget)
		memcpy(InBoneTarget,&SetBoneSpringTarget_Parms.InBoneTarget,0x40);
}

struct Engine_EnableCollisionResponse_Parms
{
	unsigned long                                      bEnableResponse : 1;                              		// 0x000000 (0x0004) [0x00000001] 
};

void URB_BodyInstance::EnableCollisionResponse(bool bEnableResponse)
{
	static UFieldFunc* pFnEnableCollisionResponse = NULL;
	if(!pFnEnableCollisionResponse)
		pFnEnableCollisionResponse = UObject::FindFunction("Function Engine.RB_BodyInstance.EnableCollisionResponse");

	Engine_EnableCollisionResponse_Parms EnableCollisionResponse_Parms;
	EnableCollisionResponse_Parms.bEnableResponse = bEnableResponse;
	pFnEnableCollisionResponse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableCollisionResponse,NULL,&EnableCollisionResponse_Parms,NULL);
	pFnEnableCollisionResponse->FunctionFlags |= 0x400;
}

struct Engine_SetBlockRigidBody_Parms
{
	unsigned long                                      bNewBlockRigidBody : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void URB_BodyInstance::SetBlockRigidBody(bool bNewBlockRigidBody)
{
	static UFieldFunc* pFnSetBlockRigidBody = NULL;
	if(!pFnSetBlockRigidBody)
		pFnSetBlockRigidBody = UObject::FindFunction("Function Engine.RB_BodyInstance.SetBlockRigidBody");

	Engine_SetBlockRigidBody_Parms SetBlockRigidBody_Parms;
	SetBlockRigidBody_Parms.bNewBlockRigidBody = bNewBlockRigidBody;
	pFnSetBlockRigidBody->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetBlockRigidBody,NULL,&SetBlockRigidBody_Parms,NULL);
	pFnSetBlockRigidBody->FunctionFlags |= 0x400;
}

struct Engine_SetLinearDriveParams_Parms
{
	float                                              InSpring;                                         		// 0x000000 (0x0004)              
	float                                              InDamping;                                        		// 0x000004 (0x0004)              
	float                                              InForceLimit;                                     		// 0x000008 (0x0004)              
};

void URB_ConstraintInstance::SetLinearDriveParams(float InSpring,float InDamping,float InForceLimit)
{
	static UFieldFunc* pFnSetLinearDriveParams = NULL;
	if(!pFnSetLinearDriveParams)
		pFnSetLinearDriveParams = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetLinearDriveParams");

	Engine_SetLinearDriveParams_Parms SetLinearDriveParams_Parms;
	SetLinearDriveParams_Parms.InSpring = InSpring;
	SetLinearDriveParams_Parms.InDamping = InDamping;
	SetLinearDriveParams_Parms.InForceLimit = InForceLimit;
	pFnSetLinearDriveParams->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearDriveParams,NULL,&SetLinearDriveParams_Parms,NULL);
	pFnSetLinearDriveParams->FunctionFlags |= 0x400;
}

struct Engine_SetAngularPositionTarget_Parms
{
	struct FQuat                                       InPosTarget;                                      		// 0x000000 (0x0010)              
};

void URB_ConstraintInstance::SetAngularPositionTarget(struct FQuat* InPosTarget)
{
	static UFieldFunc* pFnSetAngularPositionTarget = NULL;
	if(!pFnSetAngularPositionTarget)
		pFnSetAngularPositionTarget = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetAngularPositionTarget");

	Engine_SetAngularPositionTarget_Parms SetAngularPositionTarget_Parms;
	pFnSetAngularPositionTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularPositionTarget,NULL,&SetAngularPositionTarget_Parms,NULL);
	pFnSetAngularPositionTarget->FunctionFlags |= 0x400;
	if(InPosTarget)
		memcpy(InPosTarget,&SetAngularPositionTarget_Parms.InPosTarget,0x10);
}

struct Engine_SetLinearVelocityDrive_Parms
{
	unsigned long                                      bEnableXDrive : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableYDrive : 1;                                		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bEnableZDrive : 1;                                		// 0x000008 (0x0004) [0x00000001] 
};

void URB_ConstraintInstance::SetLinearVelocityDrive(bool bEnableXDrive,bool bEnableYDrive,bool bEnableZDrive)
{
	static UFieldFunc* pFnSetLinearVelocityDrive = NULL;
	if(!pFnSetLinearVelocityDrive)
		pFnSetLinearVelocityDrive = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetLinearVelocityDrive");

	Engine_SetLinearVelocityDrive_Parms SetLinearVelocityDrive_Parms;
	SetLinearVelocityDrive_Parms.bEnableXDrive = bEnableXDrive;
	SetLinearVelocityDrive_Parms.bEnableYDrive = bEnableYDrive;
	SetLinearVelocityDrive_Parms.bEnableZDrive = bEnableZDrive;
	pFnSetLinearVelocityDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearVelocityDrive,NULL,&SetLinearVelocityDrive_Parms,NULL);
	pFnSetLinearVelocityDrive->FunctionFlags |= 0x400;
}

struct Engine_SetLinearPositionDrive_Parms
{
	unsigned long                                      bEnableXDrive : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableYDrive : 1;                                		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bEnableZDrive : 1;                                		// 0x000008 (0x0004) [0x00000001] 
};

void URB_ConstraintInstance::SetLinearPositionDrive(bool bEnableXDrive,bool bEnableYDrive,bool bEnableZDrive)
{
	static UFieldFunc* pFnSetLinearPositionDrive = NULL;
	if(!pFnSetLinearPositionDrive)
		pFnSetLinearPositionDrive = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetLinearPositionDrive");

	Engine_SetLinearPositionDrive_Parms SetLinearPositionDrive_Parms;
	SetLinearPositionDrive_Parms.bEnableXDrive = bEnableXDrive;
	SetLinearPositionDrive_Parms.bEnableYDrive = bEnableYDrive;
	SetLinearPositionDrive_Parms.bEnableZDrive = bEnableZDrive;
	pFnSetLinearPositionDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearPositionDrive,NULL,&SetLinearPositionDrive_Parms,NULL);
	pFnSetLinearPositionDrive->FunctionFlags |= 0x400;
}

struct Engine_MoveKinActorTransform_Parms
{
	FMatrix                                            NewTM;                                            		// 0x000000 (0x0040)              
};

void URB_ConstraintInstance::MoveKinActorTransform(FMatrix* NewTM)
{
	static UFieldFunc* pFnMoveKinActorTransform = NULL;
	if(!pFnMoveKinActorTransform)
		pFnMoveKinActorTransform = UObject::FindFunction("Function Engine.RB_ConstraintInstance.MoveKinActorTransform");

	Engine_MoveKinActorTransform_Parms MoveKinActorTransform_Parms;
	pFnMoveKinActorTransform->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMoveKinActorTransform,NULL,&MoveKinActorTransform_Parms,NULL);
	pFnMoveKinActorTransform->FunctionFlags |= 0x400;
	if(NewTM)
		memcpy(NewTM,&MoveKinActorTransform_Parms.NewTM,0x40);
}

struct Engine_TermConstraint_Parms
{
};

void URB_ConstraintInstance::TermConstraint()
{
	static UFieldFunc* pFnTermConstraint = NULL;
	if(!pFnTermConstraint)
		pFnTermConstraint = UObject::FindFunction("Function Engine.RB_ConstraintInstance.TermConstraint");

	Engine_TermConstraint_Parms TermConstraint_Parms;
	pFnTermConstraint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTermConstraint,NULL,&TermConstraint_Parms,NULL);
	pFnTermConstraint->FunctionFlags |= 0x400;
}

struct Engine_SetAngularVelocityTarget_Parms
{
	FVector3                                           InVelTarget;                                      		// 0x000000 (0x000C)              
};

void URB_ConstraintInstance::SetAngularVelocityTarget(FVector3 InVelTarget)
{
	static UFieldFunc* pFnSetAngularVelocityTarget = NULL;
	if(!pFnSetAngularVelocityTarget)
		pFnSetAngularVelocityTarget = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetAngularVelocityTarget");

	Engine_SetAngularVelocityTarget_Parms SetAngularVelocityTarget_Parms;
	memcpy(&SetAngularVelocityTarget_Parms.InVelTarget,&InVelTarget,0xC);
	pFnSetAngularVelocityTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularVelocityTarget,NULL,&SetAngularVelocityTarget_Parms,NULL);
	pFnSetAngularVelocityTarget->FunctionFlags |= 0x400;
}

struct Engine_InitConstraint_Parms
{
	class UPrimitiveComponent*                         PrimComp1;                                        		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         PrimComp2;                                        		// 0x000004 (0x0004)              
	class URB_ConstraintSetup*                         Setup;                                            		// 0x000008 (0x0004)              
	float                                              Scale;                                            		// 0x00000C (0x0004)              
	class AActor*                                      InOwner;                                          		// 0x000010 (0x0004)              
	class UPrimitiveComponent*                         InPrimComp;                                       		// 0x000014 (0x0004)              
	unsigned long                                      bMakeKinForBody1 : 1;                             		// 0x000018 (0x0004) [0x00000001] 
};

void URB_ConstraintInstance::InitConstraint(class UPrimitiveComponent* PrimComp1,class UPrimitiveComponent* PrimComp2,class URB_ConstraintSetup* Setup,float Scale,class AActor* InOwner,class UPrimitiveComponent* InPrimComp,bool bMakeKinForBody1)
{
	static UFieldFunc* pFnInitConstraint = NULL;
	if(!pFnInitConstraint)
		pFnInitConstraint = UObject::FindFunction("Function Engine.RB_ConstraintInstance.InitConstraint");

	Engine_InitConstraint_Parms InitConstraint_Parms;
	InitConstraint_Parms.PrimComp1 = PrimComp1;
	InitConstraint_Parms.PrimComp2 = PrimComp2;
	InitConstraint_Parms.Setup = Setup;
	InitConstraint_Parms.Scale = Scale;
	InitConstraint_Parms.InOwner = InOwner;
	InitConstraint_Parms.InPrimComp = InPrimComp;
	InitConstraint_Parms.bMakeKinForBody1 = bMakeKinForBody1;
	pFnInitConstraint->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitConstraint,NULL,&InitConstraint_Parms,NULL);
	pFnInitConstraint->FunctionFlags |= 0x400;
}

struct Engine_SetLinearLimitSize_Parms
{
	float                                              NewLimitSize;                                     		// 0x000000 (0x0004)              
};

void URB_ConstraintInstance::SetLinearLimitSize(float NewLimitSize)
{
	static UFieldFunc* pFnSetLinearLimitSize = NULL;
	if(!pFnSetLinearLimitSize)
		pFnSetLinearLimitSize = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetLinearLimitSize");

	Engine_SetLinearLimitSize_Parms SetLinearLimitSize_Parms;
	SetLinearLimitSize_Parms.NewLimitSize = NewLimitSize;
	pFnSetLinearLimitSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearLimitSize,NULL,&SetLinearLimitSize_Parms,NULL);
	pFnSetLinearLimitSize->FunctionFlags |= 0x400;
}

struct Engine_SetLinearVelocityTarget_Parms
{
	FVector3                                           InVelTarget;                                      		// 0x000000 (0x000C)              
};

void URB_ConstraintInstance::SetLinearVelocityTarget(FVector3 InVelTarget)
{
	static UFieldFunc* pFnSetLinearVelocityTarget = NULL;
	if(!pFnSetLinearVelocityTarget)
		pFnSetLinearVelocityTarget = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetLinearVelocityTarget");

	Engine_SetLinearVelocityTarget_Parms SetLinearVelocityTarget_Parms;
	memcpy(&SetLinearVelocityTarget_Parms.InVelTarget,&InVelTarget,0xC);
	pFnSetLinearVelocityTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearVelocityTarget,NULL,&SetLinearVelocityTarget_Parms,NULL);
	pFnSetLinearVelocityTarget->FunctionFlags |= 0x400;
}

struct Engine_SetLinearPositionTarget_Parms
{
	FVector3                                           InPosTarget;                                      		// 0x000000 (0x000C)              
};

void URB_ConstraintInstance::SetLinearPositionTarget(FVector3 InPosTarget)
{
	static UFieldFunc* pFnSetLinearPositionTarget = NULL;
	if(!pFnSetLinearPositionTarget)
		pFnSetLinearPositionTarget = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetLinearPositionTarget");

	Engine_SetLinearPositionTarget_Parms SetLinearPositionTarget_Parms;
	memcpy(&SetLinearPositionTarget_Parms.InPosTarget,&InPosTarget,0xC);
	pFnSetLinearPositionTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetLinearPositionTarget,NULL,&SetLinearPositionTarget_Parms,NULL);
	pFnSetLinearPositionTarget->FunctionFlags |= 0x400;
}

struct Engine_SetAngularDriveParams_Parms
{
	float                                              InSpring;                                         		// 0x000000 (0x0004)              
	float                                              InDamping;                                        		// 0x000004 (0x0004)              
	float                                              InForceLimit;                                     		// 0x000008 (0x0004)              
};

void URB_ConstraintInstance::SetAngularDriveParams(float InSpring,float InDamping,float InForceLimit)
{
	static UFieldFunc* pFnSetAngularDriveParams = NULL;
	if(!pFnSetAngularDriveParams)
		pFnSetAngularDriveParams = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetAngularDriveParams");

	Engine_SetAngularDriveParams_Parms SetAngularDriveParams_Parms;
	SetAngularDriveParams_Parms.InSpring = InSpring;
	SetAngularDriveParams_Parms.InDamping = InDamping;
	SetAngularDriveParams_Parms.InForceLimit = InForceLimit;
	pFnSetAngularDriveParams->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularDriveParams,NULL,&SetAngularDriveParams_Parms,NULL);
	pFnSetAngularDriveParams->FunctionFlags |= 0x400;
}

struct Engine_SetAngularVelocityDrive_Parms
{
	unsigned long                                      bEnableSwingDrive : 1;                            		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableTwistDrive : 1;                            		// 0x000004 (0x0004) [0x00000001] 
};

void URB_ConstraintInstance::SetAngularVelocityDrive(bool bEnableSwingDrive,bool bEnableTwistDrive)
{
	static UFieldFunc* pFnSetAngularVelocityDrive = NULL;
	if(!pFnSetAngularVelocityDrive)
		pFnSetAngularVelocityDrive = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetAngularVelocityDrive");

	Engine_SetAngularVelocityDrive_Parms SetAngularVelocityDrive_Parms;
	SetAngularVelocityDrive_Parms.bEnableSwingDrive = bEnableSwingDrive;
	SetAngularVelocityDrive_Parms.bEnableTwistDrive = bEnableTwistDrive;
	pFnSetAngularVelocityDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularVelocityDrive,NULL,&SetAngularVelocityDrive_Parms,NULL);
	pFnSetAngularVelocityDrive->FunctionFlags |= 0x400;
}

struct Engine_GetPhysicsAssetInstance_Parms
{
	class UPhysicsAssetInstance*                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPhysicsAssetInstance* URB_ConstraintInstance::GetPhysicsAssetInstance()
{
	static UFieldFunc* pFnGetPhysicsAssetInstance = NULL;
	if(!pFnGetPhysicsAssetInstance)
		pFnGetPhysicsAssetInstance = UObject::FindFunction("Function Engine.RB_ConstraintInstance.GetPhysicsAssetInstance");

	Engine_GetPhysicsAssetInstance_Parms GetPhysicsAssetInstance_Parms;
	pFnGetPhysicsAssetInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPhysicsAssetInstance,NULL,&GetPhysicsAssetInstance_Parms,NULL);
	pFnGetPhysicsAssetInstance->FunctionFlags |= 0x400;
	return GetPhysicsAssetInstance_Parms.ReturnValue;
}

struct Engine_SetAngularPositionDrive_Parms
{
	unsigned long                                      bEnableSwingDrive : 1;                            		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bEnableTwistDrive : 1;                            		// 0x000004 (0x0004) [0x00000001] 
};

void URB_ConstraintInstance::SetAngularPositionDrive(bool bEnableSwingDrive,bool bEnableTwistDrive)
{
	static UFieldFunc* pFnSetAngularPositionDrive = NULL;
	if(!pFnSetAngularPositionDrive)
		pFnSetAngularPositionDrive = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetAngularPositionDrive");

	Engine_SetAngularPositionDrive_Parms SetAngularPositionDrive_Parms;
	SetAngularPositionDrive_Parms.bEnableSwingDrive = bEnableSwingDrive;
	SetAngularPositionDrive_Parms.bEnableTwistDrive = bEnableTwistDrive;
	pFnSetAngularPositionDrive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularPositionDrive,NULL,&SetAngularPositionDrive_Parms,NULL);
	pFnSetAngularPositionDrive->FunctionFlags |= 0x400;
}

struct Engine_GetConstraintLocation_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 URB_ConstraintInstance::GetConstraintLocation()
{
	static UFieldFunc* pFnGetConstraintLocation = NULL;
	if(!pFnGetConstraintLocation)
		pFnGetConstraintLocation = UObject::FindFunction("Function Engine.RB_ConstraintInstance.GetConstraintLocation");

	Engine_GetConstraintLocation_Parms GetConstraintLocation_Parms;
	pFnGetConstraintLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetConstraintLocation,NULL,&GetConstraintLocation_Parms,NULL);
	pFnGetConstraintLocation->FunctionFlags |= 0x400;
	return GetConstraintLocation_Parms.ReturnValue;
}

struct Engine_SetAngularDOFLimitScale_Parms
{
	float                                              InSwing1LimitScale;                               		// 0x000000 (0x0004)              
	float                                              InSwing2LimitScale;                               		// 0x000004 (0x0004)              
	float                                              InTwistLimitScale;                                		// 0x000008 (0x0004)              
	class URB_ConstraintSetup*                         InSetup;                                          		// 0x00000C (0x0004)              
};

void URB_ConstraintInstance::SetAngularDOFLimitScale(float InSwing1LimitScale,float InSwing2LimitScale,float InTwistLimitScale,class URB_ConstraintSetup* InSetup)
{
	static UFieldFunc* pFnSetAngularDOFLimitScale = NULL;
	if(!pFnSetAngularDOFLimitScale)
		pFnSetAngularDOFLimitScale = UObject::FindFunction("Function Engine.RB_ConstraintInstance.SetAngularDOFLimitScale");

	Engine_SetAngularDOFLimitScale_Parms SetAngularDOFLimitScale_Parms;
	SetAngularDOFLimitScale_Parms.InSwing1LimitScale = InSwing1LimitScale;
	SetAngularDOFLimitScale_Parms.InSwing2LimitScale = InSwing2LimitScale;
	SetAngularDOFLimitScale_Parms.InTwistLimitScale = InTwistLimitScale;
	SetAngularDOFLimitScale_Parms.InSetup = InSetup;
	pFnSetAngularDOFLimitScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAngularDOFLimitScale,NULL,&SetAngularDOFLimitScale_Parms,NULL);
	pFnSetAngularDOFLimitScale->FunctionFlags |= 0x400;
}

struct Engine_GetHandbrakeLongSlipFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetHandbrakeLongSlipFactor()
{
	static UFieldFunc* pFnGetHandbrakeLongSlipFactor = NULL;
	if(!pFnGetHandbrakeLongSlipFactor)
		pFnGetHandbrakeLongSlipFactor = UObject::FindFunction("Function Engine.SVehicleWheel.GetHandbrakeLongSlipFactor");

	Engine_GetHandbrakeLongSlipFactor_Parms GetHandbrakeLongSlipFactor_Parms;
	ProcessEvent(pFnGetHandbrakeLongSlipFactor,NULL,&GetHandbrakeLongSlipFactor_Parms,NULL);
	return GetHandbrakeLongSlipFactor_Parms.ReturnValue;
}

struct Engine_GetMotorTorque_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetMotorTorque()
{
	static UFieldFunc* pFnGetMotorTorque = NULL;
	if(!pFnGetMotorTorque)
		pFnGetMotorTorque = UObject::FindFunction("Function Engine.SVehicleWheel.GetMotorTorque");

	Engine_GetMotorTorque_Parms GetMotorTorque_Parms;
	ProcessEvent(pFnGetMotorTorque,NULL,&GetMotorTorque_Parms,NULL);
	return GetMotorTorque_Parms.ReturnValue;
}

struct Engine_GetChassisTorque_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetChassisTorque()
{
	static UFieldFunc* pFnGetChassisTorque = NULL;
	if(!pFnGetChassisTorque)
		pFnGetChassisTorque = UObject::FindFunction("Function Engine.SVehicleWheel.GetChassisTorque");

	Engine_GetChassisTorque_Parms GetChassisTorque_Parms;
	ProcessEvent(pFnGetChassisTorque,NULL,&GetChassisTorque_Parms,NULL);
	return GetChassisTorque_Parms.ReturnValue;
}

struct Engine_GetSteerValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetSteerValue()
{
	static UFieldFunc* pFnGetSteerValue = NULL;
	if(!pFnGetSteerValue)
		pFnGetSteerValue = UObject::FindFunction("Function Engine.SVehicleWheel.GetSteerValue");

	Engine_GetSteerValue_Parms GetSteerValue_Parms;
	ProcessEvent(pFnGetSteerValue,NULL,&GetSteerValue_Parms,NULL);
	return GetSteerValue_Parms.ReturnValue;
}

struct Engine_GetParkedSlipFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetParkedSlipFactor()
{
	static UFieldFunc* pFnGetParkedSlipFactor = NULL;
	if(!pFnGetParkedSlipFactor)
		pFnGetParkedSlipFactor = UObject::FindFunction("Function Engine.SVehicleWheel.GetParkedSlipFactor");

	Engine_GetParkedSlipFactor_Parms GetParkedSlipFactor_Parms;
	ProcessEvent(pFnGetParkedSlipFactor,NULL,&GetParkedSlipFactor_Parms,NULL);
	return GetParkedSlipFactor_Parms.ReturnValue;
}

struct Engine_GetLatSlipFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetLatSlipFactor()
{
	static UFieldFunc* pFnGetLatSlipFactor = NULL;
	if(!pFnGetLatSlipFactor)
		pFnGetLatSlipFactor = UObject::FindFunction("Function Engine.SVehicleWheel.GetLatSlipFactor");

	Engine_GetLatSlipFactor_Parms GetLatSlipFactor_Parms;
	ProcessEvent(pFnGetLatSlipFactor,NULL,&GetLatSlipFactor_Parms,NULL);
	return GetLatSlipFactor_Parms.ReturnValue;
}

struct Engine_GetBrakeTorque_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetBrakeTorque()
{
	static UFieldFunc* pFnGetBrakeTorque = NULL;
	if(!pFnGetBrakeTorque)
		pFnGetBrakeTorque = UObject::FindFunction("Function Engine.SVehicleWheel.GetBrakeTorque");

	Engine_GetBrakeTorque_Parms GetBrakeTorque_Parms;
	ProcessEvent(pFnGetBrakeTorque,NULL,&GetBrakeTorque_Parms,NULL);
	return GetBrakeTorque_Parms.ReturnValue;
}

struct Engine_GetSuspensionTravel_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetSuspensionTravel()
{
	static UFieldFunc* pFnGetSuspensionTravel = NULL;
	if(!pFnGetSuspensionTravel)
		pFnGetSuspensionTravel = UObject::FindFunction("Function Engine.SVehicleWheel.GetSuspensionTravel");

	Engine_GetSuspensionTravel_Parms GetSuspensionTravel_Parms;
	ProcessEvent(pFnGetSuspensionTravel,NULL,&GetSuspensionTravel_Parms,NULL);
	return GetSuspensionTravel_Parms.ReturnValue;
}

struct Engine_GetHandbrakeLatSlipFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetHandbrakeLatSlipFactor()
{
	static UFieldFunc* pFnGetHandbrakeLatSlipFactor = NULL;
	if(!pFnGetHandbrakeLatSlipFactor)
		pFnGetHandbrakeLatSlipFactor = UObject::FindFunction("Function Engine.SVehicleWheel.GetHandbrakeLatSlipFactor");

	Engine_GetHandbrakeLatSlipFactor_Parms GetHandbrakeLatSlipFactor_Parms;
	ProcessEvent(pFnGetHandbrakeLatSlipFactor,NULL,&GetHandbrakeLatSlipFactor_Parms,NULL);
	return GetHandbrakeLatSlipFactor_Parms.ReturnValue;
}

struct Engine_GetLongSlipFactor_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetLongSlipFactor()
{
	static UFieldFunc* pFnGetLongSlipFactor = NULL;
	if(!pFnGetLongSlipFactor)
		pFnGetLongSlipFactor = UObject::FindFunction("Function Engine.SVehicleWheel.GetLongSlipFactor");

	Engine_GetLongSlipFactor_Parms GetLongSlipFactor_Parms;
	ProcessEvent(pFnGetLongSlipFactor,NULL,&GetLongSlipFactor_Parms,NULL);
	return GetLongSlipFactor_Parms.ReturnValue;
}

struct Engine_GetWheelRadius_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float USVehicleWheel::GetWheelRadius()
{
	static UFieldFunc* pFnGetWheelRadius = NULL;
	if(!pFnGetWheelRadius)
		pFnGetWheelRadius = UObject::FindFunction("Function Engine.SVehicleWheel.GetWheelRadius");

	Engine_GetWheelRadius_Parms GetWheelRadius_Parms;
	ProcessEvent(pFnGetWheelRadius,NULL,&GetWheelRadius_Parms,NULL);
	return GetWheelRadius_Parms.ReturnValue;
}

struct Engine_StopsProjectile_Parms
{
	class AProjectile*                                 P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANxGenericForceFieldBrush::StopsProjectile(class AProjectile* P)
{
	static UFieldFunc* pFnStopsProjectile = NULL;
	if(!pFnStopsProjectile)
		pFnStopsProjectile = UObject::FindFunction("Function Engine.NxGenericForceFieldBrush.StopsProjectile");

	Engine_StopsProjectile_Parms StopsProjectile_Parms;
	StopsProjectile_Parms.P = P;
	ProcessEvent(pFnStopsProjectile,NULL,&StopsProjectile_Parms,NULL);
	return StopsProjectile_Parms.ReturnValue;
}

struct Engine_PostBeginPlay_Parms
{
};

void ANxGenericForceFieldBrush::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.NxGenericForceFieldBrush.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ANxForceField::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.NxForceField.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ANxForceField::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.NxForceField.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ARB_CylindricalForceActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.RB_CylindricalForceActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ARB_CylindricalForceActor::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.RB_CylindricalForceActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ARB_RadialForceActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.RB_RadialForceActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ARB_RadialForceActor::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.RB_RadialForceActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_FillBySphere_Parms
{
	float                                              Radius;                                           		// 0x000000 (0x0004)              
};

void UForceFieldShape::FillBySphere(float Radius)
{
	static UFieldFunc* pFnFillBySphere = NULL;
	if(!pFnFillBySphere)
		pFnFillBySphere = UObject::FindFunction("Function Engine.ForceFieldShape.FillBySphere");

	Engine_FillBySphere_Parms FillBySphere_Parms;
	FillBySphere_Parms.Radius = Radius;
	ProcessEvent(pFnFillBySphere,NULL,&FillBySphere_Parms,NULL);
}

struct Engine_FillByBox_Parms
{
	FVector3                                           Dimension;                                        		// 0x000000 (0x000C)              
};

void UForceFieldShape::FillByBox(FVector3 Dimension)
{
	static UFieldFunc* pFnFillByBox = NULL;
	if(!pFnFillByBox)
		pFnFillByBox = UObject::FindFunction("Function Engine.ForceFieldShape.FillByBox");

	Engine_FillByBox_Parms FillByBox_Parms;
	memcpy(&FillByBox_Parms.Dimension,&Dimension,0xC);
	ProcessEvent(pFnFillByBox,NULL,&FillByBox_Parms,NULL);
}

struct Engine_GetDrawComponent_Parms
{
	class UPrimitiveComponent*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPrimitiveComponent* UForceFieldShape::GetDrawComponent()
{
	static UFieldFunc* pFnGetDrawComponent = NULL;
	if(!pFnGetDrawComponent)
		pFnGetDrawComponent = UObject::FindFunction("Function Engine.ForceFieldShape.GetDrawComponent");

	Engine_GetDrawComponent_Parms GetDrawComponent_Parms;
	ProcessEvent(pFnGetDrawComponent,NULL,&GetDrawComponent_Parms,NULL);
	return GetDrawComponent_Parms.ReturnValue;
}

struct Engine_FillByCapsule_Parms
{
	float                                              Height;                                           		// 0x000000 (0x0004)              
	float                                              Radius;                                           		// 0x000004 (0x0004)              
};

void UForceFieldShape::FillByCapsule(float Height,float Radius)
{
	static UFieldFunc* pFnFillByCapsule = NULL;
	if(!pFnFillByCapsule)
		pFnFillByCapsule = UObject::FindFunction("Function Engine.ForceFieldShape.FillByCapsule");

	Engine_FillByCapsule_Parms FillByCapsule_Parms;
	FillByCapsule_Parms.Height = Height;
	FillByCapsule_Parms.Radius = Radius;
	ProcessEvent(pFnFillByCapsule,NULL,&FillByCapsule_Parms,NULL);
}

struct Engine_FillByCylinder_Parms
{
	float                                              BottomRadius;                                     		// 0x000000 (0x0004)              
	float                                              TopRadius;                                        		// 0x000004 (0x0004)              
	float                                              Height;                                           		// 0x000008 (0x0004)              
	float                                              HeightOffset;                                     		// 0x00000C (0x0004)              
};

void UForceFieldShape::FillByCylinder(float BottomRadius,float TopRadius,float Height,float HeightOffset)
{
	static UFieldFunc* pFnFillByCylinder = NULL;
	if(!pFnFillByCylinder)
		pFnFillByCylinder = UObject::FindFunction("Function Engine.ForceFieldShape.FillByCylinder");

	Engine_FillByCylinder_Parms FillByCylinder_Parms;
	FillByCylinder_Parms.BottomRadius = BottomRadius;
	FillByCylinder_Parms.TopRadius = TopRadius;
	FillByCylinder_Parms.Height = Height;
	FillByCylinder_Parms.HeightOffset = HeightOffset;
	ProcessEvent(pFnFillByCylinder,NULL,&FillByCylinder_Parms,NULL);
}

struct Engine_GetRadii_Parms
{
	FVector3                                           ReturnValue;                                      		// 0x000000 (0x000C)              
};

FVector3 UForceFieldShapeBox::GetRadii()
{
	static UFieldFunc* pFnGetRadii = NULL;
	if(!pFnGetRadii)
		pFnGetRadii = UObject::FindFunction("Function Engine.ForceFieldShapeBox.GetRadii");

	Engine_GetRadii_Parms GetRadii_Parms;
	ProcessEvent(pFnGetRadii,NULL,&GetRadii_Parms,NULL);
	return GetRadii_Parms.ReturnValue;
}

struct Engine_FillByCylinder_Parms
{
	float                                              BottomRadius;                                     		// 0x000000 (0x0004)              
	float                                              TopRadius;                                        		// 0x000004 (0x0004)              
	float                                              Height;                                           		// 0x000008 (0x0004)              
	float                                              HeightOffset;                                     		// 0x00000C (0x0004)              
};

void UForceFieldShapeBox::FillByCylinder(float BottomRadius,float TopRadius,float Height,float HeightOffset)
{
	static UFieldFunc* pFnFillByCylinder = NULL;
	if(!pFnFillByCylinder)
		pFnFillByCylinder = UObject::FindFunction("Function Engine.ForceFieldShapeBox.FillByCylinder");

	Engine_FillByCylinder_Parms FillByCylinder_Parms;
	FillByCylinder_Parms.BottomRadius = BottomRadius;
	FillByCylinder_Parms.TopRadius = TopRadius;
	FillByCylinder_Parms.Height = Height;
	FillByCylinder_Parms.HeightOffset = HeightOffset;
	ProcessEvent(pFnFillByCylinder,NULL,&FillByCylinder_Parms,NULL);
}

struct Engine_FillByCapsule_Parms
{
	float                                              Height;                                           		// 0x000000 (0x0004)              
	float                                              Radius;                                           		// 0x000004 (0x0004)              
};

void UForceFieldShapeBox::FillByCapsule(float Height,float Radius)
{
	static UFieldFunc* pFnFillByCapsule = NULL;
	if(!pFnFillByCapsule)
		pFnFillByCapsule = UObject::FindFunction("Function Engine.ForceFieldShapeBox.FillByCapsule");

	Engine_FillByCapsule_Parms FillByCapsule_Parms;
	FillByCapsule_Parms.Height = Height;
	FillByCapsule_Parms.Radius = Radius;
	ProcessEvent(pFnFillByCapsule,NULL,&FillByCapsule_Parms,NULL);
}

struct Engine_FillByBox_Parms
{
	FVector3                                           Extent;                                           		// 0x000000 (0x000C)              
};

void UForceFieldShapeBox::FillByBox(FVector3 Extent)
{
	static UFieldFunc* pFnFillByBox = NULL;
	if(!pFnFillByBox)
		pFnFillByBox = UObject::FindFunction("Function Engine.ForceFieldShapeBox.FillByBox");

	Engine_FillByBox_Parms FillByBox_Parms;
	memcpy(&FillByBox_Parms.Extent,&Extent,0xC);
	ProcessEvent(pFnFillByBox,NULL,&FillByBox_Parms,NULL);
}

struct Engine_GetDrawComponent_Parms
{
	class UPrimitiveComponent*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPrimitiveComponent* UForceFieldShapeBox::GetDrawComponent()
{
	static UFieldFunc* pFnGetDrawComponent = NULL;
	if(!pFnGetDrawComponent)
		pFnGetDrawComponent = UObject::FindFunction("Function Engine.ForceFieldShapeBox.GetDrawComponent");

	Engine_GetDrawComponent_Parms GetDrawComponent_Parms;
	ProcessEvent(pFnGetDrawComponent,NULL,&GetDrawComponent_Parms,NULL);
	return GetDrawComponent_Parms.ReturnValue;
}

struct Engine_FillBySphere_Parms
{
	float                                              Radius;                                           		// 0x000000 (0x0004)              
};

void UForceFieldShapeBox::FillBySphere(float Radius)
{
	static UFieldFunc* pFnFillBySphere = NULL;
	if(!pFnFillBySphere)
		pFnFillBySphere = UObject::FindFunction("Function Engine.ForceFieldShapeBox.FillBySphere");

	Engine_FillBySphere_Parms FillBySphere_Parms;
	FillBySphere_Parms.Radius = Radius;
	ProcessEvent(pFnFillBySphere,NULL,&FillBySphere_Parms,NULL);
}

struct Engine_GetDrawComponent_Parms
{
	class UPrimitiveComponent*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPrimitiveComponent* UForceFieldShapeCapsule::GetDrawComponent()
{
	static UFieldFunc* pFnGetDrawComponent = NULL;
	if(!pFnGetDrawComponent)
		pFnGetDrawComponent = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.GetDrawComponent");

	Engine_GetDrawComponent_Parms GetDrawComponent_Parms;
	ProcessEvent(pFnGetDrawComponent,NULL,&GetDrawComponent_Parms,NULL);
	return GetDrawComponent_Parms.ReturnValue;
}

struct Engine_FillByCylinder_Parms
{
	float                                              BottomRadius;                                     		// 0x000000 (0x0004)              
	float                                              TopRadius;                                        		// 0x000004 (0x0004)              
	float                                              Height;                                           		// 0x000008 (0x0004)              
	float                                              HeightOffset;                                     		// 0x00000C (0x0004)              
};

void UForceFieldShapeCapsule::FillByCylinder(float BottomRadius,float TopRadius,float Height,float HeightOffset)
{
	static UFieldFunc* pFnFillByCylinder = NULL;
	if(!pFnFillByCylinder)
		pFnFillByCylinder = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.FillByCylinder");

	Engine_FillByCylinder_Parms FillByCylinder_Parms;
	FillByCylinder_Parms.BottomRadius = BottomRadius;
	FillByCylinder_Parms.TopRadius = TopRadius;
	FillByCylinder_Parms.Height = Height;
	FillByCylinder_Parms.HeightOffset = HeightOffset;
	ProcessEvent(pFnFillByCylinder,NULL,&FillByCylinder_Parms,NULL);
}

struct Engine_GetRadius_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UForceFieldShapeCapsule::GetRadius()
{
	static UFieldFunc* pFnGetRadius = NULL;
	if(!pFnGetRadius)
		pFnGetRadius = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.GetRadius");

	Engine_GetRadius_Parms GetRadius_Parms;
	ProcessEvent(pFnGetRadius,NULL,&GetRadius_Parms,NULL);
	return GetRadius_Parms.ReturnValue;
}

struct Engine_GetHeight_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UForceFieldShapeCapsule::GetHeight()
{
	static UFieldFunc* pFnGetHeight = NULL;
	if(!pFnGetHeight)
		pFnGetHeight = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.GetHeight");

	Engine_GetHeight_Parms GetHeight_Parms;
	ProcessEvent(pFnGetHeight,NULL,&GetHeight_Parms,NULL);
	return GetHeight_Parms.ReturnValue;
}

struct Engine_FillByBox_Parms
{
	FVector3                                           Extent;                                           		// 0x000000 (0x000C)              
};

void UForceFieldShapeCapsule::FillByBox(FVector3 Extent)
{
	static UFieldFunc* pFnFillByBox = NULL;
	if(!pFnFillByBox)
		pFnFillByBox = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.FillByBox");

	Engine_FillByBox_Parms FillByBox_Parms;
	memcpy(&FillByBox_Parms.Extent,&Extent,0xC);
	ProcessEvent(pFnFillByBox,NULL,&FillByBox_Parms,NULL);
}

struct Engine_FillByCapsule_Parms
{
	float                                              Height;                                           		// 0x000000 (0x0004)              
	float                                              Radius;                                           		// 0x000004 (0x0004)              
};

void UForceFieldShapeCapsule::FillByCapsule(float Height,float Radius)
{
	static UFieldFunc* pFnFillByCapsule = NULL;
	if(!pFnFillByCapsule)
		pFnFillByCapsule = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.FillByCapsule");

	Engine_FillByCapsule_Parms FillByCapsule_Parms;
	FillByCapsule_Parms.Height = Height;
	FillByCapsule_Parms.Radius = Radius;
	ProcessEvent(pFnFillByCapsule,NULL,&FillByCapsule_Parms,NULL);
}

struct Engine_FillBySphere_Parms
{
	float                                              Radius;                                           		// 0x000000 (0x0004)              
};

void UForceFieldShapeCapsule::FillBySphere(float Radius)
{
	static UFieldFunc* pFnFillBySphere = NULL;
	if(!pFnFillBySphere)
		pFnFillBySphere = UObject::FindFunction("Function Engine.ForceFieldShapeCapsule.FillBySphere");

	Engine_FillBySphere_Parms FillBySphere_Parms;
	FillBySphere_Parms.Radius = Radius;
	ProcessEvent(pFnFillBySphere,NULL,&FillBySphere_Parms,NULL);
}

struct Engine_FillByCylinder_Parms
{
	float                                              BottomRadius;                                     		// 0x000000 (0x0004)              
	float                                              TopRadius;                                        		// 0x000004 (0x0004)              
	float                                              Height;                                           		// 0x000008 (0x0004)              
	float                                              HeightOffset;                                     		// 0x00000C (0x0004)              
	//float                                              topDistance;                                      		// 0x000010 (0x0004)              
	//float                                              bottomDistance;                                   		// 0x000014 (0x0004)              
	//float                                              centerBelowTop;                                   		// 0x000018 (0x0004)              
	//float                                              centerAboveBottom;                                		// 0x00001C (0x0004)              
};

void UForceFieldShapeSphere::FillByCylinder(float BottomRadius,float TopRadius,float Height,float HeightOffset)
{
	static UFieldFunc* pFnFillByCylinder = NULL;
	if(!pFnFillByCylinder)
		pFnFillByCylinder = UObject::FindFunction("Function Engine.ForceFieldShapeSphere.FillByCylinder");

	Engine_FillByCylinder_Parms FillByCylinder_Parms;
	FillByCylinder_Parms.BottomRadius = BottomRadius;
	FillByCylinder_Parms.TopRadius = TopRadius;
	FillByCylinder_Parms.Height = Height;
	FillByCylinder_Parms.HeightOffset = HeightOffset;
	ProcessEvent(pFnFillByCylinder,NULL,&FillByCylinder_Parms,NULL);
}

struct Engine_FillByCapsule_Parms
{
	float                                              Height;                                           		// 0x000000 (0x0004)              
	float                                              Radius;                                           		// 0x000004 (0x0004)              
};

void UForceFieldShapeSphere::FillByCapsule(float Height,float Radius)
{
	static UFieldFunc* pFnFillByCapsule = NULL;
	if(!pFnFillByCapsule)
		pFnFillByCapsule = UObject::FindFunction("Function Engine.ForceFieldShapeSphere.FillByCapsule");

	Engine_FillByCapsule_Parms FillByCapsule_Parms;
	FillByCapsule_Parms.Height = Height;
	FillByCapsule_Parms.Radius = Radius;
	ProcessEvent(pFnFillByCapsule,NULL,&FillByCapsule_Parms,NULL);
}

struct Engine_GetRadius_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UForceFieldShapeSphere::GetRadius()
{
	static UFieldFunc* pFnGetRadius = NULL;
	if(!pFnGetRadius)
		pFnGetRadius = UObject::FindFunction("Function Engine.ForceFieldShapeSphere.GetRadius");

	Engine_GetRadius_Parms GetRadius_Parms;
	ProcessEvent(pFnGetRadius,NULL,&GetRadius_Parms,NULL);
	return GetRadius_Parms.ReturnValue;
}

struct Engine_GetDrawComponent_Parms
{
	class UPrimitiveComponent*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UPrimitiveComponent* UForceFieldShapeSphere::GetDrawComponent()
{
	static UFieldFunc* pFnGetDrawComponent = NULL;
	if(!pFnGetDrawComponent)
		pFnGetDrawComponent = UObject::FindFunction("Function Engine.ForceFieldShapeSphere.GetDrawComponent");

	Engine_GetDrawComponent_Parms GetDrawComponent_Parms;
	ProcessEvent(pFnGetDrawComponent,NULL,&GetDrawComponent_Parms,NULL);
	return GetDrawComponent_Parms.ReturnValue;
}

struct Engine_FillByBox_Parms
{
	FVector3                                           Extent;                                           		// 0x000000 (0x000C)              
};

void UForceFieldShapeSphere::FillByBox(FVector3 Extent)
{
	static UFieldFunc* pFnFillByBox = NULL;
	if(!pFnFillByBox)
		pFnFillByBox = UObject::FindFunction("Function Engine.ForceFieldShapeSphere.FillByBox");

	Engine_FillByBox_Parms FillByBox_Parms;
	memcpy(&FillByBox_Parms.Extent,&Extent,0xC);
	ProcessEvent(pFnFillByBox,NULL,&FillByBox_Parms,NULL);
}

struct Engine_FillBySphere_Parms
{
	float                                              Radius;                                           		// 0x000000 (0x0004)              
};

void UForceFieldShapeSphere::FillBySphere(float Radius)
{
	static UFieldFunc* pFnFillBySphere = NULL;
	if(!pFnFillBySphere)
		pFnFillBySphere = UObject::FindFunction("Function Engine.ForceFieldShapeSphere.FillBySphere");

	Engine_FillBySphere_Parms FillBySphere_Parms;
	FillBySphere_Parms.Radius = Radius;
	ProcessEvent(pFnFillBySphere,NULL,&FillBySphere_Parms,NULL);
}

struct Engine_SetParameters_Parms
{
	struct FStProxiesManagerParams                     newParams;                                        		// 0x000000 (0x0018)              
};

void AcActorProxiesManager::SetParameters(struct FStProxiesManagerParams newParams)
{
	static UFieldFunc* pFnSetParameters = NULL;
	if(!pFnSetParameters)
		pFnSetParameters = UObject::FindFunction("Function Engine.cActorProxiesManager.SetParameters");

	Engine_SetParameters_Parms SetParameters_Parms;
	memcpy(&SetParameters_Parms.newParams,&newParams,0x18);
	pFnSetParameters->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetParameters,NULL,&SetParameters_Parms,NULL);
	pFnSetParameters->FunctionFlags |= 0x400;
}

struct Engine_CreateProxy_Parms
{
	class AActor*                                      pActor;                                           		// 0x000000 (0x0004)              
};

void AcActorProxiesManager::CreateProxy(class AActor* pActor)
{
	static UFieldFunc* pFnCreateProxy = NULL;
	if(!pFnCreateProxy)
		pFnCreateProxy = UObject::FindFunction("Function Engine.cActorProxiesManager.CreateProxy");

	Engine_CreateProxy_Parms CreateProxy_Parms;
	CreateProxy_Parms.pActor = pActor;
	pFnCreateProxy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateProxy,NULL,&CreateProxy_Parms,NULL);
	pFnCreateProxy->FunctionFlags |= 0x400;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AcActorProxiesManager::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.cActorProxiesManager.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_InstancePrefab_Parms
{
	class UPrefab*                                     InPrefab;                                         		// 0x000000 (0x0004)              
	TArray<struct FstReplacement>                      aReplacements;                                    		// 0x000004 (0x000C)              
};

void APrefabInstance::InstancePrefab(class UPrefab* InPrefab,TArray<struct FstReplacement> aReplacements)
{
	static UFieldFunc* pFnInstancePrefab = NULL;
	if(!pFnInstancePrefab)
		pFnInstancePrefab = UObject::FindFunction("Function Engine.PrefabInstance.InstancePrefab");

	Engine_InstancePrefab_Parms InstancePrefab_Parms;
	InstancePrefab_Parms.InPrefab = InPrefab;
	memcpy(&InstancePrefab_Parms.aReplacements,&aReplacements,0xC);
	pFnInstancePrefab->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInstancePrefab,NULL,&InstancePrefab_Parms,NULL);
	pFnInstancePrefab->FunctionFlags |= 0x400;
}

struct Engine_OnSpawnedParticleSystemFinished_Parms
{
	class UParticleSystemComponent*                    FinishedComponent;                                		// 0x000000 (0x0004)              
};

void UcVisualFXBase::OnSpawnedParticleSystemFinished(class UParticleSystemComponent* FinishedComponent)
{
	static UFieldFunc* pFnOnSpawnedParticleSystemFinished = NULL;
	if(!pFnOnSpawnedParticleSystemFinished)
		pFnOnSpawnedParticleSystemFinished = UObject::FindFunction("Function Engine.cVisualFXBase.OnSpawnedParticleSystemFinished");

	Engine_OnSpawnedParticleSystemFinished_Parms OnSpawnedParticleSystemFinished_Parms;
	OnSpawnedParticleSystemFinished_Parms.FinishedComponent = FinishedComponent;
	pFnOnSpawnedParticleSystemFinished->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnSpawnedParticleSystemFinished,NULL,&OnSpawnedParticleSystemFinished_Parms,NULL);
	pFnOnSpawnedParticleSystemFinished->FunctionFlags |= 0x400;
}

struct Engine_OnParticleSystemFinished_Parms
{
	class UParticleSystemComponent*                    FinishedComponent;                                		// 0x000000 (0x0004)              
};

void UcVisualFXBase::OnParticleSystemFinished(class UParticleSystemComponent* FinishedComponent)
{
	static UFieldFunc* pFnOnParticleSystemFinished = NULL;
	if(!pFnOnParticleSystemFinished)
		pFnOnParticleSystemFinished = UObject::FindFunction("Function Engine.cVisualFXBase.OnParticleSystemFinished");

	Engine_OnParticleSystemFinished_Parms OnParticleSystemFinished_Parms;
	OnParticleSystemFinished_Parms.FinishedComponent = FinishedComponent;
	pFnOnParticleSystemFinished->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnParticleSystemFinished,NULL,&OnParticleSystemFinished_Parms,NULL);
	pFnOnParticleSystemFinished->FunctionFlags |= 0x400;
}

struct Engine_InitSocket_Parms
{
	class AActor*                                      newLinkedActor;                                   		// 0x000000 (0x0004)              
	class USkeletalMeshComponent*                      newSkelComp;                                      		// 0x000004 (0x0004)              
	struct FName                                       newLinkedBone;                                    		// 0x000008 (0x0008)              
};

void UcSocketAttachment::InitSocket(class AActor* newLinkedActor,class USkeletalMeshComponent* newSkelComp,struct FName newLinkedBone)
{
	static UFieldFunc* pFnInitSocket = NULL;
	if(!pFnInitSocket)
		pFnInitSocket = UObject::FindFunction("Function Engine.cSocketAttachment.InitSocket");

	Engine_InitSocket_Parms InitSocket_Parms;
	InitSocket_Parms.newLinkedActor = newLinkedActor;
	InitSocket_Parms.newSkelComp = newSkelComp;
	memcpy(&InitSocket_Parms.newLinkedBone,&newLinkedBone,0x8);
	pFnInitSocket->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitSocket,NULL,&InitSocket_Parms,NULL);
	pFnInitSocket->FunctionFlags |= 0x400;
}

struct Engine_IsPastingIntoUISequenceAllowed_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USequenceObject::IsPastingIntoUISequenceAllowed()
{
	static UFieldFunc* pFnIsPastingIntoUISequenceAllowed = NULL;
	if(!pFnIsPastingIntoUISequenceAllowed)
		pFnIsPastingIntoUISequenceAllowed = UObject::FindFunction("Function Engine.SequenceObject.IsPastingIntoUISequenceAllowed");

	Engine_IsPastingIntoUISequenceAllowed_Parms IsPastingIntoUISequenceAllowed_Parms;
	ProcessEvent(pFnIsPastingIntoUISequenceAllowed,NULL,&IsPastingIntoUISequenceAllowed_Parms,NULL);
	return IsPastingIntoUISequenceAllowed_Parms.ReturnValue;
}

struct Engine_ScriptLog_Parms
{
	struct FString                                     LogText;                                          		// 0x000000 (0x000C)              
	unsigned long                                      bWarning : 1;                                     		// 0x00000C (0x0004) [0x00000001] 
};

void USequenceObject::ScriptLog(struct FString LogText,bool bWarning)
{
	static UFieldFunc* pFnScriptLog = NULL;
	if(!pFnScriptLog)
		pFnScriptLog = UObject::FindFunction("Function Engine.SequenceObject.ScriptLog");

	Engine_ScriptLog_Parms ScriptLog_Parms;
	memcpy(&ScriptLog_Parms.LogText,&LogText,0xC);
	ScriptLog_Parms.bWarning = bWarning;
	pFnScriptLog->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScriptLog,NULL,&ScriptLog_Parms,NULL);
	pFnScriptLog->FunctionFlags |= 0x400;
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USequenceObject::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.SequenceObject.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_IsPastingIntoLevelSequenceAllowed_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USequenceObject::IsPastingIntoLevelSequenceAllowed()
{
	static UFieldFunc* pFnIsPastingIntoLevelSequenceAllowed = NULL;
	if(!pFnIsPastingIntoLevelSequenceAllowed)
		pFnIsPastingIntoLevelSequenceAllowed = UObject::FindFunction("Function Engine.SequenceObject.IsPastingIntoLevelSequenceAllowed");

	Engine_IsPastingIntoLevelSequenceAllowed_Parms IsPastingIntoLevelSequenceAllowed_Parms;
	ProcessEvent(pFnIsPastingIntoLevelSequenceAllowed,NULL,&IsPastingIntoLevelSequenceAllowed_Parms,NULL);
	return IsPastingIntoLevelSequenceAllowed_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USequenceObject::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SequenceObject.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceObject::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SequenceObject.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetWorldInfo_Parms
{
	class AWorldInfo*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AWorldInfo* USequenceObject::GetWorldInfo()
{
	static UFieldFunc* pFnGetWorldInfo = NULL;
	if(!pFnGetWorldInfo)
		pFnGetWorldInfo = UObject::FindFunction("Function Engine.SequenceObject.GetWorldInfo");

	Engine_GetWorldInfo_Parms GetWorldInfo_Parms;
	pFnGetWorldInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetWorldInfo,NULL,&GetWorldInfo_Parms,NULL);
	pFnGetWorldInfo->FunctionFlags |= 0x400;
	return GetWorldInfo_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceFrame::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SequenceFrame.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_HasLinkedOps_Parms
{
	unsigned long                                      bConsiderInputLinks : 1;                          		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceOp::HasLinkedOps(bool bConsiderInputLinks)
{
	static UFieldFunc* pFnHasLinkedOps = NULL;
	if(!pFnHasLinkedOps)
		pFnHasLinkedOps = UObject::FindFunction("Function Engine.SequenceOp.HasLinkedOps");

	Engine_HasLinkedOps_Parms HasLinkedOps_Parms;
	HasLinkedOps_Parms.bConsiderInputLinks = bConsiderInputLinks;
	pFnHasLinkedOps->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasLinkedOps,NULL,&HasLinkedOps_Parms,NULL);
	pFnHasLinkedOps->FunctionFlags |= 0x400;
	return HasLinkedOps_Parms.ReturnValue;
}

struct Engine_Deactivated_Parms
{
};

void USequenceOp::Deactivated()
{
	static UFieldFunc* pFnDeactivated = NULL;
	if(!pFnDeactivated)
		pFnDeactivated = UObject::FindFunction("Function Engine.SequenceOp.Deactivated");

	Engine_Deactivated_Parms Deactivated_Parms;
	ProcessEvent(pFnDeactivated,NULL,&Deactivated_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void USequenceOp::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.SequenceOp.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_GetInterpDataVars_Parms
{
	TArray<class UInterpData*>                         outIData;                                         		// 0x000000 (0x000C)              
	struct FString                                     inDesc;                                           		// 0x00000C (0x000C)              
};

void USequenceOp::GetInterpDataVars(TArray<class UInterpData*>* outIData,struct FString inDesc)
{
	static UFieldFunc* pFnGetInterpDataVars = NULL;
	if(!pFnGetInterpDataVars)
		pFnGetInterpDataVars = UObject::FindFunction("Function Engine.SequenceOp.GetInterpDataVars");

	Engine_GetInterpDataVars_Parms GetInterpDataVars_Parms;
	memcpy(&GetInterpDataVars_Parms.inDesc,&inDesc,0xC);
	pFnGetInterpDataVars->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetInterpDataVars,NULL,&GetInterpDataVars_Parms,NULL);
	pFnGetInterpDataVars->FunctionFlags |= 0x400;
	if(outIData)
		memcpy(outIData,&GetInterpDataVars_Parms.outIData,0xC);
}

struct Engine_Reset_Parms
{
};

void USequenceOp::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.SequenceOp.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_GetController_Parms
{
	class AActor*                                      TheActor;                                         		// 0x000000 (0x0004)              
	class AController*                                 ReturnValue;                                      		// 0x000004 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
	//class AController*                                 C;                                                		// 0x00000C (0x0004)              
};

class AController* USequenceOp::GetController(class AActor* TheActor)
{
	static UFieldFunc* pFnGetController = NULL;
	if(!pFnGetController)
		pFnGetController = UObject::FindFunction("Function Engine.SequenceOp.GetController");

	Engine_GetController_Parms GetController_Parms;
	GetController_Parms.TheActor = TheActor;
	ProcessEvent(pFnGetController,NULL,&GetController_Parms,NULL);
	return GetController_Parms.ReturnValue;
}

struct Engine_VersionUpdated_Parms
{
	int                                                OldVersion;                                       		// 0x000000 (0x0004)              
	int                                                NewVersion;                                       		// 0x000004 (0x0004)              
};

void USequenceOp::VersionUpdated(int OldVersion,int NewVersion)
{
	static UFieldFunc* pFnVersionUpdated = NULL;
	if(!pFnVersionUpdated)
		pFnVersionUpdated = UObject::FindFunction("Function Engine.SequenceOp.VersionUpdated");

	Engine_VersionUpdated_Parms VersionUpdated_Parms;
	VersionUpdated_Parms.OldVersion = OldVersion;
	VersionUpdated_Parms.NewVersion = NewVersion;
	ProcessEvent(pFnVersionUpdated,NULL,&VersionUpdated_Parms,NULL);
}

struct Engine_PopulateLinkedVariableValues_Parms
{
};

void USequenceOp::PopulateLinkedVariableValues()
{
	static UFieldFunc* pFnPopulateLinkedVariableValues = NULL;
	if(!pFnPopulateLinkedVariableValues)
		pFnPopulateLinkedVariableValues = UObject::FindFunction("Function Engine.SequenceOp.PopulateLinkedVariableValues");

	Engine_PopulateLinkedVariableValues_Parms PopulateLinkedVariableValues_Parms;
	pFnPopulateLinkedVariableValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPopulateLinkedVariableValues,NULL,&PopulateLinkedVariableValues_Parms,NULL);
	pFnPopulateLinkedVariableValues->FunctionFlags |= 0x400;
}

struct Engine_PublishLinkedVariableValues_Parms
{
};

void USequenceOp::PublishLinkedVariableValues()
{
	static UFieldFunc* pFnPublishLinkedVariableValues = NULL;
	if(!pFnPublishLinkedVariableValues)
		pFnPublishLinkedVariableValues = UObject::FindFunction("Function Engine.SequenceOp.PublishLinkedVariableValues");

	Engine_PublishLinkedVariableValues_Parms PublishLinkedVariableValues_Parms;
	pFnPublishLinkedVariableValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPublishLinkedVariableValues,NULL,&PublishLinkedVariableValues_Parms,NULL);
	pFnPublishLinkedVariableValues->FunctionFlags |= 0x400;
}

struct Engine_GetLinkedObjects_Parms
{
	TArray<class USequenceObject*>                     out_Objects;                                      		// 0x000000 (0x000C)              
	class UClass*                                      ObjectType;                                       		// 0x00000C (0x0004)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000010 (0x0004) [0x00000001] 
};

void USequenceOp::GetLinkedObjects(TArray<class USequenceObject*>* out_Objects,class UClass* ObjectType,bool bRecurse)
{
	static UFieldFunc* pFnGetLinkedObjects = NULL;
	if(!pFnGetLinkedObjects)
		pFnGetLinkedObjects = UObject::FindFunction("Function Engine.SequenceOp.GetLinkedObjects");

	Engine_GetLinkedObjects_Parms GetLinkedObjects_Parms;
	GetLinkedObjects_Parms.ObjectType = ObjectType;
	GetLinkedObjects_Parms.bRecurse = bRecurse;
	pFnGetLinkedObjects->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLinkedObjects,NULL,&GetLinkedObjects_Parms,NULL);
	pFnGetLinkedObjects->FunctionFlags |= 0x400;
	if(out_Objects)
		memcpy(out_Objects,&GetLinkedObjects_Parms.out_Objects,0xC);
}

struct Engine_GetObjectVars_Parms
{
	TArray<class UObject*>                             objVars;                                          		// 0x000000 (0x000C)              
	struct FString                                     inDesc;                                           		// 0x00000C (0x000C)              
};

void USequenceOp::GetObjectVars(TArray<class UObject*>* objVars,struct FString inDesc)
{
	static UFieldFunc* pFnGetObjectVars = NULL;
	if(!pFnGetObjectVars)
		pFnGetObjectVars = UObject::FindFunction("Function Engine.SequenceOp.GetObjectVars");

	Engine_GetObjectVars_Parms GetObjectVars_Parms;
	memcpy(&GetObjectVars_Parms.inDesc,&inDesc,0xC);
	pFnGetObjectVars->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetObjectVars,NULL,&GetObjectVars_Parms,NULL);
	pFnGetObjectVars->FunctionFlags |= 0x400;
	if(objVars)
		memcpy(objVars,&GetObjectVars_Parms.objVars,0xC);
}

struct Engine_GetPawn_Parms
{
	class AActor*                                      TheActor;                                         		// 0x000000 (0x0004)              
	class APawn*                                       ReturnValue;                                      		// 0x000004 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000008 (0x0004)              
	//class AController*                                 C;                                                		// 0x00000C (0x0004)              
};

class APawn* USequenceOp::GetPawn(class AActor* TheActor)
{
	static UFieldFunc* pFnGetPawn = NULL;
	if(!pFnGetPawn)
		pFnGetPawn = UObject::FindFunction("Function Engine.SequenceOp.GetPawn");

	Engine_GetPawn_Parms GetPawn_Parms;
	GetPawn_Parms.TheActor = TheActor;
	ProcessEvent(pFnGetPawn,NULL,&GetPawn_Parms,NULL);
	return GetPawn_Parms.ReturnValue;
}

struct Engine_GetBoolVars_Parms
{
	TArray<unsigned char>                              boolVars;                                         		// 0x000000 (0x000C)              
	struct FString                                     inDesc;                                           		// 0x00000C (0x000C)              
};

void USequenceOp::GetBoolVars(TArray<unsigned char>* boolVars,struct FString inDesc)
{
	static UFieldFunc* pFnGetBoolVars = NULL;
	if(!pFnGetBoolVars)
		pFnGetBoolVars = UObject::FindFunction("Function Engine.SequenceOp.GetBoolVars");

	Engine_GetBoolVars_Parms GetBoolVars_Parms;
	memcpy(&GetBoolVars_Parms.inDesc,&inDesc,0xC);
	pFnGetBoolVars->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoolVars,NULL,&GetBoolVars_Parms,NULL);
	pFnGetBoolVars->FunctionFlags |= 0x400;
	if(boolVars)
		memcpy(boolVars,&GetBoolVars_Parms.boolVars,0xC);
}

struct Engine_ActivateOutputLink_Parms
{
	int                                                OutputIdx;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceOp::ActivateOutputLink(int OutputIdx)
{
	static UFieldFunc* pFnActivateOutputLink = NULL;
	if(!pFnActivateOutputLink)
		pFnActivateOutputLink = UObject::FindFunction("Function Engine.SequenceOp.ActivateOutputLink");

	Engine_ActivateOutputLink_Parms ActivateOutputLink_Parms;
	ActivateOutputLink_Parms.OutputIdx = OutputIdx;
	pFnActivateOutputLink->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActivateOutputLink,NULL,&ActivateOutputLink_Parms,NULL);
	pFnActivateOutputLink->FunctionFlags |= 0x400;
	return ActivateOutputLink_Parms.ReturnValue;
}

struct Engine_LinkedVariables_Parms
{
	class UClass*                                      VarClass;                                         		// 0x000000 (0x0004)              
	class USequenceVariable*                           OutVariable;                                      		// 0x000004 (0x0004)              
	struct FString                                     inDesc;                                           		// 0x000008 (0x000C)              
};

void USequenceOp::LinkedVariables(class UClass* VarClass,class USequenceVariable** OutVariable,struct FString inDesc)
{
	static UFieldFunc* pFnLinkedVariables = NULL;
	if(!pFnLinkedVariables)
		pFnLinkedVariables = UObject::FindFunction("Function Engine.SequenceOp.LinkedVariables");

	Engine_LinkedVariables_Parms LinkedVariables_Parms;
	LinkedVariables_Parms.VarClass = VarClass;
	memcpy(&LinkedVariables_Parms.inDesc,&inDesc,0xC);
	pFnLinkedVariables->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLinkedVariables,NULL,&LinkedVariables_Parms,NULL);
	pFnLinkedVariables->FunctionFlags |= 0x400;
	if(OutVariable)
		*OutVariable = LinkedVariables_Parms.OutVariable;
}

struct Engine_FindSeqObjectsByClass_Parms
{
	class UClass*                                      DesiredClass;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bRecursive : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
	TArray<class USequenceObject*>                     OutputObjects;                                    		// 0x000008 (0x000C)              
};

void USequence::FindSeqObjectsByClass(class UClass* DesiredClass,bool bRecursive,TArray<class USequenceObject*>* OutputObjects)
{
	static UFieldFunc* pFnFindSeqObjectsByClass = NULL;
	if(!pFnFindSeqObjectsByClass)
		pFnFindSeqObjectsByClass = UObject::FindFunction("Function Engine.Sequence.FindSeqObjectsByClass");

	Engine_FindSeqObjectsByClass_Parms FindSeqObjectsByClass_Parms;
	FindSeqObjectsByClass_Parms.DesiredClass = DesiredClass;
	FindSeqObjectsByClass_Parms.bRecursive = bRecursive;
	pFnFindSeqObjectsByClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindSeqObjectsByClass,NULL,&FindSeqObjectsByClass_Parms,NULL);
	pFnFindSeqObjectsByClass->FunctionFlags |= 0x400;
	if(OutputObjects)
		memcpy(OutputObjects,&FindSeqObjectsByClass_Parms.OutputObjects,0xC);
}

struct Engine_SetEnabled_Parms
{
	unsigned long                                      bInEnabled : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void USequence::SetEnabled(bool bInEnabled)
{
	static UFieldFunc* pFnSetEnabled = NULL;
	if(!pFnSetEnabled)
		pFnSetEnabled = UObject::FindFunction("Function Engine.Sequence.SetEnabled");

	Engine_SetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bInEnabled = bInEnabled;
	pFnSetEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnabled,NULL,&SetEnabled_Parms,NULL);
	pFnSetEnabled->FunctionFlags |= 0x400;
}

struct Engine_Reset_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//class USequenceOp*                                 Op;                                               		// 0x000004 (0x0004)              
};

void USequence::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.Sequence.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_GetOwnerPrefab_Parms
{
	class APrefabInstance*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class APrefabInstance* UPrefabSequence::GetOwnerPrefab()
{
	static UFieldFunc* pFnGetOwnerPrefab = NULL;
	if(!pFnGetOwnerPrefab)
		pFnGetOwnerPrefab = UObject::FindFunction("Function Engine.PrefabSequence.GetOwnerPrefab");

	Engine_GetOwnerPrefab_Parms GetOwnerPrefab_Parms;
	pFnGetOwnerPrefab->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwnerPrefab,NULL,&GetOwnerPrefab_Parms,NULL);
	pFnGetOwnerPrefab->FunctionFlags |= 0x400;
	return GetOwnerPrefab_Parms.ReturnValue;
}

struct Engine_SetOwnerPrefab_Parms
{
	class APrefabInstance*                             InOwner;                                          		// 0x000000 (0x0004)              
};

void UPrefabSequence::SetOwnerPrefab(class APrefabInstance* InOwner)
{
	static UFieldFunc* pFnSetOwnerPrefab = NULL;
	if(!pFnSetOwnerPrefab)
		pFnSetOwnerPrefab = UObject::FindFunction("Function Engine.PrefabSequence.SetOwnerPrefab");

	Engine_SetOwnerPrefab_Parms SetOwnerPrefab_Parms;
	SetOwnerPrefab_Parms.InOwner = InOwner;
	pFnSetOwnerPrefab->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOwnerPrefab,NULL,&SetOwnerPrefab_Parms,NULL);
	pFnSetOwnerPrefab->FunctionFlags |= 0x400;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_ActivateRemoteEvent::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_ActivateRemoteEvent.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_CameraLookAt::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_CameraLookAt.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_CauseDamage::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_CauseDamage.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_CauseDamageRadial::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_CauseDamageRadial.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_ChangeCollision::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_ChangeCollision.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Gate::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Gate.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_IsInObjectList::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_IsInObjectList.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_AbortFor_Parms
{
	class AActor*                                      latentActor;                                      		// 0x000000 (0x0004)              
};

void USeqAct_Latent::AbortFor(class AActor* latentActor)
{
	static UFieldFunc* pFnAbortFor = NULL;
	if(!pFnAbortFor)
		pFnAbortFor = UObject::FindFunction("Function Engine.SeqAct_Latent.AbortFor");

	Engine_AbortFor_Parms AbortFor_Parms;
	AbortFor_Parms.latentActor = latentActor;
	pFnAbortFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAbortFor,NULL,&AbortFor_Parms,NULL);
	pFnAbortFor->FunctionFlags |= 0x400;
}

struct Engine_Update_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Latent::Update(float DeltaTime)
{
	static UFieldFunc* pFnUpdate = NULL;
	if(!pFnUpdate)
		pFnUpdate = UObject::FindFunction("Function Engine.SeqAct_Latent.Update");

	Engine_Update_Parms Update_Parms;
	Update_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnUpdate,NULL,&Update_Parms,NULL);
	return Update_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_ActorFactory::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_ActorFactory.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_AIMoveToActor::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_AIMoveToActor.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_CrossFadeTrack_Parms
{
	struct FMusicTrackStruct                           TrackToPlay;                                      		// 0x000000 (0x0024)              
};

void USeqAct_CrossFadeMusicTracks::CrossFadeTrack(struct FMusicTrackStruct* TrackToPlay)
{
	static UFieldFunc* pFnCrossFadeTrack = NULL;
	if(!pFnCrossFadeTrack)
		pFnCrossFadeTrack = UObject::FindFunction("Function Engine.SeqAct_CrossFadeMusicTracks.CrossFadeTrack");

	Engine_CrossFadeTrack_Parms CrossFadeTrack_Parms;
	pFnCrossFadeTrack->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCrossFadeTrack,NULL,&CrossFadeTrack_Parms,NULL);
	pFnCrossFadeTrack->FunctionFlags |= 0x400;
	if(TrackToPlay)
		memcpy(TrackToPlay,&CrossFadeTrack_Parms.TrackToPlay,0x24);
}

struct Engine_StopAllMusicManagerSounds_Parms
{
};

void USeqAct_CrossFadeMusicTracks::StopAllMusicManagerSounds()
{
	static UFieldFunc* pFnStopAllMusicManagerSounds = NULL;
	if(!pFnStopAllMusicManagerSounds)
		pFnStopAllMusicManagerSounds = UObject::FindFunction("Function Engine.SeqAct_CrossFadeMusicTracks.StopAllMusicManagerSounds");

	Engine_StopAllMusicManagerSounds_Parms StopAllMusicManagerSounds_Parms;
	pFnStopAllMusicManagerSounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStopAllMusicManagerSounds,NULL,&StopAllMusicManagerSounds_Parms,NULL);
	pFnStopAllMusicManagerSounds->FunctionFlags |= 0x400;
}

struct Engine_ClientSideCrossFadeTrackImmediately_Parms
{
	struct FMusicTrackStruct                           TrackToPlay;                                      		// 0x000000 (0x0024)              
};

void USeqAct_CrossFadeMusicTracks::ClientSideCrossFadeTrackImmediately(struct FMusicTrackStruct* TrackToPlay)
{
	static UFieldFunc* pFnClientSideCrossFadeTrackImmediately = NULL;
	if(!pFnClientSideCrossFadeTrackImmediately)
		pFnClientSideCrossFadeTrackImmediately = UObject::FindFunction("Function Engine.SeqAct_CrossFadeMusicTracks.ClientSideCrossFadeTrackImmediately");

	Engine_ClientSideCrossFadeTrackImmediately_Parms ClientSideCrossFadeTrackImmediately_Parms;
	pFnClientSideCrossFadeTrackImmediately->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClientSideCrossFadeTrackImmediately,NULL,&ClientSideCrossFadeTrackImmediately_Parms,NULL);
	pFnClientSideCrossFadeTrackImmediately->FunctionFlags |= 0x400;
	if(TrackToPlay)
		memcpy(TrackToPlay,&ClientSideCrossFadeTrackImmediately_Parms.TrackToPlay,0x24);
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_CrossFadeMusicTracks::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_CrossFadeMusicTracks.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_SpawnAgent_Parms
{
	class AActor*                                      SpawnLoc;                                         		// 0x000000 (0x0004)              
	class ACrowdAgent*                                 ReturnValue;                                      		// 0x000004 (0x0004)              
	//FRotator                                           Rot;                                              		// 0x000008 (0x000C)              
	//FVector3                                           SpawnPos;                                         		// 0x000014 (0x000C)              
	//class ACrowdAgent*                                 Agent;                                            		// 0x000020 (0x0004)              
};

class ACrowdAgent* USeqAct_CrowdSpawner::SpawnAgent(class AActor* SpawnLoc)
{
	static UFieldFunc* pFnSpawnAgent = NULL;
	if(!pFnSpawnAgent)
		pFnSpawnAgent = UObject::FindFunction("Function Engine.SeqAct_CrowdSpawner.SpawnAgent");

	Engine_SpawnAgent_Parms SpawnAgent_Parms;
	SpawnAgent_Parms.SpawnLoc = SpawnLoc;
	ProcessEvent(pFnSpawnAgent,NULL,&SpawnAgent_Parms,NULL);
	return SpawnAgent_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Delay::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Delay.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_AddPlayerToDirectorTracks_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void USeqAct_Interp::AddPlayerToDirectorTracks(class APlayerController* PC)
{
	static UFieldFunc* pFnAddPlayerToDirectorTracks = NULL;
	if(!pFnAddPlayerToDirectorTracks)
		pFnAddPlayerToDirectorTracks = UObject::FindFunction("Function Engine.SeqAct_Interp.AddPlayerToDirectorTracks");

	Engine_AddPlayerToDirectorTracks_Parms AddPlayerToDirectorTracks_Parms;
	AddPlayerToDirectorTracks_Parms.PC = PC;
	pFnAddPlayerToDirectorTracks->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddPlayerToDirectorTracks,NULL,&AddPlayerToDirectorTracks_Parms,NULL);
	pFnAddPlayerToDirectorTracks->FunctionFlags |= 0x400;
}

struct Engine_Stop_Parms
{
};

void USeqAct_Interp::Stop()
{
	static UFieldFunc* pFnStop = NULL;
	if(!pFnStop)
		pFnStop = UObject::FindFunction("Function Engine.SeqAct_Interp.Stop");

	Engine_Stop_Parms Stop_Parms;
	pFnStop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStop,NULL,&Stop_Parms,NULL);
	pFnStop->FunctionFlags |= 0x400;
}

struct Engine_Reset_Parms
{
};

void USeqAct_Interp::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.SeqAct_Interp.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_SetPosition_Parms
{
	double                                             NewPosition;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bJump : 1;                                        		// 0x000008 (0x0004) [0x00000001] 
};

void USeqAct_Interp::SetPosition(double NewPosition,bool bJump)
{
	static UFieldFunc* pFnSetPosition = NULL;
	if(!pFnSetPosition)
		pFnSetPosition = UObject::FindFunction("Function Engine.SeqAct_Interp.SetPosition");

	Engine_SetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.NewPosition = NewPosition;
	SetPosition_Parms.bJump = bJump;
	pFnSetPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPosition,NULL,&SetPosition_Parms,NULL);
	pFnSetPosition->FunctionFlags |= 0x400;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Interp::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Interp.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_PlayCameraAnim::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_PlayCameraAnim.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_PlaySound::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_PlaySound.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_Log::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_Log.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Log::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Log.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_ParticleEventGenerator::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_ParticleEventGenerator.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_SetCameraTarget::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_SetCameraTarget.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_SetSequenceVariable::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_SetSequenceVariable.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_SetFloat::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_SetFloat.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_SetInt::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_SetInt.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_SetObject::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_SetObject.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_SetString::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_SetString.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Switch::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Switch.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Timer::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Timer.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_Toggle::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_Toggle.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceCondition::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SequenceCondition.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_CheckLogins_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//int                                                LoggedInCount;                                    		// 0x000004 (0x0004)              
	//int                                                Count;                                            		// 0x000008 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00000C (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000010 (0x0008)              
};

bool USeqCond_IsLoggedIn::CheckLogins()
{
	static UFieldFunc* pFnCheckLogins = NULL;
	if(!pFnCheckLogins)
		pFnCheckLogins = UObject::FindFunction("Function Engine.SeqCond_IsLoggedIn.CheckLogins");

	Engine_CheckLogins_Parms CheckLogins_Parms;
	ProcessEvent(pFnCheckLogins,NULL,&CheckLogins_Parms,NULL);
	return CheckLogins_Parms.ReturnValue;
}

struct Engine_IsFallThruEnabled_Parms
{
	int                                                ValueIndex;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqCond_SwitchBase::IsFallThruEnabled(int ValueIndex)
{
	static UFieldFunc* pFnIsFallThruEnabled = NULL;
	if(!pFnIsFallThruEnabled)
		pFnIsFallThruEnabled = UObject::FindFunction("Function Engine.SeqCond_SwitchBase.IsFallThruEnabled");

	Engine_IsFallThruEnabled_Parms IsFallThruEnabled_Parms;
	IsFallThruEnabled_Parms.ValueIndex = ValueIndex;
	ProcessEvent(pFnIsFallThruEnabled,NULL,&IsFallThruEnabled_Parms,NULL);
	return IsFallThruEnabled_Parms.ReturnValue;
}

struct Engine_RemoveValueEntry_Parms
{
	int                                                RemoveIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchBase::RemoveValueEntry(int RemoveIndex)
{
	static UFieldFunc* pFnRemoveValueEntry = NULL;
	if(!pFnRemoveValueEntry)
		pFnRemoveValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchBase.RemoveValueEntry");

	Engine_RemoveValueEntry_Parms RemoveValueEntry_Parms;
	RemoveValueEntry_Parms.RemoveIndex = RemoveIndex;
	ProcessEvent(pFnRemoveValueEntry,NULL,&RemoveValueEntry_Parms,NULL);
}

struct Engine_VerifyDefaultCaseValue_Parms
{
};

void USeqCond_SwitchBase::VerifyDefaultCaseValue()
{
	static UFieldFunc* pFnVerifyDefaultCaseValue = NULL;
	if(!pFnVerifyDefaultCaseValue)
		pFnVerifyDefaultCaseValue = UObject::FindFunction("Function Engine.SeqCond_SwitchBase.VerifyDefaultCaseValue");

	Engine_VerifyDefaultCaseValue_Parms VerifyDefaultCaseValue_Parms;
	ProcessEvent(pFnVerifyDefaultCaseValue,NULL,&VerifyDefaultCaseValue_Parms,NULL);
}

struct Engine_InsertValueEntry_Parms
{
	int                                                InsertIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchBase::InsertValueEntry(int InsertIndex)
{
	static UFieldFunc* pFnInsertValueEntry = NULL;
	if(!pFnInsertValueEntry)
		pFnInsertValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchBase.InsertValueEntry");

	Engine_InsertValueEntry_Parms InsertValueEntry_Parms;
	InsertValueEntry_Parms.InsertIndex = InsertIndex;
	ProcessEvent(pFnInsertValueEntry,NULL,&InsertValueEntry_Parms,NULL);
}

struct Engine_RemoveValueEntry_Parms
{
	int                                                RemoveIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchClass::RemoveValueEntry(int RemoveIndex)
{
	static UFieldFunc* pFnRemoveValueEntry = NULL;
	if(!pFnRemoveValueEntry)
		pFnRemoveValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchClass.RemoveValueEntry");

	Engine_RemoveValueEntry_Parms RemoveValueEntry_Parms;
	RemoveValueEntry_Parms.RemoveIndex = RemoveIndex;
	ProcessEvent(pFnRemoveValueEntry,NULL,&RemoveValueEntry_Parms,NULL);
}

struct Engine_IsFallThruEnabled_Parms
{
	int                                                ValueIndex;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqCond_SwitchClass::IsFallThruEnabled(int ValueIndex)
{
	static UFieldFunc* pFnIsFallThruEnabled = NULL;
	if(!pFnIsFallThruEnabled)
		pFnIsFallThruEnabled = UObject::FindFunction("Function Engine.SeqCond_SwitchClass.IsFallThruEnabled");

	Engine_IsFallThruEnabled_Parms IsFallThruEnabled_Parms;
	IsFallThruEnabled_Parms.ValueIndex = ValueIndex;
	ProcessEvent(pFnIsFallThruEnabled,NULL,&IsFallThruEnabled_Parms,NULL);
	return IsFallThruEnabled_Parms.ReturnValue;
}

struct Engine_VerifyDefaultCaseValue_Parms
{
};

void USeqCond_SwitchClass::VerifyDefaultCaseValue()
{
	static UFieldFunc* pFnVerifyDefaultCaseValue = NULL;
	if(!pFnVerifyDefaultCaseValue)
		pFnVerifyDefaultCaseValue = UObject::FindFunction("Function Engine.SeqCond_SwitchClass.VerifyDefaultCaseValue");

	Engine_VerifyDefaultCaseValue_Parms VerifyDefaultCaseValue_Parms;
	ProcessEvent(pFnVerifyDefaultCaseValue,NULL,&VerifyDefaultCaseValue_Parms,NULL);
}

struct Engine_InsertValueEntry_Parms
{
	int                                                InsertIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchClass::InsertValueEntry(int InsertIndex)
{
	static UFieldFunc* pFnInsertValueEntry = NULL;
	if(!pFnInsertValueEntry)
		pFnInsertValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchClass.InsertValueEntry");

	Engine_InsertValueEntry_Parms InsertValueEntry_Parms;
	InsertValueEntry_Parms.InsertIndex = InsertIndex;
	ProcessEvent(pFnInsertValueEntry,NULL,&InsertValueEntry_Parms,NULL);
}

struct Engine_InsertValueEntry_Parms
{
	int                                                InsertIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchName::InsertValueEntry(int InsertIndex)
{
	static UFieldFunc* pFnInsertValueEntry = NULL;
	if(!pFnInsertValueEntry)
		pFnInsertValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchName.InsertValueEntry");

	Engine_InsertValueEntry_Parms InsertValueEntry_Parms;
	InsertValueEntry_Parms.InsertIndex = InsertIndex;
	ProcessEvent(pFnInsertValueEntry,NULL,&InsertValueEntry_Parms,NULL);
}

struct Engine_VerifyDefaultCaseValue_Parms
{
};

void USeqCond_SwitchName::VerifyDefaultCaseValue()
{
	static UFieldFunc* pFnVerifyDefaultCaseValue = NULL;
	if(!pFnVerifyDefaultCaseValue)
		pFnVerifyDefaultCaseValue = UObject::FindFunction("Function Engine.SeqCond_SwitchName.VerifyDefaultCaseValue");

	Engine_VerifyDefaultCaseValue_Parms VerifyDefaultCaseValue_Parms;
	ProcessEvent(pFnVerifyDefaultCaseValue,NULL,&VerifyDefaultCaseValue_Parms,NULL);
}

struct Engine_RemoveValueEntry_Parms
{
	int                                                RemoveIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchName::RemoveValueEntry(int RemoveIndex)
{
	static UFieldFunc* pFnRemoveValueEntry = NULL;
	if(!pFnRemoveValueEntry)
		pFnRemoveValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchName.RemoveValueEntry");

	Engine_RemoveValueEntry_Parms RemoveValueEntry_Parms;
	RemoveValueEntry_Parms.RemoveIndex = RemoveIndex;
	ProcessEvent(pFnRemoveValueEntry,NULL,&RemoveValueEntry_Parms,NULL);
}

struct Engine_IsFallThruEnabled_Parms
{
	int                                                ValueIndex;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqCond_SwitchName::IsFallThruEnabled(int ValueIndex)
{
	static UFieldFunc* pFnIsFallThruEnabled = NULL;
	if(!pFnIsFallThruEnabled)
		pFnIsFallThruEnabled = UObject::FindFunction("Function Engine.SeqCond_SwitchName.IsFallThruEnabled");

	Engine_IsFallThruEnabled_Parms IsFallThruEnabled_Parms;
	IsFallThruEnabled_Parms.ValueIndex = ValueIndex;
	ProcessEvent(pFnIsFallThruEnabled,NULL,&IsFallThruEnabled_Parms,NULL);
	return IsFallThruEnabled_Parms.ReturnValue;
}

struct Engine_InsertValueEntry_Parms
{
	int                                                InsertIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchObject::InsertValueEntry(int InsertIndex)
{
	static UFieldFunc* pFnInsertValueEntry = NULL;
	if(!pFnInsertValueEntry)
		pFnInsertValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchObject.InsertValueEntry");

	Engine_InsertValueEntry_Parms InsertValueEntry_Parms;
	InsertValueEntry_Parms.InsertIndex = InsertIndex;
	ProcessEvent(pFnInsertValueEntry,NULL,&InsertValueEntry_Parms,NULL);
}

struct Engine_VerifyDefaultCaseValue_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void USeqCond_SwitchObject::VerifyDefaultCaseValue()
{
	static UFieldFunc* pFnVerifyDefaultCaseValue = NULL;
	if(!pFnVerifyDefaultCaseValue)
		pFnVerifyDefaultCaseValue = UObject::FindFunction("Function Engine.SeqCond_SwitchObject.VerifyDefaultCaseValue");

	Engine_VerifyDefaultCaseValue_Parms VerifyDefaultCaseValue_Parms;
	ProcessEvent(pFnVerifyDefaultCaseValue,NULL,&VerifyDefaultCaseValue_Parms,NULL);
}

struct Engine_IsFallThruEnabled_Parms
{
	int                                                ValueIndex;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqCond_SwitchObject::IsFallThruEnabled(int ValueIndex)
{
	static UFieldFunc* pFnIsFallThruEnabled = NULL;
	if(!pFnIsFallThruEnabled)
		pFnIsFallThruEnabled = UObject::FindFunction("Function Engine.SeqCond_SwitchObject.IsFallThruEnabled");

	Engine_IsFallThruEnabled_Parms IsFallThruEnabled_Parms;
	IsFallThruEnabled_Parms.ValueIndex = ValueIndex;
	ProcessEvent(pFnIsFallThruEnabled,NULL,&IsFallThruEnabled_Parms,NULL);
	return IsFallThruEnabled_Parms.ReturnValue;
}

struct Engine_RemoveValueEntry_Parms
{
	int                                                RemoveIndex;                                      		// 0x000000 (0x0004)              
};

void USeqCond_SwitchObject::RemoveValueEntry(int RemoveIndex)
{
	static UFieldFunc* pFnRemoveValueEntry = NULL;
	if(!pFnRemoveValueEntry)
		pFnRemoveValueEntry = UObject::FindFunction("Function Engine.SeqCond_SwitchObject.RemoveValueEntry");

	Engine_RemoveValueEntry_Parms RemoveValueEntry_Parms;
	RemoveValueEntry_Parms.RemoveIndex = RemoveIndex;
	ProcessEvent(pFnRemoveValueEntry,NULL,&RemoveValueEntry_Parms,NULL);
}

struct Engine_Toggled_Parms
{
};

void USequenceEvent::Toggled()
{
	static UFieldFunc* pFnToggled = NULL;
	if(!pFnToggled)
		pFnToggled = UObject::FindFunction("Function Engine.SequenceEvent.Toggled");

	Engine_Toggled_Parms Toggled_Parms;
	ProcessEvent(pFnToggled,NULL,&Toggled_Parms,NULL);
}

struct Engine_Reset_Parms
{
};

void USequenceEvent::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.SequenceEvent.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_RegisterEvent_Parms
{
};

void USequenceEvent::RegisterEvent()
{
	static UFieldFunc* pFnRegisterEvent = NULL;
	if(!pFnRegisterEvent)
		pFnRegisterEvent = UObject::FindFunction("Function Engine.SequenceEvent.RegisterEvent");

	Engine_RegisterEvent_Parms RegisterEvent_Parms;
	ProcessEvent(pFnRegisterEvent,NULL,&RegisterEvent_Parms,NULL);
}

struct Engine_CheckActivate_Parms
{
	class AActor*                                      InOriginator;                                     		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	unsigned long                                      bTest : 1;                                        		// 0x000008 (0x0004) [0x00000001] 
	TArray<int>                                        ActivateIndices;                                  		// 0x00000C (0x000C)              
	unsigned long                                      bPushTop : 1;                                     		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool USequenceEvent::CheckActivate(class AActor* InOriginator,class AActor* InInstigator,bool bTest,TArray<int>* ActivateIndices,bool bPushTop)
{
	static UFieldFunc* pFnCheckActivate = NULL;
	if(!pFnCheckActivate)
		pFnCheckActivate = UObject::FindFunction("Function Engine.SequenceEvent.CheckActivate");

	Engine_CheckActivate_Parms CheckActivate_Parms;
	CheckActivate_Parms.InOriginator = InOriginator;
	CheckActivate_Parms.InInstigator = InInstigator;
	CheckActivate_Parms.bTest = bTest;
	CheckActivate_Parms.bPushTop = bPushTop;
	pFnCheckActivate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCheckActivate,NULL,&CheckActivate_Parms,NULL);
	pFnCheckActivate->FunctionFlags |= 0x400;
	if(ActivateIndices)
		memcpy(ActivateIndices,&CheckActivate_Parms.ActivateIndices,0xC);
	return CheckActivate_Parms.ReturnValue;
}

struct Engine_NotifyAttached_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//TArray<int>                                        ActivateIndices;                                  		// 0x000004 (0x000C)              
};

void USeqEvent_Mover::NotifyAttached(class AActor* Other)
{
	static UFieldFunc* pFnNotifyAttached = NULL;
	if(!pFnNotifyAttached)
		pFnNotifyAttached = UObject::FindFunction("Function Engine.SeqEvent_Mover.NotifyAttached");

	Engine_NotifyAttached_Parms NotifyAttached_Parms;
	NotifyAttached_Parms.Other = Other;
	ProcessEvent(pFnNotifyAttached,NULL,&NotifyAttached_Parms,NULL);
}

struct Engine_RegisterEvent_Parms
{
	//class AInterpActor*                                Mover;                                            		// 0x000000 (0x0004)              
};

void USeqEvent_Mover::RegisterEvent()
{
	static UFieldFunc* pFnRegisterEvent = NULL;
	if(!pFnRegisterEvent)
		pFnRegisterEvent = UObject::FindFunction("Function Engine.SeqEvent_Mover.RegisterEvent");

	Engine_RegisterEvent_Parms RegisterEvent_Parms;
	ProcessEvent(pFnRegisterEvent,NULL,&RegisterEvent_Parms,NULL);
}

struct Engine_NotifyEncroachingOn_Parms
{
	class AActor*                                      Hit;                                              		// 0x000000 (0x0004)              
	//class USeqVar_Object*                              ObjVar;                                           		// 0x000004 (0x0004)              
	//TArray<int>                                        ActivateIndices;                                  		// 0x000008 (0x000C)              
};

void USeqEvent_Mover::NotifyEncroachingOn(class AActor* Hit)
{
	static UFieldFunc* pFnNotifyEncroachingOn = NULL;
	if(!pFnNotifyEncroachingOn)
		pFnNotifyEncroachingOn = UObject::FindFunction("Function Engine.SeqEvent_Mover.NotifyEncroachingOn");

	Engine_NotifyEncroachingOn_Parms NotifyEncroachingOn_Parms;
	NotifyEncroachingOn_Parms.Hit = Hit;
	ProcessEvent(pFnNotifyEncroachingOn,NULL,&NotifyEncroachingOn_Parms,NULL);
}

struct Engine_NotifyFinishedOpen_Parms
{
	//TArray<int>                                        ActivateIndices;                                  		// 0x000000 (0x000C)              
};

void USeqEvent_Mover::NotifyFinishedOpen()
{
	static UFieldFunc* pFnNotifyFinishedOpen = NULL;
	if(!pFnNotifyFinishedOpen)
		pFnNotifyFinishedOpen = UObject::FindFunction("Function Engine.SeqEvent_Mover.NotifyFinishedOpen");

	Engine_NotifyFinishedOpen_Parms NotifyFinishedOpen_Parms;
	ProcessEvent(pFnNotifyFinishedOpen,NULL,&NotifyFinishedOpen_Parms,NULL);
}

struct Engine_NotifyDetached_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	//TArray<int>                                        ActivateIndices;                                  		// 0x000008 (0x000C)              
};

void USeqEvent_Mover::NotifyDetached(class AActor* Other)
{
	static UFieldFunc* pFnNotifyDetached = NULL;
	if(!pFnNotifyDetached)
		pFnNotifyDetached = UObject::FindFunction("Function Engine.SeqEvent_Mover.NotifyDetached");

	Engine_NotifyDetached_Parms NotifyDetached_Parms;
	NotifyDetached_Parms.Other = Other;
	ProcessEvent(pFnNotifyDetached,NULL,&NotifyDetached_Parms,NULL);
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqEvent_ParticleEvent::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqEvent_ParticleEvent.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_NotifyTouchingPawnDied_Parms
{
	class APawn*                                       P;                                                		// 0x000000 (0x0004)              
};

void USeqEvent_Touch::NotifyTouchingPawnDied(class APawn* P)
{
	static UFieldFunc* pFnNotifyTouchingPawnDied = NULL;
	if(!pFnNotifyTouchingPawnDied)
		pFnNotifyTouchingPawnDied = UObject::FindFunction("Function Engine.SeqEvent_Touch.NotifyTouchingPawnDied");

	Engine_NotifyTouchingPawnDied_Parms NotifyTouchingPawnDied_Parms;
	NotifyTouchingPawnDied_Parms.P = P;
	ProcessEvent(pFnNotifyTouchingPawnDied,NULL,&NotifyTouchingPawnDied_Parms,NULL);
}

struct Engine_Toggled_Parms
{
	//int                                                Idx;                                              		// 0x000000 (0x0004)              
};

void USeqEvent_Touch::Toggled()
{
	static UFieldFunc* pFnToggled = NULL;
	if(!pFnToggled)
		pFnToggled = UObject::FindFunction("Function Engine.SeqEvent_Touch.Toggled");

	Engine_Toggled_Parms Toggled_Parms;
	ProcessEvent(pFnToggled,NULL,&Toggled_Parms,NULL);
}

struct Engine_CheckTouchActivate_Parms
{
	class AActor*                                      InOriginator;                                     		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	unsigned long                                      bTest : 1;                                        		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USeqEvent_Touch::CheckTouchActivate(class AActor* InOriginator,class AActor* InInstigator,bool bTest)
{
	static UFieldFunc* pFnCheckTouchActivate = NULL;
	if(!pFnCheckTouchActivate)
		pFnCheckTouchActivate = UObject::FindFunction("Function Engine.SeqEvent_Touch.CheckTouchActivate");

	Engine_CheckTouchActivate_Parms CheckTouchActivate_Parms;
	CheckTouchActivate_Parms.InOriginator = InOriginator;
	CheckTouchActivate_Parms.InInstigator = InInstigator;
	CheckTouchActivate_Parms.bTest = bTest;
	pFnCheckTouchActivate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCheckTouchActivate,NULL,&CheckTouchActivate_Parms,NULL);
	pFnCheckTouchActivate->FunctionFlags |= 0x400;
	return CheckTouchActivate_Parms.ReturnValue;
}

struct Engine_CheckUnTouchActivate_Parms
{
	class AActor*                                      InOriginator;                                     		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	unsigned long                                      bTest : 1;                                        		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USeqEvent_Touch::CheckUnTouchActivate(class AActor* InOriginator,class AActor* InInstigator,bool bTest)
{
	static UFieldFunc* pFnCheckUnTouchActivate = NULL;
	if(!pFnCheckUnTouchActivate)
		pFnCheckUnTouchActivate = UObject::FindFunction("Function Engine.SeqEvent_Touch.CheckUnTouchActivate");

	Engine_CheckUnTouchActivate_Parms CheckUnTouchActivate_Parms;
	CheckUnTouchActivate_Parms.InOriginator = InOriginator;
	CheckUnTouchActivate_Parms.InInstigator = InInstigator;
	CheckUnTouchActivate_Parms.bTest = bTest;
	pFnCheckUnTouchActivate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCheckUnTouchActivate,NULL,&CheckUnTouchActivate_Parms,NULL);
	pFnCheckUnTouchActivate->FunctionFlags |= 0x400;
	return CheckUnTouchActivate_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceVariable::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SequenceVariable.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjectValue_Parms
{
	class UObject*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UObject* USeqVar_Object::GetObjectValue()
{
	static UFieldFunc* pFnGetObjectValue = NULL;
	if(!pFnGetObjectValue)
		pFnGetObjectValue = UObject::FindFunction("Function Engine.SeqVar_Object.GetObjectValue");

	Engine_GetObjectValue_Parms GetObjectValue_Parms;
	ProcessEvent(pFnGetObjectValue,NULL,&GetObjectValue_Parms,NULL);
	return GetObjectValue_Parms.ReturnValue;
}

struct Engine_SetObjectValue_Parms
{
	class UObject*                                     NewValue;                                         		// 0x000000 (0x0004)              
};

void USeqVar_Object::SetObjectValue(class UObject* NewValue)
{
	static UFieldFunc* pFnSetObjectValue = NULL;
	if(!pFnSetObjectValue)
		pFnSetObjectValue = UObject::FindFunction("Function Engine.SeqVar_Object.SetObjectValue");

	Engine_SetObjectValue_Parms SetObjectValue_Parms;
	SetObjectValue_Parms.NewValue = NewValue;
	ProcessEvent(pFnSetObjectValue,NULL,&SetObjectValue_Parms,NULL);
}

struct Engine_SetObjectValue_Parms
{
	class UObject*                                     NewValue;                                         		// 0x000000 (0x0004)              
};

void USeqVar_ObjectList::SetObjectValue(class UObject* NewValue)
{
	static UFieldFunc* pFnSetObjectValue = NULL;
	if(!pFnSetObjectValue)
		pFnSetObjectValue = UObject::FindFunction("Function Engine.SeqVar_ObjectList.SetObjectValue");

	Engine_SetObjectValue_Parms SetObjectValue_Parms;
	SetObjectValue_Parms.NewValue = NewValue;
	ProcessEvent(pFnSetObjectValue,NULL,&SetObjectValue_Parms,NULL);
}

struct Engine_GetObjectValue_Parms
{
	class UObject*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UObject* USeqVar_ObjectList::GetObjectValue()
{
	static UFieldFunc* pFnGetObjectValue = NULL;
	if(!pFnGetObjectValue)
		pFnGetObjectValue = UObject::FindFunction("Function Engine.SeqVar_ObjectList.GetObjectValue");

	Engine_GetObjectValue_Parms GetObjectValue_Parms;
	ProcessEvent(pFnGetObjectValue,NULL,&GetObjectValue_Parms,NULL);
	return GetObjectValue_Parms.ReturnValue;
}

struct Engine_GetObjectValue_Parms
{
	class UObject*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000004 (0x0004)              
};

class UObject* USeqVar_Player::GetObjectValue()
{
	static UFieldFunc* pFnGetObjectValue = NULL;
	if(!pFnGetObjectValue)
		pFnGetObjectValue = UObject::FindFunction("Function Engine.SeqVar_Player.GetObjectValue");

	Engine_GetObjectValue_Parms GetObjectValue_Parms;
	ProcessEvent(pFnGetObjectValue,NULL,&GetObjectValue_Parms,NULL);
	return GetObjectValue_Parms.ReturnValue;
}

struct Engine_CalcLayerBounds_Parms
{
};

void ATerrain::CalcLayerBounds()
{
	static UFieldFunc* pFnCalcLayerBounds = NULL;
	if(!pFnCalcLayerBounds)
		pFnCalcLayerBounds = UObject::FindFunction("Function Engine.Terrain.CalcLayerBounds");

	Engine_CalcLayerBounds_Parms CalcLayerBounds_Parms;
	pFnCalcLayerBounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalcLayerBounds,NULL,&CalcLayerBounds_Parms,NULL);
	pFnCalcLayerBounds->FunctionFlags |= 0x400;
}

struct Engine_PostBeginPlay_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void ATerrain::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Terrain.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_SetMaterials_Parms
{
	TArray<struct FTerrainFilteredMaterial>            NewMaterials;                                     		// 0x000000 (0x000C)              
};

void UTerrainLayerSetup::SetMaterials(TArray<struct FTerrainFilteredMaterial> NewMaterials)
{
	static UFieldFunc* pFnSetMaterials = NULL;
	if(!pFnSetMaterials)
		pFnSetMaterials = UObject::FindFunction("Function Engine.TerrainLayerSetup.SetMaterials");

	Engine_SetMaterials_Parms SetMaterials_Parms;
	memcpy(&SetMaterials_Parms.NewMaterials,&NewMaterials,0xC);
	pFnSetMaterials->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMaterials,NULL,&SetMaterials_Parms,NULL);
	pFnSetMaterials->FunctionFlags |= 0x400;
}

struct Engine_PostBeginPlay_Parms
{
};

void UTerrainLayerSetup::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.TerrainLayerSetup.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_GetSceneClient_Parms
{
	class UGameUISceneClient*                          ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UGameUISceneClient* UUIRoot::GetSceneClient()
{
	static UFieldFunc* pFnGetSceneClient = NULL;
	if(!pFnGetSceneClient)
		pFnGetSceneClient = UObject::FindFunction("Function Engine.UIRoot.GetSceneClient");

	Engine_GetSceneClient_Parms GetSceneClient_Parms;
	pFnGetSceneClient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSceneClient,NULL,&GetSceneClient_Parms,NULL);
	pFnGetSceneClient->FunctionFlags |= 0x400;
	return GetSceneClient_Parms.ReturnValue;
}

struct Engine_GetInputPlatformType_Parms
{
	class ULocalPlayer*                                OwningPlayer;                                     		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UUIRoot::GetInputPlatformType(class ULocalPlayer* OwningPlayer)
{
	static UFieldFunc* pFnGetInputPlatformType = NULL;
	if(!pFnGetInputPlatformType)
		pFnGetInputPlatformType = UObject::FindFunction("Function Engine.UIRoot.GetInputPlatformType");

	Engine_GetInputPlatformType_Parms GetInputPlatformType_Parms;
	GetInputPlatformType_Parms.OwningPlayer = OwningPlayer;
	pFnGetInputPlatformType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetInputPlatformType,NULL,&GetInputPlatformType_Parms,NULL);
	pFnGetInputPlatformType->FunctionFlags |= 0x400;
	return GetInputPlatformType_Parms.ReturnValue;
}

struct Engine_GetCursorPosition_Parms
{
	int                                                CursorX;                                          		// 0x000000 (0x0004)              
	int                                                CursorY;                                          		// 0x000004 (0x0004)              
	class UUIScene*                                    Scene;                                            		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIRoot::GetCursorPosition(int* CursorX,int* CursorY,class UUIScene* Scene)
{
	static UFieldFunc* pFnGetCursorPosition = NULL;
	if(!pFnGetCursorPosition)
		pFnGetCursorPosition = UObject::FindFunction("Function Engine.UIRoot.GetCursorPosition");

	Engine_GetCursorPosition_Parms GetCursorPosition_Parms;
	GetCursorPosition_Parms.Scene = Scene;
	pFnGetCursorPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCursorPosition,NULL,&GetCursorPosition_Parms,NULL);
	pFnGetCursorPosition->FunctionFlags |= 0x400;
	if(CursorX)
		*CursorX = GetCursorPosition_Parms.CursorX;
	if(CursorY)
		*CursorY = GetCursorPosition_Parms.CursorY;
	return GetCursorPosition_Parms.ReturnValue;
}

struct Engine_GetDataStoreFieldValue_Parms
{
	struct FString                                     InDataStoreMarkup;                                		// 0x000000 (0x000C)              
	struct FUIProviderFieldValue                       OutFieldValue;                                    		// 0x00000C (0x0044)              
	class UUIScene*                                    OwnerScene;                                       		// 0x000050 (0x0004)              
	class ULocalPlayer*                                OwnerPlayer;                                      		// 0x000054 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000058 (0x0004) [0x00000001] 
};

bool UUIRoot::GetDataStoreFieldValue(struct FString InDataStoreMarkup,struct FUIProviderFieldValue* OutFieldValue,class UUIScene* OwnerScene,class ULocalPlayer* OwnerPlayer)
{
	static UFieldFunc* pFnGetDataStoreFieldValue = NULL;
	if(!pFnGetDataStoreFieldValue)
		pFnGetDataStoreFieldValue = UObject::FindFunction("Function Engine.UIRoot.GetDataStoreFieldValue");

	Engine_GetDataStoreFieldValue_Parms GetDataStoreFieldValue_Parms;
	memcpy(&GetDataStoreFieldValue_Parms.InDataStoreMarkup,&InDataStoreMarkup,0xC);
	GetDataStoreFieldValue_Parms.OwnerScene = OwnerScene;
	GetDataStoreFieldValue_Parms.OwnerPlayer = OwnerPlayer;
	pFnGetDataStoreFieldValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreFieldValue,NULL,&GetDataStoreFieldValue_Parms,NULL);
	pFnGetDataStoreFieldValue->FunctionFlags |= 0x400;
	if(OutFieldValue)
		memcpy(OutFieldValue,&GetDataStoreFieldValue_Parms.OutFieldValue,0x44);
	return GetDataStoreFieldValue_Parms.ReturnValue;
}

struct Engine_ConvertWidgetIDToString_Parms
{
	class UUIObject*                                   SourceWidget;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
	//struct FString                                     Result;                                           		// 0x000010 (0x000C)              
};

struct FString UUIRoot::ConvertWidgetIDToString(class UUIObject* SourceWidget)
{
	static UFieldFunc* pFnConvertWidgetIDToString = NULL;
	if(!pFnConvertWidgetIDToString)
		pFnConvertWidgetIDToString = UObject::FindFunction("Function Engine.UIRoot.ConvertWidgetIDToString");

	Engine_ConvertWidgetIDToString_Parms ConvertWidgetIDToString_Parms;
	ConvertWidgetIDToString_Parms.SourceWidget = SourceWidget;
	ProcessEvent(pFnConvertWidgetIDToString,NULL,&ConvertWidgetIDToString_Parms,NULL);
	return ConvertWidgetIDToString_Parms.ReturnValue;
}

struct Engine_IsConsole_Parms
{
	unsigned char                                      ConsoleType;                                      		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIRoot::IsConsole(unsigned char ConsoleType)
{
	static UFieldFunc* pFnIsConsole = NULL;
	if(!pFnIsConsole)
		pFnIsConsole = UObject::FindFunction("Function Engine.UIRoot.IsConsole");

	Engine_IsConsole_Parms IsConsole_Parms;
	IsConsole_Parms.ConsoleType = ConsoleType;
	ProcessEvent(pFnIsConsole,NULL,&IsConsole_Parms,NULL);
	return IsConsole_Parms.ReturnValue;
}

struct Engine_GetCurrentUIController_Parms
{
	class UUIInteraction*                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIInteraction* UUIRoot::GetCurrentUIController()
{
	static UFieldFunc* pFnGetCurrentUIController = NULL;
	if(!pFnGetCurrentUIController)
		pFnGetCurrentUIController = UObject::FindFunction("Function Engine.UIRoot.GetCurrentUIController");

	Engine_GetCurrentUIController_Parms GetCurrentUIController_Parms;
	pFnGetCurrentUIController->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentUIController,NULL,&GetCurrentUIController_Parms,NULL);
	pFnGetCurrentUIController->FunctionFlags |= 0x400;
	return GetCurrentUIController_Parms.ReturnValue;
}

struct Engine_SetMouseCaptureOverride_Parms
{
	unsigned long                                      bCaptureMouse : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void UUIRoot::SetMouseCaptureOverride(bool bCaptureMouse)
{
	static UFieldFunc* pFnSetMouseCaptureOverride = NULL;
	if(!pFnSetMouseCaptureOverride)
		pFnSetMouseCaptureOverride = UObject::FindFunction("Function Engine.UIRoot.SetMouseCaptureOverride");

	Engine_SetMouseCaptureOverride_Parms SetMouseCaptureOverride_Parms;
	SetMouseCaptureOverride_Parms.bCaptureMouse = bCaptureMouse;
	pFnSetMouseCaptureOverride->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMouseCaptureOverride,NULL,&SetMouseCaptureOverride_Parms,NULL);
	pFnSetMouseCaptureOverride->FunctionFlags |= 0x400;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIRoot::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIRoot.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_GetCursorSize_Parms
{
	float                                              CursorXL;                                         		// 0x000000 (0x0004)              
	float                                              CursorYL;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIRoot::GetCursorSize(float* CursorXL,float* CursorYL)
{
	static UFieldFunc* pFnGetCursorSize = NULL;
	if(!pFnGetCursorSize)
		pFnGetCursorSize = UObject::FindFunction("Function Engine.UIRoot.GetCursorSize");

	Engine_GetCursorSize_Parms GetCursorSize_Parms;
	pFnGetCursorSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCursorSize,NULL,&GetCursorSize_Parms,NULL);
	pFnGetCursorSize->FunctionFlags |= 0x400;
	if(CursorXL)
		*CursorXL = GetCursorSize_Parms.CursorXL;
	if(CursorYL)
		*CursorYL = GetCursorSize_Parms.CursorYL;
	return GetCursorSize_Parms.ReturnValue;
}

struct Engine_StaticResolveDataStore_Parms
{
	struct FName                                       DataStoreTag;                                     		// 0x000000 (0x0008)              
	class UUIScene*                                    OwnerScene;                                       		// 0x000008 (0x0004)              
	class ULocalPlayer*                                InPlayerOwner;                                    		// 0x00000C (0x0004)              
	class UUIDataStore*                                ReturnValue;                                      		// 0x000010 (0x0004)              
	//class UUIDataStore*                                Result;                                           		// 0x000014 (0x0004)              
	//class UDataStoreClient*                            DSClient;                                         		// 0x000018 (0x0004)              
};

class UUIDataStore* UUIRoot::StaticResolveDataStore(struct FName DataStoreTag,class UUIScene* OwnerScene,class ULocalPlayer* InPlayerOwner)
{
	static UFieldFunc* pFnStaticResolveDataStore = NULL;
	if(!pFnStaticResolveDataStore)
		pFnStaticResolveDataStore = UObject::FindFunction("Function Engine.UIRoot.StaticResolveDataStore");

	Engine_StaticResolveDataStore_Parms StaticResolveDataStore_Parms;
	memcpy(&StaticResolveDataStore_Parms.DataStoreTag,&DataStoreTag,0x8);
	StaticResolveDataStore_Parms.OwnerScene = OwnerScene;
	StaticResolveDataStore_Parms.InPlayerOwner = InPlayerOwner;
	ProcessEvent(pFnStaticResolveDataStore,NULL,&StaticResolveDataStore_Parms,NULL);
	return StaticResolveDataStore_Parms.ReturnValue;
}

struct Engine_GetDataStoreStringValue_Parms
{
	struct FString                                     InDataStoreMarkup;                                		// 0x000000 (0x000C)              
	struct FString                                     OutStringValue;                                   		// 0x00000C (0x000C)              
	class UUIScene*                                    OwnerScene;                                       		// 0x000018 (0x0004)              
	class ULocalPlayer*                                OwnerPlayer;                                      		// 0x00001C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	//struct FUIProviderFieldValue                       FieldValue;                                       		// 0x000024 (0x0044)              
	//unsigned long                                      Result : 1;                                       		// 0x000068 (0x0004) [0x00000001] 
};

bool UUIRoot::GetDataStoreStringValue(struct FString InDataStoreMarkup,struct FString* OutStringValue,class UUIScene* OwnerScene,class ULocalPlayer* OwnerPlayer)
{
	static UFieldFunc* pFnGetDataStoreStringValue = NULL;
	if(!pFnGetDataStoreStringValue)
		pFnGetDataStoreStringValue = UObject::FindFunction("Function Engine.UIRoot.GetDataStoreStringValue");

	Engine_GetDataStoreStringValue_Parms GetDataStoreStringValue_Parms;
	memcpy(&GetDataStoreStringValue_Parms.InDataStoreMarkup,&InDataStoreMarkup,0xC);
	GetDataStoreStringValue_Parms.OwnerScene = OwnerScene;
	GetDataStoreStringValue_Parms.OwnerPlayer = OwnerPlayer;
	ProcessEvent(pFnGetDataStoreStringValue,NULL,&GetDataStoreStringValue_Parms,NULL);
	if(OutStringValue)
		memcpy(OutStringValue,&GetDataStoreStringValue_Parms.OutStringValue,0xC);
	return GetDataStoreStringValue_Parms.ReturnValue;
}

struct Engine_SetDataStoreFieldValue_Parms
{
	struct FString                                     InDataStoreMarkup;                                		// 0x000000 (0x000C)              
	struct FUIProviderFieldValue                       InFieldValue;                                     		// 0x00000C (0x0044)              
	class UUIScene*                                    OwnerScene;                                       		// 0x000050 (0x0004)              
	class ULocalPlayer*                                OwnerPlayer;                                      		// 0x000054 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000058 (0x0004) [0x00000001] 
};

bool UUIRoot::SetDataStoreFieldValue(struct FString InDataStoreMarkup,struct FUIProviderFieldValue* InFieldValue,class UUIScene* OwnerScene,class ULocalPlayer* OwnerPlayer)
{
	static UFieldFunc* pFnSetDataStoreFieldValue = NULL;
	if(!pFnSetDataStoreFieldValue)
		pFnSetDataStoreFieldValue = UObject::FindFunction("Function Engine.UIRoot.SetDataStoreFieldValue");

	Engine_SetDataStoreFieldValue_Parms SetDataStoreFieldValue_Parms;
	memcpy(&SetDataStoreFieldValue_Parms.InDataStoreMarkup,&InDataStoreMarkup,0xC);
	SetDataStoreFieldValue_Parms.OwnerScene = OwnerScene;
	SetDataStoreFieldValue_Parms.OwnerPlayer = OwnerPlayer;
	pFnSetDataStoreFieldValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreFieldValue,NULL,&SetDataStoreFieldValue_Parms,NULL);
	pFnSetDataStoreFieldValue->FunctionFlags |= 0x400;
	if(InFieldValue)
		memcpy(InFieldValue,&SetDataStoreFieldValue_Parms.InFieldValue,0x44);
	return SetDataStoreFieldValue_Parms.ReturnValue;
}

struct Engine_SetDataStoreStringValue_Parms
{
	struct FString                                     InDataStoreMarkup;                                		// 0x000000 (0x000C)              
	struct FString                                     InStringValue;                                    		// 0x00000C (0x000C)              
	class UUIScene*                                    OwnerScene;                                       		// 0x000018 (0x0004)              
	class ULocalPlayer*                                OwnerPlayer;                                      		// 0x00001C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	//struct FUIProviderFieldValue                       FieldValue;                                       		// 0x000024 (0x0044)              
};

bool UUIRoot::SetDataStoreStringValue(struct FString InDataStoreMarkup,struct FString InStringValue,class UUIScene* OwnerScene,class ULocalPlayer* OwnerPlayer)
{
	static UFieldFunc* pFnSetDataStoreStringValue = NULL;
	if(!pFnSetDataStoreStringValue)
		pFnSetDataStoreStringValue = UObject::FindFunction("Function Engine.UIRoot.SetDataStoreStringValue");

	Engine_SetDataStoreStringValue_Parms SetDataStoreStringValue_Parms;
	memcpy(&SetDataStoreStringValue_Parms.InDataStoreMarkup,&InDataStoreMarkup,0xC);
	memcpy(&SetDataStoreStringValue_Parms.InStringValue,&InStringValue,0xC);
	SetDataStoreStringValue_Parms.OwnerScene = OwnerScene;
	SetDataStoreStringValue_Parms.OwnerPlayer = OwnerPlayer;
	ProcessEvent(pFnSetDataStoreStringValue,NULL,&SetDataStoreStringValue_Parms,NULL);
	return SetDataStoreStringValue_Parms.ReturnValue;
}

struct Engine_GetPrimitiveTransform_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bIncludeAnchorPosition : 1;                       		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bIncudeRotation : 1;                              		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bIncludeScale : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	FMatrix                                            ReturnValue;                                      		// 0x000010 (0x0040)              
};

FMatrix UUIRoot::GetPrimitiveTransform(class UUIObject* Widget,bool bIncludeAnchorPosition,bool bIncudeRotation,bool bIncludeScale)
{
	static UFieldFunc* pFnGetPrimitiveTransform = NULL;
	if(!pFnGetPrimitiveTransform)
		pFnGetPrimitiveTransform = UObject::FindFunction("Function Engine.UIRoot.GetPrimitiveTransform");

	Engine_GetPrimitiveTransform_Parms GetPrimitiveTransform_Parms;
	GetPrimitiveTransform_Parms.Widget = Widget;
	GetPrimitiveTransform_Parms.bIncludeAnchorPosition = bIncludeAnchorPosition;
	GetPrimitiveTransform_Parms.bIncudeRotation = bIncudeRotation;
	GetPrimitiveTransform_Parms.bIncludeScale = bIncludeScale;
	pFnGetPrimitiveTransform->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPrimitiveTransform,NULL,&GetPrimitiveTransform_Parms,NULL);
	pFnGetPrimitiveTransform->FunctionFlags |= 0x400;
	return GetPrimitiveTransform_Parms.ReturnValue;
}

struct Engine_GetFaceOrientation_Parms
{
	unsigned char                                      Face;                                             		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UUIRoot::GetFaceOrientation(unsigned char Face)
{
	static UFieldFunc* pFnGetFaceOrientation = NULL;
	if(!pFnGetFaceOrientation)
		pFnGetFaceOrientation = UObject::FindFunction("Function Engine.UIRoot.GetFaceOrientation");

	Engine_GetFaceOrientation_Parms GetFaceOrientation_Parms;
	GetFaceOrientation_Parms.Face = Face;
	pFnGetFaceOrientation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFaceOrientation,NULL,&GetFaceOrientation_Parms,NULL);
	pFnGetFaceOrientation->FunctionFlags |= 0x400;
	return GetFaceOrientation_Parms.ReturnValue;
}

struct Engine_RemovedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   OldChild;                                         		// 0x000004 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000008 (0x000C)              
};

void UUIScreenObject::RemovedChild(class UUIScreenObject* WidgetOwner,class UUIObject* OldChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemovedChild = NULL;
	if(!pFnRemovedChild)
		pFnRemovedChild = UObject::FindFunction("Function Engine.UIScreenObject.RemovedChild");

	Engine_RemovedChild_Parms RemovedChild_Parms;
	RemovedChild_Parms.WidgetOwner = WidgetOwner;
	RemovedChild_Parms.OldChild = OldChild;
	memcpy(&RemovedChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	ProcessEvent(pFnRemovedChild,NULL,&RemovedChild_Parms,NULL);
}

struct Engine_DeProject_Parms
{
	FVector3                                           PixelPosition;                                    		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 UUIScreenObject::DeProject(FVector3* PixelPosition)
{
	static UFieldFunc* pFnDeProject = NULL;
	if(!pFnDeProject)
		pFnDeProject = UObject::FindFunction("Function Engine.UIScreenObject.DeProject");

	Engine_DeProject_Parms DeProject_Parms;
	pFnDeProject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeProject,NULL,&DeProject_Parms,NULL);
	pFnDeProject->FunctionFlags |= 0x400;
	if(PixelPosition)
		memcpy(PixelPosition,&DeProject_Parms.PixelPosition,0xC);
	return DeProject_Parms.ReturnValue;
}

struct Engine_GetPlayerOwner_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

class ULocalPlayer* UUIScreenObject::GetPlayerOwner(int PlayerIndex)
{
	static UFieldFunc* pFnGetPlayerOwner = NULL;
	if(!pFnGetPlayerOwner)
		pFnGetPlayerOwner = UObject::FindFunction("Function Engine.UIScreenObject.GetPlayerOwner");

	Engine_GetPlayerOwner_Parms GetPlayerOwner_Parms;
	GetPlayerOwner_Parms.PlayerIndex = PlayerIndex;
	pFnGetPlayerOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerOwner,NULL,&GetPlayerOwner_Parms,NULL);
	pFnGetPlayerOwner->FunctionFlags |= 0x400;
	return GetPlayerOwner_Parms.ReturnValue;
}

struct Engine_GetWidgetPathName_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UUIScreenObject::GetWidgetPathName()
{
	static UFieldFunc* pFnGetWidgetPathName = NULL;
	if(!pFnGetWidgetPathName)
		pFnGetWidgetPathName = UObject::FindFunction("Function Engine.UIScreenObject.GetWidgetPathName");

	Engine_GetWidgetPathName_Parms GetWidgetPathName_Parms;
	pFnGetWidgetPathName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetWidgetPathName,NULL,&GetWidgetPathName_Parms,NULL);
	pFnGetWidgetPathName->FunctionFlags |= 0x400;
	return GetWidgetPathName_Parms.ReturnValue;
}

struct Engine_FocusFirstControl_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::FocusFirstControl(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnFocusFirstControl = NULL;
	if(!pFnFocusFirstControl)
		pFnFocusFirstControl = UObject::FindFunction("Function Engine.UIScreenObject.FocusFirstControl");

	Engine_FocusFirstControl_Parms FocusFirstControl_Parms;
	FocusFirstControl_Parms.Sender = Sender;
	FocusFirstControl_Parms.PlayerIndex = PlayerIndex;
	pFnFocusFirstControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFocusFirstControl,NULL,&FocusFirstControl_Parms,NULL);
	pFnFocusFirstControl->FunctionFlags |= 0x400;
	return FocusFirstControl_Parms.ReturnValue;
}

struct Engine_IsHoldingAlt_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsHoldingAlt(int ControllerId)
{
	static UFieldFunc* pFnIsHoldingAlt = NULL;
	if(!pFnIsHoldingAlt)
		pFnIsHoldingAlt = UObject::FindFunction("Function Engine.UIScreenObject.IsHoldingAlt");

	Engine_IsHoldingAlt_Parms IsHoldingAlt_Parms;
	IsHoldingAlt_Parms.ControllerId = ControllerId;
	pFnIsHoldingAlt->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsHoldingAlt,NULL,&IsHoldingAlt_Parms,NULL);
	pFnIsHoldingAlt->FunctionFlags |= 0x400;
	return IsHoldingAlt_Parms.ReturnValue;
}

struct Engine_IsFocused_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsFocused(int PlayerIndex)
{
	static UFieldFunc* pFnIsFocused = NULL;
	if(!pFnIsFocused)
		pFnIsFocused = UObject::FindFunction("Function Engine.UIScreenObject.IsFocused");

	Engine_IsFocused_Parms IsFocused_Parms;
	IsFocused_Parms.PlayerIndex = PlayerIndex;
	pFnIsFocused->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsFocused,NULL,&IsFocused_Parms,NULL);
	pFnIsFocused->FunctionFlags |= 0x400;
	return IsFocused_Parms.ReturnValue;
}

struct Engine_GetLastFocusedControl_Parms
{
	unsigned long                                      bRecurse : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIObject*                                   ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UUIObject* UUIScreenObject::GetLastFocusedControl(bool bRecurse,int PlayerIndex)
{
	static UFieldFunc* pFnGetLastFocusedControl = NULL;
	if(!pFnGetLastFocusedControl)
		pFnGetLastFocusedControl = UObject::FindFunction("Function Engine.UIScreenObject.GetLastFocusedControl");

	Engine_GetLastFocusedControl_Parms GetLastFocusedControl_Parms;
	GetLastFocusedControl_Parms.bRecurse = bRecurse;
	GetLastFocusedControl_Parms.PlayerIndex = PlayerIndex;
	pFnGetLastFocusedControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLastFocusedControl,NULL,&GetLastFocusedControl_Parms,NULL);
	pFnGetLastFocusedControl->FunctionFlags |= 0x400;
	return GetLastFocusedControl_Parms.ReturnValue;
}

struct Engine_IsVisible_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsVisible()
{
	static UFieldFunc* pFnIsVisible = NULL;
	if(!pFnIsVisible)
		pFnIsVisible = UObject::FindFunction("Function Engine.UIScreenObject.IsVisible");

	Engine_IsVisible_Parms IsVisible_Parms;
	ProcessEvent(pFnIsVisible,NULL,&IsVisible_Parms,NULL);
	return IsVisible_Parms.ReturnValue;
}

struct Engine_LogCurrentState_Parms
{
	int                                                Indent;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//struct FString                                     IndentString;                                     		// 0x000008 (0x000C)              
	//class UUIState*                                    CurrentState;                                     		// 0x000014 (0x0004)              
};

void UUIScreenObject::LogCurrentState(int Indent)
{
	static UFieldFunc* pFnLogCurrentState = NULL;
	if(!pFnLogCurrentState)
		pFnLogCurrentState = UObject::FindFunction("Function Engine.UIScreenObject.LogCurrentState");

	Engine_LogCurrentState_Parms LogCurrentState_Parms;
	LogCurrentState_Parms.Indent = Indent;
	ProcessEvent(pFnLogCurrentState,NULL,&LogCurrentState_Parms,NULL);
}

struct Engine_ActivateStateByClass_Parms
{
	class UClass*                                      StateToActivate;                                  		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    StateThatWasAdded;                                		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScreenObject::ActivateStateByClass(class UClass* StateToActivate,int PlayerIndex,class UUIState** StateThatWasAdded)
{
	static UFieldFunc* pFnActivateStateByClass = NULL;
	if(!pFnActivateStateByClass)
		pFnActivateStateByClass = UObject::FindFunction("Function Engine.UIScreenObject.ActivateStateByClass");

	Engine_ActivateStateByClass_Parms ActivateStateByClass_Parms;
	ActivateStateByClass_Parms.StateToActivate = StateToActivate;
	ActivateStateByClass_Parms.PlayerIndex = PlayerIndex;
	pFnActivateStateByClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActivateStateByClass,NULL,&ActivateStateByClass_Parms,NULL);
	pFnActivateStateByClass->FunctionFlags |= 0x400;
	if(StateThatWasAdded)
		*StateThatWasAdded = ActivateStateByClass_Parms.StateThatWasAdded;
	return ActivateStateByClass_Parms.ReturnValue;
}

struct Engine_OnProcessInputAxis_Parms
{
	struct FSubscribedInputEventParameters             EventParms;                                       		// 0x000000 (0x0028)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool UUIScreenObject::OnProcessInputAxis(struct FSubscribedInputEventParameters* EventParms)
{
	static UFieldFunc* pFnOnProcessInputAxis = NULL;
	if(!pFnOnProcessInputAxis)
		pFnOnProcessInputAxis = UObject::FindFunction("Function Engine.UIScreenObject.OnProcessInputAxis");

	Engine_OnProcessInputAxis_Parms OnProcessInputAxis_Parms;
	ProcessEvent(pFnOnProcessInputAxis,NULL,&OnProcessInputAxis_Parms,NULL);
	if(EventParms)
		memcpy(EventParms,&OnProcessInputAxis_Parms.EventParms,0x28);
	return OnProcessInputAxis_Parms.ReturnValue;
}

struct Engine_CreatePlayerData_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                AddedPlayer;                                      		// 0x000004 (0x0004)              
};

void UUIScreenObject::CreatePlayerData(int PlayerIndex,class ULocalPlayer* AddedPlayer)
{
	static UFieldFunc* pFnCreatePlayerData = NULL;
	if(!pFnCreatePlayerData)
		pFnCreatePlayerData = UObject::FindFunction("Function Engine.UIScreenObject.CreatePlayerData");

	Engine_CreatePlayerData_Parms CreatePlayerData_Parms;
	CreatePlayerData_Parms.PlayerIndex = PlayerIndex;
	CreatePlayerData_Parms.AddedPlayer = AddedPlayer;
	pFnCreatePlayerData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreatePlayerData,NULL,&CreatePlayerData_Parms,NULL);
	pFnCreatePlayerData->FunctionFlags |= 0x400;
}

struct Engine_ReplaceChild_Parms
{
	class UUIObject*                                   ExistingChild;                                    		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::ReplaceChild(class UUIObject* ExistingChild,class UUIObject* NewChild)
{
	static UFieldFunc* pFnReplaceChild = NULL;
	if(!pFnReplaceChild)
		pFnReplaceChild = UObject::FindFunction("Function Engine.UIScreenObject.ReplaceChild");

	Engine_ReplaceChild_Parms ReplaceChild_Parms;
	ReplaceChild_Parms.ExistingChild = ExistingChild;
	ReplaceChild_Parms.NewChild = NewChild;
	pFnReplaceChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReplaceChild,NULL,&ReplaceChild_Parms,NULL);
	pFnReplaceChild->FunctionFlags |= 0x400;
	return ReplaceChild_Parms.ReturnValue;
}

struct Engine_GetChildren_Parms
{
	unsigned long                                      bRecurse : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000004 (0x000C)              
	TArray<class UUIObject*>                           ReturnValue;                                      		// 0x000010 (0x000C)              
};

TArray<class UUIObject*> UUIScreenObject::GetChildren(bool bRecurse,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnGetChildren = NULL;
	if(!pFnGetChildren)
		pFnGetChildren = UObject::FindFunction("Function Engine.UIScreenObject.GetChildren");

	Engine_GetChildren_Parms GetChildren_Parms;
	GetChildren_Parms.bRecurse = bRecurse;
	memcpy(&GetChildren_Parms.ExclusionSet,&ExclusionSet,0xC);
	pFnGetChildren->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetChildren,NULL,&GetChildren_Parms,NULL);
	pFnGetChildren->FunctionFlags |= 0x400;
	return GetChildren_Parms.ReturnValue;
}

struct Engine_IsActive_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsActive(int PlayerIndex)
{
	static UFieldFunc* pFnIsActive = NULL;
	if(!pFnIsActive)
		pFnIsActive = UObject::FindFunction("Function Engine.UIScreenObject.IsActive");

	Engine_IsActive_Parms IsActive_Parms;
	IsActive_Parms.PlayerIndex = PlayerIndex;
	pFnIsActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsActive,NULL,&IsActive_Parms,NULL);
	pFnIsActive->FunctionFlags |= 0x400;
	return IsActive_Parms.ReturnValue;
}

struct Engine_GetCurrentState_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class UUIState*                                    ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIState* UUIScreenObject::GetCurrentState(int PlayerIndex)
{
	static UFieldFunc* pFnGetCurrentState = NULL;
	if(!pFnGetCurrentState)
		pFnGetCurrentState = UObject::FindFunction("Function Engine.UIScreenObject.GetCurrentState");

	Engine_GetCurrentState_Parms GetCurrentState_Parms;
	GetCurrentState_Parms.PlayerIndex = PlayerIndex;
	pFnGetCurrentState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentState,NULL,&GetCurrentState_Parms,NULL);
	pFnGetCurrentState->FunctionFlags |= 0x400;
	return GetCurrentState_Parms.ReturnValue;
}

struct Engine_IsInitialized_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsInitialized()
{
	static UFieldFunc* pFnIsInitialized = NULL;
	if(!pFnIsInitialized)
		pFnIsInitialized = UObject::FindFunction("Function Engine.UIScreenObject.IsInitialized");

	Engine_IsInitialized_Parms IsInitialized_Parms;
	pFnIsInitialized->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsInitialized,NULL,&IsInitialized_Parms,NULL);
	pFnIsInitialized->FunctionFlags |= 0x400;
	return IsInitialized_Parms.ReturnValue;
}

struct Engine_GetFocusedControl_Parms
{
	unsigned long                                      bRecurse : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIObject*                                   ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UUIObject* UUIScreenObject::GetFocusedControl(bool bRecurse,int PlayerIndex)
{
	static UFieldFunc* pFnGetFocusedControl = NULL;
	if(!pFnGetFocusedControl)
		pFnGetFocusedControl = UObject::FindFunction("Function Engine.UIScreenObject.GetFocusedControl");

	Engine_GetFocusedControl_Parms GetFocusedControl_Parms;
	GetFocusedControl_Parms.bRecurse = bRecurse;
	GetFocusedControl_Parms.PlayerIndex = PlayerIndex;
	pFnGetFocusedControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFocusedControl,NULL,&GetFocusedControl_Parms,NULL);
	pFnGetFocusedControl->FunctionFlags |= 0x400;
	return GetFocusedControl_Parms.ReturnValue;
}

struct Engine_GetPositionVector_Parms
{
	unsigned long                                      bIncludeParentPosition : 1;                       		// 0x000000 (0x0004) [0x00000001] 
	FVector3                                           ReturnValue;                                      		// 0x000004 (0x000C)              
};

FVector3 UUIScreenObject::GetPositionVector(bool bIncludeParentPosition)
{
	static UFieldFunc* pFnGetPositionVector = NULL;
	if(!pFnGetPositionVector)
		pFnGetPositionVector = UObject::FindFunction("Function Engine.UIScreenObject.GetPositionVector");

	Engine_GetPositionVector_Parms GetPositionVector_Parms;
	GetPositionVector_Parms.bIncludeParentPosition = bIncludeParentPosition;
	pFnGetPositionVector->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPositionVector,NULL,&GetPositionVector_Parms,NULL);
	pFnGetPositionVector->FunctionFlags |= 0x400;
	return GetPositionVector_Parms.ReturnValue;
}

struct Engine_IsEnabled_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bCheckOwnerChain : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsEnabled(int PlayerIndex,bool bCheckOwnerChain)
{
	static UFieldFunc* pFnIsEnabled = NULL;
	if(!pFnIsEnabled)
		pFnIsEnabled = UObject::FindFunction("Function Engine.UIScreenObject.IsEnabled");

	Engine_IsEnabled_Parms IsEnabled_Parms;
	IsEnabled_Parms.PlayerIndex = PlayerIndex;
	IsEnabled_Parms.bCheckOwnerChain = bCheckOwnerChain;
	pFnIsEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsEnabled,NULL,&IsEnabled_Parms,NULL);
	pFnIsEnabled->FunctionFlags |= 0x400;
	return IsEnabled_Parms.ReturnValue;
}

struct Engine_SetFocusToChild_Parms
{
	class UUIObject*                                   ChildToFocus;                                     		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::SetFocusToChild(class UUIObject* ChildToFocus,int PlayerIndex)
{
	static UFieldFunc* pFnSetFocusToChild = NULL;
	if(!pFnSetFocusToChild)
		pFnSetFocusToChild = UObject::FindFunction("Function Engine.UIScreenObject.SetFocusToChild");

	Engine_SetFocusToChild_Parms SetFocusToChild_Parms;
	SetFocusToChild_Parms.ChildToFocus = ChildToFocus;
	SetFocusToChild_Parms.PlayerIndex = PlayerIndex;
	pFnSetFocusToChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFocusToChild,NULL,&SetFocusToChild_Parms,NULL);
	pFnSetFocusToChild->FunctionFlags |= 0x400;
	return SetFocusToChild_Parms.ReturnValue;
}

struct Engine_OnConsoleCommand_Parms
{
	class UUIAction_ConsoleCommand*                    Action;                                           		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                PlayerOwner;                                      		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnConsoleCommand(class UUIAction_ConsoleCommand* Action)
{
	static UFieldFunc* pFnOnConsoleCommand = NULL;
	if(!pFnOnConsoleCommand)
		pFnOnConsoleCommand = UObject::FindFunction("Function Engine.UIScreenObject.OnConsoleCommand");

	Engine_OnConsoleCommand_Parms OnConsoleCommand_Parms;
	OnConsoleCommand_Parms.Action = Action;
	ProcessEvent(pFnOnConsoleCommand,NULL,&OnConsoleCommand_Parms,NULL);
}

struct Engine_RequestPrimitiveReview_Parms
{
	unsigned long                                      bReinitializePrimitives : 1;                      		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bReviewPrimitiveUsage : 1;                        		// 0x000004 (0x0004) [0x00000001] 
};

void UUIScreenObject::RequestPrimitiveReview(bool bReinitializePrimitives,bool bReviewPrimitiveUsage)
{
	static UFieldFunc* pFnRequestPrimitiveReview = NULL;
	if(!pFnRequestPrimitiveReview)
		pFnRequestPrimitiveReview = UObject::FindFunction("Function Engine.UIScreenObject.RequestPrimitiveReview");

	Engine_RequestPrimitiveReview_Parms RequestPrimitiveReview_Parms;
	RequestPrimitiveReview_Parms.bReinitializePrimitives = bReinitializePrimitives;
	RequestPrimitiveReview_Parms.bReviewPrimitiveUsage = bReviewPrimitiveUsage;
	pFnRequestPrimitiveReview->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestPrimitiveReview,NULL,&RequestPrimitiveReview_Parms,NULL);
	pFnRequestPrimitiveReview->FunctionFlags |= 0x400;
}

struct Engine_PlayUISound_Parms
{
	struct FEnumeratedName                             SoundCueName;                                     		// 0x000000 (0x0010)              
	int                                                PlayerIndex;                                      		// 0x000010 (0x0004)              
	struct FString                                     ComponentName;                                    		// 0x000014 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUIScreenObject::PlayUISound(struct FEnumeratedName SoundCueName,int PlayerIndex,struct FString ComponentName)
{
	static UFieldFunc* pFnPlayUISound = NULL;
	if(!pFnPlayUISound)
		pFnPlayUISound = UObject::FindFunction("Function Engine.UIScreenObject.PlayUISound");

	Engine_PlayUISound_Parms PlayUISound_Parms;
	memcpy(&PlayUISound_Parms.SoundCueName,&SoundCueName,0x10);
	PlayUISound_Parms.PlayerIndex = PlayerIndex;
	memcpy(&PlayUISound_Parms.ComponentName,&ComponentName,0xC);
	pFnPlayUISound->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayUISound,NULL,&PlayUISound_Parms,NULL);
	pFnPlayUISound->FunctionFlags |= 0x400;
	return PlayUISound_Parms.ReturnValue;
}

struct Engine_OnShowContentMarketplaceUI_Parms
{
	class UUIAction_ShowContentMarketplaceUI*          Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowContentMarketplaceUI(class UUIAction_ShowContentMarketplaceUI* Action)
{
	static UFieldFunc* pFnOnShowContentMarketplaceUI = NULL;
	if(!pFnOnShowContentMarketplaceUI)
		pFnOnShowContentMarketplaceUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowContentMarketplaceUI");

	Engine_OnShowContentMarketplaceUI_Parms OnShowContentMarketplaceUI_Parms;
	OnShowContentMarketplaceUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowContentMarketplaceUI,NULL,&OnShowContentMarketplaceUI_Parms,NULL);
}

struct Engine_GetInverseCanvasToScreen_Parms
{
	FMatrix                                            ReturnValue;                                      		// 0x000000 (0x0040)              
};

FMatrix UUIScreenObject::GetInverseCanvasToScreen()
{
	static UFieldFunc* pFnGetInverseCanvasToScreen = NULL;
	if(!pFnGetInverseCanvasToScreen)
		pFnGetInverseCanvasToScreen = UObject::FindFunction("Function Engine.UIScreenObject.GetInverseCanvasToScreen");

	Engine_GetInverseCanvasToScreen_Parms GetInverseCanvasToScreen_Parms;
	pFnGetInverseCanvasToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetInverseCanvasToScreen,NULL,&GetInverseCanvasToScreen_Parms,NULL);
	pFnGetInverseCanvasToScreen->FunctionFlags |= 0x400;
	return GetInverseCanvasToScreen_Parms.ReturnValue;
}

struct Engine_SetPosition_Parms
{
	float                                              NewValue;                                         		// 0x000000 (0x0004)              
	unsigned char                                      Face;                                             		// 0x000004 (0x0001)              
	unsigned char                                      InputType;                                        		// 0x000005 (0x0001)              
	unsigned long                                      bZeroOrigin : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

void UUIScreenObject::SetPosition(float NewValue,unsigned char Face,unsigned char InputType,bool bZeroOrigin)
{
	static UFieldFunc* pFnSetPosition = NULL;
	if(!pFnSetPosition)
		pFnSetPosition = UObject::FindFunction("Function Engine.UIScreenObject.SetPosition");

	Engine_SetPosition_Parms SetPosition_Parms;
	SetPosition_Parms.NewValue = NewValue;
	SetPosition_Parms.Face = Face;
	SetPosition_Parms.InputType = InputType;
	SetPosition_Parms.bZeroOrigin = bZeroOrigin;
	pFnSetPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPosition,NULL,&SetPosition_Parms,NULL);
	pFnSetPosition->FunctionFlags |= 0x400;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIScreenObject.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_PrevControl_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::PrevControl(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnPrevControl = NULL;
	if(!pFnPrevControl)
		pFnPrevControl = UObject::FindFunction("Function Engine.UIScreenObject.PrevControl");

	Engine_PrevControl_Parms PrevControl_Parms;
	PrevControl_Parms.Sender = Sender;
	PrevControl_Parms.PlayerIndex = PlayerIndex;
	pFnPrevControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPrevControl,NULL,&PrevControl_Parms,NULL);
	pFnPrevControl->FunctionFlags |= 0x400;
	return PrevControl_Parms.ReturnValue;
}

struct Engine_OnChangeVisibility_Parms
{
	class UUIAction_ChangeVisibility*                  Action;                                           		// 0x000000 (0x0004)              
};

void UUIScreenObject::OnChangeVisibility(class UUIAction_ChangeVisibility* Action)
{
	static UFieldFunc* pFnOnChangeVisibility = NULL;
	if(!pFnOnChangeVisibility)
		pFnOnChangeVisibility = UObject::FindFunction("Function Engine.UIScreenObject.OnChangeVisibility");

	Engine_OnChangeVisibility_Parms OnChangeVisibility_Parms;
	OnChangeVisibility_Parms.Action = Action;
	ProcessEvent(pFnOnChangeVisibility,NULL,&OnChangeVisibility_Parms,NULL);
}

struct Engine_IsPressed_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsPressed(int PlayerIndex)
{
	static UFieldFunc* pFnIsPressed = NULL;
	if(!pFnIsPressed)
		pFnIsPressed = UObject::FindFunction("Function Engine.UIScreenObject.IsPressed");

	Engine_IsPressed_Parms IsPressed_Parms;
	IsPressed_Parms.PlayerIndex = PlayerIndex;
	pFnIsPressed->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPressed,NULL,&IsPressed_Parms,NULL);
	pFnIsPressed->FunctionFlags |= 0x400;
	return IsPressed_Parms.ReturnValue;
}

struct Engine_GetSupportedPlayerCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIScreenObject::GetSupportedPlayerCount()
{
	static UFieldFunc* pFnGetSupportedPlayerCount = NULL;
	if(!pFnGetSupportedPlayerCount)
		pFnGetSupportedPlayerCount = UObject::FindFunction("Function Engine.UIScreenObject.GetSupportedPlayerCount");

	Engine_GetSupportedPlayerCount_Parms GetSupportedPlayerCount_Parms;
	pFnGetSupportedPlayerCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSupportedPlayerCount,NULL,&GetSupportedPlayerCount_Parms,NULL);
	pFnGetSupportedPlayerCount->FunctionFlags |= 0x400;
	return GetSupportedPlayerCount_Parms.ReturnValue;
}

struct Engine_SetEnabled_Parms
{
	unsigned long                                      bEnabled : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::SetEnabled(bool bEnabled,int PlayerIndex)
{
	static UFieldFunc* pFnSetEnabled = NULL;
	if(!pFnSetEnabled)
		pFnSetEnabled = UObject::FindFunction("Function Engine.UIScreenObject.SetEnabled");

	Engine_SetEnabled_Parms SetEnabled_Parms;
	SetEnabled_Parms.bEnabled = bEnabled;
	SetEnabled_Parms.PlayerIndex = PlayerIndex;
	pFnSetEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetEnabled,NULL,&SetEnabled_Parms,NULL);
	pFnSetEnabled->FunctionFlags |= 0x400;
	return SetEnabled_Parms.ReturnValue;
}

struct Engine_FindEventsOfClass_Parms
{
	class UClass*                                      EventClassToFind;                                 		// 0x000000 (0x0004)              
	TArray<class UUIEvent*>                            out_EventInstances;                               		// 0x000004 (0x000C)              
	class UUIState*                                    LimitScope;                                       		// 0x000010 (0x0004)              
	unsigned long                                      bExactClass : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

void UUIScreenObject::FindEventsOfClass(class UClass* EventClassToFind,TArray<class UUIEvent*>* out_EventInstances,class UUIState* LimitScope,bool bExactClass)
{
	static UFieldFunc* pFnFindEventsOfClass = NULL;
	if(!pFnFindEventsOfClass)
		pFnFindEventsOfClass = UObject::FindFunction("Function Engine.UIScreenObject.FindEventsOfClass");

	Engine_FindEventsOfClass_Parms FindEventsOfClass_Parms;
	FindEventsOfClass_Parms.EventClassToFind = EventClassToFind;
	FindEventsOfClass_Parms.LimitScope = LimitScope;
	FindEventsOfClass_Parms.bExactClass = bExactClass;
	pFnFindEventsOfClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindEventsOfClass,NULL,&FindEventsOfClass_Parms,NULL);
	pFnFindEventsOfClass->FunctionFlags |= 0x400;
	if(out_EventInstances)
		memcpy(out_EventInstances,&FindEventsOfClass_Parms.out_EventInstances,0xC);
}

struct Engine_OnInitialSceneUpdate_Parms
{
};

void UUIScreenObject::OnInitialSceneUpdate()
{
	static UFieldFunc* pFnOnInitialSceneUpdate = NULL;
	if(!pFnOnInitialSceneUpdate)
		pFnOnInitialSceneUpdate = UObject::FindFunction("Function Engine.UIScreenObject.OnInitialSceneUpdate");

	Engine_OnInitialSceneUpdate_Parms OnInitialSceneUpdate_Parms;
	ProcessEvent(pFnOnInitialSceneUpdate,NULL,&OnInitialSceneUpdate_Parms,NULL);
}

struct Engine_NavigateFocus_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	unsigned char                                      Direction;                                        		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScreenObject::NavigateFocus(class UUIScreenObject* Sender,unsigned char Direction,int PlayerIndex)
{
	static UFieldFunc* pFnNavigateFocus = NULL;
	if(!pFnNavigateFocus)
		pFnNavigateFocus = UObject::FindFunction("Function Engine.UIScreenObject.NavigateFocus");

	Engine_NavigateFocus_Parms NavigateFocus_Parms;
	NavigateFocus_Parms.Sender = Sender;
	NavigateFocus_Parms.Direction = Direction;
	NavigateFocus_Parms.PlayerIndex = PlayerIndex;
	pFnNavigateFocus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNavigateFocus,NULL,&NavigateFocus_Parms,NULL);
	pFnNavigateFocus->FunctionFlags |= 0x400;
	return NavigateFocus_Parms.ReturnValue;
}

struct Engine_GetLoginStatus_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UUIScreenObject::GetLoginStatus(int ControllerId)
{
	static UFieldFunc* pFnGetLoginStatus = NULL;
	if(!pFnGetLoginStatus)
		pFnGetLoginStatus = UObject::FindFunction("Function Engine.UIScreenObject.GetLoginStatus");

	Engine_GetLoginStatus_Parms GetLoginStatus_Parms;
	GetLoginStatus_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnGetLoginStatus,NULL,&GetLoginStatus_Parms,NULL);
	return GetLoginStatus_Parms.ReturnValue;
}

struct Engine_DisablePlayerInput_Parms
{
	unsigned char                                      PlayerIndex;                                      		// 0x000000 (0x0001)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	//unsigned char                                      NewPlayerInputMask;                               		// 0x000008 (0x0001)              
};

void UUIScreenObject::DisablePlayerInput(unsigned char PlayerIndex,bool bRecurse)
{
	static UFieldFunc* pFnDisablePlayerInput = NULL;
	if(!pFnDisablePlayerInput)
		pFnDisablePlayerInput = UObject::FindFunction("Function Engine.UIScreenObject.DisablePlayerInput");

	Engine_DisablePlayerInput_Parms DisablePlayerInput_Parms;
	DisablePlayerInput_Parms.PlayerIndex = PlayerIndex;
	DisablePlayerInput_Parms.bRecurse = bRecurse;
	ProcessEvent(pFnDisablePlayerInput,NULL,&DisablePlayerInput_Parms,NULL);
}

struct Engine_ActivateState_Parms
{
	class UUIState*                                    StateToActivate;                                  		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::ActivateState(class UUIState* StateToActivate,int PlayerIndex)
{
	static UFieldFunc* pFnActivateState = NULL;
	if(!pFnActivateState)
		pFnActivateState = UObject::FindFunction("Function Engine.UIScreenObject.ActivateState");

	Engine_ActivateState_Parms ActivateState_Parms;
	ActivateState_Parms.StateToActivate = StateToActivate;
	ActivateState_Parms.PlayerIndex = PlayerIndex;
	pFnActivateState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActivateState,NULL,&ActivateState_Parms,NULL);
	pFnActivateState->FunctionFlags |= 0x400;
	return ActivateState_Parms.ReturnValue;
}

struct Engine_EnableWidget_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::EnableWidget(int PlayerIndex)
{
	static UFieldFunc* pFnEnableWidget = NULL;
	if(!pFnEnableWidget)
		pFnEnableWidget = UObject::FindFunction("Function Engine.UIScreenObject.EnableWidget");

	Engine_EnableWidget_Parms EnableWidget_Parms;
	EnableWidget_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnEnableWidget,NULL,&EnableWidget_Parms,NULL);
	return EnableWidget_Parms.ReturnValue;
}

struct Engine_KillFocus_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::KillFocus(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnKillFocus = NULL;
	if(!pFnKillFocus)
		pFnKillFocus = UObject::FindFunction("Function Engine.UIScreenObject.KillFocus");

	Engine_KillFocus_Parms KillFocus_Parms;
	KillFocus_Parms.Sender = Sender;
	KillFocus_Parms.PlayerIndex = PlayerIndex;
	pFnKillFocus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnKillFocus,NULL,&KillFocus_Parms,NULL);
	pFnKillFocus->FunctionFlags |= 0x400;
	return KillFocus_Parms.ReturnValue;
}

struct Engine_AcceptsPlayerInput_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::AcceptsPlayerInput(int PlayerIndex)
{
	static UFieldFunc* pFnAcceptsPlayerInput = NULL;
	if(!pFnAcceptsPlayerInput)
		pFnAcceptsPlayerInput = UObject::FindFunction("Function Engine.UIScreenObject.AcceptsPlayerInput");

	Engine_AcceptsPlayerInput_Parms AcceptsPlayerInput_Parms;
	AcceptsPlayerInput_Parms.PlayerIndex = PlayerIndex;
	pFnAcceptsPlayerInput->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAcceptsPlayerInput,NULL,&AcceptsPlayerInput_Parms,NULL);
	pFnAcceptsPlayerInput->FunctionFlags |= 0x400;
	return AcceptsPlayerInput_Parms.ReturnValue;
}

struct Engine_RemovePlayerData_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                RemovedPlayer;                                    		// 0x000004 (0x0004)              
};

void UUIScreenObject::RemovePlayerData(int PlayerIndex,class ULocalPlayer* RemovedPlayer)
{
	static UFieldFunc* pFnRemovePlayerData = NULL;
	if(!pFnRemovePlayerData)
		pFnRemovePlayerData = UObject::FindFunction("Function Engine.UIScreenObject.RemovePlayerData");

	Engine_RemovePlayerData_Parms RemovePlayerData_Parms;
	RemovePlayerData_Parms.PlayerIndex = PlayerIndex;
	RemovePlayerData_Parms.RemovedPlayer = RemovedPlayer;
	pFnRemovePlayerData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemovePlayerData,NULL,&RemovePlayerData_Parms,NULL);
	pFnRemovePlayerData->FunctionFlags |= 0x400;
}

struct Engine_GetViewportOffset_Parms
{
	FVector2                                           out_ViewportOffset;                               		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::GetViewportOffset(FVector2* out_ViewportOffset)
{
	static UFieldFunc* pFnGetViewportOffset = NULL;
	if(!pFnGetViewportOffset)
		pFnGetViewportOffset = UObject::FindFunction("Function Engine.UIScreenObject.GetViewportOffset");

	Engine_GetViewportOffset_Parms GetViewportOffset_Parms;
	pFnGetViewportOffset->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportOffset,NULL,&GetViewportOffset_Parms,NULL);
	pFnGetViewportOffset->FunctionFlags |= 0x400;
	if(out_ViewportOffset)
		memcpy(out_ViewportOffset,&GetViewportOffset_Parms.out_ViewportOffset,0x8);
	return GetViewportOffset_Parms.ReturnValue;
}

struct Engine_RemoveChildren_Parms
{
	TArray<class UUIObject*>                           ChildrenToRemove;                                 		// 0x000000 (0x000C)              
	TArray<class UUIObject*>                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

TArray<class UUIObject*> UUIScreenObject::RemoveChildren(TArray<class UUIObject*> ChildrenToRemove)
{
	static UFieldFunc* pFnRemoveChildren = NULL;
	if(!pFnRemoveChildren)
		pFnRemoveChildren = UObject::FindFunction("Function Engine.UIScreenObject.RemoveChildren");

	Engine_RemoveChildren_Parms RemoveChildren_Parms;
	memcpy(&RemoveChildren_Parms.ChildrenToRemove,&ChildrenToRemove,0xC);
	pFnRemoveChildren->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveChildren,NULL,&RemoveChildren_Parms,NULL);
	pFnRemoveChildren->FunctionFlags |= 0x400;
	return RemoveChildren_Parms.ReturnValue;
}

struct Engine_OnShowMessagesUI_Parms
{
	class UUIAction_ShowMessagesUI*                    Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowMessagesUI(class UUIAction_ShowMessagesUI* Action)
{
	static UFieldFunc* pFnOnShowMessagesUI = NULL;
	if(!pFnOnShowMessagesUI)
		pFnOnShowMessagesUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowMessagesUI");

	Engine_OnShowMessagesUI_Parms OnShowMessagesUI_Parms;
	OnShowMessagesUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowMessagesUI,NULL,&OnShowMessagesUI_Parms,NULL);
}

struct Engine_DeactivateState_Parms
{
	class UUIState*                                    StateToRemove;                                    		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::DeactivateState(class UUIState* StateToRemove,int PlayerIndex)
{
	static UFieldFunc* pFnDeactivateState = NULL;
	if(!pFnDeactivateState)
		pFnDeactivateState = UObject::FindFunction("Function Engine.UIScreenObject.DeactivateState");

	Engine_DeactivateState_Parms DeactivateState_Parms;
	DeactivateState_Parms.StateToRemove = StateToRemove;
	DeactivateState_Parms.PlayerIndex = PlayerIndex;
	pFnDeactivateState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeactivateState,NULL,&DeactivateState_Parms,NULL);
	pFnDeactivateState->FunctionFlags |= 0x400;
	return DeactivateState_Parms.ReturnValue;
}

struct Engine_Initialized_Parms
{
};

void UUIScreenObject::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UIScreenObject.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_DisableWidget_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::DisableWidget(int PlayerIndex)
{
	static UFieldFunc* pFnDisableWidget = NULL;
	if(!pFnDisableWidget)
		pFnDisableWidget = UObject::FindFunction("Function Engine.UIScreenObject.DisableWidget");

	Engine_DisableWidget_Parms DisableWidget_Parms;
	DisableWidget_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnDisableWidget,NULL,&DisableWidget_Parms,NULL);
	return DisableWidget_Parms.ReturnValue;
}

struct Engine_ContainsChildOfClass_Parms
{
	class UClass*                                      SearchClass;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::ContainsChildOfClass(class UClass* SearchClass,bool bRecurse)
{
	static UFieldFunc* pFnContainsChildOfClass = NULL;
	if(!pFnContainsChildOfClass)
		pFnContainsChildOfClass = UObject::FindFunction("Function Engine.UIScreenObject.ContainsChildOfClass");

	Engine_ContainsChildOfClass_Parms ContainsChildOfClass_Parms;
	ContainsChildOfClass_Parms.SearchClass = SearchClass;
	ContainsChildOfClass_Parms.bRecurse = bRecurse;
	pFnContainsChildOfClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnContainsChildOfClass,NULL,&ContainsChildOfClass_Parms,NULL);
	pFnContainsChildOfClass->FunctionFlags |= 0x400;
	return ContainsChildOfClass_Parms.ReturnValue;
}

struct Engine_GetAspectRatioAutoScaleFactor_Parms
{
	class UFont*                                       BaseFont;                                         		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIScreenObject::GetAspectRatioAutoScaleFactor(class UFont* BaseFont)
{
	static UFieldFunc* pFnGetAspectRatioAutoScaleFactor = NULL;
	if(!pFnGetAspectRatioAutoScaleFactor)
		pFnGetAspectRatioAutoScaleFactor = UObject::FindFunction("Function Engine.UIScreenObject.GetAspectRatioAutoScaleFactor");

	Engine_GetAspectRatioAutoScaleFactor_Parms GetAspectRatioAutoScaleFactor_Parms;
	GetAspectRatioAutoScaleFactor_Parms.BaseFont = BaseFont;
	pFnGetAspectRatioAutoScaleFactor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAspectRatioAutoScaleFactor,NULL,&GetAspectRatioAutoScaleFactor_Parms,NULL);
	pFnGetAspectRatioAutoScaleFactor->FunctionFlags |= 0x400;
	return GetAspectRatioAutoScaleFactor_Parms.ReturnValue;
}

struct Engine_RemoveChild_Parms
{
	class UUIObject*                                   ExistingChild;                                    		// 0x000000 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIScreenObject::RemoveChild(class UUIObject* ExistingChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemoveChild = NULL;
	if(!pFnRemoveChild)
		pFnRemoveChild = UObject::FindFunction("Function Engine.UIScreenObject.RemoveChild");

	Engine_RemoveChild_Parms RemoveChild_Parms;
	RemoveChild_Parms.ExistingChild = ExistingChild;
	memcpy(&RemoveChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	pFnRemoveChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveChild,NULL,&RemoveChild_Parms,NULL);
	pFnRemoveChild->FunctionFlags |= 0x400;
	return RemoveChild_Parms.ReturnValue;
}

struct Engine_GetObjectCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIScreenObject::GetObjectCount()
{
	static UFieldFunc* pFnGetObjectCount = NULL;
	if(!pFnGetObjectCount)
		pFnGetObjectCount = UObject::FindFunction("Function Engine.UIScreenObject.GetObjectCount");

	Engine_GetObjectCount_Parms GetObjectCount_Parms;
	pFnGetObjectCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetObjectCount,NULL,&GetObjectCount_Parms,NULL);
	pFnGetObjectCount->FunctionFlags |= 0x400;
	return GetObjectCount_Parms.ReturnValue;
}

struct Engine_PixelToScreen_Parms
{
	FVector2                                           PixelPosition;                                    		// 0x000000 (0x0008)              
	unsigned char                                      _0x000008[0x8];                                   		// 0x000008 (0x0008) MISSED OFFSET
	struct FVector4                                    ReturnValue;                                      		// 0x000010 (0x0010)              
};

struct FVector4 UUIScreenObject::PixelToScreen(FVector2* PixelPosition)
{
	static UFieldFunc* pFnPixelToScreen = NULL;
	if(!pFnPixelToScreen)
		pFnPixelToScreen = UObject::FindFunction("Function Engine.UIScreenObject.PixelToScreen");

	Engine_PixelToScreen_Parms PixelToScreen_Parms;
	pFnPixelToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPixelToScreen,NULL,&PixelToScreen_Parms,NULL);
	pFnPixelToScreen->FunctionFlags |= 0x400;
	if(PixelPosition)
		memcpy(PixelPosition,&PixelToScreen_Parms.PixelPosition,0x8);
	return PixelToScreen_Parms.ReturnValue;
}

struct Engine_NotifyVisibilityChanged_Parms
{
	class UUIScreenObject*                             SourceWidget;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bIsVisible : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
};

void UUIScreenObject::NotifyVisibilityChanged(class UUIScreenObject* SourceWidget,bool bIsVisible)
{
	static UFieldFunc* pFnNotifyVisibilityChanged = NULL;
	if(!pFnNotifyVisibilityChanged)
		pFnNotifyVisibilityChanged = UObject::FindFunction("Function Engine.UIScreenObject.NotifyVisibilityChanged");

	Engine_NotifyVisibilityChanged_Parms NotifyVisibilityChanged_Parms;
	NotifyVisibilityChanged_Parms.SourceWidget = SourceWidget;
	NotifyVisibilityChanged_Parms.bIsVisible = bIsVisible;
	ProcessEvent(pFnNotifyVisibilityChanged,NULL,&NotifyVisibilityChanged_Parms,NULL);
}

struct Engine_HasLinkConnection_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIScreenObject::HasLinkConnection()
{
	static UFieldFunc* pFnHasLinkConnection = NULL;
	if(!pFnHasLinkConnection)
		pFnHasLinkConnection = UObject::FindFunction("Function Engine.UIScreenObject.HasLinkConnection");

	Engine_HasLinkConnection_Parms HasLinkConnection_Parms;
	ProcessEvent(pFnHasLinkConnection,NULL,&HasLinkConnection_Parms,NULL);
	return HasLinkConnection_Parms.ReturnValue;
}

struct Engine_Initialize_Parms
{
	class UUIScene*                                    inOwnerScene;                                     		// 0x000000 (0x0004)              
	class UUIObject*                                   InOwner;                                          		// 0x000004 (0x0004)              
};

void UUIScreenObject::Initialize(class UUIScene* inOwnerScene,class UUIObject* InOwner)
{
	static UFieldFunc* pFnInitialize = NULL;
	if(!pFnInitialize)
		pFnInitialize = UObject::FindFunction("Function Engine.UIScreenObject.Initialize");

	Engine_Initialize_Parms Initialize_Parms;
	Initialize_Parms.inOwnerScene = inOwnerScene;
	Initialize_Parms.InOwner = InOwner;
	pFnInitialize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitialize,NULL,&Initialize_Parms,NULL);
	pFnInitialize->FunctionFlags |= 0x400;
}

struct Engine_OnShowFriendInviteUI_Parms
{
	class UUIAction_ShowFriendInviteUI*                Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowFriendInviteUI(class UUIAction_ShowFriendInviteUI* Action)
{
	static UFieldFunc* pFnOnShowFriendInviteUI = NULL;
	if(!pFnOnShowFriendInviteUI)
		pFnOnShowFriendInviteUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowFriendInviteUI");

	Engine_OnShowFriendInviteUI_Parms OnShowFriendInviteUI_Parms;
	OnShowFriendInviteUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowFriendInviteUI,NULL,&OnShowFriendInviteUI_Parms,NULL);
}

struct Engine_EnablePlayerInput_Parms
{
	unsigned char                                      PlayerIndex;                                      		// 0x000000 (0x0001)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	//unsigned char                                      NewPlayerInputMask;                               		// 0x000008 (0x0001)              
};

void UUIScreenObject::EnablePlayerInput(unsigned char PlayerIndex,bool bRecurse)
{
	static UFieldFunc* pFnEnablePlayerInput = NULL;
	if(!pFnEnablePlayerInput)
		pFnEnablePlayerInput = UObject::FindFunction("Function Engine.UIScreenObject.EnablePlayerInput");

	Engine_EnablePlayerInput_Parms EnablePlayerInput_Parms;
	EnablePlayerInput_Parms.PlayerIndex = PlayerIndex;
	EnablePlayerInput_Parms.bRecurse = bRecurse;
	ProcessEvent(pFnEnablePlayerInput,NULL,&EnablePlayerInput_Parms,NULL);
}

struct Engine_OnShowPlayersUI_Parms
{
	class UUIAction_ShowPlayersUI*                     Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowPlayersUI(class UUIAction_ShowPlayersUI* Action)
{
	static UFieldFunc* pFnOnShowPlayersUI = NULL;
	if(!pFnOnShowPlayersUI)
		pFnOnShowPlayersUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowPlayersUI");

	Engine_OnShowPlayersUI_Parms OnShowPlayersUI_Parms;
	OnShowPlayersUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowPlayersUI,NULL,&OnShowPlayersUI_Parms,NULL);
}

struct Engine_OnShowFriendsUI_Parms
{
	class UUIAction_ShowFriendsUI*                     Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowFriendsUI(class UUIAction_ShowFriendsUI* Action)
{
	static UFieldFunc* pFnOnShowFriendsUI = NULL;
	if(!pFnOnShowFriendsUI)
		pFnOnShowFriendsUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowFriendsUI");

	Engine_OnShowFriendsUI_Parms OnShowFriendsUI_Parms;
	OnShowFriendsUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowFriendsUI,NULL,&OnShowFriendsUI_Parms,NULL);
}

struct Engine_GetViewportScale_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScreenObject::GetViewportScale()
{
	static UFieldFunc* pFnGetViewportScale = NULL;
	if(!pFnGetViewportScale)
		pFnGetViewportScale = UObject::FindFunction("Function Engine.UIScreenObject.GetViewportScale");

	Engine_GetViewportScale_Parms GetViewportScale_Parms;
	pFnGetViewportScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportScale,NULL,&GetViewportScale_Parms,NULL);
	pFnGetViewportScale->FunctionFlags |= 0x400;
	return GetViewportScale_Parms.ReturnValue;
}

struct Engine_SetInputMask_Parms
{
	unsigned char                                      NewInputMask;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000008 (0x0004)              
};

void UUIScreenObject::SetInputMask(unsigned char NewInputMask,bool bRecurse)
{
	static UFieldFunc* pFnSetInputMask = NULL;
	if(!pFnSetInputMask)
		pFnSetInputMask = UObject::FindFunction("Function Engine.UIScreenObject.SetInputMask");

	Engine_SetInputMask_Parms SetInputMask_Parms;
	SetInputMask_Parms.NewInputMask = NewInputMask;
	SetInputMask_Parms.bRecurse = bRecurse;
	ProcessEvent(pFnSetInputMask,NULL,&SetInputMask_Parms,NULL);
}

struct Engine_GetViewportWidth_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScreenObject::GetViewportWidth()
{
	static UFieldFunc* pFnGetViewportWidth = NULL;
	if(!pFnGetViewportWidth)
		pFnGetViewportWidth = UObject::FindFunction("Function Engine.UIScreenObject.GetViewportWidth");

	Engine_GetViewportWidth_Parms GetViewportWidth_Parms;
	pFnGetViewportWidth->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportWidth,NULL,&GetViewportWidth_Parms,NULL);
	pFnGetViewportWidth->FunctionFlags |= 0x400;
	return GetViewportWidth_Parms.ReturnValue;
}

struct Engine_NotifyPositionChanged_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
};

void UUIScreenObject::NotifyPositionChanged(class UUIScreenObject* Sender)
{
	static UFieldFunc* pFnNotifyPositionChanged = NULL;
	if(!pFnNotifyPositionChanged)
		pFnNotifyPositionChanged = UObject::FindFunction("Function Engine.UIScreenObject.NotifyPositionChanged");

	Engine_NotifyPositionChanged_Parms NotifyPositionChanged_Parms;
	NotifyPositionChanged_Parms.Sender = Sender;
	ProcessEvent(pFnNotifyPositionChanged,NULL,&NotifyPositionChanged_Parms,NULL);
}

struct Engine_NotifyActiveSkinChanged_Parms
{
};

void UUIScreenObject::NotifyActiveSkinChanged()
{
	static UFieldFunc* pFnNotifyActiveSkinChanged = NULL;
	if(!pFnNotifyActiveSkinChanged)
		pFnNotifyActiveSkinChanged = UObject::FindFunction("Function Engine.UIScreenObject.NotifyActiveSkinChanged");

	Engine_NotifyActiveSkinChanged_Parms NotifyActiveSkinChanged_Parms;
	ProcessEvent(pFnNotifyActiveSkinChanged,NULL,&NotifyActiveSkinChanged_Parms,NULL);
}

struct Engine_OnShowFeedbackUI_Parms
{
	class UUIAction_ShowFeedbackUI*                    Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowFeedbackUI(class UUIAction_ShowFeedbackUI* Action)
{
	static UFieldFunc* pFnOnShowFeedbackUI = NULL;
	if(!pFnOnShowFeedbackUI)
		pFnOnShowFeedbackUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowFeedbackUI");

	Engine_OnShowFeedbackUI_Parms OnShowFeedbackUI_Parms;
	OnShowFeedbackUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowFeedbackUI,NULL,&OnShowFeedbackUI_Parms,NULL);
}

struct Engine_IsLoggedIn_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bRequireOnlineLogin : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsLoggedIn(int ControllerId,bool bRequireOnlineLogin)
{
	static UFieldFunc* pFnIsLoggedIn = NULL;
	if(!pFnIsLoggedIn)
		pFnIsLoggedIn = UObject::FindFunction("Function Engine.UIScreenObject.IsLoggedIn");

	Engine_IsLoggedIn_Parms IsLoggedIn_Parms;
	IsLoggedIn_Parms.ControllerId = ControllerId;
	IsLoggedIn_Parms.bRequireOnlineLogin = bRequireOnlineLogin;
	ProcessEvent(pFnIsLoggedIn,NULL,&IsLoggedIn_Parms,NULL);
	return IsLoggedIn_Parms.ReturnValue;
}

struct Engine_CanvasToScreen_Parms
{
	FVector3                                           CanvasPosition;                                   		// 0x000000 (0x000C)              
	unsigned char                                      _0x00000C[0x4];                                   		// 0x00000C (0x0004) MISSED OFFSET
	struct FVector4                                    ReturnValue;                                      		// 0x000010 (0x0010)              
};

struct FVector4 UUIScreenObject::CanvasToScreen(FVector3* CanvasPosition)
{
	static UFieldFunc* pFnCanvasToScreen = NULL;
	if(!pFnCanvasToScreen)
		pFnCanvasToScreen = UObject::FindFunction("Function Engine.UIScreenObject.CanvasToScreen");

	Engine_CanvasToScreen_Parms CanvasToScreen_Parms;
	pFnCanvasToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanvasToScreen,NULL,&CanvasToScreen_Parms,NULL);
	pFnCanvasToScreen->FunctionFlags |= 0x400;
	if(CanvasPosition)
		memcpy(CanvasPosition,&CanvasToScreen_Parms.CanvasPosition,0xC);
	return CanvasToScreen_Parms.ReturnValue;
}

struct Engine_NotifyResolutionChanged_Parms
{
	FVector2                                           OldViewportsize;                                  		// 0x000000 (0x0008)              
	FVector2                                           NewViewportSize;                                  		// 0x000008 (0x0008)              
};

void UUIScreenObject::NotifyResolutionChanged(FVector2* OldViewportsize,FVector2* NewViewportSize)
{
	static UFieldFunc* pFnNotifyResolutionChanged = NULL;
	if(!pFnNotifyResolutionChanged)
		pFnNotifyResolutionChanged = UObject::FindFunction("Function Engine.UIScreenObject.NotifyResolutionChanged");

	Engine_NotifyResolutionChanged_Parms NotifyResolutionChanged_Parms;
	ProcessEvent(pFnNotifyResolutionChanged,NULL,&NotifyResolutionChanged_Parms,NULL);
	if(OldViewportsize)
		memcpy(OldViewportsize,&NotifyResolutionChanged_Parms.OldViewportsize,0x8);
	if(NewViewportSize)
		memcpy(NewViewportSize,&NotifyResolutionChanged_Parms.NewViewportSize,0x8);
}

struct Engine_FocusLastControl_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::FocusLastControl(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnFocusLastControl = NULL;
	if(!pFnFocusLastControl)
		pFnFocusLastControl = UObject::FindFunction("Function Engine.UIScreenObject.FocusLastControl");

	Engine_FocusLastControl_Parms FocusLastControl_Parms;
	FocusLastControl_Parms.Sender = Sender;
	FocusLastControl_Parms.PlayerIndex = PlayerIndex;
	pFnFocusLastControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFocusLastControl,NULL,&FocusLastControl_Parms,NULL);
	pFnFocusLastControl->FunctionFlags |= 0x400;
	return FocusLastControl_Parms.ReturnValue;
}

struct Engine_GetCanvasToScreen_Parms
{
	FMatrix                                            ReturnValue;                                      		// 0x000000 (0x0040)              
};

FMatrix UUIScreenObject::GetCanvasToScreen()
{
	static UFieldFunc* pFnGetCanvasToScreen = NULL;
	if(!pFnGetCanvasToScreen)
		pFnGetCanvasToScreen = UObject::FindFunction("Function Engine.UIScreenObject.GetCanvasToScreen");

	Engine_GetCanvasToScreen_Parms GetCanvasToScreen_Parms;
	pFnGetCanvasToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCanvasToScreen,NULL,&GetCanvasToScreen_Parms,NULL);
	pFnGetCanvasToScreen->FunctionFlags |= 0x400;
	return GetCanvasToScreen_Parms.ReturnValue;
}

struct Engine_FindChild_Parms
{
	struct FName                                       WidgetName;                                       		// 0x000000 (0x0008)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000008 (0x0004) [0x00000001] 
	class UUIObject*                                   ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UUIObject* UUIScreenObject::FindChild(struct FName WidgetName,bool bRecurse)
{
	static UFieldFunc* pFnFindChild = NULL;
	if(!pFnFindChild)
		pFnFindChild = UObject::FindFunction("Function Engine.UIScreenObject.FindChild");

	Engine_FindChild_Parms FindChild_Parms;
	memcpy(&FindChild_Parms.WidgetName,&WidgetName,0x8);
	FindChild_Parms.bRecurse = bRecurse;
	pFnFindChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindChild,NULL,&FindChild_Parms,NULL);
	pFnFindChild->FunctionFlags |= 0x400;
	return FindChild_Parms.ReturnValue;
}

struct Engine_GetDockedWidgets_Parms
{
	TArray<class UUIObject*>                           out_DockedWidgets;                                		// 0x000000 (0x000C)              
	unsigned char                                      SourceFace;                                       		// 0x00000C (0x0001)              
	unsigned char                                      TargetFace;                                       		// 0x00000D (0x0001)              
};

void UUIScreenObject::GetDockedWidgets(TArray<class UUIObject*>* out_DockedWidgets,unsigned char SourceFace,unsigned char TargetFace)
{
	static UFieldFunc* pFnGetDockedWidgets = NULL;
	if(!pFnGetDockedWidgets)
		pFnGetDockedWidgets = UObject::FindFunction("Function Engine.UIScreenObject.GetDockedWidgets");

	Engine_GetDockedWidgets_Parms GetDockedWidgets_Parms;
	GetDockedWidgets_Parms.SourceFace = SourceFace;
	GetDockedWidgets_Parms.TargetFace = TargetFace;
	pFnGetDockedWidgets->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDockedWidgets,NULL,&GetDockedWidgets_Parms,NULL);
	pFnGetDockedWidgets->FunctionFlags |= 0x400;
	if(out_DockedWidgets)
		memcpy(out_DockedWidgets,&GetDockedWidgets_Parms.out_DockedWidgets,0xC);
}

struct Engine_RemovedFromParent_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
};

void UUIScreenObject::RemovedFromParent(class UUIScreenObject* WidgetOwner)
{
	static UFieldFunc* pFnRemovedFromParent = NULL;
	if(!pFnRemovedFromParent)
		pFnRemovedFromParent = UObject::FindFunction("Function Engine.UIScreenObject.RemovedFromParent");

	Engine_RemovedFromParent_Parms RemovedFromParent_Parms;
	RemovedFromParent_Parms.WidgetOwner = WidgetOwner;
	ProcessEvent(pFnRemovedFromParent,NULL,&RemovedFromParent_Parms,NULL);
}

struct Engine_ConditionalPropagateEnabledState_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bForce : 1;                                       		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::ConditionalPropagateEnabledState(int PlayerIndex,bool bForce)
{
	static UFieldFunc* pFnConditionalPropagateEnabledState = NULL;
	if(!pFnConditionalPropagateEnabledState)
		pFnConditionalPropagateEnabledState = UObject::FindFunction("Function Engine.UIScreenObject.ConditionalPropagateEnabledState");

	Engine_ConditionalPropagateEnabledState_Parms ConditionalPropagateEnabledState_Parms;
	ConditionalPropagateEnabledState_Parms.PlayerIndex = PlayerIndex;
	ConditionalPropagateEnabledState_Parms.bForce = bForce;
	pFnConditionalPropagateEnabledState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnConditionalPropagateEnabledState,NULL,&ConditionalPropagateEnabledState_Parms,NULL);
	pFnConditionalPropagateEnabledState->FunctionFlags |= 0x400;
	return ConditionalPropagateEnabledState_Parms.ReturnValue;
}

struct Engine_GetNATType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UUIScreenObject::GetNATType()
{
	static UFieldFunc* pFnGetNATType = NULL;
	if(!pFnGetNATType)
		pFnGetNATType = UObject::FindFunction("Function Engine.UIScreenObject.GetNATType");

	Engine_GetNATType_Parms GetNATType_Parms;
	ProcessEvent(pFnGetNATType,NULL,&GetNATType_Parms,NULL);
	return GetNATType_Parms.ReturnValue;
}

struct Engine_GetViewportOrigin_Parms
{
	FVector2                                           out_ViewportOrigin;                               		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::GetViewportOrigin(FVector2* out_ViewportOrigin)
{
	static UFieldFunc* pFnGetViewportOrigin = NULL;
	if(!pFnGetViewportOrigin)
		pFnGetViewportOrigin = UObject::FindFunction("Function Engine.UIScreenObject.GetViewportOrigin");

	Engine_GetViewportOrigin_Parms GetViewportOrigin_Parms;
	pFnGetViewportOrigin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportOrigin,NULL,&GetViewportOrigin_Parms,NULL);
	pFnGetViewportOrigin->FunctionFlags |= 0x400;
	if(out_ViewportOrigin)
		memcpy(out_ViewportOrigin,&GetViewportOrigin_Parms.out_ViewportOrigin,0x8);
	return GetViewportOrigin_Parms.ReturnValue;
}

struct Engine_GetSupportedUIActionKeyNames_Parms
{
	TArray<struct FName>                               out_KeyNames;                                     		// 0x000000 (0x000C)              
};

void UUIScreenObject::GetSupportedUIActionKeyNames(TArray<struct FName>* out_KeyNames)
{
	static UFieldFunc* pFnGetSupportedUIActionKeyNames = NULL;
	if(!pFnGetSupportedUIActionKeyNames)
		pFnGetSupportedUIActionKeyNames = UObject::FindFunction("Function Engine.UIScreenObject.GetSupportedUIActionKeyNames");

	Engine_GetSupportedUIActionKeyNames_Parms GetSupportedUIActionKeyNames_Parms;
	ProcessEvent(pFnGetSupportedUIActionKeyNames,NULL,&GetSupportedUIActionKeyNames_Parms,NULL);
	if(out_KeyNames)
		memcpy(out_KeyNames,&GetSupportedUIActionKeyNames_Parms.out_KeyNames,0xC);
}

struct Engine_InitializePlayerTracking_Parms
{
};

void UUIScreenObject::InitializePlayerTracking()
{
	static UFieldFunc* pFnInitializePlayerTracking = NULL;
	if(!pFnInitializePlayerTracking)
		pFnInitializePlayerTracking = UObject::FindFunction("Function Engine.UIScreenObject.InitializePlayerTracking");

	Engine_InitializePlayerTracking_Parms InitializePlayerTracking_Parms;
	pFnInitializePlayerTracking->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitializePlayerTracking,NULL,&InitializePlayerTracking_Parms,NULL);
	pFnInitializePlayerTracking->FunctionFlags |= 0x400;
}

struct Engine_InsertChild_Parms
{
	class UUIObject*                                   NewChild;                                         		// 0x000000 (0x0004)              
	int                                                InsertIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bRenameExisting : 1;                              		// 0x000008 (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UUIScreenObject::InsertChild(class UUIObject* NewChild,int InsertIndex,bool bRenameExisting)
{
	static UFieldFunc* pFnInsertChild = NULL;
	if(!pFnInsertChild)
		pFnInsertChild = UObject::FindFunction("Function Engine.UIScreenObject.InsertChild");

	Engine_InsertChild_Parms InsertChild_Parms;
	InsertChild_Parms.NewChild = NewChild;
	InsertChild_Parms.InsertIndex = InsertIndex;
	InsertChild_Parms.bRenameExisting = bRenameExisting;
	pFnInsertChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInsertChild,NULL,&InsertChild_Parms,NULL);
	pFnInsertChild->FunctionFlags |= 0x400;
	return InsertChild_Parms.ReturnValue;
}

struct Engine_GetPosition_Parms
{
	unsigned char                                      Face;                                             		// 0x000000 (0x0001)              
	unsigned char                                      OutputType;                                       		// 0x000001 (0x0001)              
	unsigned long                                      bZeroOrigin : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bIgnoreDockPadding : 1;                           		// 0x000008 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float UUIScreenObject::GetPosition(unsigned char Face,unsigned char OutputType,bool bZeroOrigin,bool bIgnoreDockPadding)
{
	static UFieldFunc* pFnGetPosition = NULL;
	if(!pFnGetPosition)
		pFnGetPosition = UObject::FindFunction("Function Engine.UIScreenObject.GetPosition");

	Engine_GetPosition_Parms GetPosition_Parms;
	GetPosition_Parms.Face = Face;
	GetPosition_Parms.OutputType = OutputType;
	GetPosition_Parms.bZeroOrigin = bZeroOrigin;
	GetPosition_Parms.bIgnoreDockPadding = bIgnoreDockPadding;
	pFnGetPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPosition,NULL,&GetPosition_Parms,NULL);
	pFnGetPosition->FunctionFlags |= 0x400;
	return GetPosition_Parms.ReturnValue;
}

struct Engine_CanPropagateFocusFor_Parms
{
	class UUIObject*                                   TestChild;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::CanPropagateFocusFor(class UUIObject* TestChild)
{
	static UFieldFunc* pFnCanPropagateFocusFor = NULL;
	if(!pFnCanPropagateFocusFor)
		pFnCanPropagateFocusFor = UObject::FindFunction("Function Engine.UIScreenObject.CanPropagateFocusFor");

	Engine_CanPropagateFocusFor_Parms CanPropagateFocusFor_Parms;
	CanPropagateFocusFor_Parms.TestChild = TestChild;
	pFnCanPropagateFocusFor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanPropagateFocusFor,NULL,&CanPropagateFocusFor_Parms,NULL);
	pFnCanPropagateFocusFor->FunctionFlags |= 0x400;
	return CanPropagateFocusFor_Parms.ReturnValue;
}

struct Engine_RebuildNavigationLinks_Parms
{
};

void UUIScreenObject::RebuildNavigationLinks()
{
	static UFieldFunc* pFnRebuildNavigationLinks = NULL;
	if(!pFnRebuildNavigationLinks)
		pFnRebuildNavigationLinks = UObject::FindFunction("Function Engine.UIScreenObject.RebuildNavigationLinks");

	Engine_RebuildNavigationLinks_Parms RebuildNavigationLinks_Parms;
	pFnRebuildNavigationLinks->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRebuildNavigationLinks,NULL,&RebuildNavigationLinks_Parms,NULL);
	pFnRebuildNavigationLinks->FunctionFlags |= 0x400;
}

struct Engine_HasActiveStateOfClass_Parms
{
	class UClass*                                      StateClass;                                       		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	int                                                StateIndex;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScreenObject::HasActiveStateOfClass(class UClass* StateClass,int PlayerIndex,int* StateIndex)
{
	static UFieldFunc* pFnHasActiveStateOfClass = NULL;
	if(!pFnHasActiveStateOfClass)
		pFnHasActiveStateOfClass = UObject::FindFunction("Function Engine.UIScreenObject.HasActiveStateOfClass");

	Engine_HasActiveStateOfClass_Parms HasActiveStateOfClass_Parms;
	HasActiveStateOfClass_Parms.StateClass = StateClass;
	HasActiveStateOfClass_Parms.PlayerIndex = PlayerIndex;
	pFnHasActiveStateOfClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasActiveStateOfClass,NULL,&HasActiveStateOfClass_Parms,NULL);
	pFnHasActiveStateOfClass->FunctionFlags |= 0x400;
	if(StateIndex)
		*StateIndex = HasActiveStateOfClass_Parms.StateIndex;
	return HasActiveStateOfClass_Parms.ReturnValue;
}

struct Engine_OnShowAchievementsUI_Parms
{
	class UUIAction_ShowAchievementsUI*                Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowAchievementsUI(class UUIAction_ShowAchievementsUI* Action)
{
	static UFieldFunc* pFnOnShowAchievementsUI = NULL;
	if(!pFnOnShowAchievementsUI)
		pFnOnShowAchievementsUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowAchievementsUI");

	Engine_OnShowAchievementsUI_Parms OnShowAchievementsUI_Parms;
	OnShowAchievementsUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowAchievementsUI,NULL,&OnShowAchievementsUI_Parms,NULL);
}

struct Engine_IsNeverFocused_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsNeverFocused()
{
	static UFieldFunc* pFnIsNeverFocused = NULL;
	if(!pFnIsNeverFocused)
		pFnIsNeverFocused = UObject::FindFunction("Function Engine.UIScreenObject.IsNeverFocused");

	Engine_IsNeverFocused_Parms IsNeverFocused_Parms;
	pFnIsNeverFocused->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsNeverFocused,NULL,&IsNeverFocused_Parms,NULL);
	pFnIsNeverFocused->FunctionFlags |= 0x400;
	return IsNeverFocused_Parms.ReturnValue;
}

struct Engine_GetBounds_Parms
{
	unsigned char                                      Dimension;                                        		// 0x000000 (0x0001)              
	unsigned char                                      OutputType;                                       		// 0x000001 (0x0001)              
	unsigned long                                      bIgnoreDockPadding : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float UUIScreenObject::GetBounds(unsigned char Dimension,unsigned char OutputType,bool bIgnoreDockPadding)
{
	static UFieldFunc* pFnGetBounds = NULL;
	if(!pFnGetBounds)
		pFnGetBounds = UObject::FindFunction("Function Engine.UIScreenObject.GetBounds");

	Engine_GetBounds_Parms GetBounds_Parms;
	GetBounds_Parms.Dimension = Dimension;
	GetBounds_Parms.OutputType = OutputType;
	GetBounds_Parms.bIgnoreDockPadding = bIgnoreDockPadding;
	pFnGetBounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBounds,NULL,&GetBounds_Parms,NULL);
	pFnGetBounds->FunctionFlags |= 0x400;
	return GetBounds_Parms.ReturnValue;
}

struct Engine_IsHoldingCtrl_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsHoldingCtrl(int ControllerId)
{
	static UFieldFunc* pFnIsHoldingCtrl = NULL;
	if(!pFnIsHoldingCtrl)
		pFnIsHoldingCtrl = UObject::FindFunction("Function Engine.UIScreenObject.IsHoldingCtrl");

	Engine_IsHoldingCtrl_Parms IsHoldingCtrl_Parms;
	IsHoldingCtrl_Parms.ControllerId = ControllerId;
	pFnIsHoldingCtrl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsHoldingCtrl,NULL,&IsHoldingCtrl_Parms,NULL);
	pFnIsHoldingCtrl->FunctionFlags |= 0x400;
	return IsHoldingCtrl_Parms.ReturnValue;
}

struct Engine_NotifyActiveStateChanged_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    NewlyActiveState;                                 		// 0x000008 (0x0004)              
	class UUIState*                                    PreviouslyActiveState;                            		// 0x00000C (0x0004)              
};

void UUIScreenObject::NotifyActiveStateChanged(class UUIScreenObject* Sender,int PlayerIndex,class UUIState* NewlyActiveState,class UUIState* PreviouslyActiveState)
{
	static UFieldFunc* pFnNotifyActiveStateChanged = NULL;
	if(!pFnNotifyActiveStateChanged)
		pFnNotifyActiveStateChanged = UObject::FindFunction("Function Engine.UIScreenObject.NotifyActiveStateChanged");

	Engine_NotifyActiveStateChanged_Parms NotifyActiveStateChanged_Parms;
	NotifyActiveStateChanged_Parms.Sender = Sender;
	NotifyActiveStateChanged_Parms.PlayerIndex = PlayerIndex;
	NotifyActiveStateChanged_Parms.NewlyActiveState = NewlyActiveState;
	NotifyActiveStateChanged_Parms.PreviouslyActiveState = PreviouslyActiveState;
	ProcessEvent(pFnNotifyActiveStateChanged,NULL,&NotifyActiveStateChanged_Parms,NULL);
}

struct Engine_OnRawInputKey_Parms
{
	struct FInputEventParameters                       EventParms;                                       		// 0x000000 (0x0020)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUIScreenObject::OnRawInputKey(struct FInputEventParameters* EventParms)
{
	static UFieldFunc* pFnOnRawInputKey = NULL;
	if(!pFnOnRawInputKey)
		pFnOnRawInputKey = UObject::FindFunction("Function Engine.UIScreenObject.OnRawInputKey");

	Engine_OnRawInputKey_Parms OnRawInputKey_Parms;
	ProcessEvent(pFnOnRawInputKey,NULL,&OnRawInputKey_Parms,NULL);
	if(EventParms)
		memcpy(EventParms,&OnRawInputKey_Parms.EventParms,0x20);
	return OnRawInputKey_Parms.ReturnValue;
}

struct Engine_Project_Parms
{
	FVector3                                           CanvasPosition;                                   		// 0x000000 (0x000C)              
	FVector3                                           ReturnValue;                                      		// 0x00000C (0x000C)              
};

FVector3 UUIScreenObject::Project(FVector3* CanvasPosition)
{
	static UFieldFunc* pFnProject = NULL;
	if(!pFnProject)
		pFnProject = UObject::FindFunction("Function Engine.UIScreenObject.Project");

	Engine_Project_Parms Project_Parms;
	pFnProject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnProject,NULL,&Project_Parms,NULL);
	pFnProject->FunctionFlags |= 0x400;
	if(CanvasPosition)
		memcpy(CanvasPosition,&Project_Parms.CanvasPosition,0xC);
	return Project_Parms.ReturnValue;
}

struct Engine_GetBestPlayerIndex_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIScreenObject::GetBestPlayerIndex()
{
	static UFieldFunc* pFnGetBestPlayerIndex = NULL;
	if(!pFnGetBestPlayerIndex)
		pFnGetBestPlayerIndex = UObject::FindFunction("Function Engine.UIScreenObject.GetBestPlayerIndex");

	Engine_GetBestPlayerIndex_Parms GetBestPlayerIndex_Parms;
	pFnGetBestPlayerIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBestPlayerIndex,NULL,&GetBestPlayerIndex_Parms,NULL);
	pFnGetBestPlayerIndex->FunctionFlags |= 0x400;
	return GetBestPlayerIndex_Parms.ReturnValue;
}

struct Engine_SetVisibility_Parms
{
	unsigned long                                      bIsVisible : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScreenObject::SetVisibility(bool bIsVisible)
{
	static UFieldFunc* pFnSetVisibility = NULL;
	if(!pFnSetVisibility)
		pFnSetVisibility = UObject::FindFunction("Function Engine.UIScreenObject.SetVisibility");

	Engine_SetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.bIsVisible = bIsVisible;
	pFnSetVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVisibility,NULL,&SetVisibility_Parms,NULL);
	pFnSetVisibility->FunctionFlags |= 0x400;
}

struct Engine_IsHidden_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsHidden()
{
	static UFieldFunc* pFnIsHidden = NULL;
	if(!pFnIsHidden)
		pFnIsHidden = UObject::FindFunction("Function Engine.UIScreenObject.IsHidden");

	Engine_IsHidden_Parms IsHidden_Parms;
	ProcessEvent(pFnIsHidden,NULL,&IsHidden_Parms,NULL);
	return IsHidden_Parms.ReturnValue;
}

struct Engine_GetParent_Parms
{
	class UUIScreenObject*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScreenObject* UUIScreenObject::GetParent()
{
	static UFieldFunc* pFnGetParent = NULL;
	if(!pFnGetParent)
		pFnGetParent = UObject::FindFunction("Function Engine.UIScreenObject.GetParent");

	Engine_GetParent_Parms GetParent_Parms;
	ProcessEvent(pFnGetParent,NULL,&GetParent_Parms,NULL);
	return GetParent_Parms.ReturnValue;
}

struct Engine_CanPlayOnline_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::CanPlayOnline(int ControllerId)
{
	static UFieldFunc* pFnCanPlayOnline = NULL;
	if(!pFnCanPlayOnline)
		pFnCanPlayOnline = UObject::FindFunction("Function Engine.UIScreenObject.CanPlayOnline");

	Engine_CanPlayOnline_Parms CanPlayOnline_Parms;
	CanPlayOnline_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnCanPlayOnline,NULL,&CanPlayOnline_Parms,NULL);
	return CanPlayOnline_Parms.ReturnValue;
}

struct Engine_ScreenToPixel_Parms
{
	struct FVector4                                    ScreenPosition;                                   		// 0x000000 (0x0010)              
	FVector2                                           ReturnValue;                                      		// 0x000010 (0x0008)              
};

FVector2 UUIScreenObject::ScreenToPixel(struct FVector4* ScreenPosition)
{
	static UFieldFunc* pFnScreenToPixel = NULL;
	if(!pFnScreenToPixel)
		pFnScreenToPixel = UObject::FindFunction("Function Engine.UIScreenObject.ScreenToPixel");

	Engine_ScreenToPixel_Parms ScreenToPixel_Parms;
	pFnScreenToPixel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScreenToPixel,NULL,&ScreenToPixel_Parms,NULL);
	pFnScreenToPixel->FunctionFlags |= 0x400;
	if(ScreenPosition)
		memcpy(ScreenPosition,&ScreenToPixel_Parms.ScreenPosition,0x10);
	return ScreenToPixel_Parms.ReturnValue;
}

struct Engine_GetBestControllerId_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                LP;                                               		// 0x000004 (0x0004)              
	//int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	//int                                                ControllerId;                                     		// 0x00000C (0x0004)              
};

int UUIScreenObject::GetBestControllerId()
{
	static UFieldFunc* pFnGetBestControllerId = NULL;
	if(!pFnGetBestControllerId)
		pFnGetBestControllerId = UObject::FindFunction("Function Engine.UIScreenObject.GetBestControllerId");

	Engine_GetBestControllerId_Parms GetBestControllerId_Parms;
	ProcessEvent(pFnGetBestControllerId,NULL,&GetBestControllerId_Parms,NULL);
	return GetBestControllerId_Parms.ReturnValue;
}

struct Engine_FindChildUsingID_Parms
{
	struct FWIDGET_ID                                  WidgetID;                                         		// 0x000000 (0x0010)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000010 (0x0004) [0x00000001] 
	class UUIObject*                                   ReturnValue;                                      		// 0x000014 (0x0004)              
};

class UUIObject* UUIScreenObject::FindChildUsingID(struct FWIDGET_ID WidgetID,bool bRecurse)
{
	static UFieldFunc* pFnFindChildUsingID = NULL;
	if(!pFnFindChildUsingID)
		pFnFindChildUsingID = UObject::FindFunction("Function Engine.UIScreenObject.FindChildUsingID");

	Engine_FindChildUsingID_Parms FindChildUsingID_Parms;
	memcpy(&FindChildUsingID_Parms.WidgetID,&WidgetID,0x10);
	FindChildUsingID_Parms.bRecurse = bRecurse;
	pFnFindChildUsingID->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindChildUsingID,NULL,&FindChildUsingID_Parms,NULL);
	pFnFindChildUsingID->FunctionFlags |= 0x400;
	return FindChildUsingID_Parms.ReturnValue;
}

struct Engine_CanAcceptFocus_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::CanAcceptFocus(int PlayerIndex)
{
	static UFieldFunc* pFnCanAcceptFocus = NULL;
	if(!pFnCanAcceptFocus)
		pFnCanAcceptFocus = UObject::FindFunction("Function Engine.UIScreenObject.CanAcceptFocus");

	Engine_CanAcceptFocus_Parms CanAcceptFocus_Parms;
	CanAcceptFocus_Parms.PlayerIndex = PlayerIndex;
	pFnCanAcceptFocus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanAcceptFocus,NULL,&CanAcceptFocus_Parms,NULL);
	pFnCanAcceptFocus->FunctionFlags |= 0x400;
	return CanAcceptFocus_Parms.ReturnValue;
}

struct Engine_OverrideLastFocusedControl_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   ChildToFocus;                                     		// 0x000004 (0x0004)              
};

void UUIScreenObject::OverrideLastFocusedControl(int PlayerIndex,class UUIObject* ChildToFocus)
{
	static UFieldFunc* pFnOverrideLastFocusedControl = NULL;
	if(!pFnOverrideLastFocusedControl)
		pFnOverrideLastFocusedControl = UObject::FindFunction("Function Engine.UIScreenObject.OverrideLastFocusedControl");

	Engine_OverrideLastFocusedControl_Parms OverrideLastFocusedControl_Parms;
	OverrideLastFocusedControl_Parms.PlayerIndex = PlayerIndex;
	OverrideLastFocusedControl_Parms.ChildToFocus = ChildToFocus;
	pFnOverrideLastFocusedControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOverrideLastFocusedControl,NULL,&OverrideLastFocusedControl_Parms,NULL);
	pFnOverrideLastFocusedControl->FunctionFlags |= 0x400;
}

struct Engine_OnShowMembershipMarketplaceUI_Parms
{
	class UUIAction_ShowMembershipMarketplaceUI*       Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowMembershipMarketplaceUI(class UUIAction_ShowMembershipMarketplaceUI* Action)
{
	static UFieldFunc* pFnOnShowMembershipMarketplaceUI = NULL;
	if(!pFnOnShowMembershipMarketplaceUI)
		pFnOnShowMembershipMarketplaceUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowMembershipMarketplaceUI");

	Engine_OnShowMembershipMarketplaceUI_Parms OnShowMembershipMarketplaceUI_Parms;
	OnShowMembershipMarketplaceUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowMembershipMarketplaceUI,NULL,&OnShowMembershipMarketplaceUI_Parms,NULL);
}

struct Engine_DeactivateStateByClass_Parms
{
	class UClass*                                      StateToRemove;                                    		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    StateThatWasRemoved;                              		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScreenObject::DeactivateStateByClass(class UClass* StateToRemove,int PlayerIndex,class UUIState** StateThatWasRemoved)
{
	static UFieldFunc* pFnDeactivateStateByClass = NULL;
	if(!pFnDeactivateStateByClass)
		pFnDeactivateStateByClass = UObject::FindFunction("Function Engine.UIScreenObject.DeactivateStateByClass");

	Engine_DeactivateStateByClass_Parms DeactivateStateByClass_Parms;
	DeactivateStateByClass_Parms.StateToRemove = StateToRemove;
	DeactivateStateByClass_Parms.PlayerIndex = PlayerIndex;
	pFnDeactivateStateByClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeactivateStateByClass,NULL,&DeactivateStateByClass_Parms,NULL);
	pFnDeactivateStateByClass->FunctionFlags |= 0x400;
	if(StateThatWasRemoved)
		*StateThatWasRemoved = DeactivateStateByClass_Parms.StateThatWasRemoved;
	return DeactivateStateByClass_Parms.ReturnValue;
}

struct Engine_CreateWidget_Parms
{
	class UUIScreenObject*                             Owner;                                            		// 0x000000 (0x0004)              
	class UClass*                                      WidgetClass;                                      		// 0x000004 (0x0004)              
	class UObject*                                     WidgetArchetype;                                  		// 0x000008 (0x0004)              
	struct FName                                       WidgetName;                                       		// 0x00000C (0x0008)              
	class UUIObject*                                   ReturnValue;                                      		// 0x000014 (0x0004)              
};

class UUIObject* UUIScreenObject::CreateWidget(class UUIScreenObject* Owner,class UClass* WidgetClass,class UObject* WidgetArchetype,struct FName WidgetName)
{
	static UFieldFunc* pFnCreateWidget = NULL;
	if(!pFnCreateWidget)
		pFnCreateWidget = UObject::FindFunction("Function Engine.UIScreenObject.CreateWidget");

	Engine_CreateWidget_Parms CreateWidget_Parms;
	CreateWidget_Parms.Owner = Owner;
	CreateWidget_Parms.WidgetClass = WidgetClass;
	CreateWidget_Parms.WidgetArchetype = WidgetArchetype;
	memcpy(&CreateWidget_Parms.WidgetName,&WidgetName,0x8);
	pFnCreateWidget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateWidget,NULL,&CreateWidget_Parms,NULL);
	pFnCreateWidget->FunctionFlags |= 0x400;
	return CreateWidget_Parms.ReturnValue;
}

struct Engine_GetActivePlayerCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIScreenObject::GetActivePlayerCount()
{
	static UFieldFunc* pFnGetActivePlayerCount = NULL;
	if(!pFnGetActivePlayerCount)
		pFnGetActivePlayerCount = UObject::FindFunction("Function Engine.UIScreenObject.GetActivePlayerCount");

	Engine_GetActivePlayerCount_Parms GetActivePlayerCount_Parms;
	pFnGetActivePlayerCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActivePlayerCount,NULL,&GetActivePlayerCount_Parms,NULL);
	pFnGetActivePlayerCount->FunctionFlags |= 0x400;
	return GetActivePlayerCount_Parms.ReturnValue;
}

struct Engine_GetViewportHeight_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScreenObject::GetViewportHeight()
{
	static UFieldFunc* pFnGetViewportHeight = NULL;
	if(!pFnGetViewportHeight)
		pFnGetViewportHeight = UObject::FindFunction("Function Engine.UIScreenObject.GetViewportHeight");

	Engine_GetViewportHeight_Parms GetViewportHeight_Parms;
	pFnGetViewportHeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportHeight,NULL,&GetViewportHeight_Parms,NULL);
	pFnGetViewportHeight->FunctionFlags |= 0x400;
	return GetViewportHeight_Parms.ReturnValue;
}

struct Engine_RequestFormattingUpdate_Parms
{
};

void UUIScreenObject::RequestFormattingUpdate()
{
	static UFieldFunc* pFnRequestFormattingUpdate = NULL;
	if(!pFnRequestFormattingUpdate)
		pFnRequestFormattingUpdate = UObject::FindFunction("Function Engine.UIScreenObject.RequestFormattingUpdate");

	Engine_RequestFormattingUpdate_Parms RequestFormattingUpdate_Parms;
	pFnRequestFormattingUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestFormattingUpdate,NULL,&RequestFormattingUpdate_Parms,NULL);
	pFnRequestFormattingUpdate->FunctionFlags |= 0x400;
}

struct Engine_FindChildIndex_Parms
{
	struct FName                                       WidgetName;                                       		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIScreenObject::FindChildIndex(struct FName WidgetName)
{
	static UFieldFunc* pFnFindChildIndex = NULL;
	if(!pFnFindChildIndex)
		pFnFindChildIndex = UObject::FindFunction("Function Engine.UIScreenObject.FindChildIndex");

	Engine_FindChildIndex_Parms FindChildIndex_Parms;
	memcpy(&FindChildIndex_Parms.WidgetName,&WidgetName,0x8);
	pFnFindChildIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindChildIndex,NULL,&FindChildIndex_Parms,NULL);
	pFnFindChildIndex->FunctionFlags |= 0x400;
	return FindChildIndex_Parms.ReturnValue;
}

struct Engine_ContainsChild_Parms
{
	class UUIObject*                                   Child;                                            		// 0x000000 (0x0004)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::ContainsChild(class UUIObject* Child,bool bRecurse)
{
	static UFieldFunc* pFnContainsChild = NULL;
	if(!pFnContainsChild)
		pFnContainsChild = UObject::FindFunction("Function Engine.UIScreenObject.ContainsChild");

	Engine_ContainsChild_Parms ContainsChild_Parms;
	ContainsChild_Parms.Child = Child;
	ContainsChild_Parms.bRecurse = bRecurse;
	pFnContainsChild->FunctionFlags |= ~0x400;
	ProcessEvent(pFnContainsChild,NULL,&ContainsChild_Parms,NULL);
	pFnContainsChild->FunctionFlags |= 0x400;
	return ContainsChild_Parms.ReturnValue;
}

struct Engine_NextControl_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::NextControl(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnNextControl = NULL;
	if(!pFnNextControl)
		pFnNextControl = UObject::FindFunction("Function Engine.UIScreenObject.NextControl");

	Engine_NextControl_Parms NextControl_Parms;
	NextControl_Parms.Sender = Sender;
	NextControl_Parms.PlayerIndex = PlayerIndex;
	pFnNextControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNextControl,NULL,&NextControl_Parms,NULL);
	pFnNextControl->FunctionFlags |= 0x400;
	return NextControl_Parms.ReturnValue;
}

struct Engine_IsHoldingShift_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::IsHoldingShift(int ControllerId)
{
	static UFieldFunc* pFnIsHoldingShift = NULL;
	if(!pFnIsHoldingShift)
		pFnIsHoldingShift = UObject::FindFunction("Function Engine.UIScreenObject.IsHoldingShift");

	Engine_IsHoldingShift_Parms IsHoldingShift_Parms;
	IsHoldingShift_Parms.ControllerId = ControllerId;
	pFnIsHoldingShift->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsHoldingShift,NULL,&IsHoldingShift_Parms,NULL);
	pFnIsHoldingShift->FunctionFlags |= 0x400;
	return IsHoldingShift_Parms.ReturnValue;
}

struct Engine_PostInitialize_Parms
{
};

void UUIScreenObject::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UIScreenObject.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_OnSetControllerId_Parms
{
	class UUIAction_SetControllerId*                   Action;                                           		// 0x000000 (0x0004)              
	//class ULocalPlayer*                                PlayerOwner;                                      		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnSetControllerId(class UUIAction_SetControllerId* Action)
{
	static UFieldFunc* pFnOnSetControllerId = NULL;
	if(!pFnOnSetControllerId)
		pFnOnSetControllerId = UObject::FindFunction("Function Engine.UIScreenObject.OnSetControllerId");

	Engine_OnSetControllerId_Parms OnSetControllerId_Parms;
	OnSetControllerId_Parms.Action = Action;
	ProcessEvent(pFnOnSetControllerId,NULL,&OnSetControllerId_Parms,NULL);
}

struct Engine_GetViewportSize_Parms
{
	FVector2                                           out_ViewportSize;                                 		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::GetViewportSize(FVector2* out_ViewportSize)
{
	static UFieldFunc* pFnGetViewportSize = NULL;
	if(!pFnGetViewportSize)
		pFnGetViewportSize = UObject::FindFunction("Function Engine.UIScreenObject.GetViewportSize");

	Engine_GetViewportSize_Parms GetViewportSize_Parms;
	pFnGetViewportSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetViewportSize,NULL,&GetViewportSize_Parms,NULL);
	pFnGetViewportSize->FunctionFlags |= 0x400;
	if(out_ViewportSize)
		memcpy(out_ViewportSize,&GetViewportSize_Parms.out_ViewportSize,0x8);
	return GetViewportSize_Parms.ReturnValue;
}

struct Engine_OnRawInputAxis_Parms
{
	struct FInputEventParameters                       EventParms;                                       		// 0x000000 (0x0020)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUIScreenObject::OnRawInputAxis(struct FInputEventParameters* EventParms)
{
	static UFieldFunc* pFnOnRawInputAxis = NULL;
	if(!pFnOnRawInputAxis)
		pFnOnRawInputAxis = UObject::FindFunction("Function Engine.UIScreenObject.OnRawInputAxis");

	Engine_OnRawInputAxis_Parms OnRawInputAxis_Parms;
	ProcessEvent(pFnOnRawInputAxis,NULL,&OnRawInputAxis_Parms,NULL);
	if(EventParms)
		memcpy(EventParms,&OnRawInputAxis_Parms.EventParms,0x20);
	return OnRawInputAxis_Parms.ReturnValue;
}

struct Engine_ScreenToCanvas_Parms
{
	struct FVector4                                    ScreenPosition;                                   		// 0x000000 (0x0010)              
	FVector3                                           ReturnValue;                                      		// 0x000010 (0x000C)              
};

FVector3 UUIScreenObject::ScreenToCanvas(struct FVector4* ScreenPosition)
{
	static UFieldFunc* pFnScreenToCanvas = NULL;
	if(!pFnScreenToCanvas)
		pFnScreenToCanvas = UObject::FindFunction("Function Engine.UIScreenObject.ScreenToCanvas");

	Engine_ScreenToCanvas_Parms ScreenToCanvas_Parms;
	pFnScreenToCanvas->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScreenToCanvas,NULL,&ScreenToCanvas_Parms,NULL);
	pFnScreenToCanvas->FunctionFlags |= 0x400;
	if(ScreenPosition)
		memcpy(ScreenPosition,&ScreenToCanvas_Parms.ScreenPosition,0x10);
	return ScreenToCanvas_Parms.ReturnValue;
}

struct Engine_AddedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
};

void UUIScreenObject::AddedChild(class UUIScreenObject* WidgetOwner,class UUIObject* NewChild)
{
	static UFieldFunc* pFnAddedChild = NULL;
	if(!pFnAddedChild)
		pFnAddedChild = UObject::FindFunction("Function Engine.UIScreenObject.AddedChild");

	Engine_AddedChild_Parms AddedChild_Parms;
	AddedChild_Parms.WidgetOwner = WidgetOwner;
	AddedChild_Parms.NewChild = NewChild;
	ProcessEvent(pFnAddedChild,NULL,&AddedChild_Parms,NULL);
}

struct Engine_RequestSceneUpdate_Parms
{
	unsigned long                                      bDockingStackChanged : 1;                         		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bPositionsChanged : 1;                            		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bNavLinksOutdated : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bWidgetStylesChanged : 1;                         		// 0x00000C (0x0004) [0x00000001] 
};

void UUIScreenObject::RequestSceneUpdate(bool bDockingStackChanged,bool bPositionsChanged,bool bNavLinksOutdated,bool bWidgetStylesChanged)
{
	static UFieldFunc* pFnRequestSceneUpdate = NULL;
	if(!pFnRequestSceneUpdate)
		pFnRequestSceneUpdate = UObject::FindFunction("Function Engine.UIScreenObject.RequestSceneUpdate");

	Engine_RequestSceneUpdate_Parms RequestSceneUpdate_Parms;
	RequestSceneUpdate_Parms.bDockingStackChanged = bDockingStackChanged;
	RequestSceneUpdate_Parms.bPositionsChanged = bPositionsChanged;
	RequestSceneUpdate_Parms.bNavLinksOutdated = bNavLinksOutdated;
	RequestSceneUpdate_Parms.bWidgetStylesChanged = bWidgetStylesChanged;
	pFnRequestSceneUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestSceneUpdate,NULL,&RequestSceneUpdate_Parms,NULL);
	pFnRequestSceneUpdate->FunctionFlags |= 0x400;
}

struct Engine_NextControlAPB_Parms
{
	class UUIScreenObject*                             pSender;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::NextControlAPB(class UUIScreenObject* pSender)
{
	static UFieldFunc* pFnNextControlAPB = NULL;
	if(!pFnNextControlAPB)
		pFnNextControlAPB = UObject::FindFunction("Function Engine.UIScreenObject.NextControlAPB");

	Engine_NextControlAPB_Parms NextControlAPB_Parms;
	NextControlAPB_Parms.pSender = pSender;
	pFnNextControlAPB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNextControlAPB,NULL,&NextControlAPB_Parms,NULL);
	pFnNextControlAPB->FunctionFlags |= 0x400;
	return NextControlAPB_Parms.ReturnValue;
}

struct Engine_OnProcessInputKey_Parms
{
	struct FSubscribedInputEventParameters             EventParms;                                       		// 0x000000 (0x0028)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool UUIScreenObject::OnProcessInputKey(struct FSubscribedInputEventParameters* EventParms)
{
	static UFieldFunc* pFnOnProcessInputKey = NULL;
	if(!pFnOnProcessInputKey)
		pFnOnProcessInputKey = UObject::FindFunction("Function Engine.UIScreenObject.OnProcessInputKey");

	Engine_OnProcessInputKey_Parms OnProcessInputKey_Parms;
	ProcessEvent(pFnOnProcessInputKey,NULL,&OnProcessInputKey_Parms,NULL);
	if(EventParms)
		memcpy(EventParms,&OnProcessInputKey_Parms.EventParms,0x28);
	return OnProcessInputKey_Parms.ReturnValue;
}

struct Engine_ActivateEventByClass_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class UClass*                                      EventClassToActivate;                             		// 0x000004 (0x0004)              
	class UObject*                                     InEventActivator;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bActivateImmediately : 1;                         		// 0x00000C (0x0004) [0x00000001] 
	TArray<int>                                        IndicesToActivate;                                		// 0x000010 (0x000C)              
	TArray<class UUIEvent*>                            out_ActivatedEvents;                              		// 0x00001C (0x000C)              
};

void UUIScreenObject::ActivateEventByClass(int PlayerIndex,class UClass* EventClassToActivate,class UObject* InEventActivator,bool bActivateImmediately,TArray<int> IndicesToActivate,TArray<class UUIEvent*>* out_ActivatedEvents)
{
	static UFieldFunc* pFnActivateEventByClass = NULL;
	if(!pFnActivateEventByClass)
		pFnActivateEventByClass = UObject::FindFunction("Function Engine.UIScreenObject.ActivateEventByClass");

	Engine_ActivateEventByClass_Parms ActivateEventByClass_Parms;
	ActivateEventByClass_Parms.PlayerIndex = PlayerIndex;
	ActivateEventByClass_Parms.EventClassToActivate = EventClassToActivate;
	ActivateEventByClass_Parms.InEventActivator = InEventActivator;
	ActivateEventByClass_Parms.bActivateImmediately = bActivateImmediately;
	memcpy(&ActivateEventByClass_Parms.IndicesToActivate,&IndicesToActivate,0xC);
	pFnActivateEventByClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActivateEventByClass,NULL,&ActivateEventByClass_Parms,NULL);
	pFnActivateEventByClass->FunctionFlags |= 0x400;
	if(out_ActivatedEvents)
		memcpy(out_ActivatedEvents,&ActivateEventByClass_Parms.out_ActivatedEvents,0xC);
}

struct Engine_PrevControlAPB_Parms
{
	class UUIScreenObject*                             pSender;                                          		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScreenObject::PrevControlAPB(class UUIScreenObject* pSender)
{
	static UFieldFunc* pFnPrevControlAPB = NULL;
	if(!pFnPrevControlAPB)
		pFnPrevControlAPB = UObject::FindFunction("Function Engine.UIScreenObject.PrevControlAPB");

	Engine_PrevControlAPB_Parms PrevControlAPB_Parms;
	PrevControlAPB_Parms.pSender = pSender;
	pFnPrevControlAPB->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPrevControlAPB,NULL,&PrevControlAPB_Parms,NULL);
	pFnPrevControlAPB->FunctionFlags |= 0x400;
	return PrevControlAPB_Parms.ReturnValue;
}

struct Engine_SetFocus_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScreenObject::SetFocus(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnSetFocus = NULL;
	if(!pFnSetFocus)
		pFnSetFocus = UObject::FindFunction("Function Engine.UIScreenObject.SetFocus");

	Engine_SetFocus_Parms SetFocus_Parms;
	SetFocus_Parms.Sender = Sender;
	SetFocus_Parms.PlayerIndex = PlayerIndex;
	pFnSetFocus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFocus,NULL,&SetFocus_Parms,NULL);
	pFnSetFocus->FunctionFlags |= 0x400;
	return SetFocus_Parms.ReturnValue;
}

struct Engine_PixelToCanvas_Parms
{
	FVector2                                           PixelPosition;                                    		// 0x000000 (0x0008)              
	FVector3                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FVector3 UUIScreenObject::PixelToCanvas(FVector2* PixelPosition)
{
	static UFieldFunc* pFnPixelToCanvas = NULL;
	if(!pFnPixelToCanvas)
		pFnPixelToCanvas = UObject::FindFunction("Function Engine.UIScreenObject.PixelToCanvas");

	Engine_PixelToCanvas_Parms PixelToCanvas_Parms;
	pFnPixelToCanvas->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPixelToCanvas,NULL,&PixelToCanvas_Parms,NULL);
	pFnPixelToCanvas->FunctionFlags |= 0x400;
	if(PixelPosition)
		memcpy(PixelPosition,&PixelToCanvas_Parms.PixelPosition,0x8);
	return PixelToCanvas_Parms.ReturnValue;
}

struct Engine_OnShowGamerCardUI_Parms
{
	class UUIAction_ShowGamerCardUI*                   Action;                                           		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIScreenObject::OnShowGamerCardUI(class UUIAction_ShowGamerCardUI* Action)
{
	static UFieldFunc* pFnOnShowGamerCardUI = NULL;
	if(!pFnOnShowGamerCardUI)
		pFnOnShowGamerCardUI = UObject::FindFunction("Function Engine.UIScreenObject.OnShowGamerCardUI");

	Engine_OnShowGamerCardUI_Parms OnShowGamerCardUI_Parms;
	OnShowGamerCardUI_Parms.Action = Action;
	ProcessEvent(pFnOnShowGamerCardUI,NULL,&OnShowGamerCardUI_Parms,NULL);
}

struct Engine_PrivateSetVisibility_Parms
{
	unsigned long                                      bVisible : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScreenObject::PrivateSetVisibility(bool bVisible)
{
	static UFieldFunc* pFnPrivateSetVisibility = NULL;
	if(!pFnPrivateSetVisibility)
		pFnPrivateSetVisibility = UObject::FindFunction("Function Engine.UIScreenObject.PrivateSetVisibility");

	Engine_PrivateSetVisibility_Parms PrivateSetVisibility_Parms;
	PrivateSetVisibility_Parms.bVisible = bVisible;
	pFnPrivateSetVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPrivateSetVisibility,NULL,&PrivateSetVisibility_Parms,NULL);
	pFnPrivateSetVisibility->FunctionFlags |= 0x400;
}

struct Engine_RegisterInputEvents_Parms
{
	class UUIState*                                    InputEventOwner;                                  		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIComp_Event::RegisterInputEvents(class UUIState* InputEventOwner,int PlayerIndex)
{
	static UFieldFunc* pFnRegisterInputEvents = NULL;
	if(!pFnRegisterInputEvents)
		pFnRegisterInputEvents = UObject::FindFunction("Function Engine.UIComp_Event.RegisterInputEvents");

	Engine_RegisterInputEvents_Parms RegisterInputEvents_Parms;
	RegisterInputEvents_Parms.InputEventOwner = InputEventOwner;
	RegisterInputEvents_Parms.PlayerIndex = PlayerIndex;
	pFnRegisterInputEvents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRegisterInputEvents,NULL,&RegisterInputEvents_Parms,NULL);
	pFnRegisterInputEvents->FunctionFlags |= 0x400;
}

struct Engine_UnregisterInputEvents_Parms
{
	class UUIState*                                    InputEventOwner;                                  		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIComp_Event::UnregisterInputEvents(class UUIState* InputEventOwner,int PlayerIndex)
{
	static UFieldFunc* pFnUnregisterInputEvents = NULL;
	if(!pFnUnregisterInputEvents)
		pFnUnregisterInputEvents = UObject::FindFunction("Function Engine.UIComp_Event.UnregisterInputEvents");

	Engine_UnregisterInputEvents_Parms UnregisterInputEvents_Parms;
	UnregisterInputEvents_Parms.InputEventOwner = InputEventOwner;
	UnregisterInputEvents_Parms.PlayerIndex = PlayerIndex;
	pFnUnregisterInputEvents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnregisterInputEvents,NULL,&UnregisterInputEvents_Parms,NULL);
	pFnUnregisterInputEvents->FunctionFlags |= 0x400;
}

struct Engine_GetUIEvents_Parms
{
	TArray<class UUIEvent*>                            out_Events;                                       		// 0x000000 (0x000C)              
	class UClass*                                      LimitClass;                                       		// 0x00000C (0x0004)              
};

void UUIEventContainer::GetUIEvents(TArray<class UUIEvent*>* out_Events,class UClass* LimitClass)
{
	static UFieldFunc* pFnGetUIEvents = NULL;
	if(!pFnGetUIEvents)
		pFnGetUIEvents = UObject::FindFunction("Function Engine.UIEventContainer.GetUIEvents");

	Engine_GetUIEvents_Parms GetUIEvents_Parms;
	GetUIEvents_Parms.LimitClass = LimitClass;
	pFnGetUIEvents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUIEvents,NULL,&GetUIEvents_Parms,NULL);
	pFnGetUIEvents->FunctionFlags |= 0x400;
	if(out_Events)
		memcpy(out_Events,&GetUIEvents_Parms.out_Events,0xC);
}

struct Engine_RemoveSequenceObjects_Parms
{
	TArray<class USequenceObject*>                     ObjectsToRemove;                                  		// 0x000000 (0x000C)              
};

void UUIEventContainer::RemoveSequenceObjects(TArray<class USequenceObject*> ObjectsToRemove)
{
	static UFieldFunc* pFnRemoveSequenceObjects = NULL;
	if(!pFnRemoveSequenceObjects)
		pFnRemoveSequenceObjects = UObject::FindFunction("Function Engine.UIEventContainer.RemoveSequenceObjects");

	Engine_RemoveSequenceObjects_Parms RemoveSequenceObjects_Parms;
	memcpy(&RemoveSequenceObjects_Parms.ObjectsToRemove,&ObjectsToRemove,0xC);
	pFnRemoveSequenceObjects->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveSequenceObjects,NULL,&RemoveSequenceObjects_Parms,NULL);
	pFnRemoveSequenceObjects->FunctionFlags |= 0x400;
}

struct Engine_AddSequenceObject_Parms
{
	class USequenceObject*                             NewObj;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIEventContainer::AddSequenceObject(class USequenceObject* NewObj,bool bRecurse)
{
	static UFieldFunc* pFnAddSequenceObject = NULL;
	if(!pFnAddSequenceObject)
		pFnAddSequenceObject = UObject::FindFunction("Function Engine.UIEventContainer.AddSequenceObject");

	Engine_AddSequenceObject_Parms AddSequenceObject_Parms;
	AddSequenceObject_Parms.NewObj = NewObj;
	AddSequenceObject_Parms.bRecurse = bRecurse;
	pFnAddSequenceObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddSequenceObject,NULL,&AddSequenceObject_Parms,NULL);
	pFnAddSequenceObject->FunctionFlags |= 0x400;
	return AddSequenceObject_Parms.ReturnValue;
}

struct Engine_RemoveSequenceObject_Parms
{
	class USequenceObject*                             ObjectToRemove;                                   		// 0x000000 (0x0004)              
};

void UUIEventContainer::RemoveSequenceObject(class USequenceObject* ObjectToRemove)
{
	static UFieldFunc* pFnRemoveSequenceObject = NULL;
	if(!pFnRemoveSequenceObject)
		pFnRemoveSequenceObject = UObject::FindFunction("Function Engine.UIEventContainer.RemoveSequenceObject");

	Engine_RemoveSequenceObject_Parms RemoveSequenceObject_Parms;
	RemoveSequenceObject_Parms.ObjectToRemove = ObjectToRemove;
	pFnRemoveSequenceObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveSequenceObject,NULL,&RemoveSequenceObject_Parms,NULL);
	pFnRemoveSequenceObject->FunctionFlags |= 0x400;
}

struct Engine_FindDataStoreClass_Parms
{
	class UClass*                                      RequiredMetaClass;                                		// 0x000000 (0x0004)              
	class UClass*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//class UClass*                                      Result;                                           		// 0x00000C (0x0004)              
};

class UClass* UDataStoreClient::FindDataStoreClass(class UClass* RequiredMetaClass)
{
	static UFieldFunc* pFnFindDataStoreClass = NULL;
	if(!pFnFindDataStoreClass)
		pFnFindDataStoreClass = UObject::FindFunction("Function Engine.DataStoreClient.FindDataStoreClass");

	Engine_FindDataStoreClass_Parms FindDataStoreClass_Parms;
	FindDataStoreClass_Parms.RequiredMetaClass = RequiredMetaClass;
	ProcessEvent(pFnFindDataStoreClass,NULL,&FindDataStoreClass_Parms,NULL);
	return FindDataStoreClass_Parms.ReturnValue;
}

struct Engine_DebugDumpDataStoreInfo_Parms
{
	unsigned long                                      bVerbose : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	//int                                                DataStoreIndex;                                   		// 0x000004 (0x0004)              
	//int                                                PlayerDataStoreIndex;                             		// 0x000008 (0x0004)              
	//struct FString                                     PlayerName;                                       		// 0x00000C (0x000C)              
	//class ULocalPlayer*                                PlayerOwner;                                      		// 0x000018 (0x0004)              
	//TArray<class UUIDataStore*>                        PlayerGroupDataStores;                            		// 0x00001C (0x000C)              
};

void UDataStoreClient::DebugDumpDataStoreInfo(bool bVerbose)
{
	static UFieldFunc* pFnDebugDumpDataStoreInfo = NULL;
	if(!pFnDebugDumpDataStoreInfo)
		pFnDebugDumpDataStoreInfo = UObject::FindFunction("Function Engine.DataStoreClient.DebugDumpDataStoreInfo");

	Engine_DebugDumpDataStoreInfo_Parms DebugDumpDataStoreInfo_Parms;
	DebugDumpDataStoreInfo_Parms.bVerbose = bVerbose;
	ProcessEvent(pFnDebugDumpDataStoreInfo,NULL,&DebugDumpDataStoreInfo_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//int                                                DataStoreIndex;                                   		// 0x000004 (0x0004)              
	//TArray<class UUIDataStore*>                        DataStoreArray;                                   		// 0x000008 (0x000C)              
};

void UDataStoreClient::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.DataStoreClient.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
}

struct Engine_FindPlayerDataStoreIndex_Parms
{
	class ULocalPlayer*                                PlayerOwner;                                      		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UDataStoreClient::FindPlayerDataStoreIndex(class ULocalPlayer* PlayerOwner)
{
	static UFieldFunc* pFnFindPlayerDataStoreIndex = NULL;
	if(!pFnFindPlayerDataStoreIndex)
		pFnFindPlayerDataStoreIndex = UObject::FindFunction("Function Engine.DataStoreClient.FindPlayerDataStoreIndex");

	Engine_FindPlayerDataStoreIndex_Parms FindPlayerDataStoreIndex_Parms;
	FindPlayerDataStoreIndex_Parms.PlayerOwner = PlayerOwner;
	pFnFindPlayerDataStoreIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindPlayerDataStoreIndex,NULL,&FindPlayerDataStoreIndex_Parms,NULL);
	pFnFindPlayerDataStoreIndex->FunctionFlags |= 0x400;
	return FindPlayerDataStoreIndex_Parms.ReturnValue;
}

struct Engine_RegisterDataStore_Parms
{
	class UUIDataStore*                                DataStore;                                        		// 0x000000 (0x0004)              
	class ULocalPlayer*                                PlayerOwner;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UDataStoreClient::RegisterDataStore(class UUIDataStore* DataStore,class ULocalPlayer* PlayerOwner)
{
	static UFieldFunc* pFnRegisterDataStore = NULL;
	if(!pFnRegisterDataStore)
		pFnRegisterDataStore = UObject::FindFunction("Function Engine.DataStoreClient.RegisterDataStore");

	Engine_RegisterDataStore_Parms RegisterDataStore_Parms;
	RegisterDataStore_Parms.DataStore = DataStore;
	RegisterDataStore_Parms.PlayerOwner = PlayerOwner;
	pFnRegisterDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRegisterDataStore,NULL,&RegisterDataStore_Parms,NULL);
	pFnRegisterDataStore->FunctionFlags |= 0x400;
	return RegisterDataStore_Parms.ReturnValue;
}

struct Engine_UnregisterDataStore_Parms
{
	class UUIDataStore*                                DataStore;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UDataStoreClient::UnregisterDataStore(class UUIDataStore* DataStore)
{
	static UFieldFunc* pFnUnregisterDataStore = NULL;
	if(!pFnUnregisterDataStore)
		pFnUnregisterDataStore = UObject::FindFunction("Function Engine.DataStoreClient.UnregisterDataStore");

	Engine_UnregisterDataStore_Parms UnregisterDataStore_Parms;
	UnregisterDataStore_Parms.DataStore = DataStore;
	pFnUnregisterDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnregisterDataStore,NULL,&UnregisterDataStore_Parms,NULL);
	pFnUnregisterDataStore->FunctionFlags |= 0x400;
	return UnregisterDataStore_Parms.ReturnValue;
}

struct Engine_GetAvailableDataStores_Parms
{
	class UUIScene*                                    CurrentScene;                                     		// 0x000000 (0x0004)              
	TArray<class UUIDataStore*>                        out_DataStores;                                   		// 0x000004 (0x000C)              
};

void UDataStoreClient::GetAvailableDataStores(class UUIScene* CurrentScene,TArray<class UUIDataStore*>* out_DataStores)
{
	static UFieldFunc* pFnGetAvailableDataStores = NULL;
	if(!pFnGetAvailableDataStores)
		pFnGetAvailableDataStores = UObject::FindFunction("Function Engine.DataStoreClient.GetAvailableDataStores");

	Engine_GetAvailableDataStores_Parms GetAvailableDataStores_Parms;
	GetAvailableDataStores_Parms.CurrentScene = CurrentScene;
	pFnGetAvailableDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAvailableDataStores,NULL,&GetAvailableDataStores_Parms,NULL);
	pFnGetAvailableDataStores->FunctionFlags |= 0x400;
	if(out_DataStores)
		memcpy(out_DataStores,&GetAvailableDataStores_Parms.out_DataStores,0xC);
}

struct Engine_FindDataStore_Parms
{
	struct FName                                       DataStoreTag;                                     		// 0x000000 (0x0008)              
	class ULocalPlayer*                                PlayerOwner;                                      		// 0x000008 (0x0004)              
	class UUIDataStore*                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UUIDataStore* UDataStoreClient::FindDataStore(struct FName DataStoreTag,class ULocalPlayer* PlayerOwner)
{
	static UFieldFunc* pFnFindDataStore = NULL;
	if(!pFnFindDataStore)
		pFnFindDataStore = UObject::FindFunction("Function Engine.DataStoreClient.FindDataStore");

	Engine_FindDataStore_Parms FindDataStore_Parms;
	memcpy(&FindDataStore_Parms.DataStoreTag,&DataStoreTag,0x8);
	FindDataStore_Parms.PlayerOwner = PlayerOwner;
	pFnFindDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindDataStore,NULL,&FindDataStore_Parms,NULL);
	pFnFindDataStore->FunctionFlags |= 0x400;
	return FindDataStore_Parms.ReturnValue;
}

struct Engine_CreateDataStore_Parms
{
	class UClass*                                      DataStoreClass;                                   		// 0x000000 (0x0004)              
	class UUIDataStore*                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIDataStore* UDataStoreClient::CreateDataStore(class UClass* DataStoreClass)
{
	static UFieldFunc* pFnCreateDataStore = NULL;
	if(!pFnCreateDataStore)
		pFnCreateDataStore = UObject::FindFunction("Function Engine.DataStoreClient.CreateDataStore");

	Engine_CreateDataStore_Parms CreateDataStore_Parms;
	CreateDataStore_Parms.DataStoreClass = DataStoreClass;
	pFnCreateDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateDataStore,NULL,&CreateDataStore_Parms,NULL);
	pFnCreateDataStore->FunctionFlags |= 0x400;
	return CreateDataStore_Parms.ReturnValue;
}

struct Engine_Initialized_Parms
{
};

void UInteraction::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.Interaction.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_OnReceivedNativeInputKey_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	unsigned char                                      EventType;                                        		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	float                                              AmountDepressed;                                  		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UInteraction::OnReceivedNativeInputKey(int ControllerId,struct FName Key,unsigned char EventType,float AmountDepressed,bool bGamepad)
{
	static UFieldFunc* pFnOnReceivedNativeInputKey = NULL;
	if(!pFnOnReceivedNativeInputKey)
		pFnOnReceivedNativeInputKey = UObject::FindFunction("Function Engine.Interaction.OnReceivedNativeInputKey");

	Engine_OnReceivedNativeInputKey_Parms OnReceivedNativeInputKey_Parms;
	OnReceivedNativeInputKey_Parms.ControllerId = ControllerId;
	memcpy(&OnReceivedNativeInputKey_Parms.Key,&Key,0x8);
	OnReceivedNativeInputKey_Parms.EventType = EventType;
	OnReceivedNativeInputKey_Parms.AmountDepressed = AmountDepressed;
	OnReceivedNativeInputKey_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnOnReceivedNativeInputKey,NULL,&OnReceivedNativeInputKey_Parms,NULL);
	return OnReceivedNativeInputKey_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
};

void UInteraction::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.Interaction.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_NotifyPlayerAdded_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                AddedPlayer;                                      		// 0x000004 (0x0004)              
};

void UInteraction::NotifyPlayerAdded(int PlayerIndex,class ULocalPlayer* AddedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerAdded = NULL;
	if(!pFnNotifyPlayerAdded)
		pFnNotifyPlayerAdded = UObject::FindFunction("Function Engine.Interaction.NotifyPlayerAdded");

	Engine_NotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;
	NotifyPlayerAdded_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerAdded_Parms.AddedPlayer = AddedPlayer;
	ProcessEvent(pFnNotifyPlayerAdded,NULL,&NotifyPlayerAdded_Parms,NULL);
}

struct Engine_OnInitialize_Parms
{
};

void UInteraction::OnInitialize()
{
	static UFieldFunc* pFnOnInitialize = NULL;
	if(!pFnOnInitialize)
		pFnOnInitialize = UObject::FindFunction("Function Engine.Interaction.OnInitialize");

	Engine_OnInitialize_Parms OnInitialize_Parms;
	ProcessEvent(pFnOnInitialize,NULL,&OnInitialize_Parms,NULL);
}

struct Engine_OnReceivedNativeInputChar_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FString                                     Unicode;                                          		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UInteraction::OnReceivedNativeInputChar(int ControllerId,struct FString Unicode)
{
	static UFieldFunc* pFnOnReceivedNativeInputChar = NULL;
	if(!pFnOnReceivedNativeInputChar)
		pFnOnReceivedNativeInputChar = UObject::FindFunction("Function Engine.Interaction.OnReceivedNativeInputChar");

	Engine_OnReceivedNativeInputChar_Parms OnReceivedNativeInputChar_Parms;
	OnReceivedNativeInputChar_Parms.ControllerId = ControllerId;
	memcpy(&OnReceivedNativeInputChar_Parms.Unicode,&Unicode,0xC);
	ProcessEvent(pFnOnReceivedNativeInputChar,NULL,&OnReceivedNativeInputChar_Parms,NULL);
	return OnReceivedNativeInputChar_Parms.ReturnValue;
}

struct Engine_Tick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void UInteraction::Tick(float DeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.Interaction.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_NotifyPlayerRemoved_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                RemovedPlayer;                                    		// 0x000004 (0x0004)              
};

void UInteraction::NotifyPlayerRemoved(int PlayerIndex,class ULocalPlayer* RemovedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerRemoved = NULL;
	if(!pFnNotifyPlayerRemoved)
		pFnNotifyPlayerRemoved = UObject::FindFunction("Function Engine.Interaction.NotifyPlayerRemoved");

	Engine_NotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;
	NotifyPlayerRemoved_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerRemoved_Parms.RemovedPlayer = RemovedPlayer;
	ProcessEvent(pFnNotifyPlayerRemoved,NULL,&NotifyPlayerRemoved_Parms,NULL);
}

struct Engine_OnReceivedNativeInputAxis_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	float                                              Delta;                                            		// 0x00000C (0x0004)              
	float                                              DeltaTime;                                        		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UInteraction::OnReceivedNativeInputAxis(int ControllerId,struct FName Key,float Delta,float DeltaTime,bool bGamepad)
{
	static UFieldFunc* pFnOnReceivedNativeInputAxis = NULL;
	if(!pFnOnReceivedNativeInputAxis)
		pFnOnReceivedNativeInputAxis = UObject::FindFunction("Function Engine.Interaction.OnReceivedNativeInputAxis");

	Engine_OnReceivedNativeInputAxis_Parms OnReceivedNativeInputAxis_Parms;
	OnReceivedNativeInputAxis_Parms.ControllerId = ControllerId;
	memcpy(&OnReceivedNativeInputAxis_Parms.Key,&Key,0x8);
	OnReceivedNativeInputAxis_Parms.Delta = Delta;
	OnReceivedNativeInputAxis_Parms.DeltaTime = DeltaTime;
	OnReceivedNativeInputAxis_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnOnReceivedNativeInputAxis,NULL,&OnReceivedNativeInputAxis_Parms,NULL);
	return OnReceivedNativeInputAxis_Parms.ReturnValue;
}

struct Engine_NotifyGameSessionEnded_Parms
{
};

void UInteraction::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.Interaction.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
}

struct Engine_ChangedInputLanguage_Parms
{
	struct FString                                     sInputLangId;                                     		// 0x000000 (0x000C)              
	unsigned long                                      bHasIME : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bIMEActive : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
};

void UInteraction::ChangedInputLanguage(struct FString sInputLangId,bool bHasIME,bool bIMEActive)
{
	static UFieldFunc* pFnChangedInputLanguage = NULL;
	if(!pFnChangedInputLanguage)
		pFnChangedInputLanguage = UObject::FindFunction("Function Engine.Interaction.ChangedInputLanguage");

	Engine_ChangedInputLanguage_Parms ChangedInputLanguage_Parms;
	memcpy(&ChangedInputLanguage_Parms.sInputLangId,&sInputLangId,0xC);
	ChangedInputLanguage_Parms.bHasIME = bHasIME;
	ChangedInputLanguage_Parms.bIMEActive = bIMEActive;
	pFnChangedInputLanguage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnChangedInputLanguage,NULL,&ChangedInputLanguage_Parms,NULL);
	pFnChangedInputLanguage->FunctionFlags |= 0x400;
}

struct Engine_DrawTitleBar_Parms
{
	//float                                              fTextWidth;                                       		// 0x000000 (0x0004)              
	//float                                              fTextHeight;                                      		// 0x000004 (0x0004)              
	//struct FString                                     sText;                                            		// 0x000008 (0x000C)              
};

void UcDebugPageManager::DrawTitleBar()
{
	static UFieldFunc* pFnDrawTitleBar = NULL;
	if(!pFnDrawTitleBar)
		pFnDrawTitleBar = UObject::FindFunction("Function Engine.cDebugPageManager.DrawTitleBar");

	Engine_DrawTitleBar_Parms DrawTitleBar_Parms;
	ProcessEvent(pFnDrawTitleBar,NULL,&DrawTitleBar_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
};

void UcDebugPageManager::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.cDebugPageManager.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
}

struct Engine_DoLevelChangeCleanup_Parms
{
};

void UcDebugPageManager::DoLevelChangeCleanup()
{
	static UFieldFunc* pFnDoLevelChangeCleanup = NULL;
	if(!pFnDoLevelChangeCleanup)
		pFnDoLevelChangeCleanup = UObject::FindFunction("Function Engine.cDebugPageManager.DoLevelChangeCleanup");

	Engine_DoLevelChangeCleanup_Parms DoLevelChangeCleanup_Parms;
	pFnDoLevelChangeCleanup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDoLevelChangeCleanup,NULL,&DoLevelChangeCleanup_Parms,NULL);
	pFnDoLevelChangeCleanup->FunctionFlags |= 0x400;
}

struct Engine_ClearDebugPages_Parms
{
};

void UcDebugPageManager::ClearDebugPages()
{
	static UFieldFunc* pFnClearDebugPages = NULL;
	if(!pFnClearDebugPages)
		pFnClearDebugPages = UObject::FindFunction("Function Engine.cDebugPageManager.ClearDebugPages");

	Engine_ClearDebugPages_Parms ClearDebugPages_Parms;
	pFnClearDebugPages->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearDebugPages,NULL,&ClearDebugPages_Parms,NULL);
	pFnClearDebugPages->FunctionFlags |= 0x400;
}

struct Engine_InputKey_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	unsigned char                                      Event;                                            		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	float                                              AmountDepressed;                                  		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UcDebugPageManager::InputKey(int ControllerId,struct FName Key,unsigned char Event,float AmountDepressed,bool bGamepad)
{
	static UFieldFunc* pFnInputKey = NULL;
	if(!pFnInputKey)
		pFnInputKey = UObject::FindFunction("Function Engine.cDebugPageManager.InputKey");

	Engine_InputKey_Parms InputKey_Parms;
	InputKey_Parms.ControllerId = ControllerId;
	memcpy(&InputKey_Parms.Key,&Key,0x8);
	InputKey_Parms.Event = Event;
	InputKey_Parms.AmountDepressed = AmountDepressed;
	InputKey_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnInputKey,NULL,&InputKey_Parms,NULL);
	return InputKey_Parms.ReturnValue;
}

struct Engine_DrawIndexPage_Parms
{
	//class UcDebugPage*                                 PageIterator;                                     		// 0x000000 (0x0004)              
	//int                                                nPageIteratorIndex;                               		// 0x000004 (0x0004)              
	//float                                              fOffsetY;                                         		// 0x000008 (0x0004)              
	//float                                              fTextWidth;                                       		// 0x00000C (0x0004)              
	//float                                              fTextHeight;                                      		// 0x000010 (0x0004)              
};

void UcDebugPageManager::DrawIndexPage()
{
	static UFieldFunc* pFnDrawIndexPage = NULL;
	if(!pFnDrawIndexPage)
		pFnDrawIndexPage = UObject::FindFunction("Function Engine.cDebugPageManager.DrawIndexPage");

	Engine_DrawIndexPage_Parms DrawIndexPage_Parms;
	ProcessEvent(pFnDrawIndexPage,NULL,&DrawIndexPage_Parms,NULL);
}

struct Engine_IndexUp_Parms
{
};

void UcDebugPageManager::IndexUp()
{
	static UFieldFunc* pFnIndexUp = NULL;
	if(!pFnIndexUp)
		pFnIndexUp = UObject::FindFunction("Function Engine.cDebugPageManager.IndexUp");

	Engine_IndexUp_Parms IndexUp_Parms;
	ProcessEvent(pFnIndexUp,NULL,&IndexUp_Parms,NULL);
}

struct Engine_PostRender_DebugPages_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UcDebugPageManager::PostRender_DebugPages(class UCanvas* Canvas)
{
	static UFieldFunc* pFnPostRender_DebugPages = NULL;
	if(!pFnPostRender_DebugPages)
		pFnPostRender_DebugPages = UObject::FindFunction("Function Engine.cDebugPageManager.PostRender_DebugPages");

	Engine_PostRender_DebugPages_Parms PostRender_DebugPages_Parms;
	PostRender_DebugPages_Parms.Canvas = Canvas;
	ProcessEvent(pFnPostRender_DebugPages,NULL,&PostRender_DebugPages_Parms,NULL);
}

struct Engine_RemoveDebugPage_Parms
{
	class UcDebugPage*                                 PageToRemove;                                     		// 0x000000 (0x0004)              
};

void UcDebugPageManager::RemoveDebugPage(class UcDebugPage* PageToRemove)
{
	static UFieldFunc* pFnRemoveDebugPage = NULL;
	if(!pFnRemoveDebugPage)
		pFnRemoveDebugPage = UObject::FindFunction("Function Engine.cDebugPageManager.RemoveDebugPage");

	Engine_RemoveDebugPage_Parms RemoveDebugPage_Parms;
	RemoveDebugPage_Parms.PageToRemove = PageToRemove;
	pFnRemoveDebugPage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveDebugPage,NULL,&RemoveDebugPage_Parms,NULL);
	pFnRemoveDebugPage->FunctionFlags |= 0x400;
}

struct Engine_Destroyed_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UcDebugPageManager::Destroyed()
{
	static UFieldFunc* pFnDestroyed = NULL;
	if(!pFnDestroyed)
		pFnDestroyed = UObject::FindFunction("Function Engine.cDebugPageManager.Destroyed");

	Engine_Destroyed_Parms Destroyed_Parms;
	ProcessEvent(pFnDestroyed,NULL,&Destroyed_Parms,NULL);
}

struct Engine_IndexDown_Parms
{
};

void UcDebugPageManager::IndexDown()
{
	static UFieldFunc* pFnIndexDown = NULL;
	if(!pFnIndexDown)
		pFnIndexDown = UObject::FindFunction("Function Engine.cDebugPageManager.IndexDown");

	Engine_IndexDown_Parms IndexDown_Parms;
	ProcessEvent(pFnIndexDown,NULL,&IndexDown_Parms,NULL);
}

struct Engine_AddDebugPage_Parms
{
	class UcDebugPage*                                 PageToAdd;                                        		// 0x000000 (0x0004)              
};

void UcDebugPageManager::AddDebugPage(class UcDebugPage* PageToAdd)
{
	static UFieldFunc* pFnAddDebugPage = NULL;
	if(!pFnAddDebugPage)
		pFnAddDebugPage = UObject::FindFunction("Function Engine.cDebugPageManager.AddDebugPage");

	Engine_AddDebugPage_Parms AddDebugPage_Parms;
	AddDebugPage_Parms.PageToAdd = PageToAdd;
	pFnAddDebugPage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddDebugPage,NULL,&AddDebugPage_Parms,NULL);
	pFnAddDebugPage->FunctionFlags |= 0x400;
}

struct Engine_Tick_Parms
{
	float                                              fDeltaTime;                                       		// 0x000000 (0x0004)              
};

void UcDebugPageManager::Tick(float fDeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.cDebugPageManager.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.fDeltaTime = fDeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_GetOffset_Parms
{
	FVector2                                           ReturnValue;                                      		// 0x000000 (0x0008)              
};

FVector2 UcDistrictVisualiser::GetOffset()
{
	static UFieldFunc* pFnGetOffset = NULL;
	if(!pFnGetOffset)
		pFnGetOffset = UObject::FindFunction("Function Engine.cDistrictVisualiser.GetOffset");

	Engine_GetOffset_Parms GetOffset_Parms;
	ProcessEvent(pFnGetOffset,NULL,&GetOffset_Parms,NULL);
	return GetOffset_Parms.ReturnValue;
}

struct Engine_Remove_Parms
{
	struct FString                                     sType;                                            		// 0x000000 (0x000C)              
	class UObject*                                     pObject;                                          		// 0x00000C (0x0004)              
};

void UcDistrictVisualiser::Remove(struct FString sType,class UObject* pObject)
{
	static UFieldFunc* pFnRemove = NULL;
	if(!pFnRemove)
		pFnRemove = UObject::FindFunction("Function Engine.cDistrictVisualiser.Remove");

	Engine_Remove_Parms Remove_Parms;
	memcpy(&Remove_Parms.sType,&sType,0xC);
	Remove_Parms.pObject = pObject;
	pFnRemove->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemove,NULL,&Remove_Parms,NULL);
	pFnRemove->FunctionFlags |= 0x400;
}

struct Engine_NativeOnClicked_Parms
{
};

void UcDistrictVisualiser::NativeOnClicked()
{
	static UFieldFunc* pFnNativeOnClicked = NULL;
	if(!pFnNativeOnClicked)
		pFnNativeOnClicked = UObject::FindFunction("Function Engine.cDistrictVisualiser.NativeOnClicked");

	Engine_NativeOnClicked_Parms NativeOnClicked_Parms;
	pFnNativeOnClicked->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNativeOnClicked,NULL,&NativeOnClicked_Parms,NULL);
	pFnNativeOnClicked->FunctionFlags |= 0x400;
}

struct Engine_OutputTextLine_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void UcDistrictVisualiser::OutputTextLine(struct FString Text)
{
	static UFieldFunc* pFnOutputTextLine = NULL;
	if(!pFnOutputTextLine)
		pFnOutputTextLine = UObject::FindFunction("Function Engine.cDistrictVisualiser.OutputTextLine");

	Engine_OutputTextLine_Parms OutputTextLine_Parms;
	memcpy(&OutputTextLine_Parms.Text,&Text,0xC);
	pFnOutputTextLine->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOutputTextLine,NULL,&OutputTextLine_Parms,NULL);
	pFnOutputTextLine->FunctionFlags |= 0x400;
}

struct Engine_InputAxis_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	float                                              Delta;                                            		// 0x00000C (0x0004)              
	float                                              DeltaTime;                                        		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	//FVector2                                           Movement;                                         		// 0x00001C (0x0008)              
	//float                                              fDeltaTime;                                       		// 0x000024 (0x0004)              
	//float                                              resistance;                                       		// 0x000028 (0x0004)              
};

bool UcDistrictVisualiser::InputAxis(int ControllerId,struct FName Key,float Delta,float DeltaTime,bool bGamepad)
{
	static UFieldFunc* pFnInputAxis = NULL;
	if(!pFnInputAxis)
		pFnInputAxis = UObject::FindFunction("Function Engine.cDistrictVisualiser.InputAxis");

	Engine_InputAxis_Parms InputAxis_Parms;
	InputAxis_Parms.ControllerId = ControllerId;
	memcpy(&InputAxis_Parms.Key,&Key,0x8);
	InputAxis_Parms.Delta = Delta;
	InputAxis_Parms.DeltaTime = DeltaTime;
	InputAxis_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnInputAxis,NULL,&InputAxis_Parms,NULL);
	return InputAxis_Parms.ReturnValue;
}

struct Engine_InputKey_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	unsigned char                                      Event;                                            		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	float                                              AmountDepressed;                                  		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UcDistrictVisualiser::InputKey(int ControllerId,struct FName Key,unsigned char Event,float AmountDepressed,bool bGamepad)
{
	static UFieldFunc* pFnInputKey = NULL;
	if(!pFnInputKey)
		pFnInputKey = UObject::FindFunction("Function Engine.cDistrictVisualiser.InputKey");

	Engine_InputKey_Parms InputKey_Parms;
	InputKey_Parms.ControllerId = ControllerId;
	memcpy(&InputKey_Parms.Key,&Key,0x8);
	InputKey_Parms.Event = Event;
	InputKey_Parms.AmountDepressed = AmountDepressed;
	InputKey_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnInputKey,NULL,&InputKey_Parms,NULL);
	return InputKey_Parms.ReturnValue;
}

struct Engine_Initialized_Parms
{
};

void UcDistrictVisualiser::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.cDistrictVisualiser.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_GetVPToWRatio_Parms
{
	FVector2                                           ReturnValue;                                      		// 0x000000 (0x0008)              
};

FVector2 UcDistrictVisualiser::GetVPToWRatio()
{
	static UFieldFunc* pFnGetVPToWRatio = NULL;
	if(!pFnGetVPToWRatio)
		pFnGetVPToWRatio = UObject::FindFunction("Function Engine.cDistrictVisualiser.GetVPToWRatio");

	Engine_GetVPToWRatio_Parms GetVPToWRatio_Parms;
	ProcessEvent(pFnGetVPToWRatio,NULL,&GetVPToWRatio_Parms,NULL);
	return GetVPToWRatio_Parms.ReturnValue;
}

struct Engine_RemoveAllEntities_Parms
{
};

void UcDistrictVisualiser::RemoveAllEntities()
{
	static UFieldFunc* pFnRemoveAllEntities = NULL;
	if(!pFnRemoveAllEntities)
		pFnRemoveAllEntities = UObject::FindFunction("Function Engine.cDistrictVisualiser.RemoveAllEntities");

	Engine_RemoveAllEntities_Parms RemoveAllEntities_Parms;
	pFnRemoveAllEntities->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveAllEntities,NULL,&RemoveAllEntities_Parms,NULL);
	pFnRemoveAllEntities->FunctionFlags |= 0x400;
}

struct Engine_Register_Parms
{
	struct FString                                     sType;                                            		// 0x000000 (0x000C)              
	struct FtEntityType                                tType;                                            		// 0x00000C (0x0014)              
	class UcEntity*                                    pEntity;                                          		// 0x000020 (0x0004)              
	class UTexture2D*                                  pTexture;                                         		// 0x000024 (0x0004)              
};

void UcDistrictVisualiser::Register(struct FString sType,struct FtEntityType tType,class UcEntity* pEntity,class UTexture2D* pTexture)
{
	static UFieldFunc* pFnRegister = NULL;
	if(!pFnRegister)
		pFnRegister = UObject::FindFunction("Function Engine.cDistrictVisualiser.Register");

	Engine_Register_Parms Register_Parms;
	memcpy(&Register_Parms.sType,&sType,0xC);
	memcpy(&Register_Parms.tType,&tType,0x14);
	Register_Parms.pEntity = pEntity;
	Register_Parms.pTexture = pTexture;
	pFnRegister->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRegister,NULL,&Register_Parms,NULL);
	pFnRegister->FunctionFlags |= 0x400;
}

struct Engine_GetZoomLevel_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UcDistrictVisualiser::GetZoomLevel()
{
	static UFieldFunc* pFnGetZoomLevel = NULL;
	if(!pFnGetZoomLevel)
		pFnGetZoomLevel = UObject::FindFunction("Function Engine.cDistrictVisualiser.GetZoomLevel");

	Engine_GetZoomLevel_Parms GetZoomLevel_Parms;
	ProcessEvent(pFnGetZoomLevel,NULL,&GetZoomLevel_Parms,NULL);
	return GetZoomLevel_Parms.ReturnValue;
}

struct Engine_ToggleEntityVisibility_Parms
{
	struct FString                                     sKey;                                             		// 0x000000 (0x000C)              
};

void UcDistrictVisualiser::ToggleEntityVisibility(struct FString sKey)
{
	static UFieldFunc* pFnToggleEntityVisibility = NULL;
	if(!pFnToggleEntityVisibility)
		pFnToggleEntityVisibility = UObject::FindFunction("Function Engine.cDistrictVisualiser.ToggleEntityVisibility");

	Engine_ToggleEntityVisibility_Parms ToggleEntityVisibility_Parms;
	memcpy(&ToggleEntityVisibility_Parms.sKey,&sKey,0xC);
	pFnToggleEntityVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnToggleEntityVisibility,NULL,&ToggleEntityVisibility_Parms,NULL);
	pFnToggleEntityVisibility->FunctionFlags |= 0x400;
}

struct Engine_OutputText_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void UcDistrictVisualiser::OutputText(struct FString Text)
{
	static UFieldFunc* pFnOutputText = NULL;
	if(!pFnOutputText)
		pFnOutputText = UObject::FindFunction("Function Engine.cDistrictVisualiser.OutputText");

	Engine_OutputText_Parms OutputText_Parms;
	memcpy(&OutputText_Parms.Text,&Text,0xC);
	pFnOutputText->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOutputText,NULL,&OutputText_Parms,NULL);
	pFnOutputText->FunctionFlags |= 0x400;
}

struct Engine_RenderMap_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UcDistrictVisualiser::RenderMap(class UCanvas* Canvas)
{
	static UFieldFunc* pFnRenderMap = NULL;
	if(!pFnRenderMap)
		pFnRenderMap = UObject::FindFunction("Function Engine.cDistrictVisualiser.RenderMap");

	Engine_RenderMap_Parms RenderMap_Parms;
	RenderMap_Parms.Canvas = Canvas;
	pFnRenderMap->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRenderMap,NULL,&RenderMap_Parms,NULL);
	pFnRenderMap->FunctionFlags |= 0x400;
}

struct Engine_PostRender_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UcDistrictVisualiser::PostRender(class UCanvas* Canvas)
{
	static UFieldFunc* pFnPostRender = NULL;
	if(!pFnPostRender)
		pFnPostRender = UObject::FindFunction("Function Engine.cDistrictVisualiser.PostRender");

	Engine_PostRender_Parms PostRender_Parms;
	PostRender_Parms.Canvas = Canvas;
	pFnPostRender->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPostRender,NULL,&PostRender_Parms,NULL);
	pFnPostRender->FunctionFlags |= 0x400;
}

struct Engine_StartTyping_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void UConsole::StartTyping(struct FString Text)
{
	static UFieldFunc* pFnStartTyping = NULL;
	if(!pFnStartTyping)
		pFnStartTyping = UObject::FindFunction("Function Engine.Console.StartTyping");

	Engine_StartTyping_Parms StartTyping_Parms;
	memcpy(&StartTyping_Parms.Text,&Text,0xC);
	ProcessEvent(pFnStartTyping,NULL,&StartTyping_Parms,NULL);
}

struct Engine_ConsoleCommand_Parms
{
	struct FString                                     Command;                                          		// 0x000000 (0x000C)              
};

void UConsole::ConsoleCommand(struct FString Command)
{
	static UFieldFunc* pFnConsoleCommand = NULL;
	if(!pFnConsoleCommand)
		pFnConsoleCommand = UObject::FindFunction("Function Engine.Console.ConsoleCommand");

	Engine_ConsoleCommand_Parms ConsoleCommand_Parms;
	memcpy(&ConsoleCommand_Parms.Command,&Command,0xC);
	ProcessEvent(pFnConsoleCommand,NULL,&ConsoleCommand_Parms,NULL);
}

struct Engine_BuildRuntimeAutoCompleteList_Parms
{
	unsigned long                                      bForce : 1;                                       		// 0x000000 (0x0004) [0x00000001] 
};

void UConsole::BuildRuntimeAutoCompleteList(bool bForce)
{
	static UFieldFunc* pFnBuildRuntimeAutoCompleteList = NULL;
	if(!pFnBuildRuntimeAutoCompleteList)
		pFnBuildRuntimeAutoCompleteList = UObject::FindFunction("Function Engine.Console.BuildRuntimeAutoCompleteList");

	Engine_BuildRuntimeAutoCompleteList_Parms BuildRuntimeAutoCompleteList_Parms;
	BuildRuntimeAutoCompleteList_Parms.bForce = bForce;
	pFnBuildRuntimeAutoCompleteList->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBuildRuntimeAutoCompleteList,NULL,&BuildRuntimeAutoCompleteList_Parms,NULL);
	pFnBuildRuntimeAutoCompleteList->FunctionFlags |= 0x400;
}

struct Engine_SetCursorPos_Parms
{
	int                                                Position;                                         		// 0x000000 (0x0004)              
};

void UConsole::SetCursorPos(int Position)
{
	static UFieldFunc* pFnSetCursorPos = NULL;
	if(!pFnSetCursorPos)
		pFnSetCursorPos = UObject::FindFunction("Function Engine.Console.SetCursorPos");

	Engine_SetCursorPos_Parms SetCursorPos_Parms;
	SetCursorPos_Parms.Position = Position;
	ProcessEvent(pFnSetCursorPos,NULL,&SetCursorPos_Parms,NULL);
}

struct Engine_SetInputText_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void UConsole::SetInputText(struct FString Text)
{
	static UFieldFunc* pFnSetInputText = NULL;
	if(!pFnSetInputText)
		pFnSetInputText = UObject::FindFunction("Function Engine.Console.SetInputText");

	Engine_SetInputText_Parms SetInputText_Parms;
	memcpy(&SetInputText_Parms.Text,&Text,0xC);
	ProcessEvent(pFnSetInputText,NULL,&SetInputText_Parms,NULL);
}

struct Engine_UpdateCompleteIndices_Parms
{
};

void UConsole::UpdateCompleteIndices()
{
	static UFieldFunc* pFnUpdateCompleteIndices = NULL;
	if(!pFnUpdateCompleteIndices)
		pFnUpdateCompleteIndices = UObject::FindFunction("Function Engine.Console.UpdateCompleteIndices");

	Engine_UpdateCompleteIndices_Parms UpdateCompleteIndices_Parms;
	pFnUpdateCompleteIndices->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateCompleteIndices,NULL,&UpdateCompleteIndices_Parms,NULL);
	pFnUpdateCompleteIndices->FunctionFlags |= 0x400;
}

struct Engine_PostRender_Console_Parms
{
	class UCanvas*                                     Canvas;                                           		// 0x000000 (0x0004)              
};

void UConsole::PostRender_Console(class UCanvas* Canvas)
{
	static UFieldFunc* pFnPostRender_Console = NULL;
	if(!pFnPostRender_Console)
		pFnPostRender_Console = UObject::FindFunction("Function Engine.Console.PostRender_Console");

	Engine_PostRender_Console_Parms PostRender_Console_Parms;
	PostRender_Console_Parms.Canvas = Canvas;
	ProcessEvent(pFnPostRender_Console,NULL,&PostRender_Console_Parms,NULL);
}

struct Engine_InputChar_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FString                                     Unicode;                                          		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UConsole::InputChar(int ControllerId,struct FString Unicode)
{
	static UFieldFunc* pFnInputChar = NULL;
	if(!pFnInputChar)
		pFnInputChar = UObject::FindFunction("Function Engine.Console.InputChar");

	Engine_InputChar_Parms InputChar_Parms;
	InputChar_Parms.ControllerId = ControllerId;
	memcpy(&InputChar_Parms.Unicode,&Unicode,0xC);
	ProcessEvent(pFnInputChar,NULL,&InputChar_Parms,NULL);
	return InputChar_Parms.ReturnValue;
}

struct Engine_ProcessControlKey_Parms
{
	struct FName                                       Key;                                              		// 0x000000 (0x0008)              
	unsigned char                                      Event;                                            		// 0x000008 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UConsole::ProcessControlKey(struct FName Key,unsigned char Event)
{
	static UFieldFunc* pFnProcessControlKey = NULL;
	if(!pFnProcessControlKey)
		pFnProcessControlKey = UObject::FindFunction("Function Engine.Console.ProcessControlKey");

	Engine_ProcessControlKey_Parms ProcessControlKey_Parms;
	memcpy(&ProcessControlKey_Parms.Key,&Key,0x8);
	ProcessControlKey_Parms.Event = Event;
	ProcessEvent(pFnProcessControlKey,NULL,&ProcessControlKey_Parms,NULL);
	return ProcessControlKey_Parms.ReturnValue;
}

struct Engine_InputKey_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	struct FName                                       Key;                                              		// 0x000004 (0x0008)              
	unsigned char                                      Event;                                            		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	float                                              AmountDepressed;                                  		// 0x000010 (0x0004)              
	unsigned long                                      bGamepad : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UConsole::InputKey(int ControllerId,struct FName Key,unsigned char Event,float AmountDepressed,bool bGamepad)
{
	static UFieldFunc* pFnInputKey = NULL;
	if(!pFnInputKey)
		pFnInputKey = UObject::FindFunction("Function Engine.Console.InputKey");

	Engine_InputKey_Parms InputKey_Parms;
	InputKey_Parms.ControllerId = ControllerId;
	memcpy(&InputKey_Parms.Key,&Key,0x8);
	InputKey_Parms.Event = Event;
	InputKey_Parms.AmountDepressed = AmountDepressed;
	InputKey_Parms.bGamepad = bGamepad;
	ProcessEvent(pFnInputKey,NULL,&InputKey_Parms,NULL);
	return InputKey_Parms.ReturnValue;
}

struct Engine_FlushPlayerInput_Parms
{
	//class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void UConsole::FlushPlayerInput()
{
	static UFieldFunc* pFnFlushPlayerInput = NULL;
	if(!pFnFlushPlayerInput)
		pFnFlushPlayerInput = UObject::FindFunction("Function Engine.Console.FlushPlayerInput");

	Engine_FlushPlayerInput_Parms FlushPlayerInput_Parms;
	ProcessEvent(pFnFlushPlayerInput,NULL,&FlushPlayerInput_Parms,NULL);
}

struct Engine_ClearOutput_Parms
{
};

void UConsole::ClearOutput()
{
	static UFieldFunc* pFnClearOutput = NULL;
	if(!pFnClearOutput)
		pFnClearOutput = UObject::FindFunction("Function Engine.Console.ClearOutput");

	Engine_ClearOutput_Parms ClearOutput_Parms;
	ProcessEvent(pFnClearOutput,NULL,&ClearOutput_Parms,NULL);
}

struct Engine_OutputTextLine_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
};

void UConsole::OutputTextLine(struct FString Text)
{
	static UFieldFunc* pFnOutputTextLine = NULL;
	if(!pFnOutputTextLine)
		pFnOutputTextLine = UObject::FindFunction("Function Engine.Console.OutputTextLine");

	Engine_OutputTextLine_Parms OutputTextLine_Parms;
	memcpy(&OutputTextLine_Parms.Text,&Text,0xC);
	ProcessEvent(pFnOutputTextLine,NULL,&OutputTextLine_Parms,NULL);
}

struct Engine_OutputText_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
	//struct FString                                     RemainingText;                                    		// 0x00000C (0x000C)              
	//int                                                StringLength;                                     		// 0x000018 (0x0004)              
	//int                                                LineLength;                                       		// 0x00001C (0x0004)              
};

void UConsole::OutputText(struct FString Text)
{
	static UFieldFunc* pFnOutputText = NULL;
	if(!pFnOutputText)
		pFnOutputText = UObject::FindFunction("Function Engine.Console.OutputText");

	Engine_OutputText_Parms OutputText_Parms;
	memcpy(&OutputText_Parms.Text,&Text,0xC);
	ProcessEvent(pFnOutputText,NULL,&OutputText_Parms,NULL);
}

struct Engine_Initialized_Parms
{
};

void UConsole::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.Console.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_PurgeCommandFromHistory_Parms
{
	struct FString                                     Command;                                          		// 0x000000 (0x000C)              
	//int                                                HistoryIdx;                                       		// 0x00000C (0x0004)              
	//int                                                Idx;                                              		// 0x000010 (0x0004)              
	//int                                                NextIdx;                                          		// 0x000014 (0x0004)              
};

void UConsole::PurgeCommandFromHistory(struct FString Command)
{
	static UFieldFunc* pFnPurgeCommandFromHistory = NULL;
	if(!pFnPurgeCommandFromHistory)
		pFnPurgeCommandFromHistory = UObject::FindFunction("Function Engine.Console.PurgeCommandFromHistory");

	Engine_PurgeCommandFromHistory_Parms PurgeCommandFromHistory_Parms;
	memcpy(&PurgeCommandFromHistory_Parms.Command,&Command,0xC);
	ProcessEvent(pFnPurgeCommandFromHistory,NULL,&PurgeCommandFromHistory_Parms,NULL);
}

struct Engine_AppendInputText_Parms
{
	struct FString                                     Text;                                             		// 0x000000 (0x000C)              
	//int                                                Character;                                        		// 0x00000C (0x0004)              
};

void UConsole::AppendInputText(struct FString Text)
{
	static UFieldFunc* pFnAppendInputText = NULL;
	if(!pFnAppendInputText)
		pFnAppendInputText = UObject::FindFunction("Function Engine.Console.AppendInputText");

	Engine_AppendInputText_Parms AppendInputText_Parms;
	memcpy(&AppendInputText_Parms.Text,&Text,0xC);
	ProcessEvent(pFnAppendInputText,NULL,&AppendInputText_Parms,NULL);
}

struct Engine_ResetInput_Parms
{
};

void UInput::ResetInput()
{
	static UFieldFunc* pFnResetInput = NULL;
	if(!pFnResetInput)
		pFnResetInput = UObject::FindFunction("Function Engine.Input.ResetInput");

	Engine_ResetInput_Parms ResetInput_Parms;
	pFnResetInput->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetInput,NULL,&ResetInput_Parms,NULL);
	pFnResetInput->FunctionFlags |= 0x400;
}

struct Engine_GetBind_Parms
{
	struct FName                                       Key;                                              		// 0x000000 (0x0008)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UInput::GetBind(struct FName Key)
{
	static UFieldFunc* pFnGetBind = NULL;
	if(!pFnGetBind)
		pFnGetBind = UObject::FindFunction("Function Engine.Input.GetBind");

	Engine_GetBind_Parms GetBind_Parms;
	memcpy(&GetBind_Parms.Key,&Key,0x8);
	pFnGetBind->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBind,NULL,&GetBind_Parms,NULL);
	pFnGetBind->FunctionFlags |= 0x400;
	return GetBind_Parms.ReturnValue;
}

struct Engine_SmartJump_Parms
{
};

void UPlayerInput::SmartJump()
{
	static UFieldFunc* pFnSmartJump = NULL;
	if(!pFnSmartJump)
		pFnSmartJump = UObject::FindFunction("Function Engine.PlayerInput.SmartJump");

	Engine_SmartJump_Parms SmartJump_Parms;
	ProcessEvent(pFnSmartJump,NULL,&SmartJump_Parms,NULL);
}

struct Engine_PostProcessInput_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void UPlayerInput::PostProcessInput(float DeltaTime)
{
	static UFieldFunc* pFnPostProcessInput = NULL;
	if(!pFnPostProcessInput)
		pFnPostProcessInput = UObject::FindFunction("Function Engine.PlayerInput.PostProcessInput");

	Engine_PostProcessInput_Parms PostProcessInput_Parms;
	PostProcessInput_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnPostProcessInput,NULL,&PostProcessInput_Parms,NULL);
}

struct Engine_SmoothMouse_Parms
{
	float                                              aMouse;                                           		// 0x000000 (0x0004)              
	float                                              DeltaTime;                                        		// 0x000004 (0x0004)              
	unsigned char                                      SampleCount;                                      		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	int                                                Index;                                            		// 0x00000C (0x0004)              
	float                                              ReturnValue;                                      		// 0x000010 (0x0004)              
	//float                                              MouseSamplingTime;                                		// 0x000014 (0x0004)              
};

float UPlayerInput::SmoothMouse(float aMouse,float DeltaTime,unsigned char* SampleCount,int Index)
{
	static UFieldFunc* pFnSmoothMouse = NULL;
	if(!pFnSmoothMouse)
		pFnSmoothMouse = UObject::FindFunction("Function Engine.PlayerInput.SmoothMouse");

	Engine_SmoothMouse_Parms SmoothMouse_Parms;
	SmoothMouse_Parms.aMouse = aMouse;
	SmoothMouse_Parms.DeltaTime = DeltaTime;
	SmoothMouse_Parms.Index = Index;
	ProcessEvent(pFnSmoothMouse,NULL,&SmoothMouse_Parms,NULL);
	if(SampleCount)
		*SampleCount = SmoothMouse_Parms.SampleCount;
	return SmoothMouse_Parms.ReturnValue;
}

struct Engine_ClearSmoothing_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UPlayerInput::ClearSmoothing()
{
	static UFieldFunc* pFnClearSmoothing = NULL;
	if(!pFnClearSmoothing)
		pFnClearSmoothing = UObject::FindFunction("Function Engine.PlayerInput.ClearSmoothing");

	Engine_ClearSmoothing_Parms ClearSmoothing_Parms;
	ProcessEvent(pFnClearSmoothing,NULL,&ClearSmoothing_Parms,NULL);
}

struct Engine_InvertTurn_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UPlayerInput::InvertTurn()
{
	static UFieldFunc* pFnInvertTurn = NULL;
	if(!pFnInvertTurn)
		pFnInvertTurn = UObject::FindFunction("Function Engine.PlayerInput.InvertTurn");

	Engine_InvertTurn_Parms InvertTurn_Parms;
	ProcessEvent(pFnInvertTurn,NULL,&InvertTurn_Parms,NULL);
	return InvertTurn_Parms.ReturnValue;
}

struct Engine_PlayerInput_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	//float                                              FOVScale;                                         		// 0x000004 (0x0004)              
	//float                                              TimeScale;                                        		// 0x000008 (0x0004)              
};

void UPlayerInput::PlayerInput(float DeltaTime)
{
	static UFieldFunc* pFnPlayerInput = NULL;
	if(!pFnPlayerInput)
		pFnPlayerInput = UObject::FindFunction("Function Engine.PlayerInput.PlayerInput");

	Engine_PlayerInput_Parms PlayerInput_Parms;
	PlayerInput_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnPlayerInput,NULL,&PlayerInput_Parms,NULL);
}

struct Engine_AdjustMouseSensitivity_Parms
{
	float                                              FOVScale;                                         		// 0x000000 (0x0004)              
};

void UPlayerInput::AdjustMouseSensitivity(float FOVScale)
{
	static UFieldFunc* pFnAdjustMouseSensitivity = NULL;
	if(!pFnAdjustMouseSensitivity)
		pFnAdjustMouseSensitivity = UObject::FindFunction("Function Engine.PlayerInput.AdjustMouseSensitivity");

	Engine_AdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;
	AdjustMouseSensitivity_Parms.FOVScale = FOVScale;
	ProcessEvent(pFnAdjustMouseSensitivity,NULL,&AdjustMouseSensitivity_Parms,NULL);
}

struct Engine_PreProcessInput_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void UPlayerInput::PreProcessInput(float DeltaTime)
{
	static UFieldFunc* pFnPreProcessInput = NULL;
	if(!pFnPreProcessInput)
		pFnPreProcessInput = UObject::FindFunction("Function Engine.PlayerInput.PreProcessInput");

	Engine_PreProcessInput_Parms PreProcessInput_Parms;
	PreProcessInput_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnPreProcessInput,NULL,&PreProcessInput_Parms,NULL);
}

struct Engine_Jump_Parms
{
};

void UPlayerInput::Jump()
{
	static UFieldFunc* pFnJump = NULL;
	if(!pFnJump)
		pFnJump = UObject::FindFunction("Function Engine.PlayerInput.Jump");

	Engine_Jump_Parms Jump_Parms;
	ProcessEvent(pFnJump,NULL,&Jump_Parms,NULL);
}

struct Engine_DrawHUD_Parms
{
	class AHUD*                                        H;                                                		// 0x000000 (0x0004)              
};

void UPlayerInput::DrawHUD(class AHUD* H)
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.PlayerInput.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	DrawHUD_Parms.H = H;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_ProcessInputMatching_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	//float                                              Value;                                            		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//int                                                MatchIdx;                                         		// 0x00000C (0x0004)              
	//unsigned long                                      bMatch : 1;                                       		// 0x000010 (0x0004) [0x00000001] 
};

void UPlayerInput::ProcessInputMatching(float DeltaTime)
{
	static UFieldFunc* pFnProcessInputMatching = NULL;
	if(!pFnProcessInputMatching)
		pFnProcessInputMatching = UObject::FindFunction("Function Engine.PlayerInput.ProcessInputMatching");

	Engine_ProcessInputMatching_Parms ProcessInputMatching_Parms;
	ProcessInputMatching_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnProcessInputMatching,NULL,&ProcessInputMatching_Parms,NULL);
}

struct Engine_SetSensitivity_Parms
{
	float                                              F;                                                		// 0x000000 (0x0004)              
};

void UPlayerInput::SetSensitivity(float F)
{
	static UFieldFunc* pFnSetSensitivity = NULL;
	if(!pFnSetSensitivity)
		pFnSetSensitivity = UObject::FindFunction("Function Engine.PlayerInput.SetSensitivity");

	Engine_SetSensitivity_Parms SetSensitivity_Parms;
	SetSensitivity_Parms.F = F;
	ProcessEvent(pFnSetSensitivity,NULL,&SetSensitivity_Parms,NULL);
}

struct Engine_NotifyPlayerRemoved_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                RemovedPlayer;                                    		// 0x000004 (0x0004)              
	//int                                                PlayerCount;                                      		// 0x000008 (0x0004)              
	//int                                                NextPlayerIndex;                                  		// 0x00000C (0x0004)              
	//int                                                I;                                                		// 0x000010 (0x0004)              
	//struct FUIAxisEmulationData                        Empty;                                            		// 0x000014 (0x0014)              
};

void UUIInteraction::NotifyPlayerRemoved(int PlayerIndex,class ULocalPlayer* RemovedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerRemoved = NULL;
	if(!pFnNotifyPlayerRemoved)
		pFnNotifyPlayerRemoved = UObject::FindFunction("Function Engine.UIInteraction.NotifyPlayerRemoved");

	Engine_NotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;
	NotifyPlayerRemoved_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerRemoved_Parms.RemovedPlayer = RemovedPlayer;
	ProcessEvent(pFnNotifyPlayerRemoved,NULL,&NotifyPlayerRemoved_Parms,NULL);
}

struct Engine_IsLoggedIn_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bRequireOnlineLogin : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	//unsigned char                                      LoginStatus;                                      		// 0x000010 (0x0001)              
};

bool UUIInteraction::IsLoggedIn(int ControllerId,bool bRequireOnlineLogin)
{
	static UFieldFunc* pFnIsLoggedIn = NULL;
	if(!pFnIsLoggedIn)
		pFnIsLoggedIn = UObject::FindFunction("Function Engine.UIInteraction.IsLoggedIn");

	Engine_IsLoggedIn_Parms IsLoggedIn_Parms;
	IsLoggedIn_Parms.ControllerId = ControllerId;
	IsLoggedIn_Parms.bRequireOnlineLogin = bRequireOnlineLogin;
	ProcessEvent(pFnIsLoggedIn,NULL,&IsLoggedIn_Parms,NULL);
	return IsLoggedIn_Parms.ReturnValue;
}

struct Engine_CreateTransientWidget_Parms
{
	class UClass*                                      WidgetClass;                                      		// 0x000000 (0x0004)              
	struct FName                                       WidgetTag;                                        		// 0x000004 (0x0008)              
	class UUIObject*                                   Owner;                                            		// 0x00000C (0x0004)              
	class UUIObject*                                   ReturnValue;                                      		// 0x000010 (0x0004)              
};

class UUIObject* UUIInteraction::CreateTransientWidget(class UClass* WidgetClass,struct FName WidgetTag,class UUIObject* Owner)
{
	static UFieldFunc* pFnCreateTransientWidget = NULL;
	if(!pFnCreateTransientWidget)
		pFnCreateTransientWidget = UObject::FindFunction("Function Engine.UIInteraction.CreateTransientWidget");

	Engine_CreateTransientWidget_Parms CreateTransientWidget_Parms;
	CreateTransientWidget_Parms.WidgetClass = WidgetClass;
	memcpy(&CreateTransientWidget_Parms.WidgetTag,&WidgetTag,0x8);
	CreateTransientWidget_Parms.Owner = Owner;
	pFnCreateTransientWidget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateTransientWidget,NULL,&CreateTransientWidget_Parms,NULL);
	pFnCreateTransientWidget->FunctionFlags |= 0x400;
	return CreateTransientWidget_Parms.ReturnValue;
}

struct Engine_CloseScene_Parms
{
	class UUIScene*                                    Scene;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIInteraction::CloseScene(class UUIScene* Scene)
{
	static UFieldFunc* pFnCloseScene = NULL;
	if(!pFnCloseScene)
		pFnCloseScene = UObject::FindFunction("Function Engine.UIInteraction.CloseScene");

	Engine_CloseScene_Parms CloseScene_Parms;
	CloseScene_Parms.Scene = Scene;
	ProcessEvent(pFnCloseScene,NULL,&CloseScene_Parms,NULL);
	return CloseScene_Parms.ReturnValue;
}

struct Engine_OpenScene_Parms
{
	class UUIScene*                                    Scene;                                            		// 0x000000 (0x0004)              
	class ULocalPlayer*                                SceneOwner;                                       		// 0x000004 (0x0004)              
	class UUIScene*                                    OpenedScene;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIInteraction::OpenScene(class UUIScene* Scene,class ULocalPlayer* SceneOwner,class UUIScene** OpenedScene)
{
	static UFieldFunc* pFnOpenScene = NULL;
	if(!pFnOpenScene)
		pFnOpenScene = UObject::FindFunction("Function Engine.UIInteraction.OpenScene");

	Engine_OpenScene_Parms OpenScene_Parms;
	OpenScene_Parms.Scene = Scene;
	OpenScene_Parms.SceneOwner = SceneOwner;
	ProcessEvent(pFnOpenScene,NULL,&OpenScene_Parms,NULL);
	if(OpenedScene)
		*OpenedScene = OpenScene_Parms.OpenedScene;
	return OpenScene_Parms.ReturnValue;
}

struct Engine_FindSceneByTag_Parms
{
	struct FName                                       SceneTag;                                         		// 0x000000 (0x0008)              
	class ULocalPlayer*                                SceneOwner;                                       		// 0x000008 (0x0004)              
	class UUIScene*                                    ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UUIScene* UUIInteraction::FindSceneByTag(struct FName SceneTag,class ULocalPlayer* SceneOwner)
{
	static UFieldFunc* pFnFindSceneByTag = NULL;
	if(!pFnFindSceneByTag)
		pFnFindSceneByTag = UObject::FindFunction("Function Engine.UIInteraction.FindSceneByTag");

	Engine_FindSceneByTag_Parms FindSceneByTag_Parms;
	memcpy(&FindSceneByTag_Parms.SceneTag,&SceneTag,0x8);
	FindSceneByTag_Parms.SceneOwner = SceneOwner;
	ProcessEvent(pFnFindSceneByTag,NULL,&FindSceneByTag_Parms,NULL);
	return FindSceneByTag_Parms.ReturnValue;
}

struct Engine_GetPlayerControllerId_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UUIInteraction::GetPlayerControllerId(int PlayerIndex)
{
	static UFieldFunc* pFnGetPlayerControllerId = NULL;
	if(!pFnGetPlayerControllerId)
		pFnGetPlayerControllerId = UObject::FindFunction("Function Engine.UIInteraction.GetPlayerControllerId");

	Engine_GetPlayerControllerId_Parms GetPlayerControllerId_Parms;
	GetPlayerControllerId_Parms.PlayerIndex = PlayerIndex;
	pFnGetPlayerControllerId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerControllerId,NULL,&GetPlayerControllerId_Parms,NULL);
	pFnGetPlayerControllerId->FunctionFlags |= 0x400;
	return GetPlayerControllerId_Parms.ReturnValue;
}

struct Engine_NotifyPlayerAdded_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                AddedPlayer;                                      		// 0x000004 (0x0004)              
	//struct FUIAxisEmulationData                        Empty;                                            		// 0x000008 (0x0014)              
};

void UUIInteraction::NotifyPlayerAdded(int PlayerIndex,class ULocalPlayer* AddedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerAdded = NULL;
	if(!pFnNotifyPlayerAdded)
		pFnNotifyPlayerAdded = UObject::FindFunction("Function Engine.UIInteraction.NotifyPlayerAdded");

	Engine_NotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;
	NotifyPlayerAdded_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerAdded_Parms.AddedPlayer = AddedPlayer;
	ProcessEvent(pFnNotifyPlayerAdded,NULL,&NotifyPlayerAdded_Parms,NULL);
}

struct Engine_SetMousePosition_Parms
{
	int                                                NewMouseX;                                        		// 0x000000 (0x0004)              
	int                                                NewMouseY;                                        		// 0x000004 (0x0004)              
	unsigned long                                      bScaledPosition : 1;                              		// 0x000008 (0x0004) [0x00000001] 
};

void UUIInteraction::SetMousePosition(int NewMouseX,int NewMouseY,bool bScaledPosition)
{
	static UFieldFunc* pFnSetMousePosition = NULL;
	if(!pFnSetMousePosition)
		pFnSetMousePosition = UObject::FindFunction("Function Engine.UIInteraction.SetMousePosition");

	Engine_SetMousePosition_Parms SetMousePosition_Parms;
	SetMousePosition_Parms.NewMouseX = NewMouseX;
	SetMousePosition_Parms.NewMouseY = NewMouseY;
	SetMousePosition_Parms.bScaledPosition = bScaledPosition;
	ProcessEvent(pFnSetMousePosition,NULL,&SetMousePosition_Parms,NULL);
}

struct Engine_GetDataStoreClient_Parms
{
	class UDataStoreClient*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UDataStoreClient* UUIInteraction::GetDataStoreClient()
{
	static UFieldFunc* pFnGetDataStoreClient = NULL;
	if(!pFnGetDataStoreClient)
		pFnGetDataStoreClient = UObject::FindFunction("Function Engine.UIInteraction.GetDataStoreClient");

	Engine_GetDataStoreClient_Parms GetDataStoreClient_Parms;
	pFnGetDataStoreClient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreClient,NULL,&GetDataStoreClient_Parms,NULL);
	pFnGetDataStoreClient->FunctionFlags |= 0x400;
	return GetDataStoreClient_Parms.ReturnValue;
}

struct Engine_HasLinkConnection_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000004 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000008 (0x0004)              
	//class UOnlineSystemInterface*                      SystemInterface;                                  		// 0x00000C (0x0008)              
};

bool UUIInteraction::HasLinkConnection()
{
	static UFieldFunc* pFnHasLinkConnection = NULL;
	if(!pFnHasLinkConnection)
		pFnHasLinkConnection = UObject::FindFunction("Function Engine.UIInteraction.HasLinkConnection");

	Engine_HasLinkConnection_Parms HasLinkConnection_Parms;
	ProcessEvent(pFnHasLinkConnection,NULL,&HasLinkConnection_Parms,NULL);
	return HasLinkConnection_Parms.ReturnValue;
}

struct Engine_MergeScene_Parms
{
	class UUIScene*                                    SourceScene;                                      		// 0x000000 (0x0004)              
	class UUIScene*                                    SceneTarget;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIInteraction::MergeScene(class UUIScene* SourceScene,class UUIScene* SceneTarget)
{
	static UFieldFunc* pFnMergeScene = NULL;
	if(!pFnMergeScene)
		pFnMergeScene = UObject::FindFunction("Function Engine.UIInteraction.MergeScene");

	Engine_MergeScene_Parms MergeScene_Parms;
	MergeScene_Parms.SourceScene = SourceScene;
	MergeScene_Parms.SceneTarget = SceneTarget;
	ProcessEvent(pFnMergeScene,NULL,&MergeScene_Parms,NULL);
	return MergeScene_Parms.ReturnValue;
}

struct Engine_CreateScene_Parms
{
	class UClass*                                      SceneClass;                                       		// 0x000000 (0x0004)              
	struct FName                                       SceneTag;                                         		// 0x000004 (0x0008)              
	class UUIScene*                                    SceneTemplate;                                    		// 0x00000C (0x0004)              
	class UUIScene*                                    ReturnValue;                                      		// 0x000010 (0x0004)              
};

class UUIScene* UUIInteraction::CreateScene(class UClass* SceneClass,struct FName SceneTag,class UUIScene* SceneTemplate)
{
	static UFieldFunc* pFnCreateScene = NULL;
	if(!pFnCreateScene)
		pFnCreateScene = UObject::FindFunction("Function Engine.UIInteraction.CreateScene");

	Engine_CreateScene_Parms CreateScene_Parms;
	CreateScene_Parms.SceneClass = SceneClass;
	memcpy(&CreateScene_Parms.SceneTag,&SceneTag,0x8);
	CreateScene_Parms.SceneTemplate = SceneTemplate;
	pFnCreateScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateScene,NULL,&CreateScene_Parms,NULL);
	pFnCreateScene->FunctionFlags |= 0x400;
	return CreateScene_Parms.ReturnValue;
}

struct Engine_GetTransientScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScene* UUIInteraction::GetTransientScene()
{
	static UFieldFunc* pFnGetTransientScene = NULL;
	if(!pFnGetTransientScene)
		pFnGetTransientScene = UObject::FindFunction("Function Engine.UIInteraction.GetTransientScene");

	Engine_GetTransientScene_Parms GetTransientScene_Parms;
	ProcessEvent(pFnGetTransientScene,NULL,&GetTransientScene_Parms,NULL);
	return GetTransientScene_Parms.ReturnValue;
}

struct Engine_GetPlayerCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIInteraction::GetPlayerCount()
{
	static UFieldFunc* pFnGetPlayerCount = NULL;
	if(!pFnGetPlayerCount)
		pFnGetPlayerCount = UObject::FindFunction("Function Engine.UIInteraction.GetPlayerCount");

	Engine_GetPlayerCount_Parms GetPlayerCount_Parms;
	pFnGetPlayerCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerCount,NULL,&GetPlayerCount_Parms,NULL);
	pFnGetPlayerCount->FunctionFlags |= 0x400;
	return GetPlayerCount_Parms.ReturnValue;
}

struct Engine_GetPlayerIndex_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UUIInteraction::GetPlayerIndex(int ControllerId)
{
	static UFieldFunc* pFnGetPlayerIndex = NULL;
	if(!pFnGetPlayerIndex)
		pFnGetPlayerIndex = UObject::FindFunction("Function Engine.UIInteraction.GetPlayerIndex");

	Engine_GetPlayerIndex_Parms GetPlayerIndex_Parms;
	GetPlayerIndex_Parms.ControllerId = ControllerId;
	pFnGetPlayerIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerIndex,NULL,&GetPlayerIndex_Parms,NULL);
	pFnGetPlayerIndex->FunctionFlags |= 0x400;
	return GetPlayerIndex_Parms.ReturnValue;
}

struct Engine_GetNATType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlineSystemInterface*                      SystemInterface;                                  		// 0x000008 (0x0008)              
	//unsigned char                                      Result;                                           		// 0x000010 (0x0001)              
};

unsigned char UUIInteraction::GetNATType()
{
	static UFieldFunc* pFnGetNATType = NULL;
	if(!pFnGetNATType)
		pFnGetNATType = UObject::FindFunction("Function Engine.UIInteraction.GetNATType");

	Engine_GetNATType_Parms GetNATType_Parms;
	ProcessEvent(pFnGetNATType,NULL,&GetNATType_Parms,NULL);
	return GetNATType_Parms.ReturnValue;
}

struct Engine_NotifyGameSessionEnded_Parms
{
};

void UUIInteraction::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.UIInteraction.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
}

struct Engine_GetLoginStatus_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
	//unsigned char                                      Result;                                           		// 0x000005 (0x0001)              
	unsigned char                                      _0x000006[0x2];                                   		// 0x000006 (0x0002) ALIGNEMENT
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000008 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x00000C (0x0008)              
};

unsigned char UUIInteraction::GetLoginStatus(int ControllerId)
{
	static UFieldFunc* pFnGetLoginStatus = NULL;
	if(!pFnGetLoginStatus)
		pFnGetLoginStatus = UObject::FindFunction("Function Engine.UIInteraction.GetLoginStatus");

	Engine_GetLoginStatus_Parms GetLoginStatus_Parms;
	GetLoginStatus_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnGetLoginStatus,NULL,&GetLoginStatus_Parms,NULL);
	return GetLoginStatus_Parms.ReturnValue;
}

struct Engine_PlayUISound_Parms
{
	struct FEnumeratedName                             SoundCueName;                                     		// 0x000000 (0x0010)              
	int                                                PlayerIndex;                                      		// 0x000010 (0x0004)              
	struct FString                                     ComponentName;                                    		// 0x000014 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUIInteraction::PlayUISound(struct FEnumeratedName SoundCueName,int PlayerIndex,struct FString ComponentName)
{
	static UFieldFunc* pFnPlayUISound = NULL;
	if(!pFnPlayUISound)
		pFnPlayUISound = UObject::FindFunction("Function Engine.UIInteraction.PlayUISound");

	Engine_PlayUISound_Parms PlayUISound_Parms;
	memcpy(&PlayUISound_Parms.SoundCueName,&SoundCueName,0x10);
	PlayUISound_Parms.PlayerIndex = PlayerIndex;
	memcpy(&PlayUISound_Parms.ComponentName,&ComponentName,0xC);
	pFnPlayUISound->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPlayUISound,NULL,&PlayUISound_Parms,NULL);
	pFnPlayUISound->FunctionFlags |= 0x400;
	return PlayUISound_Parms.ReturnValue;
}

struct Engine_IsMenuLevel_Parms
{
	struct FString                                     MapName;                                          		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIInteraction::IsMenuLevel(struct FString MapName)
{
	static UFieldFunc* pFnIsMenuLevel = NULL;
	if(!pFnIsMenuLevel)
		pFnIsMenuLevel = UObject::FindFunction("Function Engine.UIInteraction.IsMenuLevel");

	Engine_IsMenuLevel_Parms IsMenuLevel_Parms;
	memcpy(&IsMenuLevel_Parms.MapName,&MapName,0xC);
	pFnIsMenuLevel->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsMenuLevel,NULL,&IsMenuLevel_Parms,NULL);
	pFnIsMenuLevel->FunctionFlags |= 0x400;
	return IsMenuLevel_Parms.ReturnValue;
}

struct Engine_CanPlayOnline_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned char                                      Result;                                           		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00000C (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000010 (0x0008)              
};

bool UUIInteraction::CanPlayOnline(int ControllerId)
{
	static UFieldFunc* pFnCanPlayOnline = NULL;
	if(!pFnCanPlayOnline)
		pFnCanPlayOnline = UObject::FindFunction("Function Engine.UIInteraction.CanPlayOnline");

	Engine_CanPlayOnline_Parms CanPlayOnline_Parms;
	CanPlayOnline_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnCanPlayOnline,NULL,&CanPlayOnline_Parms,NULL);
	return CanPlayOnline_Parms.ReturnValue;
}

struct Engine_LoadInputAliasClasses_Parms
{
};

void UUIInputConfiguration::LoadInputAliasClasses()
{
	static UFieldFunc* pFnLoadInputAliasClasses = NULL;
	if(!pFnLoadInputAliasClasses)
		pFnLoadInputAliasClasses = UObject::FindFunction("Function Engine.UIInputConfiguration.LoadInputAliasClasses");

	Engine_LoadInputAliasClasses_Parms LoadInputAliasClasses_Parms;
	pFnLoadInputAliasClasses->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLoadInputAliasClasses,NULL,&LoadInputAliasClasses_Parms,NULL);
	pFnLoadInputAliasClasses->FunctionFlags |= 0x400;
}

struct Engine_OpenScene_Parms
{
	class UUIScene*                                    Scene;                                            		// 0x000000 (0x0004)              
	class ULocalPlayer*                                SceneOwner;                                       		// 0x000004 (0x0004)              
	class UUIScene*                                    OpenedScene;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISceneClient::OpenScene(class UUIScene* Scene,class ULocalPlayer* SceneOwner,class UUIScene** OpenedScene)
{
	static UFieldFunc* pFnOpenScene = NULL;
	if(!pFnOpenScene)
		pFnOpenScene = UObject::FindFunction("Function Engine.UISceneClient.OpenScene");

	Engine_OpenScene_Parms OpenScene_Parms;
	OpenScene_Parms.Scene = Scene;
	OpenScene_Parms.SceneOwner = SceneOwner;
	pFnOpenScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOpenScene,NULL,&OpenScene_Parms,NULL);
	pFnOpenScene->FunctionFlags |= 0x400;
	if(OpenedScene)
		*OpenedScene = OpenScene_Parms.OpenedScene;
	return OpenScene_Parms.ReturnValue;
}

struct Engine_CloseScene_Parms
{
	class UUIScene*                                    Scene;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUISceneClient::CloseScene(class UUIScene* Scene)
{
	static UFieldFunc* pFnCloseScene = NULL;
	if(!pFnCloseScene)
		pFnCloseScene = UObject::FindFunction("Function Engine.UISceneClient.CloseScene");

	Engine_CloseScene_Parms CloseScene_Parms;
	CloseScene_Parms.Scene = Scene;
	pFnCloseScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCloseScene,NULL,&CloseScene_Parms,NULL);
	pFnCloseScene->FunctionFlags |= 0x400;
	return CloseScene_Parms.ReturnValue;
}

struct Engine_ChangeActiveSkin_Parms
{
	class UUISkin*                                     NewActiveSkin;                                    		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUISceneClient::ChangeActiveSkin(class UUISkin* NewActiveSkin)
{
	static UFieldFunc* pFnChangeActiveSkin = NULL;
	if(!pFnChangeActiveSkin)
		pFnChangeActiveSkin = UObject::FindFunction("Function Engine.UISceneClient.ChangeActiveSkin");

	Engine_ChangeActiveSkin_Parms ChangeActiveSkin_Parms;
	ChangeActiveSkin_Parms.NewActiveSkin = NewActiveSkin;
	pFnChangeActiveSkin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnChangeActiveSkin,NULL,&ChangeActiveSkin_Parms,NULL);
	pFnChangeActiveSkin->FunctionFlags |= 0x400;
	return ChangeActiveSkin_Parms.ReturnValue;
}

struct Engine_GetCanvasToScreen_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	unsigned char                                      _0x000004[0xC];                                   		// 0x000004 (0x000C) MISSED OFFSET
	FMatrix                                            ReturnValue;                                      		// 0x000010 (0x0040)              
};

FMatrix UUISceneClient::GetCanvasToScreen(class UUIObject* Widget)
{
	static UFieldFunc* pFnGetCanvasToScreen = NULL;
	if(!pFnGetCanvasToScreen)
		pFnGetCanvasToScreen = UObject::FindFunction("Function Engine.UISceneClient.GetCanvasToScreen");

	Engine_GetCanvasToScreen_Parms GetCanvasToScreen_Parms;
	GetCanvasToScreen_Parms.Widget = Widget;
	pFnGetCanvasToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCanvasToScreen,NULL,&GetCanvasToScreen_Parms,NULL);
	pFnGetCanvasToScreen->FunctionFlags |= 0x400;
	return GetCanvasToScreen_Parms.ReturnValue;
}

struct Engine_IsSceneInitialized_Parms
{
	class UUIScene*                                    Scene;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUISceneClient::IsSceneInitialized(class UUIScene* Scene)
{
	static UFieldFunc* pFnIsSceneInitialized = NULL;
	if(!pFnIsSceneInitialized)
		pFnIsSceneInitialized = UObject::FindFunction("Function Engine.UISceneClient.IsSceneInitialized");

	Engine_IsSceneInitialized_Parms IsSceneInitialized_Parms;
	IsSceneInitialized_Parms.Scene = Scene;
	pFnIsSceneInitialized->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsSceneInitialized,NULL,&IsSceneInitialized_Parms,NULL);
	pFnIsSceneInitialized->FunctionFlags |= 0x400;
	return IsSceneInitialized_Parms.ReturnValue;
}

struct Engine_IsUIActive_Parms
{
	int                                                Flags;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUISceneClient::IsUIActive(int Flags)
{
	static UFieldFunc* pFnIsUIActive = NULL;
	if(!pFnIsUIActive)
		pFnIsUIActive = UObject::FindFunction("Function Engine.UISceneClient.IsUIActive");

	Engine_IsUIActive_Parms IsUIActive_Parms;
	IsUIActive_Parms.Flags = Flags;
	pFnIsUIActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsUIActive,NULL,&IsUIActive_Parms,NULL);
	pFnIsUIActive->FunctionFlags |= 0x400;
	return IsUIActive_Parms.ReturnValue;
}

struct Engine_GetActiveScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScene* UUISceneClient::GetActiveScene()
{
	static UFieldFunc* pFnGetActiveScene = NULL;
	if(!pFnGetActiveScene)
		pFnGetActiveScene = UObject::FindFunction("Function Engine.UISceneClient.GetActiveScene");

	Engine_GetActiveScene_Parms GetActiveScene_Parms;
	ProcessEvent(pFnGetActiveScene,NULL,&GetActiveScene_Parms,NULL);
	return GetActiveScene_Parms.ReturnValue;
}

struct Engine_GetInverseCanvasToScreen_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	unsigned char                                      _0x000004[0xC];                                   		// 0x000004 (0x000C) MISSED OFFSET
	FMatrix                                            ReturnValue;                                      		// 0x000010 (0x0040)              
};

FMatrix UUISceneClient::GetInverseCanvasToScreen(class UUIObject* Widget)
{
	static UFieldFunc* pFnGetInverseCanvasToScreen = NULL;
	if(!pFnGetInverseCanvasToScreen)
		pFnGetInverseCanvasToScreen = UObject::FindFunction("Function Engine.UISceneClient.GetInverseCanvasToScreen");

	Engine_GetInverseCanvasToScreen_Parms GetInverseCanvasToScreen_Parms;
	GetInverseCanvasToScreen_Parms.Widget = Widget;
	pFnGetInverseCanvasToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetInverseCanvasToScreen,NULL,&GetInverseCanvasToScreen_Parms,NULL);
	pFnGetInverseCanvasToScreen->FunctionFlags |= 0x400;
	return GetInverseCanvasToScreen_Parms.ReturnValue;
}

struct Engine_UpdateCanvasToScreen_Parms
{
};

void UUISceneClient::UpdateCanvasToScreen()
{
	static UFieldFunc* pFnUpdateCanvasToScreen = NULL;
	if(!pFnUpdateCanvasToScreen)
		pFnUpdateCanvasToScreen = UObject::FindFunction("Function Engine.UISceneClient.UpdateCanvasToScreen");

	Engine_UpdateCanvasToScreen_Parms UpdateCanvasToScreen_Parms;
	pFnUpdateCanvasToScreen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateCanvasToScreen,NULL,&UpdateCanvasToScreen_Parms,NULL);
	pFnUpdateCanvasToScreen->FunctionFlags |= 0x400;
}

struct Engine_ChangeMouseCursor_Parms
{
	struct FName                                       CursorName;                                       		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUISceneClient::ChangeMouseCursor(struct FName CursorName)
{
	static UFieldFunc* pFnChangeMouseCursor = NULL;
	if(!pFnChangeMouseCursor)
		pFnChangeMouseCursor = UObject::FindFunction("Function Engine.UISceneClient.ChangeMouseCursor");

	Engine_ChangeMouseCursor_Parms ChangeMouseCursor_Parms;
	memcpy(&ChangeMouseCursor_Parms.CursorName,&CursorName,0x8);
	pFnChangeMouseCursor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnChangeMouseCursor,NULL,&ChangeMouseCursor_Parms,NULL);
	pFnChangeMouseCursor->FunctionFlags |= 0x400;
	return ChangeMouseCursor_Parms.ReturnValue;
}

struct Engine_SetMousePosition_Parms
{
	int                                                NewMouseX;                                        		// 0x000000 (0x0004)              
	int                                                NewMouseY;                                        		// 0x000004 (0x0004)              
	unsigned long                                      bScaledPosition : 1;                              		// 0x000008 (0x0004) [0x00000001] 
};

void UUISceneClient::SetMousePosition(int NewMouseX,int NewMouseY,bool bScaledPosition)
{
	static UFieldFunc* pFnSetMousePosition = NULL;
	if(!pFnSetMousePosition)
		pFnSetMousePosition = UObject::FindFunction("Function Engine.UISceneClient.SetMousePosition");

	Engine_SetMousePosition_Parms SetMousePosition_Parms;
	SetMousePosition_Parms.NewMouseX = NewMouseX;
	SetMousePosition_Parms.NewMouseY = NewMouseY;
	SetMousePosition_Parms.bScaledPosition = bScaledPosition;
	pFnSetMousePosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMousePosition,NULL,&SetMousePosition_Parms,NULL);
	pFnSetMousePosition->FunctionFlags |= 0x400;
}

struct Engine_InitializeScene_Parms
{
	class UUIScene*                                    Scene;                                            		// 0x000000 (0x0004)              
	class ULocalPlayer*                                SceneOwner;                                       		// 0x000004 (0x0004)              
	class UUIScene*                                    InitializedScene;                                 		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISceneClient::InitializeScene(class UUIScene* Scene,class ULocalPlayer* SceneOwner,class UUIScene** InitializedScene)
{
	static UFieldFunc* pFnInitializeScene = NULL;
	if(!pFnInitializeScene)
		pFnInitializeScene = UObject::FindFunction("Function Engine.UISceneClient.InitializeScene");

	Engine_InitializeScene_Parms InitializeScene_Parms;
	InitializeScene_Parms.Scene = Scene;
	InitializeScene_Parms.SceneOwner = SceneOwner;
	pFnInitializeScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitializeScene,NULL,&InitializeScene_Parms,NULL);
	pFnInitializeScene->FunctionFlags |= 0x400;
	if(InitializedScene)
		*InitializedScene = InitializeScene_Parms.InitializedScene;
	return InitializeScene_Parms.ReturnValue;
}

struct Engine_RemoveSequenceObject_Parms
{
	class USequenceObject*                             ObjectToRemove;                                   		// 0x000000 (0x0004)              
};

void UUIState::RemoveSequenceObject(class USequenceObject* ObjectToRemove)
{
	static UFieldFunc* pFnRemoveSequenceObject = NULL;
	if(!pFnRemoveSequenceObject)
		pFnRemoveSequenceObject = UObject::FindFunction("Function Engine.UIState.RemoveSequenceObject");

	Engine_RemoveSequenceObject_Parms RemoveSequenceObject_Parms;
	RemoveSequenceObject_Parms.ObjectToRemove = ObjectToRemove;
	pFnRemoveSequenceObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveSequenceObject,NULL,&RemoveSequenceObject_Parms,NULL);
	pFnRemoveSequenceObject->FunctionFlags |= 0x400;
}

struct Engine_GetUIEvents_Parms
{
	TArray<class UUIEvent*>                            out_Events;                                       		// 0x000000 (0x000C)              
	class UClass*                                      LimitClass;                                       		// 0x00000C (0x0004)              
};

void UUIState::GetUIEvents(TArray<class UUIEvent*>* out_Events,class UClass* LimitClass)
{
	static UFieldFunc* pFnGetUIEvents = NULL;
	if(!pFnGetUIEvents)
		pFnGetUIEvents = UObject::FindFunction("Function Engine.UIState.GetUIEvents");

	Engine_GetUIEvents_Parms GetUIEvents_Parms;
	GetUIEvents_Parms.LimitClass = LimitClass;
	pFnGetUIEvents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUIEvents,NULL,&GetUIEvents_Parms,NULL);
	pFnGetUIEvents->FunctionFlags |= 0x400;
	if(out_Events)
		memcpy(out_Events,&GetUIEvents_Parms.out_Events,0xC);
}

struct Engine_IsStateAllowed_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	class UUIState*                                    NewState;                                         		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIState::IsStateAllowed(class UUIScreenObject* Target,class UUIState* NewState,int PlayerIndex)
{
	static UFieldFunc* pFnIsStateAllowed = NULL;
	if(!pFnIsStateAllowed)
		pFnIsStateAllowed = UObject::FindFunction("Function Engine.UIState.IsStateAllowed");

	Engine_IsStateAllowed_Parms IsStateAllowed_Parms;
	IsStateAllowed_Parms.Target = Target;
	IsStateAllowed_Parms.NewState = NewState;
	IsStateAllowed_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnIsStateAllowed,NULL,&IsStateAllowed_Parms,NULL);
	return IsStateAllowed_Parms.ReturnValue;
}

struct Engine_OnDeactivate_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bPoppedState : 1;                                 		// 0x000008 (0x0004) [0x00000001] 
};

void UUIState::OnDeactivate(class UUIScreenObject* Target,int PlayerIndex,bool bPoppedState)
{
	static UFieldFunc* pFnOnDeactivate = NULL;
	if(!pFnOnDeactivate)
		pFnOnDeactivate = UObject::FindFunction("Function Engine.UIState.OnDeactivate");

	Engine_OnDeactivate_Parms OnDeactivate_Parms;
	OnDeactivate_Parms.Target = Target;
	OnDeactivate_Parms.PlayerIndex = PlayerIndex;
	OnDeactivate_Parms.bPoppedState = bPoppedState;
	ProcessEvent(pFnOnDeactivate,NULL,&OnDeactivate_Parms,NULL);
}

struct Engine_AddSequenceObject_Parms
{
	class USequenceObject*                             NewObj;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIState::AddSequenceObject(class USequenceObject* NewObj,bool bRecurse)
{
	static UFieldFunc* pFnAddSequenceObject = NULL;
	if(!pFnAddSequenceObject)
		pFnAddSequenceObject = UObject::FindFunction("Function Engine.UIState.AddSequenceObject");

	Engine_AddSequenceObject_Parms AddSequenceObject_Parms;
	AddSequenceObject_Parms.NewObj = NewObj;
	AddSequenceObject_Parms.bRecurse = bRecurse;
	pFnAddSequenceObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddSequenceObject,NULL,&AddSequenceObject_Parms,NULL);
	pFnAddSequenceObject->FunctionFlags |= 0x400;
	return AddSequenceObject_Parms.ReturnValue;
}

struct Engine_ActivateState_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIState::ActivateState(class UUIScreenObject* Target,int PlayerIndex)
{
	static UFieldFunc* pFnActivateState = NULL;
	if(!pFnActivateState)
		pFnActivateState = UObject::FindFunction("Function Engine.UIState.ActivateState");

	Engine_ActivateState_Parms ActivateState_Parms;
	ActivateState_Parms.Target = Target;
	ActivateState_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnActivateState,NULL,&ActivateState_Parms,NULL);
	return ActivateState_Parms.ReturnValue;
}

struct Engine_DeactivateState_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIState::DeactivateState(class UUIScreenObject* Target,int PlayerIndex)
{
	static UFieldFunc* pFnDeactivateState = NULL;
	if(!pFnDeactivateState)
		pFnDeactivateState = UObject::FindFunction("Function Engine.UIState.DeactivateState");

	Engine_DeactivateState_Parms DeactivateState_Parms;
	DeactivateState_Parms.Target = Target;
	DeactivateState_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnDeactivateState,NULL,&DeactivateState_Parms,NULL);
	return DeactivateState_Parms.ReturnValue;
}

struct Engine_IsWidgetClassSupported_Parms
{
	class UClass*                                      WidgetClass;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIState::IsWidgetClassSupported(class UClass* WidgetClass)
{
	static UFieldFunc* pFnIsWidgetClassSupported = NULL;
	if(!pFnIsWidgetClassSupported)
		pFnIsWidgetClassSupported = UObject::FindFunction("Function Engine.UIState.IsWidgetClassSupported");

	Engine_IsWidgetClassSupported_Parms IsWidgetClassSupported_Parms;
	IsWidgetClassSupported_Parms.WidgetClass = WidgetClass;
	ProcessEvent(pFnIsWidgetClassSupported,NULL,&IsWidgetClassSupported_Parms,NULL);
	return IsWidgetClassSupported_Parms.ReturnValue;
}

struct Engine_IsActiveForPlayer_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIState::IsActiveForPlayer(int PlayerIndex)
{
	static UFieldFunc* pFnIsActiveForPlayer = NULL;
	if(!pFnIsActiveForPlayer)
		pFnIsActiveForPlayer = UObject::FindFunction("Function Engine.UIState.IsActiveForPlayer");

	Engine_IsActiveForPlayer_Parms IsActiveForPlayer_Parms;
	IsActiveForPlayer_Parms.PlayerIndex = PlayerIndex;
	pFnIsActiveForPlayer->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsActiveForPlayer,NULL,&IsActiveForPlayer_Parms,NULL);
	pFnIsActiveForPlayer->FunctionFlags |= 0x400;
	return IsActiveForPlayer_Parms.ReturnValue;
}

struct Engine_RemoveSequenceObjects_Parms
{
	TArray<class USequenceObject*>                     ObjectsToRemove;                                  		// 0x000000 (0x000C)              
};

void UUIState::RemoveSequenceObjects(TArray<class USequenceObject*>* ObjectsToRemove)
{
	static UFieldFunc* pFnRemoveSequenceObjects = NULL;
	if(!pFnRemoveSequenceObjects)
		pFnRemoveSequenceObjects = UObject::FindFunction("Function Engine.UIState.RemoveSequenceObjects");

	Engine_RemoveSequenceObjects_Parms RemoveSequenceObjects_Parms;
	pFnRemoveSequenceObjects->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveSequenceObjects,NULL,&RemoveSequenceObjects_Parms,NULL);
	pFnRemoveSequenceObjects->FunctionFlags |= 0x400;
	if(ObjectsToRemove)
		memcpy(ObjectsToRemove,&RemoveSequenceObjects_Parms.ObjectsToRemove,0xC);
}

struct Engine_OnActivate_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bPushedState : 1;                                 		// 0x000008 (0x0004) [0x00000001] 
};

void UUIState::OnActivate(class UUIScreenObject* Target,int PlayerIndex,bool bPushedState)
{
	static UFieldFunc* pFnOnActivate = NULL;
	if(!pFnOnActivate)
		pFnOnActivate = UObject::FindFunction("Function Engine.UIState.OnActivate");

	Engine_OnActivate_Parms OnActivate_Parms;
	OnActivate_Parms.Target = Target;
	OnActivate_Parms.PlayerIndex = PlayerIndex;
	OnActivate_Parms.bPushedState = bPushedState;
	ProcessEvent(pFnOnActivate,NULL,&OnActivate_Parms,NULL);
}

struct Engine_IsStateAllowed_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	class UUIState*                                    NewState;                                         		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIState_Disabled::IsStateAllowed(class UUIScreenObject* Target,class UUIState* NewState,int PlayerIndex)
{
	static UFieldFunc* pFnIsStateAllowed = NULL;
	if(!pFnIsStateAllowed)
		pFnIsStateAllowed = UObject::FindFunction("Function Engine.UIState_Disabled.IsStateAllowed");

	Engine_IsStateAllowed_Parms IsStateAllowed_Parms;
	IsStateAllowed_Parms.Target = Target;
	IsStateAllowed_Parms.NewState = NewState;
	IsStateAllowed_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnIsStateAllowed,NULL,&IsStateAllowed_Parms,NULL);
	return IsStateAllowed_Parms.ReturnValue;
}

struct Engine_ActivateState_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x00000C (0x0004)              
	//int                                                EnabledIndex;                                     		// 0x000010 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIState_Disabled::ActivateState(class UUIScreenObject* Target,int PlayerIndex)
{
	static UFieldFunc* pFnActivateState = NULL;
	if(!pFnActivateState)
		pFnActivateState = UObject::FindFunction("Function Engine.UIState_Disabled.ActivateState");

	Engine_ActivateState_Parms ActivateState_Parms;
	ActivateState_Parms.Target = Target;
	ActivateState_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnActivateState,NULL,&ActivateState_Parms,NULL);
	return ActivateState_Parms.ReturnValue;
}

struct Engine_ContainsMarkup_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIString::ContainsMarkup()
{
	static UFieldFunc* pFnContainsMarkup = NULL;
	if(!pFnContainsMarkup)
		pFnContainsMarkup = UObject::FindFunction("Function Engine.UIString.ContainsMarkup");

	Engine_ContainsMarkup_Parms ContainsMarkup_Parms;
	pFnContainsMarkup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnContainsMarkup,NULL,&ContainsMarkup_Parms,NULL);
	pFnContainsMarkup->FunctionFlags |= 0x400;
	return ContainsMarkup_Parms.ReturnValue;
}

struct Engine_GetAutoScaleValue_Parms
{
	FVector2                                           BoundingRegionSize;                               		// 0x000000 (0x0008)              
	FVector2                                           StringSize;                                       		// 0x000008 (0x0008)              
	FVector2                                           out_AutoScalePercent;                             		// 0x000010 (0x0008)              
};

void UUIString::GetAutoScaleValue(FVector2 BoundingRegionSize,FVector2 StringSize,FVector2* out_AutoScalePercent)
{
	static UFieldFunc* pFnGetAutoScaleValue = NULL;
	if(!pFnGetAutoScaleValue)
		pFnGetAutoScaleValue = UObject::FindFunction("Function Engine.UIString.GetAutoScaleValue");

	Engine_GetAutoScaleValue_Parms GetAutoScaleValue_Parms;
	memcpy(&GetAutoScaleValue_Parms.BoundingRegionSize,&BoundingRegionSize,0x8);
	memcpy(&GetAutoScaleValue_Parms.StringSize,&StringSize,0x8);
	pFnGetAutoScaleValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAutoScaleValue,NULL,&GetAutoScaleValue_Parms,NULL);
	pFnGetAutoScaleValue->FunctionFlags |= 0x400;
	if(out_AutoScalePercent)
		memcpy(out_AutoScalePercent,&GetAutoScaleValue_Parms.out_AutoScalePercent,0x8);
}

struct Engine_GetValue_Parms
{
	unsigned long                                      bReturnProcessedText : 1;                         		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIString::GetValue(bool bReturnProcessedText)
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UIString.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	GetValue_Parms.bReturnProcessedText = bReturnProcessedText;
	pFnGetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	pFnGetValue->FunctionFlags |= 0x400;
	return GetValue_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	struct FString                                     InputString;                                      		// 0x000000 (0x000C)              
	unsigned long                                      bIgnoreMarkup : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIString::SetValue(struct FString InputString,bool bIgnoreMarkup)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UIString.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.InputString,&InputString,0xC);
	SetValue_Parms.bIgnoreMarkup = bIgnoreMarkup;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
	return SetValue_Parms.ReturnValue;
}

struct Engine_SetFieldValue_Parms
{
	struct FString                                     FieldName;                                        		// 0x000000 (0x000C)              
	struct FUIProviderScriptFieldValue                 FieldValue;                                       		// 0x00000C (0x0040)              
	int                                                ArrayIndex;                                       		// 0x00004C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000050 (0x0004) [0x00000001] 
};

bool UUIDataProvider::SetFieldValue(struct FString FieldName,struct FUIProviderScriptFieldValue* FieldValue,int ArrayIndex)
{
	static UFieldFunc* pFnSetFieldValue = NULL;
	if(!pFnSetFieldValue)
		pFnSetFieldValue = UObject::FindFunction("Function Engine.UIDataProvider.SetFieldValue");

	Engine_SetFieldValue_Parms SetFieldValue_Parms;
	memcpy(&SetFieldValue_Parms.FieldName,&FieldName,0xC);
	SetFieldValue_Parms.ArrayIndex = ArrayIndex;
	ProcessEvent(pFnSetFieldValue,NULL,&SetFieldValue_Parms,NULL);
	if(FieldValue)
		memcpy(FieldValue,&SetFieldValue_Parms.FieldValue,0x40);
	return SetFieldValue_Parms.ReturnValue;
}

struct Engine_IsCollectionDataType_Parms
{
	unsigned char                                      FieldType;                                        		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIDataProvider::IsCollectionDataType(unsigned char FieldType)
{
	static UFieldFunc* pFnIsCollectionDataType = NULL;
	if(!pFnIsCollectionDataType)
		pFnIsCollectionDataType = UObject::FindFunction("Function Engine.UIDataProvider.IsCollectionDataType");

	Engine_IsCollectionDataType_Parms IsCollectionDataType_Parms;
	IsCollectionDataType_Parms.FieldType = FieldType;
	ProcessEvent(pFnIsCollectionDataType,NULL,&IsCollectionDataType_Parms,NULL);
	return IsCollectionDataType_Parms.ReturnValue;
}

struct Engine_GenerateFillerData_Parms
{
	struct FString                                     DataTag;                                          		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UUIDataProvider::GenerateFillerData(struct FString DataTag)
{
	static UFieldFunc* pFnGenerateFillerData = NULL;
	if(!pFnGenerateFillerData)
		pFnGenerateFillerData = UObject::FindFunction("Function Engine.UIDataProvider.GenerateFillerData");

	Engine_GenerateFillerData_Parms GenerateFillerData_Parms;
	memcpy(&GenerateFillerData_Parms.DataTag,&DataTag,0xC);
	ProcessEvent(pFnGenerateFillerData,NULL,&GenerateFillerData_Parms,NULL);
	return GenerateFillerData_Parms.ReturnValue;
}

struct Engine_OnDataProviderPropertyChange_Parms
{
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000000 (0x0004)              
	struct FName                                       PropTag;                                          		// 0x000004 (0x0008)              
};

void UUIDataProvider::OnDataProviderPropertyChange(class UUIDataProvider* SourceProvider,struct FName PropTag)
{
	static UFieldFunc* pFnOnDataProviderPropertyChange = NULL;
	if(!pFnOnDataProviderPropertyChange)
		pFnOnDataProviderPropertyChange = UObject::FindFunction("Function Engine.UIDataProvider.OnDataProviderPropertyChange");

	Engine_OnDataProviderPropertyChange_Parms OnDataProviderPropertyChange_Parms;
	OnDataProviderPropertyChange_Parms.SourceProvider = SourceProvider;
	memcpy(&OnDataProviderPropertyChange_Parms.PropTag,&PropTag,0x8);
	ProcessEvent(pFnOnDataProviderPropertyChange,NULL,&OnDataProviderPropertyChange_Parms,NULL);
}

struct Engine_ParseTagArrayDelimiter_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//struct FString                                     FieldNameString;                                  		// 0x00000C (0x000C)              
	//int                                                Result;                                           		// 0x000018 (0x0004)              
};

int UUIDataProvider::ParseTagArrayDelimiter(struct FName* FieldName)
{
	static UFieldFunc* pFnParseTagArrayDelimiter = NULL;
	if(!pFnParseTagArrayDelimiter)
		pFnParseTagArrayDelimiter = UObject::FindFunction("Function Engine.UIDataProvider.ParseTagArrayDelimiter");

	Engine_ParseTagArrayDelimiter_Parms ParseTagArrayDelimiter_Parms;
	ProcessEvent(pFnParseTagArrayDelimiter,NULL,&ParseTagArrayDelimiter_Parms,NULL);
	if(FieldName)
		memcpy(FieldName,&ParseTagArrayDelimiter_Parms.FieldName,0x8);
	return ParseTagArrayDelimiter_Parms.ReturnValue;
}

struct Engine_AddPropertyNotificationChangeRequest_Parms
{
	struct FScriptDelegate                             InDelegate;                                       		// 0x000000 (0x000C)              
	unsigned long                                      bAllowDuplicates : 1;                             		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//int                                                NewIndex;                                         		// 0x000014 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
};

bool UUIDataProvider::AddPropertyNotificationChangeRequest(struct FScriptDelegate InDelegate,bool bAllowDuplicates)
{
	static UFieldFunc* pFnAddPropertyNotificationChangeRequest = NULL;
	if(!pFnAddPropertyNotificationChangeRequest)
		pFnAddPropertyNotificationChangeRequest = UObject::FindFunction("Function Engine.UIDataProvider.AddPropertyNotificationChangeRequest");

	Engine_AddPropertyNotificationChangeRequest_Parms AddPropertyNotificationChangeRequest_Parms;
	memcpy(&AddPropertyNotificationChangeRequest_Parms.InDelegate,&InDelegate,0xC);
	AddPropertyNotificationChangeRequest_Parms.bAllowDuplicates = bAllowDuplicates;
	ProcessEvent(pFnAddPropertyNotificationChangeRequest,NULL,&AddPropertyNotificationChangeRequest_Parms,NULL);
	return AddPropertyNotificationChangeRequest_Parms.ReturnValue;
}

struct Engine_GetProviderFieldType_Parms
{
	struct FString                                     DataTag;                                          		// 0x000000 (0x000C)              
	unsigned char                                      out_ProviderFieldType;                            		// 0x00000C (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIDataProvider::GetProviderFieldType(struct FString DataTag,unsigned char* out_ProviderFieldType)
{
	static UFieldFunc* pFnGetProviderFieldType = NULL;
	if(!pFnGetProviderFieldType)
		pFnGetProviderFieldType = UObject::FindFunction("Function Engine.UIDataProvider.GetProviderFieldType");

	Engine_GetProviderFieldType_Parms GetProviderFieldType_Parms;
	memcpy(&GetProviderFieldType_Parms.DataTag,&DataTag,0xC);
	pFnGetProviderFieldType->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProviderFieldType,NULL,&GetProviderFieldType_Parms,NULL);
	pFnGetProviderFieldType->FunctionFlags |= 0x400;
	if(out_ProviderFieldType)
		*out_ProviderFieldType = GetProviderFieldType_Parms.out_ProviderFieldType;
	return GetProviderFieldType_Parms.ReturnValue;
}

struct Engine_RemovePropertyNotificationChangeRequest_Parms
{
	struct FScriptDelegate                             InDelegate;                                       		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//int                                                Index;                                            		// 0x000010 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIDataProvider::RemovePropertyNotificationChangeRequest(struct FScriptDelegate InDelegate)
{
	static UFieldFunc* pFnRemovePropertyNotificationChangeRequest = NULL;
	if(!pFnRemovePropertyNotificationChangeRequest)
		pFnRemovePropertyNotificationChangeRequest = UObject::FindFunction("Function Engine.UIDataProvider.RemovePropertyNotificationChangeRequest");

	Engine_RemovePropertyNotificationChangeRequest_Parms RemovePropertyNotificationChangeRequest_Parms;
	memcpy(&RemovePropertyNotificationChangeRequest_Parms.InDelegate,&InDelegate,0xC);
	ProcessEvent(pFnRemovePropertyNotificationChangeRequest,NULL,&RemovePropertyNotificationChangeRequest_Parms,NULL);
	return RemovePropertyNotificationChangeRequest_Parms.ReturnValue;
}

struct Engine_NotifyPropertyChanged_Parms
{
	struct FName                                       PropTag;                                          		// 0x000000 (0x0008)              
	//int                                                Index;                                            		// 0x000008 (0x0004)              
	//struct FScriptDelegate                             Subscriber;                                       		// 0x00000C (0x000C)              
};

void UUIDataProvider::NotifyPropertyChanged(struct FName PropTag)
{
	static UFieldFunc* pFnNotifyPropertyChanged = NULL;
	if(!pFnNotifyPropertyChanged)
		pFnNotifyPropertyChanged = UObject::FindFunction("Function Engine.UIDataProvider.NotifyPropertyChanged");

	Engine_NotifyPropertyChanged_Parms NotifyPropertyChanged_Parms;
	memcpy(&NotifyPropertyChanged_Parms.PropTag,&PropTag,0x8);
	ProcessEvent(pFnNotifyPropertyChanged,NULL,&NotifyPropertyChanged_Parms,NULL);
}

struct Engine_GetFieldValue_Parms
{
	struct FString                                     FieldName;                                        		// 0x000000 (0x000C)              
	struct FUIProviderScriptFieldValue                 FieldValue;                                       		// 0x00000C (0x0040)              
	int                                                ArrayIndex;                                       		// 0x00004C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000050 (0x0004) [0x00000001] 
};

bool UUIDataProvider::GetFieldValue(struct FString FieldName,struct FUIProviderScriptFieldValue* FieldValue,int ArrayIndex)
{
	static UFieldFunc* pFnGetFieldValue = NULL;
	if(!pFnGetFieldValue)
		pFnGetFieldValue = UObject::FindFunction("Function Engine.UIDataProvider.GetFieldValue");

	Engine_GetFieldValue_Parms GetFieldValue_Parms;
	memcpy(&GetFieldValue_Parms.FieldName,&FieldName,0xC);
	GetFieldValue_Parms.ArrayIndex = ArrayIndex;
	ProcessEvent(pFnGetFieldValue,NULL,&GetFieldValue_Parms,NULL);
	if(FieldValue)
		memcpy(FieldValue,&GetFieldValue_Parms.FieldValue,0x40);
	return GetFieldValue_Parms.ReturnValue;
}

struct Engine_ParseArrayDelimiter_Parms
{
	struct FString                                     DataTag;                                          		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UUIDataProvider::ParseArrayDelimiter(struct FString* DataTag)
{
	static UFieldFunc* pFnParseArrayDelimiter = NULL;
	if(!pFnParseArrayDelimiter)
		pFnParseArrayDelimiter = UObject::FindFunction("Function Engine.UIDataProvider.ParseArrayDelimiter");

	Engine_ParseArrayDelimiter_Parms ParseArrayDelimiter_Parms;
	pFnParseArrayDelimiter->FunctionFlags |= ~0x400;
	ProcessEvent(pFnParseArrayDelimiter,NULL,&ParseArrayDelimiter_Parms,NULL);
	pFnParseArrayDelimiter->FunctionFlags |= 0x400;
	if(DataTag)
		memcpy(DataTag,&ParseArrayDelimiter_Parms.DataTag,0xC);
	return ParseArrayDelimiter_Parms.ReturnValue;
}

struct Engine_GetSupportedScriptFields_Parms
{
	TArray<struct FUIDataProviderField>                out_Fields;                                       		// 0x000000 (0x000C)              
};

void UUIDataProvider::GetSupportedScriptFields(TArray<struct FUIDataProviderField>* out_Fields)
{
	static UFieldFunc* pFnGetSupportedScriptFields = NULL;
	if(!pFnGetSupportedScriptFields)
		pFnGetSupportedScriptFields = UObject::FindFunction("Function Engine.UIDataProvider.GetSupportedScriptFields");

	Engine_GetSupportedScriptFields_Parms GetSupportedScriptFields_Parms;
	ProcessEvent(pFnGetSupportedScriptFields,NULL,&GetSupportedScriptFields_Parms,NULL);
	if(out_Fields)
		memcpy(out_Fields,&GetSupportedScriptFields_Parms.out_Fields,0xC);
}

struct Engine_GenerateScriptMarkupString_Parms
{
	struct FName                                       DataTag;                                          		// 0x000000 (0x0008)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UUIDataProvider::GenerateScriptMarkupString(struct FName DataTag)
{
	static UFieldFunc* pFnGenerateScriptMarkupString = NULL;
	if(!pFnGenerateScriptMarkupString)
		pFnGenerateScriptMarkupString = UObject::FindFunction("Function Engine.UIDataProvider.GenerateScriptMarkupString");

	Engine_GenerateScriptMarkupString_Parms GenerateScriptMarkupString_Parms;
	memcpy(&GenerateScriptMarkupString_Parms.DataTag,&DataTag,0x8);
	ProcessEvent(pFnGenerateScriptMarkupString,NULL,&GenerateScriptMarkupString_Parms,NULL);
	return GenerateScriptMarkupString_Parms.ReturnValue;
}

struct Engine_IsProviderDisabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDataProvider::IsProviderDisabled()
{
	static UFieldFunc* pFnIsProviderDisabled = NULL;
	if(!pFnIsProviderDisabled)
		pFnIsProviderDisabled = UObject::FindFunction("Function Engine.UIDataProvider.IsProviderDisabled");

	Engine_IsProviderDisabled_Parms IsProviderDisabled_Parms;
	ProcessEvent(pFnIsProviderDisabled,NULL,&IsProviderDisabled_Parms,NULL);
	return IsProviderDisabled_Parms.ReturnValue;
}

struct Engine_AllowPublishingToField_Parms
{
	struct FString                                     FieldName;                                        		// 0x000000 (0x000C)              
	int                                                ArrayIndex;                                       		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIDataProvider::AllowPublishingToField(struct FString FieldName,int ArrayIndex)
{
	static UFieldFunc* pFnAllowPublishingToField = NULL;
	if(!pFnAllowPublishingToField)
		pFnAllowPublishingToField = UObject::FindFunction("Function Engine.UIDataProvider.AllowPublishingToField");

	Engine_AllowPublishingToField_Parms AllowPublishingToField_Parms;
	memcpy(&AllowPublishingToField_Parms.FieldName,&FieldName,0xC);
	AllowPublishingToField_Parms.ArrayIndex = ArrayIndex;
	ProcessEvent(pFnAllowPublishingToField,NULL,&AllowPublishingToField_Parms,NULL);
	return AllowPublishingToField_Parms.ReturnValue;
}

struct Engine_SubscriberDetached_Parms
{
	class UUIDataStoreSubscriber*                      Subscriber;                                       		// 0x000000 (0x0008)              
	//int                                                SubscriberNotifyIndex;                            		// 0x000008 (0x0004)              
};

void UUIDataStore::SubscriberDetached(class UUIDataStoreSubscriber* Subscriber)
{
	static UFieldFunc* pFnSubscriberDetached = NULL;
	if(!pFnSubscriberDetached)
		pFnSubscriberDetached = UObject::FindFunction("Function Engine.UIDataStore.SubscriberDetached");

	Engine_SubscriberDetached_Parms SubscriberDetached_Parms;
	SubscriberDetached_Parms.Subscriber = Subscriber;
	ProcessEvent(pFnSubscriberDetached,NULL,&SubscriberDetached_Parms,NULL);
}

struct Engine_Registered_Parms
{
	class ULocalPlayer*                                PlayerOwner;                                      		// 0x000000 (0x0004)              
};

void UUIDataStore::Registered(class ULocalPlayer* PlayerOwner)
{
	static UFieldFunc* pFnRegistered = NULL;
	if(!pFnRegistered)
		pFnRegistered = UObject::FindFunction("Function Engine.UIDataStore.Registered");

	Engine_Registered_Parms Registered_Parms;
	Registered_Parms.PlayerOwner = PlayerOwner;
	ProcessEvent(pFnRegistered,NULL,&Registered_Parms,NULL);
}

struct Engine_GetDataStoreClient_Parms
{
	class UDataStoreClient*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UDataStoreClient* UUIDataStore::GetDataStoreClient()
{
	static UFieldFunc* pFnGetDataStoreClient = NULL;
	if(!pFnGetDataStoreClient)
		pFnGetDataStoreClient = UObject::FindFunction("Function Engine.UIDataStore.GetDataStoreClient");

	Engine_GetDataStoreClient_Parms GetDataStoreClient_Parms;
	ProcessEvent(pFnGetDataStoreClient,NULL,&GetDataStoreClient_Parms,NULL);
	return GetDataStoreClient_Parms.ReturnValue;
}

struct Engine_OnCommit_Parms
{
};

void UUIDataStore::OnCommit()
{
	static UFieldFunc* pFnOnCommit = NULL;
	if(!pFnOnCommit)
		pFnOnCommit = UObject::FindFunction("Function Engine.UIDataStore.OnCommit");

	Engine_OnCommit_Parms OnCommit_Parms;
	pFnOnCommit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnCommit,NULL,&OnCommit_Parms,NULL);
	pFnOnCommit->FunctionFlags |= 0x400;
}

struct Engine_RefreshSubscribers_Parms
{
	struct FName                                       PropertyTag;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bInvalidateValues : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	class UUIDataProvider*                             SourceProvider;                                   		// 0x00000C (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000010 (0x0004)              
};

void UUIDataStore::RefreshSubscribers(struct FName PropertyTag,bool bInvalidateValues,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnRefreshSubscribers = NULL;
	if(!pFnRefreshSubscribers)
		pFnRefreshSubscribers = UObject::FindFunction("Function Engine.UIDataStore.RefreshSubscribers");

	Engine_RefreshSubscribers_Parms RefreshSubscribers_Parms;
	memcpy(&RefreshSubscribers_Parms.PropertyTag,&PropertyTag,0x8);
	RefreshSubscribers_Parms.bInvalidateValues = bInvalidateValues;
	RefreshSubscribers_Parms.SourceProvider = SourceProvider;
	RefreshSubscribers_Parms.ArrayIndex = ArrayIndex;
	pFnRefreshSubscribers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscribers,NULL,&RefreshSubscribers_Parms,NULL);
	pFnRefreshSubscribers->FunctionFlags |= 0x400;
}

struct Engine_Unregistered_Parms
{
	class ULocalPlayer*                                PlayerOwner;                                      		// 0x000000 (0x0004)              
};

void UUIDataStore::Unregistered(class ULocalPlayer* PlayerOwner)
{
	static UFieldFunc* pFnUnregistered = NULL;
	if(!pFnUnregistered)
		pFnUnregistered = UObject::FindFunction("Function Engine.UIDataStore.Unregistered");

	Engine_Unregistered_Parms Unregistered_Parms;
	Unregistered_Parms.PlayerOwner = PlayerOwner;
	ProcessEvent(pFnUnregistered,NULL,&Unregistered_Parms,NULL);
}

struct Engine_OnDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIDataStore::OnDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnOnDataStoreValueUpdated = NULL;
	if(!pFnOnDataStoreValueUpdated)
		pFnOnDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIDataStore.OnDataStoreValueUpdated");

	Engine_OnDataStoreValueUpdated_Parms OnDataStoreValueUpdated_Parms;
	OnDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	OnDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&OnDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	OnDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	OnDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	ProcessEvent(pFnOnDataStoreValueUpdated,NULL,&OnDataStoreValueUpdated_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDataStore::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.UIDataStore.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	return NotifyGameSessionEnded_Parms.ReturnValue;
}

struct Engine_SubscriberAttached_Parms
{
	class UUIDataStoreSubscriber*                      Subscriber;                                       		// 0x000000 (0x0008)              
	//int                                                SubscriberNotifyIndex;                            		// 0x000008 (0x0004)              
};

void UUIDataStore::SubscriberAttached(class UUIDataStoreSubscriber* Subscriber)
{
	static UFieldFunc* pFnSubscriberAttached = NULL;
	if(!pFnSubscriberAttached)
		pFnSubscriberAttached = UObject::FindFunction("Function Engine.UIDataStore.SubscriberAttached");

	Engine_SubscriberAttached_Parms SubscriberAttached_Parms;
	SubscriberAttached_Parms.Subscriber = Subscriber;
	ProcessEvent(pFnSubscriberAttached,NULL,&SubscriberAttached_Parms,NULL);
}

struct Engine_GetStyleGroupAtIndex_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUISkin::GetStyleGroupAtIndex(int Index)
{
	static UFieldFunc* pFnGetStyleGroupAtIndex = NULL;
	if(!pFnGetStyleGroupAtIndex)
		pFnGetStyleGroupAtIndex = UObject::FindFunction("Function Engine.UISkin.GetStyleGroupAtIndex");

	Engine_GetStyleGroupAtIndex_Parms GetStyleGroupAtIndex_Parms;
	GetStyleGroupAtIndex_Parms.Index = Index;
	pFnGetStyleGroupAtIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleGroupAtIndex,NULL,&GetStyleGroupAtIndex_Parms,NULL);
	pFnGetStyleGroupAtIndex->FunctionFlags |= 0x400;
	return GetStyleGroupAtIndex_Parms.ReturnValue;
}

struct Engine_RenameStyleGroup_Parms
{
	struct FString                                     OldStyleGroupName;                                		// 0x000000 (0x000C)              
	struct FString                                     NewStyleGroupName;                                		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUISkin::RenameStyleGroup(struct FString OldStyleGroupName,struct FString NewStyleGroupName)
{
	static UFieldFunc* pFnRenameStyleGroup = NULL;
	if(!pFnRenameStyleGroup)
		pFnRenameStyleGroup = UObject::FindFunction("Function Engine.UISkin.RenameStyleGroup");

	Engine_RenameStyleGroup_Parms RenameStyleGroup_Parms;
	memcpy(&RenameStyleGroup_Parms.OldStyleGroupName,&OldStyleGroupName,0xC);
	memcpy(&RenameStyleGroup_Parms.NewStyleGroupName,&NewStyleGroupName,0xC);
	pFnRenameStyleGroup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRenameStyleGroup,NULL,&RenameStyleGroup_Parms,NULL);
	pFnRenameStyleGroup->FunctionFlags |= 0x400;
	return RenameStyleGroup_Parms.ReturnValue;
}

struct Engine_AddStyleGroupName_Parms
{
	struct FString                                     StyleGroupName;                                   		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISkin::AddStyleGroupName(struct FString StyleGroupName)
{
	static UFieldFunc* pFnAddStyleGroupName = NULL;
	if(!pFnAddStyleGroupName)
		pFnAddStyleGroupName = UObject::FindFunction("Function Engine.UISkin.AddStyleGroupName");

	Engine_AddStyleGroupName_Parms AddStyleGroupName_Parms;
	memcpy(&AddStyleGroupName_Parms.StyleGroupName,&StyleGroupName,0xC);
	pFnAddStyleGroupName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddStyleGroupName,NULL,&AddStyleGroupName_Parms,NULL);
	pFnAddStyleGroupName->FunctionFlags |= 0x400;
	return AddStyleGroupName_Parms.ReturnValue;
}

struct Engine_GetStyleGroups_Parms
{
	TArray<struct FString>                             StyleGroupArray;                                  		// 0x000000 (0x000C)              
	unsigned long                                      bIncludeInheritedGroups : 1;                      		// 0x00000C (0x0004) [0x00000001] 
};

void UUISkin::GetStyleGroups(TArray<struct FString>* StyleGroupArray,bool bIncludeInheritedGroups)
{
	static UFieldFunc* pFnGetStyleGroups = NULL;
	if(!pFnGetStyleGroups)
		pFnGetStyleGroups = UObject::FindFunction("Function Engine.UISkin.GetStyleGroups");

	Engine_GetStyleGroups_Parms GetStyleGroups_Parms;
	GetStyleGroups_Parms.bIncludeInheritedGroups = bIncludeInheritedGroups;
	pFnGetStyleGroups->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleGroups,NULL,&GetStyleGroups_Parms,NULL);
	pFnGetStyleGroups->FunctionFlags |= 0x400;
	if(StyleGroupArray)
		memcpy(StyleGroupArray,&GetStyleGroups_Parms.StyleGroupArray,0xC);
}

struct Engine_FindStyleGroupIndex_Parms
{
	struct FString                                     StyleGroupName;                                   		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UUISkin::FindStyleGroupIndex(struct FString StyleGroupName)
{
	static UFieldFunc* pFnFindStyleGroupIndex = NULL;
	if(!pFnFindStyleGroupIndex)
		pFnFindStyleGroupIndex = UObject::FindFunction("Function Engine.UISkin.FindStyleGroupIndex");

	Engine_FindStyleGroupIndex_Parms FindStyleGroupIndex_Parms;
	memcpy(&FindStyleGroupIndex_Parms.StyleGroupName,&StyleGroupName,0xC);
	pFnFindStyleGroupIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindStyleGroupIndex,NULL,&FindStyleGroupIndex_Parms,NULL);
	pFnFindStyleGroupIndex->FunctionFlags |= 0x400;
	return FindStyleGroupIndex_Parms.ReturnValue;
}

struct Engine_GetUISoundCue_Parms
{
	struct FName                                       SoundCueName;                                     		// 0x000000 (0x0008)              
	class USoundCue*                                   out_UISoundCue;                                   		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISkin::GetUISoundCue(struct FName SoundCueName,class USoundCue** out_UISoundCue)
{
	static UFieldFunc* pFnGetUISoundCue = NULL;
	if(!pFnGetUISoundCue)
		pFnGetUISoundCue = UObject::FindFunction("Function Engine.UISkin.GetUISoundCue");

	Engine_GetUISoundCue_Parms GetUISoundCue_Parms;
	memcpy(&GetUISoundCue_Parms.SoundCueName,&SoundCueName,0x8);
	pFnGetUISoundCue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUISoundCue,NULL,&GetUISoundCue_Parms,NULL);
	pFnGetUISoundCue->FunctionFlags |= 0x400;
	if(out_UISoundCue)
		*out_UISoundCue = GetUISoundCue_Parms.out_UISoundCue;
	return GetUISoundCue_Parms.ReturnValue;
}

struct Engine_RemoveStyleGroupName_Parms
{
	struct FString                                     StyleGroupName;                                   		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISkin::RemoveStyleGroupName(struct FString StyleGroupName)
{
	static UFieldFunc* pFnRemoveStyleGroupName = NULL;
	if(!pFnRemoveStyleGroupName)
		pFnRemoveStyleGroupName = UObject::FindFunction("Function Engine.UISkin.RemoveStyleGroupName");

	Engine_RemoveStyleGroupName_Parms RemoveStyleGroupName_Parms;
	memcpy(&RemoveStyleGroupName_Parms.StyleGroupName,&StyleGroupName,0xC);
	pFnRemoveStyleGroupName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveStyleGroupName,NULL,&RemoveStyleGroupName_Parms,NULL);
	pFnRemoveStyleGroupName->FunctionFlags |= 0x400;
	return RemoveStyleGroupName_Parms.ReturnValue;
}

struct Engine_AddUISoundCue_Parms
{
	struct FName                                       SoundCueName;                                     		// 0x000000 (0x0008)              
	class USoundCue*                                   SoundToPlay;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISkin::AddUISoundCue(struct FName SoundCueName,class USoundCue* SoundToPlay)
{
	static UFieldFunc* pFnAddUISoundCue = NULL;
	if(!pFnAddUISoundCue)
		pFnAddUISoundCue = UObject::FindFunction("Function Engine.UISkin.AddUISoundCue");

	Engine_AddUISoundCue_Parms AddUISoundCue_Parms;
	memcpy(&AddUISoundCue_Parms.SoundCueName,&SoundCueName,0x8);
	AddUISoundCue_Parms.SoundToPlay = SoundToPlay;
	pFnAddUISoundCue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddUISoundCue,NULL,&AddUISoundCue_Parms,NULL);
	pFnAddUISoundCue->FunctionFlags |= 0x400;
	return AddUISoundCue_Parms.ReturnValue;
}

struct Engine_GetAvailableStyles_Parms
{
	TArray<class UUIStyle*>                            out_Styles;                                       		// 0x000000 (0x000C)              
	unsigned long                                      bIncludeInheritedStyles : 1;                      		// 0x00000C (0x0004) [0x00000001] 
};

void UUISkin::GetAvailableStyles(TArray<class UUIStyle*>* out_Styles,bool bIncludeInheritedStyles)
{
	static UFieldFunc* pFnGetAvailableStyles = NULL;
	if(!pFnGetAvailableStyles)
		pFnGetAvailableStyles = UObject::FindFunction("Function Engine.UISkin.GetAvailableStyles");

	Engine_GetAvailableStyles_Parms GetAvailableStyles_Parms;
	GetAvailableStyles_Parms.bIncludeInheritedStyles = bIncludeInheritedStyles;
	pFnGetAvailableStyles->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAvailableStyles,NULL,&GetAvailableStyles_Parms,NULL);
	pFnGetAvailableStyles->FunctionFlags |= 0x400;
	if(out_Styles)
		memcpy(out_Styles,&GetAvailableStyles_Parms.out_Styles,0xC);
}

struct Engine_GetSkinSoundCues_Parms
{
	TArray<struct FUISoundCue>                         out_SoundCues;                                    		// 0x000000 (0x000C)              
};

void UUISkin::GetSkinSoundCues(TArray<struct FUISoundCue>* out_SoundCues)
{
	static UFieldFunc* pFnGetSkinSoundCues = NULL;
	if(!pFnGetSkinSoundCues)
		pFnGetSkinSoundCues = UObject::FindFunction("Function Engine.UISkin.GetSkinSoundCues");

	Engine_GetSkinSoundCues_Parms GetSkinSoundCues_Parms;
	pFnGetSkinSoundCues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSkinSoundCues,NULL,&GetSkinSoundCues_Parms,NULL);
	pFnGetSkinSoundCues->FunctionFlags |= 0x400;
	if(out_SoundCues)
		memcpy(out_SoundCues,&GetSkinSoundCues_Parms.out_SoundCues,0xC);
}

struct Engine_IsInheritedGroupName_Parms
{
	struct FString                                     StyleGroupName;                                   		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISkin::IsInheritedGroupName(struct FString StyleGroupName)
{
	static UFieldFunc* pFnIsInheritedGroupName = NULL;
	if(!pFnIsInheritedGroupName)
		pFnIsInheritedGroupName = UObject::FindFunction("Function Engine.UISkin.IsInheritedGroupName");

	Engine_IsInheritedGroupName_Parms IsInheritedGroupName_Parms;
	memcpy(&IsInheritedGroupName_Parms.StyleGroupName,&StyleGroupName,0xC);
	pFnIsInheritedGroupName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsInheritedGroupName,NULL,&IsInheritedGroupName_Parms,NULL);
	pFnIsInheritedGroupName->FunctionFlags |= 0x400;
	return IsInheritedGroupName_Parms.ReturnValue;
}

struct Engine_RemoveUISoundCue_Parms
{
	struct FName                                       SoundCueName;                                     		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUISkin::RemoveUISoundCue(struct FName SoundCueName)
{
	static UFieldFunc* pFnRemoveUISoundCue = NULL;
	if(!pFnRemoveUISoundCue)
		pFnRemoveUISoundCue = UObject::FindFunction("Function Engine.UISkin.RemoveUISoundCue");

	Engine_RemoveUISoundCue_Parms RemoveUISoundCue_Parms;
	memcpy(&RemoveUISoundCue_Parms.SoundCueName,&SoundCueName,0x8);
	pFnRemoveUISoundCue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveUISoundCue,NULL,&RemoveUISoundCue_Parms,NULL);
	pFnRemoveUISoundCue->FunctionFlags |= 0x400;
	return RemoveUISoundCue_Parms.ReturnValue;
}

struct Engine_GetCursorResource_Parms
{
	struct FName                                       CursorName;                                       		// 0x000000 (0x0008)              
	class UUITexture*                                  ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UUITexture* UUISkin::GetCursorResource(struct FName CursorName)
{
	static UFieldFunc* pFnGetCursorResource = NULL;
	if(!pFnGetCursorResource)
		pFnGetCursorResource = UObject::FindFunction("Function Engine.UISkin.GetCursorResource");

	Engine_GetCursorResource_Parms GetCursorResource_Parms;
	memcpy(&GetCursorResource_Parms.CursorName,&CursorName,0x8);
	pFnGetCursorResource->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCursorResource,NULL,&GetCursorResource_Parms,NULL);
	pFnGetCursorResource->FunctionFlags |= 0x400;
	return GetCursorResource_Parms.ReturnValue;
}

struct Engine_GetStyleForState_Parms
{
	class UUIState*                                    StateObject;                                      		// 0x000000 (0x0004)              
	class UUIStyle_Data*                               ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIStyle_Data* UUIStyle::GetStyleForState(class UUIState* StateObject)
{
	static UFieldFunc* pFnGetStyleForState = NULL;
	if(!pFnGetStyleForState)
		pFnGetStyleForState = UObject::FindFunction("Function Engine.UIStyle.GetStyleForState");

	Engine_GetStyleForState_Parms GetStyleForState_Parms;
	GetStyleForState_Parms.StateObject = StateObject;
	pFnGetStyleForState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleForState,NULL,&GetStyleForState_Parms,NULL);
	pFnGetStyleForState->FunctionFlags |= 0x400;
	return GetStyleForState_Parms.ReturnValue;
}

struct Engine_GetStyleForStateByClass_Parms
{
	class UClass*                                      StateClass;                                       		// 0x000000 (0x0004)              
	class UUIStyle_Data*                               ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIStyle_Data* UUIStyle::GetStyleForStateByClass(class UClass* StateClass)
{
	static UFieldFunc* pFnGetStyleForStateByClass = NULL;
	if(!pFnGetStyleForStateByClass)
		pFnGetStyleForStateByClass = UObject::FindFunction("Function Engine.UIStyle.GetStyleForStateByClass");

	Engine_GetStyleForStateByClass_Parms GetStyleForStateByClass_Parms;
	GetStyleForStateByClass_Parms.StateClass = StateClass;
	pFnGetStyleForStateByClass->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleForStateByClass,NULL,&GetStyleForStateByClass_Parms,NULL);
	pFnGetStyleForStateByClass->FunctionFlags |= 0x400;
	return GetStyleForStateByClass_Parms.ReturnValue;
}

struct Engine_GetDefaultStyle_Parms
{
	class UUIStyle_Data*                               ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIStyle_Data* UUIStyle::GetDefaultStyle()
{
	static UFieldFunc* pFnGetDefaultStyle = NULL;
	if(!pFnGetDefaultStyle)
		pFnGetDefaultStyle = UObject::FindFunction("Function Engine.UIStyle.GetDefaultStyle");

	Engine_GetDefaultStyle_Parms GetDefaultStyle_Parms;
	ProcessEvent(pFnGetDefaultStyle,NULL,&GetDefaultStyle_Parms,NULL);
	return GetDefaultStyle_Parms.ReturnValue;
}

struct Engine_ProcessSoundEvent_Parms
{
	struct FName                                       SoundEventName;                                   		// 0x000000 (0x0008)              
	class APlayerController*                           SoundOwner;                                       		// 0x000008 (0x0004)              
	//int                                                EventIndex;                                       		// 0x00000C (0x0004)              
};

void UUISoundTheme::ProcessSoundEvent(struct FName SoundEventName,class APlayerController* SoundOwner)
{
	static UFieldFunc* pFnProcessSoundEvent = NULL;
	if(!pFnProcessSoundEvent)
		pFnProcessSoundEvent = UObject::FindFunction("Function Engine.UISoundTheme.ProcessSoundEvent");

	Engine_ProcessSoundEvent_Parms ProcessSoundEvent_Parms;
	memcpy(&ProcessSoundEvent_Parms.SoundEventName,&SoundEventName,0x8);
	ProcessSoundEvent_Parms.SoundOwner = SoundOwner;
	ProcessEvent(pFnProcessSoundEvent,NULL,&ProcessSoundEvent_Parms,NULL);
}

struct Engine_UIAnimEnd_Parms
{
	int                                                SeqIndex;                                         		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//unsigned long                                      bRemove : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

void UUIObject::UIAnimEnd(int SeqIndex)
{
	static UFieldFunc* pFnUIAnimEnd = NULL;
	if(!pFnUIAnimEnd)
		pFnUIAnimEnd = UObject::FindFunction("Function Engine.UIObject.UIAnimEnd");

	Engine_UIAnimEnd_Parms UIAnimEnd_Parms;
	UIAnimEnd_Parms.SeqIndex = SeqIndex;
	ProcessEvent(pFnUIAnimEnd,NULL,&UIAnimEnd_Parms,NULL);
}

struct Engine_OnClicked_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIObject::OnClicked(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnOnClicked = NULL;
	if(!pFnOnClicked)
		pFnOnClicked = UObject::FindFunction("Function Engine.UIObject.OnClicked");

	Engine_OnClicked_Parms OnClicked_Parms;
	OnClicked_Parms.EventObject = EventObject;
	OnClicked_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnClicked,NULL,&OnClicked_Parms,NULL);
	return OnClicked_Parms.ReturnValue;
}

struct Engine_OnPreSceneUpdate_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
};

void UUIObject::OnPreSceneUpdate(class UUIObject* Sender)
{
	static UFieldFunc* pFnOnPreSceneUpdate = NULL;
	if(!pFnOnPreSceneUpdate)
		pFnOnPreSceneUpdate = UObject::FindFunction("Function Engine.UIObject.OnPreSceneUpdate");

	Engine_OnPreSceneUpdate_Parms OnPreSceneUpdate_Parms;
	OnPreSceneUpdate_Parms.Sender = Sender;
	ProcessEvent(pFnOnPreSceneUpdate,NULL,&OnPreSceneUpdate_Parms,NULL);
}

struct Engine_SetActiveCursorUpdate_Parms
{
	unsigned long                                      bShouldReceiveCursorUpdates : 1;                  		// 0x000000 (0x0004) [0x00000001] 
};

void UUIObject::SetActiveCursorUpdate(bool bShouldReceiveCursorUpdates)
{
	static UFieldFunc* pFnSetActiveCursorUpdate = NULL;
	if(!pFnSetActiveCursorUpdate)
		pFnSetActiveCursorUpdate = UObject::FindFunction("Function Engine.UIObject.SetActiveCursorUpdate");

	Engine_SetActiveCursorUpdate_Parms SetActiveCursorUpdate_Parms;
	SetActiveCursorUpdate_Parms.bShouldReceiveCursorUpdates = bShouldReceiveCursorUpdates;
	pFnSetActiveCursorUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveCursorUpdate,NULL,&SetActiveCursorUpdate_Parms,NULL);
	pFnSetActiveCursorUpdate->FunctionFlags |= 0x400;
}

struct Engine_GetOwner_Parms
{
	class UUIObject*                                   ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIObject* UUIObject::GetOwner()
{
	static UFieldFunc* pFnGetOwner = NULL;
	if(!pFnGetOwner)
		pFnGetOwner = UObject::FindFunction("Function Engine.UIObject.GetOwner");

	Engine_GetOwner_Parms GetOwner_Parms;
	ProcessEvent(pFnGetOwner,NULL,&GetOwner_Parms,NULL);
	return GetOwner_Parms.ReturnValue;
}

struct Engine_RemoveStyleSubscriber_Parms
{
	class UUIStyleResolver*                            Subscriber;                                       		// 0x000000 (0x0008)              
};

void UUIObject::RemoveStyleSubscriber(class UUIStyleResolver* Subscriber)
{
	static UFieldFunc* pFnRemoveStyleSubscriber = NULL;
	if(!pFnRemoveStyleSubscriber)
		pFnRemoveStyleSubscriber = UObject::FindFunction("Function Engine.UIObject.RemoveStyleSubscriber");

	Engine_RemoveStyleSubscriber_Parms RemoveStyleSubscriber_Parms;
	RemoveStyleSubscriber_Parms.Subscriber = Subscriber;
	pFnRemoveStyleSubscriber->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveStyleSubscriber,NULL,&RemoveStyleSubscriber_Parms,NULL);
	pFnRemoveStyleSubscriber->FunctionFlags |= 0x400;
}

struct Engine_OnPressRelease_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIObject::OnPressRelease(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnOnPressRelease = NULL;
	if(!pFnOnPressRelease)
		pFnOnPressRelease = UObject::FindFunction("Function Engine.UIObject.OnPressRelease");

	Engine_OnPressRelease_Parms OnPressRelease_Parms;
	OnPressRelease_Parms.EventObject = EventObject;
	OnPressRelease_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnPressRelease,NULL,&OnPressRelease_Parms,NULL);
}

struct Engine_OnValueChanged_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIObject::OnValueChanged(class UUIObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnOnValueChanged = NULL;
	if(!pFnOnValueChanged)
		pFnOnValueChanged = UObject::FindFunction("Function Engine.UIObject.OnValueChanged");

	Engine_OnValueChanged_Parms OnValueChanged_Parms;
	OnValueChanged_Parms.Sender = Sender;
	OnValueChanged_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnValueChanged,NULL,&OnValueChanged_Parms,NULL);
}

struct Engine_GetPositionExtent_Parms
{
	unsigned char                                      Face;                                             		// 0x000000 (0x0001)              
	unsigned long                                      bIncludeRotation : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float UUIObject::GetPositionExtent(unsigned char Face,bool bIncludeRotation)
{
	static UFieldFunc* pFnGetPositionExtent = NULL;
	if(!pFnGetPositionExtent)
		pFnGetPositionExtent = UObject::FindFunction("Function Engine.UIObject.GetPositionExtent");

	Engine_GetPositionExtent_Parms GetPositionExtent_Parms;
	GetPositionExtent_Parms.Face = Face;
	GetPositionExtent_Parms.bIncludeRotation = bIncludeRotation;
	pFnGetPositionExtent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPositionExtent,NULL,&GetPositionExtent_Parms,NULL);
	pFnGetPositionExtent->FunctionFlags |= 0x400;
	return GetPositionExtent_Parms.ReturnValue;
}

struct Engine_AnimSetTop_Parms
{
	float                                              NewTop;                                           		// 0x000000 (0x0004)              
};

void UUIObject::AnimSetTop(float NewTop)
{
	static UFieldFunc* pFnAnimSetTop = NULL;
	if(!pFnAnimSetTop)
		pFnAnimSetTop = UObject::FindFunction("Function Engine.UIObject.AnimSetTop");

	Engine_AnimSetTop_Parms AnimSetTop_Parms;
	AnimSetTop_Parms.NewTop = NewTop;
	pFnAnimSetTop->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetTop,NULL,&AnimSetTop_Parms,NULL);
	pFnAnimSetTop->FunctionFlags |= 0x400;
}

struct Engine_AnimSetOpacity_Parms
{
	float                                              NewOpacity;                                       		// 0x000000 (0x0004)              
};

void UUIObject::AnimSetOpacity(float NewOpacity)
{
	static UFieldFunc* pFnAnimSetOpacity = NULL;
	if(!pFnAnimSetOpacity)
		pFnAnimSetOpacity = UObject::FindFunction("Function Engine.UIObject.AnimSetOpacity");

	Engine_AnimSetOpacity_Parms AnimSetOpacity_Parms;
	AnimSetOpacity_Parms.NewOpacity = NewOpacity;
	pFnAnimSetOpacity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetOpacity,NULL,&AnimSetOpacity_Parms,NULL);
	pFnAnimSetOpacity->FunctionFlags |= 0x400;
}

struct Engine_UpdateRotationMatrix_Parms
{
};

void UUIObject::UpdateRotationMatrix()
{
	static UFieldFunc* pFnUpdateRotationMatrix = NULL;
	if(!pFnUpdateRotationMatrix)
		pFnUpdateRotationMatrix = UObject::FindFunction("Function Engine.UIObject.UpdateRotationMatrix");

	Engine_UpdateRotationMatrix_Parms UpdateRotationMatrix_Parms;
	pFnUpdateRotationMatrix->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateRotationMatrix,NULL,&UpdateRotationMatrix_Parms,NULL);
	pFnUpdateRotationMatrix->FunctionFlags |= 0x400;
}

struct Engine_SetWidgetStyleByName_Parms
{
	struct FName                                       StyleResolverTagToSet;                            		// 0x000000 (0x0008)              
	struct FName                                       StyleFriendlyName;                                		// 0x000008 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIObject::SetWidgetStyleByName(struct FName StyleResolverTagToSet,struct FName StyleFriendlyName)
{
	static UFieldFunc* pFnSetWidgetStyleByName = NULL;
	if(!pFnSetWidgetStyleByName)
		pFnSetWidgetStyleByName = UObject::FindFunction("Function Engine.UIObject.SetWidgetStyleByName");

	Engine_SetWidgetStyleByName_Parms SetWidgetStyleByName_Parms;
	memcpy(&SetWidgetStyleByName_Parms.StyleResolverTagToSet,&StyleResolverTagToSet,0x8);
	memcpy(&SetWidgetStyleByName_Parms.StyleFriendlyName,&StyleFriendlyName,0x8);
	pFnSetWidgetStyleByName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetWidgetStyleByName,NULL,&SetWidgetStyleByName_Parms,NULL);
	pFnSetWidgetStyleByName->FunctionFlags |= 0x400;
	return SetWidgetStyleByName_Parms.ReturnValue;
}

struct Engine_AnimSetRight_Parms
{
	float                                              NewRight;                                         		// 0x000000 (0x0004)              
};

void UUIObject::AnimSetRight(float NewRight)
{
	static UFieldFunc* pFnAnimSetRight = NULL;
	if(!pFnAnimSetRight)
		pFnAnimSetRight = UObject::FindFunction("Function Engine.UIObject.AnimSetRight");

	Engine_AnimSetRight_Parms AnimSetRight_Parms;
	AnimSetRight_Parms.NewRight = NewRight;
	pFnAnimSetRight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetRight,NULL,&AnimSetRight_Parms,NULL);
	pFnAnimSetRight->FunctionFlags |= 0x400;
}

struct Engine_AnimSetRotation_Parms
{
	FRotator                                           NewRotation;                                      		// 0x000000 (0x000C)              
};

void UUIObject::AnimSetRotation(FRotator NewRotation)
{
	static UFieldFunc* pFnAnimSetRotation = NULL;
	if(!pFnAnimSetRotation)
		pFnAnimSetRotation = UObject::FindFunction("Function Engine.UIObject.AnimSetRotation");

	Engine_AnimSetRotation_Parms AnimSetRotation_Parms;
	memcpy(&AnimSetRotation_Parms.NewRotation,&NewRotation,0xC);
	pFnAnimSetRotation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetRotation,NULL,&AnimSetRotation_Parms,NULL);
	pFnAnimSetRotation->FunctionFlags |= 0x400;
}

struct Engine_ResolveDefaultDataBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIObject::ResolveDefaultDataBinding(int BindingIndex)
{
	static UFieldFunc* pFnResolveDefaultDataBinding = NULL;
	if(!pFnResolveDefaultDataBinding)
		pFnResolveDefaultDataBinding = UObject::FindFunction("Function Engine.UIObject.ResolveDefaultDataBinding");

	Engine_ResolveDefaultDataBinding_Parms ResolveDefaultDataBinding_Parms;
	ResolveDefaultDataBinding_Parms.BindingIndex = BindingIndex;
	pFnResolveDefaultDataBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResolveDefaultDataBinding,NULL,&ResolveDefaultDataBinding_Parms,NULL);
	pFnResolveDefaultDataBinding->FunctionFlags |= 0x400;
	return ResolveDefaultDataBinding_Parms.ReturnValue;
}

struct Engine_OnPressRepeat_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIObject::OnPressRepeat(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnOnPressRepeat = NULL;
	if(!pFnOnPressRepeat)
		pFnOnPressRepeat = UObject::FindFunction("Function Engine.UIObject.OnPressRepeat");

	Engine_OnPressRepeat_Parms OnPressRepeat_Parms;
	OnPressRepeat_Parms.EventObject = EventObject;
	OnPressRepeat_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnPressRepeat,NULL,&OnPressRepeat_Parms,NULL);
}

struct Engine_OnPostSceneUpdate_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
};

void UUIObject::OnPostSceneUpdate(class UUIObject* Sender)
{
	static UFieldFunc* pFnOnPostSceneUpdate = NULL;
	if(!pFnOnPostSceneUpdate)
		pFnOnPostSceneUpdate = UObject::FindFunction("Function Engine.UIObject.OnPostSceneUpdate");

	Engine_OnPostSceneUpdate_Parms OnPostSceneUpdate_Parms;
	OnPostSceneUpdate_Parms.Sender = Sender;
	ProcessEvent(pFnOnPostSceneUpdate,NULL,&OnPostSceneUpdate_Parms,NULL);
}

struct Engine_GetParent_Parms
{
	class UUIScreenObject*                             ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UUIScreenObject*                             Result;                                           		// 0x000004 (0x0004)              
};

class UUIScreenObject* UUIObject::GetParent()
{
	static UFieldFunc* pFnGetParent = NULL;
	if(!pFnGetParent)
		pFnGetParent = UObject::FindFunction("Function Engine.UIObject.GetParent");

	Engine_GetParent_Parms GetParent_Parms;
	ProcessEvent(pFnGetParent,NULL,&GetParent_Parms,NULL);
	return GetParent_Parms.ReturnValue;
}

struct Engine_OnCloseContextMenu_Parms
{
	class UUIContextMenu*                              ContextMenu;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIObject::OnCloseContextMenu(class UUIContextMenu* ContextMenu,int PlayerIndex)
{
	static UFieldFunc* pFnOnCloseContextMenu = NULL;
	if(!pFnOnCloseContextMenu)
		pFnOnCloseContextMenu = UObject::FindFunction("Function Engine.UIObject.OnCloseContextMenu");

	Engine_OnCloseContextMenu_Parms OnCloseContextMenu_Parms;
	OnCloseContextMenu_Parms.ContextMenu = ContextMenu;
	OnCloseContextMenu_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnCloseContextMenu,NULL,&OnCloseContextMenu_Parms,NULL);
	return OnCloseContextMenu_Parms.ReturnValue;
}

struct Engine_AnimSetColor_Parms
{
	struct FLinearColor                                NewColor;                                         		// 0x000000 (0x0010)              
};

void UUIObject::AnimSetColor(struct FLinearColor NewColor)
{
	static UFieldFunc* pFnAnimSetColor = NULL;
	if(!pFnAnimSetColor)
		pFnAnimSetColor = UObject::FindFunction("Function Engine.UIObject.AnimSetColor");

	Engine_AnimSetColor_Parms AnimSetColor_Parms;
	memcpy(&AnimSetColor_Parms.NewColor,&NewColor,0x10);
	pFnAnimSetColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetColor,NULL,&AnimSetColor_Parms,NULL);
	pFnAnimSetColor->FunctionFlags |= 0x400;
}

struct Engine_GenerateTransformMatrix_Parms
{
	unsigned long                                      bIncludeParentTransforms : 1;                     		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      _0x000004[0xC];                                   		// 0x000004 (0x000C) MISSED OFFSET
	FMatrix                                            ReturnValue;                                      		// 0x000010 (0x0040)              
};

FMatrix UUIObject::GenerateTransformMatrix(bool bIncludeParentTransforms)
{
	static UFieldFunc* pFnGenerateTransformMatrix = NULL;
	if(!pFnGenerateTransformMatrix)
		pFnGenerateTransformMatrix = UObject::FindFunction("Function Engine.UIObject.GenerateTransformMatrix");

	Engine_GenerateTransformMatrix_Parms GenerateTransformMatrix_Parms;
	GenerateTransformMatrix_Parms.bIncludeParentTransforms = bIncludeParentTransforms;
	pFnGenerateTransformMatrix->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGenerateTransformMatrix,NULL,&GenerateTransformMatrix_Parms,NULL);
	pFnGenerateTransformMatrix->FunctionFlags |= 0x400;
	return GenerateTransformMatrix_Parms.ReturnValue;
}

struct Engine_OnRefreshSubscriberValue_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
	int                                                BindingIndex;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIObject::OnRefreshSubscriberValue(class UUIObject* Sender,int BindingIndex)
{
	static UFieldFunc* pFnOnRefreshSubscriberValue = NULL;
	if(!pFnOnRefreshSubscriberValue)
		pFnOnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIObject.OnRefreshSubscriberValue");

	Engine_OnRefreshSubscriberValue_Parms OnRefreshSubscriberValue_Parms;
	OnRefreshSubscriberValue_Parms.Sender = Sender;
	OnRefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	ProcessEvent(pFnOnRefreshSubscriberValue,NULL,&OnRefreshSubscriberValue_Parms,NULL);
	return OnRefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_StopUIAnimation_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	class UUIAnimationSeq*                             AnimSeq;                                          		// 0x000008 (0x0004)              
	unsigned long                                      bFinalize : 1;                                    		// 0x00000C (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000010 (0x0004)              
	//int                                                Idx;                                              		// 0x000014 (0x0004)              
	//int                                                FIdx;                                             		// 0x000018 (0x0004)              
	//class UUIAnimationSeq*                             Seq;                                              		// 0x00001C (0x0004)              
	//class UUIObject*                                   TargetWidget;                                     		// 0x000020 (0x0004)              
};

void UUIObject::StopUIAnimation(struct FName AnimName,class UUIAnimationSeq* AnimSeq,bool bFinalize)
{
	static UFieldFunc* pFnStopUIAnimation = NULL;
	if(!pFnStopUIAnimation)
		pFnStopUIAnimation = UObject::FindFunction("Function Engine.UIObject.StopUIAnimation");

	Engine_StopUIAnimation_Parms StopUIAnimation_Parms;
	memcpy(&StopUIAnimation_Parms.AnimName,&AnimName,0x8);
	StopUIAnimation_Parms.AnimSeq = AnimSeq;
	StopUIAnimation_Parms.bFinalize = bFinalize;
	ProcessEvent(pFnStopUIAnimation,NULL,&StopUIAnimation_Parms,NULL);
}

struct Engine_AnimSetBottom_Parms
{
	float                                              NewBottom;                                        		// 0x000000 (0x0004)              
};

void UUIObject::AnimSetBottom(float NewBottom)
{
	static UFieldFunc* pFnAnimSetBottom = NULL;
	if(!pFnAnimSetBottom)
		pFnAnimSetBottom = UObject::FindFunction("Function Engine.UIObject.AnimSetBottom");

	Engine_AnimSetBottom_Parms AnimSetBottom_Parms;
	AnimSetBottom_Parms.NewBottom = NewBottom;
	pFnAnimSetBottom->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetBottom,NULL,&AnimSetBottom_Parms,NULL);
	pFnAnimSetBottom->FunctionFlags |= 0x400;
}

struct Engine_NeedsActiveCursorUpdates_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIObject::NeedsActiveCursorUpdates()
{
	static UFieldFunc* pFnNeedsActiveCursorUpdates = NULL;
	if(!pFnNeedsActiveCursorUpdates)
		pFnNeedsActiveCursorUpdates = UObject::FindFunction("Function Engine.UIObject.NeedsActiveCursorUpdates");

	Engine_NeedsActiveCursorUpdates_Parms NeedsActiveCursorUpdates_Parms;
	pFnNeedsActiveCursorUpdates->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNeedsActiveCursorUpdates,NULL,&NeedsActiveCursorUpdates_Parms,NULL);
	pFnNeedsActiveCursorUpdates->FunctionFlags |= 0x400;
	return NeedsActiveCursorUpdates_Parms.ReturnValue;
}

struct Engine_OnUIAnimEnd_Parms
{
	class UUIObject*                                   AnimTarget;                                       		// 0x000000 (0x0004)              
	int                                                AnimIndex;                                        		// 0x000004 (0x0004)              
	class UUIAnimationSeq*                             AnimSeq;                                          		// 0x000008 (0x0004)              
};

void UUIObject::OnUIAnimEnd(class UUIObject* AnimTarget,int AnimIndex,class UUIAnimationSeq* AnimSeq)
{
	static UFieldFunc* pFnOnUIAnimEnd = NULL;
	if(!pFnOnUIAnimEnd)
		pFnOnUIAnimEnd = UObject::FindFunction("Function Engine.UIObject.OnUIAnimEnd");

	Engine_OnUIAnimEnd_Parms OnUIAnimEnd_Parms;
	OnUIAnimEnd_Parms.AnimTarget = AnimTarget;
	OnUIAnimEnd_Parms.AnimIndex = AnimIndex;
	OnUIAnimEnd_Parms.AnimSeq = AnimSeq;
	ProcessEvent(pFnOnUIAnimEnd,NULL,&OnUIAnimEnd_Parms,NULL);
}

struct Engine_OnDoubleClick_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIObject::OnDoubleClick(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnOnDoubleClick = NULL;
	if(!pFnOnDoubleClick)
		pFnOnDoubleClick = UObject::FindFunction("Function Engine.UIObject.OnDoubleClick");

	Engine_OnDoubleClick_Parms OnDoubleClick_Parms;
	OnDoubleClick_Parms.EventObject = EventObject;
	OnDoubleClick_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnDoubleClick,NULL,&OnDoubleClick_Parms,NULL);
}

struct Engine_GetRotationMatrix_Parms
{
	unsigned long                                      bIncludeParentRotations : 1;                      		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      _0x000004[0xC];                                   		// 0x000004 (0x000C) MISSED OFFSET
	FMatrix                                            ReturnValue;                                      		// 0x000010 (0x0040)              
};

FMatrix UUIObject::GetRotationMatrix(bool bIncludeParentRotations)
{
	static UFieldFunc* pFnGetRotationMatrix = NULL;
	if(!pFnGetRotationMatrix)
		pFnGetRotationMatrix = UObject::FindFunction("Function Engine.UIObject.GetRotationMatrix");

	Engine_GetRotationMatrix_Parms GetRotationMatrix_Parms;
	GetRotationMatrix_Parms.bIncludeParentRotations = bIncludeParentRotations;
	pFnGetRotationMatrix->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRotationMatrix,NULL,&GetRotationMatrix_Parms,NULL);
	pFnGetRotationMatrix->FunctionFlags |= 0x400;
	return GetRotationMatrix_Parms.ReturnValue;
}

struct Engine_AnimSetVisibility_Parms
{
	unsigned long                                      bIsVisible : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UUIObject::AnimSetVisibility(bool bIsVisible)
{
	static UFieldFunc* pFnAnimSetVisibility = NULL;
	if(!pFnAnimSetVisibility)
		pFnAnimSetVisibility = UObject::FindFunction("Function Engine.UIObject.AnimSetVisibility");

	Engine_AnimSetVisibility_Parms AnimSetVisibility_Parms;
	AnimSetVisibility_Parms.bIsVisible = bIsVisible;
	pFnAnimSetVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetVisibility,NULL,&AnimSetVisibility_Parms,NULL);
	pFnAnimSetVisibility->FunctionFlags |= 0x400;
}

struct Engine_IsPrivateBehaviorSet_Parms
{
	int                                                Behavior;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIObject::IsPrivateBehaviorSet(int Behavior)
{
	static UFieldFunc* pFnIsPrivateBehaviorSet = NULL;
	if(!pFnIsPrivateBehaviorSet)
		pFnIsPrivateBehaviorSet = UObject::FindFunction("Function Engine.UIObject.IsPrivateBehaviorSet");

	Engine_IsPrivateBehaviorSet_Parms IsPrivateBehaviorSet_Parms;
	IsPrivateBehaviorSet_Parms.Behavior = Behavior;
	pFnIsPrivateBehaviorSet->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsPrivateBehaviorSet,NULL,&IsPrivateBehaviorSet_Parms,NULL);
	pFnIsPrivateBehaviorSet->FunctionFlags |= 0x400;
	return IsPrivateBehaviorSet_Parms.ReturnValue;
}

struct Engine_AnimSetPosition_Parms
{
	FVector3                                           NewPosition;                                      		// 0x000000 (0x000C)              
};

void UUIObject::AnimSetPosition(FVector3 NewPosition)
{
	static UFieldFunc* pFnAnimSetPosition = NULL;
	if(!pFnAnimSetPosition)
		pFnAnimSetPosition = UObject::FindFunction("Function Engine.UIObject.AnimSetPosition");

	Engine_AnimSetPosition_Parms AnimSetPosition_Parms;
	memcpy(&AnimSetPosition_Parms.NewPosition,&NewPosition,0xC);
	pFnAnimSetPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetPosition,NULL,&AnimSetPosition_Parms,NULL);
	pFnAnimSetPosition->FunctionFlags |= 0x400;
}

struct Engine_SetAnchorPosition_Parms
{
	FVector3                                           NewAnchorPosition;                                		// 0x000000 (0x000C)              
	unsigned char                                      InputType;                                        		// 0x00000C (0x0001)              
};

void UUIObject::SetAnchorPosition(FVector3 NewAnchorPosition,unsigned char InputType)
{
	static UFieldFunc* pFnSetAnchorPosition = NULL;
	if(!pFnSetAnchorPosition)
		pFnSetAnchorPosition = UObject::FindFunction("Function Engine.UIObject.SetAnchorPosition");

	Engine_SetAnchorPosition_Parms SetAnchorPosition_Parms;
	memcpy(&SetAnchorPosition_Parms.NewAnchorPosition,&NewAnchorPosition,0xC);
	SetAnchorPosition_Parms.InputType = InputType;
	pFnSetAnchorPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAnchorPosition,NULL,&SetAnchorPosition_Parms,NULL);
	pFnSetAnchorPosition->FunctionFlags |= 0x400;
}

struct Engine_GetScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScene* UUIObject::GetScene()
{
	static UFieldFunc* pFnGetScene = NULL;
	if(!pFnGetScene)
		pFnGetScene = UObject::FindFunction("Function Engine.UIObject.GetScene");

	Engine_GetScene_Parms GetScene_Parms;
	ProcessEvent(pFnGetScene,NULL,&GetScene_Parms,NULL);
	return GetScene_Parms.ReturnValue;
}

struct Engine_TickAnim_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
};

void UUIObject::TickAnim(float DeltaTime)
{
	static UFieldFunc* pFnTickAnim = NULL;
	if(!pFnTickAnim)
		pFnTickAnim = UObject::FindFunction("Function Engine.UIObject.TickAnim");

	Engine_TickAnim_Parms TickAnim_Parms;
	TickAnim_Parms.DeltaTime = DeltaTime;
	pFnTickAnim->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTickAnim,NULL,&TickAnim_Parms,NULL);
	pFnTickAnim->FunctionFlags |= 0x400;
}

struct Engine_GetToolTipValue_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UUIObject::GetToolTipValue()
{
	static UFieldFunc* pFnGetToolTipValue = NULL;
	if(!pFnGetToolTipValue)
		pFnGetToolTipValue = UObject::FindFunction("Function Engine.UIObject.GetToolTipValue");

	Engine_GetToolTipValue_Parms GetToolTipValue_Parms;
	pFnGetToolTipValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetToolTipValue,NULL,&GetToolTipValue_Parms,NULL);
	pFnGetToolTipValue->FunctionFlags |= 0x400;
	return GetToolTipValue_Parms.ReturnValue;
}

struct Engine_HasTransform_Parms
{
	unsigned long                                      bIncludeParentTransforms : 1;                     		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIObject::HasTransform(bool bIncludeParentTransforms)
{
	static UFieldFunc* pFnHasTransform = NULL;
	if(!pFnHasTransform)
		pFnHasTransform = UObject::FindFunction("Function Engine.UIObject.HasTransform");

	Engine_HasTransform_Parms HasTransform_Parms;
	HasTransform_Parms.bIncludeParentTransforms = bIncludeParentTransforms;
	pFnHasTransform->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasTransform,NULL,&HasTransform_Parms,NULL);
	pFnHasTransform->FunctionFlags |= 0x400;
	return HasTransform_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIObject::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIObject.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetPrivateBehavior_Parms
{
	int                                                Behavior;                                         		// 0x000000 (0x0004)              
	unsigned long                                      Value : 1;                                        		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bRecurse : 1;                                     		// 0x000008 (0x0004) [0x00000001] 
};

void UUIObject::SetPrivateBehavior(int Behavior,bool Value,bool bRecurse)
{
	static UFieldFunc* pFnSetPrivateBehavior = NULL;
	if(!pFnSetPrivateBehavior)
		pFnSetPrivateBehavior = UObject::FindFunction("Function Engine.UIObject.SetPrivateBehavior");

	Engine_SetPrivateBehavior_Parms SetPrivateBehavior_Parms;
	SetPrivateBehavior_Parms.Behavior = Behavior;
	SetPrivateBehavior_Parms.Value = Value;
	SetPrivateBehavior_Parms.bRecurse = bRecurse;
	pFnSetPrivateBehavior->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPrivateBehavior,NULL,&SetPrivateBehavior_Parms,NULL);
	pFnSetPrivateBehavior->FunctionFlags |= 0x400;
}

struct Engine_GetDefaultDataBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIObject::GetDefaultDataBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDefaultDataBinding = NULL;
	if(!pFnGetDefaultDataBinding)
		pFnGetDefaultDataBinding = UObject::FindFunction("Function Engine.UIObject.GetDefaultDataBinding");

	Engine_GetDefaultDataBinding_Parms GetDefaultDataBinding_Parms;
	GetDefaultDataBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDefaultDataBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultDataBinding,NULL,&GetDefaultDataBinding_Parms,NULL);
	pFnGetDefaultDataBinding->FunctionFlags |= 0x400;
	return GetDefaultDataBinding_Parms.ReturnValue;
}

struct Engine_FindStyleSubscriberIndexById_Parms
{
	struct FName                                       StyleSubscriberId;                                		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIObject::FindStyleSubscriberIndexById(struct FName StyleSubscriberId)
{
	static UFieldFunc* pFnFindStyleSubscriberIndexById = NULL;
	if(!pFnFindStyleSubscriberIndexById)
		pFnFindStyleSubscriberIndexById = UObject::FindFunction("Function Engine.UIObject.FindStyleSubscriberIndexById");

	Engine_FindStyleSubscriberIndexById_Parms FindStyleSubscriberIndexById_Parms;
	memcpy(&FindStyleSubscriberIndexById_Parms.StyleSubscriberId,&StyleSubscriberId,0x8);
	pFnFindStyleSubscriberIndexById->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindStyleSubscriberIndexById,NULL,&FindStyleSubscriberIndexById_Parms,NULL);
	pFnFindStyleSubscriberIndexById->FunctionFlags |= 0x400;
	return FindStyleSubscriberIndexById_Parms.ReturnValue;
}

struct Engine_SetDockPadding_Parms
{
	unsigned char                                      SourceFace;                                       		// 0x000000 (0x0001)              
	float                                              PaddingValue;                                     		// 0x000004 (0x0004)              
	unsigned char                                      PaddingInputType;                                 		// 0x000008 (0x0001)              
	unsigned long                                      bModifyPaddingScaleType : 1;                      		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIObject::SetDockPadding(unsigned char SourceFace,float PaddingValue,unsigned char PaddingInputType,bool bModifyPaddingScaleType)
{
	static UFieldFunc* pFnSetDockPadding = NULL;
	if(!pFnSetDockPadding)
		pFnSetDockPadding = UObject::FindFunction("Function Engine.UIObject.SetDockPadding");

	Engine_SetDockPadding_Parms SetDockPadding_Parms;
	SetDockPadding_Parms.SourceFace = SourceFace;
	SetDockPadding_Parms.PaddingValue = PaddingValue;
	SetDockPadding_Parms.PaddingInputType = PaddingInputType;
	SetDockPadding_Parms.bModifyPaddingScaleType = bModifyPaddingScaleType;
	pFnSetDockPadding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDockPadding,NULL,&SetDockPadding_Parms,NULL);
	pFnSetDockPadding->FunctionFlags |= 0x400;
	return SetDockPadding_Parms.ReturnValue;
}

struct Engine_GenerateSceneDataStoreMarkup_Parms
{
	struct FString                                     Group;                                            		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UUIObject::GenerateSceneDataStoreMarkup(struct FString Group)
{
	static UFieldFunc* pFnGenerateSceneDataStoreMarkup = NULL;
	if(!pFnGenerateSceneDataStoreMarkup)
		pFnGenerateSceneDataStoreMarkup = UObject::FindFunction("Function Engine.UIObject.GenerateSceneDataStoreMarkup");

	Engine_GenerateSceneDataStoreMarkup_Parms GenerateSceneDataStoreMarkup_Parms;
	memcpy(&GenerateSceneDataStoreMarkup_Parms.Group,&Group,0xC);
	pFnGenerateSceneDataStoreMarkup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGenerateSceneDataStoreMarkup,NULL,&GenerateSceneDataStoreMarkup_Parms,NULL);
	pFnGenerateSceneDataStoreMarkup->FunctionFlags |= 0x400;
	return GenerateSceneDataStoreMarkup_Parms.ReturnValue;
}

struct Engine_SetNavigationTarget_Parms
{
	unsigned char                                      Face;                                             		// 0x000000 (0x0001)              
	class UUIObject*                                   NewNavTarget;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIObject::SetNavigationTarget(unsigned char Face,class UUIObject* NewNavTarget)
{
	static UFieldFunc* pFnSetNavigationTarget = NULL;
	if(!pFnSetNavigationTarget)
		pFnSetNavigationTarget = UObject::FindFunction("Function Engine.UIObject.SetNavigationTarget");

	Engine_SetNavigationTarget_Parms SetNavigationTarget_Parms;
	SetNavigationTarget_Parms.Face = Face;
	SetNavigationTarget_Parms.NewNavTarget = NewNavTarget;
	pFnSetNavigationTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNavigationTarget,NULL,&SetNavigationTarget_Parms,NULL);
	pFnSetNavigationTarget->FunctionFlags |= 0x400;
	return SetNavigationTarget_Parms.ReturnValue;
}

struct Engine_ClearDefaultDataBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
};

void UUIObject::ClearDefaultDataBinding(int BindingIndex)
{
	static UFieldFunc* pFnClearDefaultDataBinding = NULL;
	if(!pFnClearDefaultDataBinding)
		pFnClearDefaultDataBinding = UObject::FindFunction("Function Engine.UIObject.ClearDefaultDataBinding");

	Engine_ClearDefaultDataBinding_Parms ClearDefaultDataBinding_Parms;
	ClearDefaultDataBinding_Parms.BindingIndex = BindingIndex;
	pFnClearDefaultDataBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearDefaultDataBinding,NULL,&ClearDefaultDataBinding_Parms,NULL);
	pFnClearDefaultDataBinding->FunctionFlags |= 0x400;
}

struct Engine_SetDockParameters_Parms
{
	unsigned char                                      SourceFace;                                       		// 0x000000 (0x0001)              
	class UUIScreenObject*                             Target;                                           		// 0x000004 (0x0004)              
	unsigned char                                      TargetFace;                                       		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	float                                              PaddingValue;                                     		// 0x00000C (0x0004)              
	unsigned char                                      PaddingInputType;                                 		// 0x000010 (0x0001)              
	unsigned long                                      bModifyPaddingScaleType : 1;                      		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUIObject::SetDockParameters(unsigned char SourceFace,class UUIScreenObject* Target,unsigned char TargetFace,float PaddingValue,unsigned char PaddingInputType,bool bModifyPaddingScaleType)
{
	static UFieldFunc* pFnSetDockParameters = NULL;
	if(!pFnSetDockParameters)
		pFnSetDockParameters = UObject::FindFunction("Function Engine.UIObject.SetDockParameters");

	Engine_SetDockParameters_Parms SetDockParameters_Parms;
	SetDockParameters_Parms.SourceFace = SourceFace;
	SetDockParameters_Parms.Target = Target;
	SetDockParameters_Parms.TargetFace = TargetFace;
	SetDockParameters_Parms.PaddingValue = PaddingValue;
	SetDockParameters_Parms.PaddingInputType = PaddingInputType;
	SetDockParameters_Parms.bModifyPaddingScaleType = bModifyPaddingScaleType;
	pFnSetDockParameters->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDockParameters,NULL,&SetDockParameters_Parms,NULL);
	pFnSetDockParameters->FunctionFlags |= 0x400;
	return SetDockParameters_Parms.ReturnValue;
}

struct Engine_SetDefaultDataBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIObject::SetDefaultDataBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDefaultDataBinding = NULL;
	if(!pFnSetDefaultDataBinding)
		pFnSetDefaultDataBinding = UObject::FindFunction("Function Engine.UIObject.SetDefaultDataBinding");

	Engine_SetDefaultDataBinding_Parms SetDefaultDataBinding_Parms;
	memcpy(&SetDefaultDataBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDefaultDataBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDefaultDataBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDefaultDataBinding,NULL,&SetDefaultDataBinding_Parms,NULL);
	pFnSetDefaultDataBinding->FunctionFlags |= 0x400;
}

struct Engine_AnimSetRelPosition_Parms
{
	FVector3                                           NewPosition;                                      		// 0x000000 (0x000C)              
	FVector3                                           InitialPosition;                                  		// 0x00000C (0x000C)              
};

void UUIObject::AnimSetRelPosition(FVector3 NewPosition,FVector3 InitialPosition)
{
	static UFieldFunc* pFnAnimSetRelPosition = NULL;
	if(!pFnAnimSetRelPosition)
		pFnAnimSetRelPosition = UObject::FindFunction("Function Engine.UIObject.AnimSetRelPosition");

	Engine_AnimSetRelPosition_Parms AnimSetRelPosition_Parms;
	memcpy(&AnimSetRelPosition_Parms.NewPosition,&NewPosition,0xC);
	memcpy(&AnimSetRelPosition_Parms.InitialPosition,&InitialPosition,0xC);
	pFnAnimSetRelPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetRelPosition,NULL,&AnimSetRelPosition_Parms,NULL);
	pFnAnimSetRelPosition->FunctionFlags |= 0x400;
}

struct Engine_IsContainedBy_Parms
{
	class UUIObject*                                   TestWidget;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIObject::IsContainedBy(class UUIObject* TestWidget)
{
	static UFieldFunc* pFnIsContainedBy = NULL;
	if(!pFnIsContainedBy)
		pFnIsContainedBy = UObject::FindFunction("Function Engine.UIObject.IsContainedBy");

	Engine_IsContainedBy_Parms IsContainedBy_Parms;
	IsContainedBy_Parms.TestWidget = TestWidget;
	pFnIsContainedBy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsContainedBy,NULL,&IsContainedBy_Parms,NULL);
	pFnIsContainedBy->FunctionFlags |= 0x400;
	return IsContainedBy_Parms.ReturnValue;
}

struct Engine_OnQueryToolTip_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
	class UUIToolTip*                                  CustomToolTip;                                    		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIObject::OnQueryToolTip(class UUIObject* Sender,class UUIToolTip** CustomToolTip)
{
	static UFieldFunc* pFnOnQueryToolTip = NULL;
	if(!pFnOnQueryToolTip)
		pFnOnQueryToolTip = UObject::FindFunction("Function Engine.UIObject.OnQueryToolTip");

	Engine_OnQueryToolTip_Parms OnQueryToolTip_Parms;
	OnQueryToolTip_Parms.Sender = Sender;
	ProcessEvent(pFnOnQueryToolTip,NULL,&OnQueryToolTip_Parms,NULL);
	if(CustomToolTip)
		*CustomToolTip = OnQueryToolTip_Parms.CustomToolTip;
	return OnQueryToolTip_Parms.ReturnValue;
}

struct Engine_OnOpenContextMenu_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIContextMenu*                              CustomContextMenu;                                		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIObject::OnOpenContextMenu(class UUIObject* Sender,int PlayerIndex,class UUIContextMenu** CustomContextMenu)
{
	static UFieldFunc* pFnOnOpenContextMenu = NULL;
	if(!pFnOnOpenContextMenu)
		pFnOnOpenContextMenu = UObject::FindFunction("Function Engine.UIObject.OnOpenContextMenu");

	Engine_OnOpenContextMenu_Parms OnOpenContextMenu_Parms;
	OnOpenContextMenu_Parms.Sender = Sender;
	OnOpenContextMenu_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnOpenContextMenu,NULL,&OnOpenContextMenu_Parms,NULL);
	if(CustomContextMenu)
		*CustomContextMenu = OnOpenContextMenu_Parms.CustomContextMenu;
	return OnOpenContextMenu_Parms.ReturnValue;
}

struct Engine_FindStyleSubscriberIndex_Parms
{
	class UUIStyleResolver*                            Subscriber;                                       		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIObject::FindStyleSubscriberIndex(class UUIStyleResolver** Subscriber)
{
	static UFieldFunc* pFnFindStyleSubscriberIndex = NULL;
	if(!pFnFindStyleSubscriberIndex)
		pFnFindStyleSubscriberIndex = UObject::FindFunction("Function Engine.UIObject.FindStyleSubscriberIndex");

	Engine_FindStyleSubscriberIndex_Parms FindStyleSubscriberIndex_Parms;
	pFnFindStyleSubscriberIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindStyleSubscriberIndex,NULL,&FindStyleSubscriberIndex_Parms,NULL);
	pFnFindStyleSubscriberIndex->FunctionFlags |= 0x400;
	if(Subscriber)
		*Subscriber = FindStyleSubscriberIndex_Parms.Subscriber;
	return FindStyleSubscriberIndex_Parms.ReturnValue;
}

struct Engine_GetPositionExtents_Parms
{
	float                                              MinX;                                             		// 0x000000 (0x0004)              
	float                                              MaxX;                                             		// 0x000004 (0x0004)              
	float                                              MinY;                                             		// 0x000008 (0x0004)              
	float                                              MaxY;                                             		// 0x00000C (0x0004)              
	unsigned long                                      bIncludeRotation : 1;                             		// 0x000010 (0x0004) [0x00000001] 
};

void UUIObject::GetPositionExtents(float* MinX,float* MaxX,float* MinY,float* MaxY,bool bIncludeRotation)
{
	static UFieldFunc* pFnGetPositionExtents = NULL;
	if(!pFnGetPositionExtents)
		pFnGetPositionExtents = UObject::FindFunction("Function Engine.UIObject.GetPositionExtents");

	Engine_GetPositionExtents_Parms GetPositionExtents_Parms;
	GetPositionExtents_Parms.bIncludeRotation = bIncludeRotation;
	pFnGetPositionExtents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPositionExtents,NULL,&GetPositionExtents_Parms,NULL);
	pFnGetPositionExtents->FunctionFlags |= 0x400;
	if(MinX)
		*MinX = GetPositionExtents_Parms.MinX;
	if(MaxX)
		*MaxX = GetPositionExtents_Parms.MaxX;
	if(MinY)
		*MinY = GetPositionExtents_Parms.MinY;
	if(MaxY)
		*MaxY = GetPositionExtents_Parms.MaxY;
}

struct Engine_LogRenderBounds_Parms
{
	int                                                Indent;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//struct FString                                     IndentString;                                     		// 0x000008 (0x000C)              
};

void UUIObject::LogRenderBounds(int Indent)
{
	static UFieldFunc* pFnLogRenderBounds = NULL;
	if(!pFnLogRenderBounds)
		pFnLogRenderBounds = UObject::FindFunction("Function Engine.UIObject.LogRenderBounds");

	Engine_LogRenderBounds_Parms LogRenderBounds_Parms;
	LogRenderBounds_Parms.Indent = Indent;
	ProcessEvent(pFnLogRenderBounds,NULL,&LogRenderBounds_Parms,NULL);
}

struct Engine_PlayUIAnimation_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	class UUIAnimationSeq*                             AnimSeqTemplate;                                  		// 0x000008 (0x0004)              
	float                                              PlaybackRate;                                     		// 0x00000C (0x0004)              
	unsigned long                                      bLoop : 1;                                        		// 0x000010 (0x0004) [0x00000001] 
	float                                              InitialPosition;                                  		// 0x000014 (0x0004)              
	//class UUIAnimationSeq*                             TargetAnimSeq;                                    		// 0x000018 (0x0004)              
	//class UGameUISceneClient*                          SClient;                                          		// 0x00001C (0x0004)              
	//int                                                Idx;                                              		// 0x000020 (0x0004)              
};

void UUIObject::PlayUIAnimation(struct FName AnimName,class UUIAnimationSeq* AnimSeqTemplate,float PlaybackRate,bool bLoop,float InitialPosition)
{
	static UFieldFunc* pFnPlayUIAnimation = NULL;
	if(!pFnPlayUIAnimation)
		pFnPlayUIAnimation = UObject::FindFunction("Function Engine.UIObject.PlayUIAnimation");

	Engine_PlayUIAnimation_Parms PlayUIAnimation_Parms;
	memcpy(&PlayUIAnimation_Parms.AnimName,&AnimName,0x8);
	PlayUIAnimation_Parms.AnimSeqTemplate = AnimSeqTemplate;
	PlayUIAnimation_Parms.PlaybackRate = PlaybackRate;
	PlayUIAnimation_Parms.bLoop = bLoop;
	PlayUIAnimation_Parms.InitialPosition = InitialPosition;
	ProcessEvent(pFnPlayUIAnimation,NULL,&PlayUIAnimation_Parms,NULL);
}

struct Engine_OnSetDatastoreBinding_Parms
{
	class UUIAction_SetDatastoreBinding*               Action;                                           		// 0x000000 (0x0004)              
	//class UUIDataStoreSubscriber*                      Subscriber;                                       		// 0x000004 (0x0008)              
};

void UUIObject::OnSetDatastoreBinding(class UUIAction_SetDatastoreBinding* Action)
{
	static UFieldFunc* pFnOnSetDatastoreBinding = NULL;
	if(!pFnOnSetDatastoreBinding)
		pFnOnSetDatastoreBinding = UObject::FindFunction("Function Engine.UIObject.OnSetDatastoreBinding");

	Engine_OnSetDatastoreBinding_Parms OnSetDatastoreBinding_Parms;
	OnSetDatastoreBinding_Parms.Action = Action;
	ProcessEvent(pFnOnSetDatastoreBinding,NULL,&OnSetDatastoreBinding_Parms,NULL);
}

struct Engine_AddStyleSubscriber_Parms
{
	class UUIStyleResolver*                            Subscriber;                                       		// 0x000000 (0x0008)              
};

void UUIObject::AddStyleSubscriber(class UUIStyleResolver* Subscriber)
{
	static UFieldFunc* pFnAddStyleSubscriber = NULL;
	if(!pFnAddStyleSubscriber)
		pFnAddStyleSubscriber = UObject::FindFunction("Function Engine.UIObject.AddStyleSubscriber");

	Engine_AddStyleSubscriber_Parms AddStyleSubscriber_Parms;
	AddStyleSubscriber_Parms.Subscriber = Subscriber;
	pFnAddStyleSubscriber->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddStyleSubscriber,NULL,&AddStyleSubscriber_Parms,NULL);
	pFnAddStyleSubscriber->FunctionFlags |= 0x400;
}

struct Engine_SetDockTarget_Parms
{
	unsigned char                                      SourceFace;                                       		// 0x000000 (0x0001)              
	class UUIScreenObject*                             Target;                                           		// 0x000004 (0x0004)              
	unsigned char                                      TargetFace;                                       		// 0x000008 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIObject::SetDockTarget(unsigned char SourceFace,class UUIScreenObject* Target,unsigned char TargetFace)
{
	static UFieldFunc* pFnSetDockTarget = NULL;
	if(!pFnSetDockTarget)
		pFnSetDockTarget = UObject::FindFunction("Function Engine.UIObject.SetDockTarget");

	Engine_SetDockTarget_Parms SetDockTarget_Parms;
	SetDockTarget_Parms.SourceFace = SourceFace;
	SetDockTarget_Parms.Target = Target;
	SetDockTarget_Parms.TargetFace = TargetFace;
	pFnSetDockTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDockTarget,NULL,&SetDockTarget_Parms,NULL);
	pFnSetDockTarget->FunctionFlags |= 0x400;
	return SetDockTarget_Parms.ReturnValue;
}

struct Engine_ClearUIAnimation_Parms
{
	struct FName                                       AnimName;                                         		// 0x000000 (0x0008)              
	class UUIAnimationSeq*                             AnimSeq;                                          		// 0x000008 (0x0004)              
	//int                                                Idx;                                              		// 0x00000C (0x0004)              
};

void UUIObject::ClearUIAnimation(struct FName AnimName,class UUIAnimationSeq* AnimSeq)
{
	static UFieldFunc* pFnClearUIAnimation = NULL;
	if(!pFnClearUIAnimation)
		pFnClearUIAnimation = UObject::FindFunction("Function Engine.UIObject.ClearUIAnimation");

	Engine_ClearUIAnimation_Parms ClearUIAnimation_Parms;
	memcpy(&ClearUIAnimation_Parms.AnimName,&AnimName,0x8);
	ClearUIAnimation_Parms.AnimSeq = AnimSeq;
	ProcessEvent(pFnClearUIAnimation,NULL,&ClearUIAnimation_Parms,NULL);
}

struct Engine_GetAnchorPosition_Parms
{
	unsigned long                                      bRelativeToWidget : 1;                            		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      bPixelSpace : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	FVector3                                           ReturnValue;                                      		// 0x000008 (0x000C)              
};

FVector3 UUIObject::GetAnchorPosition(bool bRelativeToWidget,bool bPixelSpace)
{
	static UFieldFunc* pFnGetAnchorPosition = NULL;
	if(!pFnGetAnchorPosition)
		pFnGetAnchorPosition = UObject::FindFunction("Function Engine.UIObject.GetAnchorPosition");

	Engine_GetAnchorPosition_Parms GetAnchorPosition_Parms;
	GetAnchorPosition_Parms.bRelativeToWidget = bRelativeToWidget;
	GetAnchorPosition_Parms.bPixelSpace = bPixelSpace;
	pFnGetAnchorPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAnchorPosition,NULL,&GetAnchorPosition_Parms,NULL);
	pFnGetAnchorPosition->FunctionFlags |= 0x400;
	return GetAnchorPosition_Parms.ReturnValue;
}

struct Engine_GetDefaultDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIObject::GetDefaultDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetDefaultDataStores = NULL;
	if(!pFnGetDefaultDataStores)
		pFnGetDefaultDataStores = UObject::FindFunction("Function Engine.UIObject.GetDefaultDataStores");

	Engine_GetDefaultDataStores_Parms GetDefaultDataStores_Parms;
	pFnGetDefaultDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultDataStores,NULL,&GetDefaultDataStores_Parms,NULL);
	pFnGetDefaultDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetDefaultDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_OnPressed_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIObject::OnPressed(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnOnPressed = NULL;
	if(!pFnOnPressed)
		pFnOnPressed = UObject::FindFunction("Function Engine.UIObject.OnPressed");

	Engine_OnPressed_Parms OnPressed_Parms;
	OnPressed_Parms.EventObject = EventObject;
	OnPressed_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnPressed,NULL,&OnPressed_Parms,NULL);
}

struct Engine_IsDockedTo_Parms
{
	class UUIScreenObject*                             TargetWidget;                                     		// 0x000000 (0x0004)              
	unsigned char                                      SourceFace;                                       		// 0x000004 (0x0001)              
	unsigned char                                      TargetFace;                                       		// 0x000005 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIObject::IsDockedTo(class UUIScreenObject* TargetWidget,unsigned char SourceFace,unsigned char TargetFace)
{
	static UFieldFunc* pFnIsDockedTo = NULL;
	if(!pFnIsDockedTo)
		pFnIsDockedTo = UObject::FindFunction("Function Engine.UIObject.IsDockedTo");

	Engine_IsDockedTo_Parms IsDockedTo_Parms;
	IsDockedTo_Parms.TargetWidget = TargetWidget;
	IsDockedTo_Parms.SourceFace = SourceFace;
	IsDockedTo_Parms.TargetFace = TargetFace;
	pFnIsDockedTo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsDockedTo,NULL,&IsDockedTo_Parms,NULL);
	pFnIsDockedTo->FunctionFlags |= 0x400;
	return IsDockedTo_Parms.ReturnValue;
}

struct Engine_OnCreate_Parms
{
	class UUIObject*                                   CreatedWidget;                                    		// 0x000000 (0x0004)              
	class UUIScreenObject*                             CreatorContainer;                                 		// 0x000004 (0x0004)              
};

void UUIObject::OnCreate(class UUIObject* CreatedWidget,class UUIScreenObject* CreatorContainer)
{
	static UFieldFunc* pFnOnCreate = NULL;
	if(!pFnOnCreate)
		pFnOnCreate = UObject::FindFunction("Function Engine.UIObject.OnCreate");

	Engine_OnCreate_Parms OnCreate_Parms;
	OnCreate_Parms.CreatedWidget = CreatedWidget;
	OnCreate_Parms.CreatorContainer = CreatorContainer;
	ProcessEvent(pFnOnCreate,NULL,&OnCreate_Parms,NULL);
}

struct Engine_CanAcceptFocus_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIObject::CanAcceptFocus(int PlayerIndex)
{
	static UFieldFunc* pFnCanAcceptFocus = NULL;
	if(!pFnCanAcceptFocus)
		pFnCanAcceptFocus = UObject::FindFunction("Function Engine.UIObject.CanAcceptFocus");

	Engine_CanAcceptFocus_Parms CanAcceptFocus_Parms;
	CanAcceptFocus_Parms.PlayerIndex = PlayerIndex;
	pFnCanAcceptFocus->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanAcceptFocus,NULL,&CanAcceptFocus_Parms,NULL);
	pFnCanAcceptFocus->FunctionFlags |= 0x400;
	return CanAcceptFocus_Parms.ReturnValue;
}

struct Engine_AnimSetScale_Parms
{
	float                                              NewScale;                                         		// 0x000000 (0x0004)              
};

void UUIObject::AnimSetScale(float NewScale)
{
	static UFieldFunc* pFnAnimSetScale = NULL;
	if(!pFnAnimSetScale)
		pFnAnimSetScale = UObject::FindFunction("Function Engine.UIObject.AnimSetScale");

	Engine_AnimSetScale_Parms AnimSetScale_Parms;
	AnimSetScale_Parms.NewScale = NewScale;
	pFnAnimSetScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetScale,NULL,&AnimSetScale_Parms,NULL);
	pFnAnimSetScale->FunctionFlags |= 0x400;
}

struct Engine_OnContextMenuItemSelected_Parms
{
	class UUIContextMenu*                              ContextMenu;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	int                                                ItemIndex;                                        		// 0x000008 (0x0004)              
};

void UUIObject::OnContextMenuItemSelected(class UUIContextMenu* ContextMenu,int PlayerIndex,int ItemIndex)
{
	static UFieldFunc* pFnOnContextMenuItemSelected = NULL;
	if(!pFnOnContextMenuItemSelected)
		pFnOnContextMenuItemSelected = UObject::FindFunction("Function Engine.UIObject.OnContextMenuItemSelected");

	Engine_OnContextMenuItemSelected_Parms OnContextMenuItemSelected_Parms;
	OnContextMenuItemSelected_Parms.ContextMenu = ContextMenu;
	OnContextMenuItemSelected_Parms.PlayerIndex = PlayerIndex;
	OnContextMenuItemSelected_Parms.ItemIndex = ItemIndex;
	ProcessEvent(pFnOnContextMenuItemSelected,NULL,&OnContextMenuItemSelected_Parms,NULL);
}

struct Engine_AnimSetLeft_Parms
{
	float                                              NewLeft;                                          		// 0x000000 (0x0004)              
};

void UUIObject::AnimSetLeft(float NewLeft)
{
	static UFieldFunc* pFnAnimSetLeft = NULL;
	if(!pFnAnimSetLeft)
		pFnAnimSetLeft = UObject::FindFunction("Function Engine.UIObject.AnimSetLeft");

	Engine_AnimSetLeft_Parms AnimSetLeft_Parms;
	AnimSetLeft_Parms.NewLeft = NewLeft;
	pFnAnimSetLeft->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAnimSetLeft,NULL,&AnimSetLeft_Parms,NULL);
	pFnAnimSetLeft->FunctionFlags |= 0x400;
}

struct Engine_RotateWidget_Parms
{
	FRotator                                           NewRotationAmount;                                		// 0x000000 (0x000C)              
	unsigned long                                      bAccumulateRotation : 1;                          		// 0x00000C (0x0004) [0x00000001] 
};

void UUIObject::RotateWidget(FRotator NewRotationAmount,bool bAccumulateRotation)
{
	static UFieldFunc* pFnRotateWidget = NULL;
	if(!pFnRotateWidget)
		pFnRotateWidget = UObject::FindFunction("Function Engine.UIObject.RotateWidget");

	Engine_RotateWidget_Parms RotateWidget_Parms;
	memcpy(&RotateWidget_Parms.NewRotationAmount,&NewRotationAmount,0xC);
	RotateWidget_Parms.bAccumulateRotation = bAccumulateRotation;
	pFnRotateWidget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRotateWidget,NULL,&RotateWidget_Parms,NULL);
	pFnRotateWidget->FunctionFlags |= 0x400;
}

struct Engine_SetForcedNavigationTarget_Parms
{
	unsigned char                                      Face;                                             		// 0x000000 (0x0001)              
	class UUIObject*                                   NavTarget;                                        		// 0x000004 (0x0004)              
	unsigned long                                      bIsNullOverride : 1;                              		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIObject::SetForcedNavigationTarget(unsigned char Face,class UUIObject* NavTarget,bool bIsNullOverride)
{
	static UFieldFunc* pFnSetForcedNavigationTarget = NULL;
	if(!pFnSetForcedNavigationTarget)
		pFnSetForcedNavigationTarget = UObject::FindFunction("Function Engine.UIObject.SetForcedNavigationTarget");

	Engine_SetForcedNavigationTarget_Parms SetForcedNavigationTarget_Parms;
	SetForcedNavigationTarget_Parms.Face = Face;
	SetForcedNavigationTarget_Parms.NavTarget = NavTarget;
	SetForcedNavigationTarget_Parms.bIsNullOverride = bIsNullOverride;
	pFnSetForcedNavigationTarget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetForcedNavigationTarget,NULL,&SetForcedNavigationTarget_Parms,NULL);
	pFnSetForcedNavigationTarget->FunctionFlags |= 0x400;
	return SetForcedNavigationTarget_Parms.ReturnValue;
}

struct Engine_NotifyValueChanged_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	int                                                NotifyFlags;                                      		// 0x000004 (0x0004)              
};

void UUIObject::NotifyValueChanged(int PlayerIndex,int NotifyFlags)
{
	static UFieldFunc* pFnNotifyValueChanged = NULL;
	if(!pFnNotifyValueChanged)
		pFnNotifyValueChanged = UObject::FindFunction("Function Engine.UIObject.NotifyValueChanged");

	Engine_NotifyValueChanged_Parms NotifyValueChanged_Parms;
	NotifyValueChanged_Parms.PlayerIndex = PlayerIndex;
	NotifyValueChanged_Parms.NotifyFlags = NotifyFlags;
	pFnNotifyValueChanged->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyValueChanged,NULL,&NotifyValueChanged_Parms,NULL);
	pFnNotifyValueChanged->FunctionFlags |= 0x400;
}

struct Engine_Fade_Parms
{
	float                                              FromAlpha;                                        		// 0x000000 (0x0004)              
	float                                              ToAlpha;                                          		// 0x000004 (0x0004)              
	float                                              TargetFadeTime;                                   		// 0x000008 (0x0004)              
};

void UUIComp_DrawComponents::Fade(float FromAlpha,float ToAlpha,float TargetFadeTime)
{
	static UFieldFunc* pFnFade = NULL;
	if(!pFnFade)
		pFnFade = UObject::FindFunction("Function Engine.UIComp_DrawComponents.Fade");

	Engine_Fade_Parms Fade_Parms;
	Fade_Parms.FromAlpha = FromAlpha;
	Fade_Parms.ToAlpha = ToAlpha;
	Fade_Parms.TargetFadeTime = TargetFadeTime;
	pFnFade->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFade,NULL,&Fade_Parms,NULL);
	pFnFade->FunctionFlags |= 0x400;
}

struct Engine_Pulse_Parms
{
	float                                              MaxAlpha;                                         		// 0x000000 (0x0004)              
	float                                              MinAlpha;                                         		// 0x000004 (0x0004)              
	float                                              PulseRate;                                        		// 0x000008 (0x0004)              
};

void UUIComp_DrawComponents::Pulse(float MaxAlpha,float MinAlpha,float PulseRate)
{
	static UFieldFunc* pFnPulse = NULL;
	if(!pFnPulse)
		pFnPulse = UObject::FindFunction("Function Engine.UIComp_DrawComponents.Pulse");

	Engine_Pulse_Parms Pulse_Parms;
	Pulse_Parms.MaxAlpha = MaxAlpha;
	Pulse_Parms.MinAlpha = MinAlpha;
	Pulse_Parms.PulseRate = PulseRate;
	pFnPulse->FunctionFlags |= ~0x400;
	ProcessEvent(pFnPulse,NULL,&Pulse_Parms,NULL);
	pFnPulse->FunctionFlags |= 0x400;
}

struct Engine_OnFadeComplete_Parms
{
	class UUIComp_DrawComponents*                      Sender;                                           		// 0x000000 (0x0004)              
};

void UUIComp_DrawComponents::OnFadeComplete(class UUIComp_DrawComponents* Sender)
{
	static UFieldFunc* pFnOnFadeComplete = NULL;
	if(!pFnOnFadeComplete)
		pFnOnFadeComplete = UObject::FindFunction("Function Engine.UIComp_DrawComponents.OnFadeComplete");

	Engine_OnFadeComplete_Parms OnFadeComplete_Parms;
	OnFadeComplete_Parms.Sender = Sender;
	ProcessEvent(pFnOnFadeComplete,NULL,&OnFadeComplete_Parms,NULL);
}

struct Engine_ResetFade_Parms
{
};

void UUIComp_DrawComponents::ResetFade()
{
	static UFieldFunc* pFnResetFade = NULL;
	if(!pFnResetFade)
		pFnResetFade = UObject::FindFunction("Function Engine.UIComp_DrawComponents.ResetFade");

	Engine_ResetFade_Parms ResetFade_Parms;
	pFnResetFade->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetFade,NULL,&ResetFade_Parms,NULL);
	pFnResetFade->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomPadding_Parms
{
};

void UUIComp_DrawImage::DisableCustomPadding()
{
	static UFieldFunc* pFnDisableCustomPadding = NULL;
	if(!pFnDisableCustomPadding)
		pFnDisableCustomPadding = UObject::FindFunction("Function Engine.UIComp_DrawImage.DisableCustomPadding");

	Engine_DisableCustomPadding_Parms DisableCustomPadding_Parms;
	pFnDisableCustomPadding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomPadding,NULL,&DisableCustomPadding_Parms,NULL);
	pFnDisableCustomPadding->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomOpacity_Parms
{
};

void UUIComp_DrawImage::DisableCustomOpacity()
{
	static UFieldFunc* pFnDisableCustomOpacity = NULL;
	if(!pFnDisableCustomOpacity)
		pFnDisableCustomOpacity = UObject::FindFunction("Function Engine.UIComp_DrawImage.DisableCustomOpacity");

	Engine_DisableCustomOpacity_Parms DisableCustomOpacity_Parms;
	pFnDisableCustomOpacity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomOpacity,NULL,&DisableCustomOpacity_Parms,NULL);
	pFnDisableCustomOpacity->FunctionFlags |= 0x400;
}

struct Engine_SetColor_Parms
{
	struct FLinearColor                                NewColor;                                         		// 0x000000 (0x0010)              
};

void UUIComp_DrawImage::SetColor(struct FLinearColor NewColor)
{
	static UFieldFunc* pFnSetColor = NULL;
	if(!pFnSetColor)
		pFnSetColor = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetColor");

	Engine_SetColor_Parms SetColor_Parms;
	memcpy(&SetColor_Parms.NewColor,&NewColor,0x10);
	pFnSetColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetColor,NULL,&SetColor_Parms,NULL);
	pFnSetColor->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomCoordinates_Parms
{
};

void UUIComp_DrawImage::DisableCustomCoordinates()
{
	static UFieldFunc* pFnDisableCustomCoordinates = NULL;
	if(!pFnDisableCustomCoordinates)
		pFnDisableCustomCoordinates = UObject::FindFunction("Function Engine.UIComp_DrawImage.DisableCustomCoordinates");

	Engine_DisableCustomCoordinates_Parms DisableCustomCoordinates_Parms;
	pFnDisableCustomCoordinates->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomCoordinates,NULL,&DisableCustomCoordinates_Parms,NULL);
	pFnDisableCustomCoordinates->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomFormatting_Parms
{
};

void UUIComp_DrawImage::DisableCustomFormatting()
{
	static UFieldFunc* pFnDisableCustomFormatting = NULL;
	if(!pFnDisableCustomFormatting)
		pFnDisableCustomFormatting = UObject::FindFunction("Function Engine.UIComp_DrawImage.DisableCustomFormatting");

	Engine_DisableCustomFormatting_Parms DisableCustomFormatting_Parms;
	pFnDisableCustomFormatting->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomFormatting,NULL,&DisableCustomFormatting_Parms,NULL);
	pFnDisableCustomFormatting->FunctionFlags |= 0x400;
}

struct Engine_SetImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIComp_DrawImage::SetImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetImage = NULL;
	if(!pFnSetImage)
		pFnSetImage = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetImage");

	Engine_SetImage_Parms SetImage_Parms;
	SetImage_Parms.NewImage = NewImage;
	pFnSetImage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetImage,NULL,&SetImage_Parms,NULL);
	pFnSetImage->FunctionFlags |= 0x400;
}

struct Engine_SetFormatting_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	struct FUIImageAdjustmentData                      NewFormattingData;                                		// 0x000004 (0x0010)              
};

void UUIComp_DrawImage::SetFormatting(unsigned char Orientation,struct FUIImageAdjustmentData NewFormattingData)
{
	static UFieldFunc* pFnSetFormatting = NULL;
	if(!pFnSetFormatting)
		pFnSetFormatting = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetFormatting");

	Engine_SetFormatting_Parms SetFormatting_Parms;
	SetFormatting_Parms.Orientation = Orientation;
	memcpy(&SetFormatting_Parms.NewFormattingData,&NewFormattingData,0x10);
	pFnSetFormatting->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFormatting,NULL,&SetFormatting_Parms,NULL);
	pFnSetFormatting->FunctionFlags |= 0x400;
}

struct Engine_SetOpacity_Parms
{
	float                                              NewOpacity;                                       		// 0x000000 (0x0004)              
};

void UUIComp_DrawImage::SetOpacity(float NewOpacity)
{
	static UFieldFunc* pFnSetOpacity = NULL;
	if(!pFnSetOpacity)
		pFnSetOpacity = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetOpacity");

	Engine_SetOpacity_Parms SetOpacity_Parms;
	SetOpacity_Parms.NewOpacity = NewOpacity;
	pFnSetOpacity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOpacity,NULL,&SetOpacity_Parms,NULL);
	pFnSetOpacity->FunctionFlags |= 0x400;
}

struct Engine_NotifyResolveStyle_Parms
{
	class UUISkin*                                     ActiveSkin;                                       		// 0x000000 (0x0004)              
	unsigned long                                      bClearExistingValue : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	class UUIState*                                    CurrentMenuState;                                 		// 0x000008 (0x0004)              
	struct FName                                       StylePropertyName;                                		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIComp_DrawImage::NotifyResolveStyle(class UUISkin* ActiveSkin,bool bClearExistingValue,class UUIState* CurrentMenuState,struct FName StylePropertyName)
{
	static UFieldFunc* pFnNotifyResolveStyle = NULL;
	if(!pFnNotifyResolveStyle)
		pFnNotifyResolveStyle = UObject::FindFunction("Function Engine.UIComp_DrawImage.NotifyResolveStyle");

	Engine_NotifyResolveStyle_Parms NotifyResolveStyle_Parms;
	NotifyResolveStyle_Parms.ActiveSkin = ActiveSkin;
	NotifyResolveStyle_Parms.bClearExistingValue = bClearExistingValue;
	NotifyResolveStyle_Parms.CurrentMenuState = CurrentMenuState;
	memcpy(&NotifyResolveStyle_Parms.StylePropertyName,&StylePropertyName,0x8);
	pFnNotifyResolveStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyResolveStyle,NULL,&NotifyResolveStyle_Parms,NULL);
	pFnNotifyResolveStyle->FunctionFlags |= 0x400;
	return NotifyResolveStyle_Parms.ReturnValue;
}

struct Engine_SetPadding_Parms
{
	float                                              HorizontalPadding;                                		// 0x000000 (0x0004)              
	float                                              VerticalPadding;                                  		// 0x000004 (0x0004)              
};

void UUIComp_DrawImage::SetPadding(float HorizontalPadding,float VerticalPadding)
{
	static UFieldFunc* pFnSetPadding = NULL;
	if(!pFnSetPadding)
		pFnSetPadding = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetPadding");

	Engine_SetPadding_Parms SetPadding_Parms;
	SetPadding_Parms.HorizontalPadding = HorizontalPadding;
	SetPadding_Parms.VerticalPadding = VerticalPadding;
	pFnSetPadding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPadding,NULL,&SetPadding_Parms,NULL);
	pFnSetPadding->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomColor_Parms
{
};

void UUIComp_DrawImage::DisableCustomColor()
{
	static UFieldFunc* pFnDisableCustomColor = NULL;
	if(!pFnDisableCustomColor)
		pFnDisableCustomColor = UObject::FindFunction("Function Engine.UIComp_DrawImage.DisableCustomColor");

	Engine_DisableCustomColor_Parms DisableCustomColor_Parms;
	pFnDisableCustomColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomColor,NULL,&DisableCustomColor_Parms,NULL);
	pFnDisableCustomColor->FunctionFlags |= 0x400;
}

struct Engine_GetAppliedImageStyle_Parms
{
	class UUIState*                                    DesiredMenuState;                                 		// 0x000000 (0x0004)              
	class UUIStyle_Image*                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIStyle_Image* UUIComp_DrawImage::GetAppliedImageStyle(class UUIState* DesiredMenuState)
{
	static UFieldFunc* pFnGetAppliedImageStyle = NULL;
	if(!pFnGetAppliedImageStyle)
		pFnGetAppliedImageStyle = UObject::FindFunction("Function Engine.UIComp_DrawImage.GetAppliedImageStyle");

	Engine_GetAppliedImageStyle_Parms GetAppliedImageStyle_Parms;
	GetAppliedImageStyle_Parms.DesiredMenuState = DesiredMenuState;
	pFnGetAppliedImageStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAppliedImageStyle,NULL,&GetAppliedImageStyle_Parms,NULL);
	pFnGetAppliedImageStyle->FunctionFlags |= 0x400;
	return GetAppliedImageStyle_Parms.ReturnValue;
}

struct Engine_SetCoordinates_Parms
{
	struct FTextureCoordinates                         NewCoordinates;                                   		// 0x000000 (0x0010)              
};

void UUIComp_DrawImage::SetCoordinates(struct FTextureCoordinates NewCoordinates)
{
	static UFieldFunc* pFnSetCoordinates = NULL;
	if(!pFnSetCoordinates)
		pFnSetCoordinates = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetCoordinates");

	Engine_SetCoordinates_Parms SetCoordinates_Parms;
	memcpy(&SetCoordinates_Parms.NewCoordinates,&NewCoordinates,0x10);
	pFnSetCoordinates->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCoordinates,NULL,&SetCoordinates_Parms,NULL);
	pFnSetCoordinates->FunctionFlags |= 0x400;
}

struct Engine_SetStyleResolverTag_Parms
{
	struct FName                                       NewResolverTag;                                   		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIComp_DrawImage::SetStyleResolverTag(struct FName NewResolverTag)
{
	static UFieldFunc* pFnSetStyleResolverTag = NULL;
	if(!pFnSetStyleResolverTag)
		pFnSetStyleResolverTag = UObject::FindFunction("Function Engine.UIComp_DrawImage.SetStyleResolverTag");

	Engine_SetStyleResolverTag_Parms SetStyleResolverTag_Parms;
	memcpy(&SetStyleResolverTag_Parms.NewResolverTag,&NewResolverTag,0x8);
	pFnSetStyleResolverTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStyleResolverTag,NULL,&SetStyleResolverTag_Parms,NULL);
	pFnSetStyleResolverTag->FunctionFlags |= 0x400;
	return SetStyleResolverTag_Parms.ReturnValue;
}

struct Engine_GetStyleResolverTag_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName UUIComp_DrawImage::GetStyleResolverTag()
{
	static UFieldFunc* pFnGetStyleResolverTag = NULL;
	if(!pFnGetStyleResolverTag)
		pFnGetStyleResolverTag = UObject::FindFunction("Function Engine.UIComp_DrawImage.GetStyleResolverTag");

	Engine_GetStyleResolverTag_Parms GetStyleResolverTag_Parms;
	pFnGetStyleResolverTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleResolverTag,NULL,&GetStyleResolverTag_Parms,NULL);
	pFnGetStyleResolverTag->FunctionFlags |= 0x400;
	return GetStyleResolverTag_Parms.ReturnValue;
}

struct Engine_GetImage_Parms
{
	class USurface*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class USurface* UUIComp_DrawImage::GetImage()
{
	static UFieldFunc* pFnGetImage = NULL;
	if(!pFnGetImage)
		pFnGetImage = UObject::FindFunction("Function Engine.UIComp_DrawImage.GetImage");

	Engine_GetImage_Parms GetImage_Parms;
	pFnGetImage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetImage,NULL,&GetImage_Parms,NULL);
	pFnGetImage->FunctionFlags |= 0x400;
	return GetImage_Parms.ReturnValue;
}

struct Engine_DisableCustomAttributes_Parms
{
};

void UUIComp_DrawString::DisableCustomAttributes()
{
	static UFieldFunc* pFnDisableCustomAttributes = NULL;
	if(!pFnDisableCustomAttributes)
		pFnDisableCustomAttributes = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomAttributes");

	Engine_DisableCustomAttributes_Parms DisableCustomAttributes_Parms;
	pFnDisableCustomAttributes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomAttributes,NULL,&DisableCustomAttributes_Parms,NULL);
	pFnDisableCustomAttributes->FunctionFlags |= 0x400;
}

struct Engine_EnableAutoSizing_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned long                                      bShouldEnable : 1;                                		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bNeedsReformatting : 1;                           		// 0x000008 (0x0004) [0x00000001] 
};

void UUIComp_DrawString::EnableAutoSizing(unsigned char Orientation,bool bShouldEnable)
{
	static UFieldFunc* pFnEnableAutoSizing = NULL;
	if(!pFnEnableAutoSizing)
		pFnEnableAutoSizing = UObject::FindFunction("Function Engine.UIComp_DrawString.EnableAutoSizing");

	Engine_EnableAutoSizing_Parms EnableAutoSizing_Parms;
	EnableAutoSizing_Parms.Orientation = Orientation;
	EnableAutoSizing_Parms.bShouldEnable = bShouldEnable;
	ProcessEvent(pFnEnableAutoSizing,NULL,&EnableAutoSizing_Parms,NULL);
}

struct Engine_DisableCustomScale_Parms
{
};

void UUIComp_DrawString::DisableCustomScale()
{
	static UFieldFunc* pFnDisableCustomScale = NULL;
	if(!pFnDisableCustomScale)
		pFnDisableCustomScale = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomScale");

	Engine_DisableCustomScale_Parms DisableCustomScale_Parms;
	pFnDisableCustomScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomScale,NULL,&DisableCustomScale_Parms,NULL);
	pFnDisableCustomScale->FunctionFlags |= 0x400;
}

struct Engine_RefreshValue_Parms
{
};

void UUIComp_DrawString::RefreshValue()
{
	static UFieldFunc* pFnRefreshValue = NULL;
	if(!pFnRefreshValue)
		pFnRefreshValue = UObject::FindFunction("Function Engine.UIComp_DrawString.RefreshValue");

	Engine_RefreshValue_Parms RefreshValue_Parms;
	pFnRefreshValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshValue,NULL,&RefreshValue_Parms,NULL);
	pFnRefreshValue->FunctionFlags |= 0x400;
}

struct Engine_EnableSubregion_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned long                                      bShouldEnable : 1;                                		// 0x000004 (0x0004) [0x00000001] 
};

void UUIComp_DrawString::EnableSubregion(unsigned char Orientation,bool bShouldEnable)
{
	static UFieldFunc* pFnEnableSubregion = NULL;
	if(!pFnEnableSubregion)
		pFnEnableSubregion = UObject::FindFunction("Function Engine.UIComp_DrawString.EnableSubregion");

	Engine_EnableSubregion_Parms EnableSubregion_Parms;
	EnableSubregion_Parms.Orientation = Orientation;
	EnableSubregion_Parms.bShouldEnable = bShouldEnable;
	pFnEnableSubregion->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableSubregion,NULL,&EnableSubregion_Parms,NULL);
	pFnEnableSubregion->FunctionFlags |= 0x400;
}

struct Engine_SetColor_Parms
{
	struct FLinearColor                                NewColor;                                         		// 0x000000 (0x0010)              
};

void UUIComp_DrawString::SetColor(struct FLinearColor NewColor)
{
	static UFieldFunc* pFnSetColor = NULL;
	if(!pFnSetColor)
		pFnSetColor = UObject::FindFunction("Function Engine.UIComp_DrawString.SetColor");

	Engine_SetColor_Parms SetColor_Parms;
	memcpy(&SetColor_Parms.NewColor,&NewColor,0x10);
	pFnSetColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetColor,NULL,&SetColor_Parms,NULL);
	pFnSetColor->FunctionFlags |= 0x400;
}

struct Engine_SetWrapMode_Parms
{
	unsigned char                                      NewClipMode;                                      		// 0x000000 (0x0001)              
};

void UUIComp_DrawString::SetWrapMode(unsigned char NewClipMode)
{
	static UFieldFunc* pFnSetWrapMode = NULL;
	if(!pFnSetWrapMode)
		pFnSetWrapMode = UObject::FindFunction("Function Engine.UIComp_DrawString.SetWrapMode");

	Engine_SetWrapMode_Parms SetWrapMode_Parms;
	SetWrapMode_Parms.NewClipMode = NewClipMode;
	pFnSetWrapMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetWrapMode,NULL,&SetWrapMode_Parms,NULL);
	pFnSetWrapMode->FunctionFlags |= 0x400;
}

struct Engine_IsAutoSizeEnabled_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComp_DrawString::IsAutoSizeEnabled(unsigned char Orientation)
{
	static UFieldFunc* pFnIsAutoSizeEnabled = NULL;
	if(!pFnIsAutoSizeEnabled)
		pFnIsAutoSizeEnabled = UObject::FindFunction("Function Engine.UIComp_DrawString.IsAutoSizeEnabled");

	Engine_IsAutoSizeEnabled_Parms IsAutoSizeEnabled_Parms;
	IsAutoSizeEnabled_Parms.Orientation = Orientation;
	ProcessEvent(pFnIsAutoSizeEnabled,NULL,&IsAutoSizeEnabled_Parms,NULL);
	return IsAutoSizeEnabled_Parms.ReturnValue;
}

struct Engine_SetAutoSizePadding_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              NearValue;                                        		// 0x000004 (0x0004)              
	float                                              FarValue;                                         		// 0x000008 (0x0004)              
	unsigned char                                      NearScaleType;                                    		// 0x00000C (0x0001)              
	unsigned char                                      FarScaleType;                                     		// 0x00000D (0x0001)              
	//unsigned long                                      bNeedsReformatting : 1;                           		// 0x000010 (0x0004) [0x00000001] 
};

void UUIComp_DrawString::SetAutoSizePadding(unsigned char Orientation,float NearValue,float FarValue,unsigned char NearScaleType,unsigned char FarScaleType)
{
	static UFieldFunc* pFnSetAutoSizePadding = NULL;
	if(!pFnSetAutoSizePadding)
		pFnSetAutoSizePadding = UObject::FindFunction("Function Engine.UIComp_DrawString.SetAutoSizePadding");

	Engine_SetAutoSizePadding_Parms SetAutoSizePadding_Parms;
	SetAutoSizePadding_Parms.Orientation = Orientation;
	SetAutoSizePadding_Parms.NearValue = NearValue;
	SetAutoSizePadding_Parms.FarValue = FarValue;
	SetAutoSizePadding_Parms.NearScaleType = NearScaleType;
	SetAutoSizePadding_Parms.FarScaleType = FarScaleType;
	ProcessEvent(pFnSetAutoSizePadding,NULL,&SetAutoSizePadding_Parms,NULL);
}

struct Engine_GetValue_Parms
{
	unsigned long                                      bReturnProcessedText : 1;                         		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIComp_DrawString::GetValue(bool bReturnProcessedText)
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UIComp_DrawString.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	GetValue_Parms.bReturnProcessedText = bReturnProcessedText;
	pFnGetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	pFnGetValue->FunctionFlags |= 0x400;
	return GetValue_Parms.ReturnValue;
}

struct Engine_SetAutoScaling_Parms
{
	unsigned char                                      NewAutoScaleMode;                                 		// 0x000000 (0x0001)              
	float                                              NewMinScaleValue;                                 		// 0x000004 (0x0004)              
};

void UUIComp_DrawString::SetAutoScaling(unsigned char NewAutoScaleMode,float NewMinScaleValue)
{
	static UFieldFunc* pFnSetAutoScaling = NULL;
	if(!pFnSetAutoScaling)
		pFnSetAutoScaling = UObject::FindFunction("Function Engine.UIComp_DrawString.SetAutoScaling");

	Engine_SetAutoScaling_Parms SetAutoScaling_Parms;
	SetAutoScaling_Parms.NewAutoScaleMode = NewAutoScaleMode;
	SetAutoScaling_Parms.NewMinScaleValue = NewMinScaleValue;
	pFnSetAutoScaling->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAutoScaling,NULL,&SetAutoScaling_Parms,NULL);
	pFnSetAutoScaling->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomPadding_Parms
{
};

void UUIComp_DrawString::DisableCustomPadding()
{
	static UFieldFunc* pFnDisableCustomPadding = NULL;
	if(!pFnDisableCustomPadding)
		pFnDisableCustomPadding = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomPadding");

	Engine_DisableCustomPadding_Parms DisableCustomPadding_Parms;
	pFnDisableCustomPadding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomPadding,NULL,&DisableCustomPadding_Parms,NULL);
	pFnDisableCustomPadding->FunctionFlags |= 0x400;
}

struct Engine_SetScale_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              NewScale;                                         		// 0x000004 (0x0004)              
};

void UUIComp_DrawString::SetScale(unsigned char Orientation,float NewScale)
{
	static UFieldFunc* pFnSetScale = NULL;
	if(!pFnSetScale)
		pFnSetScale = UObject::FindFunction("Function Engine.UIComp_DrawString.SetScale");

	Engine_SetScale_Parms SetScale_Parms;
	SetScale_Parms.Orientation = Orientation;
	SetScale_Parms.NewScale = NewScale;
	pFnSetScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetScale,NULL,&SetScale_Parms,NULL);
	pFnSetScale->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomColor_Parms
{
};

void UUIComp_DrawString::DisableCustomColor()
{
	static UFieldFunc* pFnDisableCustomColor = NULL;
	if(!pFnDisableCustomColor)
		pFnDisableCustomColor = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomColor");

	Engine_DisableCustomColor_Parms DisableCustomColor_Parms;
	pFnDisableCustomColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomColor,NULL,&DisableCustomColor_Parms,NULL);
	pFnDisableCustomColor->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomOpacity_Parms
{
};

void UUIComp_DrawString::DisableCustomOpacity()
{
	static UFieldFunc* pFnDisableCustomOpacity = NULL;
	if(!pFnDisableCustomOpacity)
		pFnDisableCustomOpacity = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomOpacity");

	Engine_DisableCustomOpacity_Parms DisableCustomOpacity_Parms;
	pFnDisableCustomOpacity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomOpacity,NULL,&DisableCustomOpacity_Parms,NULL);
	pFnDisableCustomOpacity->FunctionFlags |= 0x400;
}

struct Engine_SetSpacingAdjust_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              NewSpacingAdjust;                                 		// 0x000004 (0x0004)              
};

void UUIComp_DrawString::SetSpacingAdjust(unsigned char Orientation,float NewSpacingAdjust)
{
	static UFieldFunc* pFnSetSpacingAdjust = NULL;
	if(!pFnSetSpacingAdjust)
		pFnSetSpacingAdjust = UObject::FindFunction("Function Engine.UIComp_DrawString.SetSpacingAdjust");

	Engine_SetSpacingAdjust_Parms SetSpacingAdjust_Parms;
	SetSpacingAdjust_Parms.Orientation = Orientation;
	SetSpacingAdjust_Parms.NewSpacingAdjust = NewSpacingAdjust;
	pFnSetSpacingAdjust->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSpacingAdjust,NULL,&SetSpacingAdjust_Parms,NULL);
	pFnSetSpacingAdjust->FunctionFlags |= 0x400;
}

struct Engine_SetAlignment_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned char                                      NewAlignment;                                     		// 0x000001 (0x0001)              
};

void UUIComp_DrawString::SetAlignment(unsigned char Orientation,unsigned char NewAlignment)
{
	static UFieldFunc* pFnSetAlignment = NULL;
	if(!pFnSetAlignment)
		pFnSetAlignment = UObject::FindFunction("Function Engine.UIComp_DrawString.SetAlignment");

	Engine_SetAlignment_Parms SetAlignment_Parms;
	SetAlignment_Parms.Orientation = Orientation;
	SetAlignment_Parms.NewAlignment = NewAlignment;
	pFnSetAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAlignment,NULL,&SetAlignment_Parms,NULL);
	pFnSetAlignment->FunctionFlags |= 0x400;
}

struct Engine_NotifyResolveStyle_Parms
{
	class UUISkin*                                     ActiveSkin;                                       		// 0x000000 (0x0004)              
	unsigned long                                      bClearExistingValue : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	class UUIState*                                    CurrentMenuState;                                 		// 0x000008 (0x0004)              
	struct FName                                       StylePropertyName;                                		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIComp_DrawString::NotifyResolveStyle(class UUISkin* ActiveSkin,bool bClearExistingValue,class UUIState* CurrentMenuState,struct FName StylePropertyName)
{
	static UFieldFunc* pFnNotifyResolveStyle = NULL;
	if(!pFnNotifyResolveStyle)
		pFnNotifyResolveStyle = UObject::FindFunction("Function Engine.UIComp_DrawString.NotifyResolveStyle");

	Engine_NotifyResolveStyle_Parms NotifyResolveStyle_Parms;
	NotifyResolveStyle_Parms.ActiveSkin = ActiveSkin;
	NotifyResolveStyle_Parms.bClearExistingValue = bClearExistingValue;
	NotifyResolveStyle_Parms.CurrentMenuState = CurrentMenuState;
	memcpy(&NotifyResolveStyle_Parms.StylePropertyName,&StylePropertyName,0x8);
	pFnNotifyResolveStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyResolveStyle,NULL,&NotifyResolveStyle_Parms,NULL);
	pFnNotifyResolveStyle->FunctionFlags |= 0x400;
	return NotifyResolveStyle_Parms.ReturnValue;
}

struct Engine_SetSubregionSize_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              NewValue;                                         		// 0x000004 (0x0004)              
	unsigned char                                      EvalType;                                         		// 0x000008 (0x0001)              
};

void UUIComp_DrawString::SetSubregionSize(unsigned char Orientation,float NewValue,unsigned char EvalType)
{
	static UFieldFunc* pFnSetSubregionSize = NULL;
	if(!pFnSetSubregionSize)
		pFnSetSubregionSize = UObject::FindFunction("Function Engine.UIComp_DrawString.SetSubregionSize");

	Engine_SetSubregionSize_Parms SetSubregionSize_Parms;
	SetSubregionSize_Parms.Orientation = Orientation;
	SetSubregionSize_Parms.NewValue = NewValue;
	SetSubregionSize_Parms.EvalType = EvalType;
	pFnSetSubregionSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSubregionSize,NULL,&SetSubregionSize_Parms,NULL);
	pFnSetSubregionSize->FunctionFlags |= 0x400;
}

struct Engine_SetSubregionOffset_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              NewValue;                                         		// 0x000004 (0x0004)              
	unsigned char                                      EvalType;                                         		// 0x000008 (0x0001)              
};

void UUIComp_DrawString::SetSubregionOffset(unsigned char Orientation,float NewValue,unsigned char EvalType)
{
	static UFieldFunc* pFnSetSubregionOffset = NULL;
	if(!pFnSetSubregionOffset)
		pFnSetSubregionOffset = UObject::FindFunction("Function Engine.UIComp_DrawString.SetSubregionOffset");

	Engine_SetSubregionOffset_Parms SetSubregionOffset_Parms;
	SetSubregionOffset_Parms.Orientation = Orientation;
	SetSubregionOffset_Parms.NewValue = NewValue;
	SetSubregionOffset_Parms.EvalType = EvalType;
	pFnSetSubregionOffset->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSubregionOffset,NULL,&SetSubregionOffset_Parms,NULL);
	pFnSetSubregionOffset->FunctionFlags |= 0x400;
}

struct Engine_GetSubregionOffset_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned char                                      OutputType;                                       		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIComp_DrawString::GetSubregionOffset(unsigned char Orientation,unsigned char OutputType)
{
	static UFieldFunc* pFnGetSubregionOffset = NULL;
	if(!pFnGetSubregionOffset)
		pFnGetSubregionOffset = UObject::FindFunction("Function Engine.UIComp_DrawString.GetSubregionOffset");

	Engine_GetSubregionOffset_Parms GetSubregionOffset_Parms;
	GetSubregionOffset_Parms.Orientation = Orientation;
	GetSubregionOffset_Parms.OutputType = OutputType;
	pFnGetSubregionOffset->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSubregionOffset,NULL,&GetSubregionOffset_Parms,NULL);
	pFnGetSubregionOffset->FunctionFlags |= 0x400;
	return GetSubregionOffset_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
};

void UUIComp_DrawString::SetValue(struct FString NewText)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UIComp_DrawString.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.NewText,&NewText,0xC);
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
}

struct Engine_SetAutoSizeExtent_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              MinValue;                                         		// 0x000004 (0x0004)              
	float                                              MaxValue;                                         		// 0x000008 (0x0004)              
	unsigned char                                      MinScaleType;                                     		// 0x00000C (0x0001)              
	unsigned char                                      MaxScaleType;                                     		// 0x00000D (0x0001)              
};

void UUIComp_DrawString::SetAutoSizeExtent(unsigned char Orientation,float MinValue,float MaxValue,unsigned char MinScaleType,unsigned char MaxScaleType)
{
	static UFieldFunc* pFnSetAutoSizeExtent = NULL;
	if(!pFnSetAutoSizeExtent)
		pFnSetAutoSizeExtent = UObject::FindFunction("Function Engine.UIComp_DrawString.SetAutoSizeExtent");

	Engine_SetAutoSizeExtent_Parms SetAutoSizeExtent_Parms;
	SetAutoSizeExtent_Parms.Orientation = Orientation;
	SetAutoSizeExtent_Parms.MinValue = MinValue;
	SetAutoSizeExtent_Parms.MaxValue = MaxValue;
	SetAutoSizeExtent_Parms.MinScaleType = MinScaleType;
	SetAutoSizeExtent_Parms.MaxScaleType = MaxScaleType;
	pFnSetAutoSizeExtent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAutoSizeExtent,NULL,&SetAutoSizeExtent_Parms,NULL);
	pFnSetAutoSizeExtent->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomAlignment_Parms
{
};

void UUIComp_DrawString::DisableCustomAlignment()
{
	static UFieldFunc* pFnDisableCustomAlignment = NULL;
	if(!pFnDisableCustomAlignment)
		pFnDisableCustomAlignment = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomAlignment");

	Engine_DisableCustomAlignment_Parms DisableCustomAlignment_Parms;
	pFnDisableCustomAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomAlignment,NULL,&DisableCustomAlignment_Parms,NULL);
	pFnDisableCustomAlignment->FunctionFlags |= 0x400;
}

struct Engine_SetStyleResolverTag_Parms
{
	struct FName                                       NewResolverTag;                                   		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIComp_DrawString::SetStyleResolverTag(struct FName NewResolverTag)
{
	static UFieldFunc* pFnSetStyleResolverTag = NULL;
	if(!pFnSetStyleResolverTag)
		pFnSetStyleResolverTag = UObject::FindFunction("Function Engine.UIComp_DrawString.SetStyleResolverTag");

	Engine_SetStyleResolverTag_Parms SetStyleResolverTag_Parms;
	memcpy(&SetStyleResolverTag_Parms.NewResolverTag,&NewResolverTag,0x8);
	pFnSetStyleResolverTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStyleResolverTag,NULL,&SetStyleResolverTag_Parms,NULL);
	pFnSetStyleResolverTag->FunctionFlags |= 0x400;
	return SetStyleResolverTag_Parms.ReturnValue;
}

struct Engine_SetAttributes_Parms
{
	struct FUITextAttributes                           NewAttributes;                                    		// 0x000000 (0x0004)              
};

void UUIComp_DrawString::SetAttributes(struct FUITextAttributes NewAttributes)
{
	static UFieldFunc* pFnSetAttributes = NULL;
	if(!pFnSetAttributes)
		pFnSetAttributes = UObject::FindFunction("Function Engine.UIComp_DrawString.SetAttributes");

	Engine_SetAttributes_Parms SetAttributes_Parms;
	memcpy(&SetAttributes_Parms.NewAttributes,&NewAttributes,0x4);
	pFnSetAttributes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetAttributes,NULL,&SetAttributes_Parms,NULL);
	pFnSetAttributes->FunctionFlags |= 0x400;
}

struct Engine_GetAppliedStringStyle_Parms
{
	class UUIState*                                    DesiredMenuState;                                 		// 0x000000 (0x0004)              
	class UUIStyle_Combo*                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIStyle_Combo* UUIComp_DrawString::GetAppliedStringStyle(class UUIState* DesiredMenuState)
{
	static UFieldFunc* pFnGetAppliedStringStyle = NULL;
	if(!pFnGetAppliedStringStyle)
		pFnGetAppliedStringStyle = UObject::FindFunction("Function Engine.UIComp_DrawString.GetAppliedStringStyle");

	Engine_GetAppliedStringStyle_Parms GetAppliedStringStyle_Parms;
	GetAppliedStringStyle_Parms.DesiredMenuState = DesiredMenuState;
	pFnGetAppliedStringStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAppliedStringStyle,NULL,&GetAppliedStringStyle_Parms,NULL);
	pFnGetAppliedStringStyle->FunctionFlags |= 0x400;
	return GetAppliedStringStyle_Parms.ReturnValue;
}

struct Engine_DisableCustomFont_Parms
{
};

void UUIComp_DrawString::DisableCustomFont()
{
	static UFieldFunc* pFnDisableCustomFont = NULL;
	if(!pFnDisableCustomFont)
		pFnDisableCustomFont = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomFont");

	Engine_DisableCustomFont_Parms DisableCustomFont_Parms;
	pFnDisableCustomFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomFont,NULL,&DisableCustomFont_Parms,NULL);
	pFnDisableCustomFont->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomAutoScaling_Parms
{
};

void UUIComp_DrawString::DisableCustomAutoScaling()
{
	static UFieldFunc* pFnDisableCustomAutoScaling = NULL;
	if(!pFnDisableCustomAutoScaling)
		pFnDisableCustomAutoScaling = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomAutoScaling");

	Engine_DisableCustomAutoScaling_Parms DisableCustomAutoScaling_Parms;
	pFnDisableCustomAutoScaling->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomAutoScaling,NULL,&DisableCustomAutoScaling_Parms,NULL);
	pFnDisableCustomAutoScaling->FunctionFlags |= 0x400;
}

struct Engine_GetSubregionAlignment_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UUIComp_DrawString::GetSubregionAlignment(unsigned char Orientation)
{
	static UFieldFunc* pFnGetSubregionAlignment = NULL;
	if(!pFnGetSubregionAlignment)
		pFnGetSubregionAlignment = UObject::FindFunction("Function Engine.UIComp_DrawString.GetSubregionAlignment");

	Engine_GetSubregionAlignment_Parms GetSubregionAlignment_Parms;
	GetSubregionAlignment_Parms.Orientation = Orientation;
	pFnGetSubregionAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSubregionAlignment,NULL,&GetSubregionAlignment_Parms,NULL);
	pFnGetSubregionAlignment->FunctionFlags |= 0x400;
	return GetSubregionAlignment_Parms.ReturnValue;
}

struct Engine_DisableCustomSpacingAdjust_Parms
{
};

void UUIComp_DrawString::DisableCustomSpacingAdjust()
{
	static UFieldFunc* pFnDisableCustomSpacingAdjust = NULL;
	if(!pFnDisableCustomSpacingAdjust)
		pFnDisableCustomSpacingAdjust = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomSpacingAdjust");

	Engine_DisableCustomSpacingAdjust_Parms DisableCustomSpacingAdjust_Parms;
	pFnDisableCustomSpacingAdjust->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomSpacingAdjust,NULL,&DisableCustomSpacingAdjust_Parms,NULL);
	pFnDisableCustomSpacingAdjust->FunctionFlags |= 0x400;
}

struct Engine_SetOpacity_Parms
{
	float                                              NewOpacity;                                       		// 0x000000 (0x0004)              
};

void UUIComp_DrawString::SetOpacity(float NewOpacity)
{
	static UFieldFunc* pFnSetOpacity = NULL;
	if(!pFnSetOpacity)
		pFnSetOpacity = UObject::FindFunction("Function Engine.UIComp_DrawString.SetOpacity");

	Engine_SetOpacity_Parms SetOpacity_Parms;
	SetOpacity_Parms.NewOpacity = NewOpacity;
	pFnSetOpacity->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetOpacity,NULL,&SetOpacity_Parms,NULL);
	pFnSetOpacity->FunctionFlags |= 0x400;
}

struct Engine_SetClipAlignment_Parms
{
	unsigned char                                      NewClipAlignment;                                 		// 0x000000 (0x0001)              
};

void UUIComp_DrawString::SetClipAlignment(unsigned char NewClipAlignment)
{
	static UFieldFunc* pFnSetClipAlignment = NULL;
	if(!pFnSetClipAlignment)
		pFnSetClipAlignment = UObject::FindFunction("Function Engine.UIComp_DrawString.SetClipAlignment");

	Engine_SetClipAlignment_Parms SetClipAlignment_Parms;
	SetClipAlignment_Parms.NewClipAlignment = NewClipAlignment;
	pFnSetClipAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClipAlignment,NULL,&SetClipAlignment_Parms,NULL);
	pFnSetClipAlignment->FunctionFlags |= 0x400;
}

struct Engine_GetStyleResolverTag_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName UUIComp_DrawString::GetStyleResolverTag()
{
	static UFieldFunc* pFnGetStyleResolverTag = NULL;
	if(!pFnGetStyleResolverTag)
		pFnGetStyleResolverTag = UObject::FindFunction("Function Engine.UIComp_DrawString.GetStyleResolverTag");

	Engine_GetStyleResolverTag_Parms GetStyleResolverTag_Parms;
	pFnGetStyleResolverTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleResolverTag,NULL,&GetStyleResolverTag_Parms,NULL);
	pFnGetStyleResolverTag->FunctionFlags |= 0x400;
	return GetStyleResolverTag_Parms.ReturnValue;
}

struct Engine_SetFont_Parms
{
	class UFont*                                       NewFont;                                          		// 0x000000 (0x0004)              
};

void UUIComp_DrawString::SetFont(class UFont* NewFont)
{
	static UFieldFunc* pFnSetFont = NULL;
	if(!pFnSetFont)
		pFnSetFont = UObject::FindFunction("Function Engine.UIComp_DrawString.SetFont");

	Engine_SetFont_Parms SetFont_Parms;
	SetFont_Parms.NewFont = NewFont;
	pFnSetFont->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetFont,NULL,&SetFont_Parms,NULL);
	pFnSetFont->FunctionFlags |= 0x400;
}

struct Engine_SetPadding_Parms
{
	float                                              HorizontalPadding;                                		// 0x000000 (0x0004)              
	float                                              VerticalPadding;                                  		// 0x000004 (0x0004)              
};

void UUIComp_DrawString::SetPadding(float HorizontalPadding,float VerticalPadding)
{
	static UFieldFunc* pFnSetPadding = NULL;
	if(!pFnSetPadding)
		pFnSetPadding = UObject::FindFunction("Function Engine.UIComp_DrawString.SetPadding");

	Engine_SetPadding_Parms SetPadding_Parms;
	SetPadding_Parms.HorizontalPadding = HorizontalPadding;
	SetPadding_Parms.VerticalPadding = VerticalPadding;
	pFnSetPadding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPadding,NULL,&SetPadding_Parms,NULL);
	pFnSetPadding->FunctionFlags |= 0x400;
}

struct Engine_IsSubregionEnabled_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComp_DrawString::IsSubregionEnabled(unsigned char Orientation)
{
	static UFieldFunc* pFnIsSubregionEnabled = NULL;
	if(!pFnIsSubregionEnabled)
		pFnIsSubregionEnabled = UObject::FindFunction("Function Engine.UIComp_DrawString.IsSubregionEnabled");

	Engine_IsSubregionEnabled_Parms IsSubregionEnabled_Parms;
	IsSubregionEnabled_Parms.Orientation = Orientation;
	pFnIsSubregionEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsSubregionEnabled,NULL,&IsSubregionEnabled_Parms,NULL);
	pFnIsSubregionEnabled->FunctionFlags |= 0x400;
	return IsSubregionEnabled_Parms.ReturnValue;
}

struct Engine_DisableCustomClipMode_Parms
{
};

void UUIComp_DrawString::DisableCustomClipMode()
{
	static UFieldFunc* pFnDisableCustomClipMode = NULL;
	if(!pFnDisableCustomClipMode)
		pFnDisableCustomClipMode = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomClipMode");

	Engine_DisableCustomClipMode_Parms DisableCustomClipMode_Parms;
	pFnDisableCustomClipMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomClipMode,NULL,&DisableCustomClipMode_Parms,NULL);
	pFnDisableCustomClipMode->FunctionFlags |= 0x400;
}

struct Engine_SetSubregionAlignment_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned char                                      NewValue;                                         		// 0x000001 (0x0001)              
};

void UUIComp_DrawString::SetSubregionAlignment(unsigned char Orientation,unsigned char NewValue)
{
	static UFieldFunc* pFnSetSubregionAlignment = NULL;
	if(!pFnSetSubregionAlignment)
		pFnSetSubregionAlignment = UObject::FindFunction("Function Engine.UIComp_DrawString.SetSubregionAlignment");

	Engine_SetSubregionAlignment_Parms SetSubregionAlignment_Parms;
	SetSubregionAlignment_Parms.Orientation = Orientation;
	SetSubregionAlignment_Parms.NewValue = NewValue;
	pFnSetSubregionAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSubregionAlignment,NULL,&SetSubregionAlignment_Parms,NULL);
	pFnSetSubregionAlignment->FunctionFlags |= 0x400;
}

struct Engine_DisableCustomClipAlignment_Parms
{
};

void UUIComp_DrawString::DisableCustomClipAlignment()
{
	static UFieldFunc* pFnDisableCustomClipAlignment = NULL;
	if(!pFnDisableCustomClipAlignment)
		pFnDisableCustomClipAlignment = UObject::FindFunction("Function Engine.UIComp_DrawString.DisableCustomClipAlignment");

	Engine_DisableCustomClipAlignment_Parms DisableCustomClipAlignment_Parms;
	pFnDisableCustomClipAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisableCustomClipAlignment,NULL,&DisableCustomClipAlignment_Parms,NULL);
	pFnDisableCustomClipAlignment->FunctionFlags |= 0x400;
}

struct Engine_GetFinalStringStyle_Parms
{
	struct FUICombinedStyleData                        FinalStyleData;                                   		// 0x000000 (0x0090)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000090 (0x0004) [0x00000001] 
};

bool UUIComp_DrawString::GetFinalStringStyle(struct FUICombinedStyleData* FinalStyleData)
{
	static UFieldFunc* pFnGetFinalStringStyle = NULL;
	if(!pFnGetFinalStringStyle)
		pFnGetFinalStringStyle = UObject::FindFunction("Function Engine.UIComp_DrawString.GetFinalStringStyle");

	Engine_GetFinalStringStyle_Parms GetFinalStringStyle_Parms;
	pFnGetFinalStringStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFinalStringStyle,NULL,&GetFinalStringStyle_Parms,NULL);
	pFnGetFinalStringStyle->FunctionFlags |= 0x400;
	if(FinalStyleData)
		memcpy(FinalStyleData,&GetFinalStringStyle_Parms.FinalStyleData,0x90);
	return GetFinalStringStyle_Parms.ReturnValue;
}

struct Engine_GetWrapMode_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UUIComp_DrawString::GetWrapMode()
{
	static UFieldFunc* pFnGetWrapMode = NULL;
	if(!pFnGetWrapMode)
		pFnGetWrapMode = UObject::FindFunction("Function Engine.UIComp_DrawString.GetWrapMode");

	Engine_GetWrapMode_Parms GetWrapMode_Parms;
	pFnGetWrapMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetWrapMode,NULL,&GetWrapMode_Parms,NULL);
	pFnGetWrapMode->FunctionFlags |= 0x400;
	return GetWrapMode_Parms.ReturnValue;
}

struct Engine_GetSubregionSize_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned char                                      OutputType;                                       		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIComp_DrawString::GetSubregionSize(unsigned char Orientation,unsigned char OutputType)
{
	static UFieldFunc* pFnGetSubregionSize = NULL;
	if(!pFnGetSubregionSize)
		pFnGetSubregionSize = UObject::FindFunction("Function Engine.UIComp_DrawString.GetSubregionSize");

	Engine_GetSubregionSize_Parms GetSubregionSize_Parms;
	GetSubregionSize_Parms.Orientation = Orientation;
	GetSubregionSize_Parms.OutputType = OutputType;
	pFnGetSubregionSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSubregionSize,NULL,&GetSubregionSize_Parms,NULL);
	pFnGetSubregionSize->FunctionFlags |= 0x400;
	return GetSubregionSize_Parms.ReturnValue;
}

struct Engine_CalculateCaretPositionFromCursorLocation_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UUIEditBox::CalculateCaretPositionFromCursorLocation(int PlayerIndex)
{
	static UFieldFunc* pFnCalculateCaretPositionFromCursorLocation = NULL;
	if(!pFnCalculateCaretPositionFromCursorLocation)
		pFnCalculateCaretPositionFromCursorLocation = UObject::FindFunction("Function Engine.UIEditBox.CalculateCaretPositionFromCursorLocation");

	Engine_CalculateCaretPositionFromCursorLocation_Parms CalculateCaretPositionFromCursorLocation_Parms;
	CalculateCaretPositionFromCursorLocation_Parms.PlayerIndex = PlayerIndex;
	pFnCalculateCaretPositionFromCursorLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalculateCaretPositionFromCursorLocation,NULL,&CalculateCaretPositionFromCursorLocation_Parms,NULL);
	pFnCalculateCaretPositionFromCursorLocation->FunctionFlags |= 0x400;
	return CalculateCaretPositionFromCursorLocation_Parms.ReturnValue;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIEditBox::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIEditBox.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_GetValue_Parms
{
	unsigned long                                      bReturnUserText : 1;                              		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIEditBox::GetValue(bool bReturnUserText)
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UIEditBox.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	GetValue_Parms.bReturnUserText = bReturnUserText;
	pFnGetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	pFnGetValue->FunctionFlags |= 0x400;
	return GetValue_Parms.ReturnValue;
}

struct Engine_SetBackgroundImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIEditBox::SetBackgroundImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetBackgroundImage = NULL;
	if(!pFnSetBackgroundImage)
		pFnSetBackgroundImage = UObject::FindFunction("Function Engine.UIEditBox.SetBackgroundImage");

	Engine_SetBackgroundImage_Parms SetBackgroundImage_Parms;
	SetBackgroundImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetBackgroundImage,NULL,&SetBackgroundImage_Parms,NULL);
}

struct Engine_OnScrollBarSpaceClicked_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionPerc;                                     		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
};

void UUIEditBox::OnScrollBarSpaceClicked(class UUIScrollbar* Sender,float PositionPerc,int PlayerIndex)
{
	static UFieldFunc* pFnOnScrollBarSpaceClicked = NULL;
	if(!pFnOnScrollBarSpaceClicked)
		pFnOnScrollBarSpaceClicked = UObject::FindFunction("Function Engine.UIEditBox.OnScrollBarSpaceClicked");

	Engine_OnScrollBarSpaceClicked_Parms OnScrollBarSpaceClicked_Parms;
	OnScrollBarSpaceClicked_Parms.Sender = Sender;
	OnScrollBarSpaceClicked_Parms.PositionPerc = PositionPerc;
	OnScrollBarSpaceClicked_Parms.PlayerIndex = PlayerIndex;
	pFnOnScrollBarSpaceClicked->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnScrollBarSpaceClicked,NULL,&OnScrollBarSpaceClicked_Parms,NULL);
	pFnOnScrollBarSpaceClicked->FunctionFlags |= 0x400;
}

struct Engine_SetReadOnly_Parms
{
	unsigned long                                      bShouldBeReadOnly : 1;                            		// 0x000000 (0x0004) [0x00000001] 
};

void UUIEditBox::SetReadOnly(bool bShouldBeReadOnly)
{
	static UFieldFunc* pFnSetReadOnly = NULL;
	if(!pFnSetReadOnly)
		pFnSetReadOnly = UObject::FindFunction("Function Engine.UIEditBox.SetReadOnly");

	Engine_SetReadOnly_Parms SetReadOnly_Parms;
	SetReadOnly_Parms.bShouldBeReadOnly = bShouldBeReadOnly;
	ProcessEvent(pFnSetReadOnly,NULL,&SetReadOnly_Parms,NULL);
}

struct Engine_Initialized_Parms
{
};

void UUIEditBox::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UIEditBox.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIEditBox::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIEditBox.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIEditBox::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIEditBox.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_RefreshMaxCharacters_Parms
{
};

void UUIEditBox::RefreshMaxCharacters()
{
	static UFieldFunc* pFnRefreshMaxCharacters = NULL;
	if(!pFnRefreshMaxCharacters)
		pFnRefreshMaxCharacters = UObject::FindFunction("Function Engine.UIEditBox.RefreshMaxCharacters");

	Engine_RefreshMaxCharacters_Parms RefreshMaxCharacters_Parms;
	pFnRefreshMaxCharacters->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshMaxCharacters,NULL,&RefreshMaxCharacters_Parms,NULL);
	pFnRefreshMaxCharacters->FunctionFlags |= 0x400;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIEditBox::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIEditBox.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
	int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
	unsigned long                                      bSkipNotification : 1;                            		// 0x000010 (0x0004) [0x00000001] 
};

void UUIEditBox::SetValue(struct FString NewText,int PlayerIndex,bool bSkipNotification)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UIEditBox.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.NewText,&NewText,0xC);
	SetValue_Parms.PlayerIndex = PlayerIndex;
	SetValue_Parms.bSkipNotification = bSkipNotification;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
}

struct Engine_OnSubmitText_Parms
{
	class UUIEditBox*                                  Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIEditBox::OnSubmitText(class UUIEditBox* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnOnSubmitText = NULL;
	if(!pFnOnSubmitText)
		pFnOnSubmitText = UObject::FindFunction("Function Engine.UIEditBox.OnSubmitText");

	Engine_OnSubmitText_Parms OnSubmitText_Parms;
	OnSubmitText_Parms.Sender = Sender;
	OnSubmitText_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnSubmitText,NULL,&OnSubmitText_Parms,NULL);
	return OnSubmitText_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIEditBox::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIEditBox.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEditBox::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIEditBox.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEditBox::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIEditBox.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnScrollBarMoved_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionChange;                                   		// 0x000004 (0x0004)              
	unsigned long                                      bPositionMaxed : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIEditBox::OnScrollBarMoved(class UUIScrollbar* Sender,float PositionChange,bool bPositionMaxed)
{
	static UFieldFunc* pFnOnScrollBarMoved = NULL;
	if(!pFnOnScrollBarMoved)
		pFnOnScrollBarMoved = UObject::FindFunction("Function Engine.UIEditBox.OnScrollBarMoved");

	Engine_OnScrollBarMoved_Parms OnScrollBarMoved_Parms;
	OnScrollBarMoved_Parms.Sender = Sender;
	OnScrollBarMoved_Parms.PositionChange = PositionChange;
	OnScrollBarMoved_Parms.bPositionMaxed = bPositionMaxed;
	pFnOnScrollBarMoved->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnScrollBarMoved,NULL,&OnScrollBarMoved_Parms,NULL);
	pFnOnScrollBarMoved->FunctionFlags |= 0x400;
	return OnScrollBarMoved_Parms.ReturnValue;
}

struct Engine_IgnoreMarkup_Parms
{
	unsigned long                                      bShouldIgnoreMarkup : 1;                          		// 0x000000 (0x0004) [0x00000001] 
};

void UUIEditBox::IgnoreMarkup(bool bShouldIgnoreMarkup)
{
	static UFieldFunc* pFnIgnoreMarkup = NULL;
	if(!pFnIgnoreMarkup)
		pFnIgnoreMarkup = UObject::FindFunction("Function Engine.UIEditBox.IgnoreMarkup");

	Engine_IgnoreMarkup_Parms IgnoreMarkup_Parms;
	IgnoreMarkup_Parms.bShouldIgnoreMarkup = bShouldIgnoreMarkup;
	ProcessEvent(pFnIgnoreMarkup,NULL,&IgnoreMarkup_Parms,NULL);
}

struct Engine_OnSetLabelText_Parms
{
	class UUIAction_SetLabelText*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUIEditBox::OnSetLabelText(class UUIAction_SetLabelText* Action)
{
	static UFieldFunc* pFnOnSetLabelText = NULL;
	if(!pFnOnSetLabelText)
		pFnOnSetLabelText = UObject::FindFunction("Function Engine.UIEditBox.OnSetLabelText");

	Engine_OnSetLabelText_Parms OnSetLabelText_Parms;
	OnSetLabelText_Parms.Action = Action;
	ProcessEvent(pFnOnSetLabelText,NULL,&OnSetLabelText_Parms,NULL);
}

struct Engine_OnGetTextValue_Parms
{
	class UUIAction_GetTextValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUIEditBox::OnGetTextValue(class UUIAction_GetTextValue* Action)
{
	static UFieldFunc* pFnOnGetTextValue = NULL;
	if(!pFnOnGetTextValue)
		pFnOnGetTextValue = UObject::FindFunction("Function Engine.UIEditBox.OnGetTextValue");

	Engine_OnGetTextValue_Parms OnGetTextValue_Parms;
	OnGetTextValue_Parms.Action = Action;
	ProcessEvent(pFnOnGetTextValue,NULL,&OnGetTextValue_Parms,NULL);
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIEditBox::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIEditBox.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_IsReadOnly_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIEditBox::IsReadOnly()
{
	static UFieldFunc* pFnIsReadOnly = NULL;
	if(!pFnIsReadOnly)
		pFnIsReadOnly = UObject::FindFunction("Function Engine.UIEditBox.IsReadOnly");

	Engine_IsReadOnly_Parms IsReadOnly_Parms;
	ProcessEvent(pFnIsReadOnly,NULL,&IsReadOnly_Parms,NULL);
	return IsReadOnly_Parms.ReturnValue;
}

struct Engine_SetSelectionRange_Parms
{
	int                                                StartIndex;                                       		// 0x000000 (0x0004)              
	int                                                EndIndex;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIComp_DrawStringEditbox::SetSelectionRange(int StartIndex,int EndIndex)
{
	static UFieldFunc* pFnSetSelectionRange = NULL;
	if(!pFnSetSelectionRange)
		pFnSetSelectionRange = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.SetSelectionRange");

	Engine_SetSelectionRange_Parms SetSelectionRange_Parms;
	SetSelectionRange_Parms.StartIndex = StartIndex;
	SetSelectionRange_Parms.EndIndex = EndIndex;
	pFnSetSelectionRange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSelectionRange,NULL,&SetSelectionRange_Parms,NULL);
	pFnSetSelectionRange->FunctionFlags |= 0x400;
	return SetSelectionRange_Parms.ReturnValue;
}

struct Engine_SetUserText_Parms
{
	struct FString                                     NewValue;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIComp_DrawStringEditbox::SetUserText(struct FString NewValue)
{
	static UFieldFunc* pFnSetUserText = NULL;
	if(!pFnSetUserText)
		pFnSetUserText = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.SetUserText");

	Engine_SetUserText_Parms SetUserText_Parms;
	memcpy(&SetUserText_Parms.NewValue,&NewValue,0xC);
	pFnSetUserText->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetUserText,NULL,&SetUserText_Parms,NULL);
	pFnSetUserText->FunctionFlags |= 0x400;
	return SetUserText_Parms.ReturnValue;
}

struct Engine_GetSelectedText_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UUIComp_DrawStringEditbox::GetSelectedText()
{
	static UFieldFunc* pFnGetSelectedText = NULL;
	if(!pFnGetSelectedText)
		pFnGetSelectedText = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.GetSelectedText");

	Engine_GetSelectedText_Parms GetSelectedText_Parms;
	pFnGetSelectedText->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSelectedText,NULL,&GetSelectedText_Parms,NULL);
	pFnGetSelectedText->FunctionFlags |= 0x400;
	return GetSelectedText_Parms.ReturnValue;
}

struct Engine_ClearSelection_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIComp_DrawStringEditbox::ClearSelection()
{
	static UFieldFunc* pFnClearSelection = NULL;
	if(!pFnClearSelection)
		pFnClearSelection = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.ClearSelection");

	Engine_ClearSelection_Parms ClearSelection_Parms;
	pFnClearSelection->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearSelection,NULL,&ClearSelection_Parms,NULL);
	pFnClearSelection->FunctionFlags |= 0x400;
	return ClearSelection_Parms.ReturnValue;
}

struct Engine_SetSelectionEnd_Parms
{
	int                                                EndIndex;                                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComp_DrawStringEditbox::SetSelectionEnd(int EndIndex)
{
	static UFieldFunc* pFnSetSelectionEnd = NULL;
	if(!pFnSetSelectionEnd)
		pFnSetSelectionEnd = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.SetSelectionEnd");

	Engine_SetSelectionEnd_Parms SetSelectionEnd_Parms;
	SetSelectionEnd_Parms.EndIndex = EndIndex;
	pFnSetSelectionEnd->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSelectionEnd,NULL,&SetSelectionEnd_Parms,NULL);
	pFnSetSelectionEnd->FunctionFlags |= 0x400;
	return SetSelectionEnd_Parms.ReturnValue;
}

struct Engine_GetUserTextLength_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIComp_DrawStringEditbox::GetUserTextLength()
{
	static UFieldFunc* pFnGetUserTextLength = NULL;
	if(!pFnGetUserTextLength)
		pFnGetUserTextLength = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.GetUserTextLength");

	Engine_GetUserTextLength_Parms GetUserTextLength_Parms;
	pFnGetUserTextLength->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUserTextLength,NULL,&GetUserTextLength_Parms,NULL);
	pFnGetUserTextLength->FunctionFlags |= 0x400;
	return GetUserTextLength_Parms.ReturnValue;
}

struct Engine_SetSelectionStart_Parms
{
	int                                                StartIndex;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComp_DrawStringEditbox::SetSelectionStart(int StartIndex)
{
	static UFieldFunc* pFnSetSelectionStart = NULL;
	if(!pFnSetSelectionStart)
		pFnSetSelectionStart = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.SetSelectionStart");

	Engine_SetSelectionStart_Parms SetSelectionStart_Parms;
	SetSelectionStart_Parms.StartIndex = StartIndex;
	pFnSetSelectionStart->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSelectionStart,NULL,&SetSelectionStart_Parms,NULL);
	pFnSetSelectionStart->FunctionFlags |= 0x400;
	return SetSelectionStart_Parms.ReturnValue;
}

struct Engine_GetSelectionRange_Parms
{
	int                                                out_StartIndex;                                   		// 0x000000 (0x0004)              
	int                                                out_EndIndex;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIComp_DrawStringEditbox::GetSelectionRange(int* out_StartIndex,int* out_EndIndex)
{
	static UFieldFunc* pFnGetSelectionRange = NULL;
	if(!pFnGetSelectionRange)
		pFnGetSelectionRange = UObject::FindFunction("Function Engine.UIComp_DrawStringEditbox.GetSelectionRange");

	Engine_GetSelectionRange_Parms GetSelectionRange_Parms;
	pFnGetSelectionRange->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSelectionRange,NULL,&GetSelectionRange_Parms,NULL);
	pFnGetSelectionRange->FunctionFlags |= 0x400;
	if(out_StartIndex)
		*out_StartIndex = GetSelectionRange_Parms.out_StartIndex;
	if(out_EndIndex)
		*out_EndIndex = GetSelectionRange_Parms.out_EndIndex;
	return GetSelectionRange_Parms.ReturnValue;
}

struct Engine_AllMutexesDisabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIList::AllMutexesDisabled()
{
	static UFieldFunc* pFnAllMutexesDisabled = NULL;
	if(!pFnAllMutexesDisabled)
		pFnAllMutexesDisabled = UObject::FindFunction("Function Engine.UIList.AllMutexesDisabled");

	Engine_AllMutexesDisabled_Parms AllMutexesDisabled_Parms;
	ProcessEvent(pFnAllMutexesDisabled,NULL,&AllMutexesDisabled_Parms,NULL);
	return AllMutexesDisabled_Parms.ReturnValue;
}

struct Engine_GetColumnWidth_Parms
{
	int                                                ColumnIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bColHeader : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bReturnUnformattedValue : 1;                      		// 0x000008 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float UUIList::GetColumnWidth(int ColumnIndex,bool bColHeader,bool bReturnUnformattedValue)
{
	static UFieldFunc* pFnGetColumnWidth = NULL;
	if(!pFnGetColumnWidth)
		pFnGetColumnWidth = UObject::FindFunction("Function Engine.UIList.GetColumnWidth");

	Engine_GetColumnWidth_Parms GetColumnWidth_Parms;
	GetColumnWidth_Parms.ColumnIndex = ColumnIndex;
	GetColumnWidth_Parms.bColHeader = bColHeader;
	GetColumnWidth_Parms.bReturnUnformattedValue = bReturnUnformattedValue;
	pFnGetColumnWidth->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetColumnWidth,NULL,&GetColumnWidth_Parms,NULL);
	pFnGetColumnWidth->FunctionFlags |= 0x400;
	return GetColumnWidth_Parms.ReturnValue;
}

struct Engine_DecrementAllMutexes_Parms
{
	unsigned long                                      bDispatchUpdates : 1;                             		// 0x000000 (0x0004) [0x00000001] 
};

void UUIList::DecrementAllMutexes(bool bDispatchUpdates)
{
	static UFieldFunc* pFnDecrementAllMutexes = NULL;
	if(!pFnDecrementAllMutexes)
		pFnDecrementAllMutexes = UObject::FindFunction("Function Engine.UIList.DecrementAllMutexes");

	Engine_DecrementAllMutexes_Parms DecrementAllMutexes_Parms;
	DecrementAllMutexes_Parms.bDispatchUpdates = bDispatchUpdates;
	ProcessEvent(pFnDecrementAllMutexes,NULL,&DecrementAllMutexes_Parms,NULL);
}

struct Engine_SetHotTracking_Parms
{
	unsigned long                                      bShouldUpdateItemUnderCursor : 1;                 		// 0x000000 (0x0004) [0x00000001] 
};

void UUIList::SetHotTracking(bool bShouldUpdateItemUnderCursor)
{
	static UFieldFunc* pFnSetHotTracking = NULL;
	if(!pFnSetHotTracking)
		pFnSetHotTracking = UObject::FindFunction("Function Engine.UIList.SetHotTracking");

	Engine_SetHotTracking_Parms SetHotTracking_Parms;
	SetHotTracking_Parms.bShouldUpdateItemUnderCursor = bShouldUpdateItemUnderCursor;
	pFnSetHotTracking->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetHotTracking,NULL,&SetHotTracking_Parms,NULL);
	pFnSetHotTracking->FunctionFlags |= 0x400;
}

struct Engine_PostInitialize_Parms
{
};

void UUIList::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UIList.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIList::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIList.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_IsElementEnabled_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIList::IsElementEnabled(int ElementIndex)
{
	static UFieldFunc* pFnIsElementEnabled = NULL;
	if(!pFnIsElementEnabled)
		pFnIsElementEnabled = UObject::FindFunction("Function Engine.UIList.IsElementEnabled");

	Engine_IsElementEnabled_Parms IsElementEnabled_Parms;
	IsElementEnabled_Parms.ElementIndex = ElementIndex;
	pFnIsElementEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsElementEnabled,NULL,&IsElementEnabled_Parms,NULL);
	pFnIsElementEnabled->FunctionFlags |= 0x400;
	return IsElementEnabled_Parms.ReturnValue;
}

struct Engine_GetCurrentItem_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetCurrentItem()
{
	static UFieldFunc* pFnGetCurrentItem = NULL;
	if(!pFnGetCurrentItem)
		pFnGetCurrentItem = UObject::FindFunction("Function Engine.UIList.GetCurrentItem");

	Engine_GetCurrentItem_Parms GetCurrentItem_Parms;
	pFnGetCurrentItem->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentItem,NULL,&GetCurrentItem_Parms,NULL);
	pFnGetCurrentItem->FunctionFlags |= 0x400;
	return GetCurrentItem_Parms.ReturnValue;
}

struct Engine_OnSetListIndex_Parms
{
	class UUIAction_SetListIndex*                      Action;                                           		// 0x000000 (0x0004)              
	//int                                                OutputLinkIndex;                                  		// 0x000004 (0x0004)              
};

void UUIList::OnSetListIndex(class UUIAction_SetListIndex* Action)
{
	static UFieldFunc* pFnOnSetListIndex = NULL;
	if(!pFnOnSetListIndex)
		pFnOnSetListIndex = UObject::FindFunction("Function Engine.UIList.OnSetListIndex");

	Engine_OnSetListIndex_Parms OnSetListIndex_Parms;
	OnSetListIndex_Parms.Action = Action;
	ProcessEvent(pFnOnSetListIndex,NULL,&OnSetListIndex_Parms,NULL);
}

struct Engine_DisableSetIndex_Parms
{
};

void UUIList::DisableSetIndex()
{
	static UFieldFunc* pFnDisableSetIndex = NULL;
	if(!pFnDisableSetIndex)
		pFnDisableSetIndex = UObject::FindFunction("Function Engine.UIList.DisableSetIndex");

	Engine_DisableSetIndex_Parms DisableSetIndex_Parms;
	ProcessEvent(pFnDisableSetIndex,NULL,&DisableSetIndex_Parms,NULL);
}

struct Engine_OnStateChanged_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    NewlyActiveState;                                 		// 0x000008 (0x0004)              
	class UUIState*                                    PreviouslyActiveState;                            		// 0x00000C (0x0004)              
};

void UUIList::OnStateChanged(class UUIScreenObject* Sender,int PlayerIndex,class UUIState* NewlyActiveState,class UUIState* PreviouslyActiveState)
{
	static UFieldFunc* pFnOnStateChanged = NULL;
	if(!pFnOnStateChanged)
		pFnOnStateChanged = UObject::FindFunction("Function Engine.UIList.OnStateChanged");

	Engine_OnStateChanged_Parms OnStateChanged_Parms;
	OnStateChanged_Parms.Sender = Sender;
	OnStateChanged_Parms.PlayerIndex = PlayerIndex;
	OnStateChanged_Parms.NewlyActiveState = NewlyActiveState;
	OnStateChanged_Parms.PreviouslyActiveState = PreviouslyActiveState;
	ProcessEvent(pFnOnStateChanged,NULL,&OnStateChanged_Parms,NULL);
}

struct Engine_IsElementAutoSizingEnabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIList::IsElementAutoSizingEnabled()
{
	static UFieldFunc* pFnIsElementAutoSizingEnabled = NULL;
	if(!pFnIsElementAutoSizingEnabled)
		pFnIsElementAutoSizingEnabled = UObject::FindFunction("Function Engine.UIList.IsElementAutoSizingEnabled");

	Engine_IsElementAutoSizingEnabled_Parms IsElementAutoSizingEnabled_Parms;
	pFnIsElementAutoSizingEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsElementAutoSizingEnabled,NULL,&IsElementAutoSizingEnabled_Parms,NULL);
	pFnIsElementAutoSizingEnabled->FunctionFlags |= 0x400;
	return IsElementAutoSizingEnabled_Parms.ReturnValue;
}

struct Engine_RemoveElement_Parms
{
	int                                                ElementToRemove;                                  		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UUIList::RemoveElement(int ElementToRemove)
{
	static UFieldFunc* pFnRemoveElement = NULL;
	if(!pFnRemoveElement)
		pFnRemoveElement = UObject::FindFunction("Function Engine.UIList.RemoveElement");

	Engine_RemoveElement_Parms RemoveElement_Parms;
	RemoveElement_Parms.ElementToRemove = ElementToRemove;
	pFnRemoveElement->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveElement,NULL,&RemoveElement_Parms,NULL);
	pFnRemoveElement->FunctionFlags |= 0x400;
	return RemoveElement_Parms.ReturnValue;
}

struct Engine_CanSelectElement_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIList::CanSelectElement(int ElementIndex)
{
	static UFieldFunc* pFnCanSelectElement = NULL;
	if(!pFnCanSelectElement)
		pFnCanSelectElement = UObject::FindFunction("Function Engine.UIList.CanSelectElement");

	Engine_CanSelectElement_Parms CanSelectElement_Parms;
	CanSelectElement_Parms.ElementIndex = ElementIndex;
	pFnCanSelectElement->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanSelectElement,NULL,&CanSelectElement_Parms,NULL);
	pFnCanSelectElement->FunctionFlags |= 0x400;
	return CanSelectElement_Parms.ReturnValue;
}

struct Engine_GetElementValue_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	int                                                CellIndex;                                        		// 0x000004 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UUIList::GetElementValue(int ElementIndex,int CellIndex)
{
	static UFieldFunc* pFnGetElementValue = NULL;
	if(!pFnGetElementValue)
		pFnGetElementValue = UObject::FindFunction("Function Engine.UIList.GetElementValue");

	Engine_GetElementValue_Parms GetElementValue_Parms;
	GetElementValue_Parms.ElementIndex = ElementIndex;
	GetElementValue_Parms.CellIndex = CellIndex;
	pFnGetElementValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetElementValue,NULL,&GetElementValue_Parms,NULL);
	pFnGetElementValue->FunctionFlags |= 0x400;
	return GetElementValue_Parms.ReturnValue;
}

struct Engine_OnGetTextValue_Parms
{
	class UUIAction_GetTextValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUIList::OnGetTextValue(class UUIAction_GetTextValue* Action)
{
	static UFieldFunc* pFnOnGetTextValue = NULL;
	if(!pFnOnGetTextValue)
		pFnOnGetTextValue = UObject::FindFunction("Function Engine.UIList.OnGetTextValue");

	Engine_OnGetTextValue_Parms OnGetTextValue_Parms;
	OnGetTextValue_Parms.Action = Action;
	ProcessEvent(pFnOnGetTextValue,NULL,&OnGetTextValue_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIList::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIList.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_ScrollVertical_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionChange;                                   		// 0x000004 (0x0004)              
	unsigned long                                      bPositionMaxed : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIList::ScrollVertical(class UUIScrollbar* Sender,float PositionChange,bool bPositionMaxed)
{
	static UFieldFunc* pFnScrollVertical = NULL;
	if(!pFnScrollVertical)
		pFnScrollVertical = UObject::FindFunction("Function Engine.UIList.ScrollVertical");

	Engine_ScrollVertical_Parms ScrollVertical_Parms;
	ScrollVertical_Parms.Sender = Sender;
	ScrollVertical_Parms.PositionChange = PositionChange;
	ScrollVertical_Parms.bPositionMaxed = bPositionMaxed;
	pFnScrollVertical->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScrollVertical,NULL,&ScrollVertical_Parms,NULL);
	pFnScrollVertical->FunctionFlags |= 0x400;
	return ScrollVertical_Parms.ReturnValue;
}

struct Engine_IncrementAllMutexes_Parms
{
};

void UUIList::IncrementAllMutexes()
{
	static UFieldFunc* pFnIncrementAllMutexes = NULL;
	if(!pFnIncrementAllMutexes)
		pFnIncrementAllMutexes = UObject::FindFunction("Function Engine.UIList.IncrementAllMutexes");

	Engine_IncrementAllMutexes_Parms IncrementAllMutexes_Parms;
	ProcessEvent(pFnIncrementAllMutexes,NULL,&IncrementAllMutexes_Parms,NULL);
}

struct Engine_GetMaxNumVisibleRows_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetMaxNumVisibleRows()
{
	static UFieldFunc* pFnGetMaxNumVisibleRows = NULL;
	if(!pFnGetMaxNumVisibleRows)
		pFnGetMaxNumVisibleRows = UObject::FindFunction("Function Engine.UIList.GetMaxNumVisibleRows");

	Engine_GetMaxNumVisibleRows_Parms GetMaxNumVisibleRows_Parms;
	pFnGetMaxNumVisibleRows->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaxNumVisibleRows,NULL,&GetMaxNumVisibleRows_Parms,NULL);
	pFnGetMaxNumVisibleRows->FunctionFlags |= 0x400;
	return GetMaxNumVisibleRows_Parms.ReturnValue;
}

struct Engine_IsValueChangeNotificationEnabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIList::IsValueChangeNotificationEnabled()
{
	static UFieldFunc* pFnIsValueChangeNotificationEnabled = NULL;
	if(!pFnIsValueChangeNotificationEnabled)
		pFnIsValueChangeNotificationEnabled = UObject::FindFunction("Function Engine.UIList.IsValueChangeNotificationEnabled");

	Engine_IsValueChangeNotificationEnabled_Parms IsValueChangeNotificationEnabled_Parms;
	ProcessEvent(pFnIsValueChangeNotificationEnabled,NULL,&IsValueChangeNotificationEnabled_Parms,NULL);
	return IsValueChangeNotificationEnabled_Parms.ReturnValue;
}

struct Engine_GetMaxNumVisibleColumns_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetMaxNumVisibleColumns()
{
	static UFieldFunc* pFnGetMaxNumVisibleColumns = NULL;
	if(!pFnGetMaxNumVisibleColumns)
		pFnGetMaxNumVisibleColumns = UObject::FindFunction("Function Engine.UIList.GetMaxNumVisibleColumns");

	Engine_GetMaxNumVisibleColumns_Parms GetMaxNumVisibleColumns_Parms;
	pFnGetMaxNumVisibleColumns->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaxNumVisibleColumns,NULL,&GetMaxNumVisibleColumns_Parms,NULL);
	pFnGetMaxNumVisibleColumns->FunctionFlags |= 0x400;
	return GetMaxNumVisibleColumns_Parms.ReturnValue;
}

struct Engine_IsHoldingCtrl_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIList::IsHoldingCtrl(int ControllerId)
{
	static UFieldFunc* pFnIsHoldingCtrl = NULL;
	if(!pFnIsHoldingCtrl)
		pFnIsHoldingCtrl = UObject::FindFunction("Function Engine.UIList.IsHoldingCtrl");

	Engine_IsHoldingCtrl_Parms IsHoldingCtrl_Parms;
	IsHoldingCtrl_Parms.ControllerId = ControllerId;
	pFnIsHoldingCtrl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsHoldingCtrl,NULL,&IsHoldingCtrl_Parms,NULL);
	pFnIsHoldingCtrl->FunctionFlags |= 0x400;
	return IsHoldingCtrl_Parms.ReturnValue;
}

struct Engine_IsSetIndexEnabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIList::IsSetIndexEnabled()
{
	static UFieldFunc* pFnIsSetIndexEnabled = NULL;
	if(!pFnIsSetIndexEnabled)
		pFnIsSetIndexEnabled = UObject::FindFunction("Function Engine.UIList.IsSetIndexEnabled");

	Engine_IsSetIndexEnabled_Parms IsSetIndexEnabled_Parms;
	ProcessEvent(pFnIsSetIndexEnabled,NULL,&IsSetIndexEnabled_Parms,NULL);
	return IsSetIndexEnabled_Parms.ReturnValue;
}

struct Engine_GetResizeColumn_Parms
{
	struct FCellHitDetectionInfo                       ClickedCell;                                      		// 0x000000 (0x0014)              
	int                                                ReturnValue;                                      		// 0x000014 (0x0004)              
};

int UUIList::GetResizeColumn(struct FCellHitDetectionInfo* ClickedCell)
{
	static UFieldFunc* pFnGetResizeColumn = NULL;
	if(!pFnGetResizeColumn)
		pFnGetResizeColumn = UObject::FindFunction("Function Engine.UIList.GetResizeColumn");

	Engine_GetResizeColumn_Parms GetResizeColumn_Parms;
	pFnGetResizeColumn->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetResizeColumn,NULL,&GetResizeColumn_Parms,NULL);
	pFnGetResizeColumn->FunctionFlags |= 0x400;
	if(ClickedCell)
		memcpy(ClickedCell,&GetResizeColumn_Parms.ClickedCell,0x14);
	return GetResizeColumn_Parms.ReturnValue;
}

struct Engine_GetTotalRowCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetTotalRowCount()
{
	static UFieldFunc* pFnGetTotalRowCount = NULL;
	if(!pFnGetTotalRowCount)
		pFnGetTotalRowCount = UObject::FindFunction("Function Engine.UIList.GetTotalRowCount");

	Engine_GetTotalRowCount_Parms GetTotalRowCount_Parms;
	pFnGetTotalRowCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTotalRowCount,NULL,&GetTotalRowCount_Parms,NULL);
	pFnGetTotalRowCount->FunctionFlags |= 0x400;
	return GetTotalRowCount_Parms.ReturnValue;
}

struct Engine_SetIndex_Parms
{
	int                                                NewIndex;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bClampValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bSkipNotification : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIList::SetIndex(int NewIndex,bool bClampValue,bool bSkipNotification)
{
	static UFieldFunc* pFnSetIndex = NULL;
	if(!pFnSetIndex)
		pFnSetIndex = UObject::FindFunction("Function Engine.UIList.SetIndex");

	Engine_SetIndex_Parms SetIndex_Parms;
	SetIndex_Parms.NewIndex = NewIndex;
	SetIndex_Parms.bClampValue = bClampValue;
	SetIndex_Parms.bSkipNotification = bSkipNotification;
	pFnSetIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIndex,NULL,&SetIndex_Parms,NULL);
	pFnSetIndex->FunctionFlags |= 0x400;
	return SetIndex_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIList::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIList.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_EnableColumnHeaderRendering_Parms
{
	unsigned long                                      bShouldRenderColHeaders : 1;                      		// 0x000000 (0x0004) [0x00000001] 
};

void UUIList::EnableColumnHeaderRendering(bool bShouldRenderColHeaders)
{
	static UFieldFunc* pFnEnableColumnHeaderRendering = NULL;
	if(!pFnEnableColumnHeaderRendering)
		pFnEnableColumnHeaderRendering = UObject::FindFunction("Function Engine.UIList.EnableColumnHeaderRendering");

	Engine_EnableColumnHeaderRendering_Parms EnableColumnHeaderRendering_Parms;
	EnableColumnHeaderRendering_Parms.bShouldRenderColHeaders = bShouldRenderColHeaders;
	ProcessEvent(pFnEnableColumnHeaderRendering,NULL,&EnableColumnHeaderRendering_Parms,NULL);
}

struct Engine_GetClientRegion_Parms
{
	unsigned long                                      bColHeader : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
	FVector2                                           ReturnValue;                                      		// 0x000004 (0x0008)              
};

FVector2 UUIList::GetClientRegion(bool bColHeader)
{
	static UFieldFunc* pFnGetClientRegion = NULL;
	if(!pFnGetClientRegion)
		pFnGetClientRegion = UObject::FindFunction("Function Engine.UIList.GetClientRegion");

	Engine_GetClientRegion_Parms GetClientRegion_Parms;
	GetClientRegion_Parms.bColHeader = bColHeader;
	pFnGetClientRegion->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClientRegion,NULL,&GetClientRegion_Parms,NULL);
	pFnGetClientRegion->FunctionFlags |= 0x400;
	return GetClientRegion_Parms.ReturnValue;
}

struct Engine_GetItemCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetItemCount()
{
	static UFieldFunc* pFnGetItemCount = NULL;
	if(!pFnGetItemCount)
		pFnGetItemCount = UObject::FindFunction("Function Engine.UIList.GetItemCount");

	Engine_GetItemCount_Parms GetItemCount_Parms;
	pFnGetItemCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetItemCount,NULL,&GetItemCount_Parms,NULL);
	pFnGetItemCount->FunctionFlags |= 0x400;
	return GetItemCount_Parms.ReturnValue;
}

struct Engine_CalculateIndexFromCursorLocation_Parms
{
	unsigned long                                      bRequireValidIndex : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UUIList::CalculateIndexFromCursorLocation(bool bRequireValidIndex)
{
	static UFieldFunc* pFnCalculateIndexFromCursorLocation = NULL;
	if(!pFnCalculateIndexFromCursorLocation)
		pFnCalculateIndexFromCursorLocation = UObject::FindFunction("Function Engine.UIList.CalculateIndexFromCursorLocation");

	Engine_CalculateIndexFromCursorLocation_Parms CalculateIndexFromCursorLocation_Parms;
	CalculateIndexFromCursorLocation_Parms.bRequireValidIndex = bRequireValidIndex;
	pFnCalculateIndexFromCursorLocation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalculateIndexFromCursorLocation,NULL,&CalculateIndexFromCursorLocation_Parms,NULL);
	pFnCalculateIndexFromCursorLocation->FunctionFlags |= 0x400;
	return CalculateIndexFromCursorLocation_Parms.ReturnValue;
}

struct Engine_EnableSetIndex_Parms
{
};

void UUIList::EnableSetIndex()
{
	static UFieldFunc* pFnEnableSetIndex = NULL;
	if(!pFnEnableSetIndex)
		pFnEnableSetIndex = UObject::FindFunction("Function Engine.UIList.EnableSetIndex");

	Engine_EnableSetIndex_Parms EnableSetIndex_Parms;
	ProcessEvent(pFnEnableSetIndex,NULL,&EnableSetIndex_Parms,NULL);
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIList::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIList.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_Initialized_Parms
{
};

void UUIList::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UIList.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_SetRowCount_Parms
{
	int                                                NewRowCount;                                      		// 0x000000 (0x0004)              
};

void UUIList::SetRowCount(int NewRowCount)
{
	static UFieldFunc* pFnSetRowCount = NULL;
	if(!pFnSetRowCount)
		pFnSetRowCount = UObject::FindFunction("Function Engine.UIList.SetRowCount");

	Engine_SetRowCount_Parms SetRowCount_Parms;
	SetRowCount_Parms.NewRowCount = NewRowCount;
	pFnSetRowCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetRowCount,NULL,&SetRowCount_Parms,NULL);
	pFnSetRowCount->FunctionFlags |= 0x400;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIList::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIList.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_ScrollVerticalPage_Parms
{
	int                                                nPageChange;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIList::ScrollVerticalPage(int nPageChange)
{
	static UFieldFunc* pFnScrollVerticalPage = NULL;
	if(!pFnScrollVerticalPage)
		pFnScrollVerticalPage = UObject::FindFunction("Function Engine.UIList.ScrollVerticalPage");

	Engine_ScrollVerticalPage_Parms ScrollVerticalPage_Parms;
	ScrollVerticalPage_Parms.nPageChange = nPageChange;
	pFnScrollVerticalPage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScrollVerticalPage,NULL,&ScrollVerticalPage_Parms,NULL);
	pFnScrollVerticalPage->FunctionFlags |= 0x400;
	return ScrollVerticalPage_Parms.ReturnValue;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIList::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIList.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_IsHotTrackingEnabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIList::IsHotTrackingEnabled()
{
	static UFieldFunc* pFnIsHotTrackingEnabled = NULL;
	if(!pFnIsHotTrackingEnabled)
		pFnIsHotTrackingEnabled = UObject::FindFunction("Function Engine.UIList.IsHotTrackingEnabled");

	Engine_IsHotTrackingEnabled_Parms IsHotTrackingEnabled_Parms;
	pFnIsHotTrackingEnabled->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsHotTrackingEnabled,NULL,&IsHotTrackingEnabled_Parms,NULL);
	pFnIsHotTrackingEnabled->FunctionFlags |= 0x400;
	return IsHotTrackingEnabled_Parms.ReturnValue;
}

struct Engine_SelectElement_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bSelected : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
};

void UUIList::SelectElement(int ElementIndex,bool bSelected)
{
	static UFieldFunc* pFnSelectElement = NULL;
	if(!pFnSelectElement)
		pFnSelectElement = UObject::FindFunction("Function Engine.UIList.SelectElement");

	Engine_SelectElement_Parms SelectElement_Parms;
	SelectElement_Parms.ElementIndex = ElementIndex;
	SelectElement_Parms.bSelected = bSelected;
	pFnSelectElement->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSelectElement,NULL,&SelectElement_Parms,NULL);
	pFnSelectElement->FunctionFlags |= 0x400;
}

struct Engine_GetMaxVisibleElementCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetMaxVisibleElementCount()
{
	static UFieldFunc* pFnGetMaxVisibleElementCount = NULL;
	if(!pFnGetMaxVisibleElementCount)
		pFnGetMaxVisibleElementCount = UObject::FindFunction("Function Engine.UIList.GetMaxVisibleElementCount");

	Engine_GetMaxVisibleElementCount_Parms GetMaxVisibleElementCount_Parms;
	pFnGetMaxVisibleElementCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMaxVisibleElementCount,NULL,&GetMaxVisibleElementCount_Parms,NULL);
	pFnGetMaxVisibleElementCount->FunctionFlags |= 0x400;
	return GetMaxVisibleElementCount_Parms.ReturnValue;
}

struct Engine_ClickedScrollZone_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionPerc;                                     		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	//int                                                MouseX;                                           		// 0x00000C (0x0004)              
	//int                                                MouseY;                                           		// 0x000010 (0x0004)              
	//float                                              MarkerPosition;                                   		// 0x000014 (0x0004)              
	//unsigned long                                      bDecrement : 1;                                   		// 0x000018 (0x0004) [0x00000001] 
	//int                                                NewTopItem;                                       		// 0x00001C (0x0004)              
};

void UUIList::ClickedScrollZone(class UUIScrollbar* Sender,float PositionPerc,int PlayerIndex)
{
	static UFieldFunc* pFnClickedScrollZone = NULL;
	if(!pFnClickedScrollZone)
		pFnClickedScrollZone = UObject::FindFunction("Function Engine.UIList.ClickedScrollZone");

	Engine_ClickedScrollZone_Parms ClickedScrollZone_Parms;
	ClickedScrollZone_Parms.Sender = Sender;
	ClickedScrollZone_Parms.PositionPerc = PositionPerc;
	ClickedScrollZone_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnClickedScrollZone,NULL,&ClickedScrollZone_Parms,NULL);
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIList::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIList.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_DisableValueChangeNotification_Parms
{
};

void UUIList::DisableValueChangeNotification()
{
	static UFieldFunc* pFnDisableValueChangeNotification = NULL;
	if(!pFnDisableValueChangeNotification)
		pFnDisableValueChangeNotification = UObject::FindFunction("Function Engine.UIList.DisableValueChangeNotification");

	Engine_DisableValueChangeNotification_Parms DisableValueChangeNotification_Parms;
	ProcessEvent(pFnDisableValueChangeNotification,NULL,&DisableValueChangeNotification_Parms,NULL);
}

struct Engine_EnableValueChangeNotification_Parms
{
};

void UUIList::EnableValueChangeNotification()
{
	static UFieldFunc* pFnEnableValueChangeNotification = NULL;
	if(!pFnEnableValueChangeNotification)
		pFnEnableValueChangeNotification = UObject::FindFunction("Function Engine.UIList.EnableValueChangeNotification");

	Engine_EnableValueChangeNotification_Parms EnableValueChangeNotification_Parms;
	ProcessEvent(pFnEnableValueChangeNotification,NULL,&EnableValueChangeNotification_Parms,NULL);
}

struct Engine_SetTopIndex_Parms
{
	int                                                NewTopIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bClampValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIList::SetTopIndex(int NewTopIndex,bool bClampValue)
{
	static UFieldFunc* pFnSetTopIndex = NULL;
	if(!pFnSetTopIndex)
		pFnSetTopIndex = UObject::FindFunction("Function Engine.UIList.SetTopIndex");

	Engine_SetTopIndex_Parms SetTopIndex_Parms;
	SetTopIndex_Parms.NewTopIndex = NewTopIndex;
	SetTopIndex_Parms.bClampValue = bClampValue;
	pFnSetTopIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTopIndex,NULL,&SetTopIndex_Parms,NULL);
	pFnSetTopIndex->FunctionFlags |= 0x400;
	return SetTopIndex_Parms.ReturnValue;
}

struct Engine_GetRowHeight_Parms
{
	int                                                RowIndex;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bColHeader : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bReturnUnformattedValue : 1;                      		// 0x000008 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x00000C (0x0004)              
};

float UUIList::GetRowHeight(int RowIndex,bool bColHeader,bool bReturnUnformattedValue)
{
	static UFieldFunc* pFnGetRowHeight = NULL;
	if(!pFnGetRowHeight)
		pFnGetRowHeight = UObject::FindFunction("Function Engine.UIList.GetRowHeight");

	Engine_GetRowHeight_Parms GetRowHeight_Parms;
	GetRowHeight_Parms.RowIndex = RowIndex;
	GetRowHeight_Parms.bColHeader = bColHeader;
	GetRowHeight_Parms.bReturnUnformattedValue = bReturnUnformattedValue;
	pFnGetRowHeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetRowHeight,NULL,&GetRowHeight_Parms,NULL);
	pFnGetRowHeight->FunctionFlags |= 0x400;
	return GetRowHeight_Parms.ReturnValue;
}

struct Engine_GetTotalColumnCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIList::GetTotalColumnCount()
{
	static UFieldFunc* pFnGetTotalColumnCount = NULL;
	if(!pFnGetTotalColumnCount)
		pFnGetTotalColumnCount = UObject::FindFunction("Function Engine.UIList.GetTotalColumnCount");

	Engine_GetTotalColumnCount_Parms GetTotalColumnCount_Parms;
	pFnGetTotalColumnCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTotalColumnCount,NULL,&GetTotalColumnCount_Parms,NULL);
	pFnGetTotalColumnCount->FunctionFlags |= 0x400;
	return GetTotalColumnCount_Parms.ReturnValue;
}

struct Engine_OnChildRepositioned_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
};

void UUIList::OnChildRepositioned(class UUIScreenObject* Sender)
{
	static UFieldFunc* pFnOnChildRepositioned = NULL;
	if(!pFnOnChildRepositioned)
		pFnOnChildRepositioned = UObject::FindFunction("Function Engine.UIList.OnChildRepositioned");

	Engine_OnChildRepositioned_Parms OnChildRepositioned_Parms;
	OnChildRepositioned_Parms.Sender = Sender;
	ProcessEvent(pFnOnChildRepositioned,NULL,&OnChildRepositioned_Parms,NULL);
}

struct Engine_OnListElementsSorted_Parms
{
	class UUIList*                                     Sender;                                           		// 0x000000 (0x0004)              
};

void UUIList::OnListElementsSorted(class UUIList* Sender)
{
	static UFieldFunc* pFnOnListElementsSorted = NULL;
	if(!pFnOnListElementsSorted)
		pFnOnListElementsSorted = UObject::FindFunction("Function Engine.UIList.OnListElementsSorted");

	Engine_OnListElementsSorted_Parms OnListElementsSorted_Parms;
	OnListElementsSorted_Parms.Sender = Sender;
	ProcessEvent(pFnOnListElementsSorted,NULL,&OnListElementsSorted_Parms,NULL);
}

struct Engine_ShouldRenderColumnHeaders_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIList::ShouldRenderColumnHeaders()
{
	static UFieldFunc* pFnShouldRenderColumnHeaders = NULL;
	if(!pFnShouldRenderColumnHeaders)
		pFnShouldRenderColumnHeaders = UObject::FindFunction("Function Engine.UIList.ShouldRenderColumnHeaders");

	Engine_ShouldRenderColumnHeaders_Parms ShouldRenderColumnHeaders_Parms;
	ProcessEvent(pFnShouldRenderColumnHeaders,NULL,&ShouldRenderColumnHeaders_Parms,NULL);
	return ShouldRenderColumnHeaders_Parms.ReturnValue;
}

struct Engine_FindItemIndex_Parms
{
	struct FString                                     ItemValue;                                        		// 0x000000 (0x000C)              
	int                                                CellIndex;                                        		// 0x00000C (0x0004)              
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
};

int UUIList::FindItemIndex(struct FString ItemValue,int CellIndex)
{
	static UFieldFunc* pFnFindItemIndex = NULL;
	if(!pFnFindItemIndex)
		pFnFindItemIndex = UObject::FindFunction("Function Engine.UIList.FindItemIndex");

	Engine_FindItemIndex_Parms FindItemIndex_Parms;
	memcpy(&FindItemIndex_Parms.ItemValue,&ItemValue,0xC);
	FindItemIndex_Parms.CellIndex = CellIndex;
	pFnFindItemIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindItemIndex,NULL,&FindItemIndex_Parms,NULL);
	pFnFindItemIndex->FunctionFlags |= 0x400;
	return FindItemIndex_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIList::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIList.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_GetSelectedItems_Parms
{
	TArray<int>                                        ReturnValue;                                      		// 0x000000 (0x000C)              
};

TArray<int> UUIList::GetSelectedItems()
{
	static UFieldFunc* pFnGetSelectedItems = NULL;
	if(!pFnGetSelectedItems)
		pFnGetSelectedItems = UObject::FindFunction("Function Engine.UIList.GetSelectedItems");

	Engine_GetSelectedItems_Parms GetSelectedItems_Parms;
	pFnGetSelectedItems->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSelectedItems,NULL,&GetSelectedItems_Parms,NULL);
	pFnGetSelectedItems->FunctionFlags |= 0x400;
	return GetSelectedItems_Parms.ReturnValue;
}

struct Engine_SetColumnCount_Parms
{
	int                                                NewColumnCount;                                   		// 0x000000 (0x0004)              
};

void UUIList::SetColumnCount(int NewColumnCount)
{
	static UFieldFunc* pFnSetColumnCount = NULL;
	if(!pFnSetColumnCount)
		pFnSetColumnCount = UObject::FindFunction("Function Engine.UIList.SetColumnCount");

	Engine_SetColumnCount_Parms SetColumnCount_Parms;
	SetColumnCount_Parms.NewColumnCount = NewColumnCount;
	pFnSetColumnCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetColumnCount,NULL,&SetColumnCount_Parms,NULL);
	pFnSetColumnCount->FunctionFlags |= 0x400;
}

struct Engine_OnSubmitSelection_Parms
{
	class UUIList*                                     Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIList::OnSubmitSelection(class UUIList* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnOnSubmitSelection = NULL;
	if(!pFnOnSubmitSelection)
		pFnOnSubmitSelection = UObject::FindFunction("Function Engine.UIList.OnSubmitSelection");

	Engine_OnSubmitSelection_Parms OnSubmitSelection_Parms;
	OnSubmitSelection_Parms.Sender = Sender;
	OnSubmitSelection_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnSubmitSelection,NULL,&OnSubmitSelection_Parms,NULL);
}

struct Engine_OverrideListSort_Parms
{
	class UUIList*                                     Sender;                                           		// 0x000000 (0x0004)              
	struct FName                                       CollectionFieldName;                              		// 0x000004 (0x0008)              
	struct FUIListSortingParameters                    SortParameters;                                   		// 0x00000C (0x000C)              
	TArray<int>                                        OrderedIndices;                                   		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UUIComp_ListElementSorter::OverrideListSort(class UUIList* Sender,struct FName CollectionFieldName,struct FUIListSortingParameters* SortParameters,TArray<int>* OrderedIndices)
{
	static UFieldFunc* pFnOverrideListSort = NULL;
	if(!pFnOverrideListSort)
		pFnOverrideListSort = UObject::FindFunction("Function Engine.UIComp_ListElementSorter.OverrideListSort");

	Engine_OverrideListSort_Parms OverrideListSort_Parms;
	OverrideListSort_Parms.Sender = Sender;
	memcpy(&OverrideListSort_Parms.CollectionFieldName,&CollectionFieldName,0x8);
	ProcessEvent(pFnOverrideListSort,NULL,&OverrideListSort_Parms,NULL);
	if(SortParameters)
		memcpy(SortParameters,&OverrideListSort_Parms.SortParameters,0xC);
	if(OrderedIndices)
		memcpy(OrderedIndices,&OverrideListSort_Parms.OrderedIndices,0xC);
	return OverrideListSort_Parms.ReturnValue;
}

struct Engine_ResetSortColumns_Parms
{
	unsigned long                                      bResort : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void UUIComp_ListElementSorter::ResetSortColumns(bool bResort)
{
	static UFieldFunc* pFnResetSortColumns = NULL;
	if(!pFnResetSortColumns)
		pFnResetSortColumns = UObject::FindFunction("Function Engine.UIComp_ListElementSorter.ResetSortColumns");

	Engine_ResetSortColumns_Parms ResetSortColumns_Parms;
	ResetSortColumns_Parms.bResort = bResort;
	pFnResetSortColumns->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResetSortColumns,NULL,&ResetSortColumns_Parms,NULL);
	pFnResetSortColumns->FunctionFlags |= 0x400;
}

struct Engine_ResortItems_Parms
{
	unsigned long                                      bCaseSensitive : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComp_ListElementSorter::ResortItems(bool bCaseSensitive)
{
	static UFieldFunc* pFnResortItems = NULL;
	if(!pFnResortItems)
		pFnResortItems = UObject::FindFunction("Function Engine.UIComp_ListElementSorter.ResortItems");

	Engine_ResortItems_Parms ResortItems_Parms;
	ResortItems_Parms.bCaseSensitive = bCaseSensitive;
	pFnResortItems->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResortItems,NULL,&ResortItems_Parms,NULL);
	pFnResortItems->FunctionFlags |= 0x400;
	return ResortItems_Parms.ReturnValue;
}

struct Engine_SortItems_Parms
{
	int                                                ColumnIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bSecondarySort : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bCaseSensitive : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIComp_ListElementSorter::SortItems(int ColumnIndex,bool bSecondarySort,bool bCaseSensitive)
{
	static UFieldFunc* pFnSortItems = NULL;
	if(!pFnSortItems)
		pFnSortItems = UObject::FindFunction("Function Engine.UIComp_ListElementSorter.SortItems");

	Engine_SortItems_Parms SortItems_Parms;
	SortItems_Parms.ColumnIndex = ColumnIndex;
	SortItems_Parms.bSecondarySort = bSecondarySort;
	SortItems_Parms.bCaseSensitive = bCaseSensitive;
	pFnSortItems->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSortItems,NULL,&SortItems_Parms,NULL);
	pFnSortItems->FunctionFlags |= 0x400;
	return SortItems_Parms.ReturnValue;
}

struct Engine_CalculateAutoSizeRowHeight_Parms
{
	int                                                RowIndex;                                         		// 0x000000 (0x0004)              
	float                                              out_RowHeight;                                    		// 0x000004 (0x0004)              
	float                                              out_StylePadding;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bReturnUnformattedValue : 1;                      		// 0x00000C (0x0004) [0x00000001] 
};

void UUIComp_ListPresenterBase::CalculateAutoSizeRowHeight(int RowIndex,float* out_RowHeight,float* out_StylePadding,bool bReturnUnformattedValue)
{
	static UFieldFunc* pFnCalculateAutoSizeRowHeight = NULL;
	if(!pFnCalculateAutoSizeRowHeight)
		pFnCalculateAutoSizeRowHeight = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.CalculateAutoSizeRowHeight");

	Engine_CalculateAutoSizeRowHeight_Parms CalculateAutoSizeRowHeight_Parms;
	CalculateAutoSizeRowHeight_Parms.RowIndex = RowIndex;
	CalculateAutoSizeRowHeight_Parms.bReturnUnformattedValue = bReturnUnformattedValue;
	pFnCalculateAutoSizeRowHeight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalculateAutoSizeRowHeight,NULL,&CalculateAutoSizeRowHeight_Parms,NULL);
	pFnCalculateAutoSizeRowHeight->FunctionFlags |= 0x400;
	if(out_RowHeight)
		*out_RowHeight = CalculateAutoSizeRowHeight_Parms.out_RowHeight;
	if(out_StylePadding)
		*out_StylePadding = CalculateAutoSizeRowHeight_Parms.out_StylePadding;
}

struct Engine_EnableColumnHeaderRendering_Parms
{
	unsigned long                                      bShouldRenderColHeaders : 1;                      		// 0x000000 (0x0004) [0x00000001] 
};

void UUIComp_ListPresenterBase::EnableColumnHeaderRendering(bool bShouldRenderColHeaders)
{
	static UFieldFunc* pFnEnableColumnHeaderRendering = NULL;
	if(!pFnEnableColumnHeaderRendering)
		pFnEnableColumnHeaderRendering = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.EnableColumnHeaderRendering");

	Engine_EnableColumnHeaderRendering_Parms EnableColumnHeaderRendering_Parms;
	EnableColumnHeaderRendering_Parms.bShouldRenderColHeaders = bShouldRenderColHeaders;
	pFnEnableColumnHeaderRendering->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableColumnHeaderRendering,NULL,&EnableColumnHeaderRendering_Parms,NULL);
	pFnEnableColumnHeaderRendering->FunctionFlags |= 0x400;
}

struct Engine_ShouldAdjustListBounds_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComp_ListPresenterBase::ShouldAdjustListBounds(unsigned char Orientation)
{
	static UFieldFunc* pFnShouldAdjustListBounds = NULL;
	if(!pFnShouldAdjustListBounds)
		pFnShouldAdjustListBounds = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.ShouldAdjustListBounds");

	Engine_ShouldAdjustListBounds_Parms ShouldAdjustListBounds_Parms;
	ShouldAdjustListBounds_Parms.Orientation = Orientation;
	pFnShouldAdjustListBounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShouldAdjustListBounds,NULL,&ShouldAdjustListBounds_Parms,NULL);
	pFnShouldAdjustListBounds->FunctionFlags |= 0x400;
	return ShouldAdjustListBounds_Parms.ReturnValue;
}

struct Engine_GetCellSchemaProvider_Parms
{
	class UUIListElementCellProvider*                  ReturnValue;                                      		// 0x000000 (0x0008)              
};

class UUIListElementCellProvider* UUIComp_ListPresenterBase::GetCellSchemaProvider()
{
	static UFieldFunc* pFnGetCellSchemaProvider = NULL;
	if(!pFnGetCellSchemaProvider)
		pFnGetCellSchemaProvider = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.GetCellSchemaProvider");

	Engine_GetCellSchemaProvider_Parms GetCellSchemaProvider_Parms;
	pFnGetCellSchemaProvider->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCellSchemaProvider,NULL,&GetCellSchemaProvider_Parms,NULL);
	pFnGetCellSchemaProvider->FunctionFlags |= 0x400;
	return GetCellSchemaProvider_Parms.ReturnValue;
}

struct Engine_ShouldRenderColumnHeaders_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIComp_ListPresenterBase::ShouldRenderColumnHeaders()
{
	static UFieldFunc* pFnShouldRenderColumnHeaders = NULL;
	if(!pFnShouldRenderColumnHeaders)
		pFnShouldRenderColumnHeaders = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.ShouldRenderColumnHeaders");

	Engine_ShouldRenderColumnHeaders_Parms ShouldRenderColumnHeaders_Parms;
	pFnShouldRenderColumnHeaders->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShouldRenderColumnHeaders,NULL,&ShouldRenderColumnHeaders_Parms,NULL);
	pFnShouldRenderColumnHeaders->FunctionFlags |= 0x400;
	return ShouldRenderColumnHeaders_Parms.ReturnValue;
}

struct Engine_GetElementValue_Parms
{
	int                                                ElementIndex;                                     		// 0x000000 (0x0004)              
	int                                                CellIndex;                                        		// 0x000004 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UUIComp_ListPresenterBase::GetElementValue(int ElementIndex,int CellIndex)
{
	static UFieldFunc* pFnGetElementValue = NULL;
	if(!pFnGetElementValue)
		pFnGetElementValue = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.GetElementValue");

	Engine_GetElementValue_Parms GetElementValue_Parms;
	GetElementValue_Parms.ElementIndex = ElementIndex;
	GetElementValue_Parms.CellIndex = CellIndex;
	pFnGetElementValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetElementValue,NULL,&GetElementValue_Parms,NULL);
	pFnGetElementValue->FunctionFlags |= 0x400;
	return GetElementValue_Parms.ReturnValue;
}

struct Engine_CalculateAutoSizeColumnWidth_Parms
{
	int                                                ColIndex;                                         		// 0x000000 (0x0004)              
	float                                              out_ColWidth;                                     		// 0x000004 (0x0004)              
	float                                              out_StylePadding;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bReturnUnformattedValue : 1;                      		// 0x00000C (0x0004) [0x00000001] 
};

void UUIComp_ListPresenterBase::CalculateAutoSizeColumnWidth(int ColIndex,float* out_ColWidth,float* out_StylePadding,bool bReturnUnformattedValue)
{
	static UFieldFunc* pFnCalculateAutoSizeColumnWidth = NULL;
	if(!pFnCalculateAutoSizeColumnWidth)
		pFnCalculateAutoSizeColumnWidth = UObject::FindFunction("Function Engine.UIComp_ListPresenterBase.CalculateAutoSizeColumnWidth");

	Engine_CalculateAutoSizeColumnWidth_Parms CalculateAutoSizeColumnWidth_Parms;
	CalculateAutoSizeColumnWidth_Parms.ColIndex = ColIndex;
	CalculateAutoSizeColumnWidth_Parms.bReturnUnformattedValue = bReturnUnformattedValue;
	pFnCalculateAutoSizeColumnWidth->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCalculateAutoSizeColumnWidth,NULL,&CalculateAutoSizeColumnWidth_Parms,NULL);
	pFnCalculateAutoSizeColumnWidth->FunctionFlags |= 0x400;
	if(out_ColWidth)
		*out_ColWidth = CalculateAutoSizeColumnWidth_Parms.out_ColWidth;
	if(out_StylePadding)
		*out_StylePadding = CalculateAutoSizeColumnWidth_Parms.out_StylePadding;
}

struct Engine_FindElementIndex_Parms
{
	int                                                DataSourceIndex;                                  		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UUIComp_ListPresenter::FindElementIndex(int DataSourceIndex)
{
	static UFieldFunc* pFnFindElementIndex = NULL;
	if(!pFnFindElementIndex)
		pFnFindElementIndex = UObject::FindFunction("Function Engine.UIComp_ListPresenter.FindElementIndex");

	Engine_FindElementIndex_Parms FindElementIndex_Parms;
	FindElementIndex_Parms.DataSourceIndex = DataSourceIndex;
	pFnFindElementIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindElementIndex,NULL,&FindElementIndex_Parms,NULL);
	pFnFindElementIndex->FunctionFlags |= 0x400;
	return FindElementIndex_Parms.ReturnValue;
}

struct Engine_InsertMenuItem_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	struct FString                                     Item;                                             		// 0x000004 (0x000C)              
	int                                                InsertIndex;                                      		// 0x000010 (0x0004)              
	unsigned long                                      bAllowDuplicates : 1;                             		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x000020 (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x000024 (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000028 (0x0008)              
};

bool UUIContextMenu::InsertMenuItem(class UUIObject* Widget,struct FString Item,int InsertIndex,bool bAllowDuplicates)
{
	static UFieldFunc* pFnInsertMenuItem = NULL;
	if(!pFnInsertMenuItem)
		pFnInsertMenuItem = UObject::FindFunction("Function Engine.UIContextMenu.InsertMenuItem");

	Engine_InsertMenuItem_Parms InsertMenuItem_Parms;
	InsertMenuItem_Parms.Widget = Widget;
	memcpy(&InsertMenuItem_Parms.Item,&Item,0xC);
	InsertMenuItem_Parms.InsertIndex = InsertIndex;
	InsertMenuItem_Parms.bAllowDuplicates = bAllowDuplicates;
	ProcessEvent(pFnInsertMenuItem,NULL,&InsertMenuItem_Parms,NULL);
	return InsertMenuItem_Parms.ReturnValue;
}

struct Engine_IsActiveContextMenu_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIContextMenu::IsActiveContextMenu()
{
	static UFieldFunc* pFnIsActiveContextMenu = NULL;
	if(!pFnIsActiveContextMenu)
		pFnIsActiveContextMenu = UObject::FindFunction("Function Engine.UIContextMenu.IsActiveContextMenu");

	Engine_IsActiveContextMenu_Parms IsActiveContextMenu_Parms;
	pFnIsActiveContextMenu->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsActiveContextMenu,NULL,&IsActiveContextMenu_Parms,NULL);
	pFnIsActiveContextMenu->FunctionFlags |= 0x400;
	return IsActiveContextMenu_Parms.ReturnValue;
}

struct Engine_ClearMenuItems_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x00000C (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x000010 (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000014 (0x0008)              
};

bool UUIContextMenu::ClearMenuItems(class UUIObject* Widget)
{
	static UFieldFunc* pFnClearMenuItems = NULL;
	if(!pFnClearMenuItems)
		pFnClearMenuItems = UObject::FindFunction("Function Engine.UIContextMenu.ClearMenuItems");

	Engine_ClearMenuItems_Parms ClearMenuItems_Parms;
	ClearMenuItems_Parms.Widget = Widget;
	ProcessEvent(pFnClearMenuItems,NULL,&ClearMenuItems_Parms,NULL);
	return ClearMenuItems_Parms.ReturnValue;
}

struct Engine_Open_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIContextMenu::Open(int PlayerIndex)
{
	static UFieldFunc* pFnOpen = NULL;
	if(!pFnOpen)
		pFnOpen = UObject::FindFunction("Function Engine.UIContextMenu.Open");

	Engine_Open_Parms Open_Parms;
	Open_Parms.PlayerIndex = PlayerIndex;
	pFnOpen->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOpen,NULL,&Open_Parms,NULL);
	pFnOpen->FunctionFlags |= 0x400;
	return Open_Parms.ReturnValue;
}

struct Engine_GetMenuItem_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	int                                                IndexToGet;                                       		// 0x000004 (0x0004)              
	struct FString                                     out_MenuItem;                                     		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x00001C (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x000020 (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000024 (0x0008)              
};

bool UUIContextMenu::GetMenuItem(class UUIObject* Widget,int IndexToGet,struct FString* out_MenuItem)
{
	static UFieldFunc* pFnGetMenuItem = NULL;
	if(!pFnGetMenuItem)
		pFnGetMenuItem = UObject::FindFunction("Function Engine.UIContextMenu.GetMenuItem");

	Engine_GetMenuItem_Parms GetMenuItem_Parms;
	GetMenuItem_Parms.Widget = Widget;
	GetMenuItem_Parms.IndexToGet = IndexToGet;
	ProcessEvent(pFnGetMenuItem,NULL,&GetMenuItem_Parms,NULL);
	if(out_MenuItem)
		memcpy(out_MenuItem,&GetMenuItem_Parms.out_MenuItem,0xC);
	return GetMenuItem_Parms.ReturnValue;
}

struct Engine_SetMenuItems_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	TArray<struct FString>                             NewMenuItems;                                     		// 0x000004 (0x000C)              
	unsigned long                                      bClearExisting : 1;                               		// 0x000010 (0x0004) [0x00000001] 
	int                                                InsertIndex;                                      		// 0x000014 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x000020 (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x000024 (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000028 (0x0008)              
};

bool UUIContextMenu::SetMenuItems(class UUIObject* Widget,TArray<struct FString> NewMenuItems,bool bClearExisting,int InsertIndex)
{
	static UFieldFunc* pFnSetMenuItems = NULL;
	if(!pFnSetMenuItems)
		pFnSetMenuItems = UObject::FindFunction("Function Engine.UIContextMenu.SetMenuItems");

	Engine_SetMenuItems_Parms SetMenuItems_Parms;
	SetMenuItems_Parms.Widget = Widget;
	memcpy(&SetMenuItems_Parms.NewMenuItems,&NewMenuItems,0xC);
	SetMenuItems_Parms.bClearExisting = bClearExisting;
	SetMenuItems_Parms.InsertIndex = InsertIndex;
	ProcessEvent(pFnSetMenuItems,NULL,&SetMenuItems_Parms,NULL);
	return SetMenuItems_Parms.ReturnValue;
}

struct Engine_RemoveMenuItemAtIndex_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	int                                                IndexToRemove;                                    		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x000010 (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x000014 (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000018 (0x0008)              
};

bool UUIContextMenu::RemoveMenuItemAtIndex(class UUIObject* Widget,int IndexToRemove)
{
	static UFieldFunc* pFnRemoveMenuItemAtIndex = NULL;
	if(!pFnRemoveMenuItemAtIndex)
		pFnRemoveMenuItemAtIndex = UObject::FindFunction("Function Engine.UIContextMenu.RemoveMenuItemAtIndex");

	Engine_RemoveMenuItemAtIndex_Parms RemoveMenuItemAtIndex_Parms;
	RemoveMenuItemAtIndex_Parms.Widget = Widget;
	RemoveMenuItemAtIndex_Parms.IndexToRemove = IndexToRemove;
	ProcessEvent(pFnRemoveMenuItemAtIndex,NULL,&RemoveMenuItemAtIndex_Parms,NULL);
	return RemoveMenuItemAtIndex_Parms.ReturnValue;
}

struct Engine_RemoveMenuItem_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	struct FString                                     ItemToRemove;                                     		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x000018 (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x00001C (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000020 (0x0008)              
};

bool UUIContextMenu::RemoveMenuItem(class UUIObject* Widget,struct FString ItemToRemove)
{
	static UFieldFunc* pFnRemoveMenuItem = NULL;
	if(!pFnRemoveMenuItem)
		pFnRemoveMenuItem = UObject::FindFunction("Function Engine.UIContextMenu.RemoveMenuItem");

	Engine_RemoveMenuItem_Parms RemoveMenuItem_Parms;
	RemoveMenuItem_Parms.Widget = Widget;
	memcpy(&RemoveMenuItem_Parms.ItemToRemove,&ItemToRemove,0xC);
	ProcessEvent(pFnRemoveMenuItem,NULL,&RemoveMenuItem_Parms,NULL);
	return RemoveMenuItem_Parms.ReturnValue;
}

struct Engine_GetAllMenuItems_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	TArray<struct FString>                             out_MenuItems;                                    		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
	//class UUIScene*                                    SceneOwner;                                       		// 0x000018 (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x00001C (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000020 (0x0008)              
};

bool UUIContextMenu::GetAllMenuItems(class UUIObject* Widget,TArray<struct FString>* out_MenuItems)
{
	static UFieldFunc* pFnGetAllMenuItems = NULL;
	if(!pFnGetAllMenuItems)
		pFnGetAllMenuItems = UObject::FindFunction("Function Engine.UIContextMenu.GetAllMenuItems");

	Engine_GetAllMenuItems_Parms GetAllMenuItems_Parms;
	GetAllMenuItems_Parms.Widget = Widget;
	ProcessEvent(pFnGetAllMenuItems,NULL,&GetAllMenuItems_Parms,NULL);
	if(out_MenuItems)
		memcpy(out_MenuItems,&GetAllMenuItems_Parms.out_MenuItems,0xC);
	return GetAllMenuItems_Parms.ReturnValue;
}

struct Engine_Close_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIContextMenu::Close(int PlayerIndex)
{
	static UFieldFunc* pFnClose = NULL;
	if(!pFnClose)
		pFnClose = UObject::FindFunction("Function Engine.UIContextMenu.Close");

	Engine_Close_Parms Close_Parms;
	Close_Parms.PlayerIndex = PlayerIndex;
	pFnClose->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClose,NULL,&Close_Parms,NULL);
	pFnClose->FunctionFlags |= 0x400;
	return Close_Parms.ReturnValue;
}

struct Engine_FindMenuItemIndex_Parms
{
	class UUIObject*                                   Widget;                                           		// 0x000000 (0x0004)              
	struct FString                                     ItemToFind;                                       		// 0x000004 (0x000C)              
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
	//int                                                Result;                                           		// 0x000014 (0x0004)              
	//class UUIScene*                                    SceneOwner;                                       		// 0x000018 (0x0004)              
	//class USceneDataStore*                             SceneDS;                                          		// 0x00001C (0x0004)              
	//struct FName                                       WidgetDSTag;                                      		// 0x000020 (0x0008)              
};

int UUIContextMenu::FindMenuItemIndex(class UUIObject* Widget,struct FString ItemToFind)
{
	static UFieldFunc* pFnFindMenuItemIndex = NULL;
	if(!pFnFindMenuItemIndex)
		pFnFindMenuItemIndex = UObject::FindFunction("Function Engine.UIContextMenu.FindMenuItemIndex");

	Engine_FindMenuItemIndex_Parms FindMenuItemIndex_Parms;
	FindMenuItemIndex_Parms.Widget = Widget;
	memcpy(&FindMenuItemIndex_Parms.ItemToFind,&ItemToFind,0xC);
	ProcessEvent(pFnFindMenuItemIndex,NULL,&FindMenuItemIndex_Parms,NULL);
	return FindMenuItemIndex_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIDataStoreSubscriber::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIDataStoreSubscriber.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIDataStoreSubscriber::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIDataStoreSubscriber.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIDataStoreSubscriber::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIDataStoreSubscriber.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIDataStoreSubscriber::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIDataStoreSubscriber.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIDataStoreSubscriber::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIDataStoreSubscriber.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIDataStoreSubscriber::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIDataStoreSubscriber.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIDataStorePublisher::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIDataStorePublisher.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_ApplyAnimation_Parms
{
	class UUIObject*                                   TargetWidget;                                     		// 0x000000 (0x0004)              
	int                                                TrackIndex;                                       		// 0x000004 (0x0004)              
	float                                              Position;                                         		// 0x000008 (0x0004)              
	int                                                LFI;                                              		// 0x00000C (0x0004)              
	int                                                NFI;                                              		// 0x000010 (0x0004)              
	struct FUIAnimSeqRef                               AnimRefInst;                                      		// 0x000014 (0x002C)              
};

void UUIAnimationSeq::ApplyAnimation(class UUIObject* TargetWidget,int TrackIndex,float Position,int LFI,int NFI,struct FUIAnimSeqRef AnimRefInst)
{
	static UFieldFunc* pFnApplyAnimation = NULL;
	if(!pFnApplyAnimation)
		pFnApplyAnimation = UObject::FindFunction("Function Engine.UIAnimationSeq.ApplyAnimation");

	Engine_ApplyAnimation_Parms ApplyAnimation_Parms;
	ApplyAnimation_Parms.TargetWidget = TargetWidget;
	ApplyAnimation_Parms.TrackIndex = TrackIndex;
	ApplyAnimation_Parms.Position = Position;
	ApplyAnimation_Parms.LFI = LFI;
	ApplyAnimation_Parms.NFI = NFI;
	memcpy(&ApplyAnimation_Parms.AnimRefInst,&AnimRefInst,0x2C);
	pFnApplyAnimation->FunctionFlags |= ~0x400;
	ProcessEvent(pFnApplyAnimation,NULL,&ApplyAnimation_Parms,NULL);
	pFnApplyAnimation->FunctionFlags |= 0x400;
}

struct Engine_OnUnregister_Parms
{
};

void UUIDataProvider_OnlinePlayerDataBase::OnUnregister()
{
	static UFieldFunc* pFnOnUnregister = NULL;
	if(!pFnOnUnregister)
		pFnOnUnregister = UObject::FindFunction("Function Engine.UIDataProvider_OnlinePlayerDataBase.OnUnregister");

	Engine_OnUnregister_Parms OnUnregister_Parms;
	ProcessEvent(pFnOnUnregister,NULL,&OnUnregister_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
};

void UUIDataProvider_OnlinePlayerDataBase::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataProvider_OnlinePlayerDataBase.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineClanMates::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineClanMates.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnClanMatesReadComplete_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlineClanMates::OnClanMatesReadComplete()
{
	static UFieldFunc* pFnOnClanMatesReadComplete = NULL;
	if(!pFnOnClanMatesReadComplete)
		pFnOnClanMatesReadComplete = UObject::FindFunction("Function Engine.UIDataProvider_OnlineClanMates.OnClanMatesReadComplete");

	Engine_OnClanMatesReadComplete_Parms OnClanMatesReadComplete_Parms;
	ProcessEvent(pFnOnClanMatesReadComplete,NULL,&OnClanMatesReadComplete_Parms,NULL);
}

struct Engine_OnFriendMessageReceived_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                SendingPlayer;                                    		// 0x000004 (0x0008)              
	struct FString                                     SendingNick;                                      		// 0x00000C (0x000C)              
	struct FString                                     Message;                                          		// 0x000018 (0x000C)              
};

void UUIDataProvider_OnlineFriendMessages::OnFriendMessageReceived(unsigned char LocalUserNum,struct FUniqueNetId SendingPlayer,struct FString SendingNick,struct FString Message)
{
	static UFieldFunc* pFnOnFriendMessageReceived = NULL;
	if(!pFnOnFriendMessageReceived)
		pFnOnFriendMessageReceived = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendMessageReceived");

	Engine_OnFriendMessageReceived_Parms OnFriendMessageReceived_Parms;
	OnFriendMessageReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy(&OnFriendMessageReceived_Parms.SendingPlayer,&SendingPlayer,0x8);
	memcpy(&OnFriendMessageReceived_Parms.SendingNick,&SendingNick,0xC);
	memcpy(&OnFriendMessageReceived_Parms.Message,&Message,0xC);
	ProcessEvent(pFnOnFriendMessageReceived,NULL,&OnFriendMessageReceived_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineFriendMessages::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnGameInviteReceived_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     InviterName;                                      		// 0x000004 (0x000C)              
};

void UUIDataProvider_OnlineFriendMessages::OnGameInviteReceived(unsigned char LocalUserNum,struct FString InviterName)
{
	static UFieldFunc* pFnOnGameInviteReceived = NULL;
	if(!pFnOnGameInviteReceived)
		pFnOnGameInviteReceived = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.OnGameInviteReceived");

	Engine_OnGameInviteReceived_Parms OnGameInviteReceived_Parms;
	OnGameInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy(&OnGameInviteReceived_Parms.InviterName,&InviterName,0xC);
	ProcessEvent(pFnOnGameInviteReceived,NULL,&OnGameInviteReceived_Parms,NULL);
}

struct Engine_ReadMessages_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlineFriendMessages::ReadMessages()
{
	static UFieldFunc* pFnReadMessages = NULL;
	if(!pFnReadMessages)
		pFnReadMessages = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.ReadMessages");

	Engine_ReadMessages_Parms ReadMessages_Parms;
	ProcessEvent(pFnReadMessages,NULL,&ReadMessages_Parms,NULL);
}

struct Engine_OnFriendInviteReceived_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                RequestingPlayer;                                 		// 0x000004 (0x0008)              
	struct FString                                     RequestingNick;                                   		// 0x00000C (0x000C)              
	struct FString                                     Message;                                          		// 0x000018 (0x000C)              
};

void UUIDataProvider_OnlineFriendMessages::OnFriendInviteReceived(unsigned char LocalUserNum,struct FUniqueNetId RequestingPlayer,struct FString RequestingNick,struct FString Message)
{
	static UFieldFunc* pFnOnFriendInviteReceived = NULL;
	if(!pFnOnFriendInviteReceived)
		pFnOnFriendInviteReceived = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendInviteReceived");

	Engine_OnFriendInviteReceived_Parms OnFriendInviteReceived_Parms;
	OnFriendInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy(&OnFriendInviteReceived_Parms.RequestingPlayer,&RequestingPlayer,0x8);
	memcpy(&OnFriendInviteReceived_Parms.RequestingNick,&RequestingNick,0xC);
	memcpy(&OnFriendInviteReceived_Parms.Message,&Message,0xC);
	ProcessEvent(pFnOnFriendInviteReceived,NULL,&OnFriendInviteReceived_Parms,NULL);
}

struct Engine_OnLoginChange_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
};

void UUIDataProvider_OnlineFriendMessages::OnLoginChange(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChange = NULL;
	if(!pFnOnLoginChange)
		pFnOnLoginChange = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.OnLoginChange");

	Engine_OnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChange,NULL,&OnLoginChange_Parms,NULL);
}

struct Engine_OnUnregister_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlineFriendMessages::OnUnregister()
{
	static UFieldFunc* pFnOnUnregister = NULL;
	if(!pFnOnUnregister)
		pFnOnUnregister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriendMessages.OnUnregister");

	Engine_OnUnregister_Parms OnUnregister_Parms;
	ProcessEvent(pFnOnUnregister,NULL,&OnUnregister_Parms,NULL);
}

struct Engine_OnFriendsReadComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineFriends::OnFriendsReadComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnFriendsReadComplete = NULL;
	if(!pFnOnFriendsReadComplete)
		pFnOnFriendsReadComplete = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriends.OnFriendsReadComplete");

	Engine_OnFriendsReadComplete_Parms OnFriendsReadComplete_Parms;
	OnFriendsReadComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnFriendsReadComplete,NULL,&OnFriendsReadComplete_Parms,NULL);
}

struct Engine_OnUnregister_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlineFriends::OnUnregister()
{
	static UFieldFunc* pFnOnUnregister = NULL;
	if(!pFnOnUnregister)
		pFnOnUnregister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriends.OnUnregister");

	Engine_OnUnregister_Parms OnUnregister_Parms;
	ProcessEvent(pFnOnUnregister,NULL,&OnUnregister_Parms,NULL);
}

struct Engine_RefreshFriendsList_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlineFriends::RefreshFriendsList()
{
	static UFieldFunc* pFnRefreshFriendsList = NULL;
	if(!pFnRefreshFriendsList)
		pFnRefreshFriendsList = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriends.RefreshFriendsList");

	Engine_RefreshFriendsList_Parms RefreshFriendsList_Parms;
	ProcessEvent(pFnRefreshFriendsList,NULL,&RefreshFriendsList_Parms,NULL);
}

struct Engine_OnLoginChange_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineFriends::OnLoginChange(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChange = NULL;
	if(!pFnOnLoginChange)
		pFnOnLoginChange = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriends.OnLoginChange");

	Engine_OnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChange,NULL,&OnLoginChange_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineFriends::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineFriends.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlinePlayers::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataProvider_OnlinePlayers.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnPlayersReadComplete_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlinePlayers::OnPlayersReadComplete()
{
	static UFieldFunc* pFnOnPlayersReadComplete = NULL;
	if(!pFnOnPlayersReadComplete)
		pFnOnPlayersReadComplete = UObject::FindFunction("Function Engine.UIDataProvider_OnlinePlayers.OnPlayersReadComplete");

	Engine_OnPlayersReadComplete_Parms OnPlayersReadComplete_Parms;
	ProcessEvent(pFnOnPlayersReadComplete,NULL,&OnPlayersReadComplete_Parms,NULL);
}

struct Engine_OnReadProfileComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000008 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x00000C (0x0008)              
};

void UUIDataProvider_OnlineProfileSettings::OnReadProfileComplete(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadProfileComplete = NULL;
	if(!pFnOnReadProfileComplete)
		pFnOnReadProfileComplete = UObject::FindFunction("Function Engine.UIDataProvider_OnlineProfileSettings.OnReadProfileComplete");

	Engine_OnReadProfileComplete_Parms OnReadProfileComplete_Parms;
	OnReadProfileComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadProfileComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadProfileComplete,NULL,&OnReadProfileComplete_Parms,NULL);
}

struct Engine_SaveProfileData_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

bool UUIDataProvider_OnlineProfileSettings::SaveProfileData()
{
	static UFieldFunc* pFnSaveProfileData = NULL;
	if(!pFnSaveProfileData)
		pFnSaveProfileData = UObject::FindFunction("Function Engine.UIDataProvider_OnlineProfileSettings.SaveProfileData");

	Engine_SaveProfileData_Parms SaveProfileData_Parms;
	ProcessEvent(pFnSaveProfileData,NULL,&SaveProfileData_Parms,NULL);
	return SaveProfileData_Parms.ReturnValue;
}

struct Engine_OnUnregister_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataProvider_OnlineProfileSettings::OnUnregister()
{
	static UFieldFunc* pFnOnUnregister = NULL;
	if(!pFnOnUnregister)
		pFnOnUnregister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineProfileSettings.OnUnregister");

	Engine_OnUnregister_Parms OnUnregister_Parms;
	ProcessEvent(pFnOnUnregister,NULL,&OnUnregister_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineProfileSettings::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataProvider_OnlineProfileSettings.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnLoginChange_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataProvider_OnlineProfileSettings::OnLoginChange(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChange = NULL;
	if(!pFnOnLoginChange)
		pFnOnLoginChange = UObject::FindFunction("Function Engine.UIDataProvider_OnlineProfileSettings.OnLoginChange");

	Engine_OnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChange,NULL,&OnLoginChange_Parms,NULL);
}

struct Engine_SetInputLanguageId_Parms
{
	struct FString                                     sInputLangId;                                     		// 0x000000 (0x000C)              
	unsigned long                                      bHasIME : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bIMEActive : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
};

void UcUIDataStore_Localisation::SetInputLanguageId(struct FString sInputLangId,bool bHasIME,bool bIMEActive)
{
	static UFieldFunc* pFnSetInputLanguageId = NULL;
	if(!pFnSetInputLanguageId)
		pFnSetInputLanguageId = UObject::FindFunction("Function Engine.cUIDataStore_Localisation.SetInputLanguageId");

	Engine_SetInputLanguageId_Parms SetInputLanguageId_Parms;
	memcpy(&SetInputLanguageId_Parms.sInputLangId,&sInputLangId,0xC);
	SetInputLanguageId_Parms.bHasIME = bHasIME;
	SetInputLanguageId_Parms.bIMEActive = bIMEActive;
	pFnSetInputLanguageId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetInputLanguageId,NULL,&SetInputLanguageId_Parms,NULL);
	pFnSetInputLanguageId->FunctionFlags |= 0x400;
}

struct Engine_GetCollectionValueArray_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	TArray<struct FString>                             out_DataValueArray;                               		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000018 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool USceneDataStore::GetCollectionValueArray(struct FName FieldName,TArray<struct FString>* out_DataValueArray,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnGetCollectionValueArray = NULL;
	if(!pFnGetCollectionValueArray)
		pFnGetCollectionValueArray = UObject::FindFunction("Function Engine.SceneDataStore.GetCollectionValueArray");

	Engine_GetCollectionValueArray_Parms GetCollectionValueArray_Parms;
	memcpy(&GetCollectionValueArray_Parms.FieldName,&FieldName,0x8);
	GetCollectionValueArray_Parms.bPersistent = bPersistent;
	memcpy(&GetCollectionValueArray_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnGetCollectionValueArray,NULL,&GetCollectionValueArray_Parms,NULL);
	if(out_DataValueArray)
		memcpy(out_DataValueArray,&GetCollectionValueArray_Parms.out_DataValueArray,0xC);
	return GetCollectionValueArray_Parms.ReturnValue;
}

struct Engine_ClearFields_Parms
{
	unsigned long                                      bReinitializeRuntimeFields : 1;                   		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USceneDataStore::ClearFields(bool bReinitializeRuntimeFields)
{
	static UFieldFunc* pFnClearFields = NULL;
	if(!pFnClearFields)
		pFnClearFields = UObject::FindFunction("Function Engine.SceneDataStore.ClearFields");

	Engine_ClearFields_Parms ClearFields_Parms;
	ClearFields_Parms.bReinitializeRuntimeFields = bReinitializeRuntimeFields;
	ProcessEvent(pFnClearFields,NULL,&ClearFields_Parms,NULL);
	return ClearFields_Parms.ReturnValue;
}

struct Engine_ClearCollectionValueArray_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool USceneDataStore::ClearCollectionValueArray(struct FName FieldName,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnClearCollectionValueArray = NULL;
	if(!pFnClearCollectionValueArray)
		pFnClearCollectionValueArray = UObject::FindFunction("Function Engine.SceneDataStore.ClearCollectionValueArray");

	Engine_ClearCollectionValueArray_Parms ClearCollectionValueArray_Parms;
	memcpy(&ClearCollectionValueArray_Parms.FieldName,&FieldName,0x8);
	ClearCollectionValueArray_Parms.bPersistent = bPersistent;
	memcpy(&ClearCollectionValueArray_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnClearCollectionValueArray,NULL,&ClearCollectionValueArray_Parms,NULL);
	return ClearCollectionValueArray_Parms.ReturnValue;
}

struct Engine_ReplaceCollectionValueByIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	struct FString                                     NewValue;                                         		// 0x00000C (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x00001C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool USceneDataStore::ReplaceCollectionValueByIndex(struct FName FieldName,int ValueIndex,struct FString* NewValue,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnReplaceCollectionValueByIndex = NULL;
	if(!pFnReplaceCollectionValueByIndex)
		pFnReplaceCollectionValueByIndex = UObject::FindFunction("Function Engine.SceneDataStore.ReplaceCollectionValueByIndex");

	Engine_ReplaceCollectionValueByIndex_Parms ReplaceCollectionValueByIndex_Parms;
	memcpy(&ReplaceCollectionValueByIndex_Parms.FieldName,&FieldName,0x8);
	ReplaceCollectionValueByIndex_Parms.ValueIndex = ValueIndex;
	ReplaceCollectionValueByIndex_Parms.bPersistent = bPersistent;
	memcpy(&ReplaceCollectionValueByIndex_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnReplaceCollectionValueByIndex,NULL,&ReplaceCollectionValueByIndex_Parms,NULL);
	if(NewValue)
		memcpy(NewValue,&ReplaceCollectionValueByIndex_Parms.NewValue,0xC);
	return ReplaceCollectionValueByIndex_Parms.ReturnValue;
}

struct Engine_ReplaceCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     CurrentValue;                                     		// 0x000008 (0x000C)              
	struct FString                                     NewValue;                                         		// 0x000014 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000024 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00002C (0x0004) [0x00000001] 
};

bool USceneDataStore::ReplaceCollectionValue(struct FName FieldName,struct FString* CurrentValue,struct FString* NewValue,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnReplaceCollectionValue = NULL;
	if(!pFnReplaceCollectionValue)
		pFnReplaceCollectionValue = UObject::FindFunction("Function Engine.SceneDataStore.ReplaceCollectionValue");

	Engine_ReplaceCollectionValue_Parms ReplaceCollectionValue_Parms;
	memcpy(&ReplaceCollectionValue_Parms.FieldName,&FieldName,0x8);
	ReplaceCollectionValue_Parms.bPersistent = bPersistent;
	memcpy(&ReplaceCollectionValue_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnReplaceCollectionValue,NULL,&ReplaceCollectionValue_Parms,NULL);
	if(CurrentValue)
		memcpy(CurrentValue,&ReplaceCollectionValue_Parms.CurrentValue,0xC);
	if(NewValue)
		memcpy(NewValue,&ReplaceCollectionValue_Parms.NewValue,0xC);
	return ReplaceCollectionValue_Parms.ReturnValue;
}

struct Engine_RemoveCollectionValueByIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	unsigned long                                      bPersistent : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000010 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool USceneDataStore::RemoveCollectionValueByIndex(struct FName FieldName,int ValueIndex,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnRemoveCollectionValueByIndex = NULL;
	if(!pFnRemoveCollectionValueByIndex)
		pFnRemoveCollectionValueByIndex = UObject::FindFunction("Function Engine.SceneDataStore.RemoveCollectionValueByIndex");

	Engine_RemoveCollectionValueByIndex_Parms RemoveCollectionValueByIndex_Parms;
	memcpy(&RemoveCollectionValueByIndex_Parms.FieldName,&FieldName,0x8);
	RemoveCollectionValueByIndex_Parms.ValueIndex = ValueIndex;
	RemoveCollectionValueByIndex_Parms.bPersistent = bPersistent;
	memcpy(&RemoveCollectionValueByIndex_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnRemoveCollectionValueByIndex,NULL,&RemoveCollectionValueByIndex_Parms,NULL);
	return RemoveCollectionValueByIndex_Parms.ReturnValue;
}

struct Engine_AddField_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned char                                      FieldType;                                        		// 0x000008 (0x0001)              
	unsigned long                                      bPersistent : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	int                                                out_InsertPosition;                               		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool USceneDataStore::AddField(struct FName FieldName,unsigned char FieldType,bool bPersistent,int* out_InsertPosition)
{
	static UFieldFunc* pFnAddField = NULL;
	if(!pFnAddField)
		pFnAddField = UObject::FindFunction("Function Engine.SceneDataStore.AddField");

	Engine_AddField_Parms AddField_Parms;
	memcpy(&AddField_Parms.FieldName,&FieldName,0x8);
	AddField_Parms.FieldType = FieldType;
	AddField_Parms.bPersistent = bPersistent;
	ProcessEvent(pFnAddField,NULL,&AddField_Parms,NULL);
	if(out_InsertPosition)
		*out_InsertPosition = AddField_Parms.out_InsertPosition;
	return AddField_Parms.ReturnValue;
}

struct Engine_GetCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	struct FString                                     out_Value;                                        		// 0x00000C (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x00001C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool USceneDataStore::GetCollectionValue(struct FName FieldName,int ValueIndex,struct FString* out_Value,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnGetCollectionValue = NULL;
	if(!pFnGetCollectionValue)
		pFnGetCollectionValue = UObject::FindFunction("Function Engine.SceneDataStore.GetCollectionValue");

	Engine_GetCollectionValue_Parms GetCollectionValue_Parms;
	memcpy(&GetCollectionValue_Parms.FieldName,&FieldName,0x8);
	GetCollectionValue_Parms.ValueIndex = ValueIndex;
	GetCollectionValue_Parms.bPersistent = bPersistent;
	memcpy(&GetCollectionValue_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnGetCollectionValue,NULL,&GetCollectionValue_Parms,NULL);
	if(out_Value)
		memcpy(out_Value,&GetCollectionValue_Parms.out_Value,0xC);
	return GetCollectionValue_Parms.ReturnValue;
}

struct Engine_RemoveCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     ValueToRemove;                                    		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000018 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool USceneDataStore::RemoveCollectionValue(struct FName FieldName,struct FString* ValueToRemove,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnRemoveCollectionValue = NULL;
	if(!pFnRemoveCollectionValue)
		pFnRemoveCollectionValue = UObject::FindFunction("Function Engine.SceneDataStore.RemoveCollectionValue");

	Engine_RemoveCollectionValue_Parms RemoveCollectionValue_Parms;
	memcpy(&RemoveCollectionValue_Parms.FieldName,&FieldName,0x8);
	RemoveCollectionValue_Parms.bPersistent = bPersistent;
	memcpy(&RemoveCollectionValue_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnRemoveCollectionValue,NULL,&RemoveCollectionValue_Parms,NULL);
	if(ValueToRemove)
		memcpy(ValueToRemove,&RemoveCollectionValue_Parms.ValueToRemove,0xC);
	return RemoveCollectionValue_Parms.ReturnValue;
}

struct Engine_FindCollectionValueIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     ValueToFind;                                      		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000018 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000020 (0x0004)              
};

int USceneDataStore::FindCollectionValueIndex(struct FName FieldName,struct FString* ValueToFind,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnFindCollectionValueIndex = NULL;
	if(!pFnFindCollectionValueIndex)
		pFnFindCollectionValueIndex = UObject::FindFunction("Function Engine.SceneDataStore.FindCollectionValueIndex");

	Engine_FindCollectionValueIndex_Parms FindCollectionValueIndex_Parms;
	memcpy(&FindCollectionValueIndex_Parms.FieldName,&FieldName,0x8);
	FindCollectionValueIndex_Parms.bPersistent = bPersistent;
	memcpy(&FindCollectionValueIndex_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnFindCollectionValueIndex,NULL,&FindCollectionValueIndex_Parms,NULL);
	if(ValueToFind)
		memcpy(ValueToFind,&FindCollectionValueIndex_Parms.ValueToFind,0xC);
	return FindCollectionValueIndex_Parms.ReturnValue;
}

struct Engine_FindFieldIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      bSearchPersistentFields : 1;                      		// 0x000008 (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int USceneDataStore::FindFieldIndex(struct FName FieldName,bool bSearchPersistentFields)
{
	static UFieldFunc* pFnFindFieldIndex = NULL;
	if(!pFnFindFieldIndex)
		pFnFindFieldIndex = UObject::FindFunction("Function Engine.SceneDataStore.FindFieldIndex");

	Engine_FindFieldIndex_Parms FindFieldIndex_Parms;
	memcpy(&FindFieldIndex_Parms.FieldName,&FieldName,0x8);
	FindFieldIndex_Parms.bSearchPersistentFields = bSearchPersistentFields;
	ProcessEvent(pFnFindFieldIndex,NULL,&FindFieldIndex_Parms,NULL);
	return FindFieldIndex_Parms.ReturnValue;
}

struct Engine_RemoveField_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool USceneDataStore::RemoveField(struct FName FieldName)
{
	static UFieldFunc* pFnRemoveField = NULL;
	if(!pFnRemoveField)
		pFnRemoveField = UObject::FindFunction("Function Engine.SceneDataStore.RemoveField");

	Engine_RemoveField_Parms RemoveField_Parms;
	memcpy(&RemoveField_Parms.FieldName,&FieldName,0x8);
	ProcessEvent(pFnRemoveField,NULL,&RemoveField_Parms,NULL);
	return RemoveField_Parms.ReturnValue;
}

struct Engine_SetCollectionValueArray_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	TArray<struct FString>                             CollectionValues;                                 		// 0x000008 (0x000C)              
	unsigned long                                      bClearExisting : 1;                               		// 0x000014 (0x0004) [0x00000001] 
	int                                                InsertIndex;                                      		// 0x000018 (0x0004)              
	unsigned long                                      bPersistent : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000020 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool USceneDataStore::SetCollectionValueArray(struct FName FieldName,TArray<struct FString>* CollectionValues,bool bClearExisting,int InsertIndex,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnSetCollectionValueArray = NULL;
	if(!pFnSetCollectionValueArray)
		pFnSetCollectionValueArray = UObject::FindFunction("Function Engine.SceneDataStore.SetCollectionValueArray");

	Engine_SetCollectionValueArray_Parms SetCollectionValueArray_Parms;
	memcpy(&SetCollectionValueArray_Parms.FieldName,&FieldName,0x8);
	SetCollectionValueArray_Parms.bClearExisting = bClearExisting;
	SetCollectionValueArray_Parms.InsertIndex = InsertIndex;
	SetCollectionValueArray_Parms.bPersistent = bPersistent;
	memcpy(&SetCollectionValueArray_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnSetCollectionValueArray,NULL,&SetCollectionValueArray_Parms,NULL);
	if(CollectionValues)
		memcpy(CollectionValues,&SetCollectionValueArray_Parms.CollectionValues,0xC);
	return SetCollectionValueArray_Parms.ReturnValue;
}

struct Engine_InsertCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     NewValue;                                         		// 0x000008 (0x000C)              
	int                                                InsertIndex;                                      		// 0x000014 (0x0004)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bAllowDuplicateValues : 1;                        		// 0x00001C (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000020 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool USceneDataStore::InsertCollectionValue(struct FName FieldName,struct FString* NewValue,int InsertIndex,bool bPersistent,bool bAllowDuplicateValues,struct FName CellTag)
{
	static UFieldFunc* pFnInsertCollectionValue = NULL;
	if(!pFnInsertCollectionValue)
		pFnInsertCollectionValue = UObject::FindFunction("Function Engine.SceneDataStore.InsertCollectionValue");

	Engine_InsertCollectionValue_Parms InsertCollectionValue_Parms;
	memcpy(&InsertCollectionValue_Parms.FieldName,&FieldName,0x8);
	InsertCollectionValue_Parms.InsertIndex = InsertIndex;
	InsertCollectionValue_Parms.bPersistent = bPersistent;
	InsertCollectionValue_Parms.bAllowDuplicateValues = bAllowDuplicateValues;
	memcpy(&InsertCollectionValue_Parms.CellTag,&CellTag,0x8);
	ProcessEvent(pFnInsertCollectionValue,NULL,&InsertCollectionValue_Parms,NULL);
	if(NewValue)
		memcpy(NewValue,&InsertCollectionValue_Parms.NewValue,0xC);
	return InsertCollectionValue_Parms.ReturnValue;
}

struct Engine_GetResourceProviderFields_Parms
{
	struct FName                                       ProviderTag;                                      		// 0x000000 (0x0008)              
	TArray<struct FName>                               ProviderFieldTags;                                		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIDataStore_GameResource::GetResourceProviderFields(struct FName ProviderTag,TArray<struct FName>* ProviderFieldTags)
{
	static UFieldFunc* pFnGetResourceProviderFields = NULL;
	if(!pFnGetResourceProviderFields)
		pFnGetResourceProviderFields = UObject::FindFunction("Function Engine.UIDataStore_GameResource.GetResourceProviderFields");

	Engine_GetResourceProviderFields_Parms GetResourceProviderFields_Parms;
	memcpy(&GetResourceProviderFields_Parms.ProviderTag,&ProviderTag,0x8);
	pFnGetResourceProviderFields->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetResourceProviderFields,NULL,&GetResourceProviderFields_Parms,NULL);
	pFnGetResourceProviderFields->FunctionFlags |= 0x400;
	if(ProviderFieldTags)
		memcpy(ProviderFieldTags,&GetResourceProviderFields_Parms.ProviderFieldTags,0xC);
	return GetResourceProviderFields_Parms.ReturnValue;
}

struct Engine_FindProviderIndexByFieldValue_Parms
{
	struct FName                                       ProviderTag;                                      		// 0x000000 (0x0008)              
	struct FName                                       SearchField;                                      		// 0x000008 (0x0008)              
	struct FUIProviderScriptFieldValue                 ValueToSearchFor;                                 		// 0x000010 (0x0040)              
	int                                                ReturnValue;                                      		// 0x000050 (0x0004)              
};

int UUIDataStore_GameResource::FindProviderIndexByFieldValue(struct FName ProviderTag,struct FName SearchField,struct FUIProviderScriptFieldValue* ValueToSearchFor)
{
	static UFieldFunc* pFnFindProviderIndexByFieldValue = NULL;
	if(!pFnFindProviderIndexByFieldValue)
		pFnFindProviderIndexByFieldValue = UObject::FindFunction("Function Engine.UIDataStore_GameResource.FindProviderIndexByFieldValue");

	Engine_FindProviderIndexByFieldValue_Parms FindProviderIndexByFieldValue_Parms;
	memcpy(&FindProviderIndexByFieldValue_Parms.ProviderTag,&ProviderTag,0x8);
	memcpy(&FindProviderIndexByFieldValue_Parms.SearchField,&SearchField,0x8);
	pFnFindProviderIndexByFieldValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindProviderIndexByFieldValue,NULL,&FindProviderIndexByFieldValue_Parms,NULL);
	pFnFindProviderIndexByFieldValue->FunctionFlags |= 0x400;
	if(ValueToSearchFor)
		memcpy(ValueToSearchFor,&FindProviderIndexByFieldValue_Parms.ValueToSearchFor,0x40);
	return FindProviderIndexByFieldValue_Parms.ReturnValue;
}

struct Engine_GetProviderCount_Parms
{
	struct FName                                       ProviderTag;                                      		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIDataStore_GameResource::GetProviderCount(struct FName ProviderTag)
{
	static UFieldFunc* pFnGetProviderCount = NULL;
	if(!pFnGetProviderCount)
		pFnGetProviderCount = UObject::FindFunction("Function Engine.UIDataStore_GameResource.GetProviderCount");

	Engine_GetProviderCount_Parms GetProviderCount_Parms;
	memcpy(&GetProviderCount_Parms.ProviderTag,&ProviderTag,0x8);
	pFnGetProviderCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProviderCount,NULL,&GetProviderCount_Parms,NULL);
	pFnGetProviderCount->FunctionFlags |= 0x400;
	return GetProviderCount_Parms.ReturnValue;
}

struct Engine_GenerateProviderAccessTag_Parms
{
	int                                                ProviderIndex;                                    		// 0x000000 (0x0004)              
	int                                                InstanceIndex;                                    		// 0x000004 (0x0004)              
	struct FName                                       ReturnValue;                                      		// 0x000008 (0x0008)              
};

struct FName UUIDataStore_GameResource::GenerateProviderAccessTag(int ProviderIndex,int InstanceIndex)
{
	static UFieldFunc* pFnGenerateProviderAccessTag = NULL;
	if(!pFnGenerateProviderAccessTag)
		pFnGenerateProviderAccessTag = UObject::FindFunction("Function Engine.UIDataStore_GameResource.GenerateProviderAccessTag");

	Engine_GenerateProviderAccessTag_Parms GenerateProviderAccessTag_Parms;
	GenerateProviderAccessTag_Parms.ProviderIndex = ProviderIndex;
	GenerateProviderAccessTag_Parms.InstanceIndex = InstanceIndex;
	pFnGenerateProviderAccessTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGenerateProviderAccessTag,NULL,&GenerateProviderAccessTag_Parms,NULL);
	pFnGenerateProviderAccessTag->FunctionFlags |= 0x400;
	return GenerateProviderAccessTag_Parms.ReturnValue;
}

struct Engine_GetProviderFieldValue_Parms
{
	struct FName                                       ProviderTag;                                      		// 0x000000 (0x0008)              
	struct FName                                       SearchField;                                      		// 0x000008 (0x0008)              
	int                                                ProviderIndex;                                    		// 0x000010 (0x0004)              
	struct FUIProviderScriptFieldValue                 out_FieldValue;                                   		// 0x000014 (0x0040)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000054 (0x0004) [0x00000001] 
};

bool UUIDataStore_GameResource::GetProviderFieldValue(struct FName ProviderTag,struct FName SearchField,int ProviderIndex,struct FUIProviderScriptFieldValue* out_FieldValue)
{
	static UFieldFunc* pFnGetProviderFieldValue = NULL;
	if(!pFnGetProviderFieldValue)
		pFnGetProviderFieldValue = UObject::FindFunction("Function Engine.UIDataStore_GameResource.GetProviderFieldValue");

	Engine_GetProviderFieldValue_Parms GetProviderFieldValue_Parms;
	memcpy(&GetProviderFieldValue_Parms.ProviderTag,&ProviderTag,0x8);
	memcpy(&GetProviderFieldValue_Parms.SearchField,&SearchField,0x8);
	GetProviderFieldValue_Parms.ProviderIndex = ProviderIndex;
	pFnGetProviderFieldValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProviderFieldValue,NULL,&GetProviderFieldValue_Parms,NULL);
	pFnGetProviderFieldValue->FunctionFlags |= 0x400;
	if(out_FieldValue)
		memcpy(out_FieldValue,&GetProviderFieldValue_Parms.out_FieldValue,0x40);
	return GetProviderFieldValue_Parms.ReturnValue;
}

struct Engine_GetResourceProviders_Parms
{
	struct FName                                       ProviderTag;                                      		// 0x000000 (0x0008)              
	TArray<class UUIResourceDataProvider*>             out_Providers;                                    		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIDataStore_GameResource::GetResourceProviders(struct FName ProviderTag,TArray<class UUIResourceDataProvider*>* out_Providers)
{
	static UFieldFunc* pFnGetResourceProviders = NULL;
	if(!pFnGetResourceProviders)
		pFnGetResourceProviders = UObject::FindFunction("Function Engine.UIDataStore_GameResource.GetResourceProviders");

	Engine_GetResourceProviders_Parms GetResourceProviders_Parms;
	memcpy(&GetResourceProviders_Parms.ProviderTag,&ProviderTag,0x8);
	pFnGetResourceProviders->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetResourceProviders,NULL,&GetResourceProviders_Parms,NULL);
	pFnGetResourceProviders->FunctionFlags |= 0x400;
	if(out_Providers)
		memcpy(out_Providers,&GetResourceProviders_Parms.out_Providers,0xC);
	return GetResourceProviders_Parms.ReturnValue;
}

struct Engine_FindProviderTypeIndex_Parms
{
	struct FName                                       ProviderTag;                                      		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIDataStore_GameResource::FindProviderTypeIndex(struct FName ProviderTag)
{
	static UFieldFunc* pFnFindProviderTypeIndex = NULL;
	if(!pFnFindProviderTypeIndex)
		pFnFindProviderTypeIndex = UObject::FindFunction("Function Engine.UIDataStore_GameResource.FindProviderTypeIndex");

	Engine_FindProviderTypeIndex_Parms FindProviderTypeIndex_Parms;
	memcpy(&FindProviderTypeIndex_Parms.ProviderTag,&ProviderTag,0x8);
	pFnFindProviderTypeIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindProviderTypeIndex,NULL,&FindProviderTypeIndex_Parms,NULL);
	pFnFindProviderTypeIndex->FunctionFlags |= 0x400;
	return FindProviderTypeIndex_Parms.ReturnValue;
}

struct Engine_OnRefreshDataFieldValue_Parms
{
};

void UUIDataStore_GameState::OnRefreshDataFieldValue()
{
	static UFieldFunc* pFnOnRefreshDataFieldValue = NULL;
	if(!pFnOnRefreshDataFieldValue)
		pFnOnRefreshDataFieldValue = UObject::FindFunction("Function Engine.UIDataStore_GameState.OnRefreshDataFieldValue");

	Engine_OnRefreshDataFieldValue_Parms OnRefreshDataFieldValue_Parms;
	ProcessEvent(pFnOnRefreshDataFieldValue,NULL,&OnRefreshDataFieldValue_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDataStore_GameState::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.UIDataStore_GameState.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	return NotifyGameSessionEnded_Parms.ReturnValue;
}

struct Engine_NotifyGameSessionEnded_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCurrentGameDataStore::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.CurrentGameDataStore.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	return NotifyGameSessionEnded_Parms.ReturnValue;
}

struct Engine_GetPlayerDataProvider_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	class UPlayerDataProvider*                         ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                Index;                                            		// 0x000008 (0x0004)              
	//class UPlayerDataProvider*                         Provider;                                         		// 0x00000C (0x0004)              
};

class UPlayerDataProvider* UCurrentGameDataStore::GetPlayerDataProvider(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnGetPlayerDataProvider = NULL;
	if(!pFnGetPlayerDataProvider)
		pFnGetPlayerDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.GetPlayerDataProvider");

	Engine_GetPlayerDataProvider_Parms GetPlayerDataProvider_Parms;
	GetPlayerDataProvider_Parms.PRI = PRI;
	ProcessEvent(pFnGetPlayerDataProvider,NULL,&GetPlayerDataProvider_Parms,NULL);
	return GetPlayerDataProvider_Parms.ReturnValue;
}

struct Engine_ClearDataProviders_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UCurrentGameDataStore::ClearDataProviders()
{
	static UFieldFunc* pFnClearDataProviders = NULL;
	if(!pFnClearDataProviders)
		pFnClearDataProviders = UObject::FindFunction("Function Engine.CurrentGameDataStore.ClearDataProviders");

	Engine_ClearDataProviders_Parms ClearDataProviders_Parms;
	ProcessEvent(pFnClearDataProviders,NULL,&ClearDataProviders_Parms,NULL);
}

struct Engine_OnAddTeamProvider_Parms
{
	class UTeamDataProvider*                           Provider;                                         		// 0x000000 (0x0004)              
};

void UCurrentGameDataStore::OnAddTeamProvider(class UTeamDataProvider* Provider)
{
	static UFieldFunc* pFnOnAddTeamProvider = NULL;
	if(!pFnOnAddTeamProvider)
		pFnOnAddTeamProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.OnAddTeamProvider");

	Engine_OnAddTeamProvider_Parms OnAddTeamProvider_Parms;
	OnAddTeamProvider_Parms.Provider = Provider;
	ProcessEvent(pFnOnAddTeamProvider,NULL,&OnAddTeamProvider_Parms,NULL);
}

struct Engine_TeamDataProviderPropertyChange_Parms
{
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000000 (0x0004)              
	struct FName                                       PropTag;                                          		// 0x000004 (0x0008)              
	//int                                                TeamArrayIndex;                                   		// 0x00000C (0x0004)              
	//int                                                CollectionIndex;                                  		// 0x000010 (0x0004)              
	//unsigned char                                      ProviderFieldType;                                		// 0x000014 (0x0001)              
	//unsigned long                                      bInvalidateListItems : 1;                         		// 0x000018 (0x0004) [0x00000001] 
};

void UCurrentGameDataStore::TeamDataProviderPropertyChange(class UUIDataProvider* SourceProvider,struct FName PropTag)
{
	static UFieldFunc* pFnTeamDataProviderPropertyChange = NULL;
	if(!pFnTeamDataProviderPropertyChange)
		pFnTeamDataProviderPropertyChange = UObject::FindFunction("Function Engine.CurrentGameDataStore.TeamDataProviderPropertyChange");

	Engine_TeamDataProviderPropertyChange_Parms TeamDataProviderPropertyChange_Parms;
	TeamDataProviderPropertyChange_Parms.SourceProvider = SourceProvider;
	memcpy(&TeamDataProviderPropertyChange_Parms.PropTag,&PropTag,0x8);
	ProcessEvent(pFnTeamDataProviderPropertyChange,NULL,&TeamDataProviderPropertyChange_Parms,NULL);
}

struct Engine_GetTeamDataProvider_Parms
{
	class ATeamInfo*                                   TI;                                               		// 0x000000 (0x0004)              
	class UTeamDataProvider*                           ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                Index;                                            		// 0x000008 (0x0004)              
	//class UTeamDataProvider*                           Provider;                                         		// 0x00000C (0x0004)              
};

class UTeamDataProvider* UCurrentGameDataStore::GetTeamDataProvider(class ATeamInfo* TI)
{
	static UFieldFunc* pFnGetTeamDataProvider = NULL;
	if(!pFnGetTeamDataProvider)
		pFnGetTeamDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.GetTeamDataProvider");

	Engine_GetTeamDataProvider_Parms GetTeamDataProvider_Parms;
	GetTeamDataProvider_Parms.TI = TI;
	ProcessEvent(pFnGetTeamDataProvider,NULL,&GetTeamDataProvider_Parms,NULL);
	return GetTeamDataProvider_Parms.ReturnValue;
}

struct Engine_PlayerDataProviderPropertyChange_Parms
{
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000000 (0x0004)              
	struct FName                                       PropTag;                                          		// 0x000004 (0x0008)              
	//int                                                PlayerArrayIndex;                                 		// 0x00000C (0x0004)              
	//int                                                CollectionIndex;                                  		// 0x000010 (0x0004)              
	//unsigned char                                      ProviderFieldType;                                		// 0x000014 (0x0001)              
	//unsigned long                                      bInvalidateListItems : 1;                         		// 0x000018 (0x0004) [0x00000001] 
};

void UCurrentGameDataStore::PlayerDataProviderPropertyChange(class UUIDataProvider* SourceProvider,struct FName PropTag)
{
	static UFieldFunc* pFnPlayerDataProviderPropertyChange = NULL;
	if(!pFnPlayerDataProviderPropertyChange)
		pFnPlayerDataProviderPropertyChange = UObject::FindFunction("Function Engine.CurrentGameDataStore.PlayerDataProviderPropertyChange");

	Engine_PlayerDataProviderPropertyChange_Parms PlayerDataProviderPropertyChange_Parms;
	PlayerDataProviderPropertyChange_Parms.SourceProvider = SourceProvider;
	memcpy(&PlayerDataProviderPropertyChange_Parms.PropTag,&PropTag,0x8);
	ProcessEvent(pFnPlayerDataProviderPropertyChange,NULL,&PlayerDataProviderPropertyChange_Parms,NULL);
}

struct Engine_RefreshPlayerDataProviders_Parms
{
};

void UCurrentGameDataStore::RefreshPlayerDataProviders()
{
	static UFieldFunc* pFnRefreshPlayerDataProviders = NULL;
	if(!pFnRefreshPlayerDataProviders)
		pFnRefreshPlayerDataProviders = UObject::FindFunction("Function Engine.CurrentGameDataStore.RefreshPlayerDataProviders");

	Engine_RefreshPlayerDataProviders_Parms RefreshPlayerDataProviders_Parms;
	ProcessEvent(pFnRefreshPlayerDataProviders,NULL,&RefreshPlayerDataProviders_Parms,NULL);
}

struct Engine_RemovePlayerDataProvider_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	//int                                                ExistingIndex;                                    		// 0x000004 (0x0004)              
};

void UCurrentGameDataStore::RemovePlayerDataProvider(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnRemovePlayerDataProvider = NULL;
	if(!pFnRemovePlayerDataProvider)
		pFnRemovePlayerDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.RemovePlayerDataProvider");

	Engine_RemovePlayerDataProvider_Parms RemovePlayerDataProvider_Parms;
	RemovePlayerDataProvider_Parms.PRI = PRI;
	ProcessEvent(pFnRemovePlayerDataProvider,NULL,&RemovePlayerDataProvider_Parms,NULL);
}

struct Engine_CreateGameDataProvider_Parms
{
	class AGameReplicationInfo*                        GRI;                                              		// 0x000000 (0x0004)              
};

void UCurrentGameDataStore::CreateGameDataProvider(class AGameReplicationInfo* GRI)
{
	static UFieldFunc* pFnCreateGameDataProvider = NULL;
	if(!pFnCreateGameDataProvider)
		pFnCreateGameDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.CreateGameDataProvider");

	Engine_CreateGameDataProvider_Parms CreateGameDataProvider_Parms;
	CreateGameDataProvider_Parms.GRI = GRI;
	ProcessEvent(pFnCreateGameDataProvider,NULL,&CreateGameDataProvider_Parms,NULL);
}

struct Engine_NotifyPlayersChanged_Parms
{
};

void UCurrentGameDataStore::NotifyPlayersChanged()
{
	static UFieldFunc* pFnNotifyPlayersChanged = NULL;
	if(!pFnNotifyPlayersChanged)
		pFnNotifyPlayersChanged = UObject::FindFunction("Function Engine.CurrentGameDataStore.NotifyPlayersChanged");

	Engine_NotifyPlayersChanged_Parms NotifyPlayersChanged_Parms;
	ProcessEvent(pFnNotifyPlayersChanged,NULL,&NotifyPlayersChanged_Parms,NULL);
}

struct Engine_AddPlayerDataProvider_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	//int                                                ExistingIndex;                                    		// 0x000004 (0x0004)              
	//class UPlayerDataProvider*                         DataProvider;                                     		// 0x000008 (0x0004)              
	//struct FString                                     PlayerName;                                       		// 0x00000C (0x000C)              
};

void UCurrentGameDataStore::AddPlayerDataProvider(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnAddPlayerDataProvider = NULL;
	if(!pFnAddPlayerDataProvider)
		pFnAddPlayerDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.AddPlayerDataProvider");

	Engine_AddPlayerDataProvider_Parms AddPlayerDataProvider_Parms;
	AddPlayerDataProvider_Parms.PRI = PRI;
	ProcessEvent(pFnAddPlayerDataProvider,NULL,&AddPlayerDataProvider_Parms,NULL);
}

struct Engine_Timer_Parms
{
};

void UCurrentGameDataStore::Timer()
{
	static UFieldFunc* pFnTimer = NULL;
	if(!pFnTimer)
		pFnTimer = UObject::FindFunction("Function Engine.CurrentGameDataStore.Timer");

	Engine_Timer_Parms Timer_Parms;
	ProcessEvent(pFnTimer,NULL,&Timer_Parms,NULL);
}

struct Engine_NotifyTeamChange_Parms
{
};

void UCurrentGameDataStore::NotifyTeamChange()
{
	static UFieldFunc* pFnNotifyTeamChange = NULL;
	if(!pFnNotifyTeamChange)
		pFnNotifyTeamChange = UObject::FindFunction("Function Engine.CurrentGameDataStore.NotifyTeamChange");

	Engine_NotifyTeamChange_Parms NotifyTeamChange_Parms;
	ProcessEvent(pFnNotifyTeamChange,NULL,&NotifyTeamChange_Parms,NULL);
}

struct Engine_FindPlayerDataProviderIndex_Parms
{
	class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//int                                                Result;                                           		// 0x00000C (0x0004)              
};

int UCurrentGameDataStore::FindPlayerDataProviderIndex(class APlayerReplicationInfo* PRI)
{
	static UFieldFunc* pFnFindPlayerDataProviderIndex = NULL;
	if(!pFnFindPlayerDataProviderIndex)
		pFnFindPlayerDataProviderIndex = UObject::FindFunction("Function Engine.CurrentGameDataStore.FindPlayerDataProviderIndex");

	Engine_FindPlayerDataProviderIndex_Parms FindPlayerDataProviderIndex_Parms;
	FindPlayerDataProviderIndex_Parms.PRI = PRI;
	ProcessEvent(pFnFindPlayerDataProviderIndex,NULL,&FindPlayerDataProviderIndex_Parms,NULL);
	return FindPlayerDataProviderIndex_Parms.ReturnValue;
}

struct Engine_FindTeamDataProviderIndex_Parms
{
	class ATeamInfo*                                   TI;                                               		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
	//int                                                Result;                                           		// 0x00000C (0x0004)              
};

int UCurrentGameDataStore::FindTeamDataProviderIndex(class ATeamInfo* TI)
{
	static UFieldFunc* pFnFindTeamDataProviderIndex = NULL;
	if(!pFnFindTeamDataProviderIndex)
		pFnFindTeamDataProviderIndex = UObject::FindFunction("Function Engine.CurrentGameDataStore.FindTeamDataProviderIndex");

	Engine_FindTeamDataProviderIndex_Parms FindTeamDataProviderIndex_Parms;
	FindTeamDataProviderIndex_Parms.TI = TI;
	ProcessEvent(pFnFindTeamDataProviderIndex,NULL,&FindTeamDataProviderIndex_Parms,NULL);
	return FindTeamDataProviderIndex_Parms.ReturnValue;
}

struct Engine_RemoveTeamDataProvider_Parms
{
	class ATeamInfo*                                   TI;                                               		// 0x000000 (0x0004)              
	//int                                                ExistingIndex;                                    		// 0x000004 (0x0004)              
};

void UCurrentGameDataStore::RemoveTeamDataProvider(class ATeamInfo* TI)
{
	static UFieldFunc* pFnRemoveTeamDataProvider = NULL;
	if(!pFnRemoveTeamDataProvider)
		pFnRemoveTeamDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.RemoveTeamDataProvider");

	Engine_RemoveTeamDataProvider_Parms RemoveTeamDataProvider_Parms;
	RemoveTeamDataProvider_Parms.TI = TI;
	ProcessEvent(pFnRemoveTeamDataProvider,NULL,&RemoveTeamDataProvider_Parms,NULL);
}

struct Engine_AddTeamDataProvider_Parms
{
	class ATeamInfo*                                   TI;                                               		// 0x000000 (0x0004)              
	//int                                                ExistingIndex;                                    		// 0x000004 (0x0004)              
	//class UTeamDataProvider*                           DataProvider;                                     		// 0x000008 (0x0004)              
	//struct FString                                     TeamName;                                         		// 0x00000C (0x000C)              
};

void UCurrentGameDataStore::AddTeamDataProvider(class ATeamInfo* TI)
{
	static UFieldFunc* pFnAddTeamDataProvider = NULL;
	if(!pFnAddTeamDataProvider)
		pFnAddTeamDataProvider = UObject::FindFunction("Function Engine.CurrentGameDataStore.AddTeamDataProvider");

	Engine_AddTeamDataProvider_Parms AddTeamDataProvider_Parms;
	AddTeamDataProvider_Parms.TI = TI;
	ProcessEvent(pFnAddTeamDataProvider,NULL,&AddTeamDataProvider_Parms,NULL);
}

struct Engine_RefreshTeamDataProviders_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UCurrentGameDataStore::RefreshTeamDataProviders()
{
	static UFieldFunc* pFnRefreshTeamDataProviders = NULL;
	if(!pFnRefreshTeamDataProviders)
		pFnRefreshTeamDataProviders = UObject::FindFunction("Function Engine.CurrentGameDataStore.RefreshTeamDataProviders");

	Engine_RefreshTeamDataProviders_Parms RefreshTeamDataProviders_Parms;
	ProcessEvent(pFnRefreshTeamDataProviders,NULL,&RefreshTeamDataProviders_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UPlayerOwnerDataStore::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.PlayerOwnerDataStore.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	return NotifyGameSessionEnded_Parms.ReturnValue;
}

struct Engine_SetPlayerDataProvider_Parms
{
	class UPlayerDataProvider*                         NewPlayerData;                                    		// 0x000000 (0x0004)              
};

void UPlayerOwnerDataStore::SetPlayerDataProvider(class UPlayerDataProvider* NewPlayerData)
{
	static UFieldFunc* pFnSetPlayerDataProvider = NULL;
	if(!pFnSetPlayerDataProvider)
		pFnSetPlayerDataProvider = UObject::FindFunction("Function Engine.PlayerOwnerDataStore.SetPlayerDataProvider");

	Engine_SetPlayerDataProvider_Parms SetPlayerDataProvider_Parms;
	SetPlayerDataProvider_Parms.NewPlayerData = NewPlayerData;
	ProcessEvent(pFnSetPlayerDataProvider,NULL,&SetPlayerDataProvider_Parms,NULL);
}

struct Engine_ClearDataProviders_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UPlayerOwnerDataStore::ClearDataProviders()
{
	static UFieldFunc* pFnClearDataProviders = NULL;
	if(!pFnClearDataProviders)
		pFnClearDataProviders = UObject::FindFunction("Function Engine.PlayerOwnerDataStore.ClearDataProviders");

	Engine_ClearDataProviders_Parms ClearDataProviders_Parms;
	ProcessEvent(pFnClearDataProviders,NULL,&ClearDataProviders_Parms,NULL);
}

struct Engine_GetDataProvider_Parms
{
	class UUIDynamicFieldProvider*                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIDynamicFieldProvider* UUIDataStore_Registry::GetDataProvider()
{
	static UFieldFunc* pFnGetDataProvider = NULL;
	if(!pFnGetDataProvider)
		pFnGetDataProvider = UObject::FindFunction("Function Engine.UIDataStore_Registry.GetDataProvider");

	Engine_GetDataProvider_Parms GetDataProvider_Parms;
	ProcessEvent(pFnGetDataProvider,NULL,&GetDataProvider_Parms,NULL);
	return GetDataProvider_Parms.ReturnValue;
}

struct Engine_MoveToPrevious_Parms
{
	unsigned long                                      bInvalidateExistingSearchResults : 1;             		// 0x000000 (0x0004) [0x00000001] 
};

void UUIDataStore_OnlineGameSearch::MoveToPrevious(bool bInvalidateExistingSearchResults)
{
	static UFieldFunc* pFnMoveToPrevious = NULL;
	if(!pFnMoveToPrevious)
		pFnMoveToPrevious = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.MoveToPrevious");

	Engine_MoveToPrevious_Parms MoveToPrevious_Parms;
	MoveToPrevious_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;
	ProcessEvent(pFnMoveToPrevious,NULL,&MoveToPrevious_Parms,NULL);
}

struct Engine_Init_Parms
{
};

void UUIDataStore_OnlineGameSearch::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.Init");

	Engine_Init_Parms Init_Parms;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_BuildSearchResults_Parms
{
};

void UUIDataStore_OnlineGameSearch::BuildSearchResults()
{
	static UFieldFunc* pFnBuildSearchResults = NULL;
	if(!pFnBuildSearchResults)
		pFnBuildSearchResults = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.BuildSearchResults");

	Engine_BuildSearchResults_Parms BuildSearchResults_Parms;
	pFnBuildSearchResults->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBuildSearchResults,NULL,&BuildSearchResults_Parms,NULL);
	pFnBuildSearchResults->FunctionFlags |= 0x400;
}

struct Engine_GetSearchResultFromIndex_Parms
{
	int                                                ListIndex;                                        		// 0x000000 (0x0004)              
	struct FOnlineGameSearchResult                     Result;                                           		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIDataStore_OnlineGameSearch::GetSearchResultFromIndex(int ListIndex,struct FOnlineGameSearchResult* Result)
{
	static UFieldFunc* pFnGetSearchResultFromIndex = NULL;
	if(!pFnGetSearchResultFromIndex)
		pFnGetSearchResultFromIndex = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.GetSearchResultFromIndex");

	Engine_GetSearchResultFromIndex_Parms GetSearchResultFromIndex_Parms;
	GetSearchResultFromIndex_Parms.ListIndex = ListIndex;
	ProcessEvent(pFnGetSearchResultFromIndex,NULL,&GetSearchResultFromIndex_Parms,NULL);
	if(Result)
		memcpy(Result,&GetSearchResultFromIndex_Parms.Result,0x8);
	return GetSearchResultFromIndex_Parms.ReturnValue;
}

struct Engine_InvalidateCurrentSearchResults_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineGameSearch*                           ActiveSearch;                                     		// 0x000004 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIDataStore_OnlineGameSearch::InvalidateCurrentSearchResults()
{
	static UFieldFunc* pFnInvalidateCurrentSearchResults = NULL;
	if(!pFnInvalidateCurrentSearchResults)
		pFnInvalidateCurrentSearchResults = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.InvalidateCurrentSearchResults");

	Engine_InvalidateCurrentSearchResults_Parms InvalidateCurrentSearchResults_Parms;
	ProcessEvent(pFnInvalidateCurrentSearchResults,NULL,&InvalidateCurrentSearchResults_Parms,NULL);
	return InvalidateCurrentSearchResults_Parms.ReturnValue;
}

struct Engine_SetCurrentByIndex_Parms
{
	int                                                NewIndex;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bInvalidateExistingSearchResults : 1;             		// 0x000004 (0x0004) [0x00000001] 
};

void UUIDataStore_OnlineGameSearch::SetCurrentByIndex(int NewIndex,bool bInvalidateExistingSearchResults)
{
	static UFieldFunc* pFnSetCurrentByIndex = NULL;
	if(!pFnSetCurrentByIndex)
		pFnSetCurrentByIndex = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByIndex");

	Engine_SetCurrentByIndex_Parms SetCurrentByIndex_Parms;
	SetCurrentByIndex_Parms.NewIndex = NewIndex;
	SetCurrentByIndex_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;
	ProcessEvent(pFnSetCurrentByIndex,NULL,&SetCurrentByIndex_Parms,NULL);
}

struct Engine_SubmitGameSearch_Parms
{
	unsigned char                                      ControllerIndex;                                  		// 0x000000 (0x0001)              
	unsigned long                                      bInvalidateExistingSearchResults : 1;             		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIDataStore_OnlineGameSearch::SubmitGameSearch(unsigned char ControllerIndex,bool bInvalidateExistingSearchResults)
{
	static UFieldFunc* pFnSubmitGameSearch = NULL;
	if(!pFnSubmitGameSearch)
		pFnSubmitGameSearch = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.SubmitGameSearch");

	Engine_SubmitGameSearch_Parms SubmitGameSearch_Parms;
	SubmitGameSearch_Parms.ControllerIndex = ControllerIndex;
	SubmitGameSearch_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;
	ProcessEvent(pFnSubmitGameSearch,NULL,&SubmitGameSearch_Parms,NULL);
	return SubmitGameSearch_Parms.ReturnValue;
}

struct Engine_GetActiveGameSearch_Parms
{
	class UOnlineGameSearch*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UOnlineGameSearch* UUIDataStore_OnlineGameSearch::GetActiveGameSearch()
{
	static UFieldFunc* pFnGetActiveGameSearch = NULL;
	if(!pFnGetActiveGameSearch)
		pFnGetActiveGameSearch = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.GetActiveGameSearch");

	Engine_GetActiveGameSearch_Parms GetActiveGameSearch_Parms;
	ProcessEvent(pFnGetActiveGameSearch,NULL,&GetActiveGameSearch_Parms,NULL);
	return GetActiveGameSearch_Parms.ReturnValue;
}

struct Engine_ShowHostGamercard_Parms
{
	unsigned char                                      ControllerIndex;                                  		// 0x000000 (0x0001)              
	int                                                ListIndex;                                        		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class UOnlinePlayerInterfaceEx*                    PlayerExt;                                        		// 0x00000C (0x0008)              
	//class UOnlineGameSettings*                         Game;                                             		// 0x000014 (0x0004)              
};

bool UUIDataStore_OnlineGameSearch::ShowHostGamercard(unsigned char ControllerIndex,int ListIndex)
{
	static UFieldFunc* pFnShowHostGamercard = NULL;
	if(!pFnShowHostGamercard)
		pFnShowHostGamercard = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.ShowHostGamercard");

	Engine_ShowHostGamercard_Parms ShowHostGamercard_Parms;
	ShowHostGamercard_Parms.ControllerIndex = ControllerIndex;
	ShowHostGamercard_Parms.ListIndex = ListIndex;
	ProcessEvent(pFnShowHostGamercard,NULL,&ShowHostGamercard_Parms,NULL);
	return ShowHostGamercard_Parms.ReturnValue;
}

struct Engine_ClearAllSearchResults_Parms
{
	//int                                                OriginalActiveIndex;                              		// 0x000000 (0x0004)              
	//int                                                GameTypeIndex;                                    		// 0x000004 (0x0004)              
};

void UUIDataStore_OnlineGameSearch::ClearAllSearchResults()
{
	static UFieldFunc* pFnClearAllSearchResults = NULL;
	if(!pFnClearAllSearchResults)
		pFnClearAllSearchResults = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.ClearAllSearchResults");

	Engine_ClearAllSearchResults_Parms ClearAllSearchResults_Parms;
	ProcessEvent(pFnClearAllSearchResults,NULL,&ClearAllSearchResults_Parms,NULL);
}

struct Engine_GetCurrentGameSearch_Parms
{
	class UOnlineGameSearch*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UOnlineGameSearch* UUIDataStore_OnlineGameSearch::GetCurrentGameSearch()
{
	static UFieldFunc* pFnGetCurrentGameSearch = NULL;
	if(!pFnGetCurrentGameSearch)
		pFnGetCurrentGameSearch = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.GetCurrentGameSearch");

	Engine_GetCurrentGameSearch_Parms GetCurrentGameSearch_Parms;
	ProcessEvent(pFnGetCurrentGameSearch,NULL,&GetCurrentGameSearch_Parms,NULL);
	return GetCurrentGameSearch_Parms.ReturnValue;
}

struct Engine_SetCurrentByName_Parms
{
	struct FName                                       SearchName;                                       		// 0x000000 (0x0008)              
	unsigned long                                      bInvalidateExistingSearchResults : 1;             		// 0x000008 (0x0004) [0x00000001] 
	//int                                                Index;                                            		// 0x00000C (0x0004)              
};

void UUIDataStore_OnlineGameSearch::SetCurrentByName(struct FName SearchName,bool bInvalidateExistingSearchResults)
{
	static UFieldFunc* pFnSetCurrentByName = NULL;
	if(!pFnSetCurrentByName)
		pFnSetCurrentByName = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByName");

	Engine_SetCurrentByName_Parms SetCurrentByName_Parms;
	memcpy(&SetCurrentByName_Parms.SearchName,&SearchName,0x8);
	SetCurrentByName_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;
	ProcessEvent(pFnSetCurrentByName,NULL,&SetCurrentByName_Parms,NULL);
}

struct Engine_MoveToNext_Parms
{
	unsigned long                                      bInvalidateExistingSearchResults : 1;             		// 0x000000 (0x0004) [0x00000001] 
};

void UUIDataStore_OnlineGameSearch::MoveToNext(bool bInvalidateExistingSearchResults)
{
	static UFieldFunc* pFnMoveToNext = NULL;
	if(!pFnMoveToNext)
		pFnMoveToNext = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.MoveToNext");

	Engine_MoveToNext_Parms MoveToNext_Parms;
	MoveToNext_Parms.bInvalidateExistingSearchResults = bInvalidateExistingSearchResults;
	ProcessEvent(pFnMoveToNext,NULL,&MoveToNext_Parms,NULL);
}

struct Engine_OnSearchComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UUIDataStore_OnlineGameSearch::OnSearchComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnSearchComplete = NULL;
	if(!pFnOnSearchComplete)
		pFnOnSearchComplete = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.OnSearchComplete");

	Engine_OnSearchComplete_Parms OnSearchComplete_Parms;
	OnSearchComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnSearchComplete,NULL,&OnSearchComplete_Parms,NULL);
}

struct Engine_OverrideQuerySubmission_Parms
{
	unsigned char                                      ControllerId;                                     		// 0x000000 (0x0001)              
	class UOnlineGameSearch*                           Search;                                           		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIDataStore_OnlineGameSearch::OverrideQuerySubmission(unsigned char ControllerId,class UOnlineGameSearch* Search)
{
	static UFieldFunc* pFnOverrideQuerySubmission = NULL;
	if(!pFnOverrideQuerySubmission)
		pFnOverrideQuerySubmission = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.OverrideQuerySubmission");

	Engine_OverrideQuerySubmission_Parms OverrideQuerySubmission_Parms;
	OverrideQuerySubmission_Parms.ControllerId = ControllerId;
	OverrideQuerySubmission_Parms.Search = Search;
	ProcessEvent(pFnOverrideQuerySubmission,NULL,&OverrideQuerySubmission_Parms,NULL);
	return OverrideQuerySubmission_Parms.ReturnValue;
}

struct Engine_FindSearchConfigurationIndex_Parms
{
	struct FName                                       SearchTag;                                        		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                Index;                                            		// 0x00000C (0x0004)              
};

int UUIDataStore_OnlineGameSearch::FindSearchConfigurationIndex(struct FName SearchTag)
{
	static UFieldFunc* pFnFindSearchConfigurationIndex = NULL;
	if(!pFnFindSearchConfigurationIndex)
		pFnFindSearchConfigurationIndex = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSearch.FindSearchConfigurationIndex");

	Engine_FindSearchConfigurationIndex_Parms FindSearchConfigurationIndex_Parms;
	memcpy(&FindSearchConfigurationIndex_Parms.SearchTag,&SearchTag,0x8);
	ProcessEvent(pFnFindSearchConfigurationIndex,NULL,&FindSearchConfigurationIndex_Parms,NULL);
	return FindSearchConfigurationIndex_Parms.ReturnValue;
}

struct Engine_OnDownloadableContentQueryDone_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
};

void UUIDataStore_OnlinePlayerData::OnDownloadableContentQueryDone(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnDownloadableContentQueryDone = NULL;
	if(!pFnOnDownloadableContentQueryDone)
		pFnOnDownloadableContentQueryDone = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.OnDownloadableContentQueryDone");

	Engine_OnDownloadableContentQueryDone_Parms OnDownloadableContentQueryDone_Parms;
	OnDownloadableContentQueryDone_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnDownloadableContentQueryDone,NULL,&OnDownloadableContentQueryDone_Parms,NULL);
}

struct Engine_RegisterDelegates_Parms
{
};

void UUIDataStore_OnlinePlayerData::RegisterDelegates()
{
	static UFieldFunc* pFnRegisterDelegates = NULL;
	if(!pFnRegisterDelegates)
		pFnRegisterDelegates = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.RegisterDelegates");

	Engine_RegisterDelegates_Parms RegisterDelegates_Parms;
	ProcessEvent(pFnRegisterDelegates,NULL,&RegisterDelegates_Parms,NULL);
}

struct Engine_SaveProfileData_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDataStore_OnlinePlayerData::SaveProfileData()
{
	static UFieldFunc* pFnSaveProfileData = NULL;
	if(!pFnSaveProfileData)
		pFnSaveProfileData = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.SaveProfileData");

	Engine_SaveProfileData_Parms SaveProfileData_Parms;
	ProcessEvent(pFnSaveProfileData,NULL,&SaveProfileData_Parms,NULL);
	return SaveProfileData_Parms.ReturnValue;
}

struct Engine_OnProviderChanged_Parms
{
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000000 (0x0004)              
	struct FName                                       PropTag;                                          		// 0x000004 (0x0008)              
};

void UUIDataStore_OnlinePlayerData::OnProviderChanged(class UUIDataProvider* SourceProvider,struct FName PropTag)
{
	static UFieldFunc* pFnOnProviderChanged = NULL;
	if(!pFnOnProviderChanged)
		pFnOnProviderChanged = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.OnProviderChanged");

	Engine_OnProviderChanged_Parms OnProviderChanged_Parms;
	OnProviderChanged_Parms.SourceProvider = SourceProvider;
	memcpy(&OnProviderChanged_Parms.PropTag,&PropTag,0x8);
	ProcessEvent(pFnOnProviderChanged,NULL,&OnProviderChanged_Parms,NULL);
}

struct Engine_OnPlayerDataChange_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
};

void UUIDataStore_OnlinePlayerData::OnPlayerDataChange()
{
	static UFieldFunc* pFnOnPlayerDataChange = NULL;
	if(!pFnOnPlayerDataChange)
		pFnOnPlayerDataChange = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.OnPlayerDataChange");

	Engine_OnPlayerDataChange_Parms OnPlayerDataChange_Parms;
	ProcessEvent(pFnOnPlayerDataChange,NULL,&OnPlayerDataChange_Parms,NULL);
}

struct Engine_OnLoginChange_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataStore_OnlinePlayerData::OnLoginChange(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChange = NULL;
	if(!pFnOnLoginChange)
		pFnOnLoginChange = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.OnLoginChange");

	Engine_OnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChange,NULL,&OnLoginChange_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
};

void UUIDataStore_OnlinePlayerData::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnUnregister_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000004 (0x0008)              
};

void UUIDataStore_OnlinePlayerData::OnUnregister()
{
	static UFieldFunc* pFnOnUnregister = NULL;
	if(!pFnOnUnregister)
		pFnOnUnregister = UObject::FindFunction("Function Engine.UIDataStore_OnlinePlayerData.OnUnregister");

	Engine_OnUnregister_Parms OnUnregister_Parms;
	ProcessEvent(pFnOnUnregister,NULL,&OnUnregister_Parms,NULL);
}

struct Engine_Init_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
};

void UUIDataStore_OnlineStats::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.UIDataStore_OnlineStats.Init");

	Engine_Init_Parms Init_Parms;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_OnReadComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UUIDataStore_OnlineStats::OnReadComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadComplete = NULL;
	if(!pFnOnReadComplete)
		pFnOnReadComplete = UObject::FindFunction("Function Engine.UIDataStore_OnlineStats.OnReadComplete");

	Engine_OnReadComplete_Parms OnReadComplete_Parms;
	OnReadComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadComplete,NULL,&OnReadComplete_Parms,NULL);
}

struct Engine_ShowGamercard_Parms
{
	unsigned char                                      ConrollerIndex;                                   		// 0x000000 (0x0001)              
	int                                                ListIndex;                                        		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00000C (0x0004)              
	//class UOnlinePlayerInterfaceEx*                    PlayerExt;                                        		// 0x000010 (0x0008)              
	//struct FUniqueNetId                                PlayerID;                                         		// 0x000018 (0x0008)              
};

bool UUIDataStore_OnlineStats::ShowGamercard(unsigned char ConrollerIndex,int ListIndex)
{
	static UFieldFunc* pFnShowGamercard = NULL;
	if(!pFnShowGamercard)
		pFnShowGamercard = UObject::FindFunction("Function Engine.UIDataStore_OnlineStats.ShowGamercard");

	Engine_ShowGamercard_Parms ShowGamercard_Parms;
	ShowGamercard_Parms.ConrollerIndex = ConrollerIndex;
	ShowGamercard_Parms.ListIndex = ListIndex;
	ProcessEvent(pFnShowGamercard,NULL,&ShowGamercard_Parms,NULL);
	return ShowGamercard_Parms.ReturnValue;
}

struct Engine_RefreshStats_Parms
{
	unsigned char                                      ControllerIndex;                                  		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//TArray<struct FUniqueNetId>                        Players;                                          		// 0x000008 (0x000C)              
	//struct FUniqueNetId                                PlayerID;                                         		// 0x000014 (0x0008)              
};

bool UUIDataStore_OnlineStats::RefreshStats(unsigned char ControllerIndex)
{
	static UFieldFunc* pFnRefreshStats = NULL;
	if(!pFnRefreshStats)
		pFnRefreshStats = UObject::FindFunction("Function Engine.UIDataStore_OnlineStats.RefreshStats");

	Engine_RefreshStats_Parms RefreshStats_Parms;
	RefreshStats_Parms.ControllerIndex = ControllerIndex;
	ProcessEvent(pFnRefreshStats,NULL,&RefreshStats_Parms,NULL);
	return RefreshStats_Parms.ReturnValue;
}

struct Engine_SetStatsReadInfo_Parms
{
};

void UUIDataStore_OnlineStats::SetStatsReadInfo()
{
	static UFieldFunc* pFnSetStatsReadInfo = NULL;
	if(!pFnSetStatsReadInfo)
		pFnSetStatsReadInfo = UObject::FindFunction("Function Engine.UIDataStore_OnlineStats.SetStatsReadInfo");

	Engine_SetStatsReadInfo_Parms SetStatsReadInfo_Parms;
	ProcessEvent(pFnSetStatsReadInfo,NULL,&SetStatsReadInfo_Parms,NULL);
}

struct Engine_SortResultsByRank_Parms
{
};

void UUIDataStore_OnlineStats::SortResultsByRank()
{
	static UFieldFunc* pFnSortResultsByRank = NULL;
	if(!pFnSortResultsByRank)
		pFnSortResultsByRank = UObject::FindFunction("Function Engine.UIDataStore_OnlineStats.SortResultsByRank");

	Engine_SortResultsByRank_Parms SortResultsByRank_Parms;
	pFnSortResultsByRank->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSortResultsByRank,NULL,&SortResultsByRank_Parms,NULL);
	pFnSortResultsByRank->FunctionFlags |= 0x400;
}

struct Engine_SetCurrentByName_Parms
{
	struct FName                                       SettingsName;                                     		// 0x000000 (0x0008)              
	//int                                                Index;                                            		// 0x000008 (0x0004)              
};

void UUIDataStore_OnlineGameSettings::SetCurrentByName(struct FName SettingsName)
{
	static UFieldFunc* pFnSetCurrentByName = NULL;
	if(!pFnSetCurrentByName)
		pFnSetCurrentByName = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByName");

	Engine_SetCurrentByName_Parms SetCurrentByName_Parms;
	memcpy(&SetCurrentByName_Parms.SettingsName,&SettingsName,0x8);
	ProcessEvent(pFnSetCurrentByName,NULL,&SetCurrentByName_Parms,NULL);
}

struct Engine_MoveToNext_Parms
{
};

void UUIDataStore_OnlineGameSettings::MoveToNext()
{
	static UFieldFunc* pFnMoveToNext = NULL;
	if(!pFnMoveToNext)
		pFnMoveToNext = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.MoveToNext");

	Engine_MoveToNext_Parms MoveToNext_Parms;
	ProcessEvent(pFnMoveToNext,NULL,&MoveToNext_Parms,NULL);
}

struct Engine_GetCurrentProvider_Parms
{
	class UUIDataProvider_Settings*                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIDataProvider_Settings* UUIDataStore_OnlineGameSettings::GetCurrentProvider()
{
	static UFieldFunc* pFnGetCurrentProvider = NULL;
	if(!pFnGetCurrentProvider)
		pFnGetCurrentProvider = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.GetCurrentProvider");

	Engine_GetCurrentProvider_Parms GetCurrentProvider_Parms;
	ProcessEvent(pFnGetCurrentProvider,NULL,&GetCurrentProvider_Parms,NULL);
	return GetCurrentProvider_Parms.ReturnValue;
}

struct Engine_SetCurrentByIndex_Parms
{
	int                                                NewIndex;                                         		// 0x000000 (0x0004)              
};

void UUIDataStore_OnlineGameSettings::SetCurrentByIndex(int NewIndex)
{
	static UFieldFunc* pFnSetCurrentByIndex = NULL;
	if(!pFnSetCurrentByIndex)
		pFnSetCurrentByIndex = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByIndex");

	Engine_SetCurrentByIndex_Parms SetCurrentByIndex_Parms;
	SetCurrentByIndex_Parms.NewIndex = NewIndex;
	ProcessEvent(pFnSetCurrentByIndex,NULL,&SetCurrentByIndex_Parms,NULL);
}

struct Engine_MoveToPrevious_Parms
{
};

void UUIDataStore_OnlineGameSettings::MoveToPrevious()
{
	static UFieldFunc* pFnMoveToPrevious = NULL;
	if(!pFnMoveToPrevious)
		pFnMoveToPrevious = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.MoveToPrevious");

	Engine_MoveToPrevious_Parms MoveToPrevious_Parms;
	ProcessEvent(pFnMoveToPrevious,NULL,&MoveToPrevious_Parms,NULL);
}

struct Engine_GetCurrentGameSettings_Parms
{
	class UOnlineGameSettings*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UOnlineGameSettings* UUIDataStore_OnlineGameSettings::GetCurrentGameSettings()
{
	static UFieldFunc* pFnGetCurrentGameSettings = NULL;
	if(!pFnGetCurrentGameSettings)
		pFnGetCurrentGameSettings = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.GetCurrentGameSettings");

	Engine_GetCurrentGameSettings_Parms GetCurrentGameSettings_Parms;
	ProcessEvent(pFnGetCurrentGameSettings,NULL,&GetCurrentGameSettings_Parms,NULL);
	return GetCurrentGameSettings_Parms.ReturnValue;
}

struct Engine_CreateGame_Parms
{
	unsigned char                                      ControllerIndex;                                  		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000008 (0x0004)              
	//class UOnlineGameInterface*                        GameInterface;                                    		// 0x00000C (0x0008)              
};

bool UUIDataStore_OnlineGameSettings::CreateGame(unsigned char ControllerIndex)
{
	static UFieldFunc* pFnCreateGame = NULL;
	if(!pFnCreateGame)
		pFnCreateGame = UObject::FindFunction("Function Engine.UIDataStore_OnlineGameSettings.CreateGame");

	Engine_CreateGame_Parms CreateGame_Parms;
	CreateGame_Parms.ControllerIndex = ControllerIndex;
	ProcessEvent(pFnCreateGame,NULL,&CreateGame_Parms,NULL);
	return CreateGame_Parms.ReturnValue;
}

struct Engine_ClearDataProviders_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UUIDataStore_PlayerSettings::ClearDataProviders()
{
	static UFieldFunc* pFnClearDataProviders = NULL;
	if(!pFnClearDataProviders)
		pFnClearDataProviders = UObject::FindFunction("Function Engine.UIDataStore_PlayerSettings.ClearDataProviders");

	Engine_ClearDataProviders_Parms ClearDataProviders_Parms;
	ProcessEvent(pFnClearDataProviders,NULL,&ClearDataProviders_Parms,NULL);
}

struct Engine_GetPlayerOwner_Parms
{
	class ULocalPlayer*                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

class ULocalPlayer* UUIDataStore_PlayerSettings::GetPlayerOwner()
{
	static UFieldFunc* pFnGetPlayerOwner = NULL;
	if(!pFnGetPlayerOwner)
		pFnGetPlayerOwner = UObject::FindFunction("Function Engine.UIDataStore_PlayerSettings.GetPlayerOwner");

	Engine_GetPlayerOwner_Parms GetPlayerOwner_Parms;
	pFnGetPlayerOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerOwner,NULL,&GetPlayerOwner_Parms,NULL);
	pFnGetPlayerOwner->FunctionFlags |= 0x400;
	return GetPlayerOwner_Parms.ReturnValue;
}

struct Engine_NotifyGameSessionEnded_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDataStore_PlayerSettings::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.UIDataStore_PlayerSettings.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	return NotifyGameSessionEnded_Parms.ReturnValue;
}

struct Engine_NotifyGameSessionEnded_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDataStore_SessionSettings::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.UIDataStore_SessionSettings.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	return NotifyGameSessionEnded_Parms.ReturnValue;
}

struct Engine_ClearDataProviders_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UUIDataStore_SessionSettings::ClearDataProviders()
{
	static UFieldFunc* pFnClearDataProviders = NULL;
	if(!pFnClearDataProviders)
		pFnClearDataProviders = UObject::FindFunction("Function Engine.UIDataStore_SessionSettings.ClearDataProviders");

	Engine_ClearDataProviders_Parms ClearDataProviders_Parms;
	ProcessEvent(pFnClearDataProviders,NULL,&ClearDataProviders_Parms,NULL);
}

struct Engine_GetAliasFontMarkup_Parms
{
	struct FName                                       DesiredAlias;                                     		// 0x000000 (0x0008)              
	unsigned char                                      OverridePlatform;                                 		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UUIDataStore_InputAlias::GetAliasFontMarkup(struct FName DesiredAlias,unsigned char OverridePlatform)
{
	static UFieldFunc* pFnGetAliasFontMarkup = NULL;
	if(!pFnGetAliasFontMarkup)
		pFnGetAliasFontMarkup = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.GetAliasFontMarkup");

	Engine_GetAliasFontMarkup_Parms GetAliasFontMarkup_Parms;
	memcpy(&GetAliasFontMarkup_Parms.DesiredAlias,&DesiredAlias,0x8);
	GetAliasFontMarkup_Parms.OverridePlatform = OverridePlatform;
	pFnGetAliasFontMarkup->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAliasFontMarkup,NULL,&GetAliasFontMarkup_Parms,NULL);
	pFnGetAliasFontMarkup->FunctionFlags |= 0x400;
	return GetAliasFontMarkup_Parms.ReturnValue;
}

struct Engine_GetAliasInputKeyData_Parms
{
	struct FRawInputKeyEventData                       out_InputKeyData;                                 		// 0x000000 (0x000C)              
	struct FName                                       DesiredAlias;                                     		// 0x00000C (0x0008)              
	unsigned char                                      OverridePlatform;                                 		// 0x000014 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUIDataStore_InputAlias::GetAliasInputKeyData(struct FRawInputKeyEventData* out_InputKeyData,struct FName DesiredAlias,unsigned char OverridePlatform)
{
	static UFieldFunc* pFnGetAliasInputKeyData = NULL;
	if(!pFnGetAliasInputKeyData)
		pFnGetAliasInputKeyData = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyData");

	Engine_GetAliasInputKeyData_Parms GetAliasInputKeyData_Parms;
	memcpy(&GetAliasInputKeyData_Parms.DesiredAlias,&DesiredAlias,0x8);
	GetAliasInputKeyData_Parms.OverridePlatform = OverridePlatform;
	pFnGetAliasInputKeyData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAliasInputKeyData,NULL,&GetAliasInputKeyData_Parms,NULL);
	pFnGetAliasInputKeyData->FunctionFlags |= 0x400;
	if(out_InputKeyData)
		memcpy(out_InputKeyData,&GetAliasInputKeyData_Parms.out_InputKeyData,0xC);
	return GetAliasInputKeyData_Parms.ReturnValue;
}

struct Engine_GetAliasInputKeyNameByIndex_Parms
{
	int                                                AliasIndex;                                       		// 0x000000 (0x0004)              
	unsigned char                                      OverridePlatform;                                 		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	struct FName                                       ReturnValue;                                      		// 0x000008 (0x0008)              
};

struct FName UUIDataStore_InputAlias::GetAliasInputKeyNameByIndex(int AliasIndex,unsigned char OverridePlatform)
{
	static UFieldFunc* pFnGetAliasInputKeyNameByIndex = NULL;
	if(!pFnGetAliasInputKeyNameByIndex)
		pFnGetAliasInputKeyNameByIndex = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyNameByIndex");

	Engine_GetAliasInputKeyNameByIndex_Parms GetAliasInputKeyNameByIndex_Parms;
	GetAliasInputKeyNameByIndex_Parms.AliasIndex = AliasIndex;
	GetAliasInputKeyNameByIndex_Parms.OverridePlatform = OverridePlatform;
	pFnGetAliasInputKeyNameByIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAliasInputKeyNameByIndex,NULL,&GetAliasInputKeyNameByIndex_Parms,NULL);
	pFnGetAliasInputKeyNameByIndex->FunctionFlags |= 0x400;
	return GetAliasInputKeyNameByIndex_Parms.ReturnValue;
}

struct Engine_FindInputAliasIndex_Parms
{
	struct FName                                       DesiredAlias;                                     		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIDataStore_InputAlias::FindInputAliasIndex(struct FName DesiredAlias)
{
	static UFieldFunc* pFnFindInputAliasIndex = NULL;
	if(!pFnFindInputAliasIndex)
		pFnFindInputAliasIndex = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.FindInputAliasIndex");

	Engine_FindInputAliasIndex_Parms FindInputAliasIndex_Parms;
	memcpy(&FindInputAliasIndex_Parms.DesiredAlias,&DesiredAlias,0x8);
	pFnFindInputAliasIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindInputAliasIndex,NULL,&FindInputAliasIndex_Parms,NULL);
	pFnFindInputAliasIndex->FunctionFlags |= 0x400;
	return FindInputAliasIndex_Parms.ReturnValue;
}

struct Engine_GetAliasInputKeyName_Parms
{
	struct FName                                       DesiredAlias;                                     		// 0x000000 (0x0008)              
	unsigned char                                      OverridePlatform;                                 		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	struct FName                                       ReturnValue;                                      		// 0x00000C (0x0008)              
};

struct FName UUIDataStore_InputAlias::GetAliasInputKeyName(struct FName DesiredAlias,unsigned char OverridePlatform)
{
	static UFieldFunc* pFnGetAliasInputKeyName = NULL;
	if(!pFnGetAliasInputKeyName)
		pFnGetAliasInputKeyName = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyName");

	Engine_GetAliasInputKeyName_Parms GetAliasInputKeyName_Parms;
	memcpy(&GetAliasInputKeyName_Parms.DesiredAlias,&DesiredAlias,0x8);
	GetAliasInputKeyName_Parms.OverridePlatform = OverridePlatform;
	pFnGetAliasInputKeyName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAliasInputKeyName,NULL,&GetAliasInputKeyName_Parms,NULL);
	pFnGetAliasInputKeyName->FunctionFlags |= 0x400;
	return GetAliasInputKeyName_Parms.ReturnValue;
}

struct Engine_GetAliasFontMarkupByIndex_Parms
{
	int                                                AliasIndex;                                       		// 0x000000 (0x0004)              
	unsigned char                                      OverridePlatform;                                 		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UUIDataStore_InputAlias::GetAliasFontMarkupByIndex(int AliasIndex,unsigned char OverridePlatform)
{
	static UFieldFunc* pFnGetAliasFontMarkupByIndex = NULL;
	if(!pFnGetAliasFontMarkupByIndex)
		pFnGetAliasFontMarkupByIndex = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.GetAliasFontMarkupByIndex");

	Engine_GetAliasFontMarkupByIndex_Parms GetAliasFontMarkupByIndex_Parms;
	GetAliasFontMarkupByIndex_Parms.AliasIndex = AliasIndex;
	GetAliasFontMarkupByIndex_Parms.OverridePlatform = OverridePlatform;
	pFnGetAliasFontMarkupByIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAliasFontMarkupByIndex,NULL,&GetAliasFontMarkupByIndex_Parms,NULL);
	pFnGetAliasFontMarkupByIndex->FunctionFlags |= 0x400;
	return GetAliasFontMarkupByIndex_Parms.ReturnValue;
}

struct Engine_HasAliasMappingForPlatform_Parms
{
	struct FName                                       DesiredAlias;                                     		// 0x000000 (0x0008)              
	unsigned char                                      DesiredPlatform;                                  		// 0x000008 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIDataStore_InputAlias::HasAliasMappingForPlatform(struct FName DesiredAlias,unsigned char DesiredPlatform)
{
	static UFieldFunc* pFnHasAliasMappingForPlatform = NULL;
	if(!pFnHasAliasMappingForPlatform)
		pFnHasAliasMappingForPlatform = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.HasAliasMappingForPlatform");

	Engine_HasAliasMappingForPlatform_Parms HasAliasMappingForPlatform_Parms;
	memcpy(&HasAliasMappingForPlatform_Parms.DesiredAlias,&DesiredAlias,0x8);
	HasAliasMappingForPlatform_Parms.DesiredPlatform = DesiredPlatform;
	pFnHasAliasMappingForPlatform->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasAliasMappingForPlatform,NULL,&HasAliasMappingForPlatform_Parms,NULL);
	pFnHasAliasMappingForPlatform->FunctionFlags |= 0x400;
	return HasAliasMappingForPlatform_Parms.ReturnValue;
}

struct Engine_GetAliasInputKeyDataByIndex_Parms
{
	struct FRawInputKeyEventData                       out_InputKeyData;                                 		// 0x000000 (0x000C)              
	int                                                AliasIndex;                                       		// 0x00000C (0x0004)              
	unsigned char                                      OverridePlatform;                                 		// 0x000010 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIDataStore_InputAlias::GetAliasInputKeyDataByIndex(struct FRawInputKeyEventData* out_InputKeyData,int AliasIndex,unsigned char OverridePlatform)
{
	static UFieldFunc* pFnGetAliasInputKeyDataByIndex = NULL;
	if(!pFnGetAliasInputKeyDataByIndex)
		pFnGetAliasInputKeyDataByIndex = UObject::FindFunction("Function Engine.UIDataStore_InputAlias.GetAliasInputKeyDataByIndex");

	Engine_GetAliasInputKeyDataByIndex_Parms GetAliasInputKeyDataByIndex_Parms;
	GetAliasInputKeyDataByIndex_Parms.AliasIndex = AliasIndex;
	GetAliasInputKeyDataByIndex_Parms.OverridePlatform = OverridePlatform;
	pFnGetAliasInputKeyDataByIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAliasInputKeyDataByIndex,NULL,&GetAliasInputKeyDataByIndex_Parms,NULL);
	pFnGetAliasInputKeyDataByIndex->FunctionFlags |= 0x400;
	if(out_InputKeyData)
		memcpy(out_InputKeyData,&GetAliasInputKeyDataByIndex_Parms.out_InputKeyData,0xC);
	return GetAliasInputKeyDataByIndex_Parms.ReturnValue;
}

struct Engine_GetStringWithFieldName_Parms
{
	struct FString                                     FieldName;                                        		// 0x000000 (0x000C)              
	struct FString                                     MappedString;                                     		// 0x00000C (0x000C)              
	int                                                ReturnValue;                                      		// 0x000018 (0x0004)              
};

int UUIDataStore_StringAliasMap::GetStringWithFieldName(struct FString FieldName,struct FString* MappedString)
{
	static UFieldFunc* pFnGetStringWithFieldName = NULL;
	if(!pFnGetStringWithFieldName)
		pFnGetStringWithFieldName = UObject::FindFunction("Function Engine.UIDataStore_StringAliasMap.GetStringWithFieldName");

	Engine_GetStringWithFieldName_Parms GetStringWithFieldName_Parms;
	memcpy(&GetStringWithFieldName_Parms.FieldName,&FieldName,0xC);
	pFnGetStringWithFieldName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStringWithFieldName,NULL,&GetStringWithFieldName_Parms,NULL);
	pFnGetStringWithFieldName->FunctionFlags |= 0x400;
	if(MappedString)
		memcpy(MappedString,&GetStringWithFieldName_Parms.MappedString,0xC);
	return GetStringWithFieldName_Parms.ReturnValue;
}

struct Engine_FindMappingWithFieldName_Parms
{
	struct FString                                     FieldName;                                        		// 0x000000 (0x000C)              
	struct FString                                     SetName;                                          		// 0x00000C (0x000C)              
	int                                                ReturnValue;                                      		// 0x000018 (0x0004)              
};

int UUIDataStore_StringAliasMap::FindMappingWithFieldName(struct FString FieldName,struct FString SetName)
{
	static UFieldFunc* pFnFindMappingWithFieldName = NULL;
	if(!pFnFindMappingWithFieldName)
		pFnFindMappingWithFieldName = UObject::FindFunction("Function Engine.UIDataStore_StringAliasMap.FindMappingWithFieldName");

	Engine_FindMappingWithFieldName_Parms FindMappingWithFieldName_Parms;
	memcpy(&FindMappingWithFieldName_Parms.FieldName,&FieldName,0xC);
	memcpy(&FindMappingWithFieldName_Parms.SetName,&SetName,0xC);
	pFnFindMappingWithFieldName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindMappingWithFieldName,NULL,&FindMappingWithFieldName_Parms,NULL);
	pFnFindMappingWithFieldName->FunctionFlags |= 0x400;
	return FindMappingWithFieldName_Parms.ReturnValue;
}

struct Engine_GetPlayerOwner_Parms
{
	class ULocalPlayer*                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

class ULocalPlayer* UUIDataStore_StringAliasMap::GetPlayerOwner()
{
	static UFieldFunc* pFnGetPlayerOwner = NULL;
	if(!pFnGetPlayerOwner)
		pFnGetPlayerOwner = UObject::FindFunction("Function Engine.UIDataStore_StringAliasMap.GetPlayerOwner");

	Engine_GetPlayerOwner_Parms GetPlayerOwner_Parms;
	pFnGetPlayerOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPlayerOwner,NULL,&GetPlayerOwner_Parms,NULL);
	pFnGetPlayerOwner->FunctionFlags |= 0x400;
	return GetPlayerOwner_Parms.ReturnValue;
}

struct Engine_ClearCollectionValueArray_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::ClearCollectionValueArray(struct FName FieldName,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnClearCollectionValueArray = NULL;
	if(!pFnClearCollectionValueArray)
		pFnClearCollectionValueArray = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.ClearCollectionValueArray");

	Engine_ClearCollectionValueArray_Parms ClearCollectionValueArray_Parms;
	memcpy(&ClearCollectionValueArray_Parms.FieldName,&FieldName,0x8);
	ClearCollectionValueArray_Parms.bPersistent = bPersistent;
	memcpy(&ClearCollectionValueArray_Parms.CellTag,&CellTag,0x8);
	pFnClearCollectionValueArray->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearCollectionValueArray,NULL,&ClearCollectionValueArray_Parms,NULL);
	pFnClearCollectionValueArray->FunctionFlags |= 0x400;
	return ClearCollectionValueArray_Parms.ReturnValue;
}

struct Engine_FindFieldIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      bSearchPersistentFields : 1;                      		// 0x000008 (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UUIDynamicFieldProvider::FindFieldIndex(struct FName FieldName,bool bSearchPersistentFields)
{
	static UFieldFunc* pFnFindFieldIndex = NULL;
	if(!pFnFindFieldIndex)
		pFnFindFieldIndex = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.FindFieldIndex");

	Engine_FindFieldIndex_Parms FindFieldIndex_Parms;
	memcpy(&FindFieldIndex_Parms.FieldName,&FieldName,0x8);
	FindFieldIndex_Parms.bSearchPersistentFields = bSearchPersistentFields;
	pFnFindFieldIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindFieldIndex,NULL,&FindFieldIndex_Parms,NULL);
	pFnFindFieldIndex->FunctionFlags |= 0x400;
	return FindFieldIndex_Parms.ReturnValue;
}

struct Engine_SetCollectionValueArray_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	TArray<struct FString>                             CollectionValues;                                 		// 0x000008 (0x000C)              
	unsigned long                                      bClearExisting : 1;                               		// 0x000014 (0x0004) [0x00000001] 
	int                                                InsertIndex;                                      		// 0x000018 (0x0004)              
	unsigned long                                      bPersistent : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000020 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::SetCollectionValueArray(struct FName FieldName,TArray<struct FString>* CollectionValues,bool bClearExisting,int InsertIndex,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnSetCollectionValueArray = NULL;
	if(!pFnSetCollectionValueArray)
		pFnSetCollectionValueArray = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.SetCollectionValueArray");

	Engine_SetCollectionValueArray_Parms SetCollectionValueArray_Parms;
	memcpy(&SetCollectionValueArray_Parms.FieldName,&FieldName,0x8);
	SetCollectionValueArray_Parms.bClearExisting = bClearExisting;
	SetCollectionValueArray_Parms.InsertIndex = InsertIndex;
	SetCollectionValueArray_Parms.bPersistent = bPersistent;
	memcpy(&SetCollectionValueArray_Parms.CellTag,&CellTag,0x8);
	pFnSetCollectionValueArray->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCollectionValueArray,NULL,&SetCollectionValueArray_Parms,NULL);
	pFnSetCollectionValueArray->FunctionFlags |= 0x400;
	if(CollectionValues)
		memcpy(CollectionValues,&SetCollectionValueArray_Parms.CollectionValues,0xC);
	return SetCollectionValueArray_Parms.ReturnValue;
}

struct Engine_ClearFields_Parms
{
	unsigned long                                      bReinitializeRuntimeFields : 1;                   		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::ClearFields(bool bReinitializeRuntimeFields)
{
	static UFieldFunc* pFnClearFields = NULL;
	if(!pFnClearFields)
		pFnClearFields = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.ClearFields");

	Engine_ClearFields_Parms ClearFields_Parms;
	ClearFields_Parms.bReinitializeRuntimeFields = bReinitializeRuntimeFields;
	pFnClearFields->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearFields,NULL,&ClearFields_Parms,NULL);
	pFnClearFields->FunctionFlags |= 0x400;
	return ClearFields_Parms.ReturnValue;
}

struct Engine_InitializeRuntimeFields_Parms
{
};

void UUIDynamicFieldProvider::InitializeRuntimeFields()
{
	static UFieldFunc* pFnInitializeRuntimeFields = NULL;
	if(!pFnInitializeRuntimeFields)
		pFnInitializeRuntimeFields = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.InitializeRuntimeFields");

	Engine_InitializeRuntimeFields_Parms InitializeRuntimeFields_Parms;
	pFnInitializeRuntimeFields->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInitializeRuntimeFields,NULL,&InitializeRuntimeFields_Parms,NULL);
	pFnInitializeRuntimeFields->FunctionFlags |= 0x400;
}

struct Engine_GetCollectionValueSchema_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	TArray<struct FName>                               out_CellTagArray;                                 		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::GetCollectionValueSchema(struct FName FieldName,TArray<struct FName>* out_CellTagArray,bool bPersistent)
{
	static UFieldFunc* pFnGetCollectionValueSchema = NULL;
	if(!pFnGetCollectionValueSchema)
		pFnGetCollectionValueSchema = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.GetCollectionValueSchema");

	Engine_GetCollectionValueSchema_Parms GetCollectionValueSchema_Parms;
	memcpy(&GetCollectionValueSchema_Parms.FieldName,&FieldName,0x8);
	GetCollectionValueSchema_Parms.bPersistent = bPersistent;
	pFnGetCollectionValueSchema->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCollectionValueSchema,NULL,&GetCollectionValueSchema_Parms,NULL);
	pFnGetCollectionValueSchema->FunctionFlags |= 0x400;
	if(out_CellTagArray)
		memcpy(out_CellTagArray,&GetCollectionValueSchema_Parms.out_CellTagArray,0xC);
	return GetCollectionValueSchema_Parms.ReturnValue;
}

struct Engine_RemoveField_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::RemoveField(struct FName FieldName)
{
	static UFieldFunc* pFnRemoveField = NULL;
	if(!pFnRemoveField)
		pFnRemoveField = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.RemoveField");

	Engine_RemoveField_Parms RemoveField_Parms;
	memcpy(&RemoveField_Parms.FieldName,&FieldName,0x8);
	pFnRemoveField->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveField,NULL,&RemoveField_Parms,NULL);
	pFnRemoveField->FunctionFlags |= 0x400;
	return RemoveField_Parms.ReturnValue;
}

struct Engine_RemoveCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     ValueToRemove;                                    		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000018 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::RemoveCollectionValue(struct FName FieldName,struct FString* ValueToRemove,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnRemoveCollectionValue = NULL;
	if(!pFnRemoveCollectionValue)
		pFnRemoveCollectionValue = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.RemoveCollectionValue");

	Engine_RemoveCollectionValue_Parms RemoveCollectionValue_Parms;
	memcpy(&RemoveCollectionValue_Parms.FieldName,&FieldName,0x8);
	RemoveCollectionValue_Parms.bPersistent = bPersistent;
	memcpy(&RemoveCollectionValue_Parms.CellTag,&CellTag,0x8);
	pFnRemoveCollectionValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveCollectionValue,NULL,&RemoveCollectionValue_Parms,NULL);
	pFnRemoveCollectionValue->FunctionFlags |= 0x400;
	if(ValueToRemove)
		memcpy(ValueToRemove,&RemoveCollectionValue_Parms.ValueToRemove,0xC);
	return RemoveCollectionValue_Parms.ReturnValue;
}

struct Engine_ReplaceCollectionValueByIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	struct FString                                     NewValue;                                         		// 0x00000C (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x00001C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::ReplaceCollectionValueByIndex(struct FName FieldName,int ValueIndex,struct FString* NewValue,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnReplaceCollectionValueByIndex = NULL;
	if(!pFnReplaceCollectionValueByIndex)
		pFnReplaceCollectionValueByIndex = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.ReplaceCollectionValueByIndex");

	Engine_ReplaceCollectionValueByIndex_Parms ReplaceCollectionValueByIndex_Parms;
	memcpy(&ReplaceCollectionValueByIndex_Parms.FieldName,&FieldName,0x8);
	ReplaceCollectionValueByIndex_Parms.ValueIndex = ValueIndex;
	ReplaceCollectionValueByIndex_Parms.bPersistent = bPersistent;
	memcpy(&ReplaceCollectionValueByIndex_Parms.CellTag,&CellTag,0x8);
	pFnReplaceCollectionValueByIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReplaceCollectionValueByIndex,NULL,&ReplaceCollectionValueByIndex_Parms,NULL);
	pFnReplaceCollectionValueByIndex->FunctionFlags |= 0x400;
	if(NewValue)
		memcpy(NewValue,&ReplaceCollectionValueByIndex_Parms.NewValue,0xC);
	return ReplaceCollectionValueByIndex_Parms.ReturnValue;
}

struct Engine_GetCollectionValueArray_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	TArray<struct FString>                             out_DataValueArray;                               		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000018 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::GetCollectionValueArray(struct FName FieldName,TArray<struct FString>* out_DataValueArray,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnGetCollectionValueArray = NULL;
	if(!pFnGetCollectionValueArray)
		pFnGetCollectionValueArray = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.GetCollectionValueArray");

	Engine_GetCollectionValueArray_Parms GetCollectionValueArray_Parms;
	memcpy(&GetCollectionValueArray_Parms.FieldName,&FieldName,0x8);
	GetCollectionValueArray_Parms.bPersistent = bPersistent;
	memcpy(&GetCollectionValueArray_Parms.CellTag,&CellTag,0x8);
	pFnGetCollectionValueArray->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCollectionValueArray,NULL,&GetCollectionValueArray_Parms,NULL);
	pFnGetCollectionValueArray->FunctionFlags |= 0x400;
	if(out_DataValueArray)
		memcpy(out_DataValueArray,&GetCollectionValueArray_Parms.out_DataValueArray,0xC);
	return GetCollectionValueArray_Parms.ReturnValue;
}

struct Engine_RemoveCollectionValueByIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	unsigned long                                      bPersistent : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000010 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::RemoveCollectionValueByIndex(struct FName FieldName,int ValueIndex,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnRemoveCollectionValueByIndex = NULL;
	if(!pFnRemoveCollectionValueByIndex)
		pFnRemoveCollectionValueByIndex = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.RemoveCollectionValueByIndex");

	Engine_RemoveCollectionValueByIndex_Parms RemoveCollectionValueByIndex_Parms;
	memcpy(&RemoveCollectionValueByIndex_Parms.FieldName,&FieldName,0x8);
	RemoveCollectionValueByIndex_Parms.ValueIndex = ValueIndex;
	RemoveCollectionValueByIndex_Parms.bPersistent = bPersistent;
	memcpy(&RemoveCollectionValueByIndex_Parms.CellTag,&CellTag,0x8);
	pFnRemoveCollectionValueByIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveCollectionValueByIndex,NULL,&RemoveCollectionValueByIndex_Parms,NULL);
	pFnRemoveCollectionValueByIndex->FunctionFlags |= 0x400;
	return RemoveCollectionValueByIndex_Parms.ReturnValue;
}

struct Engine_GetCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	int                                                ValueIndex;                                       		// 0x000008 (0x0004)              
	struct FString                                     out_Value;                                        		// 0x00000C (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x00001C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::GetCollectionValue(struct FName FieldName,int ValueIndex,struct FString* out_Value,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnGetCollectionValue = NULL;
	if(!pFnGetCollectionValue)
		pFnGetCollectionValue = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.GetCollectionValue");

	Engine_GetCollectionValue_Parms GetCollectionValue_Parms;
	memcpy(&GetCollectionValue_Parms.FieldName,&FieldName,0x8);
	GetCollectionValue_Parms.ValueIndex = ValueIndex;
	GetCollectionValue_Parms.bPersistent = bPersistent;
	memcpy(&GetCollectionValue_Parms.CellTag,&CellTag,0x8);
	pFnGetCollectionValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCollectionValue,NULL,&GetCollectionValue_Parms,NULL);
	pFnGetCollectionValue->FunctionFlags |= 0x400;
	if(out_Value)
		memcpy(out_Value,&GetCollectionValue_Parms.out_Value,0xC);
	return GetCollectionValue_Parms.ReturnValue;
}

struct Engine_SavePersistentProviderData_Parms
{
};

void UUIDynamicFieldProvider::SavePersistentProviderData()
{
	static UFieldFunc* pFnSavePersistentProviderData = NULL;
	if(!pFnSavePersistentProviderData)
		pFnSavePersistentProviderData = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.SavePersistentProviderData");

	Engine_SavePersistentProviderData_Parms SavePersistentProviderData_Parms;
	pFnSavePersistentProviderData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSavePersistentProviderData,NULL,&SavePersistentProviderData_Parms,NULL);
	pFnSavePersistentProviderData->FunctionFlags |= 0x400;
}

struct Engine_FindCollectionValueIndex_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     ValueToFind;                                      		// 0x000008 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000018 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000020 (0x0004)              
};

int UUIDynamicFieldProvider::FindCollectionValueIndex(struct FName FieldName,struct FString* ValueToFind,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnFindCollectionValueIndex = NULL;
	if(!pFnFindCollectionValueIndex)
		pFnFindCollectionValueIndex = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.FindCollectionValueIndex");

	Engine_FindCollectionValueIndex_Parms FindCollectionValueIndex_Parms;
	memcpy(&FindCollectionValueIndex_Parms.FieldName,&FieldName,0x8);
	FindCollectionValueIndex_Parms.bPersistent = bPersistent;
	memcpy(&FindCollectionValueIndex_Parms.CellTag,&CellTag,0x8);
	pFnFindCollectionValueIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindCollectionValueIndex,NULL,&FindCollectionValueIndex_Parms,NULL);
	pFnFindCollectionValueIndex->FunctionFlags |= 0x400;
	if(ValueToFind)
		memcpy(ValueToFind,&FindCollectionValueIndex_Parms.ValueToFind,0xC);
	return FindCollectionValueIndex_Parms.ReturnValue;
}

struct Engine_GetField_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FUIProviderScriptFieldValue                 out_Field;                                        		// 0x000008 (0x0040)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000048 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::GetField(struct FName FieldName,struct FUIProviderScriptFieldValue* out_Field)
{
	static UFieldFunc* pFnGetField = NULL;
	if(!pFnGetField)
		pFnGetField = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.GetField");

	Engine_GetField_Parms GetField_Parms;
	memcpy(&GetField_Parms.FieldName,&FieldName,0x8);
	pFnGetField->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetField,NULL,&GetField_Parms,NULL);
	pFnGetField->FunctionFlags |= 0x400;
	if(out_Field)
		memcpy(out_Field,&GetField_Parms.out_Field,0x40);
	return GetField_Parms.ReturnValue;
}

struct Engine_AddField_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	unsigned char                                      FieldType;                                        		// 0x000008 (0x0001)              
	unsigned long                                      bPersistent : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	int                                                out_InsertPosition;                               		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::AddField(struct FName FieldName,unsigned char FieldType,bool bPersistent,int* out_InsertPosition)
{
	static UFieldFunc* pFnAddField = NULL;
	if(!pFnAddField)
		pFnAddField = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.AddField");

	Engine_AddField_Parms AddField_Parms;
	memcpy(&AddField_Parms.FieldName,&FieldName,0x8);
	AddField_Parms.FieldType = FieldType;
	AddField_Parms.bPersistent = bPersistent;
	pFnAddField->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddField,NULL,&AddField_Parms,NULL);
	pFnAddField->FunctionFlags |= 0x400;
	if(out_InsertPosition)
		*out_InsertPosition = AddField_Parms.out_InsertPosition;
	return AddField_Parms.ReturnValue;
}

struct Engine_ReplaceCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     CurrentValue;                                     		// 0x000008 (0x000C)              
	struct FString                                     NewValue;                                         		// 0x000014 (0x000C)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000024 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00002C (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::ReplaceCollectionValue(struct FName FieldName,struct FString* CurrentValue,struct FString* NewValue,bool bPersistent,struct FName CellTag)
{
	static UFieldFunc* pFnReplaceCollectionValue = NULL;
	if(!pFnReplaceCollectionValue)
		pFnReplaceCollectionValue = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.ReplaceCollectionValue");

	Engine_ReplaceCollectionValue_Parms ReplaceCollectionValue_Parms;
	memcpy(&ReplaceCollectionValue_Parms.FieldName,&FieldName,0x8);
	ReplaceCollectionValue_Parms.bPersistent = bPersistent;
	memcpy(&ReplaceCollectionValue_Parms.CellTag,&CellTag,0x8);
	pFnReplaceCollectionValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReplaceCollectionValue,NULL,&ReplaceCollectionValue_Parms,NULL);
	pFnReplaceCollectionValue->FunctionFlags |= 0x400;
	if(CurrentValue)
		memcpy(CurrentValue,&ReplaceCollectionValue_Parms.CurrentValue,0xC);
	if(NewValue)
		memcpy(NewValue,&ReplaceCollectionValue_Parms.NewValue,0xC);
	return ReplaceCollectionValue_Parms.ReturnValue;
}

struct Engine_InsertCollectionValue_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FString                                     NewValue;                                         		// 0x000008 (0x000C)              
	int                                                InsertIndex;                                      		// 0x000014 (0x0004)              
	unsigned long                                      bPersistent : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bAllowDuplicateValues : 1;                        		// 0x00001C (0x0004) [0x00000001] 
	struct FName                                       CellTag;                                          		// 0x000020 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::InsertCollectionValue(struct FName FieldName,struct FString* NewValue,int InsertIndex,bool bPersistent,bool bAllowDuplicateValues,struct FName CellTag)
{
	static UFieldFunc* pFnInsertCollectionValue = NULL;
	if(!pFnInsertCollectionValue)
		pFnInsertCollectionValue = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.InsertCollectionValue");

	Engine_InsertCollectionValue_Parms InsertCollectionValue_Parms;
	memcpy(&InsertCollectionValue_Parms.FieldName,&FieldName,0x8);
	InsertCollectionValue_Parms.InsertIndex = InsertIndex;
	InsertCollectionValue_Parms.bPersistent = bPersistent;
	InsertCollectionValue_Parms.bAllowDuplicateValues = bAllowDuplicateValues;
	memcpy(&InsertCollectionValue_Parms.CellTag,&CellTag,0x8);
	pFnInsertCollectionValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInsertCollectionValue,NULL,&InsertCollectionValue_Parms,NULL);
	pFnInsertCollectionValue->FunctionFlags |= 0x400;
	if(NewValue)
		memcpy(NewValue,&InsertCollectionValue_Parms.NewValue,0xC);
	return InsertCollectionValue_Parms.ReturnValue;
}

struct Engine_SetField_Parms
{
	struct FName                                       FieldName;                                        		// 0x000000 (0x0008)              
	struct FUIProviderScriptFieldValue                 FieldValue;                                       		// 0x000008 (0x0040)              
	unsigned long                                      bChangeExistingOnly : 1;                          		// 0x000048 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00004C (0x0004) [0x00000001] 
};

bool UUIDynamicFieldProvider::SetField(struct FName FieldName,struct FUIProviderScriptFieldValue* FieldValue,bool bChangeExistingOnly)
{
	static UFieldFunc* pFnSetField = NULL;
	if(!pFnSetField)
		pFnSetField = UObject::FindFunction("Function Engine.UIDynamicFieldProvider.SetField");

	Engine_SetField_Parms SetField_Parms;
	memcpy(&SetField_Parms.FieldName,&FieldName,0x8);
	SetField_Parms.bChangeExistingOnly = bChangeExistingOnly;
	pFnSetField->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetField,NULL,&SetField_Parms,NULL);
	pFnSetField->FunctionFlags |= 0x400;
	if(FieldValue)
		memcpy(FieldValue,&SetField_Parms.FieldValue,0x40);
	return SetField_Parms.ReturnValue;
}

struct Engine_GetCustomPropertyValue_Parms
{
	struct FUIProviderScriptFieldValue                 PropertyValue;                                    		// 0x000000 (0x0040)              
	int                                                ArrayIndex;                                       		// 0x000040 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000044 (0x0004) [0x00000001] 
};

bool UUIPropertyDataProvider::GetCustomPropertyValue(struct FUIProviderScriptFieldValue* PropertyValue,int ArrayIndex)
{
	static UFieldFunc* pFnGetCustomPropertyValue = NULL;
	if(!pFnGetCustomPropertyValue)
		pFnGetCustomPropertyValue = UObject::FindFunction("Function Engine.UIPropertyDataProvider.GetCustomPropertyValue");

	Engine_GetCustomPropertyValue_Parms GetCustomPropertyValue_Parms;
	GetCustomPropertyValue_Parms.ArrayIndex = ArrayIndex;
	ProcessEvent(pFnGetCustomPropertyValue,NULL,&GetCustomPropertyValue_Parms,NULL);
	if(PropertyValue)
		memcpy(PropertyValue,&GetCustomPropertyValue_Parms.PropertyValue,0x40);
	return GetCustomPropertyValue_Parms.ReturnValue;
}

struct Engine_CanSupportComplexPropertyType_Parms
{
	class UField*                                      UnsupportedProperty;                              		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIPropertyDataProvider::CanSupportComplexPropertyType(class UField* UnsupportedProperty)
{
	static UFieldFunc* pFnCanSupportComplexPropertyType = NULL;
	if(!pFnCanSupportComplexPropertyType)
		pFnCanSupportComplexPropertyType = UObject::FindFunction("Function Engine.UIPropertyDataProvider.CanSupportComplexPropertyType");

	Engine_CanSupportComplexPropertyType_Parms CanSupportComplexPropertyType_Parms;
	CanSupportComplexPropertyType_Parms.UnsupportedProperty = UnsupportedProperty;
	ProcessEvent(pFnCanSupportComplexPropertyType,NULL,&CanSupportComplexPropertyType_Parms,NULL);
	return CanSupportComplexPropertyType_Parms.ReturnValue;
}

struct Engine_BindProviderInstance_Parms
{
	class UObject*                                     DataSourceInstance;                               		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIDynamicDataProvider::BindProviderInstance(class UObject* DataSourceInstance)
{
	static UFieldFunc* pFnBindProviderInstance = NULL;
	if(!pFnBindProviderInstance)
		pFnBindProviderInstance = UObject::FindFunction("Function Engine.UIDynamicDataProvider.BindProviderInstance");

	Engine_BindProviderInstance_Parms BindProviderInstance_Parms;
	BindProviderInstance_Parms.DataSourceInstance = DataSourceInstance;
	pFnBindProviderInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBindProviderInstance,NULL,&BindProviderInstance_Parms,NULL);
	pFnBindProviderInstance->FunctionFlags |= 0x400;
	return BindProviderInstance_Parms.ReturnValue;
}

struct Engine_GetDataSource_Parms
{
	class UObject*                                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UObject* UUIDynamicDataProvider::GetDataSource()
{
	static UFieldFunc* pFnGetDataSource = NULL;
	if(!pFnGetDataSource)
		pFnGetDataSource = UObject::FindFunction("Function Engine.UIDynamicDataProvider.GetDataSource");

	Engine_GetDataSource_Parms GetDataSource_Parms;
	ProcessEvent(pFnGetDataSource,NULL,&GetDataSource_Parms,NULL);
	return GetDataSource_Parms.ReturnValue;
}

struct Engine_ProviderInstanceBound_Parms
{
	class UObject*                                     DataSourceInstance;                               		// 0x000000 (0x0004)              
};

void UUIDynamicDataProvider::ProviderInstanceBound(class UObject* DataSourceInstance)
{
	static UFieldFunc* pFnProviderInstanceBound = NULL;
	if(!pFnProviderInstanceBound)
		pFnProviderInstanceBound = UObject::FindFunction("Function Engine.UIDynamicDataProvider.ProviderInstanceBound");

	Engine_ProviderInstanceBound_Parms ProviderInstanceBound_Parms;
	ProviderInstanceBound_Parms.DataSourceInstance = DataSourceInstance;
	ProcessEvent(pFnProviderInstanceBound,NULL,&ProviderInstanceBound_Parms,NULL);
}

struct Engine_ProviderInstanceUnbound_Parms
{
	class UObject*                                     DataSourceInstance;                               		// 0x000000 (0x0004)              
};

void UUIDynamicDataProvider::ProviderInstanceUnbound(class UObject* DataSourceInstance)
{
	static UFieldFunc* pFnProviderInstanceUnbound = NULL;
	if(!pFnProviderInstanceUnbound)
		pFnProviderInstanceUnbound = UObject::FindFunction("Function Engine.UIDynamicDataProvider.ProviderInstanceUnbound");

	Engine_ProviderInstanceUnbound_Parms ProviderInstanceUnbound_Parms;
	ProviderInstanceUnbound_Parms.DataSourceInstance = DataSourceInstance;
	ProcessEvent(pFnProviderInstanceUnbound,NULL,&ProviderInstanceUnbound_Parms,NULL);
}

struct Engine_UnbindProviderInstance_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDynamicDataProvider::UnbindProviderInstance()
{
	static UFieldFunc* pFnUnbindProviderInstance = NULL;
	if(!pFnUnbindProviderInstance)
		pFnUnbindProviderInstance = UObject::FindFunction("Function Engine.UIDynamicDataProvider.UnbindProviderInstance");

	Engine_UnbindProviderInstance_Parms UnbindProviderInstance_Parms;
	pFnUnbindProviderInstance->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnbindProviderInstance,NULL,&UnbindProviderInstance_Parms,NULL);
	pFnUnbindProviderInstance->FunctionFlags |= 0x400;
	return UnbindProviderInstance_Parms.ReturnValue;
}

struct Engine_CleanupDataProvider_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIDynamicDataProvider::CleanupDataProvider()
{
	static UFieldFunc* pFnCleanupDataProvider = NULL;
	if(!pFnCleanupDataProvider)
		pFnCleanupDataProvider = UObject::FindFunction("Function Engine.UIDynamicDataProvider.CleanupDataProvider");

	Engine_CleanupDataProvider_Parms CleanupDataProvider_Parms;
	ProcessEvent(pFnCleanupDataProvider,NULL,&CleanupDataProvider_Parms,NULL);
	return CleanupDataProvider_Parms.ReturnValue;
}

struct Engine_IsValidDataSourceClass_Parms
{
	class UClass*                                      PotentialDataSourceClass;                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIDynamicDataProvider::IsValidDataSourceClass(class UClass* PotentialDataSourceClass)
{
	static UFieldFunc* pFnIsValidDataSourceClass = NULL;
	if(!pFnIsValidDataSourceClass)
		pFnIsValidDataSourceClass = UObject::FindFunction("Function Engine.UIDynamicDataProvider.IsValidDataSourceClass");

	Engine_IsValidDataSourceClass_Parms IsValidDataSourceClass_Parms;
	IsValidDataSourceClass_Parms.PotentialDataSourceClass = PotentialDataSourceClass;
	ProcessEvent(pFnIsValidDataSourceClass,NULL,&IsValidDataSourceClass_Parms,NULL);
	return IsValidDataSourceClass_Parms.ReturnValue;
}

struct Engine_ProviderInstanceBound_Parms
{
	class UObject*                                     DataSourceInstance;                               		// 0x000000 (0x0004)              
	//class AGameReplicationInfo*                        GRI;                                              		// 0x000004 (0x0004)              
};

void UGameInfoDataProvider::ProviderInstanceBound(class UObject* DataSourceInstance)
{
	static UFieldFunc* pFnProviderInstanceBound = NULL;
	if(!pFnProviderInstanceBound)
		pFnProviderInstanceBound = UObject::FindFunction("Function Engine.GameInfoDataProvider.ProviderInstanceBound");

	Engine_ProviderInstanceBound_Parms ProviderInstanceBound_Parms;
	ProviderInstanceBound_Parms.DataSourceInstance = DataSourceInstance;
	ProcessEvent(pFnProviderInstanceBound,NULL,&ProviderInstanceBound_Parms,NULL);
}

struct Engine_IsValidDataSourceClass_Parms
{
	class UClass*                                      PotentialDataSourceClass;                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

bool UPowerupDataProvider::IsValidDataSourceClass(class UClass* PotentialDataSourceClass)
{
	static UFieldFunc* pFnIsValidDataSourceClass = NULL;
	if(!pFnIsValidDataSourceClass)
		pFnIsValidDataSourceClass = UObject::FindFunction("Function Engine.PowerupDataProvider.IsValidDataSourceClass");

	Engine_IsValidDataSourceClass_Parms IsValidDataSourceClass_Parms;
	IsValidDataSourceClass_Parms.PotentialDataSourceClass = PotentialDataSourceClass;
	ProcessEvent(pFnIsValidDataSourceClass,NULL,&IsValidDataSourceClass_Parms,NULL);
	return IsValidDataSourceClass_Parms.ReturnValue;
}

struct Engine_SetPlayerDataProvider_Parms
{
	class UPlayerDataProvider*                         NewPlayerData;                                    		// 0x000000 (0x0004)              
	//class UObject*                                     PRI;                                              		// 0x000004 (0x0004)              
};

void UPlayerOwnerDataProvider::SetPlayerDataProvider(class UPlayerDataProvider* NewPlayerData)
{
	static UFieldFunc* pFnSetPlayerDataProvider = NULL;
	if(!pFnSetPlayerDataProvider)
		pFnSetPlayerDataProvider = UObject::FindFunction("Function Engine.PlayerOwnerDataProvider.SetPlayerDataProvider");

	Engine_SetPlayerDataProvider_Parms SetPlayerDataProvider_Parms;
	SetPlayerDataProvider_Parms.NewPlayerData = NewPlayerData;
	ProcessEvent(pFnSetPlayerDataProvider,NULL,&SetPlayerDataProvider_Parms,NULL);
}

struct Engine_CleanupDataProvider_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UPlayerOwnerDataProvider::CleanupDataProvider()
{
	static UFieldFunc* pFnCleanupDataProvider = NULL;
	if(!pFnCleanupDataProvider)
		pFnCleanupDataProvider = UObject::FindFunction("Function Engine.PlayerOwnerDataProvider.CleanupDataProvider");

	Engine_CleanupDataProvider_Parms CleanupDataProvider_Parms;
	ProcessEvent(pFnCleanupDataProvider,NULL,&CleanupDataProvider_Parms,NULL);
	return CleanupDataProvider_Parms.ReturnValue;
}

struct Engine_RegeneratePlayerLists_Parms
{
	TArray<class UPlayerDataProvider*>                 AllPlayers;                                       		// 0x000000 (0x000C)              
	//int                                                PlayerIdx;                                        		// 0x00000C (0x0004)              
	//class APlayerReplicationInfo*                      PRI;                                              		// 0x000010 (0x0004)              
};

void UTeamDataProvider::RegeneratePlayerLists(TArray<class UPlayerDataProvider*> AllPlayers)
{
	static UFieldFunc* pFnRegeneratePlayerLists = NULL;
	if(!pFnRegeneratePlayerLists)
		pFnRegeneratePlayerLists = UObject::FindFunction("Function Engine.TeamDataProvider.RegeneratePlayerLists");

	Engine_RegeneratePlayerLists_Parms RegeneratePlayerLists_Parms;
	memcpy(&RegeneratePlayerLists_Parms.AllPlayers,&AllPlayers,0xC);
	ProcessEvent(pFnRegeneratePlayerLists,NULL,&RegeneratePlayerLists_Parms,NULL);
}

struct Engine_CleanupDataProvider_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUISettingsProvider::CleanupDataProvider()
{
	static UFieldFunc* pFnCleanupDataProvider = NULL;
	if(!pFnCleanupDataProvider)
		pFnCleanupDataProvider = UObject::FindFunction("Function Engine.UISettingsProvider.CleanupDataProvider");

	Engine_CleanupDataProvider_Parms CleanupDataProvider_Parms;
	ProcessEvent(pFnCleanupDataProvider,NULL,&CleanupDataProvider_Parms,NULL);
	return CleanupDataProvider_Parms.ReturnValue;
}

struct Engine_LoadPropertyValue_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	class UUIObject*                                   Widget;                                           		// 0x000008 (0x0004)              
};

void UUISettingsProvider::LoadPropertyValue(struct FName PropertyName,class UUIObject* Widget)
{
	static UFieldFunc* pFnLoadPropertyValue = NULL;
	if(!pFnLoadPropertyValue)
		pFnLoadPropertyValue = UObject::FindFunction("Function Engine.UISettingsProvider.LoadPropertyValue");

	Engine_LoadPropertyValue_Parms LoadPropertyValue_Parms;
	memcpy(&LoadPropertyValue_Parms.PropertyName,&PropertyName,0x8);
	LoadPropertyValue_Parms.Widget = Widget;
	ProcessEvent(pFnLoadPropertyValue,NULL,&LoadPropertyValue_Parms,NULL);
}

struct Engine_OnModifiedProperty_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	class UUIObject*                                   Widget;                                           		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUISettingsProvider::OnModifiedProperty(struct FName PropertyName,class UUIObject* Widget)
{
	static UFieldFunc* pFnOnModifiedProperty = NULL;
	if(!pFnOnModifiedProperty)
		pFnOnModifiedProperty = UObject::FindFunction("Function Engine.UISettingsProvider.OnModifiedProperty");

	Engine_OnModifiedProperty_Parms OnModifiedProperty_Parms;
	memcpy(&OnModifiedProperty_Parms.PropertyName,&PropertyName,0x8);
	OnModifiedProperty_Parms.Widget = Widget;
	ProcessEvent(pFnOnModifiedProperty,NULL,&OnModifiedProperty_Parms,NULL);
	return OnModifiedProperty_Parms.ReturnValue;
}

struct Engine_SavePropertyValue_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
	class UUIObject*                                   Widget;                                           		// 0x000008 (0x0004)              
};

void UUISettingsProvider::SavePropertyValue(struct FName PropertyName,class UUIObject* Widget)
{
	static UFieldFunc* pFnSavePropertyValue = NULL;
	if(!pFnSavePropertyValue)
		pFnSavePropertyValue = UObject::FindFunction("Function Engine.UISettingsProvider.SavePropertyValue");

	Engine_SavePropertyValue_Parms SavePropertyValue_Parms;
	memcpy(&SavePropertyValue_Parms.PropertyName,&PropertyName,0x8);
	SavePropertyValue_Parms.Widget = Widget;
	ProcessEvent(pFnSavePropertyValue,NULL,&SavePropertyValue_Parms,NULL);
}

struct Engine_OnRegister_Parms
{
	class ULocalPlayer*                                InPlayer;                                         		// 0x000000 (0x0004)              
};

void UPlayerSettingsProvider::OnRegister(class ULocalPlayer* InPlayer)
{
	static UFieldFunc* pFnOnRegister = NULL;
	if(!pFnOnRegister)
		pFnOnRegister = UObject::FindFunction("Function Engine.PlayerSettingsProvider.OnRegister");

	Engine_OnRegister_Parms OnRegister_Parms;
	OnRegister_Parms.InPlayer = InPlayer;
	ProcessEvent(pFnOnRegister,NULL,&OnRegister_Parms,NULL);
}

struct Engine_OnUnregister_Parms
{
};

void UPlayerSettingsProvider::OnUnregister()
{
	static UFieldFunc* pFnOnUnregister = NULL;
	if(!pFnOnUnregister)
		pFnOnUnregister = UObject::FindFunction("Function Engine.PlayerSettingsProvider.OnUnregister");

	Engine_OnUnregister_Parms OnUnregister_Parms;
	ProcessEvent(pFnOnUnregister,NULL,&OnUnregister_Parms,NULL);
}

struct Engine_BindProviderClient_Parms
{
	class UClass*                                      DataSourceClass;                                  		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USessionSettingsProvider::BindProviderClient(class UClass* DataSourceClass)
{
	static UFieldFunc* pFnBindProviderClient = NULL;
	if(!pFnBindProviderClient)
		pFnBindProviderClient = UObject::FindFunction("Function Engine.SessionSettingsProvider.BindProviderClient");

	Engine_BindProviderClient_Parms BindProviderClient_Parms;
	BindProviderClient_Parms.DataSourceClass = DataSourceClass;
	pFnBindProviderClient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBindProviderClient,NULL,&BindProviderClient_Parms,NULL);
	pFnBindProviderClient->FunctionFlags |= 0x400;
	return BindProviderClient_Parms.ReturnValue;
}

struct Engine_ProviderClientUnbound_Parms
{
	class UClass*                                      DataSourceClass;                                  		// 0x000000 (0x0004)              
};

void USessionSettingsProvider::ProviderClientUnbound(class UClass* DataSourceClass)
{
	static UFieldFunc* pFnProviderClientUnbound = NULL;
	if(!pFnProviderClientUnbound)
		pFnProviderClientUnbound = UObject::FindFunction("Function Engine.SessionSettingsProvider.ProviderClientUnbound");

	Engine_ProviderClientUnbound_Parms ProviderClientUnbound_Parms;
	ProviderClientUnbound_Parms.DataSourceClass = DataSourceClass;
	ProcessEvent(pFnProviderClientUnbound,NULL,&ProviderClientUnbound_Parms,NULL);
}

struct Engine_CleanupDataProvider_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USessionSettingsProvider::CleanupDataProvider()
{
	static UFieldFunc* pFnCleanupDataProvider = NULL;
	if(!pFnCleanupDataProvider)
		pFnCleanupDataProvider = UObject::FindFunction("Function Engine.SessionSettingsProvider.CleanupDataProvider");

	Engine_CleanupDataProvider_Parms CleanupDataProvider_Parms;
	ProcessEvent(pFnCleanupDataProvider,NULL,&CleanupDataProvider_Parms,NULL);
	return CleanupDataProvider_Parms.ReturnValue;
}

struct Engine_IsValidDataSourceClass_Parms
{
	class UClass*                                      PotentialDataSourceClass;                         		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USessionSettingsProvider::IsValidDataSourceClass(class UClass* PotentialDataSourceClass)
{
	static UFieldFunc* pFnIsValidDataSourceClass = NULL;
	if(!pFnIsValidDataSourceClass)
		pFnIsValidDataSourceClass = UObject::FindFunction("Function Engine.SessionSettingsProvider.IsValidDataSourceClass");

	Engine_IsValidDataSourceClass_Parms IsValidDataSourceClass_Parms;
	IsValidDataSourceClass_Parms.PotentialDataSourceClass = PotentialDataSourceClass;
	ProcessEvent(pFnIsValidDataSourceClass,NULL,&IsValidDataSourceClass_Parms,NULL);
	return IsValidDataSourceClass_Parms.ReturnValue;
}

struct Engine_ProviderClientBound_Parms
{
	class UClass*                                      DataSourceClass;                                  		// 0x000000 (0x0004)              
};

void USessionSettingsProvider::ProviderClientBound(class UClass* DataSourceClass)
{
	static UFieldFunc* pFnProviderClientBound = NULL;
	if(!pFnProviderClientBound)
		pFnProviderClientBound = UObject::FindFunction("Function Engine.SessionSettingsProvider.ProviderClientBound");

	Engine_ProviderClientBound_Parms ProviderClientBound_Parms;
	ProviderClientBound_Parms.DataSourceClass = DataSourceClass;
	ProcessEvent(pFnProviderClientBound,NULL,&ProviderClientBound_Parms,NULL);
}

struct Engine_UnbindProviderClient_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USessionSettingsProvider::UnbindProviderClient()
{
	static UFieldFunc* pFnUnbindProviderClient = NULL;
	if(!pFnUnbindProviderClient)
		pFnUnbindProviderClient = UObject::FindFunction("Function Engine.SessionSettingsProvider.UnbindProviderClient");

	Engine_UnbindProviderClient_Parms UnbindProviderClient_Parms;
	pFnUnbindProviderClient->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnbindProviderClient,NULL,&UnbindProviderClient_Parms,NULL);
	pFnUnbindProviderClient->FunctionFlags |= 0x400;
	return UnbindProviderClient_Parms.ReturnValue;
}

struct Engine_GetTransientScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScene* UGameUISceneClient::GetTransientScene()
{
	static UFieldFunc* pFnGetTransientScene = NULL;
	if(!pFnGetTransientScene)
		pFnGetTransientScene = UObject::FindFunction("Function Engine.GameUISceneClient.GetTransientScene");

	Engine_GetTransientScene_Parms GetTransientScene_Parms;
	pFnGetTransientScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTransientScene,NULL,&GetTransientScene_Parms,NULL);
	pFnGetTransientScene->FunctionFlags |= 0x400;
	return GetTransientScene_Parms.ReturnValue;
}

struct Engine_SaveMenuProgression_Parms
{
	//class UDataStoreClient*                            DSClient;                                         		// 0x000000 (0x0004)              
	//class UUIDataStore_Registry*                       RegistryDS;                                       		// 0x000004 (0x0004)              
	//class UUIDynamicFieldProvider*                     RegistryProvider;                                 		// 0x000008 (0x0004)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
	//class UUIScene*                                    SceneResource;                                    		// 0x000010 (0x0004)              
	//class UUIScene*                                    CurrentScene;                                     		// 0x000014 (0x0004)              
	//class UUIScene*                                    NextScene;                                        		// 0x000018 (0x0004)              
	//struct FString                                     ScenePathName;                                    		// 0x00001C (0x000C)              
};

void UGameUISceneClient::SaveMenuProgression()
{
	static UFieldFunc* pFnSaveMenuProgression = NULL;
	if(!pFnSaveMenuProgression)
		pFnSaveMenuProgression = UObject::FindFunction("Function Engine.GameUISceneClient.SaveMenuProgression");

	Engine_SaveMenuProgression_Parms SaveMenuProgression_Parms;
	ProcessEvent(pFnSaveMenuProgression,NULL,&SaveMenuProgression_Parms,NULL);
}

struct Engine_CreateTransientWidget_Parms
{
	class UClass*                                      WidgetClass;                                      		// 0x000000 (0x0004)              
	struct FName                                       WidgetTag;                                        		// 0x000004 (0x0008)              
	class UUIObject*                                   Owner;                                            		// 0x00000C (0x0004)              
	class UUIObject*                                   ReturnValue;                                      		// 0x000010 (0x0004)              
};

class UUIObject* UGameUISceneClient::CreateTransientWidget(class UClass* WidgetClass,struct FName WidgetTag,class UUIObject* Owner)
{
	static UFieldFunc* pFnCreateTransientWidget = NULL;
	if(!pFnCreateTransientWidget)
		pFnCreateTransientWidget = UObject::FindFunction("Function Engine.GameUISceneClient.CreateTransientWidget");

	Engine_CreateTransientWidget_Parms CreateTransientWidget_Parms;
	CreateTransientWidget_Parms.WidgetClass = WidgetClass;
	memcpy(&CreateTransientWidget_Parms.WidgetTag,&WidgetTag,0x8);
	CreateTransientWidget_Parms.Owner = Owner;
	pFnCreateTransientWidget->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateTransientWidget,NULL,&CreateTransientWidget_Parms,NULL);
	pFnCreateTransientWidget->FunctionFlags |= 0x400;
	return CreateTransientWidget_Parms.ReturnValue;
}

struct Engine_ShowDataStores_Parms
{
	unsigned long                                      bVerbose : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
};

void UGameUISceneClient::ShowDataStores(bool bVerbose)
{
	static UFieldFunc* pFnShowDataStores = NULL;
	if(!pFnShowDataStores)
		pFnShowDataStores = UObject::FindFunction("Function Engine.GameUISceneClient.ShowDataStores");

	Engine_ShowDataStores_Parms ShowDataStores_Parms;
	ShowDataStores_Parms.bVerbose = bVerbose;
	ProcessEvent(pFnShowDataStores,NULL,&ShowDataStores_Parms,NULL);
}

struct Engine_NotifyPlayerAdded_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                AddedPlayer;                                      		// 0x000004 (0x0004)              
	//int                                                SceneIndex;                                       		// 0x000008 (0x0004)              
};

void UGameUISceneClient::NotifyPlayerAdded(int PlayerIndex,class ULocalPlayer* AddedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerAdded = NULL;
	if(!pFnNotifyPlayerAdded)
		pFnNotifyPlayerAdded = UObject::FindFunction("Function Engine.GameUISceneClient.NotifyPlayerAdded");

	Engine_NotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;
	NotifyPlayerAdded_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerAdded_Parms.AddedPlayer = AddedPlayer;
	ProcessEvent(pFnNotifyPlayerAdded,NULL,&NotifyPlayerAdded_Parms,NULL);
}

struct Engine_CloseMenu_Parms
{
	struct FName                                       SceneName;                                        		// 0x000000 (0x0008)              
	//int                                                I;                                                		// 0x000008 (0x0004)              
};

void UGameUISceneClient::CloseMenu(struct FName SceneName)
{
	static UFieldFunc* pFnCloseMenu = NULL;
	if(!pFnCloseMenu)
		pFnCloseMenu = UObject::FindFunction("Function Engine.GameUISceneClient.CloseMenu");

	Engine_CloseMenu_Parms CloseMenu_Parms;
	memcpy(&CloseMenu_Parms.SceneName,&SceneName,0x8);
	ProcessEvent(pFnCloseMenu,NULL,&CloseMenu_Parms,NULL);
}

struct Engine_ShowDataStoreField_Parms
{
	struct FString                                     DataStoreMarkup;                                  		// 0x000000 (0x000C)              
	//struct FString                                     Value;                                            		// 0x00000C (0x000C)              
};

void UGameUISceneClient::ShowDataStoreField(struct FString DataStoreMarkup)
{
	static UFieldFunc* pFnShowDataStoreField = NULL;
	if(!pFnShowDataStoreField)
		pFnShowDataStoreField = UObject::FindFunction("Function Engine.GameUISceneClient.ShowDataStoreField");

	Engine_ShowDataStoreField_Parms ShowDataStoreField_Parms;
	memcpy(&ShowDataStoreField_Parms.DataStoreMarkup,&DataStoreMarkup,0xC);
	ProcessEvent(pFnShowDataStoreField,NULL,&ShowDataStoreField_Parms,NULL);
}

struct Engine_ConditionalPause_Parms
{
	unsigned long                                      bDesiredPauseState : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	//class APlayerController*                           PlayerOwner;                                      		// 0x000004 (0x0004)              
};

void UGameUISceneClient::ConditionalPause(bool bDesiredPauseState)
{
	static UFieldFunc* pFnConditionalPause = NULL;
	if(!pFnConditionalPause)
		pFnConditionalPause = UObject::FindFunction("Function Engine.GameUISceneClient.ConditionalPause");

	Engine_ConditionalPause_Parms ConditionalPause_Parms;
	ConditionalPause_Parms.bDesiredPauseState = bDesiredPauseState;
	ProcessEvent(pFnConditionalPause,NULL,&ConditionalPause_Parms,NULL);
}

struct Engine_GetActiveScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UUIScene*                                    TopmostScene;                                     		// 0x000004 (0x0004)              
};

class UUIScene* UGameUISceneClient::GetActiveScene()
{
	static UFieldFunc* pFnGetActiveScene = NULL;
	if(!pFnGetActiveScene)
		pFnGetActiveScene = UObject::FindFunction("Function Engine.GameUISceneClient.GetActiveScene");

	Engine_GetActiveScene_Parms GetActiveScene_Parms;
	ProcessEvent(pFnGetActiveScene,NULL,&GetActiveScene_Parms,NULL);
	return GetActiveScene_Parms.ReturnValue;
}

struct Engine_RequestInputProcessingUpdate_Parms
{
};

void UGameUISceneClient::RequestInputProcessingUpdate()
{
	static UFieldFunc* pFnRequestInputProcessingUpdate = NULL;
	if(!pFnRequestInputProcessingUpdate)
		pFnRequestInputProcessingUpdate = UObject::FindFunction("Function Engine.GameUISceneClient.RequestInputProcessingUpdate");

	Engine_RequestInputProcessingUpdate_Parms RequestInputProcessingUpdate_Parms;
	pFnRequestInputProcessingUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestInputProcessingUpdate,NULL,&RequestInputProcessingUpdate_Parms,NULL);
	pFnRequestInputProcessingUpdate->FunctionFlags |= 0x400;
}

struct Engine_CreateMenu_Parms
{
	class UClass*                                      SceneClass;                                       		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	//class UUIScene*                                    Scene;                                            		// 0x000008 (0x0004)              
	//class ULocalPlayer*                                SceneOwner;                                       		// 0x00000C (0x0004)              
};

void UGameUISceneClient::CreateMenu(class UClass* SceneClass,int PlayerIndex)
{
	static UFieldFunc* pFnCreateMenu = NULL;
	if(!pFnCreateMenu)
		pFnCreateMenu = UObject::FindFunction("Function Engine.GameUISceneClient.CreateMenu");

	Engine_CreateMenu_Parms CreateMenu_Parms;
	CreateMenu_Parms.SceneClass = SceneClass;
	CreateMenu_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnCreateMenu,NULL,&CreateMenu_Parms,NULL);
}

struct Engine_NotifyPlayerRemoved_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class ULocalPlayer*                                RemovedPlayer;                                    		// 0x000004 (0x0004)              
	//int                                                SceneIndex;                                       		// 0x000008 (0x0004)              
};

void UGameUISceneClient::NotifyPlayerRemoved(int PlayerIndex,class ULocalPlayer* RemovedPlayer)
{
	static UFieldFunc* pFnNotifyPlayerRemoved = NULL;
	if(!pFnNotifyPlayerRemoved)
		pFnNotifyPlayerRemoved = UObject::FindFunction("Function Engine.GameUISceneClient.NotifyPlayerRemoved");

	Engine_NotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;
	NotifyPlayerRemoved_Parms.PlayerIndex = PlayerIndex;
	NotifyPlayerRemoved_Parms.RemovedPlayer = RemovedPlayer;
	ProcessEvent(pFnNotifyPlayerRemoved,NULL,&NotifyPlayerRemoved_Parms,NULL);
}

struct Engine_NotifyClientTravel_Parms
{
	class APlayerController*                           TravellingPlayer;                                 		// 0x000000 (0x0004)              
	struct FString                                     TravelURL;                                        		// 0x000004 (0x000C)              
	unsigned char                                      TravelType;                                       		// 0x000010 (0x0001)              
	unsigned long                                      bIsSeamlessTravel : 1;                            		// 0x000014 (0x0004) [0x00000001] 
	//int                                                SceneIndex;                                       		// 0x000018 (0x0004)              
	//TArray<class UUIScene*>                            CurrentlyActiveScenes;                            		// 0x00001C (0x000C)              
	//class UUIScene*                                    NextScene;                                        		// 0x000028 (0x0004)              
	//class ULocalPlayer*                                TravellingLP;                                     		// 0x00002C (0x0004)              
};

void UGameUISceneClient::NotifyClientTravel(class APlayerController* TravellingPlayer,struct FString TravelURL,unsigned char TravelType,bool bIsSeamlessTravel)
{
	static UFieldFunc* pFnNotifyClientTravel = NULL;
	if(!pFnNotifyClientTravel)
		pFnNotifyClientTravel = UObject::FindFunction("Function Engine.GameUISceneClient.NotifyClientTravel");

	Engine_NotifyClientTravel_Parms NotifyClientTravel_Parms;
	NotifyClientTravel_Parms.TravellingPlayer = TravellingPlayer;
	memcpy(&NotifyClientTravel_Parms.TravelURL,&TravelURL,0xC);
	NotifyClientTravel_Parms.TravelType = TravelType;
	NotifyClientTravel_Parms.bIsSeamlessTravel = bIsSeamlessTravel;
	ProcessEvent(pFnNotifyClientTravel,NULL,&NotifyClientTravel_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//TArray<class UUIScene*>                            CurrentlyActiveScenes;                            		// 0x000004 (0x000C)              
};

void UGameUISceneClient::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.GameUISceneClient.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
}

struct Engine_NotifyLinkStatusChanged_Parms
{
	unsigned long                                      bConnected : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
	//class UUIScene*                                    Scene;                                            		// 0x000004 (0x0004)              
};

void UGameUISceneClient::NotifyLinkStatusChanged(bool bConnected)
{
	static UFieldFunc* pFnNotifyLinkStatusChanged = NULL;
	if(!pFnNotifyLinkStatusChanged)
		pFnNotifyLinkStatusChanged = UObject::FindFunction("Function Engine.GameUISceneClient.NotifyLinkStatusChanged");

	Engine_NotifyLinkStatusChanged_Parms NotifyLinkStatusChanged_Parms;
	NotifyLinkStatusChanged_Parms.bConnected = bConnected;
	ProcessEvent(pFnNotifyLinkStatusChanged,NULL,&NotifyLinkStatusChanged_Parms,NULL);
}

struct Engine_ShowRenderBounds_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UGameUISceneClient::ShowRenderBounds()
{
	static UFieldFunc* pFnShowRenderBounds = NULL;
	if(!pFnShowRenderBounds)
		pFnShowRenderBounds = UObject::FindFunction("Function Engine.GameUISceneClient.ShowRenderBounds");

	Engine_ShowRenderBounds_Parms ShowRenderBounds_Parms;
	ProcessEvent(pFnShowRenderBounds,NULL,&ShowRenderBounds_Parms,NULL);
}

struct Engine_NotifyOnlineServiceStatusChanged_Parms
{
	unsigned char                                      NewConnectionStatus;                              		// 0x000000 (0x0001)              
	//class UUIScene*                                    Scene;                                            		// 0x000004 (0x0004)              
};

void UGameUISceneClient::NotifyOnlineServiceStatusChanged(unsigned char NewConnectionStatus)
{
	static UFieldFunc* pFnNotifyOnlineServiceStatusChanged = NULL;
	if(!pFnNotifyOnlineServiceStatusChanged)
		pFnNotifyOnlineServiceStatusChanged = UObject::FindFunction("Function Engine.GameUISceneClient.NotifyOnlineServiceStatusChanged");

	Engine_NotifyOnlineServiceStatusChanged_Parms NotifyOnlineServiceStatusChanged_Parms;
	NotifyOnlineServiceStatusChanged_Parms.NewConnectionStatus = NewConnectionStatus;
	ProcessEvent(pFnNotifyOnlineServiceStatusChanged,NULL,&NotifyOnlineServiceStatusChanged_Parms,NULL);
}

struct Engine_SetUIScale_Parms
{
	float                                              fNewUIScale;                                      		// 0x000000 (0x0004)              
};

void UGameUISceneClient::SetUIScale(float fNewUIScale)
{
	static UFieldFunc* pFnSetUIScale = NULL;
	if(!pFnSetUIScale)
		pFnSetUIScale = UObject::FindFunction("Function Engine.GameUISceneClient.SetUIScale");

	Engine_SetUIScale_Parms SetUIScale_Parms;
	SetUIScale_Parms.fNewUIScale = fNewUIScale;
	pFnSetUIScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetUIScale,NULL,&SetUIScale_Parms,NULL);
	pFnSetUIScale->FunctionFlags |= 0x400;
}

struct Engine_GetUIScale_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UGameUISceneClient::GetUIScale()
{
	static UFieldFunc* pFnGetUIScale = NULL;
	if(!pFnGetUIScale)
		pFnGetUIScale = UObject::FindFunction("Function Engine.GameUISceneClient.GetUIScale");

	Engine_GetUIScale_Parms GetUIScale_Parms;
	pFnGetUIScale->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUIScale,NULL,&GetUIScale_Parms,NULL);
	pFnGetUIScale->FunctionFlags |= 0x400;
	return GetUIScale_Parms.ReturnValue;
}

struct Engine_AnimUnSubscribe_Parms
{
	class UUIObject*                                   Target;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void UGameUISceneClient::AnimUnSubscribe(class UUIObject* Target)
{
	static UFieldFunc* pFnAnimUnSubscribe = NULL;
	if(!pFnAnimUnSubscribe)
		pFnAnimUnSubscribe = UObject::FindFunction("Function Engine.GameUISceneClient.AnimUnSubscribe");

	Engine_AnimUnSubscribe_Parms AnimUnSubscribe_Parms;
	AnimUnSubscribe_Parms.Target = Target;
	ProcessEvent(pFnAnimUnSubscribe,NULL,&AnimUnSubscribe_Parms,NULL);
}

struct Engine_CreateScene_Parms
{
	class UClass*                                      SceneClass;                                       		// 0x000000 (0x0004)              
	struct FName                                       SceneTag;                                         		// 0x000004 (0x0008)              
	class UUIScene*                                    SceneTemplate;                                    		// 0x00000C (0x0004)              
	class UUIScene*                                    ReturnValue;                                      		// 0x000010 (0x0004)              
};

class UUIScene* UGameUISceneClient::CreateScene(class UClass* SceneClass,struct FName SceneTag,class UUIScene* SceneTemplate)
{
	static UFieldFunc* pFnCreateScene = NULL;
	if(!pFnCreateScene)
		pFnCreateScene = UObject::FindFunction("Function Engine.GameUISceneClient.CreateScene");

	Engine_CreateScene_Parms CreateScene_Parms;
	CreateScene_Parms.SceneClass = SceneClass;
	memcpy(&CreateScene_Parms.SceneTag,&SceneTag,0x8);
	CreateScene_Parms.SceneTemplate = SceneTemplate;
	pFnCreateScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateScene,NULL,&CreateScene_Parms,NULL);
	pFnCreateScene->FunctionFlags |= 0x400;
	return CreateScene_Parms.ReturnValue;
}

struct Engine_ClearMenuProgression_Parms
{
	//class UDataStoreClient*                            DSClient;                                         		// 0x000000 (0x0004)              
	//class UUIDataStore_Registry*                       RegistryDS;                                       		// 0x000004 (0x0004)              
	//class UUIDynamicFieldProvider*                     RegistryProvider;                                 		// 0x000008 (0x0004)              
};

void UGameUISceneClient::ClearMenuProgression()
{
	static UFieldFunc* pFnClearMenuProgression = NULL;
	if(!pFnClearMenuProgression)
		pFnClearMenuProgression = UObject::FindFunction("Function Engine.GameUISceneClient.ClearMenuProgression");

	Engine_ClearMenuProgression_Parms ClearMenuProgression_Parms;
	ProcessEvent(pFnClearMenuProgression,NULL,&ClearMenuProgression_Parms,NULL);
}

struct Engine_ShowDockingStacks_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UGameUISceneClient::ShowDockingStacks()
{
	static UFieldFunc* pFnShowDockingStacks = NULL;
	if(!pFnShowDockingStacks)
		pFnShowDockingStacks = UObject::FindFunction("Function Engine.GameUISceneClient.ShowDockingStacks");

	Engine_ShowDockingStacks_Parms ShowDockingStacks_Parms;
	ProcessEvent(pFnShowDockingStacks,NULL,&ShowDockingStacks_Parms,NULL);
}

struct Engine_ShowMenuStates_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void UGameUISceneClient::ShowMenuStates()
{
	static UFieldFunc* pFnShowMenuStates = NULL;
	if(!pFnShowMenuStates)
		pFnShowMenuStates = UObject::FindFunction("Function Engine.GameUISceneClient.ShowMenuStates");

	Engine_ShowMenuStates_Parms ShowMenuStates_Parms;
	ProcessEvent(pFnShowMenuStates,NULL,&ShowMenuStates_Parms,NULL);
}

struct Engine_RestoreMenuProgression_Parms
{
	class UUIScene*                                    BaseScene;                                        		// 0x000000 (0x0004)              
	//class UDataStoreClient*                            DSClient;                                         		// 0x000004 (0x0004)              
	//class UUIDataStore_Registry*                       RegistryDS;                                       		// 0x000008 (0x0004)              
	//class UUIDynamicFieldProvider*                     RegistryProvider;                                 		// 0x00000C (0x0004)              
	//class UUIScene*                                    CurrentScene;                                     		// 0x000010 (0x0004)              
	//class UUIScene*                                    NextSceneTemplate;                                		// 0x000014 (0x0004)              
	//class UUIScene*                                    SceneInstance;                                    		// 0x000018 (0x0004)              
	//struct FString                                     ScenePathName;                                    		// 0x00001C (0x000C)              
	//unsigned long                                      bHasValidNetworkConnection : 1;                   		// 0x000028 (0x0004) [0x00000001] 
};

void UGameUISceneClient::RestoreMenuProgression(class UUIScene* BaseScene)
{
	static UFieldFunc* pFnRestoreMenuProgression = NULL;
	if(!pFnRestoreMenuProgression)
		pFnRestoreMenuProgression = UObject::FindFunction("Function Engine.GameUISceneClient.RestoreMenuProgression");

	Engine_RestoreMenuProgression_Parms RestoreMenuProgression_Parms;
	RestoreMenuProgression_Parms.BaseScene = BaseScene;
	ProcessEvent(pFnRestoreMenuProgression,NULL,&RestoreMenuProgression_Parms,NULL);
}

struct Engine_GetCurrentNetMode_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UGameUISceneClient::GetCurrentNetMode()
{
	static UFieldFunc* pFnGetCurrentNetMode = NULL;
	if(!pFnGetCurrentNetMode)
		pFnGetCurrentNetMode = UObject::FindFunction("Function Engine.GameUISceneClient.GetCurrentNetMode");

	Engine_GetCurrentNetMode_Parms GetCurrentNetMode_Parms;
	pFnGetCurrentNetMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentNetMode,NULL,&GetCurrentNetMode_Parms,NULL);
	pFnGetCurrentNetMode->FunctionFlags |= 0x400;
	return GetCurrentNetMode_Parms.ReturnValue;
}

struct Engine_AnimLookupSequence_Parms
{
	struct FName                                       SequenceName;                                     		// 0x000000 (0x0008)              
	class UUIAnimationSeq*                             ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                I;                                                		// 0x00000C (0x0004)              
};

class UUIAnimationSeq* UGameUISceneClient::AnimLookupSequence(struct FName SequenceName)
{
	static UFieldFunc* pFnAnimLookupSequence = NULL;
	if(!pFnAnimLookupSequence)
		pFnAnimLookupSequence = UObject::FindFunction("Function Engine.GameUISceneClient.AnimLookupSequence");

	Engine_AnimLookupSequence_Parms AnimLookupSequence_Parms;
	memcpy(&AnimLookupSequence_Parms.SequenceName,&SequenceName,0x8);
	ProcessEvent(pFnAnimLookupSequence,NULL,&AnimLookupSequence_Parms,NULL);
	return AnimLookupSequence_Parms.ReturnValue;
}

struct Engine_RequestCursorRenderUpdate_Parms
{
};

void UGameUISceneClient::RequestCursorRenderUpdate()
{
	static UFieldFunc* pFnRequestCursorRenderUpdate = NULL;
	if(!pFnRequestCursorRenderUpdate)
		pFnRequestCursorRenderUpdate = UObject::FindFunction("Function Engine.GameUISceneClient.RequestCursorRenderUpdate");

	Engine_RequestCursorRenderUpdate_Parms RequestCursorRenderUpdate_Parms;
	pFnRequestCursorRenderUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestCursorRenderUpdate,NULL,&RequestCursorRenderUpdate_Parms,NULL);
	pFnRequestCursorRenderUpdate->FunctionFlags |= 0x400;
}

struct Engine_OpenMenu_Parms
{
	struct FString                                     MenuPath;                                         		// 0x000000 (0x000C)              
	int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
	//class UUIScene*                                    Scene;                                            		// 0x000010 (0x0004)              
	//class ULocalPlayer*                                SceneOwner;                                       		// 0x000014 (0x0004)              
};

void UGameUISceneClient::OpenMenu(struct FString MenuPath,int PlayerIndex)
{
	static UFieldFunc* pFnOpenMenu = NULL;
	if(!pFnOpenMenu)
		pFnOpenMenu = UObject::FindFunction("Function Engine.GameUISceneClient.OpenMenu");

	Engine_OpenMenu_Parms OpenMenu_Parms;
	memcpy(&OpenMenu_Parms.MenuPath,&MenuPath,0xC);
	OpenMenu_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOpenMenu,NULL,&OpenMenu_Parms,NULL);
}

struct Engine_ShowMenuProgression_Parms
{
	//class UDataStoreClient*                            DSClient;                                         		// 0x000000 (0x0004)              
	//class UUIDataStore_Registry*                       RegistryDS;                                       		// 0x000004 (0x0004)              
	//class UUIDynamicFieldProvider*                     RegistryProvider;                                 		// 0x000008 (0x0004)              
	//TArray<struct FString>                             Values;                                           		// 0x00000C (0x000C)              
	//TArray<struct FName>                               SceneTags;                                        		// 0x000018 (0x000C)              
	//int                                                SceneIndex;                                       		// 0x000024 (0x0004)              
	//int                                                MenuIndex;                                        		// 0x000028 (0x0004)              
};

void UGameUISceneClient::ShowMenuProgression()
{
	static UFieldFunc* pFnShowMenuProgression = NULL;
	if(!pFnShowMenuProgression)
		pFnShowMenuProgression = UObject::FindFunction("Function Engine.GameUISceneClient.ShowMenuProgression");

	Engine_ShowMenuProgression_Parms ShowMenuProgression_Parms;
	ProcessEvent(pFnShowMenuProgression,NULL,&ShowMenuProgression_Parms,NULL);
}

struct Engine_CanUnpauseInternalUI_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UGameUISceneClient::CanUnpauseInternalUI()
{
	static UFieldFunc* pFnCanUnpauseInternalUI = NULL;
	if(!pFnCanUnpauseInternalUI)
		pFnCanUnpauseInternalUI = UObject::FindFunction("Function Engine.GameUISceneClient.CanUnpauseInternalUI");

	Engine_CanUnpauseInternalUI_Parms CanUnpauseInternalUI_Parms;
	pFnCanUnpauseInternalUI->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanUnpauseInternalUI,NULL,&CanUnpauseInternalUI_Parms,NULL);
	pFnCanUnpauseInternalUI->FunctionFlags |= 0x400;
	return CanUnpauseInternalUI_Parms.ReturnValue;
}

struct Engine_AnimSubscribe_Parms
{
	class UUIObject*                                   Target;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void UGameUISceneClient::AnimSubscribe(class UUIObject* Target)
{
	static UFieldFunc* pFnAnimSubscribe = NULL;
	if(!pFnAnimSubscribe)
		pFnAnimSubscribe = UObject::FindFunction("Function Engine.GameUISceneClient.AnimSubscribe");

	Engine_AnimSubscribe_Parms AnimSubscribe_Parms;
	AnimSubscribe_Parms.Target = Target;
	ProcessEvent(pFnAnimSubscribe,NULL,&AnimSubscribe_Parms,NULL);
}

struct Engine_ToggleDebugInput_Parms
{
	unsigned long                                      bEnable : 1;                                      		// 0x000000 (0x0004) [0x00000001] 
};

void UGameUISceneClient::ToggleDebugInput(bool bEnable)
{
	static UFieldFunc* pFnToggleDebugInput = NULL;
	if(!pFnToggleDebugInput)
		pFnToggleDebugInput = UObject::FindFunction("Function Engine.GameUISceneClient.ToggleDebugInput");

	Engine_ToggleDebugInput_Parms ToggleDebugInput_Parms;
	ToggleDebugInput_Parms.bEnable = bEnable;
	ProcessEvent(pFnToggleDebugInput,NULL,&ToggleDebugInput_Parms,NULL);
}

struct Engine_SetActiveControl_Parms
{
	class UUIObject*                                   NewActiveControl;                                 		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UGameUISceneClient::SetActiveControl(class UUIObject* NewActiveControl)
{
	static UFieldFunc* pFnSetActiveControl = NULL;
	if(!pFnSetActiveControl)
		pFnSetActiveControl = UObject::FindFunction("Function Engine.GameUISceneClient.SetActiveControl");

	Engine_SetActiveControl_Parms SetActiveControl_Parms;
	SetActiveControl_Parms.NewActiveControl = NewActiveControl;
	pFnSetActiveControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveControl,NULL,&SetActiveControl_Parms,NULL);
	pFnSetActiveControl->FunctionFlags |= 0x400;
	return SetActiveControl_Parms.ReturnValue;
}

struct Engine_CanShowToolTips_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UGameUISceneClient::CanShowToolTips()
{
	static UFieldFunc* pFnCanShowToolTips = NULL;
	if(!pFnCanShowToolTips)
		pFnCanShowToolTips = UObject::FindFunction("Function Engine.GameUISceneClient.CanShowToolTips");

	Engine_CanShowToolTips_Parms CanShowToolTips_Parms;
	ProcessEvent(pFnCanShowToolTips,NULL,&CanShowToolTips_Parms,NULL);
	return CanShowToolTips_Parms.ReturnValue;
}

struct Engine_RefreshFormatting_Parms
{
	//class UUIScene*                                    ActiveScene;                                      		// 0x000000 (0x0004)              
};

void UGameUISceneClient::RefreshFormatting()
{
	static UFieldFunc* pFnRefreshFormatting = NULL;
	if(!pFnRefreshFormatting)
		pFnRefreshFormatting = UObject::FindFunction("Function Engine.GameUISceneClient.RefreshFormatting");

	Engine_RefreshFormatting_Parms RefreshFormatting_Parms;
	ProcessEvent(pFnRefreshFormatting,NULL,&RefreshFormatting_Parms,NULL);
}

struct Engine_FindSceneByTag_Parms
{
	struct FName                                       SceneTag;                                         		// 0x000000 (0x0008)              
	class ULocalPlayer*                                SceneOwner;                                       		// 0x000008 (0x0004)              
	class UUIScene*                                    ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UUIScene* UGameUISceneClient::FindSceneByTag(struct FName SceneTag,class ULocalPlayer* SceneOwner)
{
	static UFieldFunc* pFnFindSceneByTag = NULL;
	if(!pFnFindSceneByTag)
		pFnFindSceneByTag = UObject::FindFunction("Function Engine.GameUISceneClient.FindSceneByTag");

	Engine_FindSceneByTag_Parms FindSceneByTag_Parms;
	memcpy(&FindSceneByTag_Parms.SceneTag,&SceneTag,0x8);
	FindSceneByTag_Parms.SceneOwner = SceneOwner;
	pFnFindSceneByTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindSceneByTag,NULL,&FindSceneByTag_Parms,NULL);
	pFnFindSceneByTag->FunctionFlags |= 0x400;
	return FindSceneByTag_Parms.ReturnValue;
}

struct Engine_PostInitialize_Parms
{
};

void UConsoleEntry::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.ConsoleEntry.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_RemovedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   OldChild;                                         		// 0x000004 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000008 (0x000C)              
};

void UConsoleEntry::RemovedChild(class UUIScreenObject* WidgetOwner,class UUIObject* OldChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemovedChild = NULL;
	if(!pFnRemovedChild)
		pFnRemovedChild = UObject::FindFunction("Function Engine.ConsoleEntry.RemovedChild");

	Engine_RemovedChild_Parms RemovedChild_Parms;
	RemovedChild_Parms.WidgetOwner = WidgetOwner;
	RemovedChild_Parms.OldChild = OldChild;
	memcpy(&RemovedChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	ProcessEvent(pFnRemovedChild,NULL,&RemovedChild_Parms,NULL);
}

struct Engine_SetValue_Parms
{
	struct FString                                     NewValue;                                         		// 0x000000 (0x000C)              
};

void UConsoleEntry::SetValue(struct FString NewValue)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.ConsoleEntry.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.NewValue,&NewValue,0xC);
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
}

struct Engine_AddedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
};

void UConsoleEntry::AddedChild(class UUIScreenObject* WidgetOwner,class UUIObject* NewChild)
{
	static UFieldFunc* pFnAddedChild = NULL;
	if(!pFnAddedChild)
		pFnAddedChild = UObject::FindFunction("Function Engine.ConsoleEntry.AddedChild");

	Engine_AddedChild_Parms AddedChild_Parms;
	AddedChild_Parms.WidgetOwner = WidgetOwner;
	AddedChild_Parms.NewChild = NewChild;
	ProcessEvent(pFnAddedChild,NULL,&AddedChild_Parms,NULL);
}

struct Engine_SetupDockingLinks_Parms
{
};

void UConsoleEntry::SetupDockingLinks()
{
	static UFieldFunc* pFnSetupDockingLinks = NULL;
	if(!pFnSetupDockingLinks)
		pFnSetupDockingLinks = UObject::FindFunction("Function Engine.ConsoleEntry.SetupDockingLinks");

	Engine_SetupDockingLinks_Parms SetupDockingLinks_Parms;
	ProcessEvent(pFnSetupDockingLinks,NULL,&SetupDockingLinks_Parms,NULL);
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIButton::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIButton.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIButton::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIButton.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIButton::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIButton.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIButton::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIButton.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIButton::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIButton.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_SetImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIButton::SetImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetImage = NULL;
	if(!pFnSetImage)
		pFnSetImage = UObject::FindFunction("Function Engine.UIButton.SetImage");

	Engine_SetImage_Parms SetImage_Parms;
	SetImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetImage,NULL,&SetImage_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIButton::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIButton.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIButton::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIButton.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIButton::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIButton.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_OnSetImage_Parms
{
	class UcUIAction_SetImage*                         Action;                                           		// 0x000000 (0x0004)              
};

void UUIButton::OnSetImage(class UcUIAction_SetImage* Action)
{
	static UFieldFunc* pFnOnSetImage = NULL;
	if(!pFnOnSetImage)
		pFnOnSetImage = UObject::FindFunction("Function Engine.UIButton.OnSetImage");

	Engine_OnSetImage_Parms OnSetImage_Parms;
	OnSetImage_Parms.Action = Action;
	ProcessEvent(pFnOnSetImage,NULL,&OnSetImage_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUICheckbox::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UICheckbox.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUICheckbox::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UICheckbox.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_SetValue_Parms
{
	unsigned long                                      bShouldBeChecked : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUICheckbox::SetValue(bool bShouldBeChecked,int PlayerIndex)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UICheckbox.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	SetValue_Parms.bShouldBeChecked = bShouldBeChecked;
	SetValue_Parms.PlayerIndex = PlayerIndex;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
}

struct Engine_OnSetBoolValue_Parms
{
	class UUIAction_SetBoolValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUICheckbox::OnSetBoolValue(class UUIAction_SetBoolValue* Action)
{
	static UFieldFunc* pFnOnSetBoolValue = NULL;
	if(!pFnOnSetBoolValue)
		pFnOnSetBoolValue = UObject::FindFunction("Function Engine.UICheckbox.OnSetBoolValue");

	Engine_OnSetBoolValue_Parms OnSetBoolValue_Parms;
	OnSetBoolValue_Parms.Action = Action;
	ProcessEvent(pFnOnSetBoolValue,NULL,&OnSetBoolValue_Parms,NULL);
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUICheckbox::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UICheckbox.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUICheckbox::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UICheckbox.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetCheckImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUICheckbox::SetCheckImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetCheckImage = NULL;
	if(!pFnSetCheckImage)
		pFnSetCheckImage = UObject::FindFunction("Function Engine.UICheckbox.SetCheckImage");

	Engine_SetCheckImage_Parms SetCheckImage_Parms;
	SetCheckImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetCheckImage,NULL,&SetCheckImage_Parms,NULL);
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUICheckbox::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UICheckbox.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUICheckbox::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UICheckbox.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUICheckbox::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UICheckbox.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_IsChecked_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUICheckbox::IsChecked()
{
	static UFieldFunc* pFnIsChecked = NULL;
	if(!pFnIsChecked)
		pFnIsChecked = UObject::FindFunction("Function Engine.UICheckbox.IsChecked");

	Engine_IsChecked_Parms IsChecked_Parms;
	ProcessEvent(pFnIsChecked,NULL,&IsChecked_Parms,NULL);
	return IsChecked_Parms.ReturnValue;
}

struct Engine_OnGetTextValue_Parms
{
	class UUIAction_GetTextValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUILabelButton::OnGetTextValue(class UUIAction_GetTextValue* Action)
{
	static UFieldFunc* pFnOnGetTextValue = NULL;
	if(!pFnOnGetTextValue)
		pFnOnGetTextValue = UObject::FindFunction("Function Engine.UILabelButton.OnGetTextValue");

	Engine_OnGetTextValue_Parms OnGetTextValue_Parms;
	OnGetTextValue_Parms.Action = Action;
	ProcessEvent(pFnOnGetTextValue,NULL,&OnGetTextValue_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUILabelButton::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UILabelButton.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUILabelButton::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UILabelButton.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUILabelButton::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UILabelButton.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUILabelButton::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UILabelButton.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUILabelButton::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UILabelButton.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUILabelButton::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UILabelButton.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUILabelButton::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UILabelButton.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetTextAlignment_Parms
{
	unsigned char                                      Horizontal;                                       		// 0x000000 (0x0001)              
	unsigned char                                      Vertical;                                         		// 0x000001 (0x0001)              
};

void UUILabelButton::SetTextAlignment(unsigned char Horizontal,unsigned char Vertical)
{
	static UFieldFunc* pFnSetTextAlignment = NULL;
	if(!pFnSetTextAlignment)
		pFnSetTextAlignment = UObject::FindFunction("Function Engine.UILabelButton.SetTextAlignment");

	Engine_SetTextAlignment_Parms SetTextAlignment_Parms;
	SetTextAlignment_Parms.Horizontal = Horizontal;
	SetTextAlignment_Parms.Vertical = Vertical;
	pFnSetTextAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTextAlignment,NULL,&SetTextAlignment_Parms,NULL);
	pFnSetTextAlignment->FunctionFlags |= 0x400;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUILabelButton::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UILabelButton.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetCaption_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
};

void UUILabelButton::SetCaption(struct FString NewText)
{
	static UFieldFunc* pFnSetCaption = NULL;
	if(!pFnSetCaption)
		pFnSetCaption = UObject::FindFunction("Function Engine.UILabelButton.SetCaption");

	Engine_SetCaption_Parms SetCaption_Parms;
	memcpy(&SetCaption_Parms.NewText,&NewText,0xC);
	pFnSetCaption->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCaption,NULL,&SetCaption_Parms,NULL);
	pFnSetCaption->FunctionFlags |= 0x400;
}

struct Engine_OnSetLabelText_Parms
{
	class UUIAction_SetLabelText*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUILabelButton::OnSetLabelText(class UUIAction_SetLabelText* Action)
{
	static UFieldFunc* pFnOnSetLabelText = NULL;
	if(!pFnOnSetLabelText)
		pFnOnSetLabelText = UObject::FindFunction("Function Engine.UILabelButton.OnSetLabelText");

	Engine_OnSetLabelText_Parms OnSetLabelText_Parms;
	OnSetLabelText_Parms.Action = Action;
	ProcessEvent(pFnOnSetLabelText,NULL,&OnSetLabelText_Parms,NULL);
}

struct Engine_GetCaption_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UUILabelButton::GetCaption()
{
	static UFieldFunc* pFnGetCaption = NULL;
	if(!pFnGetCaption)
		pFnGetCaption = UObject::FindFunction("Function Engine.UILabelButton.GetCaption");

	Engine_GetCaption_Parms GetCaption_Parms;
	ProcessEvent(pFnGetCaption,NULL,&GetCaption_Parms,NULL);
	return GetCaption_Parms.ReturnValue;
}

struct Engine_SetInputAlias_Parms
{
	struct FName                                       NewInputAlias;                                    		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	//struct FString                                     CurrentMarkup;                                    		// 0x000010 (0x000C)              
	//struct FString                                     NewMarkup;                                        		// 0x00001C (0x000C)              
};

bool UUICalloutButton::SetInputAlias(struct FName NewInputAlias)
{
	static UFieldFunc* pFnSetInputAlias = NULL;
	if(!pFnSetInputAlias)
		pFnSetInputAlias = UObject::FindFunction("Function Engine.UICalloutButton.SetInputAlias");

	Engine_SetInputAlias_Parms SetInputAlias_Parms;
	memcpy(&SetInputAlias_Parms.NewInputAlias,&NewInputAlias,0x8);
	ProcessEvent(pFnSetInputAlias,NULL,&SetInputAlias_Parms,NULL);
	return SetInputAlias_Parms.ReturnValue;
}

struct Engine_GetCalloutDataStore_Parms
{
	class ULocalPlayer*                                AlternatePlayer;                                  		// 0x000000 (0x0004)              
	class UUIDataStore_InputAlias*                     ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIDataStore_InputAlias* UUICalloutButton::GetCalloutDataStore(class ULocalPlayer* AlternatePlayer)
{
	static UFieldFunc* pFnGetCalloutDataStore = NULL;
	if(!pFnGetCalloutDataStore)
		pFnGetCalloutDataStore = UObject::FindFunction("Function Engine.UICalloutButton.GetCalloutDataStore");

	Engine_GetCalloutDataStore_Parms GetCalloutDataStore_Parms;
	GetCalloutDataStore_Parms.AlternatePlayer = AlternatePlayer;
	pFnGetCalloutDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCalloutDataStore,NULL,&GetCalloutDataStore_Parms,NULL);
	pFnGetCalloutDataStore->FunctionFlags |= 0x400;
	return GetCalloutDataStore_Parms.ReturnValue;
}

struct Engine_UnsubscribeFromInputProxy_Parms
{
	class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUICalloutButton::UnsubscribeFromInputProxy(class UUIEvent_CalloutButtonInputProxy* InputProxy)
{
	static UFieldFunc* pFnUnsubscribeFromInputProxy = NULL;
	if(!pFnUnsubscribeFromInputProxy)
		pFnUnsubscribeFromInputProxy = UObject::FindFunction("Function Engine.UICalloutButton.UnsubscribeFromInputProxy");

	Engine_UnsubscribeFromInputProxy_Parms UnsubscribeFromInputProxy_Parms;
	UnsubscribeFromInputProxy_Parms.InputProxy = InputProxy;
	pFnUnsubscribeFromInputProxy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnsubscribeFromInputProxy,NULL,&UnsubscribeFromInputProxy_Parms,NULL);
	pFnUnsubscribeFromInputProxy->FunctionFlags |= 0x400;
	return UnsubscribeFromInputProxy_Parms.ReturnValue;
}

struct Engine_RemovedFromParent_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	//class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x000004 (0x0004)              
};

void UUICalloutButton::RemovedFromParent(class UUIScreenObject* WidgetOwner)
{
	static UFieldFunc* pFnRemovedFromParent = NULL;
	if(!pFnRemovedFromParent)
		pFnRemovedFromParent = UObject::FindFunction("Function Engine.UICalloutButton.RemovedFromParent");

	Engine_RemovedFromParent_Parms RemovedFromParent_Parms;
	RemovedFromParent_Parms.WidgetOwner = WidgetOwner;
	ProcessEvent(pFnRemovedFromParent,NULL,&RemovedFromParent_Parms,NULL);
}

struct Engine_PostInitialize_Parms
{
	//class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x000000 (0x0004)              
};

void UUICalloutButton::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UICalloutButton.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_GetCalloutDataStoreName_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName UUICalloutButton::GetCalloutDataStoreName()
{
	static UFieldFunc* pFnGetCalloutDataStoreName = NULL;
	if(!pFnGetCalloutDataStoreName)
		pFnGetCalloutDataStoreName = UObject::FindFunction("Function Engine.UICalloutButton.GetCalloutDataStoreName");

	Engine_GetCalloutDataStoreName_Parms GetCalloutDataStoreName_Parms;
	ProcessEvent(pFnGetCalloutDataStoreName,NULL,&GetCalloutDataStoreName_Parms,NULL);
	return GetCalloutDataStoreName_Parms.ReturnValue;
}

struct Engine_SetInputTag_Parms
{
	struct FName                                       NewInputAlias;                                    		// 0x000000 (0x0008)              
};

void UUICalloutButton::SetInputTag(struct FName NewInputAlias)
{
	static UFieldFunc* pFnSetInputTag = NULL;
	if(!pFnSetInputTag)
		pFnSetInputTag = UObject::FindFunction("Function Engine.UICalloutButton.SetInputTag");

	Engine_SetInputTag_Parms SetInputTag_Parms;
	memcpy(&SetInputTag_Parms.NewInputAlias,&NewInputAlias,0x8);
	pFnSetInputTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetInputTag,NULL,&SetInputTag_Parms,NULL);
	pFnSetInputTag->FunctionFlags |= 0x400;
}

struct Engine_VerifyDefaultMarkupString_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000004 (0x0004) [0x00000001] 
};

bool UUICalloutButton::VerifyDefaultMarkupString()
{
	static UFieldFunc* pFnVerifyDefaultMarkupString = NULL;
	if(!pFnVerifyDefaultMarkupString)
		pFnVerifyDefaultMarkupString = UObject::FindFunction("Function Engine.UICalloutButton.VerifyDefaultMarkupString");

	Engine_VerifyDefaultMarkupString_Parms VerifyDefaultMarkupString_Parms;
	ProcessEvent(pFnVerifyDefaultMarkupString,NULL,&VerifyDefaultMarkupString_Parms,NULL);
	return VerifyDefaultMarkupString_Parms.ReturnValue;
}

struct Engine_GetCalloutInputProxy_Parms
{
	unsigned long                                      bCreateIfNecessary : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	class UUIEvent_CalloutButtonInputProxy*            ReturnValue;                                      		// 0x000004 (0x0004)              
	//class UUICalloutButtonPanel*                       PanelOwner;                                       		// 0x000008 (0x0004)              
	//class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x00000C (0x0004)              
};

class UUIEvent_CalloutButtonInputProxy* UUICalloutButton::GetCalloutInputProxy(bool bCreateIfNecessary)
{
	static UFieldFunc* pFnGetCalloutInputProxy = NULL;
	if(!pFnGetCalloutInputProxy)
		pFnGetCalloutInputProxy = UObject::FindFunction("Function Engine.UICalloutButton.GetCalloutInputProxy");

	Engine_GetCalloutInputProxy_Parms GetCalloutInputProxy_Parms;
	GetCalloutInputProxy_Parms.bCreateIfNecessary = bCreateIfNecessary;
	ProcessEvent(pFnGetCalloutInputProxy,NULL,&GetCalloutInputProxy_Parms,NULL);
	return GetCalloutInputProxy_Parms.ReturnValue;
}

struct Engine_GetCalloutMarkupString_Parms
{
	struct FName                                       AlternateInputAlias;                              		// 0x000000 (0x0008)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UUICalloutButton::GetCalloutMarkupString(struct FName AlternateInputAlias)
{
	static UFieldFunc* pFnGetCalloutMarkupString = NULL;
	if(!pFnGetCalloutMarkupString)
		pFnGetCalloutMarkupString = UObject::FindFunction("Function Engine.UICalloutButton.GetCalloutMarkupString");

	Engine_GetCalloutMarkupString_Parms GetCalloutMarkupString_Parms;
	memcpy(&GetCalloutMarkupString_Parms.AlternateInputAlias,&AlternateInputAlias,0x8);
	ProcessEvent(pFnGetCalloutMarkupString,NULL,&GetCalloutMarkupString_Parms,NULL);
	return GetCalloutMarkupString_Parms.ReturnValue;
}

struct Engine_GenerateCompleteCaptionMarkup_Parms
{
	struct FName                                       InputAlias;                                       		// 0x000000 (0x0008)              
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
	//struct FString                                     IconMarkup;                                       		// 0x000014 (0x000C)              
	//struct FString                                     CurrentMarkup;                                    		// 0x000020 (0x000C)              
	//struct FString                                     NewMarkup;                                        		// 0x00002C (0x000C)              
};

struct FString UUICalloutButton::GenerateCompleteCaptionMarkup(struct FName InputAlias)
{
	static UFieldFunc* pFnGenerateCompleteCaptionMarkup = NULL;
	if(!pFnGenerateCompleteCaptionMarkup)
		pFnGenerateCompleteCaptionMarkup = UObject::FindFunction("Function Engine.UICalloutButton.GenerateCompleteCaptionMarkup");

	Engine_GenerateCompleteCaptionMarkup_Parms GenerateCompleteCaptionMarkup_Parms;
	memcpy(&GenerateCompleteCaptionMarkup_Parms.InputAlias,&InputAlias,0x8);
	ProcessEvent(pFnGenerateCompleteCaptionMarkup,NULL,&GenerateCompleteCaptionMarkup_Parms,NULL);
	return GenerateCompleteCaptionMarkup_Parms.ReturnValue;
}

struct Engine_OnReceivedInputKey_Parms
{
	struct FInputEventParameters                       EventParms;                                       		// 0x000000 (0x0020)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUICalloutButton::OnReceivedInputKey(struct FInputEventParameters* EventParms)
{
	static UFieldFunc* pFnOnReceivedInputKey = NULL;
	if(!pFnOnReceivedInputKey)
		pFnOnReceivedInputKey = UObject::FindFunction("Function Engine.UICalloutButton.OnReceivedInputKey");

	Engine_OnReceivedInputKey_Parms OnReceivedInputKey_Parms;
	pFnOnReceivedInputKey->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnReceivedInputKey,NULL,&OnReceivedInputKey_Parms,NULL);
	pFnOnReceivedInputKey->FunctionFlags |= 0x400;
	if(EventParms)
		memcpy(EventParms,&OnReceivedInputKey_Parms.EventParms,0x20);
	return OnReceivedInputKey_Parms.ReturnValue;
}

struct Engine_SubscribeToInputProxy_Parms
{
	class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUICalloutButton::SubscribeToInputProxy(class UUIEvent_CalloutButtonInputProxy* InputProxy)
{
	static UFieldFunc* pFnSubscribeToInputProxy = NULL;
	if(!pFnSubscribeToInputProxy)
		pFnSubscribeToInputProxy = UObject::FindFunction("Function Engine.UICalloutButton.SubscribeToInputProxy");

	Engine_SubscribeToInputProxy_Parms SubscribeToInputProxy_Parms;
	SubscribeToInputProxy_Parms.InputProxy = InputProxy;
	pFnSubscribeToInputProxy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSubscribeToInputProxy,NULL,&SubscribeToInputProxy_Parms,NULL);
	pFnSubscribeToInputProxy->FunctionFlags |= 0x400;
	return SubscribeToInputProxy_Parms.ReturnValue;
}

struct Engine_GetPanelOwner_Parms
{
	class UUICalloutButtonPanel*                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUICalloutButtonPanel* UUICalloutButton::GetPanelOwner()
{
	static UFieldFunc* pFnGetPanelOwner = NULL;
	if(!pFnGetPanelOwner)
		pFnGetPanelOwner = UObject::FindFunction("Function Engine.UICalloutButton.GetPanelOwner");

	Engine_GetPanelOwner_Parms GetPanelOwner_Parms;
	ProcessEvent(pFnGetPanelOwner,NULL,&GetPanelOwner_Parms,NULL);
	return GetPanelOwner_Parms.ReturnValue;
}

struct Engine_OnStateChanged_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    NewlyActiveState;                                 		// 0x000008 (0x0004)              
	class UUIState*                                    PreviouslyActiveState;                            		// 0x00000C (0x0004)              
};

void UUITabButton::OnStateChanged(class UUIScreenObject* Sender,int PlayerIndex,class UUIState* NewlyActiveState,class UUIState* PreviouslyActiveState)
{
	static UFieldFunc* pFnOnStateChanged = NULL;
	if(!pFnOnStateChanged)
		pFnOnStateChanged = UObject::FindFunction("Function Engine.UITabButton.OnStateChanged");

	Engine_OnStateChanged_Parms OnStateChanged_Parms;
	OnStateChanged_Parms.Sender = Sender;
	OnStateChanged_Parms.PlayerIndex = PlayerIndex;
	OnStateChanged_Parms.NewlyActiveState = NewlyActiveState;
	OnStateChanged_Parms.PreviouslyActiveState = PreviouslyActiveState;
	ProcessEvent(pFnOnStateChanged,NULL,&OnStateChanged_Parms,NULL);
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUITabButton::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UITabButton.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUITabButton::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UITabButton.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUITabButton::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UITabButton.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_RemovedFromParent_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
};

void UUITabButton::RemovedFromParent(class UUIScreenObject* WidgetOwner)
{
	static UFieldFunc* pFnRemovedFromParent = NULL;
	if(!pFnRemovedFromParent)
		pFnRemovedFromParent = UObject::FindFunction("Function Engine.UITabButton.RemovedFromParent");

	Engine_RemovedFromParent_Parms RemovedFromParent_Parms;
	RemovedFromParent_Parms.WidgetOwner = WidgetOwner;
	ProcessEvent(pFnRemovedFromParent,NULL,&RemovedFromParent_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUITabButton::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UITabButton.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_RemovedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   OldChild;                                         		// 0x000004 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000008 (0x000C)              
};

void UUITabButton::RemovedChild(class UUIScreenObject* WidgetOwner,class UUIObject* OldChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemovedChild = NULL;
	if(!pFnRemovedChild)
		pFnRemovedChild = UObject::FindFunction("Function Engine.UITabButton.RemovedChild");

	Engine_RemovedChild_Parms RemovedChild_Parms;
	RemovedChild_Parms.WidgetOwner = WidgetOwner;
	RemovedChild_Parms.OldChild = OldChild;
	memcpy(&RemovedChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	ProcessEvent(pFnRemovedChild,NULL,&RemovedChild_Parms,NULL);
}

struct Engine_IsTargeted_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	int                                                StateIndex;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUITabButton::IsTargeted(int PlayerIndex,int* StateIndex)
{
	static UFieldFunc* pFnIsTargeted = NULL;
	if(!pFnIsTargeted)
		pFnIsTargeted = UObject::FindFunction("Function Engine.UITabButton.IsTargeted");

	Engine_IsTargeted_Parms IsTargeted_Parms;
	IsTargeted_Parms.PlayerIndex = PlayerIndex;
	pFnIsTargeted->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsTargeted,NULL,&IsTargeted_Parms,NULL);
	pFnIsTargeted->FunctionFlags |= 0x400;
	if(StateIndex)
		*StateIndex = IsTargeted_Parms.StateIndex;
	return IsTargeted_Parms.ReturnValue;
}

struct Engine_CanActivateButton_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUITabButton::CanActivateButton(int PlayerIndex)
{
	static UFieldFunc* pFnCanActivateButton = NULL;
	if(!pFnCanActivateButton)
		pFnCanActivateButton = UObject::FindFunction("Function Engine.UITabButton.CanActivateButton");

	Engine_CanActivateButton_Parms CanActivateButton_Parms;
	CanActivateButton_Parms.PlayerIndex = PlayerIndex;
	pFnCanActivateButton->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanActivateButton,NULL,&CanActivateButton_Parms,NULL);
	pFnCanActivateButton->FunctionFlags |= 0x400;
	return CanActivateButton_Parms.ReturnValue;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUITabButton::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UITabButton.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUITabButton::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UITabButton.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUITabButton::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UITabButton.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_AddedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
	//class UUITabPage*                                  ChildPage;                                        		// 0x000008 (0x0004)              
};

void UUITabButton::AddedChild(class UUIScreenObject* WidgetOwner,class UUIObject* NewChild)
{
	static UFieldFunc* pFnAddedChild = NULL;
	if(!pFnAddedChild)
		pFnAddedChild = UObject::FindFunction("Function Engine.UITabButton.AddedChild");

	Engine_AddedChild_Parms AddedChild_Parms;
	AddedChild_Parms.WidgetOwner = WidgetOwner;
	AddedChild_Parms.NewChild = NewChild;
	ProcessEvent(pFnAddedChild,NULL,&AddedChild_Parms,NULL);
}

struct Engine_GetTabPage_Parms
{
	class UUITabPage*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUITabPage* UUITabButton::GetTabPage()
{
	static UFieldFunc* pFnGetTabPage = NULL;
	if(!pFnGetTabPage)
		pFnGetTabPage = UObject::FindFunction("Function Engine.UITabButton.GetTabPage");

	Engine_GetTabPage_Parms GetTabPage_Parms;
	ProcessEvent(pFnGetTabPage,NULL,&GetTabPage_Parms,NULL);
	return GetTabPage_Parms.ReturnValue;
}

struct Engine_IsActivationAllowed_Parms
{
	class UUITabButton*                                Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUITabButton::IsActivationAllowed(class UUITabButton* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnIsActivationAllowed = NULL;
	if(!pFnIsActivationAllowed)
		pFnIsActivationAllowed = UObject::FindFunction("Function Engine.UITabButton.IsActivationAllowed");

	Engine_IsActivationAllowed_Parms IsActivationAllowed_Parms;
	IsActivationAllowed_Parms.Sender = Sender;
	IsActivationAllowed_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnIsActivationAllowed,NULL,&IsActivationAllowed_Parms,NULL);
	return IsActivationAllowed_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIToggleButton::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIToggleButton.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_SetValue_Parms
{
	unsigned long                                      bShouldBeChecked : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIToggleButton::SetValue(bool bShouldBeChecked,int PlayerIndex)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UIToggleButton.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	SetValue_Parms.bShouldBeChecked = bShouldBeChecked;
	SetValue_Parms.PlayerIndex = PlayerIndex;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
}

struct Engine_OnSetBoolValue_Parms
{
	class UUIAction_SetBoolValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUIToggleButton::OnSetBoolValue(class UUIAction_SetBoolValue* Action)
{
	static UFieldFunc* pFnOnSetBoolValue = NULL;
	if(!pFnOnSetBoolValue)
		pFnOnSetBoolValue = UObject::FindFunction("Function Engine.UIToggleButton.OnSetBoolValue");

	Engine_OnSetBoolValue_Parms OnSetBoolValue_Parms;
	OnSetBoolValue_Parms.Action = Action;
	ProcessEvent(pFnOnSetBoolValue,NULL,&OnSetBoolValue_Parms,NULL);
}

struct Engine_IsChecked_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIToggleButton::IsChecked()
{
	static UFieldFunc* pFnIsChecked = NULL;
	if(!pFnIsChecked)
		pFnIsChecked = UObject::FindFunction("Function Engine.UIToggleButton.IsChecked");

	Engine_IsChecked_Parms IsChecked_Parms;
	ProcessEvent(pFnIsChecked,NULL,&IsChecked_Parms,NULL);
	return IsChecked_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIToggleButton::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIToggleButton.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetCaption_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
};

void UUIToggleButton::SetCaption(struct FString NewText)
{
	static UFieldFunc* pFnSetCaption = NULL;
	if(!pFnSetCaption)
		pFnSetCaption = UObject::FindFunction("Function Engine.UIToggleButton.SetCaption");

	Engine_SetCaption_Parms SetCaption_Parms;
	memcpy(&SetCaption_Parms.NewText,&NewText,0xC);
	pFnSetCaption->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCaption,NULL,&SetCaption_Parms,NULL);
	pFnSetCaption->FunctionFlags |= 0x400;
}

struct Engine_ButtonClicked_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIToggleButton::ButtonClicked(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnButtonClicked = NULL;
	if(!pFnButtonClicked)
		pFnButtonClicked = UObject::FindFunction("Function Engine.UIToggleButton.ButtonClicked");

	Engine_ButtonClicked_Parms ButtonClicked_Parms;
	ButtonClicked_Parms.Sender = Sender;
	ButtonClicked_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnButtonClicked,NULL,&ButtonClicked_Parms,NULL);
	return ButtonClicked_Parms.ReturnValue;
}

struct Engine_OnMoveSelectionRight_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
};

void UUIOptionListBase::OnMoveSelectionRight(int PlayerIndex)
{
	static UFieldFunc* pFnOnMoveSelectionRight = NULL;
	if(!pFnOnMoveSelectionRight)
		pFnOnMoveSelectionRight = UObject::FindFunction("Function Engine.UIOptionListBase.OnMoveSelectionRight");

	Engine_OnMoveSelectionRight_Parms OnMoveSelectionRight_Parms;
	OnMoveSelectionRight_Parms.PlayerIndex = PlayerIndex;
	pFnOnMoveSelectionRight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnMoveSelectionRight,NULL,&OnMoveSelectionRight_Parms,NULL);
	pFnOnMoveSelectionRight->FunctionFlags |= 0x400;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIOptionListBase::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIOptionListBase.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_OnMoveSelectionLeft_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
};

void UUIOptionListBase::OnMoveSelectionLeft(int PlayerIndex)
{
	static UFieldFunc* pFnOnMoveSelectionLeft = NULL;
	if(!pFnOnMoveSelectionLeft)
		pFnOnMoveSelectionLeft = UObject::FindFunction("Function Engine.UIOptionListBase.OnMoveSelectionLeft");

	Engine_OnMoveSelectionLeft_Parms OnMoveSelectionLeft_Parms;
	OnMoveSelectionLeft_Parms.PlayerIndex = PlayerIndex;
	pFnOnMoveSelectionLeft->FunctionFlags |= ~0x400;
	ProcessEvent(pFnOnMoveSelectionLeft,NULL,&OnMoveSelectionLeft_Parms,NULL);
	pFnOnMoveSelectionLeft->FunctionFlags |= 0x400;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIOptionListBase::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIOptionListBase.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_Initialized_Parms
{
};

void UUIOptionListBase::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UIOptionListBase.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIOptionListBase::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIOptionListBase.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIOptionListBase::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIOptionListBase.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIOptionListBase::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIOptionListBase.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_HasPrevValue_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIOptionListBase::HasPrevValue()
{
	static UFieldFunc* pFnHasPrevValue = NULL;
	if(!pFnHasPrevValue)
		pFnHasPrevValue = UObject::FindFunction("Function Engine.UIOptionListBase.HasPrevValue");

	Engine_HasPrevValue_Parms HasPrevValue_Parms;
	pFnHasPrevValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasPrevValue,NULL,&HasPrevValue_Parms,NULL);
	pFnHasPrevValue->FunctionFlags |= 0x400;
	return HasPrevValue_Parms.ReturnValue;
}

struct Engine_CreateCustomIncrementButton_Parms
{
	class UUIOptionListBase*                           ButtonOwner;                                      		// 0x000000 (0x0004)              
	class UUIOptionListButton*                         ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIOptionListButton* UUIOptionListBase::CreateCustomIncrementButton(class UUIOptionListBase* ButtonOwner)
{
	static UFieldFunc* pFnCreateCustomIncrementButton = NULL;
	if(!pFnCreateCustomIncrementButton)
		pFnCreateCustomIncrementButton = UObject::FindFunction("Function Engine.UIOptionListBase.CreateCustomIncrementButton");

	Engine_CreateCustomIncrementButton_Parms CreateCustomIncrementButton_Parms;
	CreateCustomIncrementButton_Parms.ButtonOwner = ButtonOwner;
	ProcessEvent(pFnCreateCustomIncrementButton,NULL,&CreateCustomIncrementButton_Parms,NULL);
	return CreateCustomIncrementButton_Parms.ReturnValue;
}

struct Engine_CreateCustomDecrementButton_Parms
{
	class UUIOptionListBase*                           ButtonOwner;                                      		// 0x000000 (0x0004)              
	class UUIOptionListButton*                         ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIOptionListButton* UUIOptionListBase::CreateCustomDecrementButton(class UUIOptionListBase* ButtonOwner)
{
	static UFieldFunc* pFnCreateCustomDecrementButton = NULL;
	if(!pFnCreateCustomDecrementButton)
		pFnCreateCustomDecrementButton = UObject::FindFunction("Function Engine.UIOptionListBase.CreateCustomDecrementButton");

	Engine_CreateCustomDecrementButton_Parms CreateCustomDecrementButton_Parms;
	CreateCustomDecrementButton_Parms.ButtonOwner = ButtonOwner;
	ProcessEvent(pFnCreateCustomDecrementButton,NULL,&CreateCustomDecrementButton_Parms,NULL);
	return CreateCustomDecrementButton_Parms.ReturnValue;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIOptionListBase::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIOptionListBase.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_Created_Parms
{
	class UUIObject*                                   CreatedWidget;                                    		// 0x000000 (0x0004)              
	class UUIScreenObject*                             CreatorContainer;                                 		// 0x000004 (0x0004)              
};

void UUIOptionListBase::Created(class UUIObject* CreatedWidget,class UUIScreenObject* CreatorContainer)
{
	static UFieldFunc* pFnCreated = NULL;
	if(!pFnCreated)
		pFnCreated = UObject::FindFunction("Function Engine.UIOptionListBase.Created");

	Engine_Created_Parms Created_Parms;
	Created_Parms.CreatedWidget = CreatedWidget;
	Created_Parms.CreatorContainer = CreatorContainer;
	ProcessEvent(pFnCreated,NULL,&Created_Parms,NULL);
}

struct Engine_OnButtonClicked_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIOptionListBase::OnButtonClicked(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnOnButtonClicked = NULL;
	if(!pFnOnButtonClicked)
		pFnOnButtonClicked = UObject::FindFunction("Function Engine.UIOptionListBase.OnButtonClicked");

	Engine_OnButtonClicked_Parms OnButtonClicked_Parms;
	OnButtonClicked_Parms.Sender = Sender;
	OnButtonClicked_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnButtonClicked,NULL,&OnButtonClicked_Parms,NULL);
	return OnButtonClicked_Parms.ReturnValue;
}

struct Engine_InitializeInternalControls_Parms
{
};

void UUIOptionListBase::InitializeInternalControls()
{
	static UFieldFunc* pFnInitializeInternalControls = NULL;
	if(!pFnInitializeInternalControls)
		pFnInitializeInternalControls = UObject::FindFunction("Function Engine.UIOptionListBase.InitializeInternalControls");

	Engine_InitializeInternalControls_Parms InitializeInternalControls_Parms;
	ProcessEvent(pFnInitializeInternalControls,NULL,&InitializeInternalControls_Parms,NULL);
}

struct Engine_HasNextValue_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIOptionListBase::HasNextValue()
{
	static UFieldFunc* pFnHasNextValue = NULL;
	if(!pFnHasNextValue)
		pFnHasNextValue = UObject::FindFunction("Function Engine.UIOptionListBase.HasNextValue");

	Engine_HasNextValue_Parms HasNextValue_Parms;
	pFnHasNextValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasNextValue,NULL,&HasNextValue_Parms,NULL);
	pFnHasNextValue->FunctionFlags |= 0x400;
	return HasNextValue_Parms.ReturnValue;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIOptionListBase::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIOptionListBase.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_UpdateButtonState_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
};

void UUIOptionListButton::UpdateButtonState(int PlayerIndex)
{
	static UFieldFunc* pFnUpdateButtonState = NULL;
	if(!pFnUpdateButtonState)
		pFnUpdateButtonState = UObject::FindFunction("Function Engine.UIOptionListButton.UpdateButtonState");

	Engine_UpdateButtonState_Parms UpdateButtonState_Parms;
	UpdateButtonState_Parms.PlayerIndex = PlayerIndex;
	pFnUpdateButtonState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateButtonState,NULL,&UpdateButtonState_Parms,NULL);
	pFnUpdateButtonState->FunctionFlags |= 0x400;
}

struct Engine_GetScrollZoneExtent_Parms
{
	float                                              ScrollZoneStart;                                  		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIScrollbar::GetScrollZoneExtent(float* ScrollZoneStart)
{
	static UFieldFunc* pFnGetScrollZoneExtent = NULL;
	if(!pFnGetScrollZoneExtent)
		pFnGetScrollZoneExtent = UObject::FindFunction("Function Engine.UIScrollbar.GetScrollZoneExtent");

	Engine_GetScrollZoneExtent_Parms GetScrollZoneExtent_Parms;
	pFnGetScrollZoneExtent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetScrollZoneExtent,NULL,&GetScrollZoneExtent_Parms,NULL);
	pFnGetScrollZoneExtent->FunctionFlags |= 0x400;
	if(ScrollZoneStart)
		*ScrollZoneStart = GetScrollZoneExtent_Parms.ScrollZoneStart;
	return GetScrollZoneExtent_Parms.ReturnValue;
}

struct Engine_Initialized_Parms
{
};

void UUIScrollbar::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UIScrollbar.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_GetNudgeValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScrollbar::GetNudgeValue()
{
	static UFieldFunc* pFnGetNudgeValue = NULL;
	if(!pFnGetNudgeValue)
		pFnGetNudgeValue = UObject::FindFunction("Function Engine.UIScrollbar.GetNudgeValue");

	Engine_GetNudgeValue_Parms GetNudgeValue_Parms;
	ProcessEvent(pFnGetNudgeValue,NULL,&GetNudgeValue_Parms,NULL);
	return GetNudgeValue_Parms.ReturnValue;
}

struct Engine_SetNudgeSizePixels_Parms
{
	float                                              NudgePixels;                                      		// 0x000000 (0x0004)              
};

void UUIScrollbar::SetNudgeSizePixels(float NudgePixels)
{
	static UFieldFunc* pFnSetNudgeSizePixels = NULL;
	if(!pFnSetNudgeSizePixels)
		pFnSetNudgeSizePixels = UObject::FindFunction("Function Engine.UIScrollbar.SetNudgeSizePixels");

	Engine_SetNudgeSizePixels_Parms SetNudgeSizePixels_Parms;
	SetNudgeSizePixels_Parms.NudgePixels = NudgePixels;
	pFnSetNudgeSizePixels->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNudgeSizePixels,NULL,&SetNudgeSizePixels_Parms,NULL);
	pFnSetNudgeSizePixels->FunctionFlags |= 0x400;
}

struct Engine_DragScrollBegin_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIScrollbar::DragScrollBegin(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnDragScrollBegin = NULL;
	if(!pFnDragScrollBegin)
		pFnDragScrollBegin = UObject::FindFunction("Function Engine.UIScrollbar.DragScrollBegin");

	Engine_DragScrollBegin_Parms DragScrollBegin_Parms;
	DragScrollBegin_Parms.Sender = Sender;
	DragScrollBegin_Parms.PlayerIndex = PlayerIndex;
	pFnDragScrollBegin->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDragScrollBegin,NULL,&DragScrollBegin_Parms,NULL);
	pFnDragScrollBegin->FunctionFlags |= 0x400;
}

struct Engine_ScrollIncrement_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIScrollbar::ScrollIncrement(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnScrollIncrement = NULL;
	if(!pFnScrollIncrement)
		pFnScrollIncrement = UObject::FindFunction("Function Engine.UIScrollbar.ScrollIncrement");

	Engine_ScrollIncrement_Parms ScrollIncrement_Parms;
	ScrollIncrement_Parms.Sender = Sender;
	ScrollIncrement_Parms.PlayerIndex = PlayerIndex;
	pFnScrollIncrement->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScrollIncrement,NULL,&ScrollIncrement_Parms,NULL);
	pFnScrollIncrement->FunctionFlags |= 0x400;
}

struct Engine_GetMarkerButtonPosition_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScrollbar::GetMarkerButtonPosition()
{
	static UFieldFunc* pFnGetMarkerButtonPosition = NULL;
	if(!pFnGetMarkerButtonPosition)
		pFnGetMarkerButtonPosition = UObject::FindFunction("Function Engine.UIScrollbar.GetMarkerButtonPosition");

	Engine_GetMarkerButtonPosition_Parms GetMarkerButtonPosition_Parms;
	pFnGetMarkerButtonPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMarkerButtonPosition,NULL,&GetMarkerButtonPosition_Parms,NULL);
	pFnGetMarkerButtonPosition->FunctionFlags |= 0x400;
	return GetMarkerButtonPosition_Parms.ReturnValue;
}

struct Engine_SetMarkerSize_Parms
{
	float                                              SizePercentage;                                   		// 0x000000 (0x0004)              
};

void UUIScrollbar::SetMarkerSize(float SizePercentage)
{
	static UFieldFunc* pFnSetMarkerSize = NULL;
	if(!pFnSetMarkerSize)
		pFnSetMarkerSize = UObject::FindFunction("Function Engine.UIScrollbar.SetMarkerSize");

	Engine_SetMarkerSize_Parms SetMarkerSize_Parms;
	SetMarkerSize_Parms.SizePercentage = SizePercentage;
	pFnSetMarkerSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMarkerSize,NULL,&SetMarkerSize_Parms,NULL);
	pFnSetMarkerSize->FunctionFlags |= 0x400;
}

struct Engine_DragScroll_Parms
{
	class UUIScrollbarMarkerButton*                    Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIScrollbar::DragScroll(class UUIScrollbarMarkerButton* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnDragScroll = NULL;
	if(!pFnDragScroll)
		pFnDragScroll = UObject::FindFunction("Function Engine.UIScrollbar.DragScroll");

	Engine_DragScroll_Parms DragScroll_Parms;
	DragScroll_Parms.Sender = Sender;
	DragScroll_Parms.PlayerIndex = PlayerIndex;
	pFnDragScroll->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDragScroll,NULL,&DragScroll_Parms,NULL);
	pFnDragScroll->FunctionFlags |= 0x400;
}

struct Engine_DragScrollEnd_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIScrollbar::DragScrollEnd(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnDragScrollEnd = NULL;
	if(!pFnDragScrollEnd)
		pFnDragScrollEnd = UObject::FindFunction("Function Engine.UIScrollbar.DragScrollEnd");

	Engine_DragScrollEnd_Parms DragScrollEnd_Parms;
	DragScrollEnd_Parms.Sender = Sender;
	DragScrollEnd_Parms.PlayerIndex = PlayerIndex;
	pFnDragScrollEnd->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDragScrollEnd,NULL,&DragScrollEnd_Parms,NULL);
	pFnDragScrollEnd->FunctionFlags |= 0x400;
}

struct Engine_GetNudgePercent_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScrollbar::GetNudgePercent()
{
	static UFieldFunc* pFnGetNudgePercent = NULL;
	if(!pFnGetNudgePercent)
		pFnGetNudgePercent = UObject::FindFunction("Function Engine.UIScrollbar.GetNudgePercent");

	Engine_GetNudgePercent_Parms GetNudgePercent_Parms;
	ProcessEvent(pFnGetNudgePercent,NULL,&GetNudgePercent_Parms,NULL);
	return GetNudgePercent_Parms.ReturnValue;
}

struct Engine_OnScrollActivity_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionChange;                                   		// 0x000004 (0x0004)              
	unsigned long                                      bPositionMaxed : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScrollbar::OnScrollActivity(class UUIScrollbar* Sender,float PositionChange,bool bPositionMaxed)
{
	static UFieldFunc* pFnOnScrollActivity = NULL;
	if(!pFnOnScrollActivity)
		pFnOnScrollActivity = UObject::FindFunction("Function Engine.UIScrollbar.OnScrollActivity");

	Engine_OnScrollActivity_Parms OnScrollActivity_Parms;
	OnScrollActivity_Parms.Sender = Sender;
	OnScrollActivity_Parms.PositionChange = PositionChange;
	OnScrollActivity_Parms.bPositionMaxed = bPositionMaxed;
	ProcessEvent(pFnOnScrollActivity,NULL,&OnScrollActivity_Parms,NULL);
	return OnScrollActivity_Parms.ReturnValue;
}

struct Engine_PostInitialize_Parms
{
};

void UUIScrollbar::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UIScrollbar.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_GetScrollZoneWidth_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScrollbar::GetScrollZoneWidth()
{
	static UFieldFunc* pFnGetScrollZoneWidth = NULL;
	if(!pFnGetScrollZoneWidth)
		pFnGetScrollZoneWidth = UObject::FindFunction("Function Engine.UIScrollbar.GetScrollZoneWidth");

	Engine_GetScrollZoneWidth_Parms GetScrollZoneWidth_Parms;
	pFnGetScrollZoneWidth->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetScrollZoneWidth,NULL,&GetScrollZoneWidth_Parms,NULL);
	pFnGetScrollZoneWidth->FunctionFlags |= 0x400;
	return GetScrollZoneWidth_Parms.ReturnValue;
}

struct Engine_GetMarkerPosPercent_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScrollbar::GetMarkerPosPercent()
{
	static UFieldFunc* pFnGetMarkerPosPercent = NULL;
	if(!pFnGetMarkerPosPercent)
		pFnGetMarkerPosPercent = UObject::FindFunction("Function Engine.UIScrollbar.GetMarkerPosPercent");

	Engine_GetMarkerPosPercent_Parms GetMarkerPosPercent_Parms;
	ProcessEvent(pFnGetMarkerPosPercent,NULL,&GetMarkerPosPercent_Parms,NULL);
	return GetMarkerPosPercent_Parms.ReturnValue;
}

struct Engine_SetMarkerPosition_Parms
{
	float                                              PositionPercentage;                               		// 0x000000 (0x0004)              
};

void UUIScrollbar::SetMarkerPosition(float PositionPercentage)
{
	static UFieldFunc* pFnSetMarkerPosition = NULL;
	if(!pFnSetMarkerPosition)
		pFnSetMarkerPosition = UObject::FindFunction("Function Engine.UIScrollbar.SetMarkerPosition");

	Engine_SetMarkerPosition_Parms SetMarkerPosition_Parms;
	SetMarkerPosition_Parms.PositionPercentage = PositionPercentage;
	pFnSetMarkerPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetMarkerPosition,NULL,&SetMarkerPosition_Parms,NULL);
	pFnSetMarkerPosition->FunctionFlags |= 0x400;
}

struct Engine_OnClickedScrollZone_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionPerc;                                     		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
};

void UUIScrollbar::OnClickedScrollZone(class UUIScrollbar* Sender,float PositionPerc,int PlayerIndex)
{
	static UFieldFunc* pFnOnClickedScrollZone = NULL;
	if(!pFnOnClickedScrollZone)
		pFnOnClickedScrollZone = UObject::FindFunction("Function Engine.UIScrollbar.OnClickedScrollZone");

	Engine_OnClickedScrollZone_Parms OnClickedScrollZone_Parms;
	OnClickedScrollZone_Parms.Sender = Sender;
	OnClickedScrollZone_Parms.PositionPerc = PositionPerc;
	OnClickedScrollZone_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnClickedScrollZone,NULL,&OnClickedScrollZone_Parms,NULL);
}

struct Engine_GetMarkerSizePercent_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUIScrollbar::GetMarkerSizePercent()
{
	static UFieldFunc* pFnGetMarkerSizePercent = NULL;
	if(!pFnGetMarkerSizePercent)
		pFnGetMarkerSizePercent = UObject::FindFunction("Function Engine.UIScrollbar.GetMarkerSizePercent");

	Engine_GetMarkerSizePercent_Parms GetMarkerSizePercent_Parms;
	ProcessEvent(pFnGetMarkerSizePercent,NULL,&GetMarkerSizePercent_Parms,NULL);
	return GetMarkerSizePercent_Parms.ReturnValue;
}

struct Engine_SetNudgeSizePercent_Parms
{
	float                                              NudgePercentage;                                  		// 0x000000 (0x0004)              
};

void UUIScrollbar::SetNudgeSizePercent(float NudgePercentage)
{
	static UFieldFunc* pFnSetNudgeSizePercent = NULL;
	if(!pFnSetNudgeSizePercent)
		pFnSetNudgeSizePercent = UObject::FindFunction("Function Engine.UIScrollbar.SetNudgeSizePercent");

	Engine_SetNudgeSizePercent_Parms SetNudgeSizePercent_Parms;
	SetNudgeSizePercent_Parms.NudgePercentage = NudgePercentage;
	pFnSetNudgeSizePercent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNudgeSizePercent,NULL,&SetNudgeSizePercent_Parms,NULL);
	pFnSetNudgeSizePercent->FunctionFlags |= 0x400;
}

struct Engine_ScrollDecrement_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIScrollbar::ScrollDecrement(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnScrollDecrement = NULL;
	if(!pFnScrollDecrement)
		pFnScrollDecrement = UObject::FindFunction("Function Engine.UIScrollbar.ScrollDecrement");

	Engine_ScrollDecrement_Parms ScrollDecrement_Parms;
	ScrollDecrement_Parms.Sender = Sender;
	ScrollDecrement_Parms.PlayerIndex = PlayerIndex;
	pFnScrollDecrement->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScrollDecrement,NULL,&ScrollDecrement_Parms,NULL);
	pFnScrollDecrement->FunctionFlags |= 0x400;
}

struct Engine_EnableCornerPadding_Parms
{
	unsigned long                                      FlagValue : 1;                                    		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScrollbar::EnableCornerPadding(bool FlagValue)
{
	static UFieldFunc* pFnEnableCornerPadding = NULL;
	if(!pFnEnableCornerPadding)
		pFnEnableCornerPadding = UObject::FindFunction("Function Engine.UIScrollbar.EnableCornerPadding");

	Engine_EnableCornerPadding_Parms EnableCornerPadding_Parms;
	EnableCornerPadding_Parms.FlagValue = FlagValue;
	pFnEnableCornerPadding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEnableCornerPadding,NULL,&EnableCornerPadding_Parms,NULL);
	pFnEnableCornerPadding->FunctionFlags |= 0x400;
}

struct Engine_OnButtonDragged_Parms
{
	class UUIScrollbarMarkerButton*                    Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIScrollbarMarkerButton::OnButtonDragged(class UUIScrollbarMarkerButton* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnOnButtonDragged = NULL;
	if(!pFnOnButtonDragged)
		pFnOnButtonDragged = UObject::FindFunction("Function Engine.UIScrollbarMarkerButton.OnButtonDragged");

	Engine_OnButtonDragged_Parms OnButtonDragged_Parms;
	OnButtonDragged_Parms.Sender = Sender;
	OnButtonDragged_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnButtonDragged,NULL,&OnButtonDragged_Parms,NULL);
}

struct Engine_PostInitialize_Parms
{
};

void UUIComboBox::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UIComboBox.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_ShowList_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
};

void UUIComboBox::ShowList(int PlayerIndex)
{
	static UFieldFunc* pFnShowList = NULL;
	if(!pFnShowList)
		pFnShowList = UObject::FindFunction("Function Engine.UIComboBox.ShowList");

	Engine_ShowList_Parms ShowList_Parms;
	ShowList_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnShowList,NULL,&ShowList_Parms,NULL);
}

struct Engine_SelectedItemChanged_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	//struct FString                                     SelectedItemText;                                 		// 0x000008 (0x000C)              
};

void UUIComboBox::SelectedItemChanged(class UUIObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnSelectedItemChanged = NULL;
	if(!pFnSelectedItemChanged)
		pFnSelectedItemChanged = UObject::FindFunction("Function Engine.UIComboBox.SelectedItemChanged");

	Engine_SelectedItemChanged_Parms SelectedItemChanged_Parms;
	SelectedItemChanged_Parms.Sender = Sender;
	SelectedItemChanged_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnSelectedItemChanged,NULL,&SelectedItemChanged_Parms,NULL);
}

struct Engine_ButtonPressed_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIComboBox::ButtonPressed(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnButtonPressed = NULL;
	if(!pFnButtonPressed)
		pFnButtonPressed = UObject::FindFunction("Function Engine.UIComboBox.ButtonPressed");

	Engine_ButtonPressed_Parms ButtonPressed_Parms;
	ButtonPressed_Parms.EventObject = EventObject;
	ButtonPressed_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnButtonPressed,NULL,&ButtonPressed_Parms,NULL);
}

struct Engine_ListItemSelected_Parms
{
	class UUIList*                                     Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIComboBox::ListItemSelected(class UUIList* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnListItemSelected = NULL;
	if(!pFnListItemSelected)
		pFnListItemSelected = UObject::FindFunction("Function Engine.UIComboBox.ListItemSelected");

	Engine_ListItemSelected_Parms ListItemSelected_Parms;
	ListItemSelected_Parms.Sender = Sender;
	ListItemSelected_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnListItemSelected,NULL,&ListItemSelected_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComboBox::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIComboBox.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIComboBox::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIComboBox.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIComboBox::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIComboBox.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIComboBox::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIComboBox.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_HideList_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
};

void UUIComboBox::HideList(int PlayerIndex)
{
	static UFieldFunc* pFnHideList = NULL;
	if(!pFnHideList)
		pFnHideList = UObject::FindFunction("Function Engine.UIComboBox.HideList");

	Engine_HideList_Parms HideList_Parms;
	HideList_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnHideList,NULL,&HideList_Parms,NULL);
}

struct Engine_CreateCustomComboList_Parms
{
	class UUIComboBox*                                 ListOwner;                                        		// 0x000000 (0x0004)              
	class UUIList*                                     ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIList* UUIComboBox::CreateCustomComboList(class UUIComboBox* ListOwner)
{
	static UFieldFunc* pFnCreateCustomComboList = NULL;
	if(!pFnCreateCustomComboList)
		pFnCreateCustomComboList = UObject::FindFunction("Function Engine.UIComboBox.CreateCustomComboList");

	Engine_CreateCustomComboList_Parms CreateCustomComboList_Parms;
	CreateCustomComboList_Parms.ListOwner = ListOwner;
	ProcessEvent(pFnCreateCustomComboList,NULL,&CreateCustomComboList_Parms,NULL);
	return CreateCustomComboList_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIComboBox::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIComboBox.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_EditboxTextChanged_Parms
{
	class UUIObject*                                   Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIComboBox::EditboxTextChanged(class UUIObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnEditboxTextChanged = NULL;
	if(!pFnEditboxTextChanged)
		pFnEditboxTextChanged = UObject::FindFunction("Function Engine.UIComboBox.EditboxTextChanged");

	Engine_EditboxTextChanged_Parms EditboxTextChanged_Parms;
	EditboxTextChanged_Parms.Sender = Sender;
	EditboxTextChanged_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnEditboxTextChanged,NULL,&EditboxTextChanged_Parms,NULL);
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIComboBox::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIComboBox.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_EditboxPressed_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUIComboBox::EditboxPressed(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnEditboxPressed = NULL;
	if(!pFnEditboxPressed)
		pFnEditboxPressed = UObject::FindFunction("Function Engine.UIComboBox.EditboxPressed");

	Engine_EditboxPressed_Parms EditboxPressed_Parms;
	EditboxPressed_Parms.EventObject = EventObject;
	EditboxPressed_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnEditboxPressed,NULL,&EditboxPressed_Parms,NULL);
}

struct Engine_SetListDocking_Parms
{
	unsigned long                                      bDockToButton : 1;                                		// 0x000000 (0x0004) [0x00000001] 
};

void UUIComboBox::SetListDocking(bool bDockToButton)
{
	static UFieldFunc* pFnSetListDocking = NULL;
	if(!pFnSetListDocking)
		pFnSetListDocking = UObject::FindFunction("Function Engine.UIComboBox.SetListDocking");

	Engine_SetListDocking_Parms SetListDocking_Parms;
	SetListDocking_Parms.bDockToButton = bDockToButton;
	ProcessEvent(pFnSetListDocking,NULL,&SetListDocking_Parms,NULL);
}

struct Engine_OnGetTextValue_Parms
{
	class UUIAction_GetTextValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUIComboBox::OnGetTextValue(class UUIAction_GetTextValue* Action)
{
	static UFieldFunc* pFnOnGetTextValue = NULL;
	if(!pFnOnGetTextValue)
		pFnOnGetTextValue = UObject::FindFunction("Function Engine.UIComboBox.OnGetTextValue");

	Engine_OnGetTextValue_Parms OnGetTextValue_Parms;
	OnGetTextValue_Parms.Action = Action;
	ProcessEvent(pFnOnGetTextValue,NULL,&OnGetTextValue_Parms,NULL);
}

struct Engine_CreateCustomComboButton_Parms
{
	class UUIComboBox*                                 ButtonOwner;                                      		// 0x000000 (0x0004)              
	class UUIToggleButton*                             ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIToggleButton* UUIComboBox::CreateCustomComboButton(class UUIComboBox* ButtonOwner)
{
	static UFieldFunc* pFnCreateCustomComboButton = NULL;
	if(!pFnCreateCustomComboButton)
		pFnCreateCustomComboButton = UObject::FindFunction("Function Engine.UIComboBox.CreateCustomComboButton");

	Engine_CreateCustomComboButton_Parms CreateCustomComboButton_Parms;
	CreateCustomComboButton_Parms.ButtonOwner = ButtonOwner;
	ProcessEvent(pFnCreateCustomComboButton,NULL,&CreateCustomComboButton_Parms,NULL);
	return CreateCustomComboButton_Parms.ReturnValue;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIComboBox::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIComboBox.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIComboBox::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIComboBox.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_SetVisibility_Parms
{
	unsigned long                                      bIsVisible : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UUIComboBox::SetVisibility(bool bIsVisible)
{
	static UFieldFunc* pFnSetVisibility = NULL;
	if(!pFnSetVisibility)
		pFnSetVisibility = UObject::FindFunction("Function Engine.UIComboBox.SetVisibility");

	Engine_SetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.bIsVisible = bIsVisible;
	pFnSetVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVisibility,NULL,&SetVisibility_Parms,NULL);
	pFnSetVisibility->FunctionFlags |= 0x400;
}

struct Engine_CreateCustomComboEditbox_Parms
{
	class UUIComboBox*                                 EditboxOwner;                                     		// 0x000000 (0x0004)              
	class UUIEditBox*                                  ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIEditBox* UUIComboBox::CreateCustomComboEditbox(class UUIComboBox* EditboxOwner)
{
	static UFieldFunc* pFnCreateCustomComboEditbox = NULL;
	if(!pFnCreateCustomComboEditbox)
		pFnCreateCustomComboEditbox = UObject::FindFunction("Function Engine.UIComboBox.CreateCustomComboEditbox");

	Engine_CreateCustomComboEditbox_Parms CreateCustomComboEditbox_Parms;
	CreateCustomComboEditbox_Parms.EditboxOwner = EditboxOwner;
	ProcessEvent(pFnCreateCustomComboEditbox,NULL,&CreateCustomComboEditbox_Parms,NULL);
	return CreateCustomComboEditbox_Parms.ReturnValue;
}

struct Engine_IsListDockedToButton_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIComboBox::IsListDockedToButton()
{
	static UFieldFunc* pFnIsListDockedToButton = NULL;
	if(!pFnIsListDockedToButton)
		pFnIsListDockedToButton = UObject::FindFunction("Function Engine.UIComboBox.IsListDockedToButton");

	Engine_IsListDockedToButton_Parms IsListDockedToButton_Parms;
	ProcessEvent(pFnIsListDockedToButton,NULL,&IsListDockedToButton_Parms,NULL);
	return IsListDockedToButton_Parms.ReturnValue;
}

struct Engine_SetEditboxText_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
	int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
	unsigned long                                      bListItemsOnly : 1;                               		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      bSkipNotification : 1;                            		// 0x000014 (0x0004) [0x00000001] 
};

void UUIComboBox::SetEditboxText(struct FString NewText,int PlayerIndex,bool bListItemsOnly,bool bSkipNotification)
{
	static UFieldFunc* pFnSetEditboxText = NULL;
	if(!pFnSetEditboxText)
		pFnSetEditboxText = UObject::FindFunction("Function Engine.UIComboBox.SetEditboxText");

	Engine_SetEditboxText_Parms SetEditboxText_Parms;
	memcpy(&SetEditboxText_Parms.NewText,&NewText,0xC);
	SetEditboxText_Parms.PlayerIndex = PlayerIndex;
	SetEditboxText_Parms.bListItemsOnly = bListItemsOnly;
	SetEditboxText_Parms.bSkipNotification = bSkipNotification;
	ProcessEvent(pFnSetEditboxText,NULL,&SetEditboxText_Parms,NULL);
}

struct Engine_ShowListClickHandler_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIComboBox::ShowListClickHandler(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnShowListClickHandler = NULL;
	if(!pFnShowListClickHandler)
		pFnShowListClickHandler = UObject::FindFunction("Function Engine.UIComboBox.ShowListClickHandler");

	Engine_ShowListClickHandler_Parms ShowListClickHandler_Parms;
	ShowListClickHandler_Parms.EventObject = EventObject;
	ShowListClickHandler_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnShowListClickHandler,NULL,&ShowListClickHandler_Parms,NULL);
	return ShowListClickHandler_Parms.ReturnValue;
}

struct Engine_GetCalloutInputProxy_Parms
{
	unsigned long                                      bCreateIfNecessary : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	class UUIEvent_CalloutButtonInputProxy*            ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIEvent_CalloutButtonInputProxy* UUICalloutButtonPanel::GetCalloutInputProxy(bool bCreateIfNecessary)
{
	static UFieldFunc* pFnGetCalloutInputProxy = NULL;
	if(!pFnGetCalloutInputProxy)
		pFnGetCalloutInputProxy = UObject::FindFunction("Function Engine.UICalloutButtonPanel.GetCalloutInputProxy");

	Engine_GetCalloutInputProxy_Parms GetCalloutInputProxy_Parms;
	GetCalloutInputProxy_Parms.bCreateIfNecessary = bCreateIfNecessary;
	pFnGetCalloutInputProxy->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCalloutInputProxy,NULL,&GetCalloutInputProxy_Parms,NULL);
	pFnGetCalloutInputProxy->FunctionFlags |= 0x400;
	return GetCalloutInputProxy_Parms.ReturnValue;
}

struct Engine_SynchronizeInputAliases_Parms
{
	//int                                                AliasIdx;                                         		// 0x000000 (0x0004)              
};

void UUICalloutButtonPanel::SynchronizeInputAliases()
{
	static UFieldFunc* pFnSynchronizeInputAliases = NULL;
	if(!pFnSynchronizeInputAliases)
		pFnSynchronizeInputAliases = UObject::FindFunction("Function Engine.UICalloutButtonPanel.SynchronizeInputAliases");

	Engine_SynchronizeInputAliases_Parms SynchronizeInputAliases_Parms;
	ProcessEvent(pFnSynchronizeInputAliases,NULL,&SynchronizeInputAliases_Parms,NULL);
}

struct Engine_SetButtonCaption_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	struct FString                                     NewButtonCaption;                                 		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::SetButtonCaption(struct FName ButtonInputAlias,struct FString NewButtonCaption)
{
	static UFieldFunc* pFnSetButtonCaption = NULL;
	if(!pFnSetButtonCaption)
		pFnSetButtonCaption = UObject::FindFunction("Function Engine.UICalloutButtonPanel.SetButtonCaption");

	Engine_SetButtonCaption_Parms SetButtonCaption_Parms;
	memcpy(&SetButtonCaption_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	memcpy(&SetButtonCaption_Parms.NewButtonCaption,&NewButtonCaption,0xC);
	ProcessEvent(pFnSetButtonCaption,NULL,&SetButtonCaption_Parms,NULL);
	return SetButtonCaption_Parms.ReturnValue;
}

struct Engine_FindBestInsertionIndex_Parms
{
	class UUICalloutButton*                            ButtonToInsert;                                   		// 0x000000 (0x0004)              
	unsigned long                                      bSearchChildrenArray : 1;                         		// 0x000004 (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUICalloutButtonPanel::FindBestInsertionIndex(class UUICalloutButton* ButtonToInsert,bool bSearchChildrenArray)
{
	static UFieldFunc* pFnFindBestInsertionIndex = NULL;
	if(!pFnFindBestInsertionIndex)
		pFnFindBestInsertionIndex = UObject::FindFunction("Function Engine.UICalloutButtonPanel.FindBestInsertionIndex");

	Engine_FindBestInsertionIndex_Parms FindBestInsertionIndex_Parms;
	FindBestInsertionIndex_Parms.ButtonToInsert = ButtonToInsert;
	FindBestInsertionIndex_Parms.bSearchChildrenArray = bSearchChildrenArray;
	pFnFindBestInsertionIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindBestInsertionIndex,NULL,&FindBestInsertionIndex_Parms,NULL);
	pFnFindBestInsertionIndex->FunctionFlags |= 0x400;
	return FindBestInsertionIndex_Parms.ReturnValue;
}

struct Engine_RequestButtonDockingUpdate_Parms
{
	unsigned long                                      bImmediately : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void UUICalloutButtonPanel::RequestButtonDockingUpdate(bool bImmediately)
{
	static UFieldFunc* pFnRequestButtonDockingUpdate = NULL;
	if(!pFnRequestButtonDockingUpdate)
		pFnRequestButtonDockingUpdate = UObject::FindFunction("Function Engine.UICalloutButtonPanel.RequestButtonDockingUpdate");

	Engine_RequestButtonDockingUpdate_Parms RequestButtonDockingUpdate_Parms;
	RequestButtonDockingUpdate_Parms.bImmediately = bImmediately;
	pFnRequestButtonDockingUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestButtonDockingUpdate,NULL,&RequestButtonDockingUpdate_Parms,NULL);
	pFnRequestButtonDockingUpdate->FunctionFlags |= 0x400;
}

struct Engine_EnableButton_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      bEnableButton : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bUpdateButtonVisibility : 1;                      		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x000018 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::EnableButton(struct FName ButtonInputAlias,int PlayerIndex,bool bEnableButton,bool bUpdateButtonVisibility)
{
	static UFieldFunc* pFnEnableButton = NULL;
	if(!pFnEnableButton)
		pFnEnableButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.EnableButton");

	Engine_EnableButton_Parms EnableButton_Parms;
	memcpy(&EnableButton_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	EnableButton_Parms.PlayerIndex = PlayerIndex;
	EnableButton_Parms.bEnableButton = bEnableButton;
	EnableButton_Parms.bUpdateButtonVisibility = bUpdateButtonVisibility;
	ProcessEvent(pFnEnableButton,NULL,&EnableButton_Parms,NULL);
	return EnableButton_Parms.ReturnValue;
}

struct Engine_CreateCalloutButton_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	struct FName                                       ButtonName;                                       		// 0x000008 (0x0008)              
	unsigned long                                      bInsertChild : 1;                                 		// 0x000010 (0x0004) [0x00000001] 
	class UUICalloutButton*                            ReturnValue;                                      		// 0x000014 (0x0004)              
};

class UUICalloutButton* UUICalloutButtonPanel::CreateCalloutButton(struct FName ButtonInputAlias,struct FName ButtonName,bool bInsertChild)
{
	static UFieldFunc* pFnCreateCalloutButton = NULL;
	if(!pFnCreateCalloutButton)
		pFnCreateCalloutButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.CreateCalloutButton");

	Engine_CreateCalloutButton_Parms CreateCalloutButton_Parms;
	memcpy(&CreateCalloutButton_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	memcpy(&CreateCalloutButton_Parms.ButtonName,&ButtonName,0x8);
	CreateCalloutButton_Parms.bInsertChild = bInsertChild;
	pFnCreateCalloutButton->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateCalloutButton,NULL,&CreateCalloutButton_Parms,NULL);
	pFnCreateCalloutButton->FunctionFlags |= 0x400;
	return CreateCalloutButton_Parms.ReturnValue;
}

struct Engine_SetButtonInputAlias_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	struct FName                                       NewButtonInputAlias;                              		// 0x000008 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x000014 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::SetButtonInputAlias(struct FName ButtonInputAlias,struct FName NewButtonInputAlias)
{
	static UFieldFunc* pFnSetButtonInputAlias = NULL;
	if(!pFnSetButtonInputAlias)
		pFnSetButtonInputAlias = UObject::FindFunction("Function Engine.UICalloutButtonPanel.SetButtonInputAlias");

	Engine_SetButtonInputAlias_Parms SetButtonInputAlias_Parms;
	memcpy(&SetButtonInputAlias_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	memcpy(&SetButtonInputAlias_Parms.NewButtonInputAlias,&NewButtonInputAlias,0x8);
	ProcessEvent(pFnSetButtonInputAlias,NULL,&SetButtonInputAlias_Parms,NULL);
	return SetButtonInputAlias_Parms.ReturnValue;
}

struct Engine_InitializeInputProxy_Parms
{
	//class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x000000 (0x0004)              
	//int                                                ButtonIdx;                                        		// 0x000004 (0x0004)              
};

void UUICalloutButtonPanel::InitializeInputProxy()
{
	static UFieldFunc* pFnInitializeInputProxy = NULL;
	if(!pFnInitializeInputProxy)
		pFnInitializeInputProxy = UObject::FindFunction("Function Engine.UICalloutButtonPanel.InitializeInputProxy");

	Engine_InitializeInputProxy_Parms InitializeInputProxy_Parms;
	ProcessEvent(pFnInitializeInputProxy,NULL,&InitializeInputProxy_Parms,NULL);
}

struct Engine_RemovedFromParent_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	//class UUISequence*                                 ProxyParentSequence;                              		// 0x000004 (0x0004)              
	//class UUIEvent_CalloutButtonInputProxy*            InputProxy;                                       		// 0x000008 (0x0004)              
	//int                                                ButtonIdx;                                        		// 0x00000C (0x0004)              
};

void UUICalloutButtonPanel::RemovedFromParent(class UUIScreenObject* WidgetOwner)
{
	static UFieldFunc* pFnRemovedFromParent = NULL;
	if(!pFnRemovedFromParent)
		pFnRemovedFromParent = UObject::FindFunction("Function Engine.UICalloutButtonPanel.RemovedFromParent");

	Engine_RemovedFromParent_Parms RemovedFromParent_Parms;
	RemovedFromParent_Parms.WidgetOwner = WidgetOwner;
	ProcessEvent(pFnRemovedFromParent,NULL,&RemovedFromParent_Parms,NULL);
}

struct Engine_InsertButton_Parms
{
	class UUICalloutButton*                            NewButton;                                        		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                Result;                                           		// 0x000008 (0x0004)              
	//int                                                InsertIndex;                                      		// 0x00000C (0x0004)              
};

int UUICalloutButtonPanel::InsertButton(class UUICalloutButton* NewButton)
{
	static UFieldFunc* pFnInsertButton = NULL;
	if(!pFnInsertButton)
		pFnInsertButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.InsertButton");

	Engine_InsertButton_Parms InsertButton_Parms;
	InsertButton_Parms.NewButton = NewButton;
	ProcessEvent(pFnInsertButton,NULL,&InsertButton_Parms,NULL);
	return InsertButton_Parms.ReturnValue;
}

struct Engine_FindButton_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	class UUICalloutButton*                            ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                ButtonIdx;                                        		// 0x00000C (0x0004)              
	//class UUICalloutButton*                            Result;                                           		// 0x000010 (0x0004)              
};

class UUICalloutButton* UUICalloutButtonPanel::FindButton(struct FName ButtonInputAlias)
{
	static UFieldFunc* pFnFindButton = NULL;
	if(!pFnFindButton)
		pFnFindButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.FindButton");

	Engine_FindButton_Parms FindButton_Parms;
	memcpy(&FindButton_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	ProcessEvent(pFnFindButton,NULL,&FindButton_Parms,NULL);
	return FindButton_Parms.ReturnValue;
}

struct Engine_PostInitialize_Parms
{
};

void UUICalloutButtonPanel::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UICalloutButtonPanel.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_AddedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
	//class UUICalloutButton*                            ChildButton;                                      		// 0x000008 (0x0004)              
	//int                                                InsertIndex;                                      		// 0x00000C (0x0004)              
};

void UUICalloutButtonPanel::AddedChild(class UUIScreenObject* WidgetOwner,class UUIObject* NewChild)
{
	static UFieldFunc* pFnAddedChild = NULL;
	if(!pFnAddedChild)
		pFnAddedChild = UObject::FindFunction("Function Engine.UICalloutButtonPanel.AddedChild");

	Engine_AddedChild_Parms AddedChild_Parms;
	AddedChild_Parms.WidgetOwner = WidgetOwner;
	AddedChild_Parms.NewChild = NewChild;
	ProcessEvent(pFnAddedChild,NULL,&AddedChild_Parms,NULL);
}

struct Engine_FindButtonIndex_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                ButtonIdx;                                        		// 0x00000C (0x0004)              
	//int                                                Result;                                           		// 0x000010 (0x0004)              
};

int UUICalloutButtonPanel::FindButtonIndex(struct FName ButtonInputAlias)
{
	static UFieldFunc* pFnFindButtonIndex = NULL;
	if(!pFnFindButtonIndex)
		pFnFindButtonIndex = UObject::FindFunction("Function Engine.UICalloutButtonPanel.FindButtonIndex");

	Engine_FindButtonIndex_Parms FindButtonIndex_Parms;
	memcpy(&FindButtonIndex_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	ProcessEvent(pFnFindButtonIndex,NULL,&FindButtonIndex_Parms,NULL);
	return FindButtonIndex_Parms.ReturnValue;
}

struct Engine_PopulateCalloutButtonArray_Parms
{
	//int                                                ButtonIdx;                                        		// 0x000000 (0x0004)              
	//int                                                AliasIdx;                                         		// 0x000004 (0x0004)              
	//class UUICalloutButton*                            ChildButton;                                      		// 0x000008 (0x0004)              
	//TArray<class UUICalloutButton*>                    TempArray;                                        		// 0x00000C (0x000C)              
	//unsigned long                                      bCreateButton : 1;                                		// 0x000018 (0x0004) [0x00000001] 
};

void UUICalloutButtonPanel::PopulateCalloutButtonArray()
{
	static UFieldFunc* pFnPopulateCalloutButtonArray = NULL;
	if(!pFnPopulateCalloutButtonArray)
		pFnPopulateCalloutButtonArray = UObject::FindFunction("Function Engine.UICalloutButtonPanel.PopulateCalloutButtonArray");

	Engine_PopulateCalloutButtonArray_Parms PopulateCalloutButtonArray_Parms;
	ProcessEvent(pFnPopulateCalloutButtonArray,NULL,&PopulateCalloutButtonArray_Parms,NULL);
}

struct Engine_ConfigureChildButton_Parms
{
	class UUICalloutButton*                            ChildButton;                                      		// 0x000000 (0x0004)              
};

void UUICalloutButtonPanel::ConfigureChildButton(class UUICalloutButton* ChildButton)
{
	static UFieldFunc* pFnConfigureChildButton = NULL;
	if(!pFnConfigureChildButton)
		pFnConfigureChildButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.ConfigureChildButton");

	Engine_ConfigureChildButton_Parms ConfigureChildButton_Parms;
	ConfigureChildButton_Parms.ChildButton = ChildButton;
	ProcessEvent(pFnConfigureChildButton,NULL,&ConfigureChildButton_Parms,NULL);
}

struct Engine_ContainsButton_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x00000C (0x0004)              
};

bool UUICalloutButtonPanel::ContainsButton(struct FName ButtonInputAlias)
{
	static UFieldFunc* pFnContainsButton = NULL;
	if(!pFnContainsButton)
		pFnContainsButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.ContainsButton");

	Engine_ContainsButton_Parms ContainsButton_Parms;
	memcpy(&ContainsButton_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	ProcessEvent(pFnContainsButton,NULL,&ContainsButton_Parms,NULL);
	return ContainsButton_Parms.ReturnValue;
}

struct Engine_RemoveButtonByAlias_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x00000C (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::RemoveButtonByAlias(struct FName ButtonInputAlias)
{
	static UFieldFunc* pFnRemoveButtonByAlias = NULL;
	if(!pFnRemoveButtonByAlias)
		pFnRemoveButtonByAlias = UObject::FindFunction("Function Engine.UICalloutButtonPanel.RemoveButtonByAlias");

	Engine_RemoveButtonByAlias_Parms RemoveButtonByAlias_Parms;
	memcpy(&RemoveButtonByAlias_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	ProcessEvent(pFnRemoveButtonByAlias,NULL,&RemoveButtonByAlias_Parms,NULL);
	return RemoveButtonByAlias_Parms.ReturnValue;
}

struct Engine_SetButtonCallback_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	struct FScriptDelegate                             NewClickHandler;                                  		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x000018 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::SetButtonCallback(struct FName ButtonInputAlias,struct FScriptDelegate NewClickHandler)
{
	static UFieldFunc* pFnSetButtonCallback = NULL;
	if(!pFnSetButtonCallback)
		pFnSetButtonCallback = UObject::FindFunction("Function Engine.UICalloutButtonPanel.SetButtonCallback");

	Engine_SetButtonCallback_Parms SetButtonCallback_Parms;
	memcpy(&SetButtonCallback_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	memcpy(&SetButtonCallback_Parms.NewClickHandler,&NewClickHandler,0xC);
	ProcessEvent(pFnSetButtonCallback,NULL,&SetButtonCallback_Parms,NULL);
	return SetButtonCallback_Parms.ReturnValue;
}

struct Engine_CanButtonAcceptFocus_Parms
{
	struct FName                                       InputAliasTag;                                    		// 0x000000 (0x0008)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x000014 (0x0004)              
};

bool UUICalloutButtonPanel::CanButtonAcceptFocus(struct FName InputAliasTag,int PlayerIndex)
{
	static UFieldFunc* pFnCanButtonAcceptFocus = NULL;
	if(!pFnCanButtonAcceptFocus)
		pFnCanButtonAcceptFocus = UObject::FindFunction("Function Engine.UICalloutButtonPanel.CanButtonAcceptFocus");

	Engine_CanButtonAcceptFocus_Parms CanButtonAcceptFocus_Parms;
	memcpy(&CanButtonAcceptFocus_Parms.InputAliasTag,&InputAliasTag,0x8);
	CanButtonAcceptFocus_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnCanButtonAcceptFocus,NULL,&CanButtonAcceptFocus_Parms,NULL);
	return CanButtonAcceptFocus_Parms.ReturnValue;
}

struct Engine_GetAvailableCalloutButtonAliases_Parms
{
	TArray<struct FName>                               AvailableAliases;                                 		// 0x000000 (0x000C)              
	class ULocalPlayer*                                PlayerOwner;                                      		// 0x00000C (0x0004)              
};

void UUICalloutButtonPanel::GetAvailableCalloutButtonAliases(TArray<struct FName>* AvailableAliases,class ULocalPlayer* PlayerOwner)
{
	static UFieldFunc* pFnGetAvailableCalloutButtonAliases = NULL;
	if(!pFnGetAvailableCalloutButtonAliases)
		pFnGetAvailableCalloutButtonAliases = UObject::FindFunction("Function Engine.UICalloutButtonPanel.GetAvailableCalloutButtonAliases");

	Engine_GetAvailableCalloutButtonAliases_Parms GetAvailableCalloutButtonAliases_Parms;
	GetAvailableCalloutButtonAliases_Parms.PlayerOwner = PlayerOwner;
	pFnGetAvailableCalloutButtonAliases->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAvailableCalloutButtonAliases,NULL,&GetAvailableCalloutButtonAliases_Parms,NULL);
	pFnGetAvailableCalloutButtonAliases->FunctionFlags |= 0x400;
	if(AvailableAliases)
		memcpy(AvailableAliases,&GetAvailableCalloutButtonAliases_Parms.AvailableAliases,0xC);
}

struct Engine_ShowButton_Parms
{
	struct FName                                       ButtonInputAlias;                                 		// 0x000000 (0x0008)              
	unsigned long                                      bShowButton : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//class UUICalloutButton*                            TargetButton;                                     		// 0x000010 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
	//unsigned long                                      bVisible : 1;                                     		// 0x000018 (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::ShowButton(struct FName ButtonInputAlias,bool bShowButton)
{
	static UFieldFunc* pFnShowButton = NULL;
	if(!pFnShowButton)
		pFnShowButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.ShowButton");

	Engine_ShowButton_Parms ShowButton_Parms;
	memcpy(&ShowButton_Parms.ButtonInputAlias,&ButtonInputAlias,0x8);
	ShowButton_Parms.bShowButton = bShowButton;
	ProcessEvent(pFnShowButton,NULL,&ShowButton_Parms,NULL);
	return ShowButton_Parms.ReturnValue;
}

struct Engine_RemovedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   OldChild;                                         		// 0x000004 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000008 (0x000C)              
	//class UUICalloutButton*                            ChildButton;                                      		// 0x000014 (0x0004)              
};

void UUICalloutButtonPanel::RemovedChild(class UUIScreenObject* WidgetOwner,class UUIObject* OldChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemovedChild = NULL;
	if(!pFnRemovedChild)
		pFnRemovedChild = UObject::FindFunction("Function Engine.UICalloutButtonPanel.RemovedChild");

	Engine_RemovedChild_Parms RemovedChild_Parms;
	RemovedChild_Parms.WidgetOwner = WidgetOwner;
	RemovedChild_Parms.OldChild = OldChild;
	memcpy(&RemovedChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	ProcessEvent(pFnRemovedChild,NULL,&RemovedChild_Parms,NULL);
}

struct Engine_RemoveButton_Parms
{
	class UUICalloutButton*                            ButtonToRemove;                                   		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

bool UUICalloutButtonPanel::RemoveButton(class UUICalloutButton* ButtonToRemove)
{
	static UFieldFunc* pFnRemoveButton = NULL;
	if(!pFnRemoveButton)
		pFnRemoveButton = UObject::FindFunction("Function Engine.UICalloutButtonPanel.RemoveButton");

	Engine_RemoveButton_Parms RemoveButton_Parms;
	RemoveButton_Parms.ButtonToRemove = ButtonToRemove;
	ProcessEvent(pFnRemoveButton,NULL,&RemoveButton_Parms,NULL);
	return RemoveButton_Parms.ReturnValue;
}

struct Engine_SetBackgroundImage_Parms
{
	unsigned char                                      ImageToSet;                                       		// 0x000000 (0x0001)              
	class USurface*                                    NewImage;                                         		// 0x000004 (0x0004)              
};

void UUIFrameBox::SetBackgroundImage(unsigned char ImageToSet,class USurface* NewImage)
{
	static UFieldFunc* pFnSetBackgroundImage = NULL;
	if(!pFnSetBackgroundImage)
		pFnSetBackgroundImage = UObject::FindFunction("Function Engine.UIFrameBox.SetBackgroundImage");

	Engine_SetBackgroundImage_Parms SetBackgroundImage_Parms;
	SetBackgroundImage_Parms.ImageToSet = ImageToSet;
	SetBackgroundImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetBackgroundImage,NULL,&SetBackgroundImage_Parms,NULL);
}

struct Engine_OnSetImage_Parms
{
	class UcUIAction_SetImage*                         Action;                                           		// 0x000000 (0x0004)              
};

void UUIPanel::OnSetImage(class UcUIAction_SetImage* Action)
{
	static UFieldFunc* pFnOnSetImage = NULL;
	if(!pFnOnSetImage)
		pFnOnSetImage = UObject::FindFunction("Function Engine.UIPanel.OnSetImage");

	Engine_OnSetImage_Parms OnSetImage_Parms;
	OnSetImage_Parms.Action = Action;
	ProcessEvent(pFnOnSetImage,NULL,&OnSetImage_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIPanel::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIPanel.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetBackgroundImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIPanel::SetBackgroundImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetBackgroundImage = NULL;
	if(!pFnSetBackgroundImage)
		pFnSetBackgroundImage = UObject::FindFunction("Function Engine.UIPanel.SetBackgroundImage");

	Engine_SetBackgroundImage_Parms SetBackgroundImage_Parms;
	SetBackgroundImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetBackgroundImage,NULL,&SetBackgroundImage_Parms,NULL);
}

struct Engine_GetClientRegionSizeVector_Parms
{
	FVector2                                           ReturnValue;                                      		// 0x000000 (0x0008)              
};

FVector2 UUIScrollFrame::GetClientRegionSizeVector()
{
	static UFieldFunc* pFnGetClientRegionSizeVector = NULL;
	if(!pFnGetClientRegionSizeVector)
		pFnGetClientRegionSizeVector = UObject::FindFunction("Function Engine.UIScrollFrame.GetClientRegionSizeVector");

	Engine_GetClientRegionSizeVector_Parms GetClientRegionSizeVector_Parms;
	pFnGetClientRegionSizeVector->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClientRegionSizeVector,NULL,&GetClientRegionSizeVector_Parms,NULL);
	pFnGetClientRegionSizeVector->FunctionFlags |= 0x400;
	return GetClientRegionSizeVector_Parms.ReturnValue;
}

struct Engine_SetClientRegionPositionVector_Parms
{
	FVector2                                           NewPosition;                                      		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScrollFrame::SetClientRegionPositionVector(FVector2 NewPosition)
{
	static UFieldFunc* pFnSetClientRegionPositionVector = NULL;
	if(!pFnSetClientRegionPositionVector)
		pFnSetClientRegionPositionVector = UObject::FindFunction("Function Engine.UIScrollFrame.SetClientRegionPositionVector");

	Engine_SetClientRegionPositionVector_Parms SetClientRegionPositionVector_Parms;
	memcpy(&SetClientRegionPositionVector_Parms.NewPosition,&NewPosition,0x8);
	pFnSetClientRegionPositionVector->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClientRegionPositionVector,NULL,&SetClientRegionPositionVector_Parms,NULL);
	pFnSetClientRegionPositionVector->FunctionFlags |= 0x400;
	return SetClientRegionPositionVector_Parms.ReturnValue;
}

struct Engine_RemovedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   OldChild;                                         		// 0x000004 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000008 (0x000C)              
};

void UUIScrollFrame::RemovedChild(class UUIScreenObject* WidgetOwner,class UUIObject* OldChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemovedChild = NULL;
	if(!pFnRemovedChild)
		pFnRemovedChild = UObject::FindFunction("Function Engine.UIScrollFrame.RemovedChild");

	Engine_RemovedChild_Parms RemovedChild_Parms;
	RemovedChild_Parms.WidgetOwner = WidgetOwner;
	RemovedChild_Parms.OldChild = OldChild;
	memcpy(&RemovedChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	ProcessEvent(pFnRemovedChild,NULL,&RemovedChild_Parms,NULL);
}

struct Engine_GetVisibleRegionPercentage_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIScrollFrame::GetVisibleRegionPercentage(unsigned char Orientation)
{
	static UFieldFunc* pFnGetVisibleRegionPercentage = NULL;
	if(!pFnGetVisibleRegionPercentage)
		pFnGetVisibleRegionPercentage = UObject::FindFunction("Function Engine.UIScrollFrame.GetVisibleRegionPercentage");

	Engine_GetVisibleRegionPercentage_Parms GetVisibleRegionPercentage_Parms;
	GetVisibleRegionPercentage_Parms.Orientation = Orientation;
	pFnGetVisibleRegionPercentage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetVisibleRegionPercentage,NULL,&GetVisibleRegionPercentage_Parms,NULL);
	pFnGetVisibleRegionPercentage->FunctionFlags |= 0x400;
	return GetVisibleRegionPercentage_Parms.ReturnValue;
}

struct Engine_SetClientRegionPosition_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              NewPosition;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScrollFrame::SetClientRegionPosition(unsigned char Orientation,float NewPosition)
{
	static UFieldFunc* pFnSetClientRegionPosition = NULL;
	if(!pFnSetClientRegionPosition)
		pFnSetClientRegionPosition = UObject::FindFunction("Function Engine.UIScrollFrame.SetClientRegionPosition");

	Engine_SetClientRegionPosition_Parms SetClientRegionPosition_Parms;
	SetClientRegionPosition_Parms.Orientation = Orientation;
	SetClientRegionPosition_Parms.NewPosition = NewPosition;
	pFnSetClientRegionPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetClientRegionPosition,NULL,&SetClientRegionPosition_Parms,NULL);
	pFnSetClientRegionPosition->FunctionFlags |= 0x400;
	return SetClientRegionPosition_Parms.ReturnValue;
}

struct Engine_RefreshScrollbars_Parms
{
	unsigned long                                      bImmediately : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScrollFrame::RefreshScrollbars(bool bImmediately)
{
	static UFieldFunc* pFnRefreshScrollbars = NULL;
	if(!pFnRefreshScrollbars)
		pFnRefreshScrollbars = UObject::FindFunction("Function Engine.UIScrollFrame.RefreshScrollbars");

	Engine_RefreshScrollbars_Parms RefreshScrollbars_Parms;
	RefreshScrollbars_Parms.bImmediately = bImmediately;
	pFnRefreshScrollbars->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshScrollbars,NULL,&RefreshScrollbars_Parms,NULL);
	pFnRefreshScrollbars->FunctionFlags |= 0x400;
}

struct Engine_GetClipRegion_Parms
{
	float                                              MinX;                                             		// 0x000000 (0x0004)              
	float                                              MinY;                                             		// 0x000004 (0x0004)              
	float                                              MaxX;                                             		// 0x000008 (0x0004)              
	float                                              MaxY;                                             		// 0x00000C (0x0004)              
};

void UUIScrollFrame::GetClipRegion(float* MinX,float* MinY,float* MaxX,float* MaxY)
{
	static UFieldFunc* pFnGetClipRegion = NULL;
	if(!pFnGetClipRegion)
		pFnGetClipRegion = UObject::FindFunction("Function Engine.UIScrollFrame.GetClipRegion");

	Engine_GetClipRegion_Parms GetClipRegion_Parms;
	pFnGetClipRegion->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClipRegion,NULL,&GetClipRegion_Parms,NULL);
	pFnGetClipRegion->FunctionFlags |= 0x400;
	if(MinX)
		*MinX = GetClipRegion_Parms.MinX;
	if(MinY)
		*MinY = GetClipRegion_Parms.MinY;
	if(MaxX)
		*MaxX = GetClipRegion_Parms.MaxX;
	if(MaxY)
		*MaxY = GetClipRegion_Parms.MaxY;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScrollFrame::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIScrollFrame.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_AddedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
};

void UUIScrollFrame::AddedChild(class UUIScreenObject* WidgetOwner,class UUIObject* NewChild)
{
	static UFieldFunc* pFnAddedChild = NULL;
	if(!pFnAddedChild)
		pFnAddedChild = UObject::FindFunction("Function Engine.UIScrollFrame.AddedChild");

	Engine_AddedChild_Parms AddedChild_Parms;
	AddedChild_Parms.WidgetOwner = WidgetOwner;
	AddedChild_Parms.NewChild = NewChild;
	ProcessEvent(pFnAddedChild,NULL,&AddedChild_Parms,NULL);
}

struct Engine_ScrollZoneClicked_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionPerc;                                     		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	//float                                              MarkerPosition;                                   		// 0x00000C (0x0004)              
	//float                                              TargetValue;                                      		// 0x000010 (0x0004)              
	//float                                              VisibleRegionPosition[0x4];                       		// 0x000014 (0x0010)              
	//float                                              VisibleRegionSize;                                		// 0x000024 (0x0004)              
};

void UUIScrollFrame::ScrollZoneClicked(class UUIScrollbar* Sender,float PositionPerc,int PlayerIndex)
{
	static UFieldFunc* pFnScrollZoneClicked = NULL;
	if(!pFnScrollZoneClicked)
		pFnScrollZoneClicked = UObject::FindFunction("Function Engine.UIScrollFrame.ScrollZoneClicked");

	Engine_ScrollZoneClicked_Parms ScrollZoneClicked_Parms;
	ScrollZoneClicked_Parms.Sender = Sender;
	ScrollZoneClicked_Parms.PositionPerc = PositionPerc;
	ScrollZoneClicked_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnScrollZoneClicked,NULL,&ScrollZoneClicked_Parms,NULL);
}

struct Engine_OnApplyScrolling_Parms
{
	class UUIAction_ApplyScrolling*                    Action;                                           		// 0x000000 (0x0004)              
	//unsigned long                                      bSuccess : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	//float                                              MarkerPosition;                                   		// 0x000008 (0x0004)              
};

void UUIScrollFrame::OnApplyScrolling(class UUIAction_ApplyScrolling* Action)
{
	static UFieldFunc* pFnOnApplyScrolling = NULL;
	if(!pFnOnApplyScrolling)
		pFnOnApplyScrolling = UObject::FindFunction("Function Engine.UIScrollFrame.OnApplyScrolling");

	Engine_OnApplyScrolling_Parms OnApplyScrolling_Parms;
	OnApplyScrolling_Parms.Action = Action;
	ProcessEvent(pFnOnApplyScrolling,NULL,&OnApplyScrolling_Parms,NULL);
}

struct Engine_ScrollRegion_Parms
{
	class UUIScrollbar*                                Sender;                                           		// 0x000000 (0x0004)              
	float                                              PositionChange;                                   		// 0x000004 (0x0004)              
	unsigned long                                      bPositionMaxed : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScrollFrame::ScrollRegion(class UUIScrollbar* Sender,float PositionChange,bool bPositionMaxed)
{
	static UFieldFunc* pFnScrollRegion = NULL;
	if(!pFnScrollRegion)
		pFnScrollRegion = UObject::FindFunction("Function Engine.UIScrollFrame.ScrollRegion");

	Engine_ScrollRegion_Parms ScrollRegion_Parms;
	ScrollRegion_Parms.Sender = Sender;
	ScrollRegion_Parms.PositionChange = PositionChange;
	ScrollRegion_Parms.bPositionMaxed = bPositionMaxed;
	pFnScrollRegion->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScrollRegion,NULL,&ScrollRegion_Parms,NULL);
	pFnScrollRegion->FunctionFlags |= 0x400;
	return ScrollRegion_Parms.ReturnValue;
}

struct Engine_ReapplyFormatting_Parms
{
	unsigned long                                      bImmediately : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScrollFrame::ReapplyFormatting(bool bImmediately)
{
	static UFieldFunc* pFnReapplyFormatting = NULL;
	if(!pFnReapplyFormatting)
		pFnReapplyFormatting = UObject::FindFunction("Function Engine.UIScrollFrame.ReapplyFormatting");

	Engine_ReapplyFormatting_Parms ReapplyFormatting_Parms;
	ReapplyFormatting_Parms.bImmediately = bImmediately;
	pFnReapplyFormatting->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReapplyFormatting,NULL,&ReapplyFormatting_Parms,NULL);
	pFnReapplyFormatting->FunctionFlags |= 0x400;
}

struct Engine_GetClientRegionPosition_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIScrollFrame::GetClientRegionPosition(unsigned char Orientation)
{
	static UFieldFunc* pFnGetClientRegionPosition = NULL;
	if(!pFnGetClientRegionPosition)
		pFnGetClientRegionPosition = UObject::FindFunction("Function Engine.UIScrollFrame.GetClientRegionPosition");

	Engine_GetClientRegionPosition_Parms GetClientRegionPosition_Parms;
	GetClientRegionPosition_Parms.Orientation = Orientation;
	pFnGetClientRegionPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClientRegionPosition,NULL,&GetClientRegionPosition_Parms,NULL);
	pFnGetClientRegionPosition->FunctionFlags |= 0x400;
	return GetClientRegionPosition_Parms.ReturnValue;
}

struct Engine_OnChildRepositioned_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
};

void UUIScrollFrame::OnChildRepositioned(class UUIScreenObject* Sender)
{
	static UFieldFunc* pFnOnChildRepositioned = NULL;
	if(!pFnOnChildRepositioned)
		pFnOnChildRepositioned = UObject::FindFunction("Function Engine.UIScrollFrame.OnChildRepositioned");

	Engine_OnChildRepositioned_Parms OnChildRepositioned_Parms;
	OnChildRepositioned_Parms.Sender = Sender;
	ProcessEvent(pFnOnChildRepositioned,NULL,&OnChildRepositioned_Parms,NULL);
}

struct Engine_GetClientRegionPositionVector_Parms
{
	FVector2                                           ReturnValue;                                      		// 0x000000 (0x0008)              
};

FVector2 UUIScrollFrame::GetClientRegionPositionVector()
{
	static UFieldFunc* pFnGetClientRegionPositionVector = NULL;
	if(!pFnGetClientRegionPositionVector)
		pFnGetClientRegionPositionVector = UObject::FindFunction("Function Engine.UIScrollFrame.GetClientRegionPositionVector");

	Engine_GetClientRegionPositionVector_Parms GetClientRegionPositionVector_Parms;
	pFnGetClientRegionPositionVector->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClientRegionPositionVector,NULL,&GetClientRegionPositionVector_Parms,NULL);
	pFnGetClientRegionPositionVector->FunctionFlags |= 0x400;
	return GetClientRegionPositionVector_Parms.ReturnValue;
}

struct Engine_GetClientRegionSize_Parms
{
	unsigned char                                      Orientation;                                      		// 0x000000 (0x0001)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIScrollFrame::GetClientRegionSize(unsigned char Orientation)
{
	static UFieldFunc* pFnGetClientRegionSize = NULL;
	if(!pFnGetClientRegionSize)
		pFnGetClientRegionSize = UObject::FindFunction("Function Engine.UIScrollFrame.GetClientRegionSize");

	Engine_GetClientRegionSize_Parms GetClientRegionSize_Parms;
	GetClientRegionSize_Parms.Orientation = Orientation;
	pFnGetClientRegionSize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetClientRegionSize,NULL,&GetClientRegionSize_Parms,NULL);
	pFnGetClientRegionSize->FunctionFlags |= 0x400;
	return GetClientRegionSize_Parms.ReturnValue;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUITabPage::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UITabPage.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_ActivatePage_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bActivate : 1;                                    		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bTakeFocus : 1;                                   		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
	//TArray<int>                                        IndicesToActivate;                                		// 0x000014 (0x000C)              
};

bool UUITabPage::ActivatePage(int PlayerIndex,bool bActivate,bool bTakeFocus)
{
	static UFieldFunc* pFnActivatePage = NULL;
	if(!pFnActivatePage)
		pFnActivatePage = UObject::FindFunction("Function Engine.UITabPage.ActivatePage");

	Engine_ActivatePage_Parms ActivatePage_Parms;
	ActivatePage_Parms.PlayerIndex = PlayerIndex;
	ActivatePage_Parms.bActivate = bActivate;
	ActivatePage_Parms.bTakeFocus = bTakeFocus;
	ProcessEvent(pFnActivatePage,NULL,&ActivatePage_Parms,NULL);
	return ActivatePage_Parms.ReturnValue;
}

struct Engine_CreateTabButton_Parms
{
	class UUITabControl*                               TabControl;                                       		// 0x000000 (0x0004)              
	class UUITabButton*                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//class UUITabButton*                                NewTabButton;                                     		// 0x000008 (0x0004)              
};

class UUITabButton* UUITabPage::CreateTabButton(class UUITabControl* TabControl)
{
	static UFieldFunc* pFnCreateTabButton = NULL;
	if(!pFnCreateTabButton)
		pFnCreateTabButton = UObject::FindFunction("Function Engine.UITabPage.CreateTabButton");

	Engine_CreateTabButton_Parms CreateTabButton_Parms;
	CreateTabButton_Parms.TabControl = TabControl;
	ProcessEvent(pFnCreateTabButton,NULL,&CreateTabButton_Parms,NULL);
	return CreateTabButton_Parms.ReturnValue;
}

struct Engine_IsActivePage_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
	//class UUITabControl*                               TCOwner;                                          		// 0x000004 (0x0004)              
};

bool UUITabPage::IsActivePage()
{
	static UFieldFunc* pFnIsActivePage = NULL;
	if(!pFnIsActivePage)
		pFnIsActivePage = UObject::FindFunction("Function Engine.UITabPage.IsActivePage");

	Engine_IsActivePage_Parms IsActivePage_Parms;
	ProcessEvent(pFnIsActivePage,NULL,&IsActivePage_Parms,NULL);
	return IsActivePage_Parms.ReturnValue;
}

struct Engine_OnActiveStateChanged_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    NewlyActiveState;                                 		// 0x000008 (0x0004)              
	class UUIState*                                    PreviouslyActiveState;                            		// 0x00000C (0x0004)              
	//TArray<int>                                        IndicesToActivate;                                		// 0x000010 (0x000C)              
	//unsigned long                                      bEnabledState : 1;                                		// 0x00001C (0x0004) [0x00000001] 
	//unsigned long                                      bDisabledState : 1;                               		// 0x000020 (0x0004) [0x00000001] 
};

void UUITabPage::OnActiveStateChanged(class UUIScreenObject* Sender,int PlayerIndex,class UUIState* NewlyActiveState,class UUIState* PreviouslyActiveState)
{
	static UFieldFunc* pFnOnActiveStateChanged = NULL;
	if(!pFnOnActiveStateChanged)
		pFnOnActiveStateChanged = UObject::FindFunction("Function Engine.UITabPage.OnActiveStateChanged");

	Engine_OnActiveStateChanged_Parms OnActiveStateChanged_Parms;
	OnActiveStateChanged_Parms.Sender = Sender;
	OnActiveStateChanged_Parms.PlayerIndex = PlayerIndex;
	OnActiveStateChanged_Parms.NewlyActiveState = NewlyActiveState;
	OnActiveStateChanged_Parms.PreviouslyActiveState = PreviouslyActiveState;
	ProcessEvent(pFnOnActiveStateChanged,NULL,&OnActiveStateChanged_Parms,NULL);
}

struct Engine_GetTabButton_Parms
{
	class UUITabControl*                               TabControl;                                       		// 0x000000 (0x0004)              
	class UUITabButton*                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUITabButton* UUITabPage::GetTabButton(class UUITabControl* TabControl)
{
	static UFieldFunc* pFnGetTabButton = NULL;
	if(!pFnGetTabButton)
		pFnGetTabButton = UObject::FindFunction("Function Engine.UITabPage.GetTabButton");

	Engine_GetTabButton_Parms GetTabButton_Parms;
	GetTabButton_Parms.TabControl = TabControl;
	ProcessEvent(pFnGetTabButton,NULL,&GetTabButton_Parms,NULL);
	return GetTabButton_Parms.ReturnValue;
}

struct Engine_LinkToTabButton_Parms
{
	class UUITabButton*                                NewButton;                                        		// 0x000000 (0x0004)              
	class UUITabControl*                               TabControl;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	//class UUIObject*                                   CurrentOwner;                                     		// 0x000010 (0x0004)              
	//class UUITabControl*                               CurrentTabControl;                                		// 0x000014 (0x0004)              
};

bool UUITabPage::LinkToTabButton(class UUITabButton* NewButton,class UUITabControl* TabControl)
{
	static UFieldFunc* pFnLinkToTabButton = NULL;
	if(!pFnLinkToTabButton)
		pFnLinkToTabButton = UObject::FindFunction("Function Engine.UITabPage.LinkToTabButton");

	Engine_LinkToTabButton_Parms LinkToTabButton_Parms;
	LinkToTabButton_Parms.NewButton = NewButton;
	LinkToTabButton_Parms.TabControl = TabControl;
	ProcessEvent(pFnLinkToTabButton,NULL,&LinkToTabButton_Parms,NULL);
	return LinkToTabButton_Parms.ReturnValue;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUITabPage::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UITabPage.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUITabPage::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UITabPage.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_GetOwnerTabControl_Parms
{
	class UUITabControl*                               ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUITabControl* UUITabPage::GetOwnerTabControl()
{
	static UFieldFunc* pFnGetOwnerTabControl = NULL;
	if(!pFnGetOwnerTabControl)
		pFnGetOwnerTabControl = UObject::FindFunction("Function Engine.UITabPage.GetOwnerTabControl");

	Engine_GetOwnerTabControl_Parms GetOwnerTabControl_Parms;
	pFnGetOwnerTabControl->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwnerTabControl,NULL,&GetOwnerTabControl_Parms,NULL);
	pFnGetOwnerTabControl->FunctionFlags |= 0x400;
	return GetOwnerTabControl_Parms.ReturnValue;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUITabPage::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UITabPage.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_CanActivatePage_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000008 (0x0004) [0x00000001] 
};

bool UUITabPage::CanActivatePage(int PlayerIndex)
{
	static UFieldFunc* pFnCanActivatePage = NULL;
	if(!pFnCanActivatePage)
		pFnCanActivatePage = UObject::FindFunction("Function Engine.UITabPage.CanActivatePage");

	Engine_CanActivatePage_Parms CanActivatePage_Parms;
	CanActivatePage_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnCanActivatePage,NULL,&CanActivatePage_Parms,NULL);
	return CanActivatePage_Parms.ReturnValue;
}

struct Engine_SetTabCaption_Parms
{
	struct FString                                     NewButtonMarkup;                                  		// 0x000000 (0x000C)              
};

void UUITabPage::SetTabCaption(struct FString NewButtonMarkup)
{
	static UFieldFunc* pFnSetTabCaption = NULL;
	if(!pFnSetTabCaption)
		pFnSetTabCaption = UObject::FindFunction("Function Engine.UITabPage.SetTabCaption");

	Engine_SetTabCaption_Parms SetTabCaption_Parms;
	memcpy(&SetTabCaption_Parms.NewButtonMarkup,&NewButtonMarkup,0xC);
	ProcessEvent(pFnSetTabCaption,NULL,&SetTabCaption_Parms,NULL);
}

struct Engine_AddedToTabControl_Parms
{
	class UUITabControl*                               TabControl;                                       		// 0x000000 (0x0004)              
};

void UUITabPage::AddedToTabControl(class UUITabControl* TabControl)
{
	static UFieldFunc* pFnAddedToTabControl = NULL;
	if(!pFnAddedToTabControl)
		pFnAddedToTabControl = UObject::FindFunction("Function Engine.UITabPage.AddedToTabControl");

	Engine_AddedToTabControl_Parms AddedToTabControl_Parms;
	AddedToTabControl_Parms.TabControl = TabControl;
	ProcessEvent(pFnAddedToTabControl,NULL,&AddedToTabControl_Parms,NULL);
}

struct Engine_RemovedFromParent_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
};

void UUITabPage::RemovedFromParent(class UUIScreenObject* WidgetOwner)
{
	static UFieldFunc* pFnRemovedFromParent = NULL;
	if(!pFnRemovedFromParent)
		pFnRemovedFromParent = UObject::FindFunction("Function Engine.UITabPage.RemovedFromParent");

	Engine_RemovedFromParent_Parms RemovedFromParent_Parms;
	RemovedFromParent_Parms.WidgetOwner = WidgetOwner;
	ProcessEvent(pFnRemovedFromParent,NULL,&RemovedFromParent_Parms,NULL);
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUITabPage::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UITabPage.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUITabPage::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UITabPage.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_SetNumericValue_Parms
{
	float                                              NewValue;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bForceRefreshString : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUINumericEditBox::SetNumericValue(float NewValue,bool bForceRefreshString)
{
	static UFieldFunc* pFnSetNumericValue = NULL;
	if(!pFnSetNumericValue)
		pFnSetNumericValue = UObject::FindFunction("Function Engine.UINumericEditBox.SetNumericValue");

	Engine_SetNumericValue_Parms SetNumericValue_Parms;
	SetNumericValue_Parms.NewValue = NewValue;
	SetNumericValue_Parms.bForceRefreshString = bForceRefreshString;
	pFnSetNumericValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNumericValue,NULL,&SetNumericValue_Parms,NULL);
	pFnSetNumericValue->FunctionFlags |= 0x400;
	return SetNumericValue_Parms.ReturnValue;
}

struct Engine_Initialized_Parms
{
	//int                                                ModifierFlags;                                    		// 0x000000 (0x0004)              
};

void UUINumericEditBox::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UINumericEditBox.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_GetNumericValue_Parms
{
	float                                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

float UUINumericEditBox::GetNumericValue()
{
	static UFieldFunc* pFnGetNumericValue = NULL;
	if(!pFnGetNumericValue)
		pFnGetNumericValue = UObject::FindFunction("Function Engine.UINumericEditBox.GetNumericValue");

	Engine_GetNumericValue_Parms GetNumericValue_Parms;
	pFnGetNumericValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumericValue,NULL,&GetNumericValue_Parms,NULL);
	pFnGetNumericValue->FunctionFlags |= 0x400;
	return GetNumericValue_Parms.ReturnValue;
}

struct Engine_DecrementValue_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUINumericEditBox::DecrementValue(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnDecrementValue = NULL;
	if(!pFnDecrementValue)
		pFnDecrementValue = UObject::FindFunction("Function Engine.UINumericEditBox.DecrementValue");

	Engine_DecrementValue_Parms DecrementValue_Parms;
	DecrementValue_Parms.Sender = Sender;
	DecrementValue_Parms.PlayerIndex = PlayerIndex;
	pFnDecrementValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDecrementValue,NULL,&DecrementValue_Parms,NULL);
	pFnDecrementValue->FunctionFlags |= 0x400;
}

struct Engine_IncrementValue_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUINumericEditBox::IncrementValue(class UUIScreenObject* Sender,int PlayerIndex)
{
	static UFieldFunc* pFnIncrementValue = NULL;
	if(!pFnIncrementValue)
		pFnIncrementValue = UObject::FindFunction("Function Engine.UINumericEditBox.IncrementValue");

	Engine_IncrementValue_Parms IncrementValue_Parms;
	IncrementValue_Parms.Sender = Sender;
	IncrementValue_Parms.PlayerIndex = PlayerIndex;
	pFnIncrementValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIncrementValue,NULL,&IncrementValue_Parms,NULL);
	pFnIncrementValue->FunctionFlags |= 0x400;
}

struct Engine_PostInitialize_Parms
{
};

void UUINumericEditBox::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UINumericEditBox.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIImage::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIImage.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIImage::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIImage.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIImage::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIImage.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIImage::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIImage.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_OnSetImage_Parms
{
	class UcUIAction_SetImage*                         Action;                                           		// 0x000000 (0x0004)              
};

void UUIImage::OnSetImage(class UcUIAction_SetImage* Action)
{
	static UFieldFunc* pFnOnSetImage = NULL;
	if(!pFnOnSetImage)
		pFnOnSetImage = UObject::FindFunction("Function Engine.UIImage.OnSetImage");

	Engine_OnSetImage_Parms OnSetImage_Parms;
	OnSetImage_Parms.Action = Action;
	ProcessEvent(pFnOnSetImage,NULL,&OnSetImage_Parms,NULL);
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIImage::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIImage.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIImage::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIImage.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIImage::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIImage.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIImage::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIImage.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIImage::SetValue(class USurface* NewImage)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UIImage.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	SetValue_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUILabel::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UILabel.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_IgnoreMarkup_Parms
{
	unsigned long                                      bShouldIgnoreMarkup : 1;                          		// 0x000000 (0x0004) [0x00000001] 
};

void UUILabel::IgnoreMarkup(bool bShouldIgnoreMarkup)
{
	static UFieldFunc* pFnIgnoreMarkup = NULL;
	if(!pFnIgnoreMarkup)
		pFnIgnoreMarkup = UObject::FindFunction("Function Engine.UILabel.IgnoreMarkup");

	Engine_IgnoreMarkup_Parms IgnoreMarkup_Parms;
	IgnoreMarkup_Parms.bShouldIgnoreMarkup = bShouldIgnoreMarkup;
	ProcessEvent(pFnIgnoreMarkup,NULL,&IgnoreMarkup_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUILabel::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UILabel.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUILabel::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UILabel.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUILabel::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UILabel.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_SetTextAlignment_Parms
{
	unsigned char                                      Horizontal;                                       		// 0x000000 (0x0001)              
	unsigned char                                      Vertical;                                         		// 0x000001 (0x0001)              
};

void UUILabel::SetTextAlignment(unsigned char Horizontal,unsigned char Vertical)
{
	static UFieldFunc* pFnSetTextAlignment = NULL;
	if(!pFnSetTextAlignment)
		pFnSetTextAlignment = UObject::FindFunction("Function Engine.UILabel.SetTextAlignment");

	Engine_SetTextAlignment_Parms SetTextAlignment_Parms;
	SetTextAlignment_Parms.Horizontal = Horizontal;
	SetTextAlignment_Parms.Vertical = Vertical;
	pFnSetTextAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTextAlignment,NULL,&SetTextAlignment_Parms,NULL);
	pFnSetTextAlignment->FunctionFlags |= 0x400;
}

struct Engine_SetArrayValue_Parms
{
	TArray<struct FString>                             ValueArray;                                       		// 0x000000 (0x000C)              
	//struct FString                                     str;                                              		// 0x00000C (0x000C)              
};

void UUILabel::SetArrayValue(TArray<struct FString> ValueArray)
{
	static UFieldFunc* pFnSetArrayValue = NULL;
	if(!pFnSetArrayValue)
		pFnSetArrayValue = UObject::FindFunction("Function Engine.UILabel.SetArrayValue");

	Engine_SetArrayValue_Parms SetArrayValue_Parms;
	memcpy(&SetArrayValue_Parms.ValueArray,&ValueArray,0xC);
	ProcessEvent(pFnSetArrayValue,NULL,&SetArrayValue_Parms,NULL);
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUILabel::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UILabel.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_OnSetLabelText_Parms
{
	class UUIAction_SetLabelText*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUILabel::OnSetLabelText(class UUIAction_SetLabelText* Action)
{
	static UFieldFunc* pFnOnSetLabelText = NULL;
	if(!pFnOnSetLabelText)
		pFnOnSetLabelText = UObject::FindFunction("Function Engine.UILabel.OnSetLabelText");

	Engine_OnSetLabelText_Parms OnSetLabelText_Parms;
	OnSetLabelText_Parms.Action = Action;
	ProcessEvent(pFnOnSetLabelText,NULL,&OnSetLabelText_Parms,NULL);
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUILabel::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UILabel.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
};

void UUILabel::SetValue(struct FString NewText)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UILabel.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.NewText,&NewText,0xC);
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
}

struct Engine_GetValue_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UUILabel::GetValue()
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UILabel.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	return GetValue_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUILabel::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UILabel.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_OnGetTextValue_Parms
{
	class UUIAction_GetTextValue*                      Action;                                           		// 0x000000 (0x0004)              
};

void UUILabel::OnGetTextValue(class UUIAction_GetTextValue* Action)
{
	static UFieldFunc* pFnOnGetTextValue = NULL;
	if(!pFnOnGetTextValue)
		pFnOnGetTextValue = UObject::FindFunction("Function Engine.UILabel.OnGetTextValue");

	Engine_OnGetTextValue_Parms OnGetTextValue_Parms;
	OnGetTextValue_Parms.Action = Action;
	ProcessEvent(pFnOnGetTextValue,NULL,&OnGetTextValue_Parms,NULL);
}

struct Engine_ActivateToolTip_Parms
{
	class UUIToolTip*                                  Sender;                                           		// 0x000000 (0x0004)              
	class UUIToolTip*                                  ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIToolTip* UUIToolTip::ActivateToolTip(class UUIToolTip* Sender)
{
	static UFieldFunc* pFnActivateToolTip = NULL;
	if(!pFnActivateToolTip)
		pFnActivateToolTip = UObject::FindFunction("Function Engine.UIToolTip.ActivateToolTip");

	Engine_ActivateToolTip_Parms ActivateToolTip_Parms;
	ActivateToolTip_Parms.Sender = Sender;
	ProcessEvent(pFnActivateToolTip,NULL,&ActivateToolTip_Parms,NULL);
	return ActivateToolTip_Parms.ReturnValue;
}

struct Engine_CanShowToolTip_Parms
{
	class UUIToolTip*                                  Sender;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIToolTip::CanShowToolTip(class UUIToolTip* Sender)
{
	static UFieldFunc* pFnCanShowToolTip = NULL;
	if(!pFnCanShowToolTip)
		pFnCanShowToolTip = UObject::FindFunction("Function Engine.UIToolTip.CanShowToolTip");

	Engine_CanShowToolTip_Parms CanShowToolTip_Parms;
	CanShowToolTip_Parms.Sender = Sender;
	ProcessEvent(pFnCanShowToolTip,NULL,&CanShowToolTip_Parms,NULL);
	return CanShowToolTip_Parms.ReturnValue;
}

struct Engine_EndTracking_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIToolTip::EndTracking()
{
	static UFieldFunc* pFnEndTracking = NULL;
	if(!pFnEndTracking)
		pFnEndTracking = UObject::FindFunction("Function Engine.UIToolTip.EndTracking");

	Engine_EndTracking_Parms EndTracking_Parms;
	pFnEndTracking->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEndTracking,NULL,&EndTracking_Parms,NULL);
	pFnEndTracking->FunctionFlags |= 0x400;
	return EndTracking_Parms.ReturnValue;
}

struct Engine_DeactivateToolTip_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIToolTip::DeactivateToolTip()
{
	static UFieldFunc* pFnDeactivateToolTip = NULL;
	if(!pFnDeactivateToolTip)
		pFnDeactivateToolTip = UObject::FindFunction("Function Engine.UIToolTip.DeactivateToolTip");

	Engine_DeactivateToolTip_Parms DeactivateToolTip_Parms;
	ProcessEvent(pFnDeactivateToolTip,NULL,&DeactivateToolTip_Parms,NULL);
	return DeactivateToolTip_Parms.ReturnValue;
}

struct Engine_UpdateToolTipPosition_Parms
{
};

void UUIToolTip::UpdateToolTipPosition()
{
	static UFieldFunc* pFnUpdateToolTipPosition = NULL;
	if(!pFnUpdateToolTipPosition)
		pFnUpdateToolTipPosition = UObject::FindFunction("Function Engine.UIToolTip.UpdateToolTipPosition");

	Engine_UpdateToolTipPosition_Parms UpdateToolTipPosition_Parms;
	pFnUpdateToolTipPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpdateToolTipPosition,NULL,&UpdateToolTipPosition_Parms,NULL);
	pFnUpdateToolTipPosition->FunctionFlags |= 0x400;
}

struct Engine_BeginTracking_Parms
{
	class UUIToolTip*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIToolTip* UUIToolTip::BeginTracking()
{
	static UFieldFunc* pFnBeginTracking = NULL;
	if(!pFnBeginTracking)
		pFnBeginTracking = UObject::FindFunction("Function Engine.UIToolTip.BeginTracking");

	Engine_BeginTracking_Parms BeginTracking_Parms;
	pFnBeginTracking->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBeginTracking,NULL,&BeginTracking_Parms,NULL);
	pFnBeginTracking->FunctionFlags |= 0x400;
	return BeginTracking_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	struct FString                                     NewText;                                          		// 0x000000 (0x000C)              
};

void UcUIBaseToolTip::SetValue(struct FString NewText)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.cUIBaseToolTip.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.NewText,&NewText,0xC);
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
}

struct Engine_GetBounds_Parms
{
	unsigned char                                      Dimension;                                        		// 0x000000 (0x0001)              
	unsigned char                                      OutputType;                                       		// 0x000001 (0x0001)              
	unsigned long                                      bIgnoreDockPadding : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float UcUIBaseToolTip::GetBounds(unsigned char Dimension,unsigned char OutputType,bool bIgnoreDockPadding)
{
	static UFieldFunc* pFnGetBounds = NULL;
	if(!pFnGetBounds)
		pFnGetBounds = UObject::FindFunction("Function Engine.cUIBaseToolTip.GetBounds");

	Engine_GetBounds_Parms GetBounds_Parms;
	GetBounds_Parms.Dimension = Dimension;
	GetBounds_Parms.OutputType = OutputType;
	GetBounds_Parms.bIgnoreDockPadding = bIgnoreDockPadding;
	pFnGetBounds->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBounds,NULL,&GetBounds_Parms,NULL);
	pFnGetBounds->FunctionFlags |= 0x400;
	return GetBounds_Parms.ReturnValue;
}

struct Engine_SetValue_Parms
{
	float                                              NewValue;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bPercentageValue : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUINumericOptionList::SetValue(float NewValue,bool bPercentageValue)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UINumericOptionList.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	SetValue_Parms.NewValue = NewValue;
	SetValue_Parms.bPercentageValue = bPercentageValue;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
	return SetValue_Parms.ReturnValue;
}

struct Engine_GetValue_Parms
{
	unsigned long                                      bPercentageValue : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUINumericOptionList::GetValue(bool bPercentageValue)
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UINumericOptionList.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	GetValue_Parms.bPercentageValue = bPercentageValue;
	pFnGetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	pFnGetValue->FunctionFlags |= 0x400;
	return GetValue_Parms.ReturnValue;
}

struct Engine_SetPrevValue_Parms
{
};

void UUIOptionList::SetPrevValue()
{
	static UFieldFunc* pFnSetPrevValue = NULL;
	if(!pFnSetPrevValue)
		pFnSetPrevValue = UObject::FindFunction("Function Engine.UIOptionList.SetPrevValue");

	Engine_SetPrevValue_Parms SetPrevValue_Parms;
	pFnSetPrevValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetPrevValue,NULL,&SetPrevValue_Parms,NULL);
	pFnSetPrevValue->FunctionFlags |= 0x400;
}

struct Engine_GetListValue_Parms
{
	int                                                ListIndex;                                        		// 0x000000 (0x0004)              
	struct FString                                     OutValue;                                         		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIOptionList::GetListValue(int ListIndex,struct FString* OutValue)
{
	static UFieldFunc* pFnGetListValue = NULL;
	if(!pFnGetListValue)
		pFnGetListValue = UObject::FindFunction("Function Engine.UIOptionList.GetListValue");

	Engine_GetListValue_Parms GetListValue_Parms;
	GetListValue_Parms.ListIndex = ListIndex;
	pFnGetListValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetListValue,NULL,&GetListValue_Parms,NULL);
	pFnGetListValue->FunctionFlags |= 0x400;
	if(OutValue)
		memcpy(OutValue,&GetListValue_Parms.OutValue,0xC);
	return GetListValue_Parms.ReturnValue;
}

struct Engine_OnSetListIndex_Parms
{
	class UUIAction_SetListIndex*                      Action;                                           		// 0x000000 (0x0004)              
	//int                                                OutputLinkIndex;                                  		// 0x000004 (0x0004)              
};

void UUIOptionList::OnSetListIndex(class UUIAction_SetListIndex* Action)
{
	static UFieldFunc* pFnOnSetListIndex = NULL;
	if(!pFnOnSetListIndex)
		pFnOnSetListIndex = UObject::FindFunction("Function Engine.UIOptionList.OnSetListIndex");

	Engine_OnSetListIndex_Parms OnSetListIndex_Parms;
	OnSetListIndex_Parms.Action = Action;
	ProcessEvent(pFnOnSetListIndex,NULL,&OnSetListIndex_Parms,NULL);
}

struct Engine_SetNextValue_Parms
{
};

void UUIOptionList::SetNextValue()
{
	static UFieldFunc* pFnSetNextValue = NULL;
	if(!pFnSetNextValue)
		pFnSetNextValue = UObject::FindFunction("Function Engine.UIOptionList.SetNextValue");

	Engine_SetNextValue_Parms SetNextValue_Parms;
	pFnSetNextValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetNextValue,NULL,&SetNextValue_Parms,NULL);
	pFnSetNextValue->FunctionFlags |= 0x400;
}

struct Engine_GetCurrentIndex_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIOptionList::GetCurrentIndex()
{
	static UFieldFunc* pFnGetCurrentIndex = NULL;
	if(!pFnGetCurrentIndex)
		pFnGetCurrentIndex = UObject::FindFunction("Function Engine.UIOptionList.GetCurrentIndex");

	Engine_GetCurrentIndex_Parms GetCurrentIndex_Parms;
	pFnGetCurrentIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCurrentIndex,NULL,&GetCurrentIndex_Parms,NULL);
	pFnGetCurrentIndex->FunctionFlags |= 0x400;
	return GetCurrentIndex_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIOptionList::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIOptionList.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetCurrentIndex_Parms
{
	int                                                NewIndex;                                         		// 0x000000 (0x0004)              
};

void UUIOptionList::SetCurrentIndex(int NewIndex)
{
	static UFieldFunc* pFnSetCurrentIndex = NULL;
	if(!pFnSetCurrentIndex)
		pFnSetCurrentIndex = UObject::FindFunction("Function Engine.UIOptionList.SetCurrentIndex");

	Engine_SetCurrentIndex_Parms SetCurrentIndex_Parms;
	SetCurrentIndex_Parms.NewIndex = NewIndex;
	pFnSetCurrentIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetCurrentIndex,NULL,&SetCurrentIndex_Parms,NULL);
	pFnSetCurrentIndex->FunctionFlags |= 0x400;
}

struct Engine_DetachFromSourcePrefab_Parms
{
};

void UUIPrefabInstance::DetachFromSourcePrefab()
{
	static UFieldFunc* pFnDetachFromSourcePrefab = NULL;
	if(!pFnDetachFromSourcePrefab)
		pFnDetachFromSourcePrefab = UObject::FindFunction("Function Engine.UIPrefabInstance.DetachFromSourcePrefab");

	Engine_DetachFromSourcePrefab_Parms DetachFromSourcePrefab_Parms;
	pFnDetachFromSourcePrefab->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDetachFromSourcePrefab,NULL,&DetachFromSourcePrefab_Parms,NULL);
	pFnDetachFromSourcePrefab->FunctionFlags |= 0x400;
}

struct Engine_OnSetProgressBarValue_Parms
{
	class UUIAction_SetProgressBarValue*               Action;                                           		// 0x000000 (0x0004)              
};

void UUIProgressBar::OnSetProgressBarValue(class UUIAction_SetProgressBarValue* Action)
{
	static UFieldFunc* pFnOnSetProgressBarValue = NULL;
	if(!pFnOnSetProgressBarValue)
		pFnOnSetProgressBarValue = UObject::FindFunction("Function Engine.UIProgressBar.OnSetProgressBarValue");

	Engine_OnSetProgressBarValue_Parms OnSetProgressBarValue_Parms;
	OnSetProgressBarValue_Parms.Action = Action;
	ProcessEvent(pFnOnSetProgressBarValue,NULL,&OnSetProgressBarValue_Parms,NULL);
}

struct Engine_SetOverlayImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIProgressBar::SetOverlayImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetOverlayImage = NULL;
	if(!pFnSetOverlayImage)
		pFnSetOverlayImage = UObject::FindFunction("Function Engine.UIProgressBar.SetOverlayImage");

	Engine_SetOverlayImage_Parms SetOverlayImage_Parms;
	SetOverlayImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetOverlayImage,NULL,&SetOverlayImage_Parms,NULL);
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUIProgressBar::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UIProgressBar.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIProgressBar::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UIProgressBar.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUIProgressBar::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UIProgressBar.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_GetValue_Parms
{
	unsigned long                                      bPercentageValue : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUIProgressBar::GetValue(bool bPercentageValue)
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UIProgressBar.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	GetValue_Parms.bPercentageValue = bPercentageValue;
	pFnGetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	pFnGetValue->FunctionFlags |= 0x400;
	return GetValue_Parms.ReturnValue;
}

struct Engine_OnGetProgressBarValue_Parms
{
	class UUIAction_GetProgressBarValue*               Action;                                           		// 0x000000 (0x0004)              
};

void UUIProgressBar::OnGetProgressBarValue(class UUIAction_GetProgressBarValue* Action)
{
	static UFieldFunc* pFnOnGetProgressBarValue = NULL;
	if(!pFnOnGetProgressBarValue)
		pFnOnGetProgressBarValue = UObject::FindFunction("Function Engine.UIProgressBar.OnGetProgressBarValue");

	Engine_OnGetProgressBarValue_Parms OnGetProgressBarValue_Parms;
	OnGetProgressBarValue_Parms.Action = Action;
	ProcessEvent(pFnOnGetProgressBarValue,NULL,&OnGetProgressBarValue_Parms,NULL);
}

struct Engine_SetFillImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIProgressBar::SetFillImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetFillImage = NULL;
	if(!pFnSetFillImage)
		pFnSetFillImage = UObject::FindFunction("Function Engine.UIProgressBar.SetFillImage");

	Engine_SetFillImage_Parms SetFillImage_Parms;
	SetFillImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetFillImage,NULL,&SetFillImage_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIProgressBar::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.UIProgressBar.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIProgressBar::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UIProgressBar.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUIProgressBar::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UIProgressBar.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_SetBackgroundImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUIProgressBar::SetBackgroundImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetBackgroundImage = NULL;
	if(!pFnSetBackgroundImage)
		pFnSetBackgroundImage = UObject::FindFunction("Function Engine.UIProgressBar.SetBackgroundImage");

	Engine_SetBackgroundImage_Parms SetBackgroundImage_Parms;
	SetBackgroundImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetBackgroundImage,NULL,&SetBackgroundImage_Parms,NULL);
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUIProgressBar::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UIProgressBar.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUIProgressBar::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UIProgressBar.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_SetValue_Parms
{
	float                                              NewValue;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bPercentageValue : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIProgressBar::SetValue(float NewValue,bool bPercentageValue)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UIProgressBar.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	SetValue_Parms.NewValue = NewValue;
	SetValue_Parms.bPercentageValue = bPercentageValue;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
	return SetValue_Parms.ReturnValue;
}

struct Engine_OnSetImage_Parms
{
	class UcUIAction_SetImage*                         Action;                                           		// 0x000000 (0x0004)              
};

void UUIProgressBar::OnSetImage(class UcUIAction_SetImage* Action)
{
	static UFieldFunc* pFnOnSetImage = NULL;
	if(!pFnOnSetImage)
		pFnOnSetImage = UObject::FindFunction("Function Engine.UIProgressBar.OnSetImage");

	Engine_OnSetImage_Parms OnSetImage_Parms;
	OnSetImage_Parms.Action = Action;
	ProcessEvent(pFnOnSetImage,NULL,&OnSetImage_Parms,NULL);
}

struct Engine_GetDataStoreBinding_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UUISlider::GetDataStoreBinding(int BindingIndex)
{
	static UFieldFunc* pFnGetDataStoreBinding = NULL;
	if(!pFnGetDataStoreBinding)
		pFnGetDataStoreBinding = UObject::FindFunction("Function Engine.UISlider.GetDataStoreBinding");

	Engine_GetDataStoreBinding_Parms GetDataStoreBinding_Parms;
	GetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnGetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDataStoreBinding,NULL,&GetDataStoreBinding_Parms,NULL);
	pFnGetDataStoreBinding->FunctionFlags |= 0x400;
	return GetDataStoreBinding_Parms.ReturnValue;
}

struct Engine_ClearBoundDataStores_Parms
{
};

void UUISlider::ClearBoundDataStores()
{
	static UFieldFunc* pFnClearBoundDataStores = NULL;
	if(!pFnClearBoundDataStores)
		pFnClearBoundDataStores = UObject::FindFunction("Function Engine.UISlider.ClearBoundDataStores");

	Engine_ClearBoundDataStores_Parms ClearBoundDataStores_Parms;
	pFnClearBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnClearBoundDataStores,NULL,&ClearBoundDataStores_Parms,NULL);
	pFnClearBoundDataStores->FunctionFlags |= 0x400;
}

struct Engine_GetValue_Parms
{
	unsigned long                                      bPercentageValue : 1;                             		// 0x000000 (0x0004) [0x00000001] 
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float UUISlider::GetValue(bool bPercentageValue)
{
	static UFieldFunc* pFnGetValue = NULL;
	if(!pFnGetValue)
		pFnGetValue = UObject::FindFunction("Function Engine.UISlider.GetValue");

	Engine_GetValue_Parms GetValue_Parms;
	GetValue_Parms.bPercentageValue = bPercentageValue;
	pFnGetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetValue,NULL,&GetValue_Parms,NULL);
	pFnGetValue->FunctionFlags |= 0x400;
	return GetValue_Parms.ReturnValue;
}

struct Engine_SetBackgroundImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUISlider::SetBackgroundImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetBackgroundImage = NULL;
	if(!pFnSetBackgroundImage)
		pFnSetBackgroundImage = UObject::FindFunction("Function Engine.UISlider.SetBackgroundImage");

	Engine_SetBackgroundImage_Parms SetBackgroundImage_Parms;
	SetBackgroundImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetBackgroundImage,NULL,&SetBackgroundImage_Parms,NULL);
}

struct Engine_SaveSubscriberValue_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUISlider::SaveSubscriberValue(TArray<class UUIDataStore*>* out_BoundDataStores,int BindingIndex)
{
	static UFieldFunc* pFnSaveSubscriberValue = NULL;
	if(!pFnSaveSubscriberValue)
		pFnSaveSubscriberValue = UObject::FindFunction("Function Engine.UISlider.SaveSubscriberValue");

	Engine_SaveSubscriberValue_Parms SaveSubscriberValue_Parms;
	SaveSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnSaveSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSubscriberValue,NULL,&SaveSubscriberValue_Parms,NULL);
	pFnSaveSubscriberValue->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&SaveSubscriberValue_Parms.out_BoundDataStores,0xC);
	return SaveSubscriberValue_Parms.ReturnValue;
}

struct Engine_OnStateChanged_Parms
{
	class UUIScreenObject*                             Sender;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	class UUIState*                                    NewlyActiveState;                                 		// 0x000008 (0x0004)              
	class UUIState*                                    PreviouslyActiveState;                            		// 0x00000C (0x0004)              
};

void UUISlider::OnStateChanged(class UUIScreenObject* Sender,int PlayerIndex,class UUIState* NewlyActiveState,class UUIState* PreviouslyActiveState)
{
	static UFieldFunc* pFnOnStateChanged = NULL;
	if(!pFnOnStateChanged)
		pFnOnStateChanged = UObject::FindFunction("Function Engine.UISlider.OnStateChanged");

	Engine_OnStateChanged_Parms OnStateChanged_Parms;
	OnStateChanged_Parms.Sender = Sender;
	OnStateChanged_Parms.PlayerIndex = PlayerIndex;
	OnStateChanged_Parms.NewlyActiveState = NewlyActiveState;
	OnStateChanged_Parms.PreviouslyActiveState = PreviouslyActiveState;
	ProcessEvent(pFnOnStateChanged,NULL,&OnStateChanged_Parms,NULL);
}

struct Engine_RefreshSubscriberValue_Parms
{
	int                                                BindingIndex;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUISlider::RefreshSubscriberValue(int BindingIndex)
{
	static UFieldFunc* pFnRefreshSubscriberValue = NULL;
	if(!pFnRefreshSubscriberValue)
		pFnRefreshSubscriberValue = UObject::FindFunction("Function Engine.UISlider.RefreshSubscriberValue");

	Engine_RefreshSubscriberValue_Parms RefreshSubscriberValue_Parms;
	RefreshSubscriberValue_Parms.BindingIndex = BindingIndex;
	pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRefreshSubscriberValue,NULL,&RefreshSubscriberValue_Parms,NULL);
	pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
	return RefreshSubscriberValue_Parms.ReturnValue;
}

struct Engine_SetBarImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUISlider::SetBarImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetBarImage = NULL;
	if(!pFnSetBarImage)
		pFnSetBarImage = UObject::FindFunction("Function Engine.UISlider.SetBarImage");

	Engine_SetBarImage_Parms SetBarImage_Parms;
	SetBarImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetBarImage,NULL,&SetBarImage_Parms,NULL);
}

struct Engine_SetDataStoreBinding_Parms
{
	struct FString                                     MarkupText;                                       		// 0x000000 (0x000C)              
	int                                                BindingIndex;                                     		// 0x00000C (0x0004)              
};

void UUISlider::SetDataStoreBinding(struct FString MarkupText,int BindingIndex)
{
	static UFieldFunc* pFnSetDataStoreBinding = NULL;
	if(!pFnSetDataStoreBinding)
		pFnSetDataStoreBinding = UObject::FindFunction("Function Engine.UISlider.SetDataStoreBinding");

	Engine_SetDataStoreBinding_Parms SetDataStoreBinding_Parms;
	memcpy(&SetDataStoreBinding_Parms.MarkupText,&MarkupText,0xC);
	SetDataStoreBinding_Parms.BindingIndex = BindingIndex;
	pFnSetDataStoreBinding->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDataStoreBinding,NULL,&SetDataStoreBinding_Parms,NULL);
	pFnSetDataStoreBinding->FunctionFlags |= 0x400;
}

struct Engine_NotifyDataStoreValueUpdated_Parms
{
	class UUIDataStore*                                SourceDataStore;                                  		// 0x000000 (0x0004)              
	unsigned long                                      bValuesInvalidated : 1;                           		// 0x000004 (0x0004) [0x00000001] 
	struct FName                                       PropertyTag;                                      		// 0x000008 (0x0008)              
	class UUIDataProvider*                             SourceProvider;                                   		// 0x000010 (0x0004)              
	int                                                ArrayIndex;                                       		// 0x000014 (0x0004)              
};

void UUISlider::NotifyDataStoreValueUpdated(class UUIDataStore* SourceDataStore,bool bValuesInvalidated,struct FName PropertyTag,class UUIDataProvider* SourceProvider,int ArrayIndex)
{
	static UFieldFunc* pFnNotifyDataStoreValueUpdated = NULL;
	if(!pFnNotifyDataStoreValueUpdated)
		pFnNotifyDataStoreValueUpdated = UObject::FindFunction("Function Engine.UISlider.NotifyDataStoreValueUpdated");

	Engine_NotifyDataStoreValueUpdated_Parms NotifyDataStoreValueUpdated_Parms;
	NotifyDataStoreValueUpdated_Parms.SourceDataStore = SourceDataStore;
	NotifyDataStoreValueUpdated_Parms.bValuesInvalidated = bValuesInvalidated;
	memcpy(&NotifyDataStoreValueUpdated_Parms.PropertyTag,&PropertyTag,0x8);
	NotifyDataStoreValueUpdated_Parms.SourceProvider = SourceProvider;
	NotifyDataStoreValueUpdated_Parms.ArrayIndex = ArrayIndex;
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyDataStoreValueUpdated,NULL,&NotifyDataStoreValueUpdated_Parms,NULL);
	pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
}

struct Engine_SetMarkerImage_Parms
{
	class USurface*                                    NewImage;                                         		// 0x000000 (0x0004)              
};

void UUISlider::SetMarkerImage(class USurface* NewImage)
{
	static UFieldFunc* pFnSetMarkerImage = NULL;
	if(!pFnSetMarkerImage)
		pFnSetMarkerImage = UObject::FindFunction("Function Engine.UISlider.SetMarkerImage");

	Engine_SetMarkerImage_Parms SetMarkerImage_Parms;
	SetMarkerImage_Parms.NewImage = NewImage;
	ProcessEvent(pFnSetMarkerImage,NULL,&SetMarkerImage_Parms,NULL);
}

struct Engine_SetValue_Parms
{
	float                                              NewValue;                                         		// 0x000000 (0x0004)              
	unsigned long                                      bPercentageValue : 1;                             		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUISlider::SetValue(float NewValue,bool bPercentageValue)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.UISlider.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	SetValue_Parms.NewValue = NewValue;
	SetValue_Parms.bPercentageValue = bPercentageValue;
	pFnSetValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
	pFnSetValue->FunctionFlags |= 0x400;
	return SetValue_Parms.ReturnValue;
}

struct Engine_GetBoundDataStores_Parms
{
	TArray<class UUIDataStore*>                        out_BoundDataStores;                              		// 0x000000 (0x000C)              
};

void UUISlider::GetBoundDataStores(TArray<class UUIDataStore*>* out_BoundDataStores)
{
	static UFieldFunc* pFnGetBoundDataStores = NULL;
	if(!pFnGetBoundDataStores)
		pFnGetBoundDataStores = UObject::FindFunction("Function Engine.UISlider.GetBoundDataStores");

	Engine_GetBoundDataStores_Parms GetBoundDataStores_Parms;
	pFnGetBoundDataStores->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetBoundDataStores,NULL,&GetBoundDataStores_Parms,NULL);
	pFnGetBoundDataStores->FunctionFlags |= 0x400;
	if(out_BoundDataStores)
		memcpy(out_BoundDataStores,&GetBoundDataStores_Parms.out_BoundDataStores,0xC);
}

struct Engine_ActivateNextPage_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bFocusPage : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bAllowWrapping : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x000014 (0x0004)              
	//int                                                NumPages;                                         		// 0x000018 (0x0004)              
	//class UUITabPage*                                  NextPage;                                         		// 0x00001C (0x0004)              
};

bool UUITabControl::ActivateNextPage(int PlayerIndex,bool bFocusPage,bool bAllowWrapping)
{
	static UFieldFunc* pFnActivateNextPage = NULL;
	if(!pFnActivateNextPage)
		pFnActivateNextPage = UObject::FindFunction("Function Engine.UITabControl.ActivateNextPage");

	Engine_ActivateNextPage_Parms ActivateNextPage_Parms;
	ActivateNextPage_Parms.PlayerIndex = PlayerIndex;
	ActivateNextPage_Parms.bFocusPage = bFocusPage;
	ActivateNextPage_Parms.bAllowWrapping = bAllowWrapping;
	ProcessEvent(pFnActivateNextPage,NULL,&ActivateNextPage_Parms,NULL);
	return ActivateNextPage_Parms.ReturnValue;
}

struct Engine_ActivateBestTab_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bFocusPage : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
	int                                                StartIndex;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x000010 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
};

bool UUITabControl::ActivateBestTab(int PlayerIndex,bool bFocusPage,int StartIndex)
{
	static UFieldFunc* pFnActivateBestTab = NULL;
	if(!pFnActivateBestTab)
		pFnActivateBestTab = UObject::FindFunction("Function Engine.UITabControl.ActivateBestTab");

	Engine_ActivateBestTab_Parms ActivateBestTab_Parms;
	ActivateBestTab_Parms.PlayerIndex = PlayerIndex;
	ActivateBestTab_Parms.bFocusPage = bFocusPage;
	ActivateBestTab_Parms.StartIndex = StartIndex;
	ProcessEvent(pFnActivateBestTab,NULL,&ActivateBestTab_Parms,NULL);
	return ActivateBestTab_Parms.ReturnValue;
}

struct Engine_OnPageRemoved_Parms
{
	class UUITabControl*                               Sender;                                           		// 0x000000 (0x0004)              
	class UUITabPage*                                  OldPage;                                          		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
};

void UUITabControl::OnPageRemoved(class UUITabControl* Sender,class UUITabPage* OldPage,int PlayerIndex)
{
	static UFieldFunc* pFnOnPageRemoved = NULL;
	if(!pFnOnPageRemoved)
		pFnOnPageRemoved = UObject::FindFunction("Function Engine.UITabControl.OnPageRemoved");

	Engine_OnPageRemoved_Parms OnPageRemoved_Parms;
	OnPageRemoved_Parms.Sender = Sender;
	OnPageRemoved_Parms.OldPage = OldPage;
	OnPageRemoved_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnPageRemoved,NULL,&OnPageRemoved_Parms,NULL);
}

struct Engine_ActivatePage_Parms
{
	class UUITabPage*                                  PageToActivate;                                   		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bFocusPage : 1;                                   		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
};

bool UUITabControl::ActivatePage(class UUITabPage* PageToActivate,int PlayerIndex,bool bFocusPage)
{
	static UFieldFunc* pFnActivatePage = NULL;
	if(!pFnActivatePage)
		pFnActivatePage = UObject::FindFunction("Function Engine.UITabControl.ActivatePage");

	Engine_ActivatePage_Parms ActivatePage_Parms;
	ActivatePage_Parms.PageToActivate = PageToActivate;
	ActivatePage_Parms.PlayerIndex = PlayerIndex;
	ActivatePage_Parms.bFocusPage = bFocusPage;
	ProcessEvent(pFnActivatePage,NULL,&ActivatePage_Parms,NULL);
	return ActivatePage_Parms.ReturnValue;
}

struct Engine_OnPageActivated_Parms
{
	class UUITabControl*                               Sender;                                           		// 0x000000 (0x0004)              
	class UUITabPage*                                  NewlyActivePage;                                  		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
};

void UUITabControl::OnPageActivated(class UUITabControl* Sender,class UUITabPage* NewlyActivePage,int PlayerIndex)
{
	static UFieldFunc* pFnOnPageActivated = NULL;
	if(!pFnOnPageActivated)
		pFnOnPageActivated = UObject::FindFunction("Function Engine.UITabControl.OnPageActivated");

	Engine_OnPageActivated_Parms OnPageActivated_Parms;
	OnPageActivated_Parms.Sender = Sender;
	OnPageActivated_Parms.NewlyActivePage = NewlyActivePage;
	OnPageActivated_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnPageActivated,NULL,&OnPageActivated_Parms,NULL);
}

struct Engine_FindPageIndexByButton_Parms
{
	class UUITabButton*                                SearchButton;                                     		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                PageIndex;                                        		// 0x000008 (0x0004)              
};

int UUITabControl::FindPageIndexByButton(class UUITabButton* SearchButton)
{
	static UFieldFunc* pFnFindPageIndexByButton = NULL;
	if(!pFnFindPageIndexByButton)
		pFnFindPageIndexByButton = UObject::FindFunction("Function Engine.UITabControl.FindPageIndexByButton");

	Engine_FindPageIndexByButton_Parms FindPageIndexByButton_Parms;
	FindPageIndexByButton_Parms.SearchButton = SearchButton;
	ProcessEvent(pFnFindPageIndexByButton,NULL,&FindPageIndexByButton_Parms,NULL);
	return FindPageIndexByButton_Parms.ReturnValue;
}

struct Engine_OnPageInserted_Parms
{
	class UUITabControl*                               Sender;                                           		// 0x000000 (0x0004)              
	class UUITabPage*                                  NewPage;                                          		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
};

void UUITabControl::OnPageInserted(class UUITabControl* Sender,class UUITabPage* NewPage,int PlayerIndex)
{
	static UFieldFunc* pFnOnPageInserted = NULL;
	if(!pFnOnPageInserted)
		pFnOnPageInserted = UObject::FindFunction("Function Engine.UITabControl.OnPageInserted");

	Engine_OnPageInserted_Parms OnPageInserted_Parms;
	OnPageInserted_Parms.Sender = Sender;
	OnPageInserted_Parms.NewPage = NewPage;
	OnPageInserted_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnOnPageInserted,NULL,&OnPageInserted_Parms,NULL);
}

struct Engine_PrivateActivatePage_Parms
{
	class UUITabPage*                                  PageToActivate;                                   		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
};

void UUITabControl::PrivateActivatePage(class UUITabPage* PageToActivate,int PlayerIndex)
{
	static UFieldFunc* pFnPrivateActivatePage = NULL;
	if(!pFnPrivateActivatePage)
		pFnPrivateActivatePage = UObject::FindFunction("Function Engine.UITabControl.PrivateActivatePage");

	Engine_PrivateActivatePage_Parms PrivateActivatePage_Parms;
	PrivateActivatePage_Parms.PageToActivate = PageToActivate;
	PrivateActivatePage_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnPrivateActivatePage,NULL,&PrivateActivatePage_Parms,NULL);
}

struct Engine_MovePageLeft_Parms
{
	int                                                PageIndex;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUITabControl::MovePageLeft(int PageIndex)
{
	static UFieldFunc* pFnMovePageLeft = NULL;
	if(!pFnMovePageLeft)
		pFnMovePageLeft = UObject::FindFunction("Function Engine.UITabControl.MovePageLeft");

	Engine_MovePageLeft_Parms MovePageLeft_Parms;
	MovePageLeft_Parms.PageIndex = PageIndex;
	pFnMovePageLeft->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMovePageLeft,NULL,&MovePageLeft_Parms,NULL);
	pFnMovePageLeft->FunctionFlags |= 0x400;
	return MovePageLeft_Parms.ReturnValue;
}

struct Engine_GetPageAtIndex_Parms
{
	int                                                PageIndex;                                        		// 0x000000 (0x0004)              
	class UUITabPage*                                  ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUITabPage* UUITabControl::GetPageAtIndex(int PageIndex)
{
	static UFieldFunc* pFnGetPageAtIndex = NULL;
	if(!pFnGetPageAtIndex)
		pFnGetPageAtIndex = UObject::FindFunction("Function Engine.UITabControl.GetPageAtIndex");

	Engine_GetPageAtIndex_Parms GetPageAtIndex_Parms;
	GetPageAtIndex_Parms.PageIndex = PageIndex;
	pFnGetPageAtIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPageAtIndex,NULL,&GetPageAtIndex_Parms,NULL);
	pFnGetPageAtIndex->FunctionFlags |= 0x400;
	return GetPageAtIndex_Parms.ReturnValue;
}

struct Engine_InsertPage_Parms
{
	class UUITabPage*                                  PageToInsert;                                     		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	int                                                InsertIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      bActivateImmediately : 1;                         		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
	//class UUITabButton*                                NewTab;                                           		// 0x000018 (0x0004)              
	//int                                                ChildInsertIndex;                                 		// 0x00001C (0x0004)              
	//int                                                EventIdx;                                         		// 0x000020 (0x0004)              
	//TArray<class UUIEvent*>                            InsertedPageEvents;                               		// 0x000024 (0x000C)              
};

bool UUITabControl::InsertPage(class UUITabPage* PageToInsert,int PlayerIndex,int InsertIndex,bool bActivateImmediately)
{
	static UFieldFunc* pFnInsertPage = NULL;
	if(!pFnInsertPage)
		pFnInsertPage = UObject::FindFunction("Function Engine.UITabControl.InsertPage");

	Engine_InsertPage_Parms InsertPage_Parms;
	InsertPage_Parms.PageToInsert = PageToInsert;
	InsertPage_Parms.PlayerIndex = PlayerIndex;
	InsertPage_Parms.InsertIndex = InsertIndex;
	InsertPage_Parms.bActivateImmediately = bActivateImmediately;
	ProcessEvent(pFnInsertPage,NULL,&InsertPage_Parms,NULL);
	return InsertPage_Parms.ReturnValue;
}

struct Engine_RequestLayoutUpdate_Parms
{
};

void UUITabControl::RequestLayoutUpdate()
{
	static UFieldFunc* pFnRequestLayoutUpdate = NULL;
	if(!pFnRequestLayoutUpdate)
		pFnRequestLayoutUpdate = UObject::FindFunction("Function Engine.UITabControl.RequestLayoutUpdate");

	Engine_RequestLayoutUpdate_Parms RequestLayoutUpdate_Parms;
	pFnRequestLayoutUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRequestLayoutUpdate,NULL,&RequestLayoutUpdate_Parms,NULL);
	pFnRequestLayoutUpdate->FunctionFlags |= 0x400;
}

struct Engine_CreateTabPage_Parms
{
	class UClass*                                      TabPageClass;                                     		// 0x000000 (0x0004)              
	class UUITabPage*                                  PagePrefab;                                       		// 0x000004 (0x0004)              
	class UUITabPage*                                  ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UUITabPage* UUITabControl::CreateTabPage(class UClass* TabPageClass,class UUITabPage* PagePrefab)
{
	static UFieldFunc* pFnCreateTabPage = NULL;
	if(!pFnCreateTabPage)
		pFnCreateTabPage = UObject::FindFunction("Function Engine.UITabControl.CreateTabPage");

	Engine_CreateTabPage_Parms CreateTabPage_Parms;
	CreateTabPage_Parms.TabPageClass = TabPageClass;
	CreateTabPage_Parms.PagePrefab = PagePrefab;
	pFnCreateTabPage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateTabPage,NULL,&CreateTabPage_Parms,NULL);
	pFnCreateTabPage->FunctionFlags |= 0x400;
	return CreateTabPage_Parms.ReturnValue;
}

struct Engine_TabButtonClicked_Parms
{
	class UUIScreenObject*                             EventObject;                                      		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	//class UUITabButton*                                ClickedButton;                                    		// 0x000008 (0x0004)              
	//class UUITabPage*                                  PageToActivate;                                   		// 0x00000C (0x0004)              
};

void UUITabControl::TabButtonClicked(class UUIScreenObject* EventObject,int PlayerIndex)
{
	static UFieldFunc* pFnTabButtonClicked = NULL;
	if(!pFnTabButtonClicked)
		pFnTabButtonClicked = UObject::FindFunction("Function Engine.UITabControl.TabButtonClicked");

	Engine_TabButtonClicked_Parms TabButtonClicked_Parms;
	TabButtonClicked_Parms.EventObject = EventObject;
	TabButtonClicked_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnTabButtonClicked,NULL,&TabButtonClicked_Parms,NULL);
}

struct Engine_FindPageIndexByCaption_Parms
{
	struct FString                                     PageCaption;                                      		// 0x000000 (0x000C)              
	unsigned long                                      bMarkupString : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
	//int                                                PageIndex;                                        		// 0x000014 (0x0004)              
	//class UUITabButton*                                btn;                                              		// 0x000018 (0x0004)              
};

int UUITabControl::FindPageIndexByCaption(struct FString PageCaption,bool bMarkupString)
{
	static UFieldFunc* pFnFindPageIndexByCaption = NULL;
	if(!pFnFindPageIndexByCaption)
		pFnFindPageIndexByCaption = UObject::FindFunction("Function Engine.UITabControl.FindPageIndexByCaption");

	Engine_FindPageIndexByCaption_Parms FindPageIndexByCaption_Parms;
	memcpy(&FindPageIndexByCaption_Parms.PageCaption,&PageCaption,0xC);
	FindPageIndexByCaption_Parms.bMarkupString = bMarkupString;
	ProcessEvent(pFnFindPageIndexByCaption,NULL,&FindPageIndexByCaption_Parms,NULL);
	return FindPageIndexByCaption_Parms.ReturnValue;
}

struct Engine_AddedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   NewChild;                                         		// 0x000004 (0x0004)              
	//class UUITabButton*                                TabButton;                                        		// 0x000008 (0x0004)              
};

void UUITabControl::AddedChild(class UUIScreenObject* WidgetOwner,class UUIObject* NewChild)
{
	static UFieldFunc* pFnAddedChild = NULL;
	if(!pFnAddedChild)
		pFnAddedChild = UObject::FindFunction("Function Engine.UITabControl.AddedChild");

	Engine_AddedChild_Parms AddedChild_Parms;
	AddedChild_Parms.WidgetOwner = WidgetOwner;
	AddedChild_Parms.NewChild = NewChild;
	ProcessEvent(pFnAddedChild,NULL,&AddedChild_Parms,NULL);
}

struct Engine_ActivatePreviousPage_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bFocusPage : 1;                                   		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bAllowWrapping : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x000014 (0x0004)              
	//int                                                NumPages;                                         		// 0x000018 (0x0004)              
	//class UUITabPage*                                  PreviousPage;                                     		// 0x00001C (0x0004)              
};

bool UUITabControl::ActivatePreviousPage(int PlayerIndex,bool bFocusPage,bool bAllowWrapping)
{
	static UFieldFunc* pFnActivatePreviousPage = NULL;
	if(!pFnActivatePreviousPage)
		pFnActivatePreviousPage = UObject::FindFunction("Function Engine.UITabControl.ActivatePreviousPage");

	Engine_ActivatePreviousPage_Parms ActivatePreviousPage_Parms;
	ActivatePreviousPage_Parms.PlayerIndex = PlayerIndex;
	ActivatePreviousPage_Parms.bFocusPage = bFocusPage;
	ActivatePreviousPage_Parms.bAllowWrapping = bAllowWrapping;
	ProcessEvent(pFnActivatePreviousPage,NULL,&ActivatePreviousPage_Parms,NULL);
	return ActivatePreviousPage_Parms.ReturnValue;
}

struct Engine_GetPageCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUITabControl::GetPageCount()
{
	static UFieldFunc* pFnGetPageCount = NULL;
	if(!pFnGetPageCount)
		pFnGetPageCount = UObject::FindFunction("Function Engine.UITabControl.GetPageCount");

	Engine_GetPageCount_Parms GetPageCount_Parms;
	pFnGetPageCount->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPageCount,NULL,&GetPageCount_Parms,NULL);
	pFnGetPageCount->FunctionFlags |= 0x400;
	return GetPageCount_Parms.ReturnValue;
}

struct Engine_FindTargetedTab_Parms
{
	int                                                PlayerIndex;                                      		// 0x000000 (0x0004)              
	class UUITabButton*                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUITabButton* UUITabControl::FindTargetedTab(int PlayerIndex)
{
	static UFieldFunc* pFnFindTargetedTab = NULL;
	if(!pFnFindTargetedTab)
		pFnFindTargetedTab = UObject::FindFunction("Function Engine.UITabControl.FindTargetedTab");

	Engine_FindTargetedTab_Parms FindTargetedTab_Parms;
	FindTargetedTab_Parms.PlayerIndex = PlayerIndex;
	pFnFindTargetedTab->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindTargetedTab,NULL,&FindTargetedTab_Parms,NULL);
	pFnFindTargetedTab->FunctionFlags |= 0x400;
	return FindTargetedTab_Parms.ReturnValue;
}

struct Engine_RemovePage_Parms
{
	class UUITabPage*                                  PageToRemove;                                     		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x000010 (0x0004)              
};

bool UUITabControl::RemovePage(class UUITabPage* PageToRemove,int PlayerIndex)
{
	static UFieldFunc* pFnRemovePage = NULL;
	if(!pFnRemovePage)
		pFnRemovePage = UObject::FindFunction("Function Engine.UITabControl.RemovePage");

	Engine_RemovePage_Parms RemovePage_Parms;
	RemovePage_Parms.PageToRemove = PageToRemove;
	RemovePage_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnRemovePage,NULL,&RemovePage_Parms,NULL);
	return RemovePage_Parms.ReturnValue;
}

struct Engine_FindPageIndexByPageRef_Parms
{
	class UUITabPage*                                  SearchPage;                                       		// 0x000000 (0x0004)              
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
	//int                                                PageIndex;                                        		// 0x000008 (0x0004)              
};

int UUITabControl::FindPageIndexByPageRef(class UUITabPage* SearchPage)
{
	static UFieldFunc* pFnFindPageIndexByPageRef = NULL;
	if(!pFnFindPageIndexByPageRef)
		pFnFindPageIndexByPageRef = UObject::FindFunction("Function Engine.UITabControl.FindPageIndexByPageRef");

	Engine_FindPageIndexByPageRef_Parms FindPageIndexByPageRef_Parms;
	FindPageIndexByPageRef_Parms.SearchPage = SearchPage;
	ProcessEvent(pFnFindPageIndexByPageRef,NULL,&FindPageIndexByPageRef_Parms,NULL);
	return FindPageIndexByPageRef_Parms.ReturnValue;
}

struct Engine_ReplacePage_Parms
{
	class UUITabPage*                                  ExistingPage;                                     		// 0x000000 (0x0004)              
	class UUITabPage*                                  NewPage;                                          		// 0x000004 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      bFocusPage : 1;                                   		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000014 (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x000018 (0x0004)              
};

bool UUITabControl::ReplacePage(class UUITabPage* ExistingPage,class UUITabPage* NewPage,int PlayerIndex,bool bFocusPage)
{
	static UFieldFunc* pFnReplacePage = NULL;
	if(!pFnReplacePage)
		pFnReplacePage = UObject::FindFunction("Function Engine.UITabControl.ReplacePage");

	Engine_ReplacePage_Parms ReplacePage_Parms;
	ReplacePage_Parms.ExistingPage = ExistingPage;
	ReplacePage_Parms.NewPage = NewPage;
	ReplacePage_Parms.PlayerIndex = PlayerIndex;
	ReplacePage_Parms.bFocusPage = bFocusPage;
	ProcessEvent(pFnReplacePage,NULL,&ReplacePage_Parms,NULL);
	return ReplacePage_Parms.ReturnValue;
}

struct Engine_PostInitialize_Parms
{
	//class UUITabButton*                                TabButton;                                        		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void UUITabControl::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UITabControl.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_MovePageRight_Parms
{
	int                                                PageIndex;                                        		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUITabControl::MovePageRight(int PageIndex)
{
	static UFieldFunc* pFnMovePageRight = NULL;
	if(!pFnMovePageRight)
		pFnMovePageRight = UObject::FindFunction("Function Engine.UITabControl.MovePageRight");

	Engine_MovePageRight_Parms MovePageRight_Parms;
	MovePageRight_Parms.PageIndex = PageIndex;
	pFnMovePageRight->FunctionFlags |= ~0x400;
	ProcessEvent(pFnMovePageRight,NULL,&MovePageRight_Parms,NULL);
	pFnMovePageRight->FunctionFlags |= 0x400;
	return MovePageRight_Parms.ReturnValue;
}

struct Engine_EnableTabPage_Parms
{
	class UUITabPage*                                  PageToEnable;                                     		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      bEnablePage : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bActivatePage : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      bFocusPage : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000018 (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x00001C (0x0004)              
};

bool UUITabControl::EnableTabPage(class UUITabPage* PageToEnable,int PlayerIndex,bool bEnablePage,bool bActivatePage,bool bFocusPage)
{
	static UFieldFunc* pFnEnableTabPage = NULL;
	if(!pFnEnableTabPage)
		pFnEnableTabPage = UObject::FindFunction("Function Engine.UITabControl.EnableTabPage");

	Engine_EnableTabPage_Parms EnableTabPage_Parms;
	EnableTabPage_Parms.PageToEnable = PageToEnable;
	EnableTabPage_Parms.PlayerIndex = PlayerIndex;
	EnableTabPage_Parms.bEnablePage = bEnablePage;
	EnableTabPage_Parms.bActivatePage = bActivatePage;
	EnableTabPage_Parms.bFocusPage = bFocusPage;
	ProcessEvent(pFnEnableTabPage,NULL,&EnableTabPage_Parms,NULL);
	return EnableTabPage_Parms.ReturnValue;
}

struct Engine_ProcessInputKey_Parms
{
	struct FInputEventParameters                       EventParms;                                       		// 0x000000 (0x0020)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000024 (0x0004) [0x00000001] 
	//struct FName                                       PrevKey;                                          		// 0x000028 (0x0008)              
	//struct FName                                       NextKey;                                          		// 0x000030 (0x0008)              
};

bool UUITabControl::ProcessInputKey(struct FInputEventParameters* EventParms)
{
	static UFieldFunc* pFnProcessInputKey = NULL;
	if(!pFnProcessInputKey)
		pFnProcessInputKey = UObject::FindFunction("Function Engine.UITabControl.ProcessInputKey");

	Engine_ProcessInputKey_Parms ProcessInputKey_Parms;
	ProcessEvent(pFnProcessInputKey,NULL,&ProcessInputKey_Parms,NULL);
	if(EventParms)
		memcpy(EventParms,&ProcessInputKey_Parms.EventParms,0x20);
	return ProcessInputKey_Parms.ReturnValue;
}

struct Engine_ActivatePageByCaption_Parms
{
	struct FString                                     PageCaption;                                      		// 0x000000 (0x000C)              
	int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
	unsigned long                                      bFocusPage : 1;                                   		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
	//int                                                PageIndex;                                        		// 0x000018 (0x0004)              
	//unsigned long                                      bResult : 1;                                      		// 0x00001C (0x0004) [0x00000001] 
};

bool UUITabControl::ActivatePageByCaption(struct FString PageCaption,int PlayerIndex,bool bFocusPage)
{
	static UFieldFunc* pFnActivatePageByCaption = NULL;
	if(!pFnActivatePageByCaption)
		pFnActivatePageByCaption = UObject::FindFunction("Function Engine.UITabControl.ActivatePageByCaption");

	Engine_ActivatePageByCaption_Parms ActivatePageByCaption_Parms;
	memcpy(&ActivatePageByCaption_Parms.PageCaption,&PageCaption,0xC);
	ActivatePageByCaption_Parms.PlayerIndex = PlayerIndex;
	ActivatePageByCaption_Parms.bFocusPage = bFocusPage;
	ProcessEvent(pFnActivatePageByCaption,NULL,&ActivatePageByCaption_Parms,NULL);
	return ActivatePageByCaption_Parms.ReturnValue;
}

struct Engine_SetInputMask_Parms
{
	unsigned char                                      NewInputMask;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	//class UGameUISceneClient*                          GameSceneClient;                                  		// 0x000008 (0x0004)              
};

void UUIScene::SetInputMask(unsigned char NewInputMask,bool bRecurse)
{
	static UFieldFunc* pFnSetInputMask = NULL;
	if(!pFnSetInputMask)
		pFnSetInputMask = UObject::FindFunction("Function Engine.UIScene.SetInputMask");

	Engine_SetInputMask_Parms SetInputMask_Parms;
	SetInputMask_Parms.NewInputMask = NewInputMask;
	SetInputMask_Parms.bRecurse = bRecurse;
	ProcessEvent(pFnSetInputMask,NULL,&SetInputMask_Parms,NULL);
}

struct Engine_SetSceneInputMode_Parms
{
	unsigned char                                      NewInputMode;                                     		// 0x000000 (0x0001)              
};

void UUIScene::SetSceneInputMode(unsigned char NewInputMode)
{
	static UFieldFunc* pFnSetSceneInputMode = NULL;
	if(!pFnSetSceneInputMode)
		pFnSetSceneInputMode = UObject::FindFunction("Function Engine.UIScene.SetSceneInputMode");

	Engine_SetSceneInputMode_Parms SetSceneInputMode_Parms;
	SetSceneInputMode_Parms.NewInputMode = NewInputMode;
	pFnSetSceneInputMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSceneInputMode,NULL,&SetSceneInputMode_Parms,NULL);
	pFnSetSceneInputMode->FunctionFlags |= 0x400;
}

struct Engine_GetDefaultToolTip_Parms
{
	class UUIToolTip*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIToolTip* UUIScene::GetDefaultToolTip()
{
	static UFieldFunc* pFnGetDefaultToolTip = NULL;
	if(!pFnGetDefaultToolTip)
		pFnGetDefaultToolTip = UObject::FindFunction("Function Engine.UIScene.GetDefaultToolTip");

	Engine_GetDefaultToolTip_Parms GetDefaultToolTip_Parms;
	pFnGetDefaultToolTip->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultToolTip,NULL,&GetDefaultToolTip_Parms,NULL);
	pFnGetDefaultToolTip->FunctionFlags |= 0x400;
	return GetDefaultToolTip_Parms.ReturnValue;
}

struct Engine_AnimEnd_Parms
{
	class UUIObject*                                   AnimTarget;                                       		// 0x000000 (0x0004)              
	int                                                AnimIndex;                                        		// 0x000004 (0x0004)              
	class UUIAnimationSeq*                             AnimSeq;                                          		// 0x000008 (0x0004)              
};

void UUIScene::AnimEnd(class UUIObject* AnimTarget,int AnimIndex,class UUIAnimationSeq* AnimSeq)
{
	static UFieldFunc* pFnAnimEnd = NULL;
	if(!pFnAnimEnd)
		pFnAnimEnd = UObject::FindFunction("Function Engine.UIScene.AnimEnd");

	Engine_AnimEnd_Parms AnimEnd_Parms;
	AnimEnd_Parms.AnimTarget = AnimTarget;
	AnimEnd_Parms.AnimIndex = AnimIndex;
	AnimEnd_Parms.AnimSeq = AnimSeq;
	ProcessEvent(pFnAnimEnd,NULL,&AnimEnd_Parms,NULL);
}

struct Engine_ForceImmediateSceneUpdate_Parms
{
};

void UUIScene::ForceImmediateSceneUpdate()
{
	static UFieldFunc* pFnForceImmediateSceneUpdate = NULL;
	if(!pFnForceImmediateSceneUpdate)
		pFnForceImmediateSceneUpdate = UObject::FindFunction("Function Engine.UIScene.ForceImmediateSceneUpdate");

	Engine_ForceImmediateSceneUpdate_Parms ForceImmediateSceneUpdate_Parms;
	pFnForceImmediateSceneUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceImmediateSceneUpdate,NULL,&ForceImmediateSceneUpdate_Parms,NULL);
	pFnForceImmediateSceneUpdate->FunctionFlags |= 0x400;
}

struct Engine_UnbindSubscribers_Parms
{
};

void UUIScene::UnbindSubscribers()
{
	static UFieldFunc* pFnUnbindSubscribers = NULL;
	if(!pFnUnbindSubscribers)
		pFnUnbindSubscribers = UObject::FindFunction("Function Engine.UIScene.UnbindSubscribers");

	Engine_UnbindSubscribers_Parms UnbindSubscribers_Parms;
	pFnUnbindSubscribers->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnbindSubscribers,NULL,&UnbindSubscribers_Parms,NULL);
	pFnUnbindSubscribers->FunctionFlags |= 0x400;
}

struct Engine_FindTickableObjectIndex_Parms
{
	class UUITickableObject*                           ObjectToFind;                                     		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIScene::FindTickableObjectIndex(class UUITickableObject* ObjectToFind)
{
	static UFieldFunc* pFnFindTickableObjectIndex = NULL;
	if(!pFnFindTickableObjectIndex)
		pFnFindTickableObjectIndex = UObject::FindFunction("Function Engine.UIScene.FindTickableObjectIndex");

	Engine_FindTickableObjectIndex_Parms FindTickableObjectIndex_Parms;
	FindTickableObjectIndex_Parms.ObjectToFind = ObjectToFind;
	pFnFindTickableObjectIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindTickableObjectIndex,NULL,&FindTickableObjectIndex_Parms,NULL);
	pFnFindTickableObjectIndex->FunctionFlags |= 0x400;
	return FindTickableObjectIndex_Parms.ReturnValue;
}

struct Engine_GetDefaultContextMenu_Parms
{
	class UUIContextMenu*                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIContextMenu* UUIScene::GetDefaultContextMenu()
{
	static UFieldFunc* pFnGetDefaultContextMenu = NULL;
	if(!pFnGetDefaultContextMenu)
		pFnGetDefaultContextMenu = UObject::FindFunction("Function Engine.UIScene.GetDefaultContextMenu");

	Engine_GetDefaultContextMenu_Parms GetDefaultContextMenu_Parms;
	pFnGetDefaultContextMenu->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetDefaultContextMenu,NULL,&GetDefaultContextMenu_Parms,NULL);
	pFnGetDefaultContextMenu->FunctionFlags |= 0x400;
	return GetDefaultContextMenu_Parms.ReturnValue;
}

struct Engine_LogRenderBounds_Parms
{
	int                                                Indent;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
};

void UUIScene::LogRenderBounds(int Indent)
{
	static UFieldFunc* pFnLogRenderBounds = NULL;
	if(!pFnLogRenderBounds)
		pFnLogRenderBounds = UObject::FindFunction("Function Engine.UIScene.LogRenderBounds");

	Engine_LogRenderBounds_Parms LogRenderBounds_Parms;
	LogRenderBounds_Parms.Indent = Indent;
	ProcessEvent(pFnLogRenderBounds,NULL,&LogRenderBounds_Parms,NULL);
}

struct Engine_CalculateInputMask_Parms
{
	//int                                                ActivePlayers;                                    		// 0x000000 (0x0004)              
	//class UGameUISceneClient*                          GameSceneClient;                                  		// 0x000004 (0x0004)              
	//unsigned char                                      NewMask;                                          		// 0x000008 (0x0001)              
	//unsigned char                                      PlayerIndex;                                      		// 0x000009 (0x0001)              
	//unsigned char                                      InputMode;                                        		// 0x00000A (0x0001)              
};

void UUIScene::CalculateInputMask()
{
	static UFieldFunc* pFnCalculateInputMask = NULL;
	if(!pFnCalculateInputMask)
		pFnCalculateInputMask = UObject::FindFunction("Function Engine.UIScene.CalculateInputMask");

	Engine_CalculateInputMask_Parms CalculateInputMask_Parms;
	ProcessEvent(pFnCalculateInputMask,NULL,&CalculateInputMask_Parms,NULL);
}

struct Engine_ResolveDataStore_Parms
{
	struct FName                                       DataStoreTag;                                     		// 0x000000 (0x0008)              
	class ULocalPlayer*                                InPlayerOwner;                                    		// 0x000008 (0x0004)              
	class UUIDataStore*                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

class UUIDataStore* UUIScene::ResolveDataStore(struct FName DataStoreTag,class ULocalPlayer* InPlayerOwner)
{
	static UFieldFunc* pFnResolveDataStore = NULL;
	if(!pFnResolveDataStore)
		pFnResolveDataStore = UObject::FindFunction("Function Engine.UIScene.ResolveDataStore");

	Engine_ResolveDataStore_Parms ResolveDataStore_Parms;
	memcpy(&ResolveDataStore_Parms.DataStoreTag,&DataStoreTag,0x8);
	ResolveDataStore_Parms.InPlayerOwner = InPlayerOwner;
	pFnResolveDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResolveDataStore,NULL,&ResolveDataStore_Parms,NULL);
	pFnResolveDataStore->FunctionFlags |= 0x400;
	return ResolveDataStore_Parms.ReturnValue;
}

struct Engine_SceneDeactivated_Parms
{
	//class UGameUISceneClient*                          GameSceneClient;                                  		// 0x000000 (0x0004)              
	//int                                                SubscriberIndex;                                  		// 0x000004 (0x0004)              
	//class UUIObject*                                   UIObj;                                            		// 0x000008 (0x0004)              
};

void UUIScene::SceneDeactivated()
{
	static UFieldFunc* pFnSceneDeactivated = NULL;
	if(!pFnSceneDeactivated)
		pFnSceneDeactivated = UObject::FindFunction("Function Engine.UIScene.SceneDeactivated");

	Engine_SceneDeactivated_Parms SceneDeactivated_Parms;
	ProcessEvent(pFnSceneDeactivated,NULL,&SceneDeactivated_Parms,NULL);
}

struct Engine_UnregisterTickableObject_Parms
{
	class UUITickableObject*                           ObjectToRemove;                                   		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScene::UnregisterTickableObject(class UUITickableObject* ObjectToRemove)
{
	static UFieldFunc* pFnUnregisterTickableObject = NULL;
	if(!pFnUnregisterTickableObject)
		pFnUnregisterTickableObject = UObject::FindFunction("Function Engine.UIScene.UnregisterTickableObject");

	Engine_UnregisterTickableObject_Parms UnregisterTickableObject_Parms;
	UnregisterTickableObject_Parms.ObjectToRemove = ObjectToRemove;
	pFnUnregisterTickableObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnregisterTickableObject,NULL,&UnregisterTickableObject_Parms,NULL);
	pFnUnregisterTickableObject->FunctionFlags |= 0x400;
	return UnregisterTickableObject_Parms.ReturnValue;
}

struct Engine_LoadSceneDataValues_Parms
{
};

void UUIScene::LoadSceneDataValues()
{
	static UFieldFunc* pFnLoadSceneDataValues = NULL;
	if(!pFnLoadSceneDataValues)
		pFnLoadSceneDataValues = UObject::FindFunction("Function Engine.UIScene.LoadSceneDataValues");

	Engine_LoadSceneDataValues_Parms LoadSceneDataValues_Parms;
	pFnLoadSceneDataValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLoadSceneDataValues,NULL,&LoadSceneDataValues_Parms,NULL);
	pFnLoadSceneDataValues->FunctionFlags |= 0x400;
}

struct Engine_RemovedChild_Parms
{
	class UUIScreenObject*                             WidgetOwner;                                      		// 0x000000 (0x0004)              
	class UUIObject*                                   OldChild;                                         		// 0x000004 (0x0004)              
	TArray<class UUIObject*>                           ExclusionSet;                                     		// 0x000008 (0x000C)              
	//class UUITickableObject*                           TickableObject;                                   		// 0x000014 (0x0008)              
};

void UUIScene::RemovedChild(class UUIScreenObject* WidgetOwner,class UUIObject* OldChild,TArray<class UUIObject*> ExclusionSet)
{
	static UFieldFunc* pFnRemovedChild = NULL;
	if(!pFnRemovedChild)
		pFnRemovedChild = UObject::FindFunction("Function Engine.UIScene.RemovedChild");

	Engine_RemovedChild_Parms RemovedChild_Parms;
	RemovedChild_Parms.WidgetOwner = WidgetOwner;
	RemovedChild_Parms.OldChild = OldChild;
	memcpy(&RemovedChild_Parms.ExclusionSet,&ExclusionSet,0xC);
	ProcessEvent(pFnRemovedChild,NULL,&RemovedChild_Parms,NULL);
}

struct Engine_RebuildDockingStack_Parms
{
};

void UUIScene::RebuildDockingStack()
{
	static UFieldFunc* pFnRebuildDockingStack = NULL;
	if(!pFnRebuildDockingStack)
		pFnRebuildDockingStack = UObject::FindFunction("Function Engine.UIScene.RebuildDockingStack");

	Engine_RebuildDockingStack_Parms RebuildDockingStack_Parms;
	pFnRebuildDockingStack->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRebuildDockingStack,NULL,&RebuildDockingStack_Parms,NULL);
	pFnRebuildDockingStack->FunctionFlags |= 0x400;
}

struct Engine_LogCurrentState_Parms
{
	int                                                Indent;                                           		// 0x000000 (0x0004)              
	//int                                                I;                                                		// 0x000004 (0x0004)              
	//class UUIState*                                    CurrentState;                                     		// 0x000008 (0x0004)              
};

void UUIScene::LogCurrentState(int Indent)
{
	static UFieldFunc* pFnLogCurrentState = NULL;
	if(!pFnLogCurrentState)
		pFnLogCurrentState = UObject::FindFunction("Function Engine.UIScene.LogCurrentState");

	Engine_LogCurrentState_Parms LogCurrentState_Parms;
	LogCurrentState_Parms.Indent = Indent;
	ProcessEvent(pFnLogCurrentState,NULL,&LogCurrentState_Parms,NULL);
}

struct Engine_SceneActivated_Parms
{
	unsigned long                                      bInitialActivation : 1;                           		// 0x000000 (0x0004) [0x00000001] 
	//int                                                EventIndex;                                       		// 0x000004 (0x0004)              
	//TArray<class UUIEvent*>                            EventList;                                        		// 0x000008 (0x000C)              
	//class UUIEvent_SceneActivated*                     SceneActivatedEvent;                              		// 0x000014 (0x0004)              
};

void UUIScene::SceneActivated(bool bInitialActivation)
{
	static UFieldFunc* pFnSceneActivated = NULL;
	if(!pFnSceneActivated)
		pFnSceneActivated = UObject::FindFunction("Function Engine.UIScene.SceneActivated");

	Engine_SceneActivated_Parms SceneActivated_Parms;
	SceneActivated_Parms.bInitialActivation = bInitialActivation;
	ProcessEvent(pFnSceneActivated,NULL,&SceneActivated_Parms,NULL);
}

struct Engine_GetPreviousScene_Parms
{
	unsigned long                                      bRequireMatchingPlayerOwner : 1;                  		// 0x000000 (0x0004) [0x00000001] 
	class UUIScene*                                    ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UUIScene* UUIScene::GetPreviousScene(bool bRequireMatchingPlayerOwner)
{
	static UFieldFunc* pFnGetPreviousScene = NULL;
	if(!pFnGetPreviousScene)
		pFnGetPreviousScene = UObject::FindFunction("Function Engine.UIScene.GetPreviousScene");

	Engine_GetPreviousScene_Parms GetPreviousScene_Parms;
	GetPreviousScene_Parms.bRequireMatchingPlayerOwner = bRequireMatchingPlayerOwner;
	pFnGetPreviousScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetPreviousScene,NULL,&GetPreviousScene_Parms,NULL);
	pFnGetPreviousScene->FunctionFlags |= 0x400;
	return GetPreviousScene_Parms.ReturnValue;
}

struct Engine_OnSceneActivated_Parms
{
	class UUIScene*                                    ActivatedScene;                                   		// 0x000000 (0x0004)              
	unsigned long                                      bInitialActivation : 1;                           		// 0x000004 (0x0004) [0x00000001] 
};

void UUIScene::OnSceneActivated(class UUIScene* ActivatedScene,bool bInitialActivation)
{
	static UFieldFunc* pFnOnSceneActivated = NULL;
	if(!pFnOnSceneActivated)
		pFnOnSceneActivated = UObject::FindFunction("Function Engine.UIScene.OnSceneActivated");

	Engine_OnSceneActivated_Parms OnSceneActivated_Parms;
	OnSceneActivated_Parms.ActivatedScene = ActivatedScene;
	OnSceneActivated_Parms.bInitialActivation = bInitialActivation;
	ProcessEvent(pFnOnSceneActivated,NULL,&OnSceneActivated_Parms,NULL);
}

struct Engine_NotifyGameSessionEnded_Parms
{
};

void UUIScene::NotifyGameSessionEnded()
{
	static UFieldFunc* pFnNotifyGameSessionEnded = NULL;
	if(!pFnNotifyGameSessionEnded)
		pFnNotifyGameSessionEnded = UObject::FindFunction("Function Engine.UIScene.NotifyGameSessionEnded");

	Engine_NotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;
	pFnNotifyGameSessionEnded->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyGameSessionEnded,NULL,&NotifyGameSessionEnded_Parms,NULL);
	pFnNotifyGameSessionEnded->FunctionFlags |= 0x400;
}

struct Engine_LogDockingStack_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//struct FString                                     Line;                                             		// 0x000004 (0x000C)              
};

void UUIScene::LogDockingStack()
{
	static UFieldFunc* pFnLogDockingStack = NULL;
	if(!pFnLogDockingStack)
		pFnLogDockingStack = UObject::FindFunction("Function Engine.UIScene.LogDockingStack");

	Engine_LogDockingStack_Parms LogDockingStack_Parms;
	ProcessEvent(pFnLogDockingStack,NULL,&LogDockingStack_Parms,NULL);
}

struct Engine_GetSceneDataStore_Parms
{
	class USceneDataStore*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class USceneDataStore* UUIScene::GetSceneDataStore()
{
	static UFieldFunc* pFnGetSceneDataStore = NULL;
	if(!pFnGetSceneDataStore)
		pFnGetSceneDataStore = UObject::FindFunction("Function Engine.UIScene.GetSceneDataStore");

	Engine_GetSceneDataStore_Parms GetSceneDataStore_Parms;
	pFnGetSceneDataStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetSceneDataStore,NULL,&GetSceneDataStore_Parms,NULL);
	pFnGetSceneDataStore->FunctionFlags |= 0x400;
	return GetSceneDataStore_Parms.ReturnValue;
}

struct Engine_SetActiveContextMenu_Parms
{
	class UUIContextMenu*                              NewContextMenu;                                   		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIScene::SetActiveContextMenu(class UUIContextMenu* NewContextMenu,int PlayerIndex)
{
	static UFieldFunc* pFnSetActiveContextMenu = NULL;
	if(!pFnSetActiveContextMenu)
		pFnSetActiveContextMenu = UObject::FindFunction("Function Engine.UIScene.SetActiveContextMenu");

	Engine_SetActiveContextMenu_Parms SetActiveContextMenu_Parms;
	SetActiveContextMenu_Parms.NewContextMenu = NewContextMenu;
	SetActiveContextMenu_Parms.PlayerIndex = PlayerIndex;
	pFnSetActiveContextMenu->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveContextMenu,NULL,&SetActiveContextMenu_Parms,NULL);
	pFnSetActiveContextMenu->FunctionFlags |= 0x400;
	return SetActiveContextMenu_Parms.ReturnValue;
}

struct Engine_NotifyOnlineServiceStatusChanged_Parms
{
	unsigned char                                      NewConnectionStatus;                              		// 0x000000 (0x0001)              
	//class UUIScene*                                    ParentScene;                                      		// 0x000004 (0x0004)              
};

void UUIScene::NotifyOnlineServiceStatusChanged(unsigned char NewConnectionStatus)
{
	static UFieldFunc* pFnNotifyOnlineServiceStatusChanged = NULL;
	if(!pFnNotifyOnlineServiceStatusChanged)
		pFnNotifyOnlineServiceStatusChanged = UObject::FindFunction("Function Engine.UIScene.NotifyOnlineServiceStatusChanged");

	Engine_NotifyOnlineServiceStatusChanged_Parms NotifyOnlineServiceStatusChanged_Parms;
	NotifyOnlineServiceStatusChanged_Parms.NewConnectionStatus = NewConnectionStatus;
	ProcessEvent(pFnNotifyOnlineServiceStatusChanged,NULL,&NotifyOnlineServiceStatusChanged_Parms,NULL);
}

struct Engine_OnSceneDeactivated_Parms
{
	class UUIScene*                                    DeactivatedScene;                                 		// 0x000000 (0x0004)              
};

void UUIScene::OnSceneDeactivated(class UUIScene* DeactivatedScene)
{
	static UFieldFunc* pFnOnSceneDeactivated = NULL;
	if(!pFnOnSceneDeactivated)
		pFnOnSceneDeactivated = UObject::FindFunction("Function Engine.UIScene.OnSceneDeactivated");

	Engine_OnSceneDeactivated_Parms OnSceneDeactivated_Parms;
	OnSceneDeactivated_Parms.DeactivatedScene = DeactivatedScene;
	ProcessEvent(pFnOnSceneDeactivated,NULL,&OnSceneDeactivated_Parms,NULL);
}

struct Engine_NotifyLinkStatusChanged_Parms
{
	unsigned long                                      bConnected : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
	//class UUIScene*                                    ParentScene;                                      		// 0x000004 (0x0004)              
};

void UUIScene::NotifyLinkStatusChanged(bool bConnected)
{
	static UFieldFunc* pFnNotifyLinkStatusChanged = NULL;
	if(!pFnNotifyLinkStatusChanged)
		pFnNotifyLinkStatusChanged = UObject::FindFunction("Function Engine.UIScene.NotifyLinkStatusChanged");

	Engine_NotifyLinkStatusChanged_Parms NotifyLinkStatusChanged_Parms;
	NotifyLinkStatusChanged_Parms.bConnected = bConnected;
	ProcessEvent(pFnNotifyLinkStatusChanged,NULL,&NotifyLinkStatusChanged_Parms,NULL);
}

struct Engine_SceneCreated_Parms
{
	class UUIScene*                                    CreatedScene;                                     		// 0x000000 (0x0004)              
};

void UUIScene::SceneCreated(class UUIScene* CreatedScene)
{
	static UFieldFunc* pFnSceneCreated = NULL;
	if(!pFnSceneCreated)
		pFnSceneCreated = UObject::FindFunction("Function Engine.UIScene.SceneCreated");

	Engine_SceneCreated_Parms SceneCreated_Parms;
	SceneCreated_Parms.CreatedScene = CreatedScene;
	ProcessEvent(pFnSceneCreated,NULL,&SceneCreated_Parms,NULL);
}

struct Engine_ResolveScenePositions_Parms
{
};

void UUIScene::ResolveScenePositions()
{
	static UFieldFunc* pFnResolveScenePositions = NULL;
	if(!pFnResolveScenePositions)
		pFnResolveScenePositions = UObject::FindFunction("Function Engine.UIScene.ResolveScenePositions");

	Engine_ResolveScenePositions_Parms ResolveScenePositions_Parms;
	pFnResolveScenePositions->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResolveScenePositions,NULL,&ResolveScenePositions_Parms,NULL);
	pFnResolveScenePositions->FunctionFlags |= 0x400;
}

struct Engine_SaveSceneDataValues_Parms
{
	unsigned long                                      bUnbindSubscribers : 1;                           		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScene::SaveSceneDataValues(bool bUnbindSubscribers)
{
	static UFieldFunc* pFnSaveSceneDataValues = NULL;
	if(!pFnSaveSceneDataValues)
		pFnSaveSceneDataValues = UObject::FindFunction("Function Engine.UIScene.SaveSceneDataValues");

	Engine_SaveSceneDataValues_Parms SaveSceneDataValues_Parms;
	SaveSceneDataValues_Parms.bUnbindSubscribers = bUnbindSubscribers;
	pFnSaveSceneDataValues->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveSceneDataValues,NULL,&SaveSceneDataValues_Parms,NULL);
	pFnSaveSceneDataValues->FunctionFlags |= 0x400;
}

struct Engine_CloseScene_Parms
{
	class UUIScene*                                    SceneToClose;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bSkipKismetNotify : 1;                            		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      bSkipAnimation : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIScene::CloseScene(class UUIScene* SceneToClose,bool bSkipKismetNotify,bool bSkipAnimation)
{
	static UFieldFunc* pFnCloseScene = NULL;
	if(!pFnCloseScene)
		pFnCloseScene = UObject::FindFunction("Function Engine.UIScene.CloseScene");

	Engine_CloseScene_Parms CloseScene_Parms;
	CloseScene_Parms.SceneToClose = SceneToClose;
	CloseScene_Parms.bSkipKismetNotify = bSkipKismetNotify;
	CloseScene_Parms.bSkipAnimation = bSkipAnimation;
	ProcessEvent(pFnCloseScene,NULL,&CloseScene_Parms,NULL);
	return CloseScene_Parms.ReturnValue;
}

struct Engine_SetActiveToolTip_Parms
{
	class UUIToolTip*                                  NewToolTip;                                       		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScene::SetActiveToolTip(class UUIToolTip* NewToolTip)
{
	static UFieldFunc* pFnSetActiveToolTip = NULL;
	if(!pFnSetActiveToolTip)
		pFnSetActiveToolTip = UObject::FindFunction("Function Engine.UIScene.SetActiveToolTip");

	Engine_SetActiveToolTip_Parms SetActiveToolTip_Parms;
	SetActiveToolTip_Parms.NewToolTip = NewToolTip;
	pFnSetActiveToolTip->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetActiveToolTip,NULL,&SetActiveToolTip_Parms,NULL);
	pFnSetActiveToolTip->FunctionFlags |= 0x400;
	return SetActiveToolTip_Parms.ReturnValue;
}

struct Engine_GetWorldInfo_Parms
{
	class AWorldInfo*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class AWorldInfo* UUIScene::GetWorldInfo()
{
	static UFieldFunc* pFnGetWorldInfo = NULL;
	if(!pFnGetWorldInfo)
		pFnGetWorldInfo = UObject::FindFunction("Function Engine.UIScene.GetWorldInfo");

	Engine_GetWorldInfo_Parms GetWorldInfo_Parms;
	pFnGetWorldInfo->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetWorldInfo,NULL,&GetWorldInfo_Parms,NULL);
	pFnGetWorldInfo->FunctionFlags |= 0x400;
	return GetWorldInfo_Parms.ReturnValue;
}

struct Engine_NotifyPreClientTravel_Parms
{
	struct FString                                     TravelURL;                                        		// 0x000000 (0x000C)              
	unsigned char                                      TravelType;                                       		// 0x00000C (0x0001)              
	unsigned long                                      bIsSeamless : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

void UUIScene::NotifyPreClientTravel(struct FString TravelURL,unsigned char TravelType,bool bIsSeamless)
{
	static UFieldFunc* pFnNotifyPreClientTravel = NULL;
	if(!pFnNotifyPreClientTravel)
		pFnNotifyPreClientTravel = UObject::FindFunction("Function Engine.UIScene.NotifyPreClientTravel");

	Engine_NotifyPreClientTravel_Parms NotifyPreClientTravel_Parms;
	memcpy(&NotifyPreClientTravel_Parms.TravelURL,&TravelURL,0xC);
	NotifyPreClientTravel_Parms.TravelType = TravelType;
	NotifyPreClientTravel_Parms.bIsSeamless = bIsSeamless;
	ProcessEvent(pFnNotifyPreClientTravel,NULL,&NotifyPreClientTravel_Parms,NULL);
}

struct Engine_IsSceneActive_Parms
{
	unsigned long                                      bTopmostScene : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScene::IsSceneActive(bool bTopmostScene)
{
	static UFieldFunc* pFnIsSceneActive = NULL;
	if(!pFnIsSceneActive)
		pFnIsSceneActive = UObject::FindFunction("Function Engine.UIScene.IsSceneActive");

	Engine_IsSceneActive_Parms IsSceneActive_Parms;
	IsSceneActive_Parms.bTopmostScene = bTopmostScene;
	pFnIsSceneActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsSceneActive,NULL,&IsSceneActive_Parms,NULL);
	pFnIsSceneActive->FunctionFlags |= 0x400;
	return IsSceneActive_Parms.ReturnValue;
}

struct Engine_GetActiveToolTip_Parms
{
	class UUIToolTip*                                  ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIToolTip* UUIScene::GetActiveToolTip()
{
	static UFieldFunc* pFnGetActiveToolTip = NULL;
	if(!pFnGetActiveToolTip)
		pFnGetActiveToolTip = UObject::FindFunction("Function Engine.UIScene.GetActiveToolTip");

	Engine_GetActiveToolTip_Parms GetActiveToolTip_Parms;
	pFnGetActiveToolTip->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActiveToolTip,NULL,&GetActiveToolTip_Parms,NULL);
	pFnGetActiveToolTip->FunctionFlags |= 0x400;
	return GetActiveToolTip_Parms.ReturnValue;
}

struct Engine_OpenScene_Parms
{
	class UUIScene*                                    SceneToOpen;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bSkipAnimation : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	struct FScriptDelegate                             SceneActivatedDelegate;                           		// 0x000008 (0x000C)              
	struct FScriptDelegate                             SceneDeactivatedDelegate;                         		// 0x000014 (0x000C)              
	class UUIScene*                                    ReturnValue;                                      		// 0x000020 (0x0004)              
	//class UGameUISceneClient*                          GameSceneClient;                                  		// 0x000024 (0x0004)              
	//class UUIScene*                                    OpenedScene;                                      		// 0x000028 (0x0004)              
};

class UUIScene* UUIScene::OpenScene(class UUIScene* SceneToOpen,bool bSkipAnimation,struct FScriptDelegate SceneActivatedDelegate,struct FScriptDelegate SceneDeactivatedDelegate)
{
	static UFieldFunc* pFnOpenScene = NULL;
	if(!pFnOpenScene)
		pFnOpenScene = UObject::FindFunction("Function Engine.UIScene.OpenScene");

	Engine_OpenScene_Parms OpenScene_Parms;
	OpenScene_Parms.SceneToOpen = SceneToOpen;
	OpenScene_Parms.bSkipAnimation = bSkipAnimation;
	memcpy(&OpenScene_Parms.SceneActivatedDelegate,&SceneActivatedDelegate,0xC);
	memcpy(&OpenScene_Parms.SceneDeactivatedDelegate,&SceneDeactivatedDelegate,0xC);
	ProcessEvent(pFnOpenScene,NULL,&OpenScene_Parms,NULL);
	return OpenScene_Parms.ReturnValue;
}

struct Engine_GetActiveContextMenu_Parms
{
	class UUIContextMenu*                              ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIContextMenu* UUIScene::GetActiveContextMenu()
{
	static UFieldFunc* pFnGetActiveContextMenu = NULL;
	if(!pFnGetActiveContextMenu)
		pFnGetActiveContextMenu = UObject::FindFunction("Function Engine.UIScene.GetActiveContextMenu");

	Engine_GetActiveContextMenu_Parms GetActiveContextMenu_Parms;
	pFnGetActiveContextMenu->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetActiveContextMenu,NULL,&GetActiveContextMenu_Parms,NULL);
	pFnGetActiveContextMenu->FunctionFlags |= 0x400;
	return GetActiveContextMenu_Parms.ReturnValue;
}

struct Engine_SetVisibility_Parms
{
	unsigned long                                      bIsVisible : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UUIScene::SetVisibility(bool bIsVisible)
{
	static UFieldFunc* pFnSetVisibility = NULL;
	if(!pFnSetVisibility)
		pFnSetVisibility = UObject::FindFunction("Function Engine.UIScene.SetVisibility");

	Engine_SetVisibility_Parms SetVisibility_Parms;
	SetVisibility_Parms.bIsVisible = bIsVisible;
	pFnSetVisibility->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetVisibility,NULL,&SetVisibility_Parms,NULL);
	pFnSetVisibility->FunctionFlags |= 0x400;
}

struct Engine_GetSceneInputMode_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UUIScene::GetSceneInputMode()
{
	static UFieldFunc* pFnGetSceneInputMode = NULL;
	if(!pFnGetSceneInputMode)
		pFnGetSceneInputMode = UObject::FindFunction("Function Engine.UIScene.GetSceneInputMode");

	Engine_GetSceneInputMode_Parms GetSceneInputMode_Parms;
	ProcessEvent(pFnGetSceneInputMode,NULL,&GetSceneInputMode_Parms,NULL);
	return GetSceneInputMode_Parms.ReturnValue;
}

struct Engine_RegisterTickableObject_Parms
{
	class UUITickableObject*                           ObjectToRegister;                                 		// 0x000000 (0x0008)              
	int                                                InsertIndex;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIScene::RegisterTickableObject(class UUITickableObject* ObjectToRegister,int InsertIndex)
{
	static UFieldFunc* pFnRegisterTickableObject = NULL;
	if(!pFnRegisterTickableObject)
		pFnRegisterTickableObject = UObject::FindFunction("Function Engine.UIScene.RegisterTickableObject");

	Engine_RegisterTickableObject_Parms RegisterTickableObject_Parms;
	RegisterTickableObject_Parms.ObjectToRegister = ObjectToRegister;
	RegisterTickableObject_Parms.InsertIndex = InsertIndex;
	pFnRegisterTickableObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRegisterTickableObject,NULL,&RegisterTickableObject_Parms,NULL);
	pFnRegisterTickableObject->FunctionFlags |= 0x400;
	return RegisterTickableObject_Parms.ReturnValue;
}

struct Engine_ShouldModulateBackgroundAlpha_Parms
{
	float                                              AlphaModulationPercent;                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIScene::ShouldModulateBackgroundAlpha(float* AlphaModulationPercent)
{
	static UFieldFunc* pFnShouldModulateBackgroundAlpha = NULL;
	if(!pFnShouldModulateBackgroundAlpha)
		pFnShouldModulateBackgroundAlpha = UObject::FindFunction("Function Engine.UIScene.ShouldModulateBackgroundAlpha");

	Engine_ShouldModulateBackgroundAlpha_Parms ShouldModulateBackgroundAlpha_Parms;
	ProcessEvent(pFnShouldModulateBackgroundAlpha,NULL,&ShouldModulateBackgroundAlpha_Parms,NULL);
	if(AlphaModulationPercent)
		*AlphaModulationPercent = ShouldModulateBackgroundAlpha_Parms.AlphaModulationPercent;
	return ShouldModulateBackgroundAlpha_Parms.ReturnValue;
}

struct Engine_OnTopSceneChanged_Parms
{
	class UUIScene*                                    NewTopScene;                                      		// 0x000000 (0x0004)              
};

void UUIScene::OnTopSceneChanged(class UUIScene* NewTopScene)
{
	static UFieldFunc* pFnOnTopSceneChanged = NULL;
	if(!pFnOnTopSceneChanged)
		pFnOnTopSceneChanged = UObject::FindFunction("Function Engine.UIScene.OnTopSceneChanged");

	Engine_OnTopSceneChanged_Parms OnTopSceneChanged_Parms;
	OnTopSceneChanged_Parms.NewTopScene = NewTopScene;
	ProcessEvent(pFnOnTopSceneChanged,NULL,&OnTopSceneChanged_Parms,NULL);
}

struct Engine_ActivateState_Parms
{
	class UUIScreenObject*                             Target;                                           		// 0x000000 (0x0004)              
	int                                                PlayerIndex;                                      		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//unsigned long                                      bResult : 1;                                      		// 0x00000C (0x0004) [0x00000001] 
};

bool UUIState_Focused::ActivateState(class UUIScreenObject* Target,int PlayerIndex)
{
	static UFieldFunc* pFnActivateState = NULL;
	if(!pFnActivateState)
		pFnActivateState = UObject::FindFunction("Function Engine.UIState_Focused.ActivateState");

	Engine_ActivateState_Parms ActivateState_Parms;
	ActivateState_Parms.Target = Target;
	ActivateState_Parms.PlayerIndex = PlayerIndex;
	ProcessEvent(pFnActivateState,NULL,&ActivateState_Parms,NULL);
	return ActivateState_Parms.ReturnValue;
}

struct Engine_IsWidgetClassSupported_Parms
{
	class UClass*                                      WidgetClass;                                      		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIState_TargetedTab::IsWidgetClassSupported(class UClass* WidgetClass)
{
	static UFieldFunc* pFnIsWidgetClassSupported = NULL;
	if(!pFnIsWidgetClassSupported)
		pFnIsWidgetClassSupported = UObject::FindFunction("Function Engine.UIState_TargetedTab.IsWidgetClassSupported");

	Engine_IsWidgetClassSupported_Parms IsWidgetClassSupported_Parms;
	IsWidgetClassSupported_Parms.WidgetClass = WidgetClass;
	ProcessEvent(pFnIsWidgetClassSupported,NULL,&IsWidgetClassSupported_Parms,NULL);
	return IsWidgetClassSupported_Parms.ReturnValue;
}

struct Engine_HasValidStyleData_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUITexture::HasValidStyleData()
{
	static UFieldFunc* pFnHasValidStyleData = NULL;
	if(!pFnHasValidStyleData)
		pFnHasValidStyleData = UObject::FindFunction("Function Engine.UITexture.HasValidStyleData");

	Engine_HasValidStyleData_Parms HasValidStyleData_Parms;
	pFnHasValidStyleData->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHasValidStyleData,NULL,&HasValidStyleData_Parms,NULL);
	pFnHasValidStyleData->FunctionFlags |= 0x400;
	return HasValidStyleData_Parms.ReturnValue;
}

struct Engine_SetImageStyle_Parms
{
	class UUIStyle_Image*                              NewImageStyle;                                    		// 0x000000 (0x0004)              
};

void UUITexture::SetImageStyle(class UUIStyle_Image* NewImageStyle)
{
	static UFieldFunc* pFnSetImageStyle = NULL;
	if(!pFnSetImageStyle)
		pFnSetImageStyle = UObject::FindFunction("Function Engine.UITexture.SetImageStyle");

	Engine_SetImageStyle_Parms SetImageStyle_Parms;
	SetImageStyle_Parms.NewImageStyle = NewImageStyle;
	pFnSetImageStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetImageStyle,NULL,&SetImageStyle_Parms,NULL);
	pFnSetImageStyle->FunctionFlags |= 0x400;
}

struct Engine_GetSurface_Parms
{
	class USurface*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class USurface* UUITexture::GetSurface()
{
	static UFieldFunc* pFnGetSurface = NULL;
	if(!pFnGetSurface)
		pFnGetSurface = UObject::FindFunction("Function Engine.UITexture.GetSurface");

	Engine_GetSurface_Parms GetSurface_Parms;
	ProcessEvent(pFnGetSurface,NULL,&GetSurface_Parms,NULL);
	return GetSurface_Parms.ReturnValue;
}

struct Engine_SetTextAlignment_Parms
{
	unsigned char                                      Horizontal;                                       		// 0x000000 (0x0001)              
	unsigned char                                      Vertical;                                         		// 0x000001 (0x0001)              
};

void UUIStringRenderer::SetTextAlignment(unsigned char Horizontal,unsigned char Vertical)
{
	static UFieldFunc* pFnSetTextAlignment = NULL;
	if(!pFnSetTextAlignment)
		pFnSetTextAlignment = UObject::FindFunction("Function Engine.UIStringRenderer.SetTextAlignment");

	Engine_SetTextAlignment_Parms SetTextAlignment_Parms;
	SetTextAlignment_Parms.Horizontal = Horizontal;
	SetTextAlignment_Parms.Vertical = Vertical;
	pFnSetTextAlignment->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTextAlignment,NULL,&SetTextAlignment_Parms,NULL);
	pFnSetTextAlignment->FunctionFlags |= 0x400;
}

struct Engine_NotifyResolveStyle_Parms
{
	class UUISkin*                                     ActiveSkin;                                       		// 0x000000 (0x0004)              
	unsigned long                                      bClearExistingValue : 1;                          		// 0x000004 (0x0004) [0x00000001] 
	class UUIState*                                    CurrentMenuState;                                 		// 0x000008 (0x0004)              
	struct FName                                       StylePropertyName;                                		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UUIStyleResolver::NotifyResolveStyle(class UUISkin* ActiveSkin,bool bClearExistingValue,class UUIState* CurrentMenuState,struct FName StylePropertyName)
{
	static UFieldFunc* pFnNotifyResolveStyle = NULL;
	if(!pFnNotifyResolveStyle)
		pFnNotifyResolveStyle = UObject::FindFunction("Function Engine.UIStyleResolver.NotifyResolveStyle");

	Engine_NotifyResolveStyle_Parms NotifyResolveStyle_Parms;
	NotifyResolveStyle_Parms.ActiveSkin = ActiveSkin;
	NotifyResolveStyle_Parms.bClearExistingValue = bClearExistingValue;
	NotifyResolveStyle_Parms.CurrentMenuState = CurrentMenuState;
	memcpy(&NotifyResolveStyle_Parms.StylePropertyName,&StylePropertyName,0x8);
	pFnNotifyResolveStyle->FunctionFlags |= ~0x400;
	ProcessEvent(pFnNotifyResolveStyle,NULL,&NotifyResolveStyle_Parms,NULL);
	pFnNotifyResolveStyle->FunctionFlags |= 0x400;
	return NotifyResolveStyle_Parms.ReturnValue;
}

struct Engine_GetStyleResolverTag_Parms
{
	struct FName                                       ReturnValue;                                      		// 0x000000 (0x0008)              
};

struct FName UUIStyleResolver::GetStyleResolverTag()
{
	static UFieldFunc* pFnGetStyleResolverTag = NULL;
	if(!pFnGetStyleResolverTag)
		pFnGetStyleResolverTag = UObject::FindFunction("Function Engine.UIStyleResolver.GetStyleResolverTag");

	Engine_GetStyleResolverTag_Parms GetStyleResolverTag_Parms;
	pFnGetStyleResolverTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetStyleResolverTag,NULL,&GetStyleResolverTag_Parms,NULL);
	pFnGetStyleResolverTag->FunctionFlags |= 0x400;
	return GetStyleResolverTag_Parms.ReturnValue;
}

struct Engine_SetStyleResolverTag_Parms
{
	struct FName                                       NewResolverTag;                                   		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIStyleResolver::SetStyleResolverTag(struct FName NewResolverTag)
{
	static UFieldFunc* pFnSetStyleResolverTag = NULL;
	if(!pFnSetStyleResolverTag)
		pFnSetStyleResolverTag = UObject::FindFunction("Function Engine.UIStyleResolver.SetStyleResolverTag");

	Engine_SetStyleResolverTag_Parms SetStyleResolverTag_Parms;
	memcpy(&SetStyleResolverTag_Parms.NewResolverTag,&NewResolverTag,0x8);
	pFnSetStyleResolverTag->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetStyleResolverTag,NULL,&SetStyleResolverTag_Parms,NULL);
	pFnSetStyleResolverTag->FunctionFlags |= 0x400;
	return SetStyleResolverTag_Parms.ReturnValue;
}

struct Engine_GetOwner_Parms
{
	class UUIScreenObject*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScreenObject* UUISequence::GetOwner()
{
	static UFieldFunc* pFnGetOwner = NULL;
	if(!pFnGetOwner)
		pFnGetOwner = UObject::FindFunction("Function Engine.UISequence.GetOwner");

	Engine_GetOwner_Parms GetOwner_Parms;
	pFnGetOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwner,NULL,&GetOwner_Parms,NULL);
	pFnGetOwner->FunctionFlags |= 0x400;
	return GetOwner_Parms.ReturnValue;
}

struct Engine_AddSequenceObject_Parms
{
	class USequenceObject*                             NewObj;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bRecurse : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUISequence::AddSequenceObject(class USequenceObject* NewObj,bool bRecurse)
{
	static UFieldFunc* pFnAddSequenceObject = NULL;
	if(!pFnAddSequenceObject)
		pFnAddSequenceObject = UObject::FindFunction("Function Engine.UISequence.AddSequenceObject");

	Engine_AddSequenceObject_Parms AddSequenceObject_Parms;
	AddSequenceObject_Parms.NewObj = NewObj;
	AddSequenceObject_Parms.bRecurse = bRecurse;
	pFnAddSequenceObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAddSequenceObject,NULL,&AddSequenceObject_Parms,NULL);
	pFnAddSequenceObject->FunctionFlags |= 0x400;
	return AddSequenceObject_Parms.ReturnValue;
}

struct Engine_RemoveSequenceObject_Parms
{
	class USequenceObject*                             ObjectToRemove;                                   		// 0x000000 (0x0004)              
};

void UUISequence::RemoveSequenceObject(class USequenceObject* ObjectToRemove)
{
	static UFieldFunc* pFnRemoveSequenceObject = NULL;
	if(!pFnRemoveSequenceObject)
		pFnRemoveSequenceObject = UObject::FindFunction("Function Engine.UISequence.RemoveSequenceObject");

	Engine_RemoveSequenceObject_Parms RemoveSequenceObject_Parms;
	RemoveSequenceObject_Parms.ObjectToRemove = ObjectToRemove;
	pFnRemoveSequenceObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveSequenceObject,NULL,&RemoveSequenceObject_Parms,NULL);
	pFnRemoveSequenceObject->FunctionFlags |= 0x400;
}

struct Engine_RemoveSequenceObjects_Parms
{
	TArray<class USequenceObject*>                     ObjectsToRemove;                                  		// 0x000000 (0x000C)              
};

void UUISequence::RemoveSequenceObjects(TArray<class USequenceObject*>* ObjectsToRemove)
{
	static UFieldFunc* pFnRemoveSequenceObjects = NULL;
	if(!pFnRemoveSequenceObjects)
		pFnRemoveSequenceObjects = UObject::FindFunction("Function Engine.UISequence.RemoveSequenceObjects");

	Engine_RemoveSequenceObjects_Parms RemoveSequenceObjects_Parms;
	pFnRemoveSequenceObjects->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRemoveSequenceObjects,NULL,&RemoveSequenceObjects_Parms,NULL);
	pFnRemoveSequenceObjects->FunctionFlags |= 0x400;
	if(ObjectsToRemove)
		memcpy(ObjectsToRemove,&RemoveSequenceObjects_Parms.ObjectsToRemove,0xC);
}

struct Engine_GetUIEvents_Parms
{
	TArray<class UUIEvent*>                            out_Events;                                       		// 0x000000 (0x000C)              
	class UClass*                                      LimitClass;                                       		// 0x00000C (0x0004)              
};

void UUISequence::GetUIEvents(TArray<class UUIEvent*>* out_Events,class UClass* LimitClass)
{
	static UFieldFunc* pFnGetUIEvents = NULL;
	if(!pFnGetUIEvents)
		pFnGetUIEvents = UObject::FindFunction("Function Engine.UISequence.GetUIEvents");

	Engine_GetUIEvents_Parms GetUIEvents_Parms;
	GetUIEvents_Parms.LimitClass = LimitClass;
	pFnGetUIEvents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetUIEvents,NULL,&GetUIEvents_Parms,NULL);
	pFnGetUIEvents->FunctionFlags |= 0x400;
	if(out_Events)
		memcpy(out_Events,&GetUIEvents_Parms.out_Events,0xC);
}

struct Engine_GetOwnerState_Parms
{
	class UUIState*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIState* UUIStateSequence::GetOwnerState()
{
	static UFieldFunc* pFnGetOwnerState = NULL;
	if(!pFnGetOwnerState)
		pFnGetOwnerState = UObject::FindFunction("Function Engine.UIStateSequence.GetOwnerState");

	Engine_GetOwnerState_Parms GetOwnerState_Parms;
	pFnGetOwnerState->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwnerState,NULL,&GetOwnerState_Parms,NULL);
	pFnGetOwnerState->FunctionFlags |= 0x400;
	return GetOwnerState_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIAction::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIAction.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetOwner_Parms
{
	class UUIScreenObject*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScreenObject* UUIAction::GetOwner()
{
	static UFieldFunc* pFnGetOwner = NULL;
	if(!pFnGetOwner)
		pFnGetOwner = UObject::FindFunction("Function Engine.UIAction.GetOwner");

	Engine_GetOwner_Parms GetOwner_Parms;
	pFnGetOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwner,NULL,&GetOwner_Parms,NULL);
	pFnGetOwner->FunctionFlags |= 0x400;
	return GetOwner_Parms.ReturnValue;
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIAction::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.UIAction.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_GetOwnerScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScene* UUIAction::GetOwnerScene()
{
	static UFieldFunc* pFnGetOwnerScene = NULL;
	if(!pFnGetOwnerScene)
		pFnGetOwnerScene = UObject::FindFunction("Function Engine.UIAction.GetOwnerScene");

	Engine_GetOwnerScene_Parms GetOwnerScene_Parms;
	pFnGetOwnerScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwnerScene,NULL,&GetOwnerScene_Parms,NULL);
	pFnGetOwnerScene->FunctionFlags |= 0x400;
	return GetOwnerScene_Parms.ReturnValue;
}

struct Engine_HasDynamicOutputLinks_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIAction::HasDynamicOutputLinks()
{
	static UFieldFunc* pFnHasDynamicOutputLinks = NULL;
	if(!pFnHasDynamicOutputLinks)
		pFnHasDynamicOutputLinks = UObject::FindFunction("Function Engine.UIAction.HasDynamicOutputLinks");

	Engine_HasDynamicOutputLinks_Parms HasDynamicOutputLinks_Parms;
	ProcessEvent(pFnHasDynamicOutputLinks,NULL,&HasDynamicOutputLinks_Parms,NULL);
	return HasDynamicOutputLinks_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_ChangeState::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_ChangeState.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_GetDatafieldValue::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_GetDatafieldValue.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_SetDatafieldValue::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_SetDatafieldValue.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_GetCellValue::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_GetCellValue.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIAction_PublishValue::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIAction_PublishValue.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIAction_RefreshBindingValue::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIAction_RefreshBindingValue.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_DisplaySurvey::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_DisplaySurvey.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_FocusActions::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_FocusActions.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_SetFocus::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_SetFocus.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetLoginStatus_Parms
{
	//int                                                PlayerIdx;                                        		// 0x000000 (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x000008 (0x0008)              
	//unsigned char                                      Status;                                           		// 0x000010 (0x0001)              
};

void UUIAction_GetLoggedInPlayerCount::GetLoginStatus()
{
	static UFieldFunc* pFnGetLoginStatus = NULL;
	if(!pFnGetLoginStatus)
		pFnGetLoginStatus = UObject::FindFunction("Function Engine.UIAction_GetLoggedInPlayerCount.GetLoginStatus");

	Engine_GetLoginStatus_Parms GetLoginStatus_Parms;
	ProcessEvent(pFnGetLoginStatus,NULL,&GetLoginStatus_Parms,NULL);
}

struct Engine_GetNATType_Parms
{
	unsigned char                                      OutNATType;                                       		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//unsigned long                                      Result : 1;                                       		// 0x000008 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00000C (0x0004)              
	//class UOnlineSystemInterface*                      SystemInterface;                                  		// 0x000010 (0x0008)              
};

bool UUIAction_GetNATType::GetNATType(unsigned char* OutNATType)
{
	static UFieldFunc* pFnGetNATType = NULL;
	if(!pFnGetNATType)
		pFnGetNATType = UObject::FindFunction("Function Engine.UIAction_GetNATType.GetNATType");

	Engine_GetNATType_Parms GetNATType_Parms;
	ProcessEvent(pFnGetNATType,NULL,&GetNATType_Parms,NULL);
	if(OutNATType)
		*OutNATType = GetNATType_Parms.OutNATType;
	return GetNATType_Parms.ReturnValue;
}

struct Engine_GetPrivilegeLevel_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
	//unsigned char                                      Result;                                           		// 0x000005 (0x0001)              
	unsigned char                                      _0x000006[0x2];                                   		// 0x000006 (0x0002) ALIGNEMENT
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000008 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInterface;                                  		// 0x00000C (0x0008)              
};

unsigned char UUIAction_GetPrivilegeLevel::GetPrivilegeLevel(int ControllerId)
{
	static UFieldFunc* pFnGetPrivilegeLevel = NULL;
	if(!pFnGetPrivilegeLevel)
		pFnGetPrivilegeLevel = UObject::FindFunction("Function Engine.UIAction_GetPrivilegeLevel.GetPrivilegeLevel");

	Engine_GetPrivilegeLevel_Parms GetPrivilegeLevel_Parms;
	GetPrivilegeLevel_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnGetPrivilegeLevel,NULL,&GetPrivilegeLevel_Parms,NULL);
	return GetPrivilegeLevel_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_GetListIndex::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_GetListIndex.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_BuildJoinURL_Parms
{
	struct FString                                     ResolvedConnectionURL;                            		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UUIAction_JoinOnlineGame::BuildJoinURL(struct FString ResolvedConnectionURL)
{
	static UFieldFunc* pFnBuildJoinURL = NULL;
	if(!pFnBuildJoinURL)
		pFnBuildJoinURL = UObject::FindFunction("Function Engine.UIAction_JoinOnlineGame.BuildJoinURL");

	Engine_BuildJoinURL_Parms BuildJoinURL_Parms;
	memcpy(&BuildJoinURL_Parms.ResolvedConnectionURL,&ResolvedConnectionURL,0xC);
	ProcessEvent(pFnBuildJoinURL,NULL,&BuildJoinURL_Parms,NULL);
	return BuildJoinURL_Parms.ReturnValue;
}

struct Engine_JoinOnlineGame_Parms
{
	unsigned char                                      ControllerId;                                     		// 0x000000 (0x0001)              
	struct FOnlineGameSearchResult                     GameToJoin;                                       		// 0x000004 (0x0008)              
	class AWorldInfo*                                  InWorldInfo;                                      		// 0x00000C (0x0004)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000010 (0x0004)              
	//class UOnlineGameInterface*                        GameInterface;                                    		// 0x000014 (0x0008)              
};

void UUIAction_JoinOnlineGame::JoinOnlineGame(unsigned char ControllerId,struct FOnlineGameSearchResult GameToJoin,class AWorldInfo* InWorldInfo)
{
	static UFieldFunc* pFnJoinOnlineGame = NULL;
	if(!pFnJoinOnlineGame)
		pFnJoinOnlineGame = UObject::FindFunction("Function Engine.UIAction_JoinOnlineGame.JoinOnlineGame");

	Engine_JoinOnlineGame_Parms JoinOnlineGame_Parms;
	JoinOnlineGame_Parms.ControllerId = ControllerId;
	memcpy(&JoinOnlineGame_Parms.GameToJoin,&GameToJoin,0x8);
	JoinOnlineGame_Parms.InWorldInfo = InWorldInfo;
	ProcessEvent(pFnJoinOnlineGame,NULL,&JoinOnlineGame_Parms,NULL);
}

struct Engine_OnJoinGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00000C (0x0004)              
	//struct FString                                     URL;                                              		// 0x000010 (0x000C)              
};

void UUIAction_JoinOnlineGame::OnJoinGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnJoinGameComplete = NULL;
	if(!pFnOnJoinGameComplete)
		pFnOnJoinGameComplete = UObject::FindFunction("Function Engine.UIAction_JoinOnlineGame.OnJoinGameComplete");

	Engine_OnJoinGameComplete_Parms OnJoinGameComplete_Parms;
	memcpy(&OnJoinGameComplete_Parms.SessionName,&SessionName,0x8);
	OnJoinGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnJoinGameComplete,NULL,&OnJoinGameComplete_Parms,NULL);
}

struct Engine_OnProfileWriteComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UUIAction_SaveProfileSettings::OnProfileWriteComplete(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnProfileWriteComplete = NULL;
	if(!pFnOnProfileWriteComplete)
		pFnOnProfileWriteComplete = UObject::FindFunction("Function Engine.UIAction_SaveProfileSettings.OnProfileWriteComplete");

	Engine_OnProfileWriteComplete_Parms OnProfileWriteComplete_Parms;
	OnProfileWriteComplete_Parms.LocalUserNum = LocalUserNum;
	OnProfileWriteComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnProfileWriteComplete,NULL,&OnProfileWriteComplete_Parms,NULL);
}

struct Engine_ClearDelegate_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000004 (0x0008)              
	//int                                                ControllerId;                                     		// 0x00000C (0x0004)              
};

void UUIAction_SaveProfileSettings::ClearDelegate()
{
	static UFieldFunc* pFnClearDelegate = NULL;
	if(!pFnClearDelegate)
		pFnClearDelegate = UObject::FindFunction("Function Engine.UIAction_SaveProfileSettings.ClearDelegate");

	Engine_ClearDelegate_Parms ClearDelegate_Parms;
	ProcessEvent(pFnClearDelegate,NULL,&ClearDelegate_Parms,NULL);
}

struct Engine_RegisterDelegate_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000004 (0x0008)              
	//int                                                ControllerId;                                     		// 0x00000C (0x0004)              
};

void UUIAction_SaveProfileSettings::RegisterDelegate()
{
	static UFieldFunc* pFnRegisterDelegate = NULL;
	if(!pFnRegisterDelegate)
		pFnRegisterDelegate = UObject::FindFunction("Function Engine.UIAction_SaveProfileSettings.RegisterDelegate");

	Engine_RegisterDelegate_Parms RegisterDelegate_Parms;
	ProcessEvent(pFnRegisterDelegate,NULL,&RegisterDelegate_Parms,NULL);
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIAction_Scene::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.UIAction_Scene.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_OnDeviceSelectionComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterfaceEx*                    PlayerIntEx;                                      		// 0x000008 (0x0008)              
};

void UUIAction_ShowDeviceSelectionUI::OnDeviceSelectionComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnDeviceSelectionComplete = NULL;
	if(!pFnOnDeviceSelectionComplete)
		pFnOnDeviceSelectionComplete = UObject::FindFunction("Function Engine.UIAction_ShowDeviceSelectionUI.OnDeviceSelectionComplete");

	Engine_OnDeviceSelectionComplete_Parms OnDeviceSelectionComplete_Parms;
	OnDeviceSelectionComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnDeviceSelectionComplete,NULL,&OnDeviceSelectionComplete_Parms,NULL);
}

struct Engine_WriteToVariables_Parms
{
};

void UUIAction_ShowDeviceSelectionUI::WriteToVariables()
{
	static UFieldFunc* pFnWriteToVariables = NULL;
	if(!pFnWriteToVariables)
		pFnWriteToVariables = UObject::FindFunction("Function Engine.UIAction_ShowDeviceSelectionUI.WriteToVariables");

	Engine_WriteToVariables_Parms WriteToVariables_Parms;
	pFnWriteToVariables->FunctionFlags |= ~0x400;
	ProcessEvent(pFnWriteToVariables,NULL,&WriteToVariables_Parms,NULL);
	pFnWriteToVariables->FunctionFlags |= 0x400;
}

struct Engine_SelectDevice_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterfaceEx*                    PlayerIntEx;                                      		// 0x000004 (0x0008)              
};

void UUIAction_ShowDeviceSelectionUI::SelectDevice()
{
	static UFieldFunc* pFnSelectDevice = NULL;
	if(!pFnSelectDevice)
		pFnSelectDevice = UObject::FindFunction("Function Engine.UIAction_ShowDeviceSelectionUI.SelectDevice");

	Engine_SelectDevice_Parms SelectDevice_Parms;
	ProcessEvent(pFnSelectDevice,NULL,&SelectDevice_Parms,NULL);
}

struct Engine_OnKeyboardInputDone_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000008 (0x0008)              
	//unsigned char                                      bWasCancelled;                                    		// 0x000010 (0x0001)              
};

void UUIAction_ShowKeyboardUI::OnKeyboardInputDone(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnKeyboardInputDone = NULL;
	if(!pFnOnKeyboardInputDone)
		pFnOnKeyboardInputDone = UObject::FindFunction("Function Engine.UIAction_ShowKeyboardUI.OnKeyboardInputDone");

	Engine_OnKeyboardInputDone_Parms OnKeyboardInputDone_Parms;
	OnKeyboardInputDone_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnKeyboardInputDone,NULL,&OnKeyboardInputDone_Parms,NULL);
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_ShowKeyboardUI::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_ShowKeyboardUI.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_ReadKeyboardInput_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000004 (0x0008)              
};

void UUIAction_ShowKeyboardUI::ReadKeyboardInput()
{
	static UFieldFunc* pFnReadKeyboardInput = NULL;
	if(!pFnReadKeyboardInput)
		pFnReadKeyboardInput = UObject::FindFunction("Function Engine.UIAction_ShowKeyboardUI.ReadKeyboardInput");

	Engine_ReadKeyboardInput_Parms ReadKeyboardInput_Parms;
	ProcessEvent(pFnReadKeyboardInput,NULL,&ReadKeyboardInput_Parms,NULL);
}

struct Engine_ShowUI_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000004 (0x0008)              
};

void UUIAction_ShowLoginUI::ShowUI()
{
	static UFieldFunc* pFnShowUI = NULL;
	if(!pFnShowUI)
		pFnShowUI = UObject::FindFunction("Function Engine.UIAction_ShowLoginUI.ShowUI");

	Engine_ShowUI_Parms ShowUI_Parms;
	ProcessEvent(pFnShowUI,NULL,&ShowUI_Parms,NULL);
}

struct Engine_OnLoginCancelled_Parms
{
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000000 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000004 (0x0008)              
};

void UUIAction_ShowLoginUI::OnLoginCancelled()
{
	static UFieldFunc* pFnOnLoginCancelled = NULL;
	if(!pFnOnLoginCancelled)
		pFnOnLoginCancelled = UObject::FindFunction("Function Engine.UIAction_ShowLoginUI.OnLoginCancelled");

	Engine_OnLoginCancelled_Parms OnLoginCancelled_Parms;
	ProcessEvent(pFnOnLoginCancelled,NULL,&OnLoginCancelled_Parms,NULL);
}

struct Engine_OnLoginChanged_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000004 (0x0004)              
	//class UOnlinePlayerInterface*                      PlayerInt;                                        		// 0x000008 (0x0008)              
};

void UUIAction_ShowLoginUI::OnLoginChanged(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChanged = NULL;
	if(!pFnOnLoginChanged)
		pFnOnLoginChanged = UObject::FindFunction("Function Engine.UIAction_ShowLoginUI.OnLoginChanged");

	Engine_OnLoginChanged_Parms OnLoginChanged_Parms;
	OnLoginChanged_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChanged,NULL,&OnLoginChanged_Parms,NULL);
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUICond_IsFocused::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.UICond_IsFocused.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_CanBeActivated_Parms
{
	int                                                ControllerIndex;                                  		// 0x000000 (0x0004)              
	class UUIScreenObject*                             InEventOwner;                                     		// 0x000004 (0x0004)              
	class UObject*                                     InEventActivator;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bActivateImmediately : 1;                         		// 0x00000C (0x0004) [0x00000001] 
	TArray<int>                                        IndicesToActivate;                                		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UUIEvent::CanBeActivated(int ControllerIndex,class UUIScreenObject* InEventOwner,class UObject* InEventActivator,bool bActivateImmediately,TArray<int>* IndicesToActivate)
{
	static UFieldFunc* pFnCanBeActivated = NULL;
	if(!pFnCanBeActivated)
		pFnCanBeActivated = UObject::FindFunction("Function Engine.UIEvent.CanBeActivated");

	Engine_CanBeActivated_Parms CanBeActivated_Parms;
	CanBeActivated_Parms.ControllerIndex = ControllerIndex;
	CanBeActivated_Parms.InEventOwner = InEventOwner;
	CanBeActivated_Parms.InEventActivator = InEventActivator;
	CanBeActivated_Parms.bActivateImmediately = bActivateImmediately;
	pFnCanBeActivated->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanBeActivated,NULL,&CanBeActivated_Parms,NULL);
	pFnCanBeActivated->FunctionFlags |= 0x400;
	if(IndicesToActivate)
		memcpy(IndicesToActivate,&CanBeActivated_Parms.IndicesToActivate,0xC);
	return CanBeActivated_Parms.ReturnValue;
}

struct Engine_ActivateUIEvent_Parms
{
	int                                                ControllerIndex;                                  		// 0x000000 (0x0004)              
	class UUIScreenObject*                             InEventOwner;                                     		// 0x000004 (0x0004)              
	class UObject*                                     InEventActivator;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bActivateImmediately : 1;                         		// 0x00000C (0x0004) [0x00000001] 
	TArray<int>                                        IndicesToActivate;                                		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UUIEvent::ActivateUIEvent(int ControllerIndex,class UUIScreenObject* InEventOwner,class UObject* InEventActivator,bool bActivateImmediately,TArray<int>* IndicesToActivate)
{
	static UFieldFunc* pFnActivateUIEvent = NULL;
	if(!pFnActivateUIEvent)
		pFnActivateUIEvent = UObject::FindFunction("Function Engine.UIEvent.ActivateUIEvent");

	Engine_ActivateUIEvent_Parms ActivateUIEvent_Parms;
	ActivateUIEvent_Parms.ControllerIndex = ControllerIndex;
	ActivateUIEvent_Parms.InEventOwner = InEventOwner;
	ActivateUIEvent_Parms.InEventActivator = InEventActivator;
	ActivateUIEvent_Parms.bActivateImmediately = bActivateImmediately;
	pFnActivateUIEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnActivateUIEvent,NULL,&ActivateUIEvent_Parms,NULL);
	pFnActivateUIEvent->FunctionFlags |= 0x400;
	if(IndicesToActivate)
		memcpy(IndicesToActivate,&ActivateUIEvent_Parms.IndicesToActivate,0xC);
	return ActivateUIEvent_Parms.ReturnValue;
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIEvent::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.UIEvent.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_GetOwner_Parms
{
	class UUIScreenObject*                             ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScreenObject* UUIEvent::GetOwner()
{
	static UFieldFunc* pFnGetOwner = NULL;
	if(!pFnGetOwner)
		pFnGetOwner = UObject::FindFunction("Function Engine.UIEvent.GetOwner");

	Engine_GetOwner_Parms GetOwner_Parms;
	pFnGetOwner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwner,NULL,&GetOwner_Parms,NULL);
	pFnGetOwner->FunctionFlags |= 0x400;
	return GetOwner_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetOwnerScene_Parms
{
	class UUIScene*                                    ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UUIScene* UUIEvent::GetOwnerScene()
{
	static UFieldFunc* pFnGetOwnerScene = NULL;
	if(!pFnGetOwnerScene)
		pFnGetOwnerScene = UObject::FindFunction("Function Engine.UIEvent.GetOwnerScene");

	Engine_GetOwnerScene_Parms GetOwnerScene_Parms;
	pFnGetOwnerScene->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetOwnerScene,NULL,&GetOwnerScene_Parms,NULL);
	pFnGetOwnerScene->FunctionFlags |= 0x400;
	return GetOwnerScene_Parms.ReturnValue;
}

struct Engine_ConditionalActivateUIEvent_Parms
{
	int                                                ControllerIndex;                                  		// 0x000000 (0x0004)              
	class UUIScreenObject*                             InEventOwner;                                     		// 0x000004 (0x0004)              
	class UObject*                                     InEventActivator;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bActivateImmediately : 1;                         		// 0x00000C (0x0004) [0x00000001] 
	TArray<int>                                        IndicesToActivate;                                		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UUIEvent::ConditionalActivateUIEvent(int ControllerIndex,class UUIScreenObject* InEventOwner,class UObject* InEventActivator,bool bActivateImmediately,TArray<int>* IndicesToActivate)
{
	static UFieldFunc* pFnConditionalActivateUIEvent = NULL;
	if(!pFnConditionalActivateUIEvent)
		pFnConditionalActivateUIEvent = UObject::FindFunction("Function Engine.UIEvent.ConditionalActivateUIEvent");

	Engine_ConditionalActivateUIEvent_Parms ConditionalActivateUIEvent_Parms;
	ConditionalActivateUIEvent_Parms.ControllerIndex = ControllerIndex;
	ConditionalActivateUIEvent_Parms.InEventOwner = InEventOwner;
	ConditionalActivateUIEvent_Parms.InEventActivator = InEventActivator;
	ConditionalActivateUIEvent_Parms.bActivateImmediately = bActivateImmediately;
	pFnConditionalActivateUIEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnConditionalActivateUIEvent,NULL,&ConditionalActivateUIEvent_Parms,NULL);
	pFnConditionalActivateUIEvent->FunctionFlags |= 0x400;
	if(IndicesToActivate)
		memcpy(IndicesToActivate,&ConditionalActivateUIEvent_Parms.IndicesToActivate,0xC);
	return ConditionalActivateUIEvent_Parms.ReturnValue;
}

struct Engine_ShouldAlwaysInstance_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIEvent::ShouldAlwaysInstance()
{
	static UFieldFunc* pFnShouldAlwaysInstance = NULL;
	if(!pFnShouldAlwaysInstance)
		pFnShouldAlwaysInstance = UObject::FindFunction("Function Engine.UIEvent.ShouldAlwaysInstance");

	Engine_ShouldAlwaysInstance_Parms ShouldAlwaysInstance_Parms;
	ProcessEvent(pFnShouldAlwaysInstance,NULL,&ShouldAlwaysInstance_Parms,NULL);
	return ShouldAlwaysInstance_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIEvent::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIEvent.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_AllowEventActivation_Parms
{
	int                                                ControllerIndex;                                  		// 0x000000 (0x0004)              
	class UUIScreenObject*                             InEventOwner;                                     		// 0x000004 (0x0004)              
	class UObject*                                     InEventActivator;                                 		// 0x000008 (0x0004)              
	unsigned long                                      bActivateImmediately : 1;                         		// 0x00000C (0x0004) [0x00000001] 
	TArray<int>                                        IndicesToActivate;                                		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UUIEvent::AllowEventActivation(int ControllerIndex,class UUIScreenObject* InEventOwner,class UObject* InEventActivator,bool bActivateImmediately,TArray<int>* IndicesToActivate)
{
	static UFieldFunc* pFnAllowEventActivation = NULL;
	if(!pFnAllowEventActivation)
		pFnAllowEventActivation = UObject::FindFunction("Function Engine.UIEvent.AllowEventActivation");

	Engine_AllowEventActivation_Parms AllowEventActivation_Parms;
	AllowEventActivation_Parms.ControllerIndex = ControllerIndex;
	AllowEventActivation_Parms.InEventOwner = InEventOwner;
	AllowEventActivation_Parms.InEventActivator = InEventActivator;
	AllowEventActivation_Parms.bActivateImmediately = bActivateImmediately;
	ProcessEvent(pFnAllowEventActivation,NULL,&AllowEventActivation_Parms,NULL);
	if(IndicesToActivate)
		memcpy(IndicesToActivate,&AllowEventActivation_Parms.IndicesToActivate,0xC);
	return AllowEventActivation_Parms.ReturnValue;
}

struct Engine_ChangeButtonAlias_Parms
{
	struct FName                                       CurrentAliasName;                                 		// 0x000000 (0x0008)              
	struct FName                                       NewAliasName;                                     		// 0x000008 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UUIEvent_CalloutButtonInputProxy::ChangeButtonAlias(struct FName CurrentAliasName,struct FName NewAliasName)
{
	static UFieldFunc* pFnChangeButtonAlias = NULL;
	if(!pFnChangeButtonAlias)
		pFnChangeButtonAlias = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.ChangeButtonAlias");

	Engine_ChangeButtonAlias_Parms ChangeButtonAlias_Parms;
	memcpy(&ChangeButtonAlias_Parms.CurrentAliasName,&CurrentAliasName,0x8);
	memcpy(&ChangeButtonAlias_Parms.NewAliasName,&NewAliasName,0x8);
	pFnChangeButtonAlias->FunctionFlags |= ~0x400;
	ProcessEvent(pFnChangeButtonAlias,NULL,&ChangeButtonAlias_Parms,NULL);
	pFnChangeButtonAlias->FunctionFlags |= 0x400;
	return ChangeButtonAlias_Parms.ReturnValue;
}

struct Engine_RegisterButtonAlias_Parms
{
	struct FName                                       ButtonAliasName;                                  		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIEvent_CalloutButtonInputProxy::RegisterButtonAlias(struct FName ButtonAliasName)
{
	static UFieldFunc* pFnRegisterButtonAlias = NULL;
	if(!pFnRegisterButtonAlias)
		pFnRegisterButtonAlias = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.RegisterButtonAlias");

	Engine_RegisterButtonAlias_Parms RegisterButtonAlias_Parms;
	memcpy(&RegisterButtonAlias_Parms.ButtonAliasName,&ButtonAliasName,0x8);
	pFnRegisterButtonAlias->FunctionFlags |= ~0x400;
	ProcessEvent(pFnRegisterButtonAlias,NULL,&RegisterButtonAlias_Parms,NULL);
	pFnRegisterButtonAlias->FunctionFlags |= 0x400;
	return RegisterButtonAlias_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIEvent_CalloutButtonInputProxy::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_FindButtonAliasIndex_Parms
{
	struct FName                                       ButtonAliasName;                                  		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
};

int UUIEvent_CalloutButtonInputProxy::FindButtonAliasIndex(struct FName ButtonAliasName)
{
	static UFieldFunc* pFnFindButtonAliasIndex = NULL;
	if(!pFnFindButtonAliasIndex)
		pFnFindButtonAliasIndex = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.FindButtonAliasIndex");

	Engine_FindButtonAliasIndex_Parms FindButtonAliasIndex_Parms;
	memcpy(&FindButtonAliasIndex_Parms.ButtonAliasName,&ButtonAliasName,0x8);
	pFnFindButtonAliasIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFindButtonAliasIndex,NULL,&FindButtonAliasIndex_Parms,NULL);
	pFnFindButtonAliasIndex->FunctionFlags |= 0x400;
	return FindButtonAliasIndex_Parms.ReturnValue;
}

struct Engine_UnregisterButtonAlias_Parms
{
	struct FName                                       ButtonAliasName;                                  		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UUIEvent_CalloutButtonInputProxy::UnregisterButtonAlias(struct FName ButtonAliasName)
{
	static UFieldFunc* pFnUnregisterButtonAlias = NULL;
	if(!pFnUnregisterButtonAlias)
		pFnUnregisterButtonAlias = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.UnregisterButtonAlias");

	Engine_UnregisterButtonAlias_Parms UnregisterButtonAlias_Parms;
	memcpy(&UnregisterButtonAlias_Parms.ButtonAliasName,&ButtonAliasName,0x8);
	pFnUnregisterButtonAlias->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUnregisterButtonAlias,NULL,&UnregisterButtonAlias_Parms,NULL);
	pFnUnregisterButtonAlias->FunctionFlags |= 0x400;
	return UnregisterButtonAlias_Parms.ReturnValue;
}

struct Engine_IsPastingIntoUISequenceAllowed_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIEvent_CalloutButtonInputProxy::IsPastingIntoUISequenceAllowed()
{
	static UFieldFunc* pFnIsPastingIntoUISequenceAllowed = NULL;
	if(!pFnIsPastingIntoUISequenceAllowed)
		pFnIsPastingIntoUISequenceAllowed = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.IsPastingIntoUISequenceAllowed");

	Engine_IsPastingIntoUISequenceAllowed_Parms IsPastingIntoUISequenceAllowed_Parms;
	ProcessEvent(pFnIsPastingIntoUISequenceAllowed,NULL,&IsPastingIntoUISequenceAllowed_Parms,NULL);
	return IsPastingIntoUISequenceAllowed_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_CalloutButtonInputProxy::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_CalloutButtonInputProxy.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_MetaObject::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_MetaObject.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsPastingIntoUISequenceAllowed_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIEvent_MetaObject::IsPastingIntoUISequenceAllowed()
{
	static UFieldFunc* pFnIsPastingIntoUISequenceAllowed = NULL;
	if(!pFnIsPastingIntoUISequenceAllowed)
		pFnIsPastingIntoUISequenceAllowed = UObject::FindFunction("Function Engine.UIEvent_MetaObject.IsPastingIntoUISequenceAllowed");

	Engine_IsPastingIntoUISequenceAllowed_Parms IsPastingIntoUISequenceAllowed_Parms;
	ProcessEvent(pFnIsPastingIntoUISequenceAllowed,NULL,&IsPastingIntoUISequenceAllowed_Parms,NULL);
	return IsPastingIntoUISequenceAllowed_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_ProcessInput::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_ProcessInput.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_ScrollbarPositionChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_ScrollbarPositionChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_SubmitListData::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_SubmitListData.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_SubmitTextData::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_SubmitTextData.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_TabControl::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_TabControl.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_CheckValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_CheckValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_ComboboxValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_ComboboxValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_ListIndexChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_ListIndexChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_NumericOptionListValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_NumericOptionListValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_OptionListValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_OptionListValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_ProgressBarValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_ProgressBarValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_SliderValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_SliderValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIEvent_TextValueChanged::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIEvent_TextValueChanged.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USeqVar_UIRange::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.SeqVar_UIRange.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USeqVar_UniqueNetId::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.SeqVar_UniqueNetId.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void AFluidInfluenceActor::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.FluidInfluenceActor.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AFluidInfluenceActor::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.FluidInfluenceActor.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
	//float                                              Radius;                                           		// 0x000020 (0x0004)              
	//float                                              Height;                                           		// 0x000024 (0x0004)              
	//float                                              AdjustedVelocity;                                 		// 0x000028 (0x0004)              
};

void AFluidSurfaceActor::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.FluidSurfaceActor.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_SetDetailPosition_Parms
{
	FVector3                                           WorldPos;                                         		// 0x000000 (0x000C)              
};

void UFluidSurfaceComponent::SetDetailPosition(FVector3 WorldPos)
{
	static UFieldFunc* pFnSetDetailPosition = NULL;
	if(!pFnSetDetailPosition)
		pFnSetDetailPosition = UObject::FindFunction("Function Engine.FluidSurfaceComponent.SetDetailPosition");

	Engine_SetDetailPosition_Parms SetDetailPosition_Parms;
	memcpy(&SetDetailPosition_Parms.WorldPos,&WorldPos,0xC);
	pFnSetDetailPosition->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetDetailPosition,NULL,&SetDetailPosition_Parms,NULL);
	pFnSetDetailPosition->FunctionFlags |= 0x400;
}

struct Engine_ApplyForce_Parms
{
	FVector3                                           WorldPos;                                         		// 0x000000 (0x000C)              
	float                                              Strength;                                         		// 0x00000C (0x0004)              
	float                                              Radius;                                           		// 0x000010 (0x0004)              
	unsigned long                                      bImpulse : 1;                                     		// 0x000014 (0x0004) [0x00000001] 
};

void UFluidSurfaceComponent::ApplyForce(FVector3 WorldPos,float Strength,float Radius,bool bImpulse)
{
	static UFieldFunc* pFnApplyForce = NULL;
	if(!pFnApplyForce)
		pFnApplyForce = UObject::FindFunction("Function Engine.FluidSurfaceComponent.ApplyForce");

	Engine_ApplyForce_Parms ApplyForce_Parms;
	memcpy(&ApplyForce_Parms.WorldPos,&WorldPos,0xC);
	ApplyForce_Parms.Strength = Strength;
	ApplyForce_Parms.Radius = Radius;
	ApplyForce_Parms.bImpulse = bImpulse;
	pFnApplyForce->FunctionFlags |= ~0x400;
	ProcessEvent(pFnApplyForce,NULL,&ApplyForce_Parms,NULL);
	pFnApplyForce->FunctionFlags |= 0x400;
}

struct Engine_SetColorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	struct FLinearColor                                Param;                                            		// 0x000008 (0x0010)              
};

void ALensFlareSource::SetColorParameter(struct FName ParameterName,struct FLinearColor Param)
{
	static UFieldFunc* pFnSetColorParameter = NULL;
	if(!pFnSetColorParameter)
		pFnSetColorParameter = UObject::FindFunction("Function Engine.LensFlareSource.SetColorParameter");

	Engine_SetColorParameter_Parms SetColorParameter_Parms;
	memcpy(&SetColorParameter_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetColorParameter_Parms.Param,&Param,0x10);
	ProcessEvent(pFnSetColorParameter,NULL,&SetColorParameter_Parms,NULL);
}

struct Engine_SetVectorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	FVector3                                           Param;                                            		// 0x000008 (0x000C)              
};

void ALensFlareSource::SetVectorParameter(struct FName ParameterName,FVector3 Param)
{
	static UFieldFunc* pFnSetVectorParameter = NULL;
	if(!pFnSetVectorParameter)
		pFnSetVectorParameter = UObject::FindFunction("Function Engine.LensFlareSource.SetVectorParameter");

	Engine_SetVectorParameter_Parms SetVectorParameter_Parms;
	memcpy(&SetVectorParameter_Parms.ParameterName,&ParameterName,0x8);
	memcpy(&SetVectorParameter_Parms.Param,&Param,0xC);
	ProcessEvent(pFnSetVectorParameter,NULL,&SetVectorParameter_Parms,NULL);
}

struct Engine_SetExtColorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Red;                                              		// 0x000008 (0x0004)              
	float                                              Green;                                            		// 0x00000C (0x0004)              
	float                                              Blue;                                             		// 0x000010 (0x0004)              
	float                                              Alpha;                                            		// 0x000014 (0x0004)              
};

void ALensFlareSource::SetExtColorParameter(struct FName ParameterName,float Red,float Green,float Blue,float Alpha)
{
	static UFieldFunc* pFnSetExtColorParameter = NULL;
	if(!pFnSetExtColorParameter)
		pFnSetExtColorParameter = UObject::FindFunction("Function Engine.LensFlareSource.SetExtColorParameter");

	Engine_SetExtColorParameter_Parms SetExtColorParameter_Parms;
	memcpy(&SetExtColorParameter_Parms.ParameterName,&ParameterName,0x8);
	SetExtColorParameter_Parms.Red = Red;
	SetExtColorParameter_Parms.Green = Green;
	SetExtColorParameter_Parms.Blue = Blue;
	SetExtColorParameter_Parms.Alpha = Alpha;
	ProcessEvent(pFnSetExtColorParameter,NULL,&SetExtColorParameter_Parms,NULL);
}

struct Engine_SetTemplate_Parms
{
	class ULensFlare*                                  NewTemplate;                                      		// 0x000000 (0x0004)              
};

void ALensFlareSource::SetTemplate(class ULensFlare* NewTemplate)
{
	static UFieldFunc* pFnSetTemplate = NULL;
	if(!pFnSetTemplate)
		pFnSetTemplate = UObject::FindFunction("Function Engine.LensFlareSource.SetTemplate");

	Engine_SetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	pFnSetTemplate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTemplate,NULL,&SetTemplate_Parms,NULL);
	pFnSetTemplate->FunctionFlags |= 0x400;
}

struct Engine_SetFloatParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	float                                              Param;                                            		// 0x000008 (0x0004)              
};

void ALensFlareSource::SetFloatParameter(struct FName ParameterName,float Param)
{
	static UFieldFunc* pFnSetFloatParameter = NULL;
	if(!pFnSetFloatParameter)
		pFnSetFloatParameter = UObject::FindFunction("Function Engine.LensFlareSource.SetFloatParameter");

	Engine_SetFloatParameter_Parms SetFloatParameter_Parms;
	memcpy(&SetFloatParameter_Parms.ParameterName,&ParameterName,0x8);
	SetFloatParameter_Parms.Param = Param;
	ProcessEvent(pFnSetFloatParameter,NULL,&SetFloatParameter_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void ALensFlareSource::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.LensFlareSource.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_SetActorParameter_Parms
{
	struct FName                                       ParameterName;                                    		// 0x000000 (0x0008)              
	class AActor*                                      Param;                                            		// 0x000008 (0x0004)              
};

void ALensFlareSource::SetActorParameter(struct FName ParameterName,class AActor* Param)
{
	static UFieldFunc* pFnSetActorParameter = NULL;
	if(!pFnSetActorParameter)
		pFnSetActorParameter = UObject::FindFunction("Function Engine.LensFlareSource.SetActorParameter");

	Engine_SetActorParameter_Parms SetActorParameter_Parms;
	memcpy(&SetActorParameter_Parms.ParameterName,&ParameterName,0x8);
	SetActorParameter_Parms.Param = Param;
	ProcessEvent(pFnSetActorParameter,NULL,&SetActorParameter_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ALensFlareSource::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.LensFlareSource.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_SetIsActive_Parms
{
	unsigned long                                      bInIsActive : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

void ULensFlareComponent::SetIsActive(bool bInIsActive)
{
	static UFieldFunc* pFnSetIsActive = NULL;
	if(!pFnSetIsActive)
		pFnSetIsActive = UObject::FindFunction("Function Engine.LensFlareComponent.SetIsActive");

	Engine_SetIsActive_Parms SetIsActive_Parms;
	SetIsActive_Parms.bInIsActive = bInIsActive;
	pFnSetIsActive->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetIsActive,NULL,&SetIsActive_Parms,NULL);
	pFnSetIsActive->FunctionFlags |= 0x400;
}

struct Engine_SetSourceColor_Parms
{
	struct FLinearColor                                InSourceColor;                                    		// 0x000000 (0x0010)              
};

void ULensFlareComponent::SetSourceColor(struct FLinearColor InSourceColor)
{
	static UFieldFunc* pFnSetSourceColor = NULL;
	if(!pFnSetSourceColor)
		pFnSetSourceColor = UObject::FindFunction("Function Engine.LensFlareComponent.SetSourceColor");

	Engine_SetSourceColor_Parms SetSourceColor_Parms;
	memcpy(&SetSourceColor_Parms.InSourceColor,&InSourceColor,0x10);
	pFnSetSourceColor->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSourceColor,NULL,&SetSourceColor_Parms,NULL);
	pFnSetSourceColor->FunctionFlags |= 0x400;
}

struct Engine_SetTemplate_Parms
{
	class ULensFlare*                                  NewTemplate;                                      		// 0x000000 (0x0004)              
};

void ULensFlareComponent::SetTemplate(class ULensFlare* NewTemplate)
{
	static UFieldFunc* pFnSetTemplate = NULL;
	if(!pFnSetTemplate)
		pFnSetTemplate = UObject::FindFunction("Function Engine.LensFlareComponent.SetTemplate");

	Engine_SetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	pFnSetTemplate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetTemplate,NULL,&SetTemplate_Parms,NULL);
	pFnSetTemplate->FunctionFlags |= 0x400;
}

struct Engine_SetSoundMode_Parms
{
	unsigned char                                      NewSoundMode;                                     		// 0x000000 (0x0001)              
	float                                              FadeTime;                                         		// 0x000004 (0x0004)              
};

void UAudioDevice::SetSoundMode(unsigned char NewSoundMode,float FadeTime)
{
	static UFieldFunc* pFnSetSoundMode = NULL;
	if(!pFnSetSoundMode)
		pFnSetSoundMode = UObject::FindFunction("Function Engine.AudioDevice.SetSoundMode");

	Engine_SetSoundMode_Parms SetSoundMode_Parms;
	SetSoundMode_Parms.NewSoundMode = NewSoundMode;
	SetSoundMode_Parms.FadeTime = FadeTime;
	pFnSetSoundMode->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetSoundMode,NULL,&SetSoundMode_Parms,NULL);
	pFnSetSoundMode->FunctionFlags |= 0x400;
}

struct Engine_HandleLocalDocument_Parms
{
	struct FString                                     DocName;                                          		// 0x000000 (0x000C)              
	int                                                bShouldMoveToCloud;                               		// 0x00000C (0x0004)              
	int                                                bShouldDeleteLocalFile;                           		// 0x000010 (0x0004)              
};

void UCloudStorageUpgradeHelper::HandleLocalDocument(struct FString* DocName,int* bShouldMoveToCloud,int* bShouldDeleteLocalFile)
{
	static UFieldFunc* pFnHandleLocalDocument = NULL;
	if(!pFnHandleLocalDocument)
		pFnHandleLocalDocument = UObject::FindFunction("Function Engine.CloudStorageUpgradeHelper.HandleLocalDocument");

	Engine_HandleLocalDocument_Parms HandleLocalDocument_Parms;
	ProcessEvent(pFnHandleLocalDocument,NULL,&HandleLocalDocument_Parms,NULL);
	if(DocName)
		memcpy(DocName,&HandleLocalDocument_Parms.DocName,0xC);
	if(bShouldMoveToCloud)
		*bShouldMoveToCloud = HandleLocalDocument_Parms.bShouldMoveToCloud;
	if(bShouldDeleteLocalFile)
		*bShouldDeleteLocalFile = HandleLocalDocument_Parms.bShouldDeleteLocalFile;
}

struct Engine_GetCloudUpgradeKeys_Parms
{
	TArray<struct FString>                             CloudKeys;                                        		// 0x000000 (0x000C)              
};

void UCloudStorageUpgradeHelper::GetCloudUpgradeKeys(TArray<struct FString>* CloudKeys)
{
	static UFieldFunc* pFnGetCloudUpgradeKeys = NULL;
	if(!pFnGetCloudUpgradeKeys)
		pFnGetCloudUpgradeKeys = UObject::FindFunction("Function Engine.CloudStorageUpgradeHelper.GetCloudUpgradeKeys");

	Engine_GetCloudUpgradeKeys_Parms GetCloudUpgradeKeys_Parms;
	ProcessEvent(pFnGetCloudUpgradeKeys,NULL,&GetCloudUpgradeKeys_Parms,NULL);
	if(CloudKeys)
		memcpy(CloudKeys,&GetCloudUpgradeKeys_Parms.CloudKeys,0xC);
}

struct Engine_HandleLocalKeyValue_Parms
{
	struct FString                                     CloudKeyName;                                     		// 0x000000 (0x000C)              
	struct FPlatformInterfaceData                      CloudValue;                                       		// 0x00000C (0x0030)              
	int                                                bShouldMoveToCloud;                               		// 0x00003C (0x0004)              
	int                                                bShouldDeleteLocalKey;                            		// 0x000040 (0x0004)              
};

void UCloudStorageUpgradeHelper::HandleLocalKeyValue(struct FString* CloudKeyName,struct FPlatformInterfaceData* CloudValue,int* bShouldMoveToCloud,int* bShouldDeleteLocalKey)
{
	static UFieldFunc* pFnHandleLocalKeyValue = NULL;
	if(!pFnHandleLocalKeyValue)
		pFnHandleLocalKeyValue = UObject::FindFunction("Function Engine.CloudStorageUpgradeHelper.HandleLocalKeyValue");

	Engine_HandleLocalKeyValue_Parms HandleLocalKeyValue_Parms;
	ProcessEvent(pFnHandleLocalKeyValue,NULL,&HandleLocalKeyValue_Parms,NULL);
	if(CloudKeyName)
		memcpy(CloudKeyName,&HandleLocalKeyValue_Parms.CloudKeyName,0xC);
	if(CloudValue)
		memcpy(CloudValue,&HandleLocalKeyValue_Parms.CloudValue,0x30);
	if(bShouldMoveToCloud)
		*bShouldMoveToCloud = HandleLocalKeyValue_Parms.bShouldMoveToCloud;
	if(bShouldDeleteLocalKey)
		*bShouldDeleteLocalKey = HandleLocalKeyValue_Parms.bShouldDeleteLocalKey;
}

struct Engine_GetLocalStorageInterface_Parms
{
	class UCloudStorageBase*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UCloudStorageBase* UPlatformInterfaceBase::GetLocalStorageInterface()
{
	static UFieldFunc* pFnGetLocalStorageInterface = NULL;
	if(!pFnGetLocalStorageInterface)
		pFnGetLocalStorageInterface = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetLocalStorageInterface");

	Engine_GetLocalStorageInterface_Parms GetLocalStorageInterface_Parms;
	pFnGetLocalStorageInterface->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetLocalStorageInterface,NULL,&GetLocalStorageInterface_Parms,NULL);
	pFnGetLocalStorageInterface->FunctionFlags |= 0x400;
	return GetLocalStorageInterface_Parms.ReturnValue;
}

struct Engine_GetInGameAdManager_Parms
{
	class UInGameAdManager*                            ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UInGameAdManager* UPlatformInterfaceBase::GetInGameAdManager()
{
	static UFieldFunc* pFnGetInGameAdManager = NULL;
	if(!pFnGetInGameAdManager)
		pFnGetInGameAdManager = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetInGameAdManager");

	Engine_GetInGameAdManager_Parms GetInGameAdManager_Parms;
	pFnGetInGameAdManager->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetInGameAdManager,NULL,&GetInGameAdManager_Parms,NULL);
	pFnGetInGameAdManager->FunctionFlags |= 0x400;
	return GetInGameAdManager_Parms.ReturnValue;
}

struct Engine_GetTwitterIntegration_Parms
{
	class UTwitterIntegrationBase*                     ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UTwitterIntegrationBase* UPlatformInterfaceBase::GetTwitterIntegration()
{
	static UFieldFunc* pFnGetTwitterIntegration = NULL;
	if(!pFnGetTwitterIntegration)
		pFnGetTwitterIntegration = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetTwitterIntegration");

	Engine_GetTwitterIntegration_Parms GetTwitterIntegration_Parms;
	pFnGetTwitterIntegration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetTwitterIntegration,NULL,&GetTwitterIntegration_Parms,NULL);
	pFnGetTwitterIntegration->FunctionFlags |= 0x400;
	return GetTwitterIntegration_Parms.ReturnValue;
}

struct Engine_ClearDelegate_Parms
{
	int                                                DelegateType;                                     		// 0x000000 (0x0004)              
	struct FScriptDelegate                             InDelegate;                                       		// 0x000004 (0x000C)              
	//int                                                RemoveIndex;                                      		// 0x000010 (0x0004)              
};

void UPlatformInterfaceBase::ClearDelegate(int DelegateType,struct FScriptDelegate InDelegate)
{
	static UFieldFunc* pFnClearDelegate = NULL;
	if(!pFnClearDelegate)
		pFnClearDelegate = UObject::FindFunction("Function Engine.PlatformInterfaceBase.ClearDelegate");

	Engine_ClearDelegate_Parms ClearDelegate_Parms;
	ClearDelegate_Parms.DelegateType = DelegateType;
	memcpy(&ClearDelegate_Parms.InDelegate,&InDelegate,0xC);
	ProcessEvent(pFnClearDelegate,NULL,&ClearDelegate_Parms,NULL);
}

struct Engine_AddDelegate_Parms
{
	int                                                DelegateType;                                     		// 0x000000 (0x0004)              
	struct FScriptDelegate                             InDelegate;                                       		// 0x000004 (0x000C)              
};

void UPlatformInterfaceBase::AddDelegate(int DelegateType,struct FScriptDelegate InDelegate)
{
	static UFieldFunc* pFnAddDelegate = NULL;
	if(!pFnAddDelegate)
		pFnAddDelegate = UObject::FindFunction("Function Engine.PlatformInterfaceBase.AddDelegate");

	Engine_AddDelegate_Parms AddDelegate_Parms;
	AddDelegate_Parms.DelegateType = DelegateType;
	memcpy(&AddDelegate_Parms.InDelegate,&InDelegate,0xC);
	ProcessEvent(pFnAddDelegate,NULL,&AddDelegate_Parms,NULL);
}

struct Engine_GetCloudStorageInterface_Parms
{
	class UCloudStorageBase*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UCloudStorageBase* UPlatformInterfaceBase::GetCloudStorageInterface()
{
	static UFieldFunc* pFnGetCloudStorageInterface = NULL;
	if(!pFnGetCloudStorageInterface)
		pFnGetCloudStorageInterface = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetCloudStorageInterface");

	Engine_GetCloudStorageInterface_Parms GetCloudStorageInterface_Parms;
	pFnGetCloudStorageInterface->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCloudStorageInterface,NULL,&GetCloudStorageInterface_Parms,NULL);
	pFnGetCloudStorageInterface->FunctionFlags |= 0x400;
	return GetCloudStorageInterface_Parms.ReturnValue;
}

struct Engine_GetAnalyticEventsInterface_Parms
{
	class UAnalyticEventsBase*                         ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAnalyticEventsBase* UPlatformInterfaceBase::GetAnalyticEventsInterface()
{
	static UFieldFunc* pFnGetAnalyticEventsInterface = NULL;
	if(!pFnGetAnalyticEventsInterface)
		pFnGetAnalyticEventsInterface = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetAnalyticEventsInterface");

	Engine_GetAnalyticEventsInterface_Parms GetAnalyticEventsInterface_Parms;
	pFnGetAnalyticEventsInterface->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAnalyticEventsInterface,NULL,&GetAnalyticEventsInterface_Parms,NULL);
	pFnGetAnalyticEventsInterface->FunctionFlags |= 0x400;
	return GetAnalyticEventsInterface_Parms.ReturnValue;
}

struct Engine_GetInAppMessageInterface_Parms
{
	class UInAppMessageBase*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UInAppMessageBase* UPlatformInterfaceBase::GetInAppMessageInterface()
{
	static UFieldFunc* pFnGetInAppMessageInterface = NULL;
	if(!pFnGetInAppMessageInterface)
		pFnGetInAppMessageInterface = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetInAppMessageInterface");

	Engine_GetInAppMessageInterface_Parms GetInAppMessageInterface_Parms;
	pFnGetInAppMessageInterface->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetInAppMessageInterface,NULL,&GetInAppMessageInterface_Parms,NULL);
	pFnGetInAppMessageInterface->FunctionFlags |= 0x400;
	return GetInAppMessageInterface_Parms.ReturnValue;
}

struct Engine_CallDelegates_Parms
{
	int                                                DelegateType;                                     		// 0x000000 (0x0004)              
	struct FPlatformInterfaceDelegateResult            DelegateResult;                                   		// 0x000004 (0x0034)              
};

void UPlatformInterfaceBase::CallDelegates(int DelegateType,struct FPlatformInterfaceDelegateResult* DelegateResult)
{
	static UFieldFunc* pFnCallDelegates = NULL;
	if(!pFnCallDelegates)
		pFnCallDelegates = UObject::FindFunction("Function Engine.PlatformInterfaceBase.CallDelegates");

	Engine_CallDelegates_Parms CallDelegates_Parms;
	CallDelegates_Parms.DelegateType = DelegateType;
	pFnCallDelegates->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCallDelegates,NULL,&CallDelegates_Parms,NULL);
	pFnCallDelegates->FunctionFlags |= 0x400;
	if(DelegateResult)
		memcpy(DelegateResult,&CallDelegates_Parms.DelegateResult,0x34);
}

struct Engine_GetAppNotificationsInterface_Parms
{
	class UAppNotificationsBase*                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UAppNotificationsBase* UPlatformInterfaceBase::GetAppNotificationsInterface()
{
	static UFieldFunc* pFnGetAppNotificationsInterface = NULL;
	if(!pFnGetAppNotificationsInterface)
		pFnGetAppNotificationsInterface = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetAppNotificationsInterface");

	Engine_GetAppNotificationsInterface_Parms GetAppNotificationsInterface_Parms;
	pFnGetAppNotificationsInterface->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAppNotificationsInterface,NULL,&GetAppNotificationsInterface_Parms,NULL);
	pFnGetAppNotificationsInterface->FunctionFlags |= 0x400;
	return GetAppNotificationsInterface_Parms.ReturnValue;
}

struct Engine_PlatformInterfaceDelegate_Parms
{
	struct FPlatformInterfaceDelegateResult            Result;                                           		// 0x000000 (0x0034)              
};

void UPlatformInterfaceBase::PlatformInterfaceDelegate(struct FPlatformInterfaceDelegateResult* Result)
{
	static UFieldFunc* pFnPlatformInterfaceDelegate = NULL;
	if(!pFnPlatformInterfaceDelegate)
		pFnPlatformInterfaceDelegate = UObject::FindFunction("Function Engine.PlatformInterfaceBase.PlatformInterfaceDelegate");

	Engine_PlatformInterfaceDelegate_Parms PlatformInterfaceDelegate_Parms;
	ProcessEvent(pFnPlatformInterfaceDelegate,NULL,&PlatformInterfaceDelegate_Parms,NULL);
	if(Result)
		memcpy(Result,&PlatformInterfaceDelegate_Parms.Result,0x34);
}

struct Engine_GetMicroTransactionInterface_Parms
{
	class UMicroTransactionBase*                       ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UMicroTransactionBase* UPlatformInterfaceBase::GetMicroTransactionInterface()
{
	static UFieldFunc* pFnGetMicroTransactionInterface = NULL;
	if(!pFnGetMicroTransactionInterface)
		pFnGetMicroTransactionInterface = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetMicroTransactionInterface");

	Engine_GetMicroTransactionInterface_Parms GetMicroTransactionInterface_Parms;
	pFnGetMicroTransactionInterface->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetMicroTransactionInterface,NULL,&GetMicroTransactionInterface_Parms,NULL);
	pFnGetMicroTransactionInterface->FunctionFlags |= 0x400;
	return GetMicroTransactionInterface_Parms.ReturnValue;
}

struct Engine_GetFacebookIntegration_Parms
{
	class UFacebookIntegration*                        ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UFacebookIntegration* UPlatformInterfaceBase::GetFacebookIntegration()
{
	static UFieldFunc* pFnGetFacebookIntegration = NULL;
	if(!pFnGetFacebookIntegration)
		pFnGetFacebookIntegration = UObject::FindFunction("Function Engine.PlatformInterfaceBase.GetFacebookIntegration");

	Engine_GetFacebookIntegration_Parms GetFacebookIntegration_Parms;
	pFnGetFacebookIntegration->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetFacebookIntegration,NULL,&GetFacebookIntegration_Parms,NULL);
	pFnGetFacebookIntegration->FunctionFlags |= 0x400;
	return GetFacebookIntegration_Parms.ReturnValue;
}

struct Engine_LogErrorMessage_Parms
{
	struct FString                                     ErrorName;                                        		// 0x000000 (0x000C)              
	struct FString                                     ErrorMessage;                                     		// 0x00000C (0x000C)              
};

void UAnalyticEventsBase::LogErrorMessage(struct FString ErrorName,struct FString ErrorMessage)
{
	static UFieldFunc* pFnLogErrorMessage = NULL;
	if(!pFnLogErrorMessage)
		pFnLogErrorMessage = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogErrorMessage");

	Engine_LogErrorMessage_Parms LogErrorMessage_Parms;
	memcpy(&LogErrorMessage_Parms.ErrorName,&ErrorName,0xC);
	memcpy(&LogErrorMessage_Parms.ErrorMessage,&ErrorMessage,0xC);
	pFnLogErrorMessage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogErrorMessage,NULL,&LogErrorMessage_Parms,NULL);
	pFnLogErrorMessage->FunctionFlags |= 0x400;
}

struct Engine_LogCurrencyPurchaseEvent_Parms
{
	struct FString                                     GameCurrencyType;                                 		// 0x000000 (0x000C)              
	int                                                GameCurrencyAmount;                               		// 0x00000C (0x0004)              
	struct FString                                     RealCurrencyType;                                 		// 0x000010 (0x000C)              
	float                                              RealMoneyCost;                                    		// 0x00001C (0x0004)              
	struct FString                                     PaymentProvider;                                  		// 0x000020 (0x000C)              
};

void UAnalyticEventsBase::LogCurrencyPurchaseEvent(struct FString GameCurrencyType,int GameCurrencyAmount,struct FString RealCurrencyType,float RealMoneyCost,struct FString PaymentProvider)
{
	static UFieldFunc* pFnLogCurrencyPurchaseEvent = NULL;
	if(!pFnLogCurrencyPurchaseEvent)
		pFnLogCurrencyPurchaseEvent = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogCurrencyPurchaseEvent");

	Engine_LogCurrencyPurchaseEvent_Parms LogCurrencyPurchaseEvent_Parms;
	memcpy(&LogCurrencyPurchaseEvent_Parms.GameCurrencyType,&GameCurrencyType,0xC);
	LogCurrencyPurchaseEvent_Parms.GameCurrencyAmount = GameCurrencyAmount;
	memcpy(&LogCurrencyPurchaseEvent_Parms.RealCurrencyType,&RealCurrencyType,0xC);
	LogCurrencyPurchaseEvent_Parms.RealMoneyCost = RealMoneyCost;
	memcpy(&LogCurrencyPurchaseEvent_Parms.PaymentProvider,&PaymentProvider,0xC);
	pFnLogCurrencyPurchaseEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogCurrencyPurchaseEvent,NULL,&LogCurrencyPurchaseEvent_Parms,NULL);
	pFnLogCurrencyPurchaseEvent->FunctionFlags |= 0x400;
}

struct Engine_IsSessionInProgress_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UAnalyticEventsBase::IsSessionInProgress()
{
	static UFieldFunc* pFnIsSessionInProgress = NULL;
	if(!pFnIsSessionInProgress)
		pFnIsSessionInProgress = UObject::FindFunction("Function Engine.AnalyticEventsBase.IsSessionInProgress");

	Engine_IsSessionInProgress_Parms IsSessionInProgress_Parms;
	ProcessEvent(pFnIsSessionInProgress,NULL,&IsSessionInProgress_Parms,NULL);
	return IsSessionInProgress_Parms.ReturnValue;
}

struct Engine_StartSession_Parms
{
};

void UAnalyticEventsBase::StartSession()
{
	static UFieldFunc* pFnStartSession = NULL;
	if(!pFnStartSession)
		pFnStartSession = UObject::FindFunction("Function Engine.AnalyticEventsBase.StartSession");

	Engine_StartSession_Parms StartSession_Parms;
	pFnStartSession->FunctionFlags |= ~0x400;
	ProcessEvent(pFnStartSession,NULL,&StartSession_Parms,NULL);
	pFnStartSession->FunctionFlags |= 0x400;
}

struct Engine_SendCachedEvents_Parms
{
};

void UAnalyticEventsBase::SendCachedEvents()
{
	static UFieldFunc* pFnSendCachedEvents = NULL;
	if(!pFnSendCachedEvents)
		pFnSendCachedEvents = UObject::FindFunction("Function Engine.AnalyticEventsBase.SendCachedEvents");

	Engine_SendCachedEvents_Parms SendCachedEvents_Parms;
	pFnSendCachedEvents->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSendCachedEvents,NULL,&SendCachedEvents_Parms,NULL);
	pFnSendCachedEvents->FunctionFlags |= 0x400;
}

struct Engine_LogStringEventParam_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
	struct FString                                     ParamName;                                        		// 0x00000C (0x000C)              
	struct FString                                     ParamValue;                                       		// 0x000018 (0x000C)              
	unsigned long                                      bTimed : 1;                                       		// 0x000024 (0x0004) [0x00000001] 
};

void UAnalyticEventsBase::LogStringEventParam(struct FString EventName,struct FString ParamName,struct FString ParamValue,bool bTimed)
{
	static UFieldFunc* pFnLogStringEventParam = NULL;
	if(!pFnLogStringEventParam)
		pFnLogStringEventParam = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogStringEventParam");

	Engine_LogStringEventParam_Parms LogStringEventParam_Parms;
	memcpy(&LogStringEventParam_Parms.EventName,&EventName,0xC);
	memcpy(&LogStringEventParam_Parms.ParamName,&ParamName,0xC);
	memcpy(&LogStringEventParam_Parms.ParamValue,&ParamValue,0xC);
	LogStringEventParam_Parms.bTimed = bTimed;
	pFnLogStringEventParam->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogStringEventParam,NULL,&LogStringEventParam_Parms,NULL);
	pFnLogStringEventParam->FunctionFlags |= 0x400;
}

struct Engine_LogUserAttributeUpdateArray_Parms
{
	TArray<struct FEventStringParam>                   AttributeArray;                                   		// 0x000000 (0x000C)              
};

void UAnalyticEventsBase::LogUserAttributeUpdateArray(TArray<struct FEventStringParam> AttributeArray)
{
	static UFieldFunc* pFnLogUserAttributeUpdateArray = NULL;
	if(!pFnLogUserAttributeUpdateArray)
		pFnLogUserAttributeUpdateArray = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogUserAttributeUpdateArray");

	Engine_LogUserAttributeUpdateArray_Parms LogUserAttributeUpdateArray_Parms;
	memcpy(&LogUserAttributeUpdateArray_Parms.AttributeArray,&AttributeArray,0xC);
	pFnLogUserAttributeUpdateArray->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogUserAttributeUpdateArray,NULL,&LogUserAttributeUpdateArray_Parms,NULL);
	pFnLogUserAttributeUpdateArray->FunctionFlags |= 0x400;
}

struct Engine_EndStringEvent_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
};

void UAnalyticEventsBase::EndStringEvent(struct FString EventName)
{
	static UFieldFunc* pFnEndStringEvent = NULL;
	if(!pFnEndStringEvent)
		pFnEndStringEvent = UObject::FindFunction("Function Engine.AnalyticEventsBase.EndStringEvent");

	Engine_EndStringEvent_Parms EndStringEvent_Parms;
	memcpy(&EndStringEvent_Parms.EventName,&EventName,0xC);
	pFnEndStringEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEndStringEvent,NULL,&EndStringEvent_Parms,NULL);
	pFnEndStringEvent->FunctionFlags |= 0x400;
}

struct Engine_LogStringEventParamArray_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
	TArray<struct FEventStringParam>                   ParamArray;                                       		// 0x00000C (0x000C)              
	unsigned long                                      bTimed : 1;                                       		// 0x000018 (0x0004) [0x00000001] 
};

void UAnalyticEventsBase::LogStringEventParamArray(struct FString EventName,TArray<struct FEventStringParam> ParamArray,bool bTimed)
{
	static UFieldFunc* pFnLogStringEventParamArray = NULL;
	if(!pFnLogStringEventParamArray)
		pFnLogStringEventParamArray = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogStringEventParamArray");

	Engine_LogStringEventParamArray_Parms LogStringEventParamArray_Parms;
	memcpy(&LogStringEventParamArray_Parms.EventName,&EventName,0xC);
	memcpy(&LogStringEventParamArray_Parms.ParamArray,&ParamArray,0xC);
	LogStringEventParamArray_Parms.bTimed = bTimed;
	pFnLogStringEventParamArray->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogStringEventParamArray,NULL,&LogStringEventParamArray_Parms,NULL);
	pFnLogStringEventParamArray->FunctionFlags |= 0x400;
}

struct Engine_EndStringEventParamArray_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
	TArray<struct FEventStringParam>                   ParamArray;                                       		// 0x00000C (0x000C)              
};

void UAnalyticEventsBase::EndStringEventParamArray(struct FString EventName,TArray<struct FEventStringParam> ParamArray)
{
	static UFieldFunc* pFnEndStringEventParamArray = NULL;
	if(!pFnEndStringEventParamArray)
		pFnEndStringEventParamArray = UObject::FindFunction("Function Engine.AnalyticEventsBase.EndStringEventParamArray");

	Engine_EndStringEventParamArray_Parms EndStringEventParamArray_Parms;
	memcpy(&EndStringEventParamArray_Parms.EventName,&EventName,0xC);
	memcpy(&EndStringEventParamArray_Parms.ParamArray,&ParamArray,0xC);
	pFnEndStringEventParamArray->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEndStringEventParamArray,NULL,&EndStringEventParamArray_Parms,NULL);
	pFnEndStringEventParamArray->FunctionFlags |= 0x400;
}

struct Engine_LogCurrencyGivenEvent_Parms
{
	struct FString                                     GameCurrencyType;                                 		// 0x000000 (0x000C)              
	int                                                GameCurrencyAmount;                               		// 0x00000C (0x0004)              
};

void UAnalyticEventsBase::LogCurrencyGivenEvent(struct FString GameCurrencyType,int GameCurrencyAmount)
{
	static UFieldFunc* pFnLogCurrencyGivenEvent = NULL;
	if(!pFnLogCurrencyGivenEvent)
		pFnLogCurrencyGivenEvent = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogCurrencyGivenEvent");

	Engine_LogCurrencyGivenEvent_Parms LogCurrencyGivenEvent_Parms;
	memcpy(&LogCurrencyGivenEvent_Parms.GameCurrencyType,&GameCurrencyType,0xC);
	LogCurrencyGivenEvent_Parms.GameCurrencyAmount = GameCurrencyAmount;
	pFnLogCurrencyGivenEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogCurrencyGivenEvent,NULL,&LogCurrencyGivenEvent_Parms,NULL);
	pFnLogCurrencyGivenEvent->FunctionFlags |= 0x400;
}

struct Engine_EndSession_Parms
{
};

void UAnalyticEventsBase::EndSession()
{
	static UFieldFunc* pFnEndSession = NULL;
	if(!pFnEndSession)
		pFnEndSession = UObject::FindFunction("Function Engine.AnalyticEventsBase.EndSession");

	Engine_EndSession_Parms EndSession_Parms;
	pFnEndSession->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEndSession,NULL,&EndSession_Parms,NULL);
	pFnEndSession->FunctionFlags |= 0x400;
}

struct Engine_Init_Parms
{
};

void UAnalyticEventsBase::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.AnalyticEventsBase.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_LogItemPurchaseEvent_Parms
{
	struct FString                                     ItemId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Currency;                                         		// 0x00000C (0x000C)              
	int                                                PerItemCost;                                      		// 0x000018 (0x0004)              
	int                                                ItemQuantity;                                     		// 0x00001C (0x0004)              
};

void UAnalyticEventsBase::LogItemPurchaseEvent(struct FString ItemId,struct FString Currency,int PerItemCost,int ItemQuantity)
{
	static UFieldFunc* pFnLogItemPurchaseEvent = NULL;
	if(!pFnLogItemPurchaseEvent)
		pFnLogItemPurchaseEvent = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogItemPurchaseEvent");

	Engine_LogItemPurchaseEvent_Parms LogItemPurchaseEvent_Parms;
	memcpy(&LogItemPurchaseEvent_Parms.ItemId,&ItemId,0xC);
	memcpy(&LogItemPurchaseEvent_Parms.Currency,&Currency,0xC);
	LogItemPurchaseEvent_Parms.PerItemCost = PerItemCost;
	LogItemPurchaseEvent_Parms.ItemQuantity = ItemQuantity;
	pFnLogItemPurchaseEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogItemPurchaseEvent,NULL,&LogItemPurchaseEvent_Parms,NULL);
	pFnLogItemPurchaseEvent->FunctionFlags |= 0x400;
}

struct Engine_SetUserId_Parms
{
	struct FString                                     NewUserId;                                        		// 0x000000 (0x000C)              
};

void UAnalyticEventsBase::SetUserId(struct FString NewUserId)
{
	static UFieldFunc* pFnSetUserId = NULL;
	if(!pFnSetUserId)
		pFnSetUserId = UObject::FindFunction("Function Engine.AnalyticEventsBase.SetUserId");

	Engine_SetUserId_Parms SetUserId_Parms;
	memcpy(&SetUserId_Parms.NewUserId,&NewUserId,0xC);
	pFnSetUserId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSetUserId,NULL,&SetUserId_Parms,NULL);
	pFnSetUserId->FunctionFlags |= 0x400;
}

struct Engine_EndStringEventParam_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
	struct FString                                     ParamName;                                        		// 0x00000C (0x000C)              
	struct FString                                     ParamValue;                                       		// 0x000018 (0x000C)              
};

void UAnalyticEventsBase::EndStringEventParam(struct FString EventName,struct FString ParamName,struct FString ParamValue)
{
	static UFieldFunc* pFnEndStringEventParam = NULL;
	if(!pFnEndStringEventParam)
		pFnEndStringEventParam = UObject::FindFunction("Function Engine.AnalyticEventsBase.EndStringEventParam");

	Engine_EndStringEventParam_Parms EndStringEventParam_Parms;
	memcpy(&EndStringEventParam_Parms.EventName,&EventName,0xC);
	memcpy(&EndStringEventParam_Parms.ParamName,&ParamName,0xC);
	memcpy(&EndStringEventParam_Parms.ParamValue,&ParamValue,0xC);
	pFnEndStringEventParam->FunctionFlags |= ~0x400;
	ProcessEvent(pFnEndStringEventParam,NULL,&EndStringEventParam_Parms,NULL);
	pFnEndStringEventParam->FunctionFlags |= 0x400;
}

struct Engine_LogStringEvent_Parms
{
	struct FString                                     EventName;                                        		// 0x000000 (0x000C)              
	unsigned long                                      bTimed : 1;                                       		// 0x00000C (0x0004) [0x00000001] 
};

void UAnalyticEventsBase::LogStringEvent(struct FString EventName,bool bTimed)
{
	static UFieldFunc* pFnLogStringEvent = NULL;
	if(!pFnLogStringEvent)
		pFnLogStringEvent = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogStringEvent");

	Engine_LogStringEvent_Parms LogStringEvent_Parms;
	memcpy(&LogStringEvent_Parms.EventName,&EventName,0xC);
	LogStringEvent_Parms.bTimed = bTimed;
	pFnLogStringEvent->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogStringEvent,NULL,&LogStringEvent_Parms,NULL);
	pFnLogStringEvent->FunctionFlags |= 0x400;
}

struct Engine_LogUserAttributeUpdate_Parms
{
	struct FString                                     AttributeName;                                    		// 0x000000 (0x000C)              
	struct FString                                     AttributeValue;                                   		// 0x00000C (0x000C)              
};

void UAnalyticEventsBase::LogUserAttributeUpdate(struct FString AttributeName,struct FString AttributeValue)
{
	static UFieldFunc* pFnLogUserAttributeUpdate = NULL;
	if(!pFnLogUserAttributeUpdate)
		pFnLogUserAttributeUpdate = UObject::FindFunction("Function Engine.AnalyticEventsBase.LogUserAttributeUpdate");

	Engine_LogUserAttributeUpdate_Parms LogUserAttributeUpdate_Parms;
	memcpy(&LogUserAttributeUpdate_Parms.AttributeName,&AttributeName,0xC);
	memcpy(&LogUserAttributeUpdate_Parms.AttributeValue,&AttributeValue,0xC);
	pFnLogUserAttributeUpdate->FunctionFlags |= ~0x400;
	ProcessEvent(pFnLogUserAttributeUpdate,NULL,&LogUserAttributeUpdate_Parms,NULL);
	pFnLogUserAttributeUpdate->FunctionFlags |= 0x400;
}

struct Engine_WasLaunchedViaNotification_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UAppNotificationsBase::WasLaunchedViaNotification()
{
	static UFieldFunc* pFnWasLaunchedViaNotification = NULL;
	if(!pFnWasLaunchedViaNotification)
		pFnWasLaunchedViaNotification = UObject::FindFunction("Function Engine.AppNotificationsBase.WasLaunchedViaNotification");

	Engine_WasLaunchedViaNotification_Parms WasLaunchedViaNotification_Parms;
	ProcessEvent(pFnWasLaunchedViaNotification,NULL,&WasLaunchedViaNotification_Parms,NULL);
	return WasLaunchedViaNotification_Parms.ReturnValue;
}

struct Engine_OnReceivedRemoteNotification_Parms
{
	struct FNotificationInfo                           Notification;                                     		// 0x000000 (0x0020)              
	unsigned long                                      bWasAppActive : 1;                                		// 0x000020 (0x0004) [0x00000001] 
};

void UAppNotificationsBase::OnReceivedRemoteNotification(struct FNotificationInfo* Notification,bool bWasAppActive)
{
	static UFieldFunc* pFnOnReceivedRemoteNotification = NULL;
	if(!pFnOnReceivedRemoteNotification)
		pFnOnReceivedRemoteNotification = UObject::FindFunction("Function Engine.AppNotificationsBase.OnReceivedRemoteNotification");

	Engine_OnReceivedRemoteNotification_Parms OnReceivedRemoteNotification_Parms;
	OnReceivedRemoteNotification_Parms.bWasAppActive = bWasAppActive;
	ProcessEvent(pFnOnReceivedRemoteNotification,NULL,&OnReceivedRemoteNotification_Parms,NULL);
	if(Notification)
		memcpy(Notification,&OnReceivedRemoteNotification_Parms.Notification,0x20);
}

struct Engine_DebugLogNotification_Parms
{
	struct FNotificationInfo                           Notification;                                     		// 0x000000 (0x0020)              
	//int                                                Idx;                                              		// 0x000020 (0x0004)              
};

void UAppNotificationsBase::DebugLogNotification(struct FNotificationInfo* Notification)
{
	static UFieldFunc* pFnDebugLogNotification = NULL;
	if(!pFnDebugLogNotification)
		pFnDebugLogNotification = UObject::FindFunction("Function Engine.AppNotificationsBase.DebugLogNotification");

	Engine_DebugLogNotification_Parms DebugLogNotification_Parms;
	ProcessEvent(pFnDebugLogNotification,NULL,&DebugLogNotification_Parms,NULL);
	if(Notification)
		memcpy(Notification,&DebugLogNotification_Parms.Notification,0x20);
}

struct Engine_CancelAllScheduledLocalNotifications_Parms
{
};

void UAppNotificationsBase::CancelAllScheduledLocalNotifications()
{
	static UFieldFunc* pFnCancelAllScheduledLocalNotifications = NULL;
	if(!pFnCancelAllScheduledLocalNotifications)
		pFnCancelAllScheduledLocalNotifications = UObject::FindFunction("Function Engine.AppNotificationsBase.CancelAllScheduledLocalNotifications");

	Engine_CancelAllScheduledLocalNotifications_Parms CancelAllScheduledLocalNotifications_Parms;
	pFnCancelAllScheduledLocalNotifications->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCancelAllScheduledLocalNotifications,NULL,&CancelAllScheduledLocalNotifications_Parms,NULL);
	pFnCancelAllScheduledLocalNotifications->FunctionFlags |= 0x400;
}

struct Engine_ScheduleLocalNotification_Parms
{
	struct FNotificationInfo                           Notification;                                     		// 0x000000 (0x0020)              
	int                                                StartOffsetSeconds;                               		// 0x000020 (0x0004)              
};

void UAppNotificationsBase::ScheduleLocalNotification(struct FNotificationInfo* Notification,int StartOffsetSeconds)
{
	static UFieldFunc* pFnScheduleLocalNotification = NULL;
	if(!pFnScheduleLocalNotification)
		pFnScheduleLocalNotification = UObject::FindFunction("Function Engine.AppNotificationsBase.ScheduleLocalNotification");

	Engine_ScheduleLocalNotification_Parms ScheduleLocalNotification_Parms;
	ScheduleLocalNotification_Parms.StartOffsetSeconds = StartOffsetSeconds;
	pFnScheduleLocalNotification->FunctionFlags |= ~0x400;
	ProcessEvent(pFnScheduleLocalNotification,NULL,&ScheduleLocalNotification_Parms,NULL);
	pFnScheduleLocalNotification->FunctionFlags |= 0x400;
	if(Notification)
		memcpy(Notification,&ScheduleLocalNotification_Parms.Notification,0x20);
}

struct Engine_OnReceivedLocalNotification_Parms
{
	struct FNotificationInfo                           Notification;                                     		// 0x000000 (0x0020)              
	unsigned long                                      bWasAppActive : 1;                                		// 0x000020 (0x0004) [0x00000001] 
};

void UAppNotificationsBase::OnReceivedLocalNotification(struct FNotificationInfo* Notification,bool bWasAppActive)
{
	static UFieldFunc* pFnOnReceivedLocalNotification = NULL;
	if(!pFnOnReceivedLocalNotification)
		pFnOnReceivedLocalNotification = UObject::FindFunction("Function Engine.AppNotificationsBase.OnReceivedLocalNotification");

	Engine_OnReceivedLocalNotification_Parms OnReceivedLocalNotification_Parms;
	OnReceivedLocalNotification_Parms.bWasAppActive = bWasAppActive;
	ProcessEvent(pFnOnReceivedLocalNotification,NULL,&OnReceivedLocalNotification_Parms,NULL);
	if(Notification)
		memcpy(Notification,&OnReceivedLocalNotification_Parms.Notification,0x20);
}

struct Engine_Init_Parms
{
};

void UAppNotificationsBase::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.AppNotificationsBase.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_DeleteAllCloudDocuments_Parms
{
};

void UCloudStorageBase::DeleteAllCloudDocuments()
{
	static UFieldFunc* pFnDeleteAllCloudDocuments = NULL;
	if(!pFnDeleteAllCloudDocuments)
		pFnDeleteAllCloudDocuments = UObject::FindFunction("Function Engine.CloudStorageBase.DeleteAllCloudDocuments");

	Engine_DeleteAllCloudDocuments_Parms DeleteAllCloudDocuments_Parms;
	pFnDeleteAllCloudDocuments->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDeleteAllCloudDocuments,NULL,&DeleteAllCloudDocuments_Parms,NULL);
	pFnDeleteAllCloudDocuments->FunctionFlags |= 0x400;
}

struct Engine_IsStillWritingFiles_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::IsStillWritingFiles()
{
	static UFieldFunc* pFnIsStillWritingFiles = NULL;
	if(!pFnIsStillWritingFiles)
		pFnIsStillWritingFiles = UObject::FindFunction("Function Engine.CloudStorageBase.IsStillWritingFiles");

	Engine_IsStillWritingFiles_Parms IsStillWritingFiles_Parms;
	pFnIsStillWritingFiles->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsStillWritingFiles,NULL,&IsStillWritingFiles_Parms,NULL);
	pFnIsStillWritingFiles->FunctionFlags |= 0x400;
	return IsStillWritingFiles_Parms.ReturnValue;
}

struct Engine_GetCloudDocumentName_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UCloudStorageBase::GetCloudDocumentName(int Index)
{
	static UFieldFunc* pFnGetCloudDocumentName = NULL;
	if(!pFnGetCloudDocumentName)
		pFnGetCloudDocumentName = UObject::FindFunction("Function Engine.CloudStorageBase.GetCloudDocumentName");

	Engine_GetCloudDocumentName_Parms GetCloudDocumentName_Parms;
	GetCloudDocumentName_Parms.Index = Index;
	pFnGetCloudDocumentName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetCloudDocumentName,NULL,&GetCloudDocumentName_Parms,NULL);
	pFnGetCloudDocumentName->FunctionFlags |= 0x400;
	return GetCloudDocumentName_Parms.ReturnValue;
}

struct Engine_QueryForCloudDocuments_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::QueryForCloudDocuments()
{
	static UFieldFunc* pFnQueryForCloudDocuments = NULL;
	if(!pFnQueryForCloudDocuments)
		pFnQueryForCloudDocuments = UObject::FindFunction("Function Engine.CloudStorageBase.QueryForCloudDocuments");

	Engine_QueryForCloudDocuments_Parms QueryForCloudDocuments_Parms;
	pFnQueryForCloudDocuments->FunctionFlags |= ~0x400;
	ProcessEvent(pFnQueryForCloudDocuments,NULL,&QueryForCloudDocuments_Parms,NULL);
	pFnQueryForCloudDocuments->FunctionFlags |= 0x400;
	return QueryForCloudDocuments_Parms.ReturnValue;
}

struct Engine_SaveDocumentWithObject_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class UObject*                                     ObjectData;                                       		// 0x000004 (0x0004)              
	int                                                SaveVersion;                                      		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UCloudStorageBase::SaveDocumentWithObject(int Index,class UObject* ObjectData,int SaveVersion)
{
	static UFieldFunc* pFnSaveDocumentWithObject = NULL;
	if(!pFnSaveDocumentWithObject)
		pFnSaveDocumentWithObject = UObject::FindFunction("Function Engine.CloudStorageBase.SaveDocumentWithObject");

	Engine_SaveDocumentWithObject_Parms SaveDocumentWithObject_Parms;
	SaveDocumentWithObject_Parms.Index = Index;
	SaveDocumentWithObject_Parms.ObjectData = ObjectData;
	SaveDocumentWithObject_Parms.SaveVersion = SaveVersion;
	pFnSaveDocumentWithObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveDocumentWithObject,NULL,&SaveDocumentWithObject_Parms,NULL);
	pFnSaveDocumentWithObject->FunctionFlags |= 0x400;
	return SaveDocumentWithObject_Parms.ReturnValue;
}

struct Engine_ReadKeyValueFromLocalStore_Parms
{
	struct FString                                     KeyName;                                          		// 0x000000 (0x000C)              
	unsigned char                                      Type;                                             		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	struct FPlatformInterfaceDelegateResult            Value;                                            		// 0x000010 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000044 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::ReadKeyValueFromLocalStore(struct FString KeyName,unsigned char Type,struct FPlatformInterfaceDelegateResult* Value)
{
	static UFieldFunc* pFnReadKeyValueFromLocalStore = NULL;
	if(!pFnReadKeyValueFromLocalStore)
		pFnReadKeyValueFromLocalStore = UObject::FindFunction("Function Engine.CloudStorageBase.ReadKeyValueFromLocalStore");

	Engine_ReadKeyValueFromLocalStore_Parms ReadKeyValueFromLocalStore_Parms;
	memcpy(&ReadKeyValueFromLocalStore_Parms.KeyName,&KeyName,0xC);
	ReadKeyValueFromLocalStore_Parms.Type = Type;
	pFnReadKeyValueFromLocalStore->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReadKeyValueFromLocalStore,NULL,&ReadKeyValueFromLocalStore_Parms,NULL);
	pFnReadKeyValueFromLocalStore->FunctionFlags |= 0x400;
	if(Value)
		memcpy(Value,&ReadKeyValueFromLocalStore_Parms.Value,0x34);
	return ReadKeyValueFromLocalStore_Parms.ReturnValue;
}

struct Engine_GetNumCloudDocuments_Parms
{
	unsigned long                                      bIsForConflict : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	int                                                ReturnValue;                                      		// 0x000004 (0x0004)              
};

int UCloudStorageBase::GetNumCloudDocuments(bool bIsForConflict)
{
	static UFieldFunc* pFnGetNumCloudDocuments = NULL;
	if(!pFnGetNumCloudDocuments)
		pFnGetNumCloudDocuments = UObject::FindFunction("Function Engine.CloudStorageBase.GetNumCloudDocuments");

	Engine_GetNumCloudDocuments_Parms GetNumCloudDocuments_Parms;
	GetNumCloudDocuments_Parms.bIsForConflict = bIsForConflict;
	pFnGetNumCloudDocuments->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumCloudDocuments,NULL,&GetNumCloudDocuments_Parms,NULL);
	pFnGetNumCloudDocuments->FunctionFlags |= 0x400;
	return GetNumCloudDocuments_Parms.ReturnValue;
}

struct Engine_ParseDocumentAsBytes_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	TArray<unsigned char>                              ByteData;                                         		// 0x000004 (0x000C)              
	unsigned long                                      bIsForConflict : 1;                               		// 0x000010 (0x0004) [0x00000001] 
};

void UCloudStorageBase::ParseDocumentAsBytes(int Index,TArray<unsigned char>* ByteData,bool bIsForConflict)
{
	static UFieldFunc* pFnParseDocumentAsBytes = NULL;
	if(!pFnParseDocumentAsBytes)
		pFnParseDocumentAsBytes = UObject::FindFunction("Function Engine.CloudStorageBase.ParseDocumentAsBytes");

	Engine_ParseDocumentAsBytes_Parms ParseDocumentAsBytes_Parms;
	ParseDocumentAsBytes_Parms.Index = Index;
	ParseDocumentAsBytes_Parms.bIsForConflict = bIsForConflict;
	pFnParseDocumentAsBytes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnParseDocumentAsBytes,NULL,&ParseDocumentAsBytes_Parms,NULL);
	pFnParseDocumentAsBytes->FunctionFlags |= 0x400;
	if(ByteData)
		memcpy(ByteData,&ParseDocumentAsBytes_Parms.ByteData,0xC);
}

struct Engine_WriteKeyValue_Parms
{
	struct FString                                     KeyName;                                          		// 0x000000 (0x000C)              
	struct FPlatformInterfaceData                      Value;                                            		// 0x00000C (0x0030)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00003C (0x0004) [0x00000001] 
};

bool UCloudStorageBase::WriteKeyValue(struct FString KeyName,struct FPlatformInterfaceData* Value)
{
	static UFieldFunc* pFnWriteKeyValue = NULL;
	if(!pFnWriteKeyValue)
		pFnWriteKeyValue = UObject::FindFunction("Function Engine.CloudStorageBase.WriteKeyValue");

	Engine_WriteKeyValue_Parms WriteKeyValue_Parms;
	memcpy(&WriteKeyValue_Parms.KeyName,&KeyName,0xC);
	pFnWriteKeyValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnWriteKeyValue,NULL,&WriteKeyValue_Parms,NULL);
	pFnWriteKeyValue->FunctionFlags |= 0x400;
	if(Value)
		memcpy(Value,&WriteKeyValue_Parms.Value,0x30);
	return WriteKeyValue_Parms.ReturnValue;
}

struct Engine_ReadCloudDocument_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	unsigned long                                      bIsForConflict : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::ReadCloudDocument(int Index,bool bIsForConflict)
{
	static UFieldFunc* pFnReadCloudDocument = NULL;
	if(!pFnReadCloudDocument)
		pFnReadCloudDocument = UObject::FindFunction("Function Engine.CloudStorageBase.ReadCloudDocument");

	Engine_ReadCloudDocument_Parms ReadCloudDocument_Parms;
	ReadCloudDocument_Parms.Index = Index;
	ReadCloudDocument_Parms.bIsForConflict = bIsForConflict;
	pFnReadCloudDocument->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReadCloudDocument,NULL,&ReadCloudDocument_Parms,NULL);
	pFnReadCloudDocument->FunctionFlags |= 0x400;
	return ReadCloudDocument_Parms.ReturnValue;
}

struct Engine_WaitForWritesToFinish_Parms
{
	float                                              MaxTimeSeconds;                                   		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::WaitForWritesToFinish(float MaxTimeSeconds)
{
	static UFieldFunc* pFnWaitForWritesToFinish = NULL;
	if(!pFnWaitForWritesToFinish)
		pFnWaitForWritesToFinish = UObject::FindFunction("Function Engine.CloudStorageBase.WaitForWritesToFinish");

	Engine_WaitForWritesToFinish_Parms WaitForWritesToFinish_Parms;
	WaitForWritesToFinish_Parms.MaxTimeSeconds = MaxTimeSeconds;
	pFnWaitForWritesToFinish->FunctionFlags |= ~0x400;
	ProcessEvent(pFnWaitForWritesToFinish,NULL,&WaitForWritesToFinish_Parms,NULL);
	pFnWaitForWritesToFinish->FunctionFlags |= 0x400;
	return WaitForWritesToFinish_Parms.ReturnValue;
}

struct Engine_CreateCloudDocument_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UCloudStorageBase::CreateCloudDocument(struct FString Filename)
{
	static UFieldFunc* pFnCreateCloudDocument = NULL;
	if(!pFnCreateCloudDocument)
		pFnCreateCloudDocument = UObject::FindFunction("Function Engine.CloudStorageBase.CreateCloudDocument");

	Engine_CreateCloudDocument_Parms CreateCloudDocument_Parms;
	memcpy(&CreateCloudDocument_Parms.Filename,&Filename,0xC);
	pFnCreateCloudDocument->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCreateCloudDocument,NULL,&CreateCloudDocument_Parms,NULL);
	pFnCreateCloudDocument->FunctionFlags |= 0x400;
	return CreateCloudDocument_Parms.ReturnValue;
}

struct Engine_IsUsingLocalStorage_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::IsUsingLocalStorage()
{
	static UFieldFunc* pFnIsUsingLocalStorage = NULL;
	if(!pFnIsUsingLocalStorage)
		pFnIsUsingLocalStorage = UObject::FindFunction("Function Engine.CloudStorageBase.IsUsingLocalStorage");

	Engine_IsUsingLocalStorage_Parms IsUsingLocalStorage_Parms;
	pFnIsUsingLocalStorage->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsUsingLocalStorage,NULL,&IsUsingLocalStorage_Parms,NULL);
	pFnIsUsingLocalStorage->FunctionFlags |= 0x400;
	return IsUsingLocalStorage_Parms.ReturnValue;
}

struct Engine_UpgradeLocalStorageToCloud_Parms
{
	class UCloudStorageUpgradeHelper*                  UpgradeHelper;                                    		// 0x000000 (0x0008)              
	unsigned long                                      bForceSearchAgain : 1;                            		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UCloudStorageBase::UpgradeLocalStorageToCloud(class UCloudStorageUpgradeHelper* UpgradeHelper,bool bForceSearchAgain)
{
	static UFieldFunc* pFnUpgradeLocalStorageToCloud = NULL;
	if(!pFnUpgradeLocalStorageToCloud)
		pFnUpgradeLocalStorageToCloud = UObject::FindFunction("Function Engine.CloudStorageBase.UpgradeLocalStorageToCloud");

	Engine_UpgradeLocalStorageToCloud_Parms UpgradeLocalStorageToCloud_Parms;
	UpgradeLocalStorageToCloud_Parms.UpgradeHelper = UpgradeHelper;
	UpgradeLocalStorageToCloud_Parms.bForceSearchAgain = bForceSearchAgain;
	pFnUpgradeLocalStorageToCloud->FunctionFlags |= ~0x400;
	ProcessEvent(pFnUpgradeLocalStorageToCloud,NULL,&UpgradeLocalStorageToCloud_Parms,NULL);
	pFnUpgradeLocalStorageToCloud->FunctionFlags |= 0x400;
	return UpgradeLocalStorageToCloud_Parms.ReturnValue;
}

struct Engine_SaveDocumentWithBytes_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	TArray<unsigned char>                              ByteData;                                         		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::SaveDocumentWithBytes(int Index,TArray<unsigned char> ByteData)
{
	static UFieldFunc* pFnSaveDocumentWithBytes = NULL;
	if(!pFnSaveDocumentWithBytes)
		pFnSaveDocumentWithBytes = UObject::FindFunction("Function Engine.CloudStorageBase.SaveDocumentWithBytes");

	Engine_SaveDocumentWithBytes_Parms SaveDocumentWithBytes_Parms;
	SaveDocumentWithBytes_Parms.Index = Index;
	memcpy(&SaveDocumentWithBytes_Parms.ByteData,&ByteData,0xC);
	pFnSaveDocumentWithBytes->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveDocumentWithBytes,NULL,&SaveDocumentWithBytes_Parms,NULL);
	pFnSaveDocumentWithBytes->FunctionFlags |= 0x400;
	return SaveDocumentWithBytes_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
};

void UCloudStorageBase::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.CloudStorageBase.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_ResolveConflictWithNewestDocument_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::ResolveConflictWithNewestDocument()
{
	static UFieldFunc* pFnResolveConflictWithNewestDocument = NULL;
	if(!pFnResolveConflictWithNewestDocument)
		pFnResolveConflictWithNewestDocument = UObject::FindFunction("Function Engine.CloudStorageBase.ResolveConflictWithNewestDocument");

	Engine_ResolveConflictWithNewestDocument_Parms ResolveConflictWithNewestDocument_Parms;
	pFnResolveConflictWithNewestDocument->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResolveConflictWithNewestDocument,NULL,&ResolveConflictWithNewestDocument_Parms,NULL);
	pFnResolveConflictWithNewestDocument->FunctionFlags |= 0x400;
	return ResolveConflictWithNewestDocument_Parms.ReturnValue;
}

struct Engine_ResolveConflictWithVersionIndex_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::ResolveConflictWithVersionIndex(int Index)
{
	static UFieldFunc* pFnResolveConflictWithVersionIndex = NULL;
	if(!pFnResolveConflictWithVersionIndex)
		pFnResolveConflictWithVersionIndex = UObject::FindFunction("Function Engine.CloudStorageBase.ResolveConflictWithVersionIndex");

	Engine_ResolveConflictWithVersionIndex_Parms ResolveConflictWithVersionIndex_Parms;
	ResolveConflictWithVersionIndex_Parms.Index = Index;
	pFnResolveConflictWithVersionIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnResolveConflictWithVersionIndex,NULL,&ResolveConflictWithVersionIndex_Parms,NULL);
	pFnResolveConflictWithVersionIndex->FunctionFlags |= 0x400;
	return ResolveConflictWithVersionIndex_Parms.ReturnValue;
}

struct Engine_ReadKeyValue_Parms
{
	struct FString                                     KeyName;                                          		// 0x000000 (0x000C)              
	unsigned char                                      Type;                                             		// 0x00000C (0x0001)              
	unsigned char                                      _0x00000D[0x3];                                   		// 0x00000D (0x0003) ALIGNEMENT
	struct FPlatformInterfaceDelegateResult            Value;                                            		// 0x000010 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000044 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::ReadKeyValue(struct FString KeyName,unsigned char Type,struct FPlatformInterfaceDelegateResult* Value)
{
	static UFieldFunc* pFnReadKeyValue = NULL;
	if(!pFnReadKeyValue)
		pFnReadKeyValue = UObject::FindFunction("Function Engine.CloudStorageBase.ReadKeyValue");

	Engine_ReadKeyValue_Parms ReadKeyValue_Parms;
	memcpy(&ReadKeyValue_Parms.KeyName,&KeyName,0xC);
	ReadKeyValue_Parms.Type = Type;
	pFnReadKeyValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnReadKeyValue,NULL,&ReadKeyValue_Parms,NULL);
	pFnReadKeyValue->FunctionFlags |= 0x400;
	if(Value)
		memcpy(Value,&ReadKeyValue_Parms.Value,0x34);
	return ReadKeyValue_Parms.ReturnValue;
}

struct Engine_WriteCloudDocument_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::WriteCloudDocument(int Index)
{
	static UFieldFunc* pFnWriteCloudDocument = NULL;
	if(!pFnWriteCloudDocument)
		pFnWriteCloudDocument = UObject::FindFunction("Function Engine.CloudStorageBase.WriteCloudDocument");

	Engine_WriteCloudDocument_Parms WriteCloudDocument_Parms;
	WriteCloudDocument_Parms.Index = Index;
	pFnWriteCloudDocument->FunctionFlags |= ~0x400;
	ProcessEvent(pFnWriteCloudDocument,NULL,&WriteCloudDocument_Parms,NULL);
	pFnWriteCloudDocument->FunctionFlags |= 0x400;
	return WriteCloudDocument_Parms.ReturnValue;
}

struct Engine_SaveDocumentWithString_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	struct FString                                     StringData;                                       		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UCloudStorageBase::SaveDocumentWithString(int Index,struct FString StringData)
{
	static UFieldFunc* pFnSaveDocumentWithString = NULL;
	if(!pFnSaveDocumentWithString)
		pFnSaveDocumentWithString = UObject::FindFunction("Function Engine.CloudStorageBase.SaveDocumentWithString");

	Engine_SaveDocumentWithString_Parms SaveDocumentWithString_Parms;
	SaveDocumentWithString_Parms.Index = Index;
	memcpy(&SaveDocumentWithString_Parms.StringData,&StringData,0xC);
	pFnSaveDocumentWithString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnSaveDocumentWithString,NULL,&SaveDocumentWithString_Parms,NULL);
	pFnSaveDocumentWithString->FunctionFlags |= 0x400;
	return SaveDocumentWithString_Parms.ReturnValue;
}

struct Engine_ParseDocumentAsString_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	unsigned long                                      bIsForConflict : 1;                               		// 0x000004 (0x0004) [0x00000001] 
	struct FString                                     ReturnValue;                                      		// 0x000008 (0x000C)              
};

struct FString UCloudStorageBase::ParseDocumentAsString(int Index,bool bIsForConflict)
{
	static UFieldFunc* pFnParseDocumentAsString = NULL;
	if(!pFnParseDocumentAsString)
		pFnParseDocumentAsString = UObject::FindFunction("Function Engine.CloudStorageBase.ParseDocumentAsString");

	Engine_ParseDocumentAsString_Parms ParseDocumentAsString_Parms;
	ParseDocumentAsString_Parms.Index = Index;
	ParseDocumentAsString_Parms.bIsForConflict = bIsForConflict;
	pFnParseDocumentAsString->FunctionFlags |= ~0x400;
	ProcessEvent(pFnParseDocumentAsString,NULL,&ParseDocumentAsString_Parms,NULL);
	pFnParseDocumentAsString->FunctionFlags |= 0x400;
	return ParseDocumentAsString_Parms.ReturnValue;
}

struct Engine_ParseDocumentAsObject_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class UClass*                                      ObjectClass;                                      		// 0x000004 (0x0004)              
	int                                                ExpectedVersion;                                  		// 0x000008 (0x0004)              
	unsigned long                                      bIsForConflict : 1;                               		// 0x00000C (0x0004) [0x00000001] 
	class UObject*                                     ReturnValue;                                      		// 0x000010 (0x0004)              
};

class UObject* UCloudStorageBase::ParseDocumentAsObject(int Index,class UClass* ObjectClass,int ExpectedVersion,bool bIsForConflict)
{
	static UFieldFunc* pFnParseDocumentAsObject = NULL;
	if(!pFnParseDocumentAsObject)
		pFnParseDocumentAsObject = UObject::FindFunction("Function Engine.CloudStorageBase.ParseDocumentAsObject");

	Engine_ParseDocumentAsObject_Parms ParseDocumentAsObject_Parms;
	ParseDocumentAsObject_Parms.Index = Index;
	ParseDocumentAsObject_Parms.ObjectClass = ObjectClass;
	ParseDocumentAsObject_Parms.ExpectedVersion = ExpectedVersion;
	ParseDocumentAsObject_Parms.bIsForConflict = bIsForConflict;
	pFnParseDocumentAsObject->FunctionFlags |= ~0x400;
	ProcessEvent(pFnParseDocumentAsObject,NULL,&ParseDocumentAsObject_Parms,NULL);
	pFnParseDocumentAsObject->FunctionFlags |= 0x400;
	return ParseDocumentAsObject_Parms.ReturnValue;
}

struct Engine_Disconnect_Parms
{
};

void UFacebookIntegration::Disconnect()
{
	static UFieldFunc* pFnDisconnect = NULL;
	if(!pFnDisconnect)
		pFnDisconnect = UObject::FindFunction("Function Engine.FacebookIntegration.Disconnect");

	Engine_Disconnect_Parms Disconnect_Parms;
	pFnDisconnect->FunctionFlags |= ~0x400;
	ProcessEvent(pFnDisconnect,NULL,&Disconnect_Parms,NULL);
	pFnDisconnect->FunctionFlags |= 0x400;
}

struct Engine_IsAuthorized_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UFacebookIntegration::IsAuthorized()
{
	static UFieldFunc* pFnIsAuthorized = NULL;
	if(!pFnIsAuthorized)
		pFnIsAuthorized = UObject::FindFunction("Function Engine.FacebookIntegration.IsAuthorized");

	Engine_IsAuthorized_Parms IsAuthorized_Parms;
	pFnIsAuthorized->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsAuthorized,NULL,&IsAuthorized_Parms,NULL);
	pFnIsAuthorized->FunctionFlags |= 0x400;
	return IsAuthorized_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UFacebookIntegration::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.FacebookIntegration.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
	return Init_Parms.ReturnValue;
}

struct Engine_FacebookRequest_Parms
{
	struct FString                                     GraphRequest;                                     		// 0x000000 (0x000C)              
};

void UFacebookIntegration::FacebookRequest(struct FString GraphRequest)
{
	static UFieldFunc* pFnFacebookRequest = NULL;
	if(!pFnFacebookRequest)
		pFnFacebookRequest = UObject::FindFunction("Function Engine.FacebookIntegration.FacebookRequest");

	Engine_FacebookRequest_Parms FacebookRequest_Parms;
	memcpy(&FacebookRequest_Parms.GraphRequest,&GraphRequest,0xC);
	pFnFacebookRequest->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFacebookRequest,NULL,&FacebookRequest_Parms,NULL);
	pFnFacebookRequest->FunctionFlags |= 0x400;
}

struct Engine_FacebookDialog_Parms
{
	struct FString                                     Action;                                           		// 0x000000 (0x000C)              
	TArray<struct FString>                             ParamKeysAndValues;                               		// 0x00000C (0x000C)              
};

void UFacebookIntegration::FacebookDialog(struct FString Action,TArray<struct FString> ParamKeysAndValues)
{
	static UFieldFunc* pFnFacebookDialog = NULL;
	if(!pFnFacebookDialog)
		pFnFacebookDialog = UObject::FindFunction("Function Engine.FacebookIntegration.FacebookDialog");

	Engine_FacebookDialog_Parms FacebookDialog_Parms;
	memcpy(&FacebookDialog_Parms.Action,&Action,0xC);
	memcpy(&FacebookDialog_Parms.ParamKeysAndValues,&ParamKeysAndValues,0xC);
	pFnFacebookDialog->FunctionFlags |= ~0x400;
	ProcessEvent(pFnFacebookDialog,NULL,&FacebookDialog_Parms,NULL);
	pFnFacebookDialog->FunctionFlags |= 0x400;
}

struct Engine_Authorize_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UFacebookIntegration::Authorize()
{
	static UFieldFunc* pFnAuthorize = NULL;
	if(!pFnAuthorize)
		pFnAuthorize = UObject::FindFunction("Function Engine.FacebookIntegration.Authorize");

	Engine_Authorize_Parms Authorize_Parms;
	pFnAuthorize->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAuthorize,NULL,&Authorize_Parms,NULL);
	pFnAuthorize->FunctionFlags |= 0x400;
	return Authorize_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
};

void UInAppMessageBase::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.InAppMessageBase.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_ShowInAppEmailUI_Parms
{
	struct FString                                     InitialSubject;                                   		// 0x000000 (0x000C)              
	struct FString                                     InitialMessage;                                   		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UInAppMessageBase::ShowInAppEmailUI(struct FString InitialSubject,struct FString InitialMessage)
{
	static UFieldFunc* pFnShowInAppEmailUI = NULL;
	if(!pFnShowInAppEmailUI)
		pFnShowInAppEmailUI = UObject::FindFunction("Function Engine.InAppMessageBase.ShowInAppEmailUI");

	Engine_ShowInAppEmailUI_Parms ShowInAppEmailUI_Parms;
	memcpy(&ShowInAppEmailUI_Parms.InitialSubject,&InitialSubject,0xC);
	memcpy(&ShowInAppEmailUI_Parms.InitialMessage,&InitialMessage,0xC);
	pFnShowInAppEmailUI->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShowInAppEmailUI,NULL,&ShowInAppEmailUI_Parms,NULL);
	pFnShowInAppEmailUI->FunctionFlags |= 0x400;
	return ShowInAppEmailUI_Parms.ReturnValue;
}

struct Engine_ShowInAppSMSUI_Parms
{
	struct FString                                     InitialMessage;                                   		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UInAppMessageBase::ShowInAppSMSUI(struct FString InitialMessage)
{
	static UFieldFunc* pFnShowInAppSMSUI = NULL;
	if(!pFnShowInAppSMSUI)
		pFnShowInAppSMSUI = UObject::FindFunction("Function Engine.InAppMessageBase.ShowInAppSMSUI");

	Engine_ShowInAppSMSUI_Parms ShowInAppSMSUI_Parms;
	memcpy(&ShowInAppSMSUI_Parms.InitialMessage,&InitialMessage,0xC);
	pFnShowInAppSMSUI->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShowInAppSMSUI,NULL,&ShowInAppSMSUI_Parms,NULL);
	pFnShowInAppSMSUI->FunctionFlags |= 0x400;
	return ShowInAppSMSUI_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
};

void UInGameAdManager::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.InGameAdManager.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_HideBanner_Parms
{
};

void UInGameAdManager::HideBanner()
{
	static UFieldFunc* pFnHideBanner = NULL;
	if(!pFnHideBanner)
		pFnHideBanner = UObject::FindFunction("Function Engine.InGameAdManager.HideBanner");

	Engine_HideBanner_Parms HideBanner_Parms;
	pFnHideBanner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnHideBanner,NULL,&HideBanner_Parms,NULL);
	pFnHideBanner->FunctionFlags |= 0x400;
}

struct Engine_SetPauseWhileAdOpen_Parms
{
	unsigned long                                      bShouldPause : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void UInGameAdManager::SetPauseWhileAdOpen(bool bShouldPause)
{
	static UFieldFunc* pFnSetPauseWhileAdOpen = NULL;
	if(!pFnSetPauseWhileAdOpen)
		pFnSetPauseWhileAdOpen = UObject::FindFunction("Function Engine.InGameAdManager.SetPauseWhileAdOpen");

	Engine_SetPauseWhileAdOpen_Parms SetPauseWhileAdOpen_Parms;
	SetPauseWhileAdOpen_Parms.bShouldPause = bShouldPause;
	ProcessEvent(pFnSetPauseWhileAdOpen,NULL,&SetPauseWhileAdOpen_Parms,NULL);
}

struct Engine_ShowBanner_Parms
{
	unsigned long                                      bShowBottomOfScreen : 1;                          		// 0x000000 (0x0004) [0x00000001] 
};

void UInGameAdManager::ShowBanner(bool bShowBottomOfScreen)
{
	static UFieldFunc* pFnShowBanner = NULL;
	if(!pFnShowBanner)
		pFnShowBanner = UObject::FindFunction("Function Engine.InGameAdManager.ShowBanner");

	Engine_ShowBanner_Parms ShowBanner_Parms;
	ShowBanner_Parms.bShowBottomOfScreen = bShowBottomOfScreen;
	pFnShowBanner->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShowBanner,NULL,&ShowBanner_Parms,NULL);
	pFnShowBanner->FunctionFlags |= 0x400;
}

struct Engine_ForceCloseAd_Parms
{
};

void UInGameAdManager::ForceCloseAd()
{
	static UFieldFunc* pFnForceCloseAd = NULL;
	if(!pFnForceCloseAd)
		pFnForceCloseAd = UObject::FindFunction("Function Engine.InGameAdManager.ForceCloseAd");

	Engine_ForceCloseAd_Parms ForceCloseAd_Parms;
	pFnForceCloseAd->FunctionFlags |= ~0x400;
	ProcessEvent(pFnForceCloseAd,NULL,&ForceCloseAd_Parms,NULL);
	pFnForceCloseAd->FunctionFlags |= 0x400;
}

struct Engine_Init_Parms
{
};

void UMicroTransactionBase::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.MicroTransactionBase.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_BeginPurchase_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UMicroTransactionBase::BeginPurchase(int Index)
{
	static UFieldFunc* pFnBeginPurchase = NULL;
	if(!pFnBeginPurchase)
		pFnBeginPurchase = UObject::FindFunction("Function Engine.MicroTransactionBase.BeginPurchase");

	Engine_BeginPurchase_Parms BeginPurchase_Parms;
	BeginPurchase_Parms.Index = Index;
	pFnBeginPurchase->FunctionFlags |= ~0x400;
	ProcessEvent(pFnBeginPurchase,NULL,&BeginPurchase_Parms,NULL);
	pFnBeginPurchase->FunctionFlags |= 0x400;
	return BeginPurchase_Parms.ReturnValue;
}

struct Engine_GetProductIndex_Parms
{
	struct FString                                     Identifier;                                       		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UMicroTransactionBase::GetProductIndex(struct FString Identifier)
{
	static UFieldFunc* pFnGetProductIndex = NULL;
	if(!pFnGetProductIndex)
		pFnGetProductIndex = UObject::FindFunction("Function Engine.MicroTransactionBase.GetProductIndex");

	Engine_GetProductIndex_Parms GetProductIndex_Parms;
	memcpy(&GetProductIndex_Parms.Identifier,&Identifier,0xC);
	pFnGetProductIndex->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetProductIndex,NULL,&GetProductIndex_Parms,NULL);
	pFnGetProductIndex->FunctionFlags |= 0x400;
	return GetProductIndex_Parms.ReturnValue;
}

struct Engine_IsAllowedToMakePurchases_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UMicroTransactionBase::IsAllowedToMakePurchases()
{
	static UFieldFunc* pFnIsAllowedToMakePurchases = NULL;
	if(!pFnIsAllowedToMakePurchases)
		pFnIsAllowedToMakePurchases = UObject::FindFunction("Function Engine.MicroTransactionBase.IsAllowedToMakePurchases");

	Engine_IsAllowedToMakePurchases_Parms IsAllowedToMakePurchases_Parms;
	pFnIsAllowedToMakePurchases->FunctionFlags |= ~0x400;
	ProcessEvent(pFnIsAllowedToMakePurchases,NULL,&IsAllowedToMakePurchases_Parms,NULL);
	pFnIsAllowedToMakePurchases->FunctionFlags |= 0x400;
	return IsAllowedToMakePurchases_Parms.ReturnValue;
}

struct Engine_QueryForAvailablePurchases_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UMicroTransactionBase::QueryForAvailablePurchases()
{
	static UFieldFunc* pFnQueryForAvailablePurchases = NULL;
	if(!pFnQueryForAvailablePurchases)
		pFnQueryForAvailablePurchases = UObject::FindFunction("Function Engine.MicroTransactionBase.QueryForAvailablePurchases");

	Engine_QueryForAvailablePurchases_Parms QueryForAvailablePurchases_Parms;
	pFnQueryForAvailablePurchases->FunctionFlags |= ~0x400;
	ProcessEvent(pFnQueryForAvailablePurchases,NULL,&QueryForAvailablePurchases_Parms,NULL);
	pFnQueryForAvailablePurchases->FunctionFlags |= 0x400;
	return QueryForAvailablePurchases_Parms.ReturnValue;
}

struct Engine_GetAccountId_Parms
{
	int                                                AccountIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UTwitterIntegrationBase::GetAccountId(int AccountIndex)
{
	static UFieldFunc* pFnGetAccountId = NULL;
	if(!pFnGetAccountId)
		pFnGetAccountId = UObject::FindFunction("Function Engine.TwitterIntegrationBase.GetAccountId");

	Engine_GetAccountId_Parms GetAccountId_Parms;
	GetAccountId_Parms.AccountIndex = AccountIndex;
	pFnGetAccountId->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAccountId,NULL,&GetAccountId_Parms,NULL);
	pFnGetAccountId->FunctionFlags |= 0x400;
	return GetAccountId_Parms.ReturnValue;
}

struct Engine_CanShowTweetUI_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UTwitterIntegrationBase::CanShowTweetUI()
{
	static UFieldFunc* pFnCanShowTweetUI = NULL;
	if(!pFnCanShowTweetUI)
		pFnCanShowTweetUI = UObject::FindFunction("Function Engine.TwitterIntegrationBase.CanShowTweetUI");

	Engine_CanShowTweetUI_Parms CanShowTweetUI_Parms;
	pFnCanShowTweetUI->FunctionFlags |= ~0x400;
	ProcessEvent(pFnCanShowTweetUI,NULL,&CanShowTweetUI_Parms,NULL);
	pFnCanShowTweetUI->FunctionFlags |= 0x400;
	return CanShowTweetUI_Parms.ReturnValue;
}

struct Engine_ShowTweetUI_Parms
{
	struct FString                                     InitialMessage;                                   		// 0x000000 (0x000C)              
	struct FString                                     URL;                                              		// 0x00000C (0x000C)              
	struct FString                                     Picture;                                          		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UTwitterIntegrationBase::ShowTweetUI(struct FString InitialMessage,struct FString URL,struct FString Picture)
{
	static UFieldFunc* pFnShowTweetUI = NULL;
	if(!pFnShowTweetUI)
		pFnShowTweetUI = UObject::FindFunction("Function Engine.TwitterIntegrationBase.ShowTweetUI");

	Engine_ShowTweetUI_Parms ShowTweetUI_Parms;
	memcpy(&ShowTweetUI_Parms.InitialMessage,&InitialMessage,0xC);
	memcpy(&ShowTweetUI_Parms.URL,&URL,0xC);
	memcpy(&ShowTweetUI_Parms.Picture,&Picture,0xC);
	pFnShowTweetUI->FunctionFlags |= ~0x400;
	ProcessEvent(pFnShowTweetUI,NULL,&ShowTweetUI_Parms,NULL);
	pFnShowTweetUI->FunctionFlags |= 0x400;
	return ShowTweetUI_Parms.ReturnValue;
}

struct Engine_GetNumAccounts_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UTwitterIntegrationBase::GetNumAccounts()
{
	static UFieldFunc* pFnGetNumAccounts = NULL;
	if(!pFnGetNumAccounts)
		pFnGetNumAccounts = UObject::FindFunction("Function Engine.TwitterIntegrationBase.GetNumAccounts");

	Engine_GetNumAccounts_Parms GetNumAccounts_Parms;
	pFnGetNumAccounts->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumAccounts,NULL,&GetNumAccounts_Parms,NULL);
	pFnGetNumAccounts->FunctionFlags |= 0x400;
	return GetNumAccounts_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
};

void UTwitterIntegrationBase::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.TwitterIntegrationBase.Init");

	Engine_Init_Parms Init_Parms;
	pFnInit->FunctionFlags |= ~0x400;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	pFnInit->FunctionFlags |= 0x400;
}

struct Engine_GetAccountName_Parms
{
	int                                                AccountIndex;                                     		// 0x000000 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UTwitterIntegrationBase::GetAccountName(int AccountIndex)
{
	static UFieldFunc* pFnGetAccountName = NULL;
	if(!pFnGetAccountName)
		pFnGetAccountName = UObject::FindFunction("Function Engine.TwitterIntegrationBase.GetAccountName");

	Engine_GetAccountName_Parms GetAccountName_Parms;
	GetAccountName_Parms.AccountIndex = AccountIndex;
	pFnGetAccountName->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetAccountName,NULL,&GetAccountName_Parms,NULL);
	pFnGetAccountName->FunctionFlags |= 0x400;
	return GetAccountName_Parms.ReturnValue;
}

struct Engine_AuthorizeAccounts_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UTwitterIntegrationBase::AuthorizeAccounts()
{
	static UFieldFunc* pFnAuthorizeAccounts = NULL;
	if(!pFnAuthorizeAccounts)
		pFnAuthorizeAccounts = UObject::FindFunction("Function Engine.TwitterIntegrationBase.AuthorizeAccounts");

	Engine_AuthorizeAccounts_Parms AuthorizeAccounts_Parms;
	pFnAuthorizeAccounts->FunctionFlags |= ~0x400;
	ProcessEvent(pFnAuthorizeAccounts,NULL,&AuthorizeAccounts_Parms,NULL);
	pFnAuthorizeAccounts->FunctionFlags |= 0x400;
	return AuthorizeAccounts_Parms.ReturnValue;
}

struct Engine_TwitterRequest_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
	TArray<struct FString>                             ParamKeysAndValues;                               		// 0x00000C (0x000C)              
	unsigned char                                      RequestMethod;                                    		// 0x000018 (0x0001)              
	unsigned char                                      _0x000019[0x3];                                   		// 0x000019 (0x0003) ALIGNEMENT
	int                                                AccountIndex;                                     		// 0x00001C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UTwitterIntegrationBase::TwitterRequest(struct FString URL,TArray<struct FString> ParamKeysAndValues,unsigned char RequestMethod,int AccountIndex)
{
	static UFieldFunc* pFnTwitterRequest = NULL;
	if(!pFnTwitterRequest)
		pFnTwitterRequest = UObject::FindFunction("Function Engine.TwitterIntegrationBase.TwitterRequest");

	Engine_TwitterRequest_Parms TwitterRequest_Parms;
	memcpy(&TwitterRequest_Parms.URL,&URL,0xC);
	memcpy(&TwitterRequest_Parms.ParamKeysAndValues,&ParamKeysAndValues,0xC);
	TwitterRequest_Parms.RequestMethod = RequestMethod;
	TwitterRequest_Parms.AccountIndex = AccountIndex;
	pFnTwitterRequest->FunctionFlags |= ~0x400;
	ProcessEvent(pFnTwitterRequest,NULL,&TwitterRequest_Parms,NULL);
	pFnTwitterRequest->FunctionFlags |= 0x400;
	return TwitterRequest_Parms.ReturnValue;
}

struct Engine_GetNumHeaders_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UPlatformInterfaceWebResponse::GetNumHeaders()
{
	static UFieldFunc* pFnGetNumHeaders = NULL;
	if(!pFnGetNumHeaders)
		pFnGetNumHeaders = UObject::FindFunction("Function Engine.PlatformInterfaceWebResponse.GetNumHeaders");

	Engine_GetNumHeaders_Parms GetNumHeaders_Parms;
	pFnGetNumHeaders->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetNumHeaders,NULL,&GetNumHeaders_Parms,NULL);
	pFnGetNumHeaders->FunctionFlags |= 0x400;
	return GetNumHeaders_Parms.ReturnValue;
}

struct Engine_GetHeader_Parms
{
	int                                                HeaderIndex;                                      		// 0x000000 (0x0004)              
	struct FString                                     Header;                                           		// 0x000004 (0x000C)              
	struct FString                                     Value;                                            		// 0x000010 (0x000C)              
};

void UPlatformInterfaceWebResponse::GetHeader(int HeaderIndex,struct FString* Header,struct FString* Value)
{
	static UFieldFunc* pFnGetHeader = NULL;
	if(!pFnGetHeader)
		pFnGetHeader = UObject::FindFunction("Function Engine.PlatformInterfaceWebResponse.GetHeader");

	Engine_GetHeader_Parms GetHeader_Parms;
	GetHeader_Parms.HeaderIndex = HeaderIndex;
	pFnGetHeader->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetHeader,NULL,&GetHeader_Parms,NULL);
	pFnGetHeader->FunctionFlags |= 0x400;
	if(Header)
		memcpy(Header,&GetHeader_Parms.Header,0xC);
	if(Value)
		memcpy(Value,&GetHeader_Parms.Value,0xC);
}

struct Engine_GetHeaderValue_Parms
{
	struct FString                                     HeaderName;                                       		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UPlatformInterfaceWebResponse::GetHeaderValue(struct FString HeaderName)
{
	static UFieldFunc* pFnGetHeaderValue = NULL;
	if(!pFnGetHeaderValue)
		pFnGetHeaderValue = UObject::FindFunction("Function Engine.PlatformInterfaceWebResponse.GetHeaderValue");

	Engine_GetHeaderValue_Parms GetHeaderValue_Parms;
	memcpy(&GetHeaderValue_Parms.HeaderName,&HeaderName,0xC);
	pFnGetHeaderValue->FunctionFlags |= ~0x400;
	ProcessEvent(pFnGetHeaderValue,NULL,&GetHeaderValue_Parms,NULL);
	pFnGetHeaderValue->FunctionFlags |= 0x400;
	return GetHeaderValue_Parms.ReturnValue;
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USequenceInterface::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.SequenceInterface.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_OnUpdateProperty_Parms
{
	struct FName                                       PropertyName;                                     		// 0x000000 (0x0008)              
};

void UUpdatePropertyInterface::OnUpdateProperty(struct FName PropertyName)
{
	static UFieldFunc* pFnOnUpdateProperty = NULL;
	if(!pFnOnUpdateProperty)
		pFnOnUpdateProperty = UObject::FindFunction("Function Engine.UpdatePropertyInterface.OnUpdateProperty");

	Engine_OnUpdateProperty_Parms OnUpdateProperty_Parms;
	memcpy(&OnUpdateProperty_Parms.PropertyName,&PropertyName,0x8);
	ProcessEvent(pFnOnUpdateProperty,NULL,&OnUpdateProperty_Parms,NULL);
}

struct Engine_AdminLogout_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AAccessControl::AdminLogout(class APlayerController* P)
{
	static UFieldFunc* pFnAdminLogout = NULL;
	if(!pFnAdminLogout)
		pFnAdminLogout = UObject::FindFunction("Function Engine.AccessControl.AdminLogout");

	Engine_AdminLogout_Parms AdminLogout_Parms;
	AdminLogout_Parms.P = P;
	ProcessEvent(pFnAdminLogout,NULL,&AdminLogout_Parms,NULL);
	return AdminLogout_Parms.ReturnValue;
}

struct Engine_SetAdminPassword_Parms
{
	struct FString                                     P;                                                		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool AAccessControl::SetAdminPassword(struct FString P)
{
	static UFieldFunc* pFnSetAdminPassword = NULL;
	if(!pFnSetAdminPassword)
		pFnSetAdminPassword = UObject::FindFunction("Function Engine.AccessControl.SetAdminPassword");

	Engine_SetAdminPassword_Parms SetAdminPassword_Parms;
	memcpy(&SetAdminPassword_Parms.P,&P,0xC);
	ProcessEvent(pFnSetAdminPassword,NULL,&SetAdminPassword_Parms,NULL);
	return SetAdminPassword_Parms.ReturnValue;
}

struct Engine_CheckIPPolicy_Parms
{
	struct FString                                     Address;                                          		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000010 (0x0004)              
	//int                                                J;                                                		// 0x000014 (0x0004)              
	//int                                                LastMatchingPolicy;                               		// 0x000018 (0x0004)              
	//struct FString                                     Policy;                                           		// 0x00001C (0x000C)              
	//struct FString                                     Mask;                                             		// 0x000028 (0x000C)              
	//unsigned long                                      bAcceptAddress : 1;                               		// 0x000034 (0x0004) [0x00000001] 
	//unsigned long                                      bAcceptPolicy : 1;                                		// 0x000038 (0x0004) [0x00000001] 
};

bool AAccessControl::CheckIPPolicy(struct FString Address)
{
	static UFieldFunc* pFnCheckIPPolicy = NULL;
	if(!pFnCheckIPPolicy)
		pFnCheckIPPolicy = UObject::FindFunction("Function Engine.AccessControl.CheckIPPolicy");

	Engine_CheckIPPolicy_Parms CheckIPPolicy_Parms;
	memcpy(&CheckIPPolicy_Parms.Address,&Address,0xC);
	ProcessEvent(pFnCheckIPPolicy,NULL,&CheckIPPolicy_Parms,NULL);
	return CheckIPPolicy_Parms.ReturnValue;
}

struct Engine_AdminExited_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	//struct FString                                     LogoutString;                                     		// 0x000004 (0x000C)              
};

void AAccessControl::AdminExited(class APlayerController* P)
{
	static UFieldFunc* pFnAdminExited = NULL;
	if(!pFnAdminExited)
		pFnAdminExited = UObject::FindFunction("Function Engine.AccessControl.AdminExited");

	Engine_AdminExited_Parms AdminExited_Parms;
	AdminExited_Parms.P = P;
	ProcessEvent(pFnAdminExited,NULL,&AdminExited_Parms,NULL);
}

struct Engine_GetControllerFromString_Parms
{
	struct FString                                     Target;                                           		// 0x000000 (0x000C)              
	class AController*                                 ReturnValue;                                      		// 0x00000C (0x0004)              
	//class AController*                                 C;                                                		// 0x000010 (0x0004)              
	//class AController*                                 FinalC;                                           		// 0x000014 (0x0004)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

class AController* AAccessControl::GetControllerFromString(struct FString Target)
{
	static UFieldFunc* pFnGetControllerFromString = NULL;
	if(!pFnGetControllerFromString)
		pFnGetControllerFromString = UObject::FindFunction("Function Engine.AccessControl.GetControllerFromString");

	Engine_GetControllerFromString_Parms GetControllerFromString_Parms;
	memcpy(&GetControllerFromString_Parms.Target,&Target,0xC);
	ProcessEvent(pFnGetControllerFromString,NULL,&GetControllerFromString_Parms,NULL);
	return GetControllerFromString_Parms.ReturnValue;
}

struct Engine_AdminLogin_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	struct FString                                     Password;                                         		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool AAccessControl::AdminLogin(class APlayerController* P,struct FString Password)
{
	static UFieldFunc* pFnAdminLogin = NULL;
	if(!pFnAdminLogin)
		pFnAdminLogin = UObject::FindFunction("Function Engine.AccessControl.AdminLogin");

	Engine_AdminLogin_Parms AdminLogin_Parms;
	AdminLogin_Parms.P = P;
	memcpy(&AdminLogin_Parms.Password,&Password,0xC);
	ProcessEvent(pFnAdminLogin,NULL,&AdminLogin_Parms,NULL);
	return AdminLogin_Parms.ReturnValue;
}

struct Engine_KickBan_Parms
{
	struct FString                                     Target;                                           		// 0x000000 (0x000C)              
	//class APlayerController*                           P;                                                		// 0x00000C (0x0004)              
	//struct FString                                     IP;                                               		// 0x000010 (0x000C)              
};

void AAccessControl::KickBan(struct FString Target)
{
	static UFieldFunc* pFnKickBan = NULL;
	if(!pFnKickBan)
		pFnKickBan = UObject::FindFunction("Function Engine.AccessControl.KickBan");

	Engine_KickBan_Parms KickBan_Parms;
	memcpy(&KickBan_Parms.Target,&Target,0xC);
	ProcessEvent(pFnKickBan,NULL,&KickBan_Parms,NULL);
}

struct Engine_Kick_Parms
{
	struct FString                                     Target;                                           		// 0x000000 (0x000C)              
	//class AController*                                 C;                                                		// 0x00000C (0x0004)              
};

void AAccessControl::Kick(struct FString Target)
{
	static UFieldFunc* pFnKick = NULL;
	if(!pFnKick)
		pFnKick = UObject::FindFunction("Function Engine.AccessControl.Kick");

	Engine_Kick_Parms Kick_Parms;
	memcpy(&Kick_Parms.Target,&Target,0xC);
	ProcessEvent(pFnKick,NULL,&Kick_Parms,NULL);
}

struct Engine_ParseAdminOptions_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
	//struct FString                                     InAdminName;                                      		// 0x000010 (0x000C)              
	//struct FString                                     InPassword;                                       		// 0x00001C (0x000C)              
};

bool AAccessControl::ParseAdminOptions(struct FString Options)
{
	static UFieldFunc* pFnParseAdminOptions = NULL;
	if(!pFnParseAdminOptions)
		pFnParseAdminOptions = UObject::FindFunction("Function Engine.AccessControl.ParseAdminOptions");

	Engine_ParseAdminOptions_Parms ParseAdminOptions_Parms;
	memcpy(&ParseAdminOptions_Parms.Options,&Options,0xC);
	ProcessEvent(pFnParseAdminOptions,NULL,&ParseAdminOptions_Parms,NULL);
	return ParseAdminOptions_Parms.ReturnValue;
}

struct Engine_AdminEntered_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	//struct FString                                     LoginString;                                      		// 0x000004 (0x000C)              
};

void AAccessControl::AdminEntered(class APlayerController* P)
{
	static UFieldFunc* pFnAdminEntered = NULL;
	if(!pFnAdminEntered)
		pFnAdminEntered = UObject::FindFunction("Function Engine.AccessControl.AdminEntered");

	Engine_AdminEntered_Parms AdminEntered_Parms;
	AdminEntered_Parms.P = P;
	ProcessEvent(pFnAdminEntered,NULL,&AdminEntered_Parms,NULL);
}

struct Engine_RequiresPassword_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AAccessControl::RequiresPassword()
{
	static UFieldFunc* pFnRequiresPassword = NULL;
	if(!pFnRequiresPassword)
		pFnRequiresPassword = UObject::FindFunction("Function Engine.AccessControl.RequiresPassword");

	Engine_RequiresPassword_Parms RequiresPassword_Parms;
	ProcessEvent(pFnRequiresPassword,NULL,&RequiresPassword_Parms,NULL);
	return RequiresPassword_Parms.ReturnValue;
}

struct Engine_SetGamePassword_Parms
{
	struct FString                                     P;                                                		// 0x000000 (0x000C)              
};

void AAccessControl::SetGamePassword(struct FString P)
{
	static UFieldFunc* pFnSetGamePassword = NULL;
	if(!pFnSetGamePassword)
		pFnSetGamePassword = UObject::FindFunction("Function Engine.AccessControl.SetGamePassword");

	Engine_SetGamePassword_Parms SetGamePassword_Parms;
	memcpy(&SetGamePassword_Parms.P,&P,0xC);
	ProcessEvent(pFnSetGamePassword,NULL,&SetGamePassword_Parms,NULL);
}

struct Engine_PreLogin_Parms
{
	struct FString                                     Options;                                          		// 0x000000 (0x000C)              
	struct FString                                     Address;                                          		// 0x00000C (0x000C)              
	struct FString                                     OutError;                                         		// 0x000018 (0x000C)              
	unsigned long                                      bSpectator : 1;                                   		// 0x000024 (0x0004) [0x00000001] 
	//struct FString                                     InPassword;                                       		// 0x000028 (0x000C)              
};

void AAccessControl::PreLogin(struct FString Options,struct FString Address,struct FString* OutError,bool bSpectator)
{
	static UFieldFunc* pFnPreLogin = NULL;
	if(!pFnPreLogin)
		pFnPreLogin = UObject::FindFunction("Function Engine.AccessControl.PreLogin");

	Engine_PreLogin_Parms PreLogin_Parms;
	memcpy(&PreLogin_Parms.Options,&Options,0xC);
	memcpy(&PreLogin_Parms.Address,&Address,0xC);
	PreLogin_Parms.bSpectator = bSpectator;
	ProcessEvent(pFnPreLogin,NULL,&PreLogin_Parms,NULL);
	if(OutError)
		memcpy(OutError,&PreLogin_Parms.OutError,0xC);
}

struct Engine_IsIDBanned_Parms
{
	struct FUniqueNetId                                NetId;                                            		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x00000C (0x0004)              
};

bool AAccessControl::IsIDBanned(struct FUniqueNetId* NetId)
{
	static UFieldFunc* pFnIsIDBanned = NULL;
	if(!pFnIsIDBanned)
		pFnIsIDBanned = UObject::FindFunction("Function Engine.AccessControl.IsIDBanned");

	Engine_IsIDBanned_Parms IsIDBanned_Parms;
	ProcessEvent(pFnIsIDBanned,NULL,&IsIDBanned_Parms,NULL);
	if(NetId)
		memcpy(NetId,&IsIDBanned_Parms.NetId,0x8);
	return IsIDBanned_Parms.ReturnValue;
}

struct Engine_KickPlayer_Parms
{
	class APlayerController*                           C;                                                		// 0x000000 (0x0004)              
	struct FString                                     KickReason;                                       		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool AAccessControl::KickPlayer(class APlayerController* C,struct FString KickReason)
{
	static UFieldFunc* pFnKickPlayer = NULL;
	if(!pFnKickPlayer)
		pFnKickPlayer = UObject::FindFunction("Function Engine.AccessControl.KickPlayer");

	Engine_KickPlayer_Parms KickPlayer_Parms;
	KickPlayer_Parms.C = C;
	memcpy(&KickPlayer_Parms.KickReason,&KickReason,0xC);
	ProcessEvent(pFnKickPlayer,NULL,&KickPlayer_Parms,NULL);
	return KickPlayer_Parms.ReturnValue;
}

struct Engine_IsAdmin_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AAccessControl::IsAdmin(class APlayerController* P)
{
	static UFieldFunc* pFnIsAdmin = NULL;
	if(!pFnIsAdmin)
		pFnIsAdmin = UObject::FindFunction("Function Engine.AccessControl.IsAdmin");

	Engine_IsAdmin_Parms IsAdmin_Parms;
	IsAdmin_Parms.P = P;
	ProcessEvent(pFnIsAdmin,NULL,&IsAdmin_Parms,NULL);
	return IsAdmin_Parms.ReturnValue;
}

struct Engine_ValidLogin_Parms
{
	struct FString                                     UserName;                                         		// 0x000000 (0x000C)              
	struct FString                                     Password;                                         		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AAccessControl::ValidLogin(struct FString UserName,struct FString Password)
{
	static UFieldFunc* pFnValidLogin = NULL;
	if(!pFnValidLogin)
		pFnValidLogin = UObject::FindFunction("Function Engine.AccessControl.ValidLogin");

	Engine_ValidLogin_Parms ValidLogin_Parms;
	memcpy(&ValidLogin_Parms.UserName,&UserName,0xC);
	memcpy(&ValidLogin_Parms.Password,&Password,0xC);
	ProcessEvent(pFnValidLogin,NULL,&ValidLogin_Parms,NULL);
	return ValidLogin_Parms.ReturnValue;
}

struct Engine_Kick_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void AAdmin::Kick(struct FString S)
{
	static UFieldFunc* pFnKick = NULL;
	if(!pFnKick)
		pFnKick = UObject::FindFunction("Function Engine.Admin.Kick");

	Engine_Kick_Parms Kick_Parms;
	memcpy(&Kick_Parms.S,&S,0xC);
	ProcessEvent(pFnKick,NULL,&Kick_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AAdmin::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.Admin.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_RestartMap_Parms
{
};

void AAdmin::RestartMap()
{
	static UFieldFunc* pFnRestartMap = NULL;
	if(!pFnRestartMap)
		pFnRestartMap = UObject::FindFunction("Function Engine.Admin.RestartMap");

	Engine_RestartMap_Parms RestartMap_Parms;
	ProcessEvent(pFnRestartMap,NULL,&RestartMap_Parms,NULL);
}

struct Engine_ServerAdmin_Parms
{
	struct FString                                     CommandLine;                                      		// 0x000000 (0x000C)              
	//struct FString                                     Result;                                           		// 0x00000C (0x000C)              
};

void AAdmin::ServerAdmin(struct FString CommandLine)
{
	static UFieldFunc* pFnServerAdmin = NULL;
	if(!pFnServerAdmin)
		pFnServerAdmin = UObject::FindFunction("Function Engine.Admin.ServerAdmin");

	Engine_ServerAdmin_Parms ServerAdmin_Parms;
	memcpy(&ServerAdmin_Parms.CommandLine,&CommandLine,0xC);
	ProcessEvent(pFnServerAdmin,NULL,&ServerAdmin_Parms,NULL);
}

struct Engine_ServerKick_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void AAdmin::ServerKick(struct FString S)
{
	static UFieldFunc* pFnServerKick = NULL;
	if(!pFnServerKick)
		pFnServerKick = UObject::FindFunction("Function Engine.Admin.ServerKick");

	Engine_ServerKick_Parms ServerKick_Parms;
	memcpy(&ServerKick_Parms.S,&S,0xC);
	ProcessEvent(pFnServerKick,NULL,&ServerKick_Parms,NULL);
}

struct Engine_Admin_Parms
{
	struct FString                                     CommandLine;                                      		// 0x000000 (0x000C)              
};

void AAdmin::Admin(struct FString CommandLine)
{
	static UFieldFunc* pFnAdmin = NULL;
	if(!pFnAdmin)
		pFnAdmin = UObject::FindFunction("Function Engine.Admin.Admin");

	Engine_Admin_Parms Admin_Parms;
	memcpy(&Admin_Parms.CommandLine,&CommandLine,0xC);
	ProcessEvent(pFnAdmin,NULL,&Admin_Parms,NULL);
}

struct Engine_Switch_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void AAdmin::Switch(struct FString URL)
{
	static UFieldFunc* pFnSwitch = NULL;
	if(!pFnSwitch)
		pFnSwitch = UObject::FindFunction("Function Engine.Admin.Switch");

	Engine_Switch_Parms Switch_Parms;
	memcpy(&Switch_Parms.URL,&URL,0xC);
	ProcessEvent(pFnSwitch,NULL,&Switch_Parms,NULL);
}

struct Engine_ServerSwitch_Parms
{
	struct FString                                     URL;                                              		// 0x000000 (0x000C)              
};

void AAdmin::ServerSwitch(struct FString URL)
{
	static UFieldFunc* pFnServerSwitch = NULL;
	if(!pFnServerSwitch)
		pFnServerSwitch = UObject::FindFunction("Function Engine.Admin.ServerSwitch");

	Engine_ServerSwitch_Parms ServerSwitch_Parms;
	memcpy(&ServerSwitch_Parms.URL,&URL,0xC);
	ProcessEvent(pFnServerSwitch,NULL,&ServerSwitch_Parms,NULL);
}

struct Engine_ServerRestartMap_Parms
{
};

void AAdmin::ServerRestartMap()
{
	static UFieldFunc* pFnServerRestartMap = NULL;
	if(!pFnServerRestartMap)
		pFnServerRestartMap = UObject::FindFunction("Function Engine.Admin.ServerRestartMap");

	Engine_ServerRestartMap_Parms ServerRestartMap_Parms;
	ProcessEvent(pFnServerRestartMap,NULL,&ServerRestartMap_Parms,NULL);
}

struct Engine_PlayerList_Parms
{
	//class APlayerReplicationInfo*                      PRI;                                              		// 0x000000 (0x0004)              
};

void AAdmin::PlayerList()
{
	static UFieldFunc* pFnPlayerList = NULL;
	if(!pFnPlayerList)
		pFnPlayerList = UObject::FindFunction("Function Engine.Admin.PlayerList");

	Engine_PlayerList_Parms PlayerList_Parms;
	ProcessEvent(pFnPlayerList,NULL,&PlayerList_Parms,NULL);
}

struct Engine_KickBan_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void AAdmin::KickBan(struct FString S)
{
	static UFieldFunc* pFnKickBan = NULL;
	if(!pFnKickBan)
		pFnKickBan = UObject::FindFunction("Function Engine.Admin.KickBan");

	Engine_KickBan_Parms KickBan_Parms;
	memcpy(&KickBan_Parms.S,&S,0xC);
	ProcessEvent(pFnKickBan,NULL,&KickBan_Parms,NULL);
}

struct Engine_ServerKickBan_Parms
{
	struct FString                                     S;                                                		// 0x000000 (0x000C)              
};

void AAdmin::ServerKickBan(struct FString S)
{
	static UFieldFunc* pFnServerKickBan = NULL;
	if(!pFnServerKickBan)
		pFnServerKickBan = UObject::FindFunction("Function Engine.Admin.ServerKickBan");

	Engine_ServerKickBan_Parms ServerKickBan_Parms;
	memcpy(&ServerKickBan_Parms.S,&S,0xC);
	ProcessEvent(pFnServerKickBan,NULL,&ServerKickBan_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AAmbientSoundSimpleToggleable::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.AmbientSoundSimpleToggleable.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_StartPlaying_Parms
{
};

void AAmbientSoundSimpleToggleable::StartPlaying()
{
	static UFieldFunc* pFnStartPlaying = NULL;
	if(!pFnStartPlaying)
		pFnStartPlaying = UObject::FindFunction("Function Engine.AmbientSoundSimpleToggleable.StartPlaying");

	Engine_StartPlaying_Parms StartPlaying_Parms;
	ProcessEvent(pFnStartPlaying,NULL,&StartPlaying_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AAmbientSoundSimpleToggleable::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.AmbientSoundSimpleToggleable.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_StopPlaying_Parms
{
};

void AAmbientSoundSimpleToggleable::StopPlaying()
{
	static UFieldFunc* pFnStopPlaying = NULL;
	if(!pFnStopPlaying)
		pFnStopPlaying = UObject::FindFunction("Function Engine.AmbientSoundSimpleToggleable.StopPlaying");

	Engine_StopPlaying_Parms StopPlaying_Parms;
	ProcessEvent(pFnStopPlaying,NULL,&StopPlaying_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AAmbientSoundSimpleToggleable::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.AmbientSoundSimpleToggleable.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AAmbientSoundSimpleToggleable::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.AmbientSoundSimpleToggleable.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_Notify_Parms
{
	class AActor*                                      Owner;                                            		// 0x000000 (0x0004)              
	class UAnimNodeSequence*                           AnimSeqInstigator;                                		// 0x000004 (0x0004)              
};

void UAnimNotify_PlayFaceFXAnim::Notify(class AActor* Owner,class UAnimNodeSequence* AnimSeqInstigator)
{
	static UFieldFunc* pFnNotify = NULL;
	if(!pFnNotify)
		pFnNotify = UObject::FindFunction("Function Engine.AnimNotify_PlayFaceFXAnim.Notify");

	Engine_Notify_Parms Notify_Parms;
	Notify_Parms.Owner = Owner;
	Notify_Parms.AnimSeqInstigator = AnimSeqInstigator;
	ProcessEvent(pFnNotify,NULL,&Notify_Parms,NULL);
}

struct Engine_Notify_Parms
{
	class AActor*                                      Owner;                                            		// 0x000000 (0x0004)              
	class UAnimNodeSequence*                           AnimSeqInstigator;                                		// 0x000004 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000008 (0x0004)              
	//float                                              Pct;                                              		// 0x00000C (0x0004)              
	//float                                              DistToOrigin;                                     		// 0x000010 (0x0004)              
	//FVector3                                           ViewShakeOrigin;                                  		// 0x000014 (0x000C)              
	//FVector3                                           CamLoc;                                           		// 0x000020 (0x000C)              
	//FRotator                                           CamRot;                                           		// 0x00002C (0x000C)              
};

void UAnimNotify_ViewShake::Notify(class AActor* Owner,class UAnimNodeSequence* AnimSeqInstigator)
{
	static UFieldFunc* pFnNotify = NULL;
	if(!pFnNotify)
		pFnNotify = UObject::FindFunction("Function Engine.AnimNotify_ViewShake.Notify");

	Engine_Notify_Parms Notify_Parms;
	Notify_Parms.Owner = Owner;
	Notify_Parms.AnimSeqInstigator = AnimSeqInstigator;
	ProcessEvent(pFnNotify,NULL,&Notify_Parms,NULL);
}

struct Engine_PreCalcValues_Parms
{
};

void UcAPBVisualServerHUD::PreCalcValues()
{
	static UFieldFunc* pFnPreCalcValues = NULL;
	if(!pFnPreCalcValues)
		pFnPreCalcValues = UObject::FindFunction("Function Engine.cAPBVisualServerHUD.PreCalcValues");

	Engine_PreCalcValues_Parms PreCalcValues_Parms;
	ProcessEvent(pFnPreCalcValues,NULL,&PreCalcValues_Parms,NULL);
}

struct Engine_PostRender_Parms
{
};

void UcAPBVisualServerHUD::PostRender()
{
	static UFieldFunc* pFnPostRender = NULL;
	if(!pFnPostRender)
		pFnPostRender = UObject::FindFunction("Function Engine.cAPBVisualServerHUD.PostRender");

	Engine_PostRender_Parms PostRender_Parms;
	ProcessEvent(pFnPostRender,NULL,&PostRender_Parms,NULL);
}

struct Engine_DrawHUD_Parms
{
	//float                                              fXL;                                              		// 0x000000 (0x0004)              
	//float                                              fYL;                                              		// 0x000004 (0x0004)              
	//float                                              fY;                                               		// 0x000008 (0x0004)              
	//struct FString                                     sMyText;                                          		// 0x00000C (0x000C)              
};

void UcAPBVisualServerHUD::DrawHUD()
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.cAPBVisualServerHUD.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_DeleteDataBlob_Parms
{
	struct FString                                     StorageID;                                        		// 0x000000 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x00000C (0x000C)              
	struct FScriptDelegate                             InDeleteDataBlobCallback;                         		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UCloudSaveSystemDataBlobStoreInterface::DeleteDataBlob(struct FString StorageID,struct FString BlobName,struct FScriptDelegate InDeleteDataBlobCallback)
{
	static UFieldFunc* pFnDeleteDataBlob = NULL;
	if(!pFnDeleteDataBlob)
		pFnDeleteDataBlob = UObject::FindFunction("Function Engine.CloudSaveSystemDataBlobStoreInterface.DeleteDataBlob");

	Engine_DeleteDataBlob_Parms DeleteDataBlob_Parms;
	memcpy(&DeleteDataBlob_Parms.StorageID,&StorageID,0xC);
	memcpy(&DeleteDataBlob_Parms.BlobName,&BlobName,0xC);
	memcpy(&DeleteDataBlob_Parms.InDeleteDataBlobCallback,&InDeleteDataBlobCallback,0xC);
	ProcessEvent(pFnDeleteDataBlob,NULL,&DeleteDataBlob_Parms,NULL);
	return DeleteDataBlob_Parms.ReturnValue;
}

struct Engine_GetDataBlobCallbackDelegate_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	TArray<unsigned char>                              DataBlob;                                         		// 0x00001C (0x000C)              
	struct FString                                     Error;                                            		// 0x000028 (0x000C)              
};

void UCloudSaveSystemDataBlobStoreInterface::GetDataBlobCallbackDelegate(bool bWasSuccessful,struct FString StorageID,struct FString BlobName,TArray<unsigned char>* DataBlob,struct FString Error)
{
	static UFieldFunc* pFnGetDataBlobCallbackDelegate = NULL;
	if(!pFnGetDataBlobCallbackDelegate)
		pFnGetDataBlobCallbackDelegate = UObject::FindFunction("Function Engine.CloudSaveSystemDataBlobStoreInterface.GetDataBlobCallbackDelegate");

	Engine_GetDataBlobCallbackDelegate_Parms GetDataBlobCallbackDelegate_Parms;
	GetDataBlobCallbackDelegate_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&GetDataBlobCallbackDelegate_Parms.StorageID,&StorageID,0xC);
	memcpy(&GetDataBlobCallbackDelegate_Parms.BlobName,&BlobName,0xC);
	memcpy(&GetDataBlobCallbackDelegate_Parms.Error,&Error,0xC);
	ProcessEvent(pFnGetDataBlobCallbackDelegate,NULL,&GetDataBlobCallbackDelegate_Parms,NULL);
	if(DataBlob)
		memcpy(DataBlob,&GetDataBlobCallbackDelegate_Parms.DataBlob,0xC);
}

struct Engine_DeleteDataBlobCallbackDelegate_Parms
{
	unsigned long                                      bWasSucessfull : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	struct FString                                     Error;                                            		// 0x00001C (0x000C)              
};

void UCloudSaveSystemDataBlobStoreInterface::DeleteDataBlobCallbackDelegate(bool bWasSucessfull,struct FString StorageID,struct FString BlobName,struct FString Error)
{
	static UFieldFunc* pFnDeleteDataBlobCallbackDelegate = NULL;
	if(!pFnDeleteDataBlobCallbackDelegate)
		pFnDeleteDataBlobCallbackDelegate = UObject::FindFunction("Function Engine.CloudSaveSystemDataBlobStoreInterface.DeleteDataBlobCallbackDelegate");

	Engine_DeleteDataBlobCallbackDelegate_Parms DeleteDataBlobCallbackDelegate_Parms;
	DeleteDataBlobCallbackDelegate_Parms.bWasSucessfull = bWasSucessfull;
	memcpy(&DeleteDataBlobCallbackDelegate_Parms.StorageID,&StorageID,0xC);
	memcpy(&DeleteDataBlobCallbackDelegate_Parms.BlobName,&BlobName,0xC);
	memcpy(&DeleteDataBlobCallbackDelegate_Parms.Error,&Error,0xC);
	ProcessEvent(pFnDeleteDataBlobCallbackDelegate,NULL,&DeleteDataBlobCallbackDelegate_Parms,NULL);
}

struct Engine_SetDataBlob_Parms
{
	struct FString                                     StorageID;                                        		// 0x000000 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x00000C (0x000C)              
	TArray<unsigned char>                              DataBlob;                                         		// 0x000018 (0x000C)              
	struct FScriptDelegate                             InSetDataBlobCallback;                            		// 0x000024 (0x000C)              
};

void UCloudSaveSystemDataBlobStoreInterface::SetDataBlob(struct FString StorageID,struct FString BlobName,TArray<unsigned char>* DataBlob,struct FScriptDelegate InSetDataBlobCallback)
{
	static UFieldFunc* pFnSetDataBlob = NULL;
	if(!pFnSetDataBlob)
		pFnSetDataBlob = UObject::FindFunction("Function Engine.CloudSaveSystemDataBlobStoreInterface.SetDataBlob");

	Engine_SetDataBlob_Parms SetDataBlob_Parms;
	memcpy(&SetDataBlob_Parms.StorageID,&StorageID,0xC);
	memcpy(&SetDataBlob_Parms.BlobName,&BlobName,0xC);
	memcpy(&SetDataBlob_Parms.InSetDataBlobCallback,&InSetDataBlobCallback,0xC);
	ProcessEvent(pFnSetDataBlob,NULL,&SetDataBlob_Parms,NULL);
	if(DataBlob)
		memcpy(DataBlob,&SetDataBlob_Parms.DataBlob,0xC);
}

struct Engine_GetDataBlob_Parms
{
	struct FString                                     StorageID;                                        		// 0x000000 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x00000C (0x000C)              
	struct FScriptDelegate                             OnGetDataBlobComplete;                            		// 0x000018 (0x000C)              
};

void UCloudSaveSystemDataBlobStoreInterface::GetDataBlob(struct FString StorageID,struct FString BlobName,struct FScriptDelegate OnGetDataBlobComplete)
{
	static UFieldFunc* pFnGetDataBlob = NULL;
	if(!pFnGetDataBlob)
		pFnGetDataBlob = UObject::FindFunction("Function Engine.CloudSaveSystemDataBlobStoreInterface.GetDataBlob");

	Engine_GetDataBlob_Parms GetDataBlob_Parms;
	memcpy(&GetDataBlob_Parms.StorageID,&StorageID,0xC);
	memcpy(&GetDataBlob_Parms.BlobName,&BlobName,0xC);
	memcpy(&GetDataBlob_Parms.OnGetDataBlobComplete,&OnGetDataBlobComplete,0xC);
	ProcessEvent(pFnGetDataBlob,NULL,&GetDataBlob_Parms,NULL);
}

struct Engine_SetDataBlobCallbackDelegate_Parms
{
	unsigned long                                      bWasSucessfull : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	struct FString                                     Error;                                            		// 0x00001C (0x000C)              
};

void UCloudSaveSystemDataBlobStoreInterface::SetDataBlobCallbackDelegate(bool bWasSucessfull,struct FString StorageID,struct FString BlobName,struct FString Error)
{
	static UFieldFunc* pFnSetDataBlobCallbackDelegate = NULL;
	if(!pFnSetDataBlobCallbackDelegate)
		pFnSetDataBlobCallbackDelegate = UObject::FindFunction("Function Engine.CloudSaveSystemDataBlobStoreInterface.SetDataBlobCallbackDelegate");

	Engine_SetDataBlobCallbackDelegate_Parms SetDataBlobCallbackDelegate_Parms;
	SetDataBlobCallbackDelegate_Parms.bWasSucessfull = bWasSucessfull;
	memcpy(&SetDataBlobCallbackDelegate_Parms.StorageID,&StorageID,0xC);
	memcpy(&SetDataBlobCallbackDelegate_Parms.BlobName,&BlobName,0xC);
	memcpy(&SetDataBlobCallbackDelegate_Parms.Error,&Error,0xC);
	ProcessEvent(pFnSetDataBlobCallbackDelegate,NULL,&SetDataBlobCallbackDelegate_Parms,NULL);
}

struct Engine_ReadKeyValue_Parms
{
	int                                                SaveSlotIndex;                                    		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	unsigned char                                      Type;                                             		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	struct FPlatformInterfaceDelegateResult            Value;                                            		// 0x000014 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000048 (0x0004) [0x00000001] 
};

bool UCloudSaveSystemKVSInterface::ReadKeyValue(int SaveSlotIndex,struct FString KeyName,unsigned char Type,struct FPlatformInterfaceDelegateResult* Value)
{
	static UFieldFunc* pFnReadKeyValue = NULL;
	if(!pFnReadKeyValue)
		pFnReadKeyValue = UObject::FindFunction("Function Engine.CloudSaveSystemKVSInterface.ReadKeyValue");

	Engine_ReadKeyValue_Parms ReadKeyValue_Parms;
	ReadKeyValue_Parms.SaveSlotIndex = SaveSlotIndex;
	memcpy(&ReadKeyValue_Parms.KeyName,&KeyName,0xC);
	ReadKeyValue_Parms.Type = Type;
	ProcessEvent(pFnReadKeyValue,NULL,&ReadKeyValue_Parms,NULL);
	if(Value)
		memcpy(Value,&ReadKeyValue_Parms.Value,0x34);
	return ReadKeyValue_Parms.ReturnValue;
}

struct Engine_WriteKeyValue_Parms
{
	int                                                SaveSlotIndex;                                    		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	struct FPlatformInterfaceData                      Value;                                            		// 0x000010 (0x0030)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000040 (0x0004) [0x00000001] 
};

bool UCloudSaveSystemKVSInterface::WriteKeyValue(int SaveSlotIndex,struct FString KeyName,struct FPlatformInterfaceData* Value)
{
	static UFieldFunc* pFnWriteKeyValue = NULL;
	if(!pFnWriteKeyValue)
		pFnWriteKeyValue = UObject::FindFunction("Function Engine.CloudSaveSystemKVSInterface.WriteKeyValue");

	Engine_WriteKeyValue_Parms WriteKeyValue_Parms;
	WriteKeyValue_Parms.SaveSlotIndex = SaveSlotIndex;
	memcpy(&WriteKeyValue_Parms.KeyName,&KeyName,0xC);
	ProcessEvent(pFnWriteKeyValue,NULL,&WriteKeyValue_Parms,NULL);
	if(Value)
		memcpy(Value,&WriteKeyValue_Parms.Value,0x30);
	return WriteKeyValue_Parms.ReturnValue;
}

struct Engine_GenerateKeyNameForSaveSlot_Parms
{
	int                                                SaveSlotIndex;                                    		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x000010 (0x000C)              
};

struct FString UCloudStorageBaseCloudSaveSystemKVS::GenerateKeyNameForSaveSlot(int SaveSlotIndex,struct FString KeyName)
{
	static UFieldFunc* pFnGenerateKeyNameForSaveSlot = NULL;
	if(!pFnGenerateKeyNameForSaveSlot)
		pFnGenerateKeyNameForSaveSlot = UObject::FindFunction("Function Engine.CloudStorageBaseCloudSaveSystemKVS.GenerateKeyNameForSaveSlot");

	Engine_GenerateKeyNameForSaveSlot_Parms GenerateKeyNameForSaveSlot_Parms;
	GenerateKeyNameForSaveSlot_Parms.SaveSlotIndex = SaveSlotIndex;
	memcpy(&GenerateKeyNameForSaveSlot_Parms.KeyName,&KeyName,0xC);
	ProcessEvent(pFnGenerateKeyNameForSaveSlot,NULL,&GenerateKeyNameForSaveSlot_Parms,NULL);
	return GenerateKeyNameForSaveSlot_Parms.ReturnValue;
}

struct Engine_WriteKeyValue_Parms
{
	int                                                SaveSlotIndex;                                    		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	struct FPlatformInterfaceData                      Value;                                            		// 0x000010 (0x0030)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000040 (0x0004) [0x00000001] 
	//struct FString                                     SaveSlotKeyName;                                  		// 0x000044 (0x000C)              
};

bool UCloudStorageBaseCloudSaveSystemKVS::WriteKeyValue(int SaveSlotIndex,struct FString KeyName,struct FPlatformInterfaceData* Value)
{
	static UFieldFunc* pFnWriteKeyValue = NULL;
	if(!pFnWriteKeyValue)
		pFnWriteKeyValue = UObject::FindFunction("Function Engine.CloudStorageBaseCloudSaveSystemKVS.WriteKeyValue");

	Engine_WriteKeyValue_Parms WriteKeyValue_Parms;
	WriteKeyValue_Parms.SaveSlotIndex = SaveSlotIndex;
	memcpy(&WriteKeyValue_Parms.KeyName,&KeyName,0xC);
	ProcessEvent(pFnWriteKeyValue,NULL,&WriteKeyValue_Parms,NULL);
	if(Value)
		memcpy(Value,&WriteKeyValue_Parms.Value,0x30);
	return WriteKeyValue_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
	class UCloudStorageBase*                           InCloudStorage;                                   		// 0x000000 (0x0004)              
};

void UCloudStorageBaseCloudSaveSystemKVS::Init(class UCloudStorageBase* InCloudStorage)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.CloudStorageBaseCloudSaveSystemKVS.Init");

	Engine_Init_Parms Init_Parms;
	Init_Parms.InCloudStorage = InCloudStorage;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_ReadKeyValue_Parms
{
	int                                                SaveSlotIndex;                                    		// 0x000000 (0x0004)              
	struct FString                                     KeyName;                                          		// 0x000004 (0x000C)              
	unsigned char                                      Type;                                             		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	struct FPlatformInterfaceDelegateResult            Value;                                            		// 0x000014 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000048 (0x0004) [0x00000001] 
	//struct FString                                     SaveSlotKeyName;                                  		// 0x00004C (0x000C)              
};

bool UCloudStorageBaseCloudSaveSystemKVS::ReadKeyValue(int SaveSlotIndex,struct FString KeyName,unsigned char Type,struct FPlatformInterfaceDelegateResult* Value)
{
	static UFieldFunc* pFnReadKeyValue = NULL;
	if(!pFnReadKeyValue)
		pFnReadKeyValue = UObject::FindFunction("Function Engine.CloudStorageBaseCloudSaveSystemKVS.ReadKeyValue");

	Engine_ReadKeyValue_Parms ReadKeyValue_Parms;
	ReadKeyValue_Parms.SaveSlotIndex = SaveSlotIndex;
	memcpy(&ReadKeyValue_Parms.KeyName,&KeyName,0xC);
	ReadKeyValue_Parms.Type = Type;
	ProcessEvent(pFnReadKeyValue,NULL,&ReadKeyValue_Parms,NULL);
	if(Value)
		memcpy(Value,&ReadKeyValue_Parms.Value,0x34);
	return ReadKeyValue_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
	//class APawn*                                       P;                                                		// 0x000020 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000024 (0x0004)              
};

void AColorScaleVolume::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.ColorScaleVolume.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_UnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	//class APawn*                                       P;                                                		// 0x000004 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000008 (0x0004)              
	//FVector3                                           DesiredColorScale;                                		// 0x00000C (0x000C)              
	//float                                              DesiredInterpTime;                                		// 0x000018 (0x0004)              
	//int                                                Idx;                                              		// 0x00001C (0x0004)              
	//class AColorScaleVolume*                           CSV;                                              		// 0x000020 (0x0004)              
};

void AColorScaleVolume::UnTouch(class AActor* Other)
{
	static UFieldFunc* pFnUnTouch = NULL;
	if(!pFnUnTouch)
		pFnUnTouch = UObject::FindFunction("Function Engine.ColorScaleVolume.UnTouch");

	Engine_UnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;
	ProcessEvent(pFnUnTouch,NULL,&UnTouch_Parms,NULL);
}

struct Engine_ServerSendInitialCoverReplicationInfo_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	//unsigned char                                      SlotsArrayIndex;                                  		// 0x000004 (0x0001)              
	//unsigned char                                      NumSlotsEnabled;                                  		// 0x000005 (0x0001)              
	//unsigned char                                      NumSlotsDisabled;                                 		// 0x000006 (0x0001)              
	//unsigned char                                      NumSlotsAdjusted;                                 		// 0x000007 (0x0001)              
	//unsigned char                                      NumCoverTypesChanged;                             		// 0x000008 (0x0001)              
	//unsigned char                                      SlotsEnabled[0x8];                                		// 0x000009 (0x0008)              
	//unsigned char                                      SlotsDisabled[0x8];                               		// 0x000011 (0x0008)              
	//unsigned char                                      SlotsAdjusted[0x8];                               		// 0x000019 (0x0008)              
	unsigned char                                      _0x000021[0x3];                                   		// 0x000021 (0x0003) ALIGNEMENT
	//struct FManualCoverTypeInfo                        SlotsCoverTypeChanged[0x8];                       		// 0x000024 (0x0020)              
	//int                                                I;                                                		// 0x000044 (0x0004)              
	//unsigned long                                      bDone : 1;                                        		// 0x000048 (0x0004) [0x00000001] 
};

void ACoverReplicator::ServerSendInitialCoverReplicationInfo(int Index)
{
	static UFieldFunc* pFnServerSendInitialCoverReplicationInfo = NULL;
	if(!pFnServerSendInitialCoverReplicationInfo)
		pFnServerSendInitialCoverReplicationInfo = UObject::FindFunction("Function Engine.CoverReplicator.ServerSendInitialCoverReplicationInfo");

	Engine_ServerSendInitialCoverReplicationInfo_Parms ServerSendInitialCoverReplicationInfo_Parms;
	ServerSendInitialCoverReplicationInfo_Parms.Index = Index;
	ProcessEvent(pFnServerSendInitialCoverReplicationInfo,NULL,&ServerSendInitialCoverReplicationInfo_Parms,NULL);
}

struct Engine_ServerSendDisabledSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	//int                                                SlotsArrayIndex;                                  		// 0x000004 (0x0004)              
	//unsigned char                                      NumSlotsDisabled;                                 		// 0x000008 (0x0001)              
	//unsigned char                                      SlotsDisabled[0x8];                               		// 0x000009 (0x0008)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	//int                                                I;                                                		// 0x000014 (0x0004)              
	//unsigned long                                      bDone : 1;                                        		// 0x000018 (0x0004) [0x00000001] 
};

void ACoverReplicator::ServerSendDisabledSlots(int Index)
{
	static UFieldFunc* pFnServerSendDisabledSlots = NULL;
	if(!pFnServerSendDisabledSlots)
		pFnServerSendDisabledSlots = UObject::FindFunction("Function Engine.CoverReplicator.ServerSendDisabledSlots");

	Engine_ServerSendDisabledSlots_Parms ServerSendDisabledSlots_Parms;
	ServerSendDisabledSlots_Parms.Index = Index;
	ProcessEvent(pFnServerSendDisabledSlots,NULL,&ServerSendDisabledSlots_Parms,NULL);
}

struct Engine_ClientReceiveDisabledSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class ACoverLink*                                  Link;                                             		// 0x000004 (0x0004)              
	unsigned char                                      NumSlotsDisabled;                                 		// 0x000008 (0x0001)              
	unsigned char                                      SlotsDisabled[0x8];                               		// 0x000009 (0x0008)              
	unsigned long                                      bDone : 1;                                        		// 0x000014 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void ACoverReplicator::ClientReceiveDisabledSlots(int Index,class ACoverLink* Link,unsigned char NumSlotsDisabled,unsigned char* SlotsDisabled,bool bDone)
{
	static UFieldFunc* pFnClientReceiveDisabledSlots = NULL;
	if(!pFnClientReceiveDisabledSlots)
		pFnClientReceiveDisabledSlots = UObject::FindFunction("Function Engine.CoverReplicator.ClientReceiveDisabledSlots");

	Engine_ClientReceiveDisabledSlots_Parms ClientReceiveDisabledSlots_Parms;
	ClientReceiveDisabledSlots_Parms.Index = Index;
	ClientReceiveDisabledSlots_Parms.Link = Link;
	ClientReceiveDisabledSlots_Parms.NumSlotsDisabled = NumSlotsDisabled;
	memcpy(&ClientReceiveDisabledSlots_Parms.SlotsDisabled,&SlotsDisabled,0x8);
	ClientReceiveDisabledSlots_Parms.bDone = bDone;
	ProcessEvent(pFnClientReceiveDisabledSlots,NULL,&ClientReceiveDisabledSlots_Parms,NULL);
}

struct Engine_PurgeOldEntries_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
};

void ACoverReplicator::PurgeOldEntries()
{
	static UFieldFunc* pFnPurgeOldEntries = NULL;
	if(!pFnPurgeOldEntries)
		pFnPurgeOldEntries = UObject::FindFunction("Function Engine.CoverReplicator.PurgeOldEntries");

	Engine_PurgeOldEntries_Parms PurgeOldEntries_Parms;
	ProcessEvent(pFnPurgeOldEntries,NULL,&PurgeOldEntries_Parms,NULL);
}

struct Engine_NotifyDisabledSlots_Parms
{
	class ACoverLink*                                  Link;                                             		// 0x000000 (0x0004)              
	TArray<int>                                        SlotIndices;                                      		// 0x000004 (0x000C)              
	//int                                                Index;                                            		// 0x000010 (0x0004)              
	//int                                                SlotIndex;                                        		// 0x000014 (0x0004)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x00001C (0x0004)              
};

void ACoverReplicator::NotifyDisabledSlots(class ACoverLink* Link,TArray<int>* SlotIndices)
{
	static UFieldFunc* pFnNotifyDisabledSlots = NULL;
	if(!pFnNotifyDisabledSlots)
		pFnNotifyDisabledSlots = UObject::FindFunction("Function Engine.CoverReplicator.NotifyDisabledSlots");

	Engine_NotifyDisabledSlots_Parms NotifyDisabledSlots_Parms;
	NotifyDisabledSlots_Parms.Link = Link;
	ProcessEvent(pFnNotifyDisabledSlots,NULL,&NotifyDisabledSlots_Parms,NULL);
	if(SlotIndices)
		memcpy(SlotIndices,&NotifyDisabledSlots_Parms.SlotIndices,0xC);
}

struct Engine_ReplicateInitialCoverInfo_Parms
{
	//class ACoverReplicator*                            CoverReplicatorBase;                              		// 0x000000 (0x0004)              
};

void ACoverReplicator::ReplicateInitialCoverInfo()
{
	static UFieldFunc* pFnReplicateInitialCoverInfo = NULL;
	if(!pFnReplicateInitialCoverInfo)
		pFnReplicateInitialCoverInfo = UObject::FindFunction("Function Engine.CoverReplicator.ReplicateInitialCoverInfo");

	Engine_ReplicateInitialCoverInfo_Parms ReplicateInitialCoverInfo_Parms;
	ProcessEvent(pFnReplicateInitialCoverInfo,NULL,&ReplicateInitialCoverInfo_Parms,NULL);
}

struct Engine_NotifyEnabledSlots_Parms
{
	class ACoverLink*                                  Link;                                             		// 0x000000 (0x0004)              
	TArray<int>                                        SlotIndices;                                      		// 0x000004 (0x000C)              
	//int                                                Index;                                            		// 0x000010 (0x0004)              
	//int                                                SlotIndex;                                        		// 0x000014 (0x0004)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x00001C (0x0004)              
};

void ACoverReplicator::NotifyEnabledSlots(class ACoverLink* Link,TArray<int>* SlotIndices)
{
	static UFieldFunc* pFnNotifyEnabledSlots = NULL;
	if(!pFnNotifyEnabledSlots)
		pFnNotifyEnabledSlots = UObject::FindFunction("Function Engine.CoverReplicator.NotifyEnabledSlots");

	Engine_NotifyEnabledSlots_Parms NotifyEnabledSlots_Parms;
	NotifyEnabledSlots_Parms.Link = Link;
	ProcessEvent(pFnNotifyEnabledSlots,NULL,&NotifyEnabledSlots_Parms,NULL);
	if(SlotIndices)
		memcpy(SlotIndices,&NotifyEnabledSlots_Parms.SlotIndices,0xC);
}

struct Engine_NotifyAutoAdjustSlots_Parms
{
	class ACoverLink*                                  Link;                                             		// 0x000000 (0x0004)              
	TArray<int>                                        SlotIndices;                                      		// 0x000004 (0x000C)              
	//int                                                Index;                                            		// 0x000010 (0x0004)              
	//int                                                SlotIndex;                                        		// 0x000014 (0x0004)              
	//int                                                I;                                                		// 0x000018 (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x00001C (0x0004)              
};

void ACoverReplicator::NotifyAutoAdjustSlots(class ACoverLink* Link,TArray<int>* SlotIndices)
{
	static UFieldFunc* pFnNotifyAutoAdjustSlots = NULL;
	if(!pFnNotifyAutoAdjustSlots)
		pFnNotifyAutoAdjustSlots = UObject::FindFunction("Function Engine.CoverReplicator.NotifyAutoAdjustSlots");

	Engine_NotifyAutoAdjustSlots_Parms NotifyAutoAdjustSlots_Parms;
	NotifyAutoAdjustSlots_Parms.Link = Link;
	ProcessEvent(pFnNotifyAutoAdjustSlots,NULL,&NotifyAutoAdjustSlots_Parms,NULL);
	if(SlotIndices)
		memcpy(SlotIndices,&NotifyAutoAdjustSlots_Parms.SlotIndices,0xC);
}

struct Engine_ClientReceiveAdjustedSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class ACoverLink*                                  Link;                                             		// 0x000004 (0x0004)              
	unsigned char                                      NumSlotsAdjusted;                                 		// 0x000008 (0x0001)              
	unsigned char                                      SlotsAdjusted[0x8];                               		// 0x000009 (0x0008)              
	unsigned long                                      bDone : 1;                                        		// 0x000014 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void ACoverReplicator::ClientReceiveAdjustedSlots(int Index,class ACoverLink* Link,unsigned char NumSlotsAdjusted,unsigned char* SlotsAdjusted,bool bDone)
{
	static UFieldFunc* pFnClientReceiveAdjustedSlots = NULL;
	if(!pFnClientReceiveAdjustedSlots)
		pFnClientReceiveAdjustedSlots = UObject::FindFunction("Function Engine.CoverReplicator.ClientReceiveAdjustedSlots");

	Engine_ClientReceiveAdjustedSlots_Parms ClientReceiveAdjustedSlots_Parms;
	ClientReceiveAdjustedSlots_Parms.Index = Index;
	ClientReceiveAdjustedSlots_Parms.Link = Link;
	ClientReceiveAdjustedSlots_Parms.NumSlotsAdjusted = NumSlotsAdjusted;
	memcpy(&ClientReceiveAdjustedSlots_Parms.SlotsAdjusted,&SlotsAdjusted,0x8);
	ClientReceiveAdjustedSlots_Parms.bDone = bDone;
	ProcessEvent(pFnClientReceiveAdjustedSlots,NULL,&ClientReceiveAdjustedSlots_Parms,NULL);
}

struct Engine_ServerSendAdjustedSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	//int                                                SlotsArrayIndex;                                  		// 0x000004 (0x0004)              
	//unsigned char                                      NumSlotsAdjusted;                                 		// 0x000008 (0x0001)              
	//unsigned char                                      SlotsAdjusted[0x8];                               		// 0x000009 (0x0008)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	//int                                                I;                                                		// 0x000014 (0x0004)              
	//unsigned long                                      bDone : 1;                                        		// 0x000018 (0x0004) [0x00000001] 
};

void ACoverReplicator::ServerSendAdjustedSlots(int Index)
{
	static UFieldFunc* pFnServerSendAdjustedSlots = NULL;
	if(!pFnServerSendAdjustedSlots)
		pFnServerSendAdjustedSlots = UObject::FindFunction("Function Engine.CoverReplicator.ServerSendAdjustedSlots");

	Engine_ServerSendAdjustedSlots_Parms ServerSendAdjustedSlots_Parms;
	ServerSendAdjustedSlots_Parms.Index = Index;
	ProcessEvent(pFnServerSendAdjustedSlots,NULL,&ServerSendAdjustedSlots_Parms,NULL);
}

struct Engine_ServerSendManualCoverTypeSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	//int                                                SlotsArrayIndex;                                  		// 0x000004 (0x0004)              
	//unsigned char                                      NumCoverTypesChanged;                             		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	//struct FManualCoverTypeInfo                        SlotsCoverTypeChanged[0x8];                       		// 0x00000C (0x0020)              
	//int                                                I;                                                		// 0x00002C (0x0004)              
	//unsigned long                                      bDone : 1;                                        		// 0x000030 (0x0004) [0x00000001] 
};

void ACoverReplicator::ServerSendManualCoverTypeSlots(int Index)
{
	static UFieldFunc* pFnServerSendManualCoverTypeSlots = NULL;
	if(!pFnServerSendManualCoverTypeSlots)
		pFnServerSendManualCoverTypeSlots = UObject::FindFunction("Function Engine.CoverReplicator.ServerSendManualCoverTypeSlots");

	Engine_ServerSendManualCoverTypeSlots_Parms ServerSendManualCoverTypeSlots_Parms;
	ServerSendManualCoverTypeSlots_Parms.Index = Index;
	ProcessEvent(pFnServerSendManualCoverTypeSlots,NULL,&ServerSendManualCoverTypeSlots_Parms,NULL);
}

struct Engine_ServerSendEnabledSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	//int                                                SlotsArrayIndex;                                  		// 0x000004 (0x0004)              
	//unsigned char                                      NumSlotsEnabled;                                  		// 0x000008 (0x0001)              
	//unsigned char                                      SlotsEnabled[0x8];                                		// 0x000009 (0x0008)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	//int                                                I;                                                		// 0x000014 (0x0004)              
	//unsigned long                                      bDone : 1;                                        		// 0x000018 (0x0004) [0x00000001] 
};

void ACoverReplicator::ServerSendEnabledSlots(int Index)
{
	static UFieldFunc* pFnServerSendEnabledSlots = NULL;
	if(!pFnServerSendEnabledSlots)
		pFnServerSendEnabledSlots = UObject::FindFunction("Function Engine.CoverReplicator.ServerSendEnabledSlots");

	Engine_ServerSendEnabledSlots_Parms ServerSendEnabledSlots_Parms;
	ServerSendEnabledSlots_Parms.Index = Index;
	ProcessEvent(pFnServerSendEnabledSlots,NULL,&ServerSendEnabledSlots_Parms,NULL);
}

struct Engine_NotifySetManualCoverTypeForSlots_Parms
{
	class ACoverLink*                                  Link;                                             		// 0x000000 (0x0004)              
	TArray<int>                                        SlotIndices;                                      		// 0x000004 (0x000C)              
	unsigned char                                      NewCoverType;                                     		// 0x000010 (0x0001)              
	unsigned char                                      _0x000011[0x3];                                   		// 0x000011 (0x0003) ALIGNEMENT
	//int                                                Index;                                            		// 0x000014 (0x0004)              
	//int                                                SlotIndex;                                        		// 0x000018 (0x0004)              
	//int                                                I;                                                		// 0x00001C (0x0004)              
	//class APlayerController*                           PC;                                               		// 0x000020 (0x0004)              
};

void ACoverReplicator::NotifySetManualCoverTypeForSlots(class ACoverLink* Link,TArray<int>* SlotIndices,unsigned char NewCoverType)
{
	static UFieldFunc* pFnNotifySetManualCoverTypeForSlots = NULL;
	if(!pFnNotifySetManualCoverTypeForSlots)
		pFnNotifySetManualCoverTypeForSlots = UObject::FindFunction("Function Engine.CoverReplicator.NotifySetManualCoverTypeForSlots");

	Engine_NotifySetManualCoverTypeForSlots_Parms NotifySetManualCoverTypeForSlots_Parms;
	NotifySetManualCoverTypeForSlots_Parms.Link = Link;
	NotifySetManualCoverTypeForSlots_Parms.NewCoverType = NewCoverType;
	ProcessEvent(pFnNotifySetManualCoverTypeForSlots,NULL,&NotifySetManualCoverTypeForSlots_Parms,NULL);
	if(SlotIndices)
		memcpy(SlotIndices,&NotifySetManualCoverTypeForSlots_Parms.SlotIndices,0xC);
}

struct Engine_ClientReceiveEnabledSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class ACoverLink*                                  Link;                                             		// 0x000004 (0x0004)              
	unsigned char                                      NumSlotsEnabled;                                  		// 0x000008 (0x0001)              
	unsigned char                                      SlotsEnabled[0x8];                                		// 0x000009 (0x0008)              
	unsigned long                                      bDone : 1;                                        		// 0x000014 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000018 (0x0004)              
};

void ACoverReplicator::ClientReceiveEnabledSlots(int Index,class ACoverLink* Link,unsigned char NumSlotsEnabled,unsigned char* SlotsEnabled,bool bDone)
{
	static UFieldFunc* pFnClientReceiveEnabledSlots = NULL;
	if(!pFnClientReceiveEnabledSlots)
		pFnClientReceiveEnabledSlots = UObject::FindFunction("Function Engine.CoverReplicator.ClientReceiveEnabledSlots");

	Engine_ClientReceiveEnabledSlots_Parms ClientReceiveEnabledSlots_Parms;
	ClientReceiveEnabledSlots_Parms.Index = Index;
	ClientReceiveEnabledSlots_Parms.Link = Link;
	ClientReceiveEnabledSlots_Parms.NumSlotsEnabled = NumSlotsEnabled;
	memcpy(&ClientReceiveEnabledSlots_Parms.SlotsEnabled,&SlotsEnabled,0x8);
	ClientReceiveEnabledSlots_Parms.bDone = bDone;
	ProcessEvent(pFnClientReceiveEnabledSlots,NULL,&ClientReceiveEnabledSlots_Parms,NULL);
}

struct Engine_ClientReceiveManualCoverTypeSlots_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class ACoverLink*                                  Link;                                             		// 0x000004 (0x0004)              
	unsigned char                                      NumCoverTypesChanged;                             		// 0x000008 (0x0001)              
	unsigned char                                      _0x000009[0x3];                                   		// 0x000009 (0x0003) ALIGNEMENT
	struct FManualCoverTypeInfo                        SlotsCoverTypeChanged[0x8];                       		// 0x00000C (0x0020)              
	unsigned long                                      bDone : 1;                                        		// 0x00002C (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000030 (0x0004)              
};

void ACoverReplicator::ClientReceiveManualCoverTypeSlots(int Index,class ACoverLink* Link,unsigned char NumCoverTypesChanged,struct FManualCoverTypeInfo* SlotsCoverTypeChanged,bool bDone)
{
	static UFieldFunc* pFnClientReceiveManualCoverTypeSlots = NULL;
	if(!pFnClientReceiveManualCoverTypeSlots)
		pFnClientReceiveManualCoverTypeSlots = UObject::FindFunction("Function Engine.CoverReplicator.ClientReceiveManualCoverTypeSlots");

	Engine_ClientReceiveManualCoverTypeSlots_Parms ClientReceiveManualCoverTypeSlots_Parms;
	ClientReceiveManualCoverTypeSlots_Parms.Index = Index;
	ClientReceiveManualCoverTypeSlots_Parms.Link = Link;
	ClientReceiveManualCoverTypeSlots_Parms.NumCoverTypesChanged = NumCoverTypesChanged;
	memcpy(&ClientReceiveManualCoverTypeSlots_Parms.SlotsCoverTypeChanged,&SlotsCoverTypeChanged,0x20);
	ClientReceiveManualCoverTypeSlots_Parms.bDone = bDone;
	ProcessEvent(pFnClientReceiveManualCoverTypeSlots,NULL,&ClientReceiveManualCoverTypeSlots_Parms,NULL);
}

struct Engine_ClientReceiveInitialCoverReplicationInfo_Parms
{
	int                                                Index;                                            		// 0x000000 (0x0004)              
	class ACoverLink*                                  Link;                                             		// 0x000004 (0x0004)              
	unsigned char                                      NumSlotsEnabled;                                  		// 0x000008 (0x0001)              
	unsigned char                                      SlotsEnabled[0x8];                                		// 0x000009 (0x0008)              
	unsigned char                                      NumSlotsDisabled;                                 		// 0x000011 (0x0001)              
	unsigned char                                      SlotsDisabled[0x8];                               		// 0x000012 (0x0008)              
	unsigned char                                      NumSlotsAdjusted;                                 		// 0x00001A (0x0001)              
	unsigned char                                      SlotsAdjusted[0x8];                               		// 0x00001B (0x0008)              
	unsigned char                                      NumCoverTypesChanged;                             		// 0x000023 (0x0001)              
	struct FManualCoverTypeInfo                        SlotsCoverTypeChanged[0x8];                       		// 0x000024 (0x0020)              
	unsigned long                                      bDone : 1;                                        		// 0x000044 (0x0004) [0x00000001] 
	//int                                                I;                                                		// 0x000048 (0x0004)              
};

void ACoverReplicator::ClientReceiveInitialCoverReplicationInfo(int Index,class ACoverLink* Link,unsigned char NumSlotsEnabled,unsigned char* SlotsEnabled,unsigned char NumSlotsDisabled,unsigned char* SlotsDisabled,unsigned char NumSlotsAdjusted,unsigned char* SlotsAdjusted,unsigned char NumCoverTypesChanged,struct FManualCoverTypeInfo* SlotsCoverTypeChanged,bool bDone)
{
	static UFieldFunc* pFnClientReceiveInitialCoverReplicationInfo = NULL;
	if(!pFnClientReceiveInitialCoverReplicationInfo)
		pFnClientReceiveInitialCoverReplicationInfo = UObject::FindFunction("Function Engine.CoverReplicator.ClientReceiveInitialCoverReplicationInfo");

	Engine_ClientReceiveInitialCoverReplicationInfo_Parms ClientReceiveInitialCoverReplicationInfo_Parms;
	ClientReceiveInitialCoverReplicationInfo_Parms.Index = Index;
	ClientReceiveInitialCoverReplicationInfo_Parms.Link = Link;
	ClientReceiveInitialCoverReplicationInfo_Parms.NumSlotsEnabled = NumSlotsEnabled;
	memcpy(&ClientReceiveInitialCoverReplicationInfo_Parms.SlotsEnabled,&SlotsEnabled,0x8);
	ClientReceiveInitialCoverReplicationInfo_Parms.NumSlotsDisabled = NumSlotsDisabled;
	memcpy(&ClientReceiveInitialCoverReplicationInfo_Parms.SlotsDisabled,&SlotsDisabled,0x8);
	ClientReceiveInitialCoverReplicationInfo_Parms.NumSlotsAdjusted = NumSlotsAdjusted;
	memcpy(&ClientReceiveInitialCoverReplicationInfo_Parms.SlotsAdjusted,&SlotsAdjusted,0x8);
	ClientReceiveInitialCoverReplicationInfo_Parms.NumCoverTypesChanged = NumCoverTypesChanged;
	memcpy(&ClientReceiveInitialCoverReplicationInfo_Parms.SlotsCoverTypeChanged,&SlotsCoverTypeChanged,0x20);
	ClientReceiveInitialCoverReplicationInfo_Parms.bDone = bDone;
	ProcessEvent(pFnClientReceiveInitialCoverReplicationInfo,NULL,&ClientReceiveInitialCoverReplicationInfo_Parms,NULL);
}

struct Engine_NormalSpeed_Parms
{
};

void ADebugCameraController::NormalSpeed()
{
	static UFieldFunc* pFnNormalSpeed = NULL;
	if(!pFnNormalSpeed)
		pFnNormalSpeed = UObject::FindFunction("Function Engine.DebugCameraController.NormalSpeed");

	Engine_NormalSpeed_Parms NormalSpeed_Parms;
	ProcessEvent(pFnNormalSpeed,NULL,&NormalSpeed_Parms,NULL);
}

struct Engine_SetFreezeRendering_Parms
{
};

void ADebugCameraController::SetFreezeRendering()
{
	static UFieldFunc* pFnSetFreezeRendering = NULL;
	if(!pFnSetFreezeRendering)
		pFnSetFreezeRendering = UObject::FindFunction("Function Engine.DebugCameraController.SetFreezeRendering");

	Engine_SetFreezeRendering_Parms SetFreezeRendering_Parms;
	ProcessEvent(pFnSetFreezeRendering,NULL,&SetFreezeRendering_Parms,NULL);
}

struct Engine_MoreSpeed_Parms
{
};

void ADebugCameraController::MoreSpeed()
{
	static UFieldFunc* pFnMoreSpeed = NULL;
	if(!pFnMoreSpeed)
		pFnMoreSpeed = UObject::FindFunction("Function Engine.DebugCameraController.MoreSpeed");

	Engine_MoreSpeed_Parms MoreSpeed_Parms;
	ProcessEvent(pFnMoreSpeed,NULL,&MoreSpeed_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void ADebugCameraController::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.DebugCameraController.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_DisableDebugCamera_Parms
{
};

void ADebugCameraController::DisableDebugCamera()
{
	static UFieldFunc* pFnDisableDebugCamera = NULL;
	if(!pFnDisableDebugCamera)
		pFnDisableDebugCamera = UObject::FindFunction("Function Engine.DebugCameraController.DisableDebugCamera");

	Engine_DisableDebugCamera_Parms DisableDebugCamera_Parms;
	ProcessEvent(pFnDisableDebugCamera,NULL,&DisableDebugCamera_Parms,NULL);
}

struct Engine_OnDeactivate_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void ADebugCameraController::OnDeactivate(class APlayerController* PC)
{
	static UFieldFunc* pFnOnDeactivate = NULL;
	if(!pFnOnDeactivate)
		pFnOnDeactivate = UObject::FindFunction("Function Engine.DebugCameraController.OnDeactivate");

	Engine_OnDeactivate_Parms OnDeactivate_Parms;
	OnDeactivate_Parms.PC = PC;
	ProcessEvent(pFnOnDeactivate,NULL,&OnDeactivate_Parms,NULL);
}

struct Engine_OnActivate_Parms
{
	class APlayerController*                           PC;                                               		// 0x000000 (0x0004)              
};

void ADebugCameraController::OnActivate(class APlayerController* PC)
{
	static UFieldFunc* pFnOnActivate = NULL;
	if(!pFnOnActivate)
		pFnOnActivate = UObject::FindFunction("Function Engine.DebugCameraController.OnActivate");

	Engine_OnActivate_Parms OnActivate_Parms;
	OnActivate_Parms.PC = PC;
	ProcessEvent(pFnOnActivate,NULL,&OnActivate_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void ADebugCameraHUD::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.DebugCameraHUD.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_PostRender_Parms
{
	//class ADebugCameraController*                      DCC;                                              		// 0x000000 (0x0004)              
	//float                                              XL;                                               		// 0x000004 (0x0004)              
	//float                                              YL;                                               		// 0x000008 (0x0004)              
	//float                                              X;                                                		// 0x00000C (0x0004)              
	//float                                              Y;                                                		// 0x000010 (0x0004)              
	//struct FString                                     MyText;                                           		// 0x000014 (0x000C)              
	//FVector3                                           CamLoc;                                           		// 0x000020 (0x000C)              
	//FVector3                                           ZeroVec;                                          		// 0x00002C (0x000C)              
	//FRotator                                           CamRot;                                           		// 0x000038 (0x000C)              
	//struct FTraceHitInfo                               HitInfo;                                          		// 0x000044 (0x001C)              
	//class AActor*                                      HitActor;                                         		// 0x000060 (0x0004)              
	//FVector3                                           HitLoc;                                           		// 0x000064 (0x000C)              
	//FVector3                                           HitNormal;                                        		// 0x000070 (0x000C)              
};

void ADebugCameraHUD::PostRender()
{
	static UFieldFunc* pFnPostRender = NULL;
	if(!pFnPostRender)
		pFnPostRender = UObject::FindFunction("Function Engine.DebugCameraHUD.PostRender");

	Engine_PostRender_Parms PostRender_Parms;
	ProcessEvent(pFnPostRender,NULL,&PostRender_Parms,NULL);
}

struct Engine_TriggerDialogueEvent_Parms
{
	class UClass*                                      InEventClass;                                     		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	class AActor*                                      InOriginator;                                     		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool ADialogueManager::TriggerDialogueEvent(class UClass* InEventClass,class AActor* InInstigator,class AActor* InOriginator)
{
	static UFieldFunc* pFnTriggerDialogueEvent = NULL;
	if(!pFnTriggerDialogueEvent)
		pFnTriggerDialogueEvent = UObject::FindFunction("Function Engine.DialogueManager.TriggerDialogueEvent");

	Engine_TriggerDialogueEvent_Parms TriggerDialogueEvent_Parms;
	TriggerDialogueEvent_Parms.InEventClass = InEventClass;
	TriggerDialogueEvent_Parms.InInstigator = InInstigator;
	TriggerDialogueEvent_Parms.InOriginator = InOriginator;
	ProcessEvent(pFnTriggerDialogueEvent,NULL,&TriggerDialogueEvent_Parms,NULL);
	return TriggerDialogueEvent_Parms.ReturnValue;
}

struct Engine_SetTemplate_Parms
{
	class UParticleSystem*                             NewTemplate;                                      		// 0x000000 (0x0004)              
	unsigned long                                      bDestroyOnFinish : 1;                             		// 0x000004 (0x0004) [0x00000001] 
};

void AEmitterSpawnable::SetTemplate(class UParticleSystem* NewTemplate,bool bDestroyOnFinish)
{
	static UFieldFunc* pFnSetTemplate = NULL;
	if(!pFnSetTemplate)
		pFnSetTemplate = UObject::FindFunction("Function Engine.EmitterSpawnable.SetTemplate");

	Engine_SetTemplate_Parms SetTemplate_Parms;
	SetTemplate_Parms.NewTemplate = NewTemplate;
	SetTemplate_Parms.bDestroyOnFinish = bDestroyOnFinish;
	ProcessEvent(pFnSetTemplate,NULL,&SetTemplate_Parms,NULL);
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AEmitterSpawnable::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.EmitterSpawnable.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_GetString_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bPRI1HUD : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000014 (0x000C)              
};

struct FString UFailedConnect::GetString(int Switch,bool bPRI1HUD,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnGetString = NULL;
	if(!pFnGetString)
		pFnGetString = UObject::FindFunction("Function Engine.FailedConnect.GetString");

	Engine_GetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnGetString,NULL,&GetString_Parms,NULL);
	return GetString_Parms.ReturnValue;
}

struct Engine_GetFailSwitch_Parms
{
	struct FString                                     FailString;                                       		// 0x000000 (0x000C)              
	int                                                ReturnValue;                                      		// 0x00000C (0x0004)              
};

int UFailedConnect::GetFailSwitch(struct FString FailString)
{
	static UFieldFunc* pFnGetFailSwitch = NULL;
	if(!pFnGetFailSwitch)
		pFnGetFailSwitch = UObject::FindFunction("Function Engine.FailedConnect.GetFailSwitch");

	Engine_GetFailSwitch_Parms GetFailSwitch_Parms;
	memcpy(&GetFailSwitch_Parms.FailString,&FailString,0xC);
	ProcessEvent(pFnGetFailSwitch,NULL,&GetFailSwitch_Parms,NULL);
	return GetFailSwitch_Parms.ReturnValue;
}

struct Engine_GetConsoleColor_Parms
{
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000000 (0x0004)              
	DWORD                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

DWORD ULocalMessage::GetConsoleColor(class APlayerReplicationInfo* RelatedPRI)
{
	static UFieldFunc* pFnGetConsoleColor = NULL;
	if(!pFnGetConsoleColor)
		pFnGetConsoleColor = UObject::FindFunction("Function Engine.LocalMessage.GetConsoleColor");

	Engine_GetConsoleColor_Parms GetConsoleColor_Parms;
	GetConsoleColor_Parms.RelatedPRI = RelatedPRI;
	ProcessEvent(pFnGetConsoleColor,NULL,&GetConsoleColor_Parms,NULL);
	return GetConsoleColor_Parms.ReturnValue;
}

struct Engine_GetFontSize_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI1;                                      		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI2;                                      		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      LocalPlayer;                                      		// 0x00000C (0x0004)              
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
};

int ULocalMessage::GetFontSize(int Switch,class APlayerReplicationInfo* RelatedPRI1,class APlayerReplicationInfo* RelatedPRI2,class APlayerReplicationInfo* LocalPlayer)
{
	static UFieldFunc* pFnGetFontSize = NULL;
	if(!pFnGetFontSize)
		pFnGetFontSize = UObject::FindFunction("Function Engine.LocalMessage.GetFontSize");

	Engine_GetFontSize_Parms GetFontSize_Parms;
	GetFontSize_Parms.Switch = Switch;
	GetFontSize_Parms.RelatedPRI1 = RelatedPRI1;
	GetFontSize_Parms.RelatedPRI2 = RelatedPRI2;
	GetFontSize_Parms.LocalPlayer = LocalPlayer;
	ProcessEvent(pFnGetFontSize,NULL,&GetFontSize_Parms,NULL);
	return GetFontSize_Parms.ReturnValue;
}

struct Engine_IsConsoleMessage_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ULocalMessage::IsConsoleMessage(int Switch)
{
	static UFieldFunc* pFnIsConsoleMessage = NULL;
	if(!pFnIsConsoleMessage)
		pFnIsConsoleMessage = UObject::FindFunction("Function Engine.LocalMessage.IsConsoleMessage");

	Engine_IsConsoleMessage_Parms IsConsoleMessage_Parms;
	IsConsoleMessage_Parms.Switch = Switch;
	ProcessEvent(pFnIsConsoleMessage,NULL,&IsConsoleMessage_Parms,NULL);
	return IsConsoleMessage_Parms.ReturnValue;
}

struct Engine_GetLifeTime_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000004 (0x0004)              
};

float ULocalMessage::GetLifeTime(int Switch)
{
	static UFieldFunc* pFnGetLifeTime = NULL;
	if(!pFnGetLifeTime)
		pFnGetLifeTime = UObject::FindFunction("Function Engine.LocalMessage.GetLifeTime");

	Engine_GetLifeTime_Parms GetLifeTime_Parms;
	GetLifeTime_Parms.Switch = Switch;
	ProcessEvent(pFnGetLifeTime,NULL,&GetLifeTime_Parms,NULL);
	return GetLifeTime_Parms.ReturnValue;
}

struct Engine_ClientReceive_Parms
{
	class APlayerController*                           P;                                                		// 0x000000 (0x0004)              
	int                                                Switch;                                           		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
	//struct FString                                     MessageString;                                    		// 0x000014 (0x000C)              
};

void ULocalMessage::ClientReceive(class APlayerController* P,int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnClientReceive = NULL;
	if(!pFnClientReceive)
		pFnClientReceive = UObject::FindFunction("Function Engine.LocalMessage.ClientReceive");

	Engine_ClientReceive_Parms ClientReceive_Parms;
	ClientReceive_Parms.P = P;
	ClientReceive_Parms.Switch = Switch;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.RelatedPRI = RelatedPRI;
	ClientReceive_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnClientReceive,NULL,&ClientReceive_Parms,NULL);
}

struct Engine_GetString_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bPRI1HUD : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000014 (0x000C)              
};

struct FString ULocalMessage::GetString(int Switch,bool bPRI1HUD,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnGetString = NULL;
	if(!pFnGetString)
		pFnGetString = UObject::FindFunction("Function Engine.LocalMessage.GetString");

	Engine_GetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnGetString,NULL,&GetString_Parms,NULL);
	return GetString_Parms.ReturnValue;
}

struct Engine_GetColor_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000004 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x00000C (0x0004)              
	DWORD                                              ReturnValue;                                      		// 0x000010 (0x0004)              
};

DWORD ULocalMessage::GetColor(int Switch,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnGetColor = NULL;
	if(!pFnGetColor)
		pFnGetColor = UObject::FindFunction("Function Engine.LocalMessage.GetColor");

	Engine_GetColor_Parms GetColor_Parms;
	GetColor_Parms.Switch = Switch;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.RelatedPRI = RelatedPRI;
	GetColor_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnGetColor,NULL,&GetColor_Parms,NULL);
	return GetColor_Parms.ReturnValue;
}

struct Engine_PartiallyDuplicates_Parms
{
	int                                                Switch1;                                          		// 0x000000 (0x0004)              
	int                                                Switch2;                                          		// 0x000004 (0x0004)              
	class UObject*                                     OptionalObject1;                                  		// 0x000008 (0x0004)              
	class UObject*                                     OptionalObject2;                                  		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool ULocalMessage::PartiallyDuplicates(int Switch1,int Switch2,class UObject* OptionalObject1,class UObject* OptionalObject2)
{
	static UFieldFunc* pFnPartiallyDuplicates = NULL;
	if(!pFnPartiallyDuplicates)
		pFnPartiallyDuplicates = UObject::FindFunction("Function Engine.LocalMessage.PartiallyDuplicates");

	Engine_PartiallyDuplicates_Parms PartiallyDuplicates_Parms;
	PartiallyDuplicates_Parms.Switch1 = Switch1;
	PartiallyDuplicates_Parms.Switch2 = Switch2;
	PartiallyDuplicates_Parms.OptionalObject1 = OptionalObject1;
	PartiallyDuplicates_Parms.OptionalObject2 = OptionalObject2;
	ProcessEvent(pFnPartiallyDuplicates,NULL,&PartiallyDuplicates_Parms,NULL);
	return PartiallyDuplicates_Parms.ReturnValue;
}

struct Engine_IsKeyObjectiveMessage_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ULocalMessage::IsKeyObjectiveMessage(int Switch)
{
	static UFieldFunc* pFnIsKeyObjectiveMessage = NULL;
	if(!pFnIsKeyObjectiveMessage)
		pFnIsKeyObjectiveMessage = UObject::FindFunction("Function Engine.LocalMessage.IsKeyObjectiveMessage");

	Engine_IsKeyObjectiveMessage_Parms IsKeyObjectiveMessage_Parms;
	IsKeyObjectiveMessage_Parms.Switch = Switch;
	ProcessEvent(pFnIsKeyObjectiveMessage,NULL,&IsKeyObjectiveMessage_Parms,NULL);
	return IsKeyObjectiveMessage_Parms.ReturnValue;
}

struct Engine_GetPos_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	class AHUD*                                        myHUD;                                            		// 0x000004 (0x0004)              
	float                                              ReturnValue;                                      		// 0x000008 (0x0004)              
};

float ULocalMessage::GetPos(int Switch,class AHUD* myHUD)
{
	static UFieldFunc* pFnGetPos = NULL;
	if(!pFnGetPos)
		pFnGetPos = UObject::FindFunction("Function Engine.LocalMessage.GetPos");

	Engine_GetPos_Parms GetPos_Parms;
	GetPos_Parms.Switch = Switch;
	GetPos_Parms.myHUD = myHUD;
	ProcessEvent(pFnGetPos,NULL,&GetPos_Parms,NULL);
	return GetPos_Parms.ReturnValue;
}

struct Engine_GetString_Parms
{
	int                                                Switch;                                           		// 0x000000 (0x0004)              
	unsigned long                                      bPRI1HUD : 1;                                     		// 0x000004 (0x0004) [0x00000001] 
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x000008 (0x0004)              
	class APlayerReplicationInfo*                      RelatedPRI;                                       		// 0x00000C (0x0004)              
	class UObject*                                     OptionalObject;                                   		// 0x000010 (0x0004)              
	struct FString                                     ReturnValue;                                      		// 0x000014 (0x000C)              
};

struct FString UGameMessage::GetString(int Switch,bool bPRI1HUD,class APlayerReplicationInfo* RelatedPRI,class APlayerReplicationInfo* RelatedPRI,class UObject* OptionalObject)
{
	static UFieldFunc* pFnGetString = NULL;
	if(!pFnGetString)
		pFnGetString = UObject::FindFunction("Function Engine.GameMessage.GetString");

	Engine_GetString_Parms GetString_Parms;
	GetString_Parms.Switch = Switch;
	GetString_Parms.bPRI1HUD = bPRI1HUD;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.RelatedPRI = RelatedPRI;
	GetString_Parms.OptionalObject = OptionalObject;
	ProcessEvent(pFnGetString,NULL,&GetString_Parms,NULL);
	return GetString_Parms.ReturnValue;
}

struct Engine_NetDamage_Parms
{
	int                                                OriginalDamage;                                   		// 0x000000 (0x0004)              
	int                                                Damage;                                           		// 0x000004 (0x0004)              
	class APawn*                                       injured;                                          		// 0x000008 (0x0004)              
	class AController*                                 InstigatedBy;                                     		// 0x00000C (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000010 (0x000C)              
	FVector3                                           Momentum;                                         		// 0x00001C (0x000C)              
	class UClass*                                      DamageType;                                       		// 0x000028 (0x0004)              
};

void AGameRules::NetDamage(int OriginalDamage,int* Damage,class APawn* injured,class AController* InstigatedBy,FVector3 HitLocation,FVector3* Momentum,class UClass* DamageType)
{
	static UFieldFunc* pFnNetDamage = NULL;
	if(!pFnNetDamage)
		pFnNetDamage = UObject::FindFunction("Function Engine.GameRules.NetDamage");

	Engine_NetDamage_Parms NetDamage_Parms;
	NetDamage_Parms.OriginalDamage = OriginalDamage;
	NetDamage_Parms.injured = injured;
	NetDamage_Parms.InstigatedBy = InstigatedBy;
	memcpy(&NetDamage_Parms.HitLocation,&HitLocation,0xC);
	NetDamage_Parms.DamageType = DamageType;
	ProcessEvent(pFnNetDamage,NULL,&NetDamage_Parms,NULL);
	if(Damage)
		*Damage = NetDamage_Parms.Damage;
	if(Momentum)
		memcpy(Momentum,&NetDamage_Parms.Momentum,0xC);
}

struct Engine_HandleRestartGame_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AGameRules::HandleRestartGame()
{
	static UFieldFunc* pFnHandleRestartGame = NULL;
	if(!pFnHandleRestartGame)
		pFnHandleRestartGame = UObject::FindFunction("Function Engine.GameRules.HandleRestartGame");

	Engine_HandleRestartGame_Parms HandleRestartGame_Parms;
	ProcessEvent(pFnHandleRestartGame,NULL,&HandleRestartGame_Parms,NULL);
	return HandleRestartGame_Parms.ReturnValue;
}

struct Engine_GetRules_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
	//struct FString                                     ResultSet;                                        		// 0x00000C (0x000C)              
};

struct FString AGameRules::GetRules()
{
	static UFieldFunc* pFnGetRules = NULL;
	if(!pFnGetRules)
		pFnGetRules = UObject::FindFunction("Function Engine.GameRules.GetRules");

	Engine_GetRules_Parms GetRules_Parms;
	ProcessEvent(pFnGetRules,NULL,&GetRules_Parms,NULL);
	return GetRules_Parms.ReturnValue;
}

struct Engine_FindPlayerStart_Parms
{
	class AController*                                 Player;                                           		// 0x000000 (0x0004)              
	unsigned char                                      InTeam;                                           		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	struct FString                                     IncomingName;                                     		// 0x000008 (0x000C)              
	class ANavigationPoint*                            ReturnValue;                                      		// 0x000014 (0x0004)              
};

class ANavigationPoint* AGameRules::FindPlayerStart(class AController* Player,unsigned char InTeam,struct FString IncomingName)
{
	static UFieldFunc* pFnFindPlayerStart = NULL;
	if(!pFnFindPlayerStart)
		pFnFindPlayerStart = UObject::FindFunction("Function Engine.GameRules.FindPlayerStart");

	Engine_FindPlayerStart_Parms FindPlayerStart_Parms;
	FindPlayerStart_Parms.Player = Player;
	FindPlayerStart_Parms.InTeam = InTeam;
	memcpy(&FindPlayerStart_Parms.IncomingName,&IncomingName,0xC);
	ProcessEvent(pFnFindPlayerStart,NULL,&FindPlayerStart_Parms,NULL);
	return FindPlayerStart_Parms.ReturnValue;
}

struct Engine_CheckEndGame_Parms
{
	class APlayerReplicationInfo*                      Winner;                                           		// 0x000000 (0x0004)              
	struct FString                                     Reason;                                           		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool AGameRules::CheckEndGame(class APlayerReplicationInfo* Winner,struct FString Reason)
{
	static UFieldFunc* pFnCheckEndGame = NULL;
	if(!pFnCheckEndGame)
		pFnCheckEndGame = UObject::FindFunction("Function Engine.GameRules.CheckEndGame");

	Engine_CheckEndGame_Parms CheckEndGame_Parms;
	CheckEndGame_Parms.Winner = Winner;
	memcpy(&CheckEndGame_Parms.Reason,&Reason,0xC);
	ProcessEvent(pFnCheckEndGame,NULL,&CheckEndGame_Parms,NULL);
	return CheckEndGame_Parms.ReturnValue;
}

struct Engine_ScoreKill_Parms
{
	class AController*                                 Killer;                                           		// 0x000000 (0x0004)              
	class AController*                                 Killed;                                           		// 0x000004 (0x0004)              
};

void AGameRules::ScoreKill(class AController* Killer,class AController* Killed)
{
	static UFieldFunc* pFnScoreKill = NULL;
	if(!pFnScoreKill)
		pFnScoreKill = UObject::FindFunction("Function Engine.GameRules.ScoreKill");

	Engine_ScoreKill_Parms ScoreKill_Parms;
	ScoreKill_Parms.Killer = Killer;
	ScoreKill_Parms.Killed = Killed;
	ProcessEvent(pFnScoreKill,NULL,&ScoreKill_Parms,NULL);
}

struct Engine_PreventDeath_Parms
{
	class APawn*                                       Killed;                                           		// 0x000000 (0x0004)              
	class AController*                                 Killer;                                           		// 0x000004 (0x0004)              
	class UClass*                                      DamageType;                                       		// 0x000008 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool AGameRules::PreventDeath(class APawn* Killed,class AController* Killer,class UClass* DamageType,FVector3 HitLocation)
{
	static UFieldFunc* pFnPreventDeath = NULL;
	if(!pFnPreventDeath)
		pFnPreventDeath = UObject::FindFunction("Function Engine.GameRules.PreventDeath");

	Engine_PreventDeath_Parms PreventDeath_Parms;
	PreventDeath_Parms.Killed = Killed;
	PreventDeath_Parms.Killer = Killer;
	PreventDeath_Parms.DamageType = DamageType;
	memcpy(&PreventDeath_Parms.HitLocation,&HitLocation,0xC);
	ProcessEvent(pFnPreventDeath,NULL,&PreventDeath_Parms,NULL);
	return PreventDeath_Parms.ReturnValue;
}

struct Engine_ScoreObjective_Parms
{
	class APlayerReplicationInfo*                      Scorer;                                           		// 0x000000 (0x0004)              
	int                                                Score;                                            		// 0x000004 (0x0004)              
};

void AGameRules::ScoreObjective(class APlayerReplicationInfo* Scorer,int Score)
{
	static UFieldFunc* pFnScoreObjective = NULL;
	if(!pFnScoreObjective)
		pFnScoreObjective = UObject::FindFunction("Function Engine.GameRules.ScoreObjective");

	Engine_ScoreObjective_Parms ScoreObjective_Parms;
	ScoreObjective_Parms.Scorer = Scorer;
	ScoreObjective_Parms.Score = Score;
	ProcessEvent(pFnScoreObjective,NULL,&ScoreObjective_Parms,NULL);
}

struct Engine_AddGameRules_Parms
{
	class AGameRules*                                  GR;                                               		// 0x000000 (0x0004)              
};

void AGameRules::AddGameRules(class AGameRules* GR)
{
	static UFieldFunc* pFnAddGameRules = NULL;
	if(!pFnAddGameRules)
		pFnAddGameRules = UObject::FindFunction("Function Engine.GameRules.AddGameRules");

	Engine_AddGameRules_Parms AddGameRules_Parms;
	AddGameRules_Parms.GR = GR;
	ProcessEvent(pFnAddGameRules,NULL,&AddGameRules_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AHeightFog::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.HeightFog.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_OnSequenceAction_Parms
{
	class USequenceAction*                             Action;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool AHeightFog::OnSequenceAction(class USequenceAction* Action)
{
	static UFieldFunc* pFnOnSequenceAction = NULL;
	if(!pFnOnSequenceAction)
		pFnOnSequenceAction = UObject::FindFunction("Function Engine.HeightFog.OnSequenceAction");

	Engine_OnSequenceAction_Parms OnSequenceAction_Parms;
	OnSequenceAction_Parms.Action = Action;
	ProcessEvent(pFnOnSequenceAction,NULL,&OnSequenceAction_Parms,NULL);
	return OnSequenceAction_Parms.ReturnValue;
}

struct Engine_ReplicatedEvent_Parms
{
	struct FName                                       VarName;                                          		// 0x000000 (0x0008)              
};

void AHeightFog::ReplicatedEvent(struct FName VarName)
{
	static UFieldFunc* pFnReplicatedEvent = NULL;
	if(!pFnReplicatedEvent)
		pFnReplicatedEvent = UObject::FindFunction("Function Engine.HeightFog.ReplicatedEvent");

	Engine_ReplicatedEvent_Parms ReplicatedEvent_Parms;
	memcpy(&ReplicatedEvent_Parms.VarName,&VarName,0x8);
	ProcessEvent(pFnReplicatedEvent,NULL,&ReplicatedEvent_Parms,NULL);
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              Action;                                           		// 0x000000 (0x0004)              
};

void AHeightFog::OnToggle(class USeqAct_Toggle* Action)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.HeightFog.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.Action = Action;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_CreateRequest_Parms
{
	class UHttpRequestInterface*                       ReturnValue;                                      		// 0x000000 (0x0004)              
	//class UClass*                                      HttpRequestClass;                                 		// 0x000004 (0x0004)              
	//class UObject*                                     HttpReq;                                          		// 0x000008 (0x0004)              
};

class UHttpRequestInterface* UHttpFactory::CreateRequest()
{
	static UFieldFunc* pFnCreateRequest = NULL;
	if(!pFnCreateRequest)
		pFnCreateRequest = UObject::FindFunction("Function Engine.HttpFactory.CreateRequest");

	Engine_CreateRequest_Parms CreateRequest_Parms;
	ProcessEvent(pFnCreateRequest,NULL,&CreateRequest_Parms,NULL);
	return CreateRequest_Parms.ReturnValue;
}

struct Engine_ClearCreateOnlineAccountCompletedDelegate_Parms
{
	struct FScriptDelegate                             AccountCreateDelegate;                            		// 0x000000 (0x000C)              
};

void UOnlineAccountInterface::ClearCreateOnlineAccountCompletedDelegate(struct FScriptDelegate AccountCreateDelegate)
{
	static UFieldFunc* pFnClearCreateOnlineAccountCompletedDelegate = NULL;
	if(!pFnClearCreateOnlineAccountCompletedDelegate)
		pFnClearCreateOnlineAccountCompletedDelegate = UObject::FindFunction("Function Engine.OnlineAccountInterface.ClearCreateOnlineAccountCompletedDelegate");

	Engine_ClearCreateOnlineAccountCompletedDelegate_Parms ClearCreateOnlineAccountCompletedDelegate_Parms;
	memcpy(&ClearCreateOnlineAccountCompletedDelegate_Parms.AccountCreateDelegate,&AccountCreateDelegate,0xC);
	ProcessEvent(pFnClearCreateOnlineAccountCompletedDelegate,NULL,&ClearCreateOnlineAccountCompletedDelegate_Parms,NULL);
}

struct Engine_RenameLocalAccount_Parms
{
	struct FString                                     NewUserName;                                      		// 0x000000 (0x000C)              
	struct FString                                     OldUserName;                                      		// 0x00000C (0x000C)              
	struct FString                                     Password;                                         		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UOnlineAccountInterface::RenameLocalAccount(struct FString NewUserName,struct FString OldUserName,struct FString Password)
{
	static UFieldFunc* pFnRenameLocalAccount = NULL;
	if(!pFnRenameLocalAccount)
		pFnRenameLocalAccount = UObject::FindFunction("Function Engine.OnlineAccountInterface.RenameLocalAccount");

	Engine_RenameLocalAccount_Parms RenameLocalAccount_Parms;
	memcpy(&RenameLocalAccount_Parms.NewUserName,&NewUserName,0xC);
	memcpy(&RenameLocalAccount_Parms.OldUserName,&OldUserName,0xC);
	memcpy(&RenameLocalAccount_Parms.Password,&Password,0xC);
	ProcessEvent(pFnRenameLocalAccount,NULL,&RenameLocalAccount_Parms,NULL);
	return RenameLocalAccount_Parms.ReturnValue;
}

struct Engine_OnCreateOnlineAccountCompleted_Parms
{
	unsigned char                                      ErrorStatus;                                      		// 0x000000 (0x0001)              
};

void UOnlineAccountInterface::OnCreateOnlineAccountCompleted(unsigned char ErrorStatus)
{
	static UFieldFunc* pFnOnCreateOnlineAccountCompleted = NULL;
	if(!pFnOnCreateOnlineAccountCompleted)
		pFnOnCreateOnlineAccountCompleted = UObject::FindFunction("Function Engine.OnlineAccountInterface.OnCreateOnlineAccountCompleted");

	Engine_OnCreateOnlineAccountCompleted_Parms OnCreateOnlineAccountCompleted_Parms;
	OnCreateOnlineAccountCompleted_Parms.ErrorStatus = ErrorStatus;
	ProcessEvent(pFnOnCreateOnlineAccountCompleted,NULL,&OnCreateOnlineAccountCompleted_Parms,NULL);
}

struct Engine_AddCreateOnlineAccountCompletedDelegate_Parms
{
	struct FScriptDelegate                             AccountCreateDelegate;                            		// 0x000000 (0x000C)              
};

void UOnlineAccountInterface::AddCreateOnlineAccountCompletedDelegate(struct FScriptDelegate AccountCreateDelegate)
{
	static UFieldFunc* pFnAddCreateOnlineAccountCompletedDelegate = NULL;
	if(!pFnAddCreateOnlineAccountCompletedDelegate)
		pFnAddCreateOnlineAccountCompletedDelegate = UObject::FindFunction("Function Engine.OnlineAccountInterface.AddCreateOnlineAccountCompletedDelegate");

	Engine_AddCreateOnlineAccountCompletedDelegate_Parms AddCreateOnlineAccountCompletedDelegate_Parms;
	memcpy(&AddCreateOnlineAccountCompletedDelegate_Parms.AccountCreateDelegate,&AccountCreateDelegate,0xC);
	ProcessEvent(pFnAddCreateOnlineAccountCompletedDelegate,NULL,&AddCreateOnlineAccountCompletedDelegate_Parms,NULL);
}

struct Engine_DeleteLocalAccount_Parms
{
	struct FString                                     UserName;                                         		// 0x000000 (0x000C)              
	struct FString                                     Password;                                         		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineAccountInterface::DeleteLocalAccount(struct FString UserName,struct FString Password)
{
	static UFieldFunc* pFnDeleteLocalAccount = NULL;
	if(!pFnDeleteLocalAccount)
		pFnDeleteLocalAccount = UObject::FindFunction("Function Engine.OnlineAccountInterface.DeleteLocalAccount");

	Engine_DeleteLocalAccount_Parms DeleteLocalAccount_Parms;
	memcpy(&DeleteLocalAccount_Parms.UserName,&UserName,0xC);
	memcpy(&DeleteLocalAccount_Parms.Password,&Password,0xC);
	ProcessEvent(pFnDeleteLocalAccount,NULL,&DeleteLocalAccount_Parms,NULL);
	return DeleteLocalAccount_Parms.ReturnValue;
}

struct Engine_CreateOnlineAccount_Parms
{
	struct FString                                     UserName;                                         		// 0x000000 (0x000C)              
	struct FString                                     Password;                                         		// 0x00000C (0x000C)              
	struct FString                                     EmailAddress;                                     		// 0x000018 (0x000C)              
	struct FString                                     ProductKey;                                       		// 0x000024 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000030 (0x0004) [0x00000001] 
};

bool UOnlineAccountInterface::CreateOnlineAccount(struct FString UserName,struct FString Password,struct FString EmailAddress,struct FString ProductKey)
{
	static UFieldFunc* pFnCreateOnlineAccount = NULL;
	if(!pFnCreateOnlineAccount)
		pFnCreateOnlineAccount = UObject::FindFunction("Function Engine.OnlineAccountInterface.CreateOnlineAccount");

	Engine_CreateOnlineAccount_Parms CreateOnlineAccount_Parms;
	memcpy(&CreateOnlineAccount_Parms.UserName,&UserName,0xC);
	memcpy(&CreateOnlineAccount_Parms.Password,&Password,0xC);
	memcpy(&CreateOnlineAccount_Parms.EmailAddress,&EmailAddress,0xC);
	memcpy(&CreateOnlineAccount_Parms.ProductKey,&ProductKey,0xC);
	ProcessEvent(pFnCreateOnlineAccount,NULL,&CreateOnlineAccount_Parms,NULL);
	return CreateOnlineAccount_Parms.ReturnValue;
}

struct Engine_CreateLocalAccount_Parms
{
	struct FString                                     UserName;                                         		// 0x000000 (0x000C)              
	struct FString                                     Password;                                         		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineAccountInterface::CreateLocalAccount(struct FString UserName,struct FString Password)
{
	static UFieldFunc* pFnCreateLocalAccount = NULL;
	if(!pFnCreateLocalAccount)
		pFnCreateLocalAccount = UObject::FindFunction("Function Engine.OnlineAccountInterface.CreateLocalAccount");

	Engine_CreateLocalAccount_Parms CreateLocalAccount_Parms;
	memcpy(&CreateLocalAccount_Parms.UserName,&UserName,0xC);
	memcpy(&CreateLocalAccount_Parms.Password,&Password,0xC);
	ProcessEvent(pFnCreateLocalAccount,NULL,&CreateLocalAccount_Parms,NULL);
	return CreateLocalAccount_Parms.ReturnValue;
}

struct Engine_GetLocalAccountNames_Parms
{
	TArray<struct FString>                             Accounts;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineAccountInterface::GetLocalAccountNames(TArray<struct FString>* Accounts)
{
	static UFieldFunc* pFnGetLocalAccountNames = NULL;
	if(!pFnGetLocalAccountNames)
		pFnGetLocalAccountNames = UObject::FindFunction("Function Engine.OnlineAccountInterface.GetLocalAccountNames");

	Engine_GetLocalAccountNames_Parms GetLocalAccountNames_Parms;
	ProcessEvent(pFnGetLocalAccountNames,NULL,&GetLocalAccountNames_Parms,NULL);
	if(Accounts)
		memcpy(Accounts,&GetLocalAccountNames_Parms.Accounts,0xC);
	return GetLocalAccountNames_Parms.ReturnValue;
}

struct Engine_OnReadFriendsContentListComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineCommunityContentInterface::OnReadFriendsContentListComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadFriendsContentListComplete = NULL;
	if(!pFnOnReadFriendsContentListComplete)
		pFnOnReadFriendsContentListComplete = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.OnReadFriendsContentListComplete");

	Engine_OnReadFriendsContentListComplete_Parms OnReadFriendsContentListComplete_Parms;
	OnReadFriendsContentListComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadFriendsContentListComplete,NULL,&OnReadFriendsContentListComplete_Parms,NULL);
}

struct Engine_AddDownloadContentCompleteDelegate_Parms
{
	struct FScriptDelegate                             DownloadContentCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::AddDownloadContentCompleteDelegate(struct FScriptDelegate DownloadContentCompleteDelegate)
{
	static UFieldFunc* pFnAddDownloadContentCompleteDelegate = NULL;
	if(!pFnAddDownloadContentCompleteDelegate)
		pFnAddDownloadContentCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.AddDownloadContentCompleteDelegate");

	Engine_AddDownloadContentCompleteDelegate_Parms AddDownloadContentCompleteDelegate_Parms;
	memcpy(&AddDownloadContentCompleteDelegate_Parms.DownloadContentCompleteDelegate,&DownloadContentCompleteDelegate,0xC);
	ProcessEvent(pFnAddDownloadContentCompleteDelegate,NULL,&AddDownloadContentCompleteDelegate_Parms,NULL);
}

struct Engine_OnDownloadContentComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FCommunityContentFile                       FileDownloaded;                                   		// 0x000004 (0x0034)              
};

void UOnlineCommunityContentInterface::OnDownloadContentComplete(bool bWasSuccessful,struct FCommunityContentFile FileDownloaded)
{
	static UFieldFunc* pFnOnDownloadContentComplete = NULL;
	if(!pFnOnDownloadContentComplete)
		pFnOnDownloadContentComplete = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.OnDownloadContentComplete");

	Engine_OnDownloadContentComplete_Parms OnDownloadContentComplete_Parms;
	OnDownloadContentComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnDownloadContentComplete_Parms.FileDownloaded,&FileDownloaded,0x34);
	ProcessEvent(pFnOnDownloadContentComplete,NULL,&OnDownloadContentComplete_Parms,NULL);
}

struct Engine_ClearDownloadContentCompleteDelegate_Parms
{
	struct FScriptDelegate                             DownloadContentCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::ClearDownloadContentCompleteDelegate(struct FScriptDelegate DownloadContentCompleteDelegate)
{
	static UFieldFunc* pFnClearDownloadContentCompleteDelegate = NULL;
	if(!pFnClearDownloadContentCompleteDelegate)
		pFnClearDownloadContentCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ClearDownloadContentCompleteDelegate");

	Engine_ClearDownloadContentCompleteDelegate_Parms ClearDownloadContentCompleteDelegate_Parms;
	memcpy(&ClearDownloadContentCompleteDelegate_Parms.DownloadContentCompleteDelegate,&DownloadContentCompleteDelegate,0xC);
	ProcessEvent(pFnClearDownloadContentCompleteDelegate,NULL,&ClearDownloadContentCompleteDelegate_Parms,NULL);
}

struct Engine_Exit_Parms
{
};

void UOnlineCommunityContentInterface::Exit()
{
	static UFieldFunc* pFnExit = NULL;
	if(!pFnExit)
		pFnExit = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.Exit");

	Engine_Exit_Parms Exit_Parms;
	ProcessEvent(pFnExit,NULL,&Exit_Parms,NULL);
}

struct Engine_ReadContentList_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	int                                                StartAt;                                          		// 0x000004 (0x0004)              
	int                                                NumToRead;                                        		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::ReadContentList(unsigned char PlayerNum,int StartAt,int NumToRead)
{
	static UFieldFunc* pFnReadContentList = NULL;
	if(!pFnReadContentList)
		pFnReadContentList = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ReadContentList");

	Engine_ReadContentList_Parms ReadContentList_Parms;
	ReadContentList_Parms.PlayerNum = PlayerNum;
	ReadContentList_Parms.StartAt = StartAt;
	ReadContentList_Parms.NumToRead = NumToRead;
	ProcessEvent(pFnReadContentList,NULL,&ReadContentList_Parms,NULL);
	return ReadContentList_Parms.ReturnValue;
}

struct Engine_GetContentList_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	TArray<struct FCommunityContentFile>               ContentFiles;                                     		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::GetContentList(unsigned char PlayerNum,TArray<struct FCommunityContentFile>* ContentFiles)
{
	static UFieldFunc* pFnGetContentList = NULL;
	if(!pFnGetContentList)
		pFnGetContentList = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.GetContentList");

	Engine_GetContentList_Parms GetContentList_Parms;
	GetContentList_Parms.PlayerNum = PlayerNum;
	ProcessEvent(pFnGetContentList,NULL,&GetContentList_Parms,NULL);
	if(ContentFiles)
		memcpy(ContentFiles,&GetContentList_Parms.ContentFiles,0xC);
	return GetContentList_Parms.ReturnValue;
}

struct Engine_ClearUploadContentCompleteDelegate_Parms
{
	struct FScriptDelegate                             UploadContentCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::ClearUploadContentCompleteDelegate(struct FScriptDelegate UploadContentCompleteDelegate)
{
	static UFieldFunc* pFnClearUploadContentCompleteDelegate = NULL;
	if(!pFnClearUploadContentCompleteDelegate)
		pFnClearUploadContentCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ClearUploadContentCompleteDelegate");

	Engine_ClearUploadContentCompleteDelegate_Parms ClearUploadContentCompleteDelegate_Parms;
	memcpy(&ClearUploadContentCompleteDelegate_Parms.UploadContentCompleteDelegate,&UploadContentCompleteDelegate,0xC);
	ProcessEvent(pFnClearUploadContentCompleteDelegate,NULL,&ClearUploadContentCompleteDelegate_Parms,NULL);
}

struct Engine_ReadFriendsContentList_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	TArray<struct FOnlineFriend>                       Friends;                                          		// 0x000004 (0x000C)              
	int                                                StartAt;                                          		// 0x000010 (0x0004)              
	int                                                NumToRead;                                        		// 0x000014 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::ReadFriendsContentList(unsigned char PlayerNum,TArray<struct FOnlineFriend>* Friends,int StartAt,int NumToRead)
{
	static UFieldFunc* pFnReadFriendsContentList = NULL;
	if(!pFnReadFriendsContentList)
		pFnReadFriendsContentList = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ReadFriendsContentList");

	Engine_ReadFriendsContentList_Parms ReadFriendsContentList_Parms;
	ReadFriendsContentList_Parms.PlayerNum = PlayerNum;
	ReadFriendsContentList_Parms.StartAt = StartAt;
	ReadFriendsContentList_Parms.NumToRead = NumToRead;
	ProcessEvent(pFnReadFriendsContentList,NULL,&ReadFriendsContentList_Parms,NULL);
	if(Friends)
		memcpy(Friends,&ReadFriendsContentList_Parms.Friends,0xC);
	return ReadFriendsContentList_Parms.ReturnValue;
}

struct Engine_Init_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::Init()
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.Init");

	Engine_Init_Parms Init_Parms;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
	return Init_Parms.ReturnValue;
}

struct Engine_ClearGetContentPayloadCompleteDelegate_Parms
{
	struct FScriptDelegate                             GetContentPayloadCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::ClearGetContentPayloadCompleteDelegate(struct FScriptDelegate GetContentPayloadCompleteDelegate)
{
	static UFieldFunc* pFnClearGetContentPayloadCompleteDelegate = NULL;
	if(!pFnClearGetContentPayloadCompleteDelegate)
		pFnClearGetContentPayloadCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ClearGetContentPayloadCompleteDelegate");

	Engine_ClearGetContentPayloadCompleteDelegate_Parms ClearGetContentPayloadCompleteDelegate_Parms;
	memcpy(&ClearGetContentPayloadCompleteDelegate_Parms.GetContentPayloadCompleteDelegate,&GetContentPayloadCompleteDelegate,0xC);
	ProcessEvent(pFnClearGetContentPayloadCompleteDelegate,NULL,&ClearGetContentPayloadCompleteDelegate_Parms,NULL);
}

struct Engine_ClearReadContentListCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadContentListCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::ClearReadContentListCompleteDelegate(struct FScriptDelegate ReadContentListCompleteDelegate)
{
	static UFieldFunc* pFnClearReadContentListCompleteDelegate = NULL;
	if(!pFnClearReadContentListCompleteDelegate)
		pFnClearReadContentListCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ClearReadContentListCompleteDelegate");

	Engine_ClearReadContentListCompleteDelegate_Parms ClearReadContentListCompleteDelegate_Parms;
	memcpy(&ClearReadContentListCompleteDelegate_Parms.ReadContentListCompleteDelegate,&ReadContentListCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadContentListCompleteDelegate,NULL,&ClearReadContentListCompleteDelegate_Parms,NULL);
}

struct Engine_OnReadContentListComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineCommunityContentInterface::OnReadContentListComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadContentListComplete = NULL;
	if(!pFnOnReadContentListComplete)
		pFnOnReadContentListComplete = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.OnReadContentListComplete");

	Engine_OnReadContentListComplete_Parms OnReadContentListComplete_Parms;
	OnReadContentListComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadContentListComplete,NULL,&OnReadContentListComplete_Parms,NULL);
}

struct Engine_GetContentPayload_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	struct FCommunityContentFile                       FileDownloaded;                                   		// 0x000004 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000038 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::GetContentPayload(unsigned char PlayerNum,struct FCommunityContentFile* FileDownloaded)
{
	static UFieldFunc* pFnGetContentPayload = NULL;
	if(!pFnGetContentPayload)
		pFnGetContentPayload = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.GetContentPayload");

	Engine_GetContentPayload_Parms GetContentPayload_Parms;
	GetContentPayload_Parms.PlayerNum = PlayerNum;
	ProcessEvent(pFnGetContentPayload,NULL,&GetContentPayload_Parms,NULL);
	if(FileDownloaded)
		memcpy(FileDownloaded,&GetContentPayload_Parms.FileDownloaded,0x34);
	return GetContentPayload_Parms.ReturnValue;
}

struct Engine_OnUploadContentComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FCommunityContentFile                       UploadedFile;                                     		// 0x000004 (0x0034)              
};

void UOnlineCommunityContentInterface::OnUploadContentComplete(bool bWasSuccessful,struct FCommunityContentFile UploadedFile)
{
	static UFieldFunc* pFnOnUploadContentComplete = NULL;
	if(!pFnOnUploadContentComplete)
		pFnOnUploadContentComplete = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.OnUploadContentComplete");

	Engine_OnUploadContentComplete_Parms OnUploadContentComplete_Parms;
	OnUploadContentComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnUploadContentComplete_Parms.UploadedFile,&UploadedFile,0x34);
	ProcessEvent(pFnOnUploadContentComplete,NULL,&OnUploadContentComplete_Parms,NULL);
}

struct Engine_AddReadFriendsContentListCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadFriendsContentListCompleteDelegate;           		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::AddReadFriendsContentListCompleteDelegate(struct FScriptDelegate ReadFriendsContentListCompleteDelegate)
{
	static UFieldFunc* pFnAddReadFriendsContentListCompleteDelegate = NULL;
	if(!pFnAddReadFriendsContentListCompleteDelegate)
		pFnAddReadFriendsContentListCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.AddReadFriendsContentListCompleteDelegate");

	Engine_AddReadFriendsContentListCompleteDelegate_Parms AddReadFriendsContentListCompleteDelegate_Parms;
	memcpy(&AddReadFriendsContentListCompleteDelegate_Parms.ReadFriendsContentListCompleteDelegate,&ReadFriendsContentListCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadFriendsContentListCompleteDelegate,NULL,&AddReadFriendsContentListCompleteDelegate_Parms,NULL);
}

struct Engine_GetFriendsContentList_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	struct FOnlineFriend                               Friend;                                           		// 0x000004 (0x0030)              
	TArray<struct FCommunityContentFile>               ContentFiles;                                     		// 0x000034 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000040 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::GetFriendsContentList(unsigned char PlayerNum,struct FOnlineFriend* Friend,TArray<struct FCommunityContentFile>* ContentFiles)
{
	static UFieldFunc* pFnGetFriendsContentList = NULL;
	if(!pFnGetFriendsContentList)
		pFnGetFriendsContentList = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.GetFriendsContentList");

	Engine_GetFriendsContentList_Parms GetFriendsContentList_Parms;
	GetFriendsContentList_Parms.PlayerNum = PlayerNum;
	ProcessEvent(pFnGetFriendsContentList,NULL,&GetFriendsContentList_Parms,NULL);
	if(Friend)
		memcpy(Friend,&GetFriendsContentList_Parms.Friend,0x30);
	if(ContentFiles)
		memcpy(ContentFiles,&GetFriendsContentList_Parms.ContentFiles,0xC);
	return GetFriendsContentList_Parms.ReturnValue;
}

struct Engine_AddUploadContentCompleteDelegate_Parms
{
	struct FScriptDelegate                             UploadContentCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::AddUploadContentCompleteDelegate(struct FScriptDelegate UploadContentCompleteDelegate)
{
	static UFieldFunc* pFnAddUploadContentCompleteDelegate = NULL;
	if(!pFnAddUploadContentCompleteDelegate)
		pFnAddUploadContentCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.AddUploadContentCompleteDelegate");

	Engine_AddUploadContentCompleteDelegate_Parms AddUploadContentCompleteDelegate_Parms;
	memcpy(&AddUploadContentCompleteDelegate_Parms.UploadContentCompleteDelegate,&UploadContentCompleteDelegate,0xC);
	ProcessEvent(pFnAddUploadContentCompleteDelegate,NULL,&AddUploadContentCompleteDelegate_Parms,NULL);
}

struct Engine_DownloadContent_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	struct FCommunityContentFile                       FileToDownload;                                   		// 0x000004 (0x0034)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000038 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::DownloadContent(unsigned char PlayerNum,struct FCommunityContentFile* FileToDownload)
{
	static UFieldFunc* pFnDownloadContent = NULL;
	if(!pFnDownloadContent)
		pFnDownloadContent = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.DownloadContent");

	Engine_DownloadContent_Parms DownloadContent_Parms;
	DownloadContent_Parms.PlayerNum = PlayerNum;
	ProcessEvent(pFnDownloadContent,NULL,&DownloadContent_Parms,NULL);
	if(FileToDownload)
		memcpy(FileToDownload,&DownloadContent_Parms.FileToDownload,0x34);
	return DownloadContent_Parms.ReturnValue;
}

struct Engine_OnGetContentPayloadComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FCommunityContentFile                       FileDownloaded;                                   		// 0x000004 (0x0034)              
	TArray<unsigned char>                              Payload;                                          		// 0x000038 (0x000C)              
};

void UOnlineCommunityContentInterface::OnGetContentPayloadComplete(bool bWasSuccessful,struct FCommunityContentFile FileDownloaded,TArray<unsigned char>* Payload)
{
	static UFieldFunc* pFnOnGetContentPayloadComplete = NULL;
	if(!pFnOnGetContentPayloadComplete)
		pFnOnGetContentPayloadComplete = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.OnGetContentPayloadComplete");

	Engine_OnGetContentPayloadComplete_Parms OnGetContentPayloadComplete_Parms;
	OnGetContentPayloadComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnGetContentPayloadComplete_Parms.FileDownloaded,&FileDownloaded,0x34);
	ProcessEvent(pFnOnGetContentPayloadComplete,NULL,&OnGetContentPayloadComplete_Parms,NULL);
	if(Payload)
		memcpy(Payload,&OnGetContentPayloadComplete_Parms.Payload,0xC);
}

struct Engine_AddReadContentListCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadContentListCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::AddReadContentListCompleteDelegate(struct FScriptDelegate ReadContentListCompleteDelegate)
{
	static UFieldFunc* pFnAddReadContentListCompleteDelegate = NULL;
	if(!pFnAddReadContentListCompleteDelegate)
		pFnAddReadContentListCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.AddReadContentListCompleteDelegate");

	Engine_AddReadContentListCompleteDelegate_Parms AddReadContentListCompleteDelegate_Parms;
	memcpy(&AddReadContentListCompleteDelegate_Parms.ReadContentListCompleteDelegate,&ReadContentListCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadContentListCompleteDelegate,NULL,&AddReadContentListCompleteDelegate_Parms,NULL);
}

struct Engine_RateContent_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	struct FCommunityContentFile                       FileToRate;                                       		// 0x000004 (0x0034)              
	int                                                NewRating;                                        		// 0x000038 (0x0004)              
};

void UOnlineCommunityContentInterface::RateContent(unsigned char PlayerNum,struct FCommunityContentFile* FileToRate,int NewRating)
{
	static UFieldFunc* pFnRateContent = NULL;
	if(!pFnRateContent)
		pFnRateContent = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.RateContent");

	Engine_RateContent_Parms RateContent_Parms;
	RateContent_Parms.PlayerNum = PlayerNum;
	RateContent_Parms.NewRating = NewRating;
	ProcessEvent(pFnRateContent,NULL,&RateContent_Parms,NULL);
	if(FileToRate)
		memcpy(FileToRate,&RateContent_Parms.FileToRate,0x34);
}

struct Engine_ClearReadFriendsContentListCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadFriendsContentListCompleteDelegate;           		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::ClearReadFriendsContentListCompleteDelegate(struct FScriptDelegate ReadFriendsContentListCompleteDelegate)
{
	static UFieldFunc* pFnClearReadFriendsContentListCompleteDelegate = NULL;
	if(!pFnClearReadFriendsContentListCompleteDelegate)
		pFnClearReadFriendsContentListCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.ClearReadFriendsContentListCompleteDelegate");

	Engine_ClearReadFriendsContentListCompleteDelegate_Parms ClearReadFriendsContentListCompleteDelegate_Parms;
	memcpy(&ClearReadFriendsContentListCompleteDelegate_Parms.ReadFriendsContentListCompleteDelegate,&ReadFriendsContentListCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadFriendsContentListCompleteDelegate,NULL,&ClearReadFriendsContentListCompleteDelegate_Parms,NULL);
}

struct Engine_AddGetContentPayloadCompleteDelegate_Parms
{
	struct FScriptDelegate                             GetContentPayloadCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineCommunityContentInterface::AddGetContentPayloadCompleteDelegate(struct FScriptDelegate GetContentPayloadCompleteDelegate)
{
	static UFieldFunc* pFnAddGetContentPayloadCompleteDelegate = NULL;
	if(!pFnAddGetContentPayloadCompleteDelegate)
		pFnAddGetContentPayloadCompleteDelegate = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.AddGetContentPayloadCompleteDelegate");

	Engine_AddGetContentPayloadCompleteDelegate_Parms AddGetContentPayloadCompleteDelegate_Parms;
	memcpy(&AddGetContentPayloadCompleteDelegate_Parms.GetContentPayloadCompleteDelegate,&GetContentPayloadCompleteDelegate,0xC);
	ProcessEvent(pFnAddGetContentPayloadCompleteDelegate,NULL,&AddGetContentPayloadCompleteDelegate_Parms,NULL);
}

struct Engine_UploadContent_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	TArray<unsigned char>                              Payload;                                          		// 0x000004 (0x000C)              
	struct FCommunityContentMetadata                   MetaData;                                         		// 0x000010 (0x0010)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UOnlineCommunityContentInterface::UploadContent(unsigned char PlayerNum,TArray<unsigned char>* Payload,struct FCommunityContentMetadata* MetaData)
{
	static UFieldFunc* pFnUploadContent = NULL;
	if(!pFnUploadContent)
		pFnUploadContent = UObject::FindFunction("Function Engine.OnlineCommunityContentInterface.UploadContent");

	Engine_UploadContent_Parms UploadContent_Parms;
	UploadContent_Parms.PlayerNum = PlayerNum;
	ProcessEvent(pFnUploadContent,NULL,&UploadContent_Parms,NULL);
	if(Payload)
		memcpy(Payload,&UploadContent_Parms.Payload,0xC);
	if(MetaData)
		memcpy(MetaData,&UploadContent_Parms.MetaData,0x10);
	return UploadContent_Parms.ReturnValue;
}

struct Engine_AddReadContentComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	struct FScriptDelegate                             ReadContentCompleteDelegate;                      		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::AddReadContentComplete(unsigned char LocalUserNum,unsigned char ContentType,struct FScriptDelegate ReadContentCompleteDelegate)
{
	static UFieldFunc* pFnAddReadContentComplete = NULL;
	if(!pFnAddReadContentComplete)
		pFnAddReadContentComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.AddReadContentComplete");

	Engine_AddReadContentComplete_Parms AddReadContentComplete_Parms;
	AddReadContentComplete_Parms.LocalUserNum = LocalUserNum;
	AddReadContentComplete_Parms.ContentType = ContentType;
	memcpy(&AddReadContentComplete_Parms.ReadContentCompleteDelegate,&ReadContentCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadContentComplete,NULL,&AddReadContentComplete_Parms,NULL);
}

struct Engine_OnReadCrossTitleContentComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineContentInterface::OnReadCrossTitleContentComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadCrossTitleContentComplete = NULL;
	if(!pFnOnReadCrossTitleContentComplete)
		pFnOnReadCrossTitleContentComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.OnReadCrossTitleContentComplete");

	Engine_OnReadCrossTitleContentComplete_Parms OnReadCrossTitleContentComplete_Parms;
	OnReadCrossTitleContentComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadCrossTitleContentComplete,NULL,&OnReadCrossTitleContentComplete_Parms,NULL);
}

struct Engine_ClearQueryAvailableDownloadsComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             QueryDownloadsDelegate;                           		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::ClearQueryAvailableDownloadsComplete(unsigned char LocalUserNum,struct FScriptDelegate QueryDownloadsDelegate)
{
	static UFieldFunc* pFnClearQueryAvailableDownloadsComplete = NULL;
	if(!pFnClearQueryAvailableDownloadsComplete)
		pFnClearQueryAvailableDownloadsComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearQueryAvailableDownloadsComplete");

	Engine_ClearQueryAvailableDownloadsComplete_Parms ClearQueryAvailableDownloadsComplete_Parms;
	ClearQueryAvailableDownloadsComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearQueryAvailableDownloadsComplete_Parms.QueryDownloadsDelegate,&QueryDownloadsDelegate,0xC);
	ProcessEvent(pFnClearQueryAvailableDownloadsComplete,NULL,&ClearQueryAvailableDownloadsComplete_Parms,NULL);
}

struct Engine_ReadContentList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::ReadContentList(unsigned char LocalUserNum,unsigned char ContentType,int DeviceID)
{
	static UFieldFunc* pFnReadContentList = NULL;
	if(!pFnReadContentList)
		pFnReadContentList = UObject::FindFunction("Function Engine.OnlineContentInterface.ReadContentList");

	Engine_ReadContentList_Parms ReadContentList_Parms;
	ReadContentList_Parms.LocalUserNum = LocalUserNum;
	ReadContentList_Parms.ContentType = ContentType;
	ReadContentList_Parms.DeviceID = DeviceID;
	ProcessEvent(pFnReadContentList,NULL,&ReadContentList_Parms,NULL);
	return ReadContentList_Parms.ReturnValue;
}

struct Engine_ClearCrossTitleContentList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
};

void UOnlineContentInterface::ClearCrossTitleContentList(unsigned char LocalUserNum,unsigned char ContentType)
{
	static UFieldFunc* pFnClearCrossTitleContentList = NULL;
	if(!pFnClearCrossTitleContentList)
		pFnClearCrossTitleContentList = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearCrossTitleContentList");

	Engine_ClearCrossTitleContentList_Parms ClearCrossTitleContentList_Parms;
	ClearCrossTitleContentList_Parms.LocalUserNum = LocalUserNum;
	ClearCrossTitleContentList_Parms.ContentType = ContentType;
	ProcessEvent(pFnClearCrossTitleContentList,NULL,&ClearCrossTitleContentList_Parms,NULL);
}

struct Engine_WriteSaveGameData_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x000008 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000014 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000020 (0x000C)              
	TArray<unsigned char>                              SaveGameData;                                     		// 0x00002C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000038 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::WriteSaveGameData(unsigned char LocalUserNum,int DeviceID,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName,TArray<unsigned char>* SaveGameData)
{
	static UFieldFunc* pFnWriteSaveGameData = NULL;
	if(!pFnWriteSaveGameData)
		pFnWriteSaveGameData = UObject::FindFunction("Function Engine.OnlineContentInterface.WriteSaveGameData");

	Engine_WriteSaveGameData_Parms WriteSaveGameData_Parms;
	WriteSaveGameData_Parms.LocalUserNum = LocalUserNum;
	WriteSaveGameData_Parms.DeviceID = DeviceID;
	memcpy(&WriteSaveGameData_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&WriteSaveGameData_Parms.Filename,&Filename,0xC);
	memcpy(&WriteSaveGameData_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnWriteSaveGameData,NULL,&WriteSaveGameData_Parms,NULL);
	if(SaveGameData)
		memcpy(SaveGameData,&WriteSaveGameData_Parms.SaveGameData,0xC);
	return WriteSaveGameData_Parms.ReturnValue;
}

struct Engine_OnReadSaveGameDataComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      LocalUserNum;                                     		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	int                                                DeviceID;                                         		// 0x000008 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x00000C (0x000C)              
	struct FString                                     Filename;                                         		// 0x000018 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000024 (0x000C)              
};

void UOnlineContentInterface::OnReadSaveGameDataComplete(bool bWasSuccessful,unsigned char LocalUserNum,int DeviceID,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName)
{
	static UFieldFunc* pFnOnReadSaveGameDataComplete = NULL;
	if(!pFnOnReadSaveGameDataComplete)
		pFnOnReadSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.OnReadSaveGameDataComplete");

	Engine_OnReadSaveGameDataComplete_Parms OnReadSaveGameDataComplete_Parms;
	OnReadSaveGameDataComplete_Parms.bWasSuccessful = bWasSuccessful;
	OnReadSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadSaveGameDataComplete_Parms.DeviceID = DeviceID;
	memcpy(&OnReadSaveGameDataComplete_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&OnReadSaveGameDataComplete_Parms.Filename,&Filename,0xC);
	memcpy(&OnReadSaveGameDataComplete_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnOnReadSaveGameDataComplete,NULL,&OnReadSaveGameDataComplete_Parms,NULL);
}

struct Engine_ClearWriteSaveGameDataComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             WriteSaveGameDataCompleteDelegate;                		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::ClearWriteSaveGameDataComplete(unsigned char LocalUserNum,struct FScriptDelegate WriteSaveGameDataCompleteDelegate)
{
	static UFieldFunc* pFnClearWriteSaveGameDataComplete = NULL;
	if(!pFnClearWriteSaveGameDataComplete)
		pFnClearWriteSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearWriteSaveGameDataComplete");

	Engine_ClearWriteSaveGameDataComplete_Parms ClearWriteSaveGameDataComplete_Parms;
	ClearWriteSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearWriteSaveGameDataComplete_Parms.WriteSaveGameDataCompleteDelegate,&WriteSaveGameDataCompleteDelegate,0xC);
	ProcessEvent(pFnClearWriteSaveGameDataComplete,NULL,&ClearWriteSaveGameDataComplete_Parms,NULL);
}

struct Engine_OnContentChange_Parms
{
};

void UOnlineContentInterface::OnContentChange()
{
	static UFieldFunc* pFnOnContentChange = NULL;
	if(!pFnOnContentChange)
		pFnOnContentChange = UObject::FindFunction("Function Engine.OnlineContentInterface.OnContentChange");

	Engine_OnContentChange_Parms OnContentChange_Parms;
	ProcessEvent(pFnOnContentChange,NULL,&OnContentChange_Parms,NULL);
}

struct Engine_AddQueryAvailableDownloadsComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             QueryDownloadsDelegate;                           		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::AddQueryAvailableDownloadsComplete(unsigned char LocalUserNum,struct FScriptDelegate QueryDownloadsDelegate)
{
	static UFieldFunc* pFnAddQueryAvailableDownloadsComplete = NULL;
	if(!pFnAddQueryAvailableDownloadsComplete)
		pFnAddQueryAvailableDownloadsComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.AddQueryAvailableDownloadsComplete");

	Engine_AddQueryAvailableDownloadsComplete_Parms AddQueryAvailableDownloadsComplete_Parms;
	AddQueryAvailableDownloadsComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddQueryAvailableDownloadsComplete_Parms.QueryDownloadsDelegate,&QueryDownloadsDelegate,0xC);
	ProcessEvent(pFnAddQueryAvailableDownloadsComplete,NULL,&AddQueryAvailableDownloadsComplete_Parms,NULL);
}

struct Engine_OnWriteSaveGameDataComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      LocalUserNum;                                     		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	int                                                DeviceID;                                         		// 0x000008 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x00000C (0x000C)              
	struct FString                                     Filename;                                         		// 0x000018 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000024 (0x000C)              
};

void UOnlineContentInterface::OnWriteSaveGameDataComplete(bool bWasSuccessful,unsigned char LocalUserNum,int DeviceID,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName)
{
	static UFieldFunc* pFnOnWriteSaveGameDataComplete = NULL;
	if(!pFnOnWriteSaveGameDataComplete)
		pFnOnWriteSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.OnWriteSaveGameDataComplete");

	Engine_OnWriteSaveGameDataComplete_Parms OnWriteSaveGameDataComplete_Parms;
	OnWriteSaveGameDataComplete_Parms.bWasSuccessful = bWasSuccessful;
	OnWriteSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	OnWriteSaveGameDataComplete_Parms.DeviceID = DeviceID;
	memcpy(&OnWriteSaveGameDataComplete_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&OnWriteSaveGameDataComplete_Parms.Filename,&Filename,0xC);
	memcpy(&OnWriteSaveGameDataComplete_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnOnWriteSaveGameDataComplete,NULL,&OnWriteSaveGameDataComplete_Parms,NULL);
}

struct Engine_QueryAvailableDownloads_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                CategoryMask;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::QueryAvailableDownloads(unsigned char LocalUserNum,int CategoryMask)
{
	static UFieldFunc* pFnQueryAvailableDownloads = NULL;
	if(!pFnQueryAvailableDownloads)
		pFnQueryAvailableDownloads = UObject::FindFunction("Function Engine.OnlineContentInterface.QueryAvailableDownloads");

	Engine_QueryAvailableDownloads_Parms QueryAvailableDownloads_Parms;
	QueryAvailableDownloads_Parms.LocalUserNum = LocalUserNum;
	QueryAvailableDownloads_Parms.CategoryMask = CategoryMask;
	ProcessEvent(pFnQueryAvailableDownloads,NULL,&QueryAvailableDownloads_Parms,NULL);
	return QueryAvailableDownloads_Parms.ReturnValue;
}

struct Engine_ClearReadCrossTitleContentCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	struct FScriptDelegate                             ReadContentCompleteDelegate;                      		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::ClearReadCrossTitleContentCompleteDelegate(unsigned char LocalUserNum,unsigned char ContentType,struct FScriptDelegate ReadContentCompleteDelegate)
{
	static UFieldFunc* pFnClearReadCrossTitleContentCompleteDelegate = NULL;
	if(!pFnClearReadCrossTitleContentCompleteDelegate)
		pFnClearReadCrossTitleContentCompleteDelegate = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearReadCrossTitleContentCompleteDelegate");

	Engine_ClearReadCrossTitleContentCompleteDelegate_Parms ClearReadCrossTitleContentCompleteDelegate_Parms;
	ClearReadCrossTitleContentCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	ClearReadCrossTitleContentCompleteDelegate_Parms.ContentType = ContentType;
	memcpy(&ClearReadCrossTitleContentCompleteDelegate_Parms.ReadContentCompleteDelegate,&ReadContentCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadCrossTitleContentCompleteDelegate,NULL,&ClearReadCrossTitleContentCompleteDelegate_Parms,NULL);
}

struct Engine_OnReadCrossTitleSaveGameDataComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      LocalUserNum;                                     		// 0x000004 (0x0001)              
	unsigned char                                      _0x000005[0x3];                                   		// 0x000005 (0x0003) ALIGNEMENT
	int                                                DeviceID;                                         		// 0x000008 (0x0004)              
	int                                                TitleId;                                          		// 0x00000C (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x000010 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00001C (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000028 (0x000C)              
};

void UOnlineContentInterface::OnReadCrossTitleSaveGameDataComplete(bool bWasSuccessful,unsigned char LocalUserNum,int DeviceID,int TitleId,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName)
{
	static UFieldFunc* pFnOnReadCrossTitleSaveGameDataComplete = NULL;
	if(!pFnOnReadCrossTitleSaveGameDataComplete)
		pFnOnReadCrossTitleSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.OnReadCrossTitleSaveGameDataComplete");

	Engine_OnReadCrossTitleSaveGameDataComplete_Parms OnReadCrossTitleSaveGameDataComplete_Parms;
	OnReadCrossTitleSaveGameDataComplete_Parms.bWasSuccessful = bWasSuccessful;
	OnReadCrossTitleSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadCrossTitleSaveGameDataComplete_Parms.DeviceID = DeviceID;
	OnReadCrossTitleSaveGameDataComplete_Parms.TitleId = TitleId;
	memcpy(&OnReadCrossTitleSaveGameDataComplete_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&OnReadCrossTitleSaveGameDataComplete_Parms.Filename,&Filename,0xC);
	memcpy(&OnReadCrossTitleSaveGameDataComplete_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnOnReadCrossTitleSaveGameDataComplete,NULL,&OnReadCrossTitleSaveGameDataComplete_Parms,NULL);
}

struct Engine_ReadCrossTitleSaveGameData_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	int                                                TitleId;                                          		// 0x000008 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x00000C (0x000C)              
	struct FString                                     Filename;                                         		// 0x000018 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000024 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000030 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::ReadCrossTitleSaveGameData(unsigned char LocalUserNum,int DeviceID,int TitleId,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName)
{
	static UFieldFunc* pFnReadCrossTitleSaveGameData = NULL;
	if(!pFnReadCrossTitleSaveGameData)
		pFnReadCrossTitleSaveGameData = UObject::FindFunction("Function Engine.OnlineContentInterface.ReadCrossTitleSaveGameData");

	Engine_ReadCrossTitleSaveGameData_Parms ReadCrossTitleSaveGameData_Parms;
	ReadCrossTitleSaveGameData_Parms.LocalUserNum = LocalUserNum;
	ReadCrossTitleSaveGameData_Parms.DeviceID = DeviceID;
	ReadCrossTitleSaveGameData_Parms.TitleId = TitleId;
	memcpy(&ReadCrossTitleSaveGameData_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&ReadCrossTitleSaveGameData_Parms.Filename,&Filename,0xC);
	memcpy(&ReadCrossTitleSaveGameData_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnReadCrossTitleSaveGameData,NULL,&ReadCrossTitleSaveGameData_Parms,NULL);
	return ReadCrossTitleSaveGameData_Parms.ReturnValue;
}

struct Engine_DeleteSaveGame_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x000008 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000014 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::DeleteSaveGame(unsigned char LocalUserNum,int DeviceID,struct FString FriendlyName,struct FString Filename)
{
	static UFieldFunc* pFnDeleteSaveGame = NULL;
	if(!pFnDeleteSaveGame)
		pFnDeleteSaveGame = UObject::FindFunction("Function Engine.OnlineContentInterface.DeleteSaveGame");

	Engine_DeleteSaveGame_Parms DeleteSaveGame_Parms;
	DeleteSaveGame_Parms.LocalUserNum = LocalUserNum;
	DeleteSaveGame_Parms.DeviceID = DeviceID;
	memcpy(&DeleteSaveGame_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&DeleteSaveGame_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnDeleteSaveGame,NULL,&DeleteSaveGame_Parms,NULL);
	return DeleteSaveGame_Parms.ReturnValue;
}

struct Engine_ClearContentList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
};

void UOnlineContentInterface::ClearContentList(unsigned char LocalUserNum,unsigned char ContentType)
{
	static UFieldFunc* pFnClearContentList = NULL;
	if(!pFnClearContentList)
		pFnClearContentList = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearContentList");

	Engine_ClearContentList_Parms ClearContentList_Parms;
	ClearContentList_Parms.LocalUserNum = LocalUserNum;
	ClearContentList_Parms.ContentType = ContentType;
	ProcessEvent(pFnClearContentList,NULL,&ClearContentList_Parms,NULL);
}

struct Engine_AddContentChangeDelegate_Parms
{
	struct FScriptDelegate                             ContentDelegate;                                  		// 0x000000 (0x000C)              
	unsigned char                                      LocalUserNum;                                     		// 0x00000C (0x0001)              
};

void UOnlineContentInterface::AddContentChangeDelegate(struct FScriptDelegate ContentDelegate,unsigned char LocalUserNum)
{
	static UFieldFunc* pFnAddContentChangeDelegate = NULL;
	if(!pFnAddContentChangeDelegate)
		pFnAddContentChangeDelegate = UObject::FindFunction("Function Engine.OnlineContentInterface.AddContentChangeDelegate");

	Engine_AddContentChangeDelegate_Parms AddContentChangeDelegate_Parms;
	memcpy(&AddContentChangeDelegate_Parms.ContentDelegate,&ContentDelegate,0xC);
	AddContentChangeDelegate_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnAddContentChangeDelegate,NULL,&AddContentChangeDelegate_Parms,NULL);
}

struct Engine_ClearContentChangeDelegate_Parms
{
	struct FScriptDelegate                             ContentDelegate;                                  		// 0x000000 (0x000C)              
	unsigned char                                      LocalUserNum;                                     		// 0x00000C (0x0001)              
};

void UOnlineContentInterface::ClearContentChangeDelegate(struct FScriptDelegate ContentDelegate,unsigned char LocalUserNum)
{
	static UFieldFunc* pFnClearContentChangeDelegate = NULL;
	if(!pFnClearContentChangeDelegate)
		pFnClearContentChangeDelegate = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearContentChangeDelegate");

	Engine_ClearContentChangeDelegate_Parms ClearContentChangeDelegate_Parms;
	memcpy(&ClearContentChangeDelegate_Parms.ContentDelegate,&ContentDelegate,0xC);
	ClearContentChangeDelegate_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnClearContentChangeDelegate,NULL,&ClearContentChangeDelegate_Parms,NULL);
}

struct Engine_GetAvailableDownloadCounts_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                NewDownloads;                                     		// 0x000004 (0x0004)              
	int                                                TotalDownloads;                                   		// 0x000008 (0x0004)              
};

void UOnlineContentInterface::GetAvailableDownloadCounts(unsigned char LocalUserNum,int* NewDownloads,int* TotalDownloads)
{
	static UFieldFunc* pFnGetAvailableDownloadCounts = NULL;
	if(!pFnGetAvailableDownloadCounts)
		pFnGetAvailableDownloadCounts = UObject::FindFunction("Function Engine.OnlineContentInterface.GetAvailableDownloadCounts");

	Engine_GetAvailableDownloadCounts_Parms GetAvailableDownloadCounts_Parms;
	GetAvailableDownloadCounts_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetAvailableDownloadCounts,NULL,&GetAvailableDownloadCounts_Parms,NULL);
	if(NewDownloads)
		*NewDownloads = GetAvailableDownloadCounts_Parms.NewDownloads;
	if(TotalDownloads)
		*TotalDownloads = GetAvailableDownloadCounts_Parms.TotalDownloads;
}

struct Engine_ReadCrossTitleContentList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	int                                                TitleId;                                          		// 0x000004 (0x0004)              
	int                                                DeviceID;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::ReadCrossTitleContentList(unsigned char LocalUserNum,unsigned char ContentType,int TitleId,int DeviceID)
{
	static UFieldFunc* pFnReadCrossTitleContentList = NULL;
	if(!pFnReadCrossTitleContentList)
		pFnReadCrossTitleContentList = UObject::FindFunction("Function Engine.OnlineContentInterface.ReadCrossTitleContentList");

	Engine_ReadCrossTitleContentList_Parms ReadCrossTitleContentList_Parms;
	ReadCrossTitleContentList_Parms.LocalUserNum = LocalUserNum;
	ReadCrossTitleContentList_Parms.ContentType = ContentType;
	ReadCrossTitleContentList_Parms.TitleId = TitleId;
	ReadCrossTitleContentList_Parms.DeviceID = DeviceID;
	ProcessEvent(pFnReadCrossTitleContentList,NULL,&ReadCrossTitleContentList_Parms,NULL);
	return ReadCrossTitleContentList_Parms.ReturnValue;
}

struct Engine_GetSaveGameData_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x000008 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000014 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000020 (0x000C)              
	unsigned char                                      bIsValid;                                         		// 0x00002C (0x0001)              
	unsigned char                                      _0x00002D[0x3];                                   		// 0x00002D (0x0003) ALIGNEMENT
	TArray<unsigned char>                              SaveGameData;                                     		// 0x000030 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00003C (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::GetSaveGameData(unsigned char LocalUserNum,int DeviceID,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName,unsigned char* bIsValid,TArray<unsigned char>* SaveGameData)
{
	static UFieldFunc* pFnGetSaveGameData = NULL;
	if(!pFnGetSaveGameData)
		pFnGetSaveGameData = UObject::FindFunction("Function Engine.OnlineContentInterface.GetSaveGameData");

	Engine_GetSaveGameData_Parms GetSaveGameData_Parms;
	GetSaveGameData_Parms.LocalUserNum = LocalUserNum;
	GetSaveGameData_Parms.DeviceID = DeviceID;
	memcpy(&GetSaveGameData_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&GetSaveGameData_Parms.Filename,&Filename,0xC);
	memcpy(&GetSaveGameData_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnGetSaveGameData,NULL,&GetSaveGameData_Parms,NULL);
	if(bIsValid)
		*bIsValid = GetSaveGameData_Parms.bIsValid;
	if(SaveGameData)
		memcpy(SaveGameData,&GetSaveGameData_Parms.SaveGameData,0xC);
	return GetSaveGameData_Parms.ReturnValue;
}

struct Engine_ClearSaveGames_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::ClearSaveGames(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnClearSaveGames = NULL;
	if(!pFnClearSaveGames)
		pFnClearSaveGames = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearSaveGames");

	Engine_ClearSaveGames_Parms ClearSaveGames_Parms;
	ClearSaveGames_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnClearSaveGames,NULL,&ClearSaveGames_Parms,NULL);
	return ClearSaveGames_Parms.ReturnValue;
}

struct Engine_GetCrossTitleContentList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	TArray<struct FOnlineCrossTitleContent>            ContentList;                                      		// 0x000004 (0x000C)              
	unsigned char                                      ReturnValue;                                      		// 0x000010 (0x0001)              
};

unsigned char UOnlineContentInterface::GetCrossTitleContentList(unsigned char LocalUserNum,unsigned char ContentType,TArray<struct FOnlineCrossTitleContent>* ContentList)
{
	static UFieldFunc* pFnGetCrossTitleContentList = NULL;
	if(!pFnGetCrossTitleContentList)
		pFnGetCrossTitleContentList = UObject::FindFunction("Function Engine.OnlineContentInterface.GetCrossTitleContentList");

	Engine_GetCrossTitleContentList_Parms GetCrossTitleContentList_Parms;
	GetCrossTitleContentList_Parms.LocalUserNum = LocalUserNum;
	GetCrossTitleContentList_Parms.ContentType = ContentType;
	ProcessEvent(pFnGetCrossTitleContentList,NULL,&GetCrossTitleContentList_Parms,NULL);
	if(ContentList)
		memcpy(ContentList,&GetCrossTitleContentList_Parms.ContentList,0xC);
	return GetCrossTitleContentList_Parms.ReturnValue;
}

struct Engine_AddWriteSaveGameDataComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             WriteSaveGameDataCompleteDelegate;                		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::AddWriteSaveGameDataComplete(unsigned char LocalUserNum,struct FScriptDelegate WriteSaveGameDataCompleteDelegate)
{
	static UFieldFunc* pFnAddWriteSaveGameDataComplete = NULL;
	if(!pFnAddWriteSaveGameDataComplete)
		pFnAddWriteSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.AddWriteSaveGameDataComplete");

	Engine_AddWriteSaveGameDataComplete_Parms AddWriteSaveGameDataComplete_Parms;
	AddWriteSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddWriteSaveGameDataComplete_Parms.WriteSaveGameDataCompleteDelegate,&WriteSaveGameDataCompleteDelegate,0xC);
	ProcessEvent(pFnAddWriteSaveGameDataComplete,NULL,&AddWriteSaveGameDataComplete_Parms,NULL);
}

struct Engine_ClearReadSaveGameDataComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadSaveGameDataCompleteDelegate;                 		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::ClearReadSaveGameDataComplete(unsigned char LocalUserNum,struct FScriptDelegate ReadSaveGameDataCompleteDelegate)
{
	static UFieldFunc* pFnClearReadSaveGameDataComplete = NULL;
	if(!pFnClearReadSaveGameDataComplete)
		pFnClearReadSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearReadSaveGameDataComplete");

	Engine_ClearReadSaveGameDataComplete_Parms ClearReadSaveGameDataComplete_Parms;
	ClearReadSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadSaveGameDataComplete_Parms.ReadSaveGameDataCompleteDelegate,&ReadSaveGameDataCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadSaveGameDataComplete,NULL,&ClearReadSaveGameDataComplete_Parms,NULL);
}

struct Engine_ClearReadCrossTitleSaveGameDataComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadSaveGameDataCompleteDelegate;                 		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::ClearReadCrossTitleSaveGameDataComplete(unsigned char LocalUserNum,struct FScriptDelegate ReadSaveGameDataCompleteDelegate)
{
	static UFieldFunc* pFnClearReadCrossTitleSaveGameDataComplete = NULL;
	if(!pFnClearReadCrossTitleSaveGameDataComplete)
		pFnClearReadCrossTitleSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearReadCrossTitleSaveGameDataComplete");

	Engine_ClearReadCrossTitleSaveGameDataComplete_Parms ClearReadCrossTitleSaveGameDataComplete_Parms;
	ClearReadCrossTitleSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadCrossTitleSaveGameDataComplete_Parms.ReadSaveGameDataCompleteDelegate,&ReadSaveGameDataCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadCrossTitleSaveGameDataComplete,NULL,&ClearReadCrossTitleSaveGameDataComplete_Parms,NULL);
}

struct Engine_ClearCrossTitleSaveGames_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::ClearCrossTitleSaveGames(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnClearCrossTitleSaveGames = NULL;
	if(!pFnClearCrossTitleSaveGames)
		pFnClearCrossTitleSaveGames = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearCrossTitleSaveGames");

	Engine_ClearCrossTitleSaveGames_Parms ClearCrossTitleSaveGames_Parms;
	ClearCrossTitleSaveGames_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnClearCrossTitleSaveGames,NULL,&ClearCrossTitleSaveGames_Parms,NULL);
	return ClearCrossTitleSaveGames_Parms.ReturnValue;
}

struct Engine_GetContentList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	TArray<struct FOnlineContent>                      ContentList;                                      		// 0x000004 (0x000C)              
	unsigned char                                      ReturnValue;                                      		// 0x000010 (0x0001)              
};

unsigned char UOnlineContentInterface::GetContentList(unsigned char LocalUserNum,unsigned char ContentType,TArray<struct FOnlineContent>* ContentList)
{
	static UFieldFunc* pFnGetContentList = NULL;
	if(!pFnGetContentList)
		pFnGetContentList = UObject::FindFunction("Function Engine.OnlineContentInterface.GetContentList");

	Engine_GetContentList_Parms GetContentList_Parms;
	GetContentList_Parms.LocalUserNum = LocalUserNum;
	GetContentList_Parms.ContentType = ContentType;
	ProcessEvent(pFnGetContentList,NULL,&GetContentList_Parms,NULL);
	if(ContentList)
		memcpy(ContentList,&GetContentList_Parms.ContentList,0xC);
	return GetContentList_Parms.ReturnValue;
}

struct Engine_AddReadCrossTitleSaveGameDataComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadSaveGameDataCompleteDelegate;                 		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::AddReadCrossTitleSaveGameDataComplete(unsigned char LocalUserNum,struct FScriptDelegate ReadSaveGameDataCompleteDelegate)
{
	static UFieldFunc* pFnAddReadCrossTitleSaveGameDataComplete = NULL;
	if(!pFnAddReadCrossTitleSaveGameDataComplete)
		pFnAddReadCrossTitleSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.AddReadCrossTitleSaveGameDataComplete");

	Engine_AddReadCrossTitleSaveGameDataComplete_Parms AddReadCrossTitleSaveGameDataComplete_Parms;
	AddReadCrossTitleSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadCrossTitleSaveGameDataComplete_Parms.ReadSaveGameDataCompleteDelegate,&ReadSaveGameDataCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadCrossTitleSaveGameDataComplete,NULL,&AddReadCrossTitleSaveGameDataComplete_Parms,NULL);
}

struct Engine_OnQueryAvailableDownloadsComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineContentInterface::OnQueryAvailableDownloadsComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnQueryAvailableDownloadsComplete = NULL;
	if(!pFnOnQueryAvailableDownloadsComplete)
		pFnOnQueryAvailableDownloadsComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.OnQueryAvailableDownloadsComplete");

	Engine_OnQueryAvailableDownloadsComplete_Parms OnQueryAvailableDownloadsComplete_Parms;
	OnQueryAvailableDownloadsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnQueryAvailableDownloadsComplete,NULL,&OnQueryAvailableDownloadsComplete_Parms,NULL);
}

struct Engine_OnReadContentComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineContentInterface::OnReadContentComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadContentComplete = NULL;
	if(!pFnOnReadContentComplete)
		pFnOnReadContentComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.OnReadContentComplete");

	Engine_OnReadContentComplete_Parms OnReadContentComplete_Parms;
	OnReadContentComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadContentComplete,NULL,&OnReadContentComplete_Parms,NULL);
}

struct Engine_AddReadCrossTitleContentCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	struct FScriptDelegate                             ReadContentCompleteDelegate;                      		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::AddReadCrossTitleContentCompleteDelegate(unsigned char LocalUserNum,unsigned char ContentType,struct FScriptDelegate ReadContentCompleteDelegate)
{
	static UFieldFunc* pFnAddReadCrossTitleContentCompleteDelegate = NULL;
	if(!pFnAddReadCrossTitleContentCompleteDelegate)
		pFnAddReadCrossTitleContentCompleteDelegate = UObject::FindFunction("Function Engine.OnlineContentInterface.AddReadCrossTitleContentCompleteDelegate");

	Engine_AddReadCrossTitleContentCompleteDelegate_Parms AddReadCrossTitleContentCompleteDelegate_Parms;
	AddReadCrossTitleContentCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	AddReadCrossTitleContentCompleteDelegate_Parms.ContentType = ContentType;
	memcpy(&AddReadCrossTitleContentCompleteDelegate_Parms.ReadContentCompleteDelegate,&ReadContentCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadCrossTitleContentCompleteDelegate,NULL,&AddReadCrossTitleContentCompleteDelegate_Parms,NULL);
}

struct Engine_GetCrossTitleSaveGameData_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	int                                                TitleId;                                          		// 0x000008 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x00000C (0x000C)              
	struct FString                                     Filename;                                         		// 0x000018 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000024 (0x000C)              
	unsigned char                                      bIsValid;                                         		// 0x000030 (0x0001)              
	unsigned char                                      _0x000031[0x3];                                   		// 0x000031 (0x0003) ALIGNEMENT
	TArray<unsigned char>                              SaveGameData;                                     		// 0x000034 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000040 (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::GetCrossTitleSaveGameData(unsigned char LocalUserNum,int DeviceID,int TitleId,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName,unsigned char* bIsValid,TArray<unsigned char>* SaveGameData)
{
	static UFieldFunc* pFnGetCrossTitleSaveGameData = NULL;
	if(!pFnGetCrossTitleSaveGameData)
		pFnGetCrossTitleSaveGameData = UObject::FindFunction("Function Engine.OnlineContentInterface.GetCrossTitleSaveGameData");

	Engine_GetCrossTitleSaveGameData_Parms GetCrossTitleSaveGameData_Parms;
	GetCrossTitleSaveGameData_Parms.LocalUserNum = LocalUserNum;
	GetCrossTitleSaveGameData_Parms.DeviceID = DeviceID;
	GetCrossTitleSaveGameData_Parms.TitleId = TitleId;
	memcpy(&GetCrossTitleSaveGameData_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&GetCrossTitleSaveGameData_Parms.Filename,&Filename,0xC);
	memcpy(&GetCrossTitleSaveGameData_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnGetCrossTitleSaveGameData,NULL,&GetCrossTitleSaveGameData_Parms,NULL);
	if(bIsValid)
		*bIsValid = GetCrossTitleSaveGameData_Parms.bIsValid;
	if(SaveGameData)
		memcpy(SaveGameData,&GetCrossTitleSaveGameData_Parms.SaveGameData,0xC);
	return GetCrossTitleSaveGameData_Parms.ReturnValue;
}

struct Engine_ReadSaveGameData_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                DeviceID;                                         		// 0x000004 (0x0004)              
	struct FString                                     FriendlyName;                                     		// 0x000008 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000014 (0x000C)              
	struct FString                                     SaveFileName;                                     		// 0x000020 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00002C (0x0004) [0x00000001] 
};

bool UOnlineContentInterface::ReadSaveGameData(unsigned char LocalUserNum,int DeviceID,struct FString FriendlyName,struct FString Filename,struct FString SaveFileName)
{
	static UFieldFunc* pFnReadSaveGameData = NULL;
	if(!pFnReadSaveGameData)
		pFnReadSaveGameData = UObject::FindFunction("Function Engine.OnlineContentInterface.ReadSaveGameData");

	Engine_ReadSaveGameData_Parms ReadSaveGameData_Parms;
	ReadSaveGameData_Parms.LocalUserNum = LocalUserNum;
	ReadSaveGameData_Parms.DeviceID = DeviceID;
	memcpy(&ReadSaveGameData_Parms.FriendlyName,&FriendlyName,0xC);
	memcpy(&ReadSaveGameData_Parms.Filename,&Filename,0xC);
	memcpy(&ReadSaveGameData_Parms.SaveFileName,&SaveFileName,0xC);
	ProcessEvent(pFnReadSaveGameData,NULL,&ReadSaveGameData_Parms,NULL);
	return ReadSaveGameData_Parms.ReturnValue;
}

struct Engine_AddReadSaveGameDataComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadSaveGameDataCompleteDelegate;                 		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::AddReadSaveGameDataComplete(unsigned char LocalUserNum,struct FScriptDelegate ReadSaveGameDataCompleteDelegate)
{
	static UFieldFunc* pFnAddReadSaveGameDataComplete = NULL;
	if(!pFnAddReadSaveGameDataComplete)
		pFnAddReadSaveGameDataComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.AddReadSaveGameDataComplete");

	Engine_AddReadSaveGameDataComplete_Parms AddReadSaveGameDataComplete_Parms;
	AddReadSaveGameDataComplete_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadSaveGameDataComplete_Parms.ReadSaveGameDataCompleteDelegate,&ReadSaveGameDataCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadSaveGameDataComplete,NULL,&AddReadSaveGameDataComplete_Parms,NULL);
}

struct Engine_ClearReadContentComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ContentType;                                      		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	struct FScriptDelegate                             ReadContentCompleteDelegate;                      		// 0x000004 (0x000C)              
};

void UOnlineContentInterface::ClearReadContentComplete(unsigned char LocalUserNum,unsigned char ContentType,struct FScriptDelegate ReadContentCompleteDelegate)
{
	static UFieldFunc* pFnClearReadContentComplete = NULL;
	if(!pFnClearReadContentComplete)
		pFnClearReadContentComplete = UObject::FindFunction("Function Engine.OnlineContentInterface.ClearReadContentComplete");

	Engine_ClearReadContentComplete_Parms ClearReadContentComplete_Parms;
	ClearReadContentComplete_Parms.LocalUserNum = LocalUserNum;
	ClearReadContentComplete_Parms.ContentType = ContentType;
	memcpy(&ClearReadContentComplete_Parms.ReadContentCompleteDelegate,&ReadContentCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadContentComplete,NULL,&ClearReadContentComplete_Parms,NULL);
}

struct Engine_UploadPlayerData_Parms
{
	struct FUniqueNetId                                UniqueId;                                         		// 0x000000 (0x0008)              
	struct FString                                     PlayerNick;                                       		// 0x000008 (0x000C)              
	class UOnlineProfileSettings*                      ProfileSettings;                                  		// 0x000014 (0x0004)              
	class UOnlinePlayerStorage*                        PlayerStorage;                                    		// 0x000018 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UOnlineEventsInterface::UploadPlayerData(struct FUniqueNetId UniqueId,struct FString PlayerNick,class UOnlineProfileSettings* ProfileSettings,class UOnlinePlayerStorage* PlayerStorage)
{
	static UFieldFunc* pFnUploadPlayerData = NULL;
	if(!pFnUploadPlayerData)
		pFnUploadPlayerData = UObject::FindFunction("Function Engine.OnlineEventsInterface.UploadPlayerData");

	Engine_UploadPlayerData_Parms UploadPlayerData_Parms;
	memcpy(&UploadPlayerData_Parms.UniqueId,&UniqueId,0x8);
	memcpy(&UploadPlayerData_Parms.PlayerNick,&PlayerNick,0xC);
	UploadPlayerData_Parms.ProfileSettings = ProfileSettings;
	UploadPlayerData_Parms.PlayerStorage = PlayerStorage;
	ProcessEvent(pFnUploadPlayerData,NULL,&UploadPlayerData_Parms,NULL);
	return UploadPlayerData_Parms.ReturnValue;
}

struct Engine_UpdatePlaylistPopulation_Parms
{
	int                                                PlaylistId;                                       		// 0x000000 (0x0004)              
	int                                                NumPlayers;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineEventsInterface::UpdatePlaylistPopulation(int PlaylistId,int NumPlayers)
{
	static UFieldFunc* pFnUpdatePlaylistPopulation = NULL;
	if(!pFnUpdatePlaylistPopulation)
		pFnUpdatePlaylistPopulation = UObject::FindFunction("Function Engine.OnlineEventsInterface.UpdatePlaylistPopulation");

	Engine_UpdatePlaylistPopulation_Parms UpdatePlaylistPopulation_Parms;
	UpdatePlaylistPopulation_Parms.PlaylistId = PlaylistId;
	UpdatePlaylistPopulation_Parms.NumPlayers = NumPlayers;
	ProcessEvent(pFnUpdatePlaylistPopulation,NULL,&UpdatePlaylistPopulation_Parms,NULL);
	return UpdatePlaylistPopulation_Parms.ReturnValue;
}

struct Engine_UploadGameplayEventsData_Parms
{
	struct FUniqueNetId                                UniqueId;                                         		// 0x000000 (0x0008)              
	TArray<unsigned char>                              Payload;                                          		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineEventsInterface::UploadGameplayEventsData(struct FUniqueNetId UniqueId,TArray<unsigned char>* Payload)
{
	static UFieldFunc* pFnUploadGameplayEventsData = NULL;
	if(!pFnUploadGameplayEventsData)
		pFnUploadGameplayEventsData = UObject::FindFunction("Function Engine.OnlineEventsInterface.UploadGameplayEventsData");

	Engine_UploadGameplayEventsData_Parms UploadGameplayEventsData_Parms;
	memcpy(&UploadGameplayEventsData_Parms.UniqueId,&UniqueId,0x8);
	ProcessEvent(pFnUploadGameplayEventsData,NULL,&UploadGameplayEventsData_Parms,NULL);
	if(Payload)
		memcpy(Payload,&UploadGameplayEventsData_Parms.Payload,0xC);
	return UploadGameplayEventsData_Parms.ReturnValue;
}

struct Engine_ClearCancelFindOnlineGamesCompleteDelegate_Parms
{
	struct FScriptDelegate                             CancelFindOnlineGamesCompleteDelegate;            		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearCancelFindOnlineGamesCompleteDelegate(struct FScriptDelegate CancelFindOnlineGamesCompleteDelegate)
{
	static UFieldFunc* pFnClearCancelFindOnlineGamesCompleteDelegate = NULL;
	if(!pFnClearCancelFindOnlineGamesCompleteDelegate)
		pFnClearCancelFindOnlineGamesCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearCancelFindOnlineGamesCompleteDelegate");

	Engine_ClearCancelFindOnlineGamesCompleteDelegate_Parms ClearCancelFindOnlineGamesCompleteDelegate_Parms;
	memcpy(&ClearCancelFindOnlineGamesCompleteDelegate_Parms.CancelFindOnlineGamesCompleteDelegate,&CancelFindOnlineGamesCompleteDelegate,0xC);
	ProcessEvent(pFnClearCancelFindOnlineGamesCompleteDelegate,NULL,&ClearCancelFindOnlineGamesCompleteDelegate_Parms,NULL);
}

struct Engine_OnRecalculateSkillRatingComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnRecalculateSkillRatingComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnRecalculateSkillRatingComplete = NULL;
	if(!pFnOnRecalculateSkillRatingComplete)
		pFnOnRecalculateSkillRatingComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnRecalculateSkillRatingComplete");

	Engine_OnRecalculateSkillRatingComplete_Parms OnRecalculateSkillRatingComplete_Parms;
	memcpy(&OnRecalculateSkillRatingComplete_Parms.SessionName,&SessionName,0x8);
	OnRecalculateSkillRatingComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnRecalculateSkillRatingComplete,NULL,&OnRecalculateSkillRatingComplete_Parms,NULL);
}

struct Engine_RegisterForArbitration_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::RegisterForArbitration(struct FName SessionName)
{
	static UFieldFunc* pFnRegisterForArbitration = NULL;
	if(!pFnRegisterForArbitration)
		pFnRegisterForArbitration = UObject::FindFunction("Function Engine.OnlineGameInterface.RegisterForArbitration");

	Engine_RegisterForArbitration_Parms RegisterForArbitration_Parms;
	memcpy(&RegisterForArbitration_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnRegisterForArbitration,NULL,&RegisterForArbitration_Parms,NULL);
	return RegisterForArbitration_Parms.ReturnValue;
}

struct Engine_OnMigrateOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnMigrateOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnMigrateOnlineGameComplete = NULL;
	if(!pFnOnMigrateOnlineGameComplete)
		pFnOnMigrateOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnMigrateOnlineGameComplete");

	Engine_OnMigrateOnlineGameComplete_Parms OnMigrateOnlineGameComplete_Parms;
	memcpy(&OnMigrateOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnMigrateOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnMigrateOnlineGameComplete,NULL,&OnMigrateOnlineGameComplete_Parms,NULL);
}

struct Engine_AddRecalculateSkillRatingCompleteDelegate_Parms
{
	struct FScriptDelegate                             RecalculateSkillRatingCompleteDelegate;           		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddRecalculateSkillRatingCompleteDelegate(struct FScriptDelegate RecalculateSkillRatingCompleteDelegate)
{
	static UFieldFunc* pFnAddRecalculateSkillRatingCompleteDelegate = NULL;
	if(!pFnAddRecalculateSkillRatingCompleteDelegate)
		pFnAddRecalculateSkillRatingCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddRecalculateSkillRatingCompleteDelegate");

	Engine_AddRecalculateSkillRatingCompleteDelegate_Parms AddRecalculateSkillRatingCompleteDelegate_Parms;
	memcpy(&AddRecalculateSkillRatingCompleteDelegate_Parms.RecalculateSkillRatingCompleteDelegate,&RecalculateSkillRatingCompleteDelegate,0xC);
	ProcessEvent(pFnAddRecalculateSkillRatingCompleteDelegate,NULL,&AddRecalculateSkillRatingCompleteDelegate_Parms,NULL);
}

struct Engine_OnJoinMigratedOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnJoinMigratedOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnJoinMigratedOnlineGameComplete = NULL;
	if(!pFnOnJoinMigratedOnlineGameComplete)
		pFnOnJoinMigratedOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnJoinMigratedOnlineGameComplete");

	Engine_OnJoinMigratedOnlineGameComplete_Parms OnJoinMigratedOnlineGameComplete_Parms;
	memcpy(&OnJoinMigratedOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnJoinMigratedOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnJoinMigratedOnlineGameComplete,NULL,&OnJoinMigratedOnlineGameComplete_Parms,NULL);
}

struct Engine_OnCreateOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnCreateOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnCreateOnlineGameComplete = NULL;
	if(!pFnOnCreateOnlineGameComplete)
		pFnOnCreateOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnCreateOnlineGameComplete");

	Engine_OnCreateOnlineGameComplete_Parms OnCreateOnlineGameComplete_Parms;
	memcpy(&OnCreateOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnCreateOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnCreateOnlineGameComplete,NULL,&OnCreateOnlineGameComplete_Parms,NULL);
}

struct Engine_BindPlatformSpecificSessionToSearch_Parms
{
	unsigned char                                      SearchingPlayerNum;                               		// 0x000000 (0x0001)              
	class UOnlineGameSearch*                           SearchSettings;                                   		// 0x000004 (0x0004)              
	unsigned char                                      PlatformSpecificInfo[0x50];                       		// 0x000008 (0x0050)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000058 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::BindPlatformSpecificSessionToSearch(unsigned char SearchingPlayerNum,class UOnlineGameSearch* SearchSettings,unsigned char* PlatformSpecificInfo)
{
	static UFieldFunc* pFnBindPlatformSpecificSessionToSearch = NULL;
	if(!pFnBindPlatformSpecificSessionToSearch)
		pFnBindPlatformSpecificSessionToSearch = UObject::FindFunction("Function Engine.OnlineGameInterface.BindPlatformSpecificSessionToSearch");

	Engine_BindPlatformSpecificSessionToSearch_Parms BindPlatformSpecificSessionToSearch_Parms;
	BindPlatformSpecificSessionToSearch_Parms.SearchingPlayerNum = SearchingPlayerNum;
	BindPlatformSpecificSessionToSearch_Parms.SearchSettings = SearchSettings;
	memcpy(&BindPlatformSpecificSessionToSearch_Parms.PlatformSpecificInfo,&PlatformSpecificInfo,0x50);
	ProcessEvent(pFnBindPlatformSpecificSessionToSearch,NULL,&BindPlatformSpecificSessionToSearch_Parms,NULL);
	return BindPlatformSpecificSessionToSearch_Parms.ReturnValue;
}

struct Engine_ClearFindOnlineGamesCompleteDelegate_Parms
{
	struct FScriptDelegate                             FindOnlineGamesCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearFindOnlineGamesCompleteDelegate(struct FScriptDelegate FindOnlineGamesCompleteDelegate)
{
	static UFieldFunc* pFnClearFindOnlineGamesCompleteDelegate = NULL;
	if(!pFnClearFindOnlineGamesCompleteDelegate)
		pFnClearFindOnlineGamesCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearFindOnlineGamesCompleteDelegate");

	Engine_ClearFindOnlineGamesCompleteDelegate_Parms ClearFindOnlineGamesCompleteDelegate_Parms;
	memcpy(&ClearFindOnlineGamesCompleteDelegate_Parms.FindOnlineGamesCompleteDelegate,&FindOnlineGamesCompleteDelegate,0xC);
	ProcessEvent(pFnClearFindOnlineGamesCompleteDelegate,NULL,&ClearFindOnlineGamesCompleteDelegate_Parms,NULL);
}

struct Engine_GetArbitratedPlayers_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	TArray<struct FOnlineArbitrationRegistrant>        ReturnValue;                                      		// 0x000008 (0x000C)              
};

TArray<struct FOnlineArbitrationRegistrant> UOnlineGameInterface::GetArbitratedPlayers(struct FName SessionName)
{
	static UFieldFunc* pFnGetArbitratedPlayers = NULL;
	if(!pFnGetArbitratedPlayers)
		pFnGetArbitratedPlayers = UObject::FindFunction("Function Engine.OnlineGameInterface.GetArbitratedPlayers");

	Engine_GetArbitratedPlayers_Parms GetArbitratedPlayers_Parms;
	memcpy(&GetArbitratedPlayers_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnGetArbitratedPlayers,NULL,&GetArbitratedPlayers_Parms,NULL);
	return GetArbitratedPlayers_Parms.ReturnValue;
}

struct Engine_OnUpdateOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnUpdateOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnUpdateOnlineGameComplete = NULL;
	if(!pFnOnUpdateOnlineGameComplete)
		pFnOnUpdateOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnUpdateOnlineGameComplete");

	Engine_OnUpdateOnlineGameComplete_Parms OnUpdateOnlineGameComplete_Parms;
	memcpy(&OnUpdateOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnUpdateOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnUpdateOnlineGameComplete,NULL,&OnUpdateOnlineGameComplete_Parms,NULL);
}

struct Engine_ClearCreateOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             CreateOnlineGameCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearCreateOnlineGameCompleteDelegate(struct FScriptDelegate CreateOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearCreateOnlineGameCompleteDelegate = NULL;
	if(!pFnClearCreateOnlineGameCompleteDelegate)
		pFnClearCreateOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearCreateOnlineGameCompleteDelegate");

	Engine_ClearCreateOnlineGameCompleteDelegate_Parms ClearCreateOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearCreateOnlineGameCompleteDelegate_Parms.CreateOnlineGameCompleteDelegate,&CreateOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearCreateOnlineGameCompleteDelegate,NULL,&ClearCreateOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_FindOnlineGames_Parms
{
	unsigned char                                      SearchingPlayerNum;                               		// 0x000000 (0x0001)              
	class UOnlineGameSearch*                           SearchSettings;                                   		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::FindOnlineGames(unsigned char SearchingPlayerNum,class UOnlineGameSearch* SearchSettings)
{
	static UFieldFunc* pFnFindOnlineGames = NULL;
	if(!pFnFindOnlineGames)
		pFnFindOnlineGames = UObject::FindFunction("Function Engine.OnlineGameInterface.FindOnlineGames");

	Engine_FindOnlineGames_Parms FindOnlineGames_Parms;
	FindOnlineGames_Parms.SearchingPlayerNum = SearchingPlayerNum;
	FindOnlineGames_Parms.SearchSettings = SearchSettings;
	ProcessEvent(pFnFindOnlineGames,NULL,&FindOnlineGames_Parms,NULL);
	return FindOnlineGames_Parms.ReturnValue;
}

struct Engine_AddMigrateOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             MigrateOnlineGameCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddMigrateOnlineGameCompleteDelegate(struct FScriptDelegate MigrateOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddMigrateOnlineGameCompleteDelegate = NULL;
	if(!pFnAddMigrateOnlineGameCompleteDelegate)
		pFnAddMigrateOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddMigrateOnlineGameCompleteDelegate");

	Engine_AddMigrateOnlineGameCompleteDelegate_Parms AddMigrateOnlineGameCompleteDelegate_Parms;
	memcpy(&AddMigrateOnlineGameCompleteDelegate_Parms.MigrateOnlineGameCompleteDelegate,&MigrateOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddMigrateOnlineGameCompleteDelegate,NULL,&AddMigrateOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_AcceptGameInvite_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FName                                       SessionName;                                      		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::AcceptGameInvite(unsigned char LocalUserNum,struct FName SessionName)
{
	static UFieldFunc* pFnAcceptGameInvite = NULL;
	if(!pFnAcceptGameInvite)
		pFnAcceptGameInvite = UObject::FindFunction("Function Engine.OnlineGameInterface.AcceptGameInvite");

	Engine_AcceptGameInvite_Parms AcceptGameInvite_Parms;
	AcceptGameInvite_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AcceptGameInvite_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnAcceptGameInvite,NULL,&AcceptGameInvite_Parms,NULL);
	return AcceptGameInvite_Parms.ReturnValue;
}

struct Engine_ClearRegisterPlayerCompleteDelegate_Parms
{
	struct FScriptDelegate                             RegisterPlayerCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearRegisterPlayerCompleteDelegate(struct FScriptDelegate RegisterPlayerCompleteDelegate)
{
	static UFieldFunc* pFnClearRegisterPlayerCompleteDelegate = NULL;
	if(!pFnClearRegisterPlayerCompleteDelegate)
		pFnClearRegisterPlayerCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearRegisterPlayerCompleteDelegate");

	Engine_ClearRegisterPlayerCompleteDelegate_Parms ClearRegisterPlayerCompleteDelegate_Parms;
	memcpy(&ClearRegisterPlayerCompleteDelegate_Parms.RegisterPlayerCompleteDelegate,&RegisterPlayerCompleteDelegate,0xC);
	ProcessEvent(pFnClearRegisterPlayerCompleteDelegate,NULL,&ClearRegisterPlayerCompleteDelegate_Parms,NULL);
}

struct Engine_DestroyOnlineGame_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::DestroyOnlineGame(struct FName SessionName)
{
	static UFieldFunc* pFnDestroyOnlineGame = NULL;
	if(!pFnDestroyOnlineGame)
		pFnDestroyOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.DestroyOnlineGame");

	Engine_DestroyOnlineGame_Parms DestroyOnlineGame_Parms;
	memcpy(&DestroyOnlineGame_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnDestroyOnlineGame,NULL,&DestroyOnlineGame_Parms,NULL);
	return DestroyOnlineGame_Parms.ReturnValue;
}

struct Engine_OnEndOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnEndOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnEndOnlineGameComplete = NULL;
	if(!pFnOnEndOnlineGameComplete)
		pFnOnEndOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnEndOnlineGameComplete");

	Engine_OnEndOnlineGameComplete_Parms OnEndOnlineGameComplete_Parms;
	memcpy(&OnEndOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnEndOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnEndOnlineGameComplete,NULL,&OnEndOnlineGameComplete_Parms,NULL);
}

struct Engine_ReadPlatformSpecificSessionInfo_Parms
{
	struct FOnlineGameSearchResult                     DesiredGame;                                      		// 0x000000 (0x0008)              
	unsigned char                                      PlatformSpecificInfo[0x50];                       		// 0x000008 (0x0050)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000058 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::ReadPlatformSpecificSessionInfo(struct FOnlineGameSearchResult* DesiredGame,unsigned char* PlatformSpecificInfo)
{
	static UFieldFunc* pFnReadPlatformSpecificSessionInfo = NULL;
	if(!pFnReadPlatformSpecificSessionInfo)
		pFnReadPlatformSpecificSessionInfo = UObject::FindFunction("Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfo");

	Engine_ReadPlatformSpecificSessionInfo_Parms ReadPlatformSpecificSessionInfo_Parms;
	ProcessEvent(pFnReadPlatformSpecificSessionInfo,NULL,&ReadPlatformSpecificSessionInfo_Parms,NULL);
	if(DesiredGame)
		memcpy(DesiredGame,&ReadPlatformSpecificSessionInfo_Parms.DesiredGame,0x8);
	if(PlatformSpecificInfo)
		memcpy(PlatformSpecificInfo,&ReadPlatformSpecificSessionInfo_Parms.PlatformSpecificInfo,0x50);
	return ReadPlatformSpecificSessionInfo_Parms.ReturnValue;
}

struct Engine_ClearQosStatusChangedDelegate_Parms
{
	struct FScriptDelegate                             QosStatusChangedDelegate;                         		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearQosStatusChangedDelegate(struct FScriptDelegate QosStatusChangedDelegate)
{
	static UFieldFunc* pFnClearQosStatusChangedDelegate = NULL;
	if(!pFnClearQosStatusChangedDelegate)
		pFnClearQosStatusChangedDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearQosStatusChangedDelegate");

	Engine_ClearQosStatusChangedDelegate_Parms ClearQosStatusChangedDelegate_Parms;
	memcpy(&ClearQosStatusChangedDelegate_Parms.QosStatusChangedDelegate,&QosStatusChangedDelegate,0xC);
	ProcessEvent(pFnClearQosStatusChangedDelegate,NULL,&ClearQosStatusChangedDelegate_Parms,NULL);
}

struct Engine_AddUpdateOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             UpdateOnlineGameCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddUpdateOnlineGameCompleteDelegate(struct FScriptDelegate UpdateOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddUpdateOnlineGameCompleteDelegate = NULL;
	if(!pFnAddUpdateOnlineGameCompleteDelegate)
		pFnAddUpdateOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddUpdateOnlineGameCompleteDelegate");

	Engine_AddUpdateOnlineGameCompleteDelegate_Parms AddUpdateOnlineGameCompleteDelegate_Parms;
	memcpy(&AddUpdateOnlineGameCompleteDelegate_Parms.UpdateOnlineGameCompleteDelegate,&UpdateOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddUpdateOnlineGameCompleteDelegate,NULL,&AddUpdateOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_CreateOnlineGame_Parms
{
	unsigned char                                      HostingPlayerNum;                                 		// 0x000000 (0x0001)              
	struct FName                                       SessionName;                                      		// 0x000004 (0x0008)              
	class UOnlineGameSettings*                         NewGameSettings;                                  		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::CreateOnlineGame(unsigned char HostingPlayerNum,struct FName SessionName,class UOnlineGameSettings* NewGameSettings)
{
	static UFieldFunc* pFnCreateOnlineGame = NULL;
	if(!pFnCreateOnlineGame)
		pFnCreateOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.CreateOnlineGame");

	Engine_CreateOnlineGame_Parms CreateOnlineGame_Parms;
	CreateOnlineGame_Parms.HostingPlayerNum = HostingPlayerNum;
	memcpy(&CreateOnlineGame_Parms.SessionName,&SessionName,0x8);
	CreateOnlineGame_Parms.NewGameSettings = NewGameSettings;
	ProcessEvent(pFnCreateOnlineGame,NULL,&CreateOnlineGame_Parms,NULL);
	return CreateOnlineGame_Parms.ReturnValue;
}

struct Engine_RegisterPlayer_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000008 (0x0008)              
	unsigned long                                      bWasInvited : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::RegisterPlayer(struct FName SessionName,struct FUniqueNetId PlayerID,bool bWasInvited)
{
	static UFieldFunc* pFnRegisterPlayer = NULL;
	if(!pFnRegisterPlayer)
		pFnRegisterPlayer = UObject::FindFunction("Function Engine.OnlineGameInterface.RegisterPlayer");

	Engine_RegisterPlayer_Parms RegisterPlayer_Parms;
	memcpy(&RegisterPlayer_Parms.SessionName,&SessionName,0x8);
	memcpy(&RegisterPlayer_Parms.PlayerID,&PlayerID,0x8);
	RegisterPlayer_Parms.bWasInvited = bWasInvited;
	ProcessEvent(pFnRegisterPlayer,NULL,&RegisterPlayer_Parms,NULL);
	return RegisterPlayer_Parms.ReturnValue;
}

struct Engine_FreeSearchResults_Parms
{
	class UOnlineGameSearch*                           Search;                                           		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::FreeSearchResults(class UOnlineGameSearch* Search)
{
	static UFieldFunc* pFnFreeSearchResults = NULL;
	if(!pFnFreeSearchResults)
		pFnFreeSearchResults = UObject::FindFunction("Function Engine.OnlineGameInterface.FreeSearchResults");

	Engine_FreeSearchResults_Parms FreeSearchResults_Parms;
	FreeSearchResults_Parms.Search = Search;
	ProcessEvent(pFnFreeSearchResults,NULL,&FreeSearchResults_Parms,NULL);
	return FreeSearchResults_Parms.ReturnValue;
}

struct Engine_AddStartOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             StartOnlineGameCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddStartOnlineGameCompleteDelegate(struct FScriptDelegate StartOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddStartOnlineGameCompleteDelegate = NULL;
	if(!pFnAddStartOnlineGameCompleteDelegate)
		pFnAddStartOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddStartOnlineGameCompleteDelegate");

	Engine_AddStartOnlineGameCompleteDelegate_Parms AddStartOnlineGameCompleteDelegate_Parms;
	memcpy(&AddStartOnlineGameCompleteDelegate_Parms.StartOnlineGameCompleteDelegate,&StartOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddStartOnlineGameCompleteDelegate,NULL,&AddStartOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_OnJoinOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnJoinOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnJoinOnlineGameComplete = NULL;
	if(!pFnOnJoinOnlineGameComplete)
		pFnOnJoinOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnJoinOnlineGameComplete");

	Engine_OnJoinOnlineGameComplete_Parms OnJoinOnlineGameComplete_Parms;
	memcpy(&OnJoinOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnJoinOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnJoinOnlineGameComplete,NULL,&OnJoinOnlineGameComplete_Parms,NULL);
}

struct Engine_JoinOnlineGame_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	struct FName                                       SessionName;                                      		// 0x000004 (0x0008)              
	struct FOnlineGameSearchResult                     DesiredGame;                                      		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::JoinOnlineGame(unsigned char PlayerNum,struct FName SessionName,struct FOnlineGameSearchResult* DesiredGame)
{
	static UFieldFunc* pFnJoinOnlineGame = NULL;
	if(!pFnJoinOnlineGame)
		pFnJoinOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.JoinOnlineGame");

	Engine_JoinOnlineGame_Parms JoinOnlineGame_Parms;
	JoinOnlineGame_Parms.PlayerNum = PlayerNum;
	memcpy(&JoinOnlineGame_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnJoinOnlineGame,NULL,&JoinOnlineGame_Parms,NULL);
	if(DesiredGame)
		memcpy(DesiredGame,&JoinOnlineGame_Parms.DesiredGame,0x8);
	return JoinOnlineGame_Parms.ReturnValue;
}

struct Engine_AddDestroyOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             DestroyOnlineGameCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddDestroyOnlineGameCompleteDelegate(struct FScriptDelegate DestroyOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddDestroyOnlineGameCompleteDelegate = NULL;
	if(!pFnAddDestroyOnlineGameCompleteDelegate)
		pFnAddDestroyOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddDestroyOnlineGameCompleteDelegate");

	Engine_AddDestroyOnlineGameCompleteDelegate_Parms AddDestroyOnlineGameCompleteDelegate_Parms;
	memcpy(&AddDestroyOnlineGameCompleteDelegate_Parms.DestroyOnlineGameCompleteDelegate,&DestroyOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddDestroyOnlineGameCompleteDelegate,NULL,&AddDestroyOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_OnRegisterPlayerComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000008 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000010 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnRegisterPlayerComplete(struct FName SessionName,struct FUniqueNetId PlayerID,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnRegisterPlayerComplete = NULL;
	if(!pFnOnRegisterPlayerComplete)
		pFnOnRegisterPlayerComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnRegisterPlayerComplete");

	Engine_OnRegisterPlayerComplete_Parms OnRegisterPlayerComplete_Parms;
	memcpy(&OnRegisterPlayerComplete_Parms.SessionName,&SessionName,0x8);
	memcpy(&OnRegisterPlayerComplete_Parms.PlayerID,&PlayerID,0x8);
	OnRegisterPlayerComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnRegisterPlayerComplete,NULL,&OnRegisterPlayerComplete_Parms,NULL);
}

struct Engine_EndOnlineGame_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::EndOnlineGame(struct FName SessionName)
{
	static UFieldFunc* pFnEndOnlineGame = NULL;
	if(!pFnEndOnlineGame)
		pFnEndOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.EndOnlineGame");

	Engine_EndOnlineGame_Parms EndOnlineGame_Parms;
	memcpy(&EndOnlineGame_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnEndOnlineGame,NULL,&EndOnlineGame_Parms,NULL);
	return EndOnlineGame_Parms.ReturnValue;
}

struct Engine_ClearUpdateOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             UpdateOnlineGameCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearUpdateOnlineGameCompleteDelegate(struct FScriptDelegate UpdateOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearUpdateOnlineGameCompleteDelegate = NULL;
	if(!pFnClearUpdateOnlineGameCompleteDelegate)
		pFnClearUpdateOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearUpdateOnlineGameCompleteDelegate");

	Engine_ClearUpdateOnlineGameCompleteDelegate_Parms ClearUpdateOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearUpdateOnlineGameCompleteDelegate_Parms.UpdateOnlineGameCompleteDelegate,&UpdateOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearUpdateOnlineGameCompleteDelegate,NULL,&ClearUpdateOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_ClearJoinMigratedOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             JoinMigratedOnlineGameCompleteDelegate;           		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearJoinMigratedOnlineGameCompleteDelegate(struct FScriptDelegate JoinMigratedOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearJoinMigratedOnlineGameCompleteDelegate = NULL;
	if(!pFnClearJoinMigratedOnlineGameCompleteDelegate)
		pFnClearJoinMigratedOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearJoinMigratedOnlineGameCompleteDelegate");

	Engine_ClearJoinMigratedOnlineGameCompleteDelegate_Parms ClearJoinMigratedOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearJoinMigratedOnlineGameCompleteDelegate_Parms.JoinMigratedOnlineGameCompleteDelegate,&JoinMigratedOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearJoinMigratedOnlineGameCompleteDelegate,NULL,&ClearJoinMigratedOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_UnregisterPlayers_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::UnregisterPlayers(struct FName SessionName,TArray<struct FUniqueNetId>* Players)
{
	static UFieldFunc* pFnUnregisterPlayers = NULL;
	if(!pFnUnregisterPlayers)
		pFnUnregisterPlayers = UObject::FindFunction("Function Engine.OnlineGameInterface.UnregisterPlayers");

	Engine_UnregisterPlayers_Parms UnregisterPlayers_Parms;
	memcpy(&UnregisterPlayers_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnUnregisterPlayers,NULL,&UnregisterPlayers_Parms,NULL);
	if(Players)
		memcpy(Players,&UnregisterPlayers_Parms.Players,0xC);
	return UnregisterPlayers_Parms.ReturnValue;
}

struct Engine_OnQosStatusChanged_Parms
{
	int                                                NumComplete;                                      		// 0x000000 (0x0004)              
	int                                                NumTotal;                                         		// 0x000004 (0x0004)              
};

void UOnlineGameInterface::OnQosStatusChanged(int NumComplete,int NumTotal)
{
	static UFieldFunc* pFnOnQosStatusChanged = NULL;
	if(!pFnOnQosStatusChanged)
		pFnOnQosStatusChanged = UObject::FindFunction("Function Engine.OnlineGameInterface.OnQosStatusChanged");

	Engine_OnQosStatusChanged_Parms OnQosStatusChanged_Parms;
	OnQosStatusChanged_Parms.NumComplete = NumComplete;
	OnQosStatusChanged_Parms.NumTotal = NumTotal;
	ProcessEvent(pFnOnQosStatusChanged,NULL,&OnQosStatusChanged_Parms,NULL);
}

struct Engine_OnDestroyOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnDestroyOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnDestroyOnlineGameComplete = NULL;
	if(!pFnOnDestroyOnlineGameComplete)
		pFnOnDestroyOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnDestroyOnlineGameComplete");

	Engine_OnDestroyOnlineGameComplete_Parms OnDestroyOnlineGameComplete_Parms;
	memcpy(&OnDestroyOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnDestroyOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnDestroyOnlineGameComplete,NULL,&OnDestroyOnlineGameComplete_Parms,NULL);
}

struct Engine_AddCancelFindOnlineGamesCompleteDelegate_Parms
{
	struct FScriptDelegate                             CancelFindOnlineGamesCompleteDelegate;            		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddCancelFindOnlineGamesCompleteDelegate(struct FScriptDelegate CancelFindOnlineGamesCompleteDelegate)
{
	static UFieldFunc* pFnAddCancelFindOnlineGamesCompleteDelegate = NULL;
	if(!pFnAddCancelFindOnlineGamesCompleteDelegate)
		pFnAddCancelFindOnlineGamesCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddCancelFindOnlineGamesCompleteDelegate");

	Engine_AddCancelFindOnlineGamesCompleteDelegate_Parms AddCancelFindOnlineGamesCompleteDelegate_Parms;
	memcpy(&AddCancelFindOnlineGamesCompleteDelegate_Parms.CancelFindOnlineGamesCompleteDelegate,&CancelFindOnlineGamesCompleteDelegate,0xC);
	ProcessEvent(pFnAddCancelFindOnlineGamesCompleteDelegate,NULL,&AddCancelFindOnlineGamesCompleteDelegate_Parms,NULL);
}

struct Engine_OnCancelFindOnlineGamesComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnCancelFindOnlineGamesComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnCancelFindOnlineGamesComplete = NULL;
	if(!pFnOnCancelFindOnlineGamesComplete)
		pFnOnCancelFindOnlineGamesComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnCancelFindOnlineGamesComplete");

	Engine_OnCancelFindOnlineGamesComplete_Parms OnCancelFindOnlineGamesComplete_Parms;
	OnCancelFindOnlineGamesComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnCancelFindOnlineGamesComplete,NULL,&OnCancelFindOnlineGamesComplete_Parms,NULL);
}

struct Engine_StartOnlineGame_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::StartOnlineGame(struct FName SessionName)
{
	static UFieldFunc* pFnStartOnlineGame = NULL;
	if(!pFnStartOnlineGame)
		pFnStartOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.StartOnlineGame");

	Engine_StartOnlineGame_Parms StartOnlineGame_Parms;
	memcpy(&StartOnlineGame_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnStartOnlineGame,NULL,&StartOnlineGame_Parms,NULL);
	return StartOnlineGame_Parms.ReturnValue;
}

struct Engine_GetGameSettings_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	class UOnlineGameSettings*                         ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UOnlineGameSettings* UOnlineGameInterface::GetGameSettings(struct FName SessionName)
{
	static UFieldFunc* pFnGetGameSettings = NULL;
	if(!pFnGetGameSettings)
		pFnGetGameSettings = UObject::FindFunction("Function Engine.OnlineGameInterface.GetGameSettings");

	Engine_GetGameSettings_Parms GetGameSettings_Parms;
	memcpy(&GetGameSettings_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnGetGameSettings,NULL,&GetGameSettings_Parms,NULL);
	return GetGameSettings_Parms.ReturnValue;
}

struct Engine_AddUnregisterPlayerCompleteDelegate_Parms
{
	struct FScriptDelegate                             UnregisterPlayerCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddUnregisterPlayerCompleteDelegate(struct FScriptDelegate UnregisterPlayerCompleteDelegate)
{
	static UFieldFunc* pFnAddUnregisterPlayerCompleteDelegate = NULL;
	if(!pFnAddUnregisterPlayerCompleteDelegate)
		pFnAddUnregisterPlayerCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddUnregisterPlayerCompleteDelegate");

	Engine_AddUnregisterPlayerCompleteDelegate_Parms AddUnregisterPlayerCompleteDelegate_Parms;
	memcpy(&AddUnregisterPlayerCompleteDelegate_Parms.UnregisterPlayerCompleteDelegate,&UnregisterPlayerCompleteDelegate,0xC);
	ProcessEvent(pFnAddUnregisterPlayerCompleteDelegate,NULL,&AddUnregisterPlayerCompleteDelegate_Parms,NULL);
}

struct Engine_AddArbitrationRegistrationCompleteDelegate_Parms
{
	struct FScriptDelegate                             ArbitrationRegistrationCompleteDelegate;          		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddArbitrationRegistrationCompleteDelegate(struct FScriptDelegate ArbitrationRegistrationCompleteDelegate)
{
	static UFieldFunc* pFnAddArbitrationRegistrationCompleteDelegate = NULL;
	if(!pFnAddArbitrationRegistrationCompleteDelegate)
		pFnAddArbitrationRegistrationCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddArbitrationRegistrationCompleteDelegate");

	Engine_AddArbitrationRegistrationCompleteDelegate_Parms AddArbitrationRegistrationCompleteDelegate_Parms;
	memcpy(&AddArbitrationRegistrationCompleteDelegate_Parms.ArbitrationRegistrationCompleteDelegate,&ArbitrationRegistrationCompleteDelegate,0xC);
	ProcessEvent(pFnAddArbitrationRegistrationCompleteDelegate,NULL,&AddArbitrationRegistrationCompleteDelegate_Parms,NULL);
}

struct Engine_CancelFindOnlineGames_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::CancelFindOnlineGames()
{
	static UFieldFunc* pFnCancelFindOnlineGames = NULL;
	if(!pFnCancelFindOnlineGames)
		pFnCancelFindOnlineGames = UObject::FindFunction("Function Engine.OnlineGameInterface.CancelFindOnlineGames");

	Engine_CancelFindOnlineGames_Parms CancelFindOnlineGames_Parms;
	ProcessEvent(pFnCancelFindOnlineGames,NULL,&CancelFindOnlineGames_Parms,NULL);
	return CancelFindOnlineGames_Parms.ReturnValue;
}

struct Engine_AddJoinOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             JoinOnlineGameCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddJoinOnlineGameCompleteDelegate(struct FScriptDelegate JoinOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddJoinOnlineGameCompleteDelegate = NULL;
	if(!pFnAddJoinOnlineGameCompleteDelegate)
		pFnAddJoinOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddJoinOnlineGameCompleteDelegate");

	Engine_AddJoinOnlineGameCompleteDelegate_Parms AddJoinOnlineGameCompleteDelegate_Parms;
	memcpy(&AddJoinOnlineGameCompleteDelegate_Parms.JoinOnlineGameCompleteDelegate,&JoinOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddJoinOnlineGameCompleteDelegate,NULL,&AddJoinOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_RecalculateSkillRating_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::RecalculateSkillRating(struct FName SessionName,TArray<struct FUniqueNetId>* Players)
{
	static UFieldFunc* pFnRecalculateSkillRating = NULL;
	if(!pFnRecalculateSkillRating)
		pFnRecalculateSkillRating = UObject::FindFunction("Function Engine.OnlineGameInterface.RecalculateSkillRating");

	Engine_RecalculateSkillRating_Parms RecalculateSkillRating_Parms;
	memcpy(&RecalculateSkillRating_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnRecalculateSkillRating,NULL,&RecalculateSkillRating_Parms,NULL);
	if(Players)
		memcpy(Players,&RecalculateSkillRating_Parms.Players,0xC);
	return RecalculateSkillRating_Parms.ReturnValue;
}

struct Engine_ClearGameInviteAcceptedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             GameInviteAcceptedDelegate;                       		// 0x000004 (0x000C)              
};

void UOnlineGameInterface::ClearGameInviteAcceptedDelegate(unsigned char LocalUserNum,struct FScriptDelegate GameInviteAcceptedDelegate)
{
	static UFieldFunc* pFnClearGameInviteAcceptedDelegate = NULL;
	if(!pFnClearGameInviteAcceptedDelegate)
		pFnClearGameInviteAcceptedDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearGameInviteAcceptedDelegate");

	Engine_ClearGameInviteAcceptedDelegate_Parms ClearGameInviteAcceptedDelegate_Parms;
	ClearGameInviteAcceptedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearGameInviteAcceptedDelegate_Parms.GameInviteAcceptedDelegate,&GameInviteAcceptedDelegate,0xC);
	ProcessEvent(pFnClearGameInviteAcceptedDelegate,NULL,&ClearGameInviteAcceptedDelegate_Parms,NULL);
}

struct Engine_ClearRecalculateSkillRatingCompleteDelegate_Parms
{
	struct FScriptDelegate                             RecalculateSkillRatingGameCompleteDelegate;       		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearRecalculateSkillRatingCompleteDelegate(struct FScriptDelegate RecalculateSkillRatingGameCompleteDelegate)
{
	static UFieldFunc* pFnClearRecalculateSkillRatingCompleteDelegate = NULL;
	if(!pFnClearRecalculateSkillRatingCompleteDelegate)
		pFnClearRecalculateSkillRatingCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearRecalculateSkillRatingCompleteDelegate");

	Engine_ClearRecalculateSkillRatingCompleteDelegate_Parms ClearRecalculateSkillRatingCompleteDelegate_Parms;
	memcpy(&ClearRecalculateSkillRatingCompleteDelegate_Parms.RecalculateSkillRatingGameCompleteDelegate,&RecalculateSkillRatingGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearRecalculateSkillRatingCompleteDelegate,NULL,&ClearRecalculateSkillRatingCompleteDelegate_Parms,NULL);
}

struct Engine_AddJoinMigratedOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             JoinMigratedOnlineGameCompleteDelegate;           		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddJoinMigratedOnlineGameCompleteDelegate(struct FScriptDelegate JoinMigratedOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddJoinMigratedOnlineGameCompleteDelegate = NULL;
	if(!pFnAddJoinMigratedOnlineGameCompleteDelegate)
		pFnAddJoinMigratedOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddJoinMigratedOnlineGameCompleteDelegate");

	Engine_AddJoinMigratedOnlineGameCompleteDelegate_Parms AddJoinMigratedOnlineGameCompleteDelegate_Parms;
	memcpy(&AddJoinMigratedOnlineGameCompleteDelegate_Parms.JoinMigratedOnlineGameCompleteDelegate,&JoinMigratedOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddJoinMigratedOnlineGameCompleteDelegate,NULL,&AddJoinMigratedOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_OnArbitrationRegistrationComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnArbitrationRegistrationComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnArbitrationRegistrationComplete = NULL;
	if(!pFnOnArbitrationRegistrationComplete)
		pFnOnArbitrationRegistrationComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnArbitrationRegistrationComplete");

	Engine_OnArbitrationRegistrationComplete_Parms OnArbitrationRegistrationComplete_Parms;
	memcpy(&OnArbitrationRegistrationComplete_Parms.SessionName,&SessionName,0x8);
	OnArbitrationRegistrationComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnArbitrationRegistrationComplete,NULL,&OnArbitrationRegistrationComplete_Parms,NULL);
}

struct Engine_AddRegisterPlayerCompleteDelegate_Parms
{
	struct FScriptDelegate                             RegisterPlayerCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddRegisterPlayerCompleteDelegate(struct FScriptDelegate RegisterPlayerCompleteDelegate)
{
	static UFieldFunc* pFnAddRegisterPlayerCompleteDelegate = NULL;
	if(!pFnAddRegisterPlayerCompleteDelegate)
		pFnAddRegisterPlayerCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddRegisterPlayerCompleteDelegate");

	Engine_AddRegisterPlayerCompleteDelegate_Parms AddRegisterPlayerCompleteDelegate_Parms;
	memcpy(&AddRegisterPlayerCompleteDelegate_Parms.RegisterPlayerCompleteDelegate,&RegisterPlayerCompleteDelegate,0xC);
	ProcessEvent(pFnAddRegisterPlayerCompleteDelegate,NULL,&AddRegisterPlayerCompleteDelegate_Parms,NULL);
}

struct Engine_GetGameSearch_Parms
{
	class UOnlineGameSearch*                           ReturnValue;                                      		// 0x000000 (0x0004)              
};

class UOnlineGameSearch* UOnlineGameInterface::GetGameSearch()
{
	static UFieldFunc* pFnGetGameSearch = NULL;
	if(!pFnGetGameSearch)
		pFnGetGameSearch = UObject::FindFunction("Function Engine.OnlineGameInterface.GetGameSearch");

	Engine_GetGameSearch_Parms GetGameSearch_Parms;
	ProcessEvent(pFnGetGameSearch,NULL,&GetGameSearch_Parms,NULL);
	return GetGameSearch_Parms.ReturnValue;
}

struct Engine_UnregisterPlayer_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000008 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::UnregisterPlayer(struct FName SessionName,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnUnregisterPlayer = NULL;
	if(!pFnUnregisterPlayer)
		pFnUnregisterPlayer = UObject::FindFunction("Function Engine.OnlineGameInterface.UnregisterPlayer");

	Engine_UnregisterPlayer_Parms UnregisterPlayer_Parms;
	memcpy(&UnregisterPlayer_Parms.SessionName,&SessionName,0x8);
	memcpy(&UnregisterPlayer_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnUnregisterPlayer,NULL,&UnregisterPlayer_Parms,NULL);
	return UnregisterPlayer_Parms.ReturnValue;
}

struct Engine_ClearJoinOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             JoinOnlineGameCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearJoinOnlineGameCompleteDelegate(struct FScriptDelegate JoinOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearJoinOnlineGameCompleteDelegate = NULL;
	if(!pFnClearJoinOnlineGameCompleteDelegate)
		pFnClearJoinOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearJoinOnlineGameCompleteDelegate");

	Engine_ClearJoinOnlineGameCompleteDelegate_Parms ClearJoinOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearJoinOnlineGameCompleteDelegate_Parms.JoinOnlineGameCompleteDelegate,&JoinOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearJoinOnlineGameCompleteDelegate,NULL,&ClearJoinOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_ClearUnregisterPlayerCompleteDelegate_Parms
{
	struct FScriptDelegate                             UnregisterPlayerCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearUnregisterPlayerCompleteDelegate(struct FScriptDelegate UnregisterPlayerCompleteDelegate)
{
	static UFieldFunc* pFnClearUnregisterPlayerCompleteDelegate = NULL;
	if(!pFnClearUnregisterPlayerCompleteDelegate)
		pFnClearUnregisterPlayerCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearUnregisterPlayerCompleteDelegate");

	Engine_ClearUnregisterPlayerCompleteDelegate_Parms ClearUnregisterPlayerCompleteDelegate_Parms;
	memcpy(&ClearUnregisterPlayerCompleteDelegate_Parms.UnregisterPlayerCompleteDelegate,&UnregisterPlayerCompleteDelegate,0xC);
	ProcessEvent(pFnClearUnregisterPlayerCompleteDelegate,NULL,&ClearUnregisterPlayerCompleteDelegate_Parms,NULL);
}

struct Engine_GetResolvedConnectString_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FString                                     ConnectInfo;                                      		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::GetResolvedConnectString(struct FName SessionName,struct FString* ConnectInfo)
{
	static UFieldFunc* pFnGetResolvedConnectString = NULL;
	if(!pFnGetResolvedConnectString)
		pFnGetResolvedConnectString = UObject::FindFunction("Function Engine.OnlineGameInterface.GetResolvedConnectString");

	Engine_GetResolvedConnectString_Parms GetResolvedConnectString_Parms;
	memcpy(&GetResolvedConnectString_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnGetResolvedConnectString,NULL,&GetResolvedConnectString_Parms,NULL);
	if(ConnectInfo)
		memcpy(ConnectInfo,&GetResolvedConnectString_Parms.ConnectInfo,0xC);
	return GetResolvedConnectString_Parms.ReturnValue;
}

struct Engine_OnFindOnlineGamesComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnFindOnlineGamesComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnFindOnlineGamesComplete = NULL;
	if(!pFnOnFindOnlineGamesComplete)
		pFnOnFindOnlineGamesComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnFindOnlineGamesComplete");

	Engine_OnFindOnlineGamesComplete_Parms OnFindOnlineGamesComplete_Parms;
	OnFindOnlineGamesComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnFindOnlineGamesComplete,NULL,&OnFindOnlineGamesComplete_Parms,NULL);
}

struct Engine_RegisterPlayers_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::RegisterPlayers(struct FName SessionName,TArray<struct FUniqueNetId>* Players)
{
	static UFieldFunc* pFnRegisterPlayers = NULL;
	if(!pFnRegisterPlayers)
		pFnRegisterPlayers = UObject::FindFunction("Function Engine.OnlineGameInterface.RegisterPlayers");

	Engine_RegisterPlayers_Parms RegisterPlayers_Parms;
	memcpy(&RegisterPlayers_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnRegisterPlayers,NULL,&RegisterPlayers_Parms,NULL);
	if(Players)
		memcpy(Players,&RegisterPlayers_Parms.Players,0xC);
	return RegisterPlayers_Parms.ReturnValue;
}

struct Engine_ClearEndOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             EndOnlineGameCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearEndOnlineGameCompleteDelegate(struct FScriptDelegate EndOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearEndOnlineGameCompleteDelegate = NULL;
	if(!pFnClearEndOnlineGameCompleteDelegate)
		pFnClearEndOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearEndOnlineGameCompleteDelegate");

	Engine_ClearEndOnlineGameCompleteDelegate_Parms ClearEndOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearEndOnlineGameCompleteDelegate_Parms.EndOnlineGameCompleteDelegate,&EndOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearEndOnlineGameCompleteDelegate,NULL,&ClearEndOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_OnUnregisterPlayerComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000008 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000010 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnUnregisterPlayerComplete(struct FName SessionName,struct FUniqueNetId PlayerID,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnUnregisterPlayerComplete = NULL;
	if(!pFnOnUnregisterPlayerComplete)
		pFnOnUnregisterPlayerComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnUnregisterPlayerComplete");

	Engine_OnUnregisterPlayerComplete_Parms OnUnregisterPlayerComplete_Parms;
	memcpy(&OnUnregisterPlayerComplete_Parms.SessionName,&SessionName,0x8);
	memcpy(&OnUnregisterPlayerComplete_Parms.PlayerID,&PlayerID,0x8);
	OnUnregisterPlayerComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnUnregisterPlayerComplete,NULL,&OnUnregisterPlayerComplete_Parms,NULL);
}

struct Engine_AddQosStatusChangedDelegate_Parms
{
	struct FScriptDelegate                             QosStatusChangedDelegate;                         		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddQosStatusChangedDelegate(struct FScriptDelegate QosStatusChangedDelegate)
{
	static UFieldFunc* pFnAddQosStatusChangedDelegate = NULL;
	if(!pFnAddQosStatusChangedDelegate)
		pFnAddQosStatusChangedDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddQosStatusChangedDelegate");

	Engine_AddQosStatusChangedDelegate_Parms AddQosStatusChangedDelegate_Parms;
	memcpy(&AddQosStatusChangedDelegate_Parms.QosStatusChangedDelegate,&QosStatusChangedDelegate,0xC);
	ProcessEvent(pFnAddQosStatusChangedDelegate,NULL,&AddQosStatusChangedDelegate_Parms,NULL);
}

struct Engine_ClearStartOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             StartOnlineGameCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearStartOnlineGameCompleteDelegate(struct FScriptDelegate StartOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearStartOnlineGameCompleteDelegate = NULL;
	if(!pFnClearStartOnlineGameCompleteDelegate)
		pFnClearStartOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearStartOnlineGameCompleteDelegate");

	Engine_ClearStartOnlineGameCompleteDelegate_Parms ClearStartOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearStartOnlineGameCompleteDelegate_Parms.StartOnlineGameCompleteDelegate,&StartOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearStartOnlineGameCompleteDelegate,NULL,&ClearStartOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_AddCreateOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             CreateOnlineGameCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddCreateOnlineGameCompleteDelegate(struct FScriptDelegate CreateOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddCreateOnlineGameCompleteDelegate = NULL;
	if(!pFnAddCreateOnlineGameCompleteDelegate)
		pFnAddCreateOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddCreateOnlineGameCompleteDelegate");

	Engine_AddCreateOnlineGameCompleteDelegate_Parms AddCreateOnlineGameCompleteDelegate_Parms;
	memcpy(&AddCreateOnlineGameCompleteDelegate_Parms.CreateOnlineGameCompleteDelegate,&CreateOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddCreateOnlineGameCompleteDelegate,NULL,&AddCreateOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_JoinMigratedOnlineGame_Parms
{
	unsigned char                                      PlayerNum;                                        		// 0x000000 (0x0001)              
	struct FName                                       SessionName;                                      		// 0x000004 (0x0008)              
	struct FOnlineGameSearchResult                     DesiredGame;                                      		// 0x00000C (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::JoinMigratedOnlineGame(unsigned char PlayerNum,struct FName SessionName,struct FOnlineGameSearchResult* DesiredGame)
{
	static UFieldFunc* pFnJoinMigratedOnlineGame = NULL;
	if(!pFnJoinMigratedOnlineGame)
		pFnJoinMigratedOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.JoinMigratedOnlineGame");

	Engine_JoinMigratedOnlineGame_Parms JoinMigratedOnlineGame_Parms;
	JoinMigratedOnlineGame_Parms.PlayerNum = PlayerNum;
	memcpy(&JoinMigratedOnlineGame_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnJoinMigratedOnlineGame,NULL,&JoinMigratedOnlineGame_Parms,NULL);
	if(DesiredGame)
		memcpy(DesiredGame,&JoinMigratedOnlineGame_Parms.DesiredGame,0x8);
	return JoinMigratedOnlineGame_Parms.ReturnValue;
}

struct Engine_AddGameInviteAcceptedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             GameInviteAcceptedDelegate;                       		// 0x000004 (0x000C)              
};

void UOnlineGameInterface::AddGameInviteAcceptedDelegate(unsigned char LocalUserNum,struct FScriptDelegate GameInviteAcceptedDelegate)
{
	static UFieldFunc* pFnAddGameInviteAcceptedDelegate = NULL;
	if(!pFnAddGameInviteAcceptedDelegate)
		pFnAddGameInviteAcceptedDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddGameInviteAcceptedDelegate");

	Engine_AddGameInviteAcceptedDelegate_Parms AddGameInviteAcceptedDelegate_Parms;
	AddGameInviteAcceptedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddGameInviteAcceptedDelegate_Parms.GameInviteAcceptedDelegate,&GameInviteAcceptedDelegate,0xC);
	ProcessEvent(pFnAddGameInviteAcceptedDelegate,NULL,&AddGameInviteAcceptedDelegate_Parms,NULL);
}

struct Engine_ClearArbitrationRegistrationCompleteDelegate_Parms
{
	struct FScriptDelegate                             ArbitrationRegistrationCompleteDelegate;          		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearArbitrationRegistrationCompleteDelegate(struct FScriptDelegate ArbitrationRegistrationCompleteDelegate)
{
	static UFieldFunc* pFnClearArbitrationRegistrationCompleteDelegate = NULL;
	if(!pFnClearArbitrationRegistrationCompleteDelegate)
		pFnClearArbitrationRegistrationCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearArbitrationRegistrationCompleteDelegate");

	Engine_ClearArbitrationRegistrationCompleteDelegate_Parms ClearArbitrationRegistrationCompleteDelegate_Parms;
	memcpy(&ClearArbitrationRegistrationCompleteDelegate_Parms.ArbitrationRegistrationCompleteDelegate,&ArbitrationRegistrationCompleteDelegate,0xC);
	ProcessEvent(pFnClearArbitrationRegistrationCompleteDelegate,NULL,&ClearArbitrationRegistrationCompleteDelegate_Parms,NULL);
}

struct Engine_AddEndOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             EndOnlineGameCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddEndOnlineGameCompleteDelegate(struct FScriptDelegate EndOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnAddEndOnlineGameCompleteDelegate = NULL;
	if(!pFnAddEndOnlineGameCompleteDelegate)
		pFnAddEndOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddEndOnlineGameCompleteDelegate");

	Engine_AddEndOnlineGameCompleteDelegate_Parms AddEndOnlineGameCompleteDelegate_Parms;
	memcpy(&AddEndOnlineGameCompleteDelegate_Parms.EndOnlineGameCompleteDelegate,&EndOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddEndOnlineGameCompleteDelegate,NULL,&AddEndOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_AddFindOnlineGamesCompleteDelegate_Parms
{
	struct FScriptDelegate                             FindOnlineGamesCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::AddFindOnlineGamesCompleteDelegate(struct FScriptDelegate FindOnlineGamesCompleteDelegate)
{
	static UFieldFunc* pFnAddFindOnlineGamesCompleteDelegate = NULL;
	if(!pFnAddFindOnlineGamesCompleteDelegate)
		pFnAddFindOnlineGamesCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.AddFindOnlineGamesCompleteDelegate");

	Engine_AddFindOnlineGamesCompleteDelegate_Parms AddFindOnlineGamesCompleteDelegate_Parms;
	memcpy(&AddFindOnlineGamesCompleteDelegate_Parms.FindOnlineGamesCompleteDelegate,&FindOnlineGamesCompleteDelegate,0xC);
	ProcessEvent(pFnAddFindOnlineGamesCompleteDelegate,NULL,&AddFindOnlineGamesCompleteDelegate_Parms,NULL);
}

struct Engine_OnGameInviteAccepted_Parms
{
	struct FOnlineGameSearchResult                     InviteResult;                                     		// 0x000000 (0x0008)              
};

void UOnlineGameInterface::OnGameInviteAccepted(struct FOnlineGameSearchResult* InviteResult)
{
	static UFieldFunc* pFnOnGameInviteAccepted = NULL;
	if(!pFnOnGameInviteAccepted)
		pFnOnGameInviteAccepted = UObject::FindFunction("Function Engine.OnlineGameInterface.OnGameInviteAccepted");

	Engine_OnGameInviteAccepted_Parms OnGameInviteAccepted_Parms;
	ProcessEvent(pFnOnGameInviteAccepted,NULL,&OnGameInviteAccepted_Parms,NULL);
	if(InviteResult)
		memcpy(InviteResult,&OnGameInviteAccepted_Parms.InviteResult,0x8);
}

struct Engine_ReadPlatformSpecificSessionInfoBySessionName_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned char                                      PlatformSpecificInfo[0x50];                       		// 0x000008 (0x0050)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000058 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::ReadPlatformSpecificSessionInfoBySessionName(struct FName SessionName,unsigned char* PlatformSpecificInfo)
{
	static UFieldFunc* pFnReadPlatformSpecificSessionInfoBySessionName = NULL;
	if(!pFnReadPlatformSpecificSessionInfoBySessionName)
		pFnReadPlatformSpecificSessionInfoBySessionName = UObject::FindFunction("Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfoBySessionName");

	Engine_ReadPlatformSpecificSessionInfoBySessionName_Parms ReadPlatformSpecificSessionInfoBySessionName_Parms;
	memcpy(&ReadPlatformSpecificSessionInfoBySessionName_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnReadPlatformSpecificSessionInfoBySessionName,NULL,&ReadPlatformSpecificSessionInfoBySessionName_Parms,NULL);
	if(PlatformSpecificInfo)
		memcpy(PlatformSpecificInfo,&ReadPlatformSpecificSessionInfoBySessionName_Parms.PlatformSpecificInfo,0x50);
	return ReadPlatformSpecificSessionInfoBySessionName_Parms.ReturnValue;
}

struct Engine_ClearMigrateOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             MigrateOnlineGameCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearMigrateOnlineGameCompleteDelegate(struct FScriptDelegate MigrateOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearMigrateOnlineGameCompleteDelegate = NULL;
	if(!pFnClearMigrateOnlineGameCompleteDelegate)
		pFnClearMigrateOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearMigrateOnlineGameCompleteDelegate");

	Engine_ClearMigrateOnlineGameCompleteDelegate_Parms ClearMigrateOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearMigrateOnlineGameCompleteDelegate_Parms.MigrateOnlineGameCompleteDelegate,&MigrateOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearMigrateOnlineGameCompleteDelegate,NULL,&ClearMigrateOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_MigrateOnlineGame_Parms
{
	unsigned char                                      HostingPlayerNum;                                 		// 0x000000 (0x0001)              
	struct FName                                       SessionName;                                      		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::MigrateOnlineGame(unsigned char HostingPlayerNum,struct FName SessionName)
{
	static UFieldFunc* pFnMigrateOnlineGame = NULL;
	if(!pFnMigrateOnlineGame)
		pFnMigrateOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.MigrateOnlineGame");

	Engine_MigrateOnlineGame_Parms MigrateOnlineGame_Parms;
	MigrateOnlineGame_Parms.HostingPlayerNum = HostingPlayerNum;
	memcpy(&MigrateOnlineGame_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnMigrateOnlineGame,NULL,&MigrateOnlineGame_Parms,NULL);
	return MigrateOnlineGame_Parms.ReturnValue;
}

struct Engine_ClearDestroyOnlineGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             DestroyOnlineGameCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineGameInterface::ClearDestroyOnlineGameCompleteDelegate(struct FScriptDelegate DestroyOnlineGameCompleteDelegate)
{
	static UFieldFunc* pFnClearDestroyOnlineGameCompleteDelegate = NULL;
	if(!pFnClearDestroyOnlineGameCompleteDelegate)
		pFnClearDestroyOnlineGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlineGameInterface.ClearDestroyOnlineGameCompleteDelegate");

	Engine_ClearDestroyOnlineGameCompleteDelegate_Parms ClearDestroyOnlineGameCompleteDelegate_Parms;
	memcpy(&ClearDestroyOnlineGameCompleteDelegate_Parms.DestroyOnlineGameCompleteDelegate,&DestroyOnlineGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearDestroyOnlineGameCompleteDelegate,NULL,&ClearDestroyOnlineGameCompleteDelegate_Parms,NULL);
}

struct Engine_OnStartOnlineGameComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineGameInterface::OnStartOnlineGameComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnStartOnlineGameComplete = NULL;
	if(!pFnOnStartOnlineGameComplete)
		pFnOnStartOnlineGameComplete = UObject::FindFunction("Function Engine.OnlineGameInterface.OnStartOnlineGameComplete");

	Engine_OnStartOnlineGameComplete_Parms OnStartOnlineGameComplete_Parms;
	memcpy(&OnStartOnlineGameComplete_Parms.SessionName,&SessionName,0x8);
	OnStartOnlineGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnStartOnlineGameComplete,NULL,&OnStartOnlineGameComplete_Parms,NULL);
}

struct Engine_UpdateOnlineGame_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	class UOnlineGameSettings*                         UpdatedGameSettings;                              		// 0x000008 (0x0004)              
	unsigned long                                      bShouldRefreshOnlineData : 1;                     		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::UpdateOnlineGame(struct FName SessionName,class UOnlineGameSettings* UpdatedGameSettings,bool bShouldRefreshOnlineData)
{
	static UFieldFunc* pFnUpdateOnlineGame = NULL;
	if(!pFnUpdateOnlineGame)
		pFnUpdateOnlineGame = UObject::FindFunction("Function Engine.OnlineGameInterface.UpdateOnlineGame");

	Engine_UpdateOnlineGame_Parms UpdateOnlineGame_Parms;
	memcpy(&UpdateOnlineGame_Parms.SessionName,&SessionName,0x8);
	UpdateOnlineGame_Parms.UpdatedGameSettings = UpdatedGameSettings;
	UpdateOnlineGame_Parms.bShouldRefreshOnlineData = bShouldRefreshOnlineData;
	ProcessEvent(pFnUpdateOnlineGame,NULL,&UpdateOnlineGame_Parms,NULL);
	return UpdateOnlineGame_Parms.ReturnValue;
}

struct Engine_QueryNonAdvertisedData_Parms
{
	int                                                StartAt;                                          		// 0x000000 (0x0004)              
	int                                                NumberToQuery;                                    		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineGameInterface::QueryNonAdvertisedData(int StartAt,int NumberToQuery)
{
	static UFieldFunc* pFnQueryNonAdvertisedData = NULL;
	if(!pFnQueryNonAdvertisedData)
		pFnQueryNonAdvertisedData = UObject::FindFunction("Function Engine.OnlineGameInterface.QueryNonAdvertisedData");

	Engine_QueryNonAdvertisedData_Parms QueryNonAdvertisedData_Parms;
	QueryNonAdvertisedData_Parms.StartAt = StartAt;
	QueryNonAdvertisedData_Parms.NumberToQuery = NumberToQuery;
	ProcessEvent(pFnQueryNonAdvertisedData,NULL,&QueryNonAdvertisedData_Parms,NULL);
	return QueryNonAdvertisedData_Parms.ReturnValue;
}

struct Engine_ClearReadNewsCompletedDelegate_Parms
{
	struct FScriptDelegate                             ReadNewsDelegate;                                 		// 0x000000 (0x000C)              
};

void UOnlineNewsInterface::ClearReadNewsCompletedDelegate(struct FScriptDelegate ReadNewsDelegate)
{
	static UFieldFunc* pFnClearReadNewsCompletedDelegate = NULL;
	if(!pFnClearReadNewsCompletedDelegate)
		pFnClearReadNewsCompletedDelegate = UObject::FindFunction("Function Engine.OnlineNewsInterface.ClearReadNewsCompletedDelegate");

	Engine_ClearReadNewsCompletedDelegate_Parms ClearReadNewsCompletedDelegate_Parms;
	memcpy(&ClearReadNewsCompletedDelegate_Parms.ReadNewsDelegate,&ReadNewsDelegate,0xC);
	ProcessEvent(pFnClearReadNewsCompletedDelegate,NULL,&ClearReadNewsCompletedDelegate_Parms,NULL);
}

struct Engine_OnReadNewsCompleted_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	unsigned char                                      NewsType;                                         		// 0x000004 (0x0001)              
};

void UOnlineNewsInterface::OnReadNewsCompleted(bool bWasSuccessful,unsigned char NewsType)
{
	static UFieldFunc* pFnOnReadNewsCompleted = NULL;
	if(!pFnOnReadNewsCompleted)
		pFnOnReadNewsCompleted = UObject::FindFunction("Function Engine.OnlineNewsInterface.OnReadNewsCompleted");

	Engine_OnReadNewsCompleted_Parms OnReadNewsCompleted_Parms;
	OnReadNewsCompleted_Parms.bWasSuccessful = bWasSuccessful;
	OnReadNewsCompleted_Parms.NewsType = NewsType;
	ProcessEvent(pFnOnReadNewsCompleted,NULL,&OnReadNewsCompleted_Parms,NULL);
}

struct Engine_GetNews_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      NewsType;                                         		// 0x000001 (0x0001)              
	unsigned char                                      _0x000002[0x2];                                   		// 0x000002 (0x0002) ALIGNEMENT
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UOnlineNewsInterface::GetNews(unsigned char LocalUserNum,unsigned char NewsType)
{
	static UFieldFunc* pFnGetNews = NULL;
	if(!pFnGetNews)
		pFnGetNews = UObject::FindFunction("Function Engine.OnlineNewsInterface.GetNews");

	Engine_GetNews_Parms GetNews_Parms;
	GetNews_Parms.LocalUserNum = LocalUserNum;
	GetNews_Parms.NewsType = NewsType;
	ProcessEvent(pFnGetNews,NULL,&GetNews_Parms,NULL);
	return GetNews_Parms.ReturnValue;
}

struct Engine_ReadNews_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      NewsType;                                         		// 0x000001 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineNewsInterface::ReadNews(unsigned char LocalUserNum,unsigned char NewsType)
{
	static UFieldFunc* pFnReadNews = NULL;
	if(!pFnReadNews)
		pFnReadNews = UObject::FindFunction("Function Engine.OnlineNewsInterface.ReadNews");

	Engine_ReadNews_Parms ReadNews_Parms;
	ReadNews_Parms.LocalUserNum = LocalUserNum;
	ReadNews_Parms.NewsType = NewsType;
	ProcessEvent(pFnReadNews,NULL,&ReadNews_Parms,NULL);
	return ReadNews_Parms.ReturnValue;
}

struct Engine_AddReadNewsCompletedDelegate_Parms
{
	struct FScriptDelegate                             ReadNewsDelegate;                                 		// 0x000000 (0x000C)              
};

void UOnlineNewsInterface::AddReadNewsCompletedDelegate(struct FScriptDelegate ReadNewsDelegate)
{
	static UFieldFunc* pFnAddReadNewsCompletedDelegate = NULL;
	if(!pFnAddReadNewsCompletedDelegate)
		pFnAddReadNewsCompletedDelegate = UObject::FindFunction("Function Engine.OnlineNewsInterface.AddReadNewsCompletedDelegate");

	Engine_AddReadNewsCompletedDelegate_Parms AddReadNewsCompletedDelegate_Parms;
	memcpy(&AddReadNewsCompletedDelegate_Parms.ReadNewsDelegate,&ReadNewsDelegate,0xC);
	ProcessEvent(pFnAddReadNewsCompletedDelegate,NULL,&AddReadNewsCompletedDelegate_Parms,NULL);
}

struct Engine_ClearSendPartyGameInvitesCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             SendPartyGameInvitesCompleteDelegate;             		// 0x000004 (0x000C)              
};

void UOnlinePartyChatInterface::ClearSendPartyGameInvitesCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate SendPartyGameInvitesCompleteDelegate)
{
	static UFieldFunc* pFnClearSendPartyGameInvitesCompleteDelegate = NULL;
	if(!pFnClearSendPartyGameInvitesCompleteDelegate)
		pFnClearSendPartyGameInvitesCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.ClearSendPartyGameInvitesCompleteDelegate");

	Engine_ClearSendPartyGameInvitesCompleteDelegate_Parms ClearSendPartyGameInvitesCompleteDelegate_Parms;
	ClearSendPartyGameInvitesCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearSendPartyGameInvitesCompleteDelegate_Parms.SendPartyGameInvitesCompleteDelegate,&SendPartyGameInvitesCompleteDelegate,0xC);
	ProcessEvent(pFnClearSendPartyGameInvitesCompleteDelegate,NULL,&ClearSendPartyGameInvitesCompleteDelegate_Parms,NULL);
}

struct Engine_AddSendPartyGameInvitesCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             SendPartyGameInvitesCompleteDelegate;             		// 0x000004 (0x000C)              
};

void UOnlinePartyChatInterface::AddSendPartyGameInvitesCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate SendPartyGameInvitesCompleteDelegate)
{
	static UFieldFunc* pFnAddSendPartyGameInvitesCompleteDelegate = NULL;
	if(!pFnAddSendPartyGameInvitesCompleteDelegate)
		pFnAddSendPartyGameInvitesCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.AddSendPartyGameInvitesCompleteDelegate");

	Engine_AddSendPartyGameInvitesCompleteDelegate_Parms AddSendPartyGameInvitesCompleteDelegate_Parms;
	AddSendPartyGameInvitesCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddSendPartyGameInvitesCompleteDelegate_Parms.SendPartyGameInvitesCompleteDelegate,&SendPartyGameInvitesCompleteDelegate,0xC);
	ProcessEvent(pFnAddSendPartyGameInvitesCompleteDelegate,NULL,&AddSendPartyGameInvitesCompleteDelegate_Parms,NULL);
}

struct Engine_AddPartyMemberListChangedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PartyMemberListChangedDelegate;                   		// 0x000004 (0x000C)              
};

void UOnlinePartyChatInterface::AddPartyMemberListChangedDelegate(unsigned char LocalUserNum,struct FScriptDelegate PartyMemberListChangedDelegate)
{
	static UFieldFunc* pFnAddPartyMemberListChangedDelegate = NULL;
	if(!pFnAddPartyMemberListChangedDelegate)
		pFnAddPartyMemberListChangedDelegate = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.AddPartyMemberListChangedDelegate");

	Engine_AddPartyMemberListChangedDelegate_Parms AddPartyMemberListChangedDelegate_Parms;
	AddPartyMemberListChangedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddPartyMemberListChangedDelegate_Parms.PartyMemberListChangedDelegate,&PartyMemberListChangedDelegate,0xC);
	ProcessEvent(pFnAddPartyMemberListChangedDelegate,NULL,&AddPartyMemberListChangedDelegate_Parms,NULL);
}

struct Engine_SendPartyGameInvites_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::SendPartyGameInvites(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnSendPartyGameInvites = NULL;
	if(!pFnSendPartyGameInvites)
		pFnSendPartyGameInvites = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.SendPartyGameInvites");

	Engine_SendPartyGameInvites_Parms SendPartyGameInvites_Parms;
	SendPartyGameInvites_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnSendPartyGameInvites,NULL,&SendPartyGameInvites_Parms,NULL);
	return SendPartyGameInvites_Parms.ReturnValue;
}

struct Engine_ClearPartyMembersInfoChangedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PartyMembersInfoChangedDelegate;                  		// 0x000004 (0x000C)              
};

void UOnlinePartyChatInterface::ClearPartyMembersInfoChangedDelegate(unsigned char LocalUserNum,struct FScriptDelegate PartyMembersInfoChangedDelegate)
{
	static UFieldFunc* pFnClearPartyMembersInfoChangedDelegate = NULL;
	if(!pFnClearPartyMembersInfoChangedDelegate)
		pFnClearPartyMembersInfoChangedDelegate = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.ClearPartyMembersInfoChangedDelegate");

	Engine_ClearPartyMembersInfoChangedDelegate_Parms ClearPartyMembersInfoChangedDelegate_Parms;
	ClearPartyMembersInfoChangedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearPartyMembersInfoChangedDelegate_Parms.PartyMembersInfoChangedDelegate,&PartyMembersInfoChangedDelegate,0xC);
	ProcessEvent(pFnClearPartyMembersInfoChangedDelegate,NULL,&ClearPartyMembersInfoChangedDelegate_Parms,NULL);
}

struct Engine_GetPartyBandwidth_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UOnlinePartyChatInterface::GetPartyBandwidth()
{
	static UFieldFunc* pFnGetPartyBandwidth = NULL;
	if(!pFnGetPartyBandwidth)
		pFnGetPartyBandwidth = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.GetPartyBandwidth");

	Engine_GetPartyBandwidth_Parms GetPartyBandwidth_Parms;
	ProcessEvent(pFnGetPartyBandwidth,NULL,&GetPartyBandwidth_Parms,NULL);
	return GetPartyBandwidth_Parms.ReturnValue;
}

struct Engine_ShowCommunitySessionsUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::ShowCommunitySessionsUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowCommunitySessionsUI = NULL;
	if(!pFnShowCommunitySessionsUI)
		pFnShowCommunitySessionsUI = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.ShowCommunitySessionsUI");

	Engine_ShowCommunitySessionsUI_Parms ShowCommunitySessionsUI_Parms;
	ShowCommunitySessionsUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowCommunitySessionsUI,NULL,&ShowCommunitySessionsUI_Parms,NULL);
	return ShowCommunitySessionsUI_Parms.ReturnValue;
}

struct Engine_OnSendPartyGameInvitesComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePartyChatInterface::OnSendPartyGameInvitesComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnSendPartyGameInvitesComplete = NULL;
	if(!pFnOnSendPartyGameInvitesComplete)
		pFnOnSendPartyGameInvitesComplete = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.OnSendPartyGameInvitesComplete");

	Engine_OnSendPartyGameInvitesComplete_Parms OnSendPartyGameInvitesComplete_Parms;
	OnSendPartyGameInvitesComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnSendPartyGameInvitesComplete,NULL,&OnSendPartyGameInvitesComplete_Parms,NULL);
}

struct Engine_OnPartyMembersInfoChanged_Parms
{
	struct FString                                     PlayerName;                                       		// 0x000000 (0x000C)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x00000C (0x0008)              
	int                                                CustomData1;                                      		// 0x000014 (0x0004)              
	int                                                CustomData2;                                      		// 0x000018 (0x0004)              
	int                                                CustomData3;                                      		// 0x00001C (0x0004)              
	int                                                CustomData4;                                      		// 0x000020 (0x0004)              
};

void UOnlinePartyChatInterface::OnPartyMembersInfoChanged(struct FString PlayerName,struct FUniqueNetId PlayerID,int CustomData1,int CustomData2,int CustomData3,int CustomData4)
{
	static UFieldFunc* pFnOnPartyMembersInfoChanged = NULL;
	if(!pFnOnPartyMembersInfoChanged)
		pFnOnPartyMembersInfoChanged = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.OnPartyMembersInfoChanged");

	Engine_OnPartyMembersInfoChanged_Parms OnPartyMembersInfoChanged_Parms;
	memcpy(&OnPartyMembersInfoChanged_Parms.PlayerName,&PlayerName,0xC);
	memcpy(&OnPartyMembersInfoChanged_Parms.PlayerID,&PlayerID,0x8);
	OnPartyMembersInfoChanged_Parms.CustomData1 = CustomData1;
	OnPartyMembersInfoChanged_Parms.CustomData2 = CustomData2;
	OnPartyMembersInfoChanged_Parms.CustomData3 = CustomData3;
	OnPartyMembersInfoChanged_Parms.CustomData4 = CustomData4;
	ProcessEvent(pFnOnPartyMembersInfoChanged,NULL,&OnPartyMembersInfoChanged_Parms,NULL);
}

struct Engine_AddPartyMembersInfoChangedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PartyMembersInfoChangedDelegate;                  		// 0x000004 (0x000C)              
};

void UOnlinePartyChatInterface::AddPartyMembersInfoChangedDelegate(unsigned char LocalUserNum,struct FScriptDelegate PartyMembersInfoChangedDelegate)
{
	static UFieldFunc* pFnAddPartyMembersInfoChangedDelegate = NULL;
	if(!pFnAddPartyMembersInfoChangedDelegate)
		pFnAddPartyMembersInfoChangedDelegate = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.AddPartyMembersInfoChangedDelegate");

	Engine_AddPartyMembersInfoChangedDelegate_Parms AddPartyMembersInfoChangedDelegate_Parms;
	AddPartyMembersInfoChangedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddPartyMembersInfoChangedDelegate_Parms.PartyMembersInfoChangedDelegate,&PartyMembersInfoChangedDelegate,0xC);
	ProcessEvent(pFnAddPartyMembersInfoChangedDelegate,NULL,&AddPartyMembersInfoChangedDelegate_Parms,NULL);
}

struct Engine_GetPartyMemberInformation_Parms
{
	struct FUniqueNetId                                MemberId;                                         		// 0x000000 (0x0008)              
	struct FOnlinePartyMember                          PartyMember;                                      		// 0x000008 (0x0038)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000040 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::GetPartyMemberInformation(struct FUniqueNetId MemberId,struct FOnlinePartyMember* PartyMember)
{
	static UFieldFunc* pFnGetPartyMemberInformation = NULL;
	if(!pFnGetPartyMemberInformation)
		pFnGetPartyMemberInformation = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.GetPartyMemberInformation");

	Engine_GetPartyMemberInformation_Parms GetPartyMemberInformation_Parms;
	memcpy(&GetPartyMemberInformation_Parms.MemberId,&MemberId,0x8);
	ProcessEvent(pFnGetPartyMemberInformation,NULL,&GetPartyMemberInformation_Parms,NULL);
	if(PartyMember)
		memcpy(PartyMember,&GetPartyMemberInformation_Parms.PartyMember,0x38);
	return GetPartyMemberInformation_Parms.ReturnValue;
}

struct Engine_ShowVoiceChannelUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::ShowVoiceChannelUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowVoiceChannelUI = NULL;
	if(!pFnShowVoiceChannelUI)
		pFnShowVoiceChannelUI = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.ShowVoiceChannelUI");

	Engine_ShowVoiceChannelUI_Parms ShowVoiceChannelUI_Parms;
	ShowVoiceChannelUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowVoiceChannelUI,NULL,&ShowVoiceChannelUI_Parms,NULL);
	return ShowVoiceChannelUI_Parms.ReturnValue;
}

struct Engine_SetPartyMemberCustomData_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                Data1;                                            		// 0x000004 (0x0004)              
	int                                                Data2;                                            		// 0x000008 (0x0004)              
	int                                                Data3;                                            		// 0x00000C (0x0004)              
	int                                                Data4;                                            		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::SetPartyMemberCustomData(unsigned char LocalUserNum,int Data1,int Data2,int Data3,int Data4)
{
	static UFieldFunc* pFnSetPartyMemberCustomData = NULL;
	if(!pFnSetPartyMemberCustomData)
		pFnSetPartyMemberCustomData = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.SetPartyMemberCustomData");

	Engine_SetPartyMemberCustomData_Parms SetPartyMemberCustomData_Parms;
	SetPartyMemberCustomData_Parms.LocalUserNum = LocalUserNum;
	SetPartyMemberCustomData_Parms.Data1 = Data1;
	SetPartyMemberCustomData_Parms.Data2 = Data2;
	SetPartyMemberCustomData_Parms.Data3 = Data3;
	SetPartyMemberCustomData_Parms.Data4 = Data4;
	ProcessEvent(pFnSetPartyMemberCustomData,NULL,&SetPartyMemberCustomData_Parms,NULL);
	return SetPartyMemberCustomData_Parms.ReturnValue;
}

struct Engine_GetPartyMembersInformation_Parms
{
	TArray<struct FOnlinePartyMember>                  PartyMembers;                                     		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::GetPartyMembersInformation(TArray<struct FOnlinePartyMember>* PartyMembers)
{
	static UFieldFunc* pFnGetPartyMembersInformation = NULL;
	if(!pFnGetPartyMembersInformation)
		pFnGetPartyMembersInformation = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.GetPartyMembersInformation");

	Engine_GetPartyMembersInformation_Parms GetPartyMembersInformation_Parms;
	ProcessEvent(pFnGetPartyMembersInformation,NULL,&GetPartyMembersInformation_Parms,NULL);
	if(PartyMembers)
		memcpy(PartyMembers,&GetPartyMembersInformation_Parms.PartyMembers,0xC);
	return GetPartyMembersInformation_Parms.ReturnValue;
}

struct Engine_ShowPartyUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::ShowPartyUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowPartyUI = NULL;
	if(!pFnShowPartyUI)
		pFnShowPartyUI = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.ShowPartyUI");

	Engine_ShowPartyUI_Parms ShowPartyUI_Parms;
	ShowPartyUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowPartyUI,NULL,&ShowPartyUI_Parms,NULL);
	return ShowPartyUI_Parms.ReturnValue;
}

struct Engine_OnPartyMemberListChanged_Parms
{
	unsigned long                                      bJoinedOrLeft : 1;                                		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     PlayerName;                                       		// 0x000004 (0x000C)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000010 (0x0008)              
};

void UOnlinePartyChatInterface::OnPartyMemberListChanged(bool bJoinedOrLeft,struct FString PlayerName,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnOnPartyMemberListChanged = NULL;
	if(!pFnOnPartyMemberListChanged)
		pFnOnPartyMemberListChanged = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.OnPartyMemberListChanged");

	Engine_OnPartyMemberListChanged_Parms OnPartyMemberListChanged_Parms;
	OnPartyMemberListChanged_Parms.bJoinedOrLeft = bJoinedOrLeft;
	memcpy(&OnPartyMemberListChanged_Parms.PlayerName,&PlayerName,0xC);
	memcpy(&OnPartyMemberListChanged_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnOnPartyMemberListChanged,NULL,&OnPartyMemberListChanged_Parms,NULL);
}

struct Engine_ClearPartyMemberListChangedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PartyMemberListChangedDelegate;                   		// 0x000004 (0x000C)              
};

void UOnlinePartyChatInterface::ClearPartyMemberListChangedDelegate(unsigned char LocalUserNum,struct FScriptDelegate PartyMemberListChangedDelegate)
{
	static UFieldFunc* pFnClearPartyMemberListChangedDelegate = NULL;
	if(!pFnClearPartyMemberListChangedDelegate)
		pFnClearPartyMemberListChangedDelegate = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.ClearPartyMemberListChangedDelegate");

	Engine_ClearPartyMemberListChangedDelegate_Parms ClearPartyMemberListChangedDelegate_Parms;
	ClearPartyMemberListChangedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearPartyMemberListChangedDelegate_Parms.PartyMemberListChangedDelegate,&PartyMemberListChangedDelegate,0xC);
	ProcessEvent(pFnClearPartyMemberListChangedDelegate,NULL,&ClearPartyMemberListChangedDelegate_Parms,NULL);
}

struct Engine_IsInPartyChat_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePartyChatInterface::IsInPartyChat(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnIsInPartyChat = NULL;
	if(!pFnIsInPartyChat)
		pFnIsInPartyChat = UObject::FindFunction("Function Engine.OnlinePartyChatInterface.IsInPartyChat");

	Engine_IsInPartyChat_Parms IsInPartyChat_Parms;
	IsInPartyChat_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnIsInPartyChat,NULL,&IsInPartyChat_Parms,NULL);
	return IsInPartyChat_Parms.ReturnValue;
}

struct Engine_ClearWriteProfileSettingsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             WriteProfileSettingsCompleteDelegate;             		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearWriteProfileSettingsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate WriteProfileSettingsCompleteDelegate)
{
	static UFieldFunc* pFnClearWriteProfileSettingsCompleteDelegate = NULL;
	if(!pFnClearWriteProfileSettingsCompleteDelegate)
		pFnClearWriteProfileSettingsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearWriteProfileSettingsCompleteDelegate");

	Engine_ClearWriteProfileSettingsCompleteDelegate_Parms ClearWriteProfileSettingsCompleteDelegate_Parms;
	ClearWriteProfileSettingsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearWriteProfileSettingsCompleteDelegate_Parms.WriteProfileSettingsCompleteDelegate,&WriteProfileSettingsCompleteDelegate,0xC);
	ProcessEvent(pFnClearWriteProfileSettingsCompleteDelegate,NULL,&ClearWriteProfileSettingsCompleteDelegate_Parms,NULL);
}

struct Engine_JoinFriendGame_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                Friend;                                           		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::JoinFriendGame(unsigned char LocalUserNum,struct FUniqueNetId Friend)
{
	static UFieldFunc* pFnJoinFriendGame = NULL;
	if(!pFnJoinFriendGame)
		pFnJoinFriendGame = UObject::FindFunction("Function Engine.OnlinePlayerInterface.JoinFriendGame");

	Engine_JoinFriendGame_Parms JoinFriendGame_Parms;
	JoinFriendGame_Parms.LocalUserNum = LocalUserNum;
	memcpy(&JoinFriendGame_Parms.Friend,&Friend,0x8);
	ProcessEvent(pFnJoinFriendGame,NULL,&JoinFriendGame_Parms,NULL);
	return JoinFriendGame_Parms.ReturnValue;
}

struct Engine_ClearJoinFriendGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             JoinFriendGameCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::ClearJoinFriendGameCompleteDelegate(struct FScriptDelegate JoinFriendGameCompleteDelegate)
{
	static UFieldFunc* pFnClearJoinFriendGameCompleteDelegate = NULL;
	if(!pFnClearJoinFriendGameCompleteDelegate)
		pFnClearJoinFriendGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearJoinFriendGameCompleteDelegate");

	Engine_ClearJoinFriendGameCompleteDelegate_Parms ClearJoinFriendGameCompleteDelegate_Parms;
	memcpy(&ClearJoinFriendGameCompleteDelegate_Parms.JoinFriendGameCompleteDelegate,&JoinFriendGameCompleteDelegate,0xC);
	ProcessEvent(pFnClearJoinFriendGameCompleteDelegate,NULL,&ClearJoinFriendGameCompleteDelegate_Parms,NULL);
}

struct Engine_AddLoginCancelledDelegate_Parms
{
	struct FScriptDelegate                             CancelledDelegate;                                		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::AddLoginCancelledDelegate(struct FScriptDelegate CancelledDelegate)
{
	static UFieldFunc* pFnAddLoginCancelledDelegate = NULL;
	if(!pFnAddLoginCancelledDelegate)
		pFnAddLoginCancelledDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddLoginCancelledDelegate");

	Engine_AddLoginCancelledDelegate_Parms AddLoginCancelledDelegate_Parms;
	memcpy(&AddLoginCancelledDelegate_Parms.CancelledDelegate,&CancelledDelegate,0xC);
	ProcessEvent(pFnAddLoginCancelledDelegate,NULL,&AddLoginCancelledDelegate_Parms,NULL);
}

struct Engine_SendMessageToFriend_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                Friend;                                           		// 0x000004 (0x0008)              
	struct FString                                     Message;                                          		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::SendMessageToFriend(unsigned char LocalUserNum,struct FUniqueNetId Friend,struct FString Message)
{
	static UFieldFunc* pFnSendMessageToFriend = NULL;
	if(!pFnSendMessageToFriend)
		pFnSendMessageToFriend = UObject::FindFunction("Function Engine.OnlinePlayerInterface.SendMessageToFriend");

	Engine_SendMessageToFriend_Parms SendMessageToFriend_Parms;
	SendMessageToFriend_Parms.LocalUserNum = LocalUserNum;
	memcpy(&SendMessageToFriend_Parms.Friend,&Friend,0x8);
	memcpy(&SendMessageToFriend_Parms.Message,&Message,0xC);
	ProcessEvent(pFnSendMessageToFriend,NULL,&SendMessageToFriend_Parms,NULL);
	return SendMessageToFriend_Parms.ReturnValue;
}

struct Engine_IsFriend_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::IsFriend(unsigned char LocalUserNum,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnIsFriend = NULL;
	if(!pFnIsFriend)
		pFnIsFriend = UObject::FindFunction("Function Engine.OnlinePlayerInterface.IsFriend");

	Engine_IsFriend_Parms IsFriend_Parms;
	IsFriend_Parms.LocalUserNum = LocalUserNum;
	memcpy(&IsFriend_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnIsFriend,NULL,&IsFriend_Parms,NULL);
	return IsFriend_Parms.ReturnValue;
}

struct Engine_OnReceivedGameInvite_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     InviterName;                                      		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::OnReceivedGameInvite(unsigned char LocalUserNum,struct FString InviterName)
{
	static UFieldFunc* pFnOnReceivedGameInvite = NULL;
	if(!pFnOnReceivedGameInvite)
		pFnOnReceivedGameInvite = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnReceivedGameInvite");

	Engine_OnReceivedGameInvite_Parms OnReceivedGameInvite_Parms;
	OnReceivedGameInvite_Parms.LocalUserNum = LocalUserNum;
	memcpy(&OnReceivedGameInvite_Parms.InviterName,&InviterName,0xC);
	ProcessEvent(pFnOnReceivedGameInvite,NULL,&OnReceivedGameInvite_Parms,NULL);
}

struct Engine_AddWritePlayerStorageCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             WritePlayerStorageCompleteDelegate;               		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddWritePlayerStorageCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate WritePlayerStorageCompleteDelegate)
{
	static UFieldFunc* pFnAddWritePlayerStorageCompleteDelegate = NULL;
	if(!pFnAddWritePlayerStorageCompleteDelegate)
		pFnAddWritePlayerStorageCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddWritePlayerStorageCompleteDelegate");

	Engine_AddWritePlayerStorageCompleteDelegate_Parms AddWritePlayerStorageCompleteDelegate_Parms;
	AddWritePlayerStorageCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddWritePlayerStorageCompleteDelegate_Parms.WritePlayerStorageCompleteDelegate,&WritePlayerStorageCompleteDelegate,0xC);
	ProcessEvent(pFnAddWritePlayerStorageCompleteDelegate,NULL,&AddWritePlayerStorageCompleteDelegate_Parms,NULL);
}

struct Engine_AddUnlockAchievementCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             UnlockAchievementCompleteDelegate;                		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddUnlockAchievementCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate UnlockAchievementCompleteDelegate)
{
	static UFieldFunc* pFnAddUnlockAchievementCompleteDelegate = NULL;
	if(!pFnAddUnlockAchievementCompleteDelegate)
		pFnAddUnlockAchievementCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddUnlockAchievementCompleteDelegate");

	Engine_AddUnlockAchievementCompleteDelegate_Parms AddUnlockAchievementCompleteDelegate_Parms;
	AddUnlockAchievementCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddUnlockAchievementCompleteDelegate_Parms.UnlockAchievementCompleteDelegate,&UnlockAchievementCompleteDelegate,0xC);
	ProcessEvent(pFnAddUnlockAchievementCompleteDelegate,NULL,&AddUnlockAchievementCompleteDelegate_Parms,NULL);
}

struct Engine_ClearKeyboardInputDoneDelegate_Parms
{
	struct FScriptDelegate                             InputDelegate;                                    		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::ClearKeyboardInputDoneDelegate(struct FScriptDelegate InputDelegate)
{
	static UFieldFunc* pFnClearKeyboardInputDoneDelegate = NULL;
	if(!pFnClearKeyboardInputDoneDelegate)
		pFnClearKeyboardInputDoneDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearKeyboardInputDoneDelegate");

	Engine_ClearKeyboardInputDoneDelegate_Parms ClearKeyboardInputDoneDelegate_Parms;
	memcpy(&ClearKeyboardInputDoneDelegate_Parms.InputDelegate,&InputDelegate,0xC);
	ProcessEvent(pFnClearKeyboardInputDoneDelegate,NULL,&ClearKeyboardInputDoneDelegate_Parms,NULL);
}

struct Engine_AddReceivedGameInviteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReceivedGameInviteDelegate;                       		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddReceivedGameInviteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReceivedGameInviteDelegate)
{
	static UFieldFunc* pFnAddReceivedGameInviteDelegate = NULL;
	if(!pFnAddReceivedGameInviteDelegate)
		pFnAddReceivedGameInviteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddReceivedGameInviteDelegate");

	Engine_AddReceivedGameInviteDelegate_Parms AddReceivedGameInviteDelegate_Parms;
	AddReceivedGameInviteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReceivedGameInviteDelegate_Parms.ReceivedGameInviteDelegate,&ReceivedGameInviteDelegate,0xC);
	ProcessEvent(pFnAddReceivedGameInviteDelegate,NULL,&AddReceivedGameInviteDelegate_Parms,NULL);
}

struct Engine_AddFriendInviteReceivedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             InviteDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddFriendInviteReceivedDelegate(unsigned char LocalUserNum,struct FScriptDelegate InviteDelegate)
{
	static UFieldFunc* pFnAddFriendInviteReceivedDelegate = NULL;
	if(!pFnAddFriendInviteReceivedDelegate)
		pFnAddFriendInviteReceivedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddFriendInviteReceivedDelegate");

	Engine_AddFriendInviteReceivedDelegate_Parms AddFriendInviteReceivedDelegate_Parms;
	AddFriendInviteReceivedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddFriendInviteReceivedDelegate_Parms.InviteDelegate,&InviteDelegate,0xC);
	ProcessEvent(pFnAddFriendInviteReceivedDelegate,NULL,&AddFriendInviteReceivedDelegate_Parms,NULL);
}

struct Engine_OnFriendMessageReceived_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                SendingPlayer;                                    		// 0x000004 (0x0008)              
	struct FString                                     SendingNick;                                      		// 0x00000C (0x000C)              
	struct FString                                     Message;                                          		// 0x000018 (0x000C)              
};

void UOnlinePlayerInterface::OnFriendMessageReceived(unsigned char LocalUserNum,struct FUniqueNetId SendingPlayer,struct FString SendingNick,struct FString Message)
{
	static UFieldFunc* pFnOnFriendMessageReceived = NULL;
	if(!pFnOnFriendMessageReceived)
		pFnOnFriendMessageReceived = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnFriendMessageReceived");

	Engine_OnFriendMessageReceived_Parms OnFriendMessageReceived_Parms;
	OnFriendMessageReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy(&OnFriendMessageReceived_Parms.SendingPlayer,&SendingPlayer,0x8);
	memcpy(&OnFriendMessageReceived_Parms.SendingNick,&SendingNick,0xC);
	memcpy(&OnFriendMessageReceived_Parms.Message,&Message,0xC);
	ProcessEvent(pFnOnFriendMessageReceived,NULL,&OnFriendMessageReceived_Parms,NULL);
}

struct Engine_SetOnlineStatus_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                StatusId;                                         		// 0x000004 (0x0004)              
	TArray<struct FLocalizedStringSetting>             LocalizedStringSettings;                          		// 0x000008 (0x000C)              
	TArray<struct FSettingsProperty>                   Properties;                                       		// 0x000014 (0x000C)              
};

void UOnlinePlayerInterface::SetOnlineStatus(unsigned char LocalUserNum,int StatusId,TArray<struct FLocalizedStringSetting>* LocalizedStringSettings,TArray<struct FSettingsProperty>* Properties)
{
	static UFieldFunc* pFnSetOnlineStatus = NULL;
	if(!pFnSetOnlineStatus)
		pFnSetOnlineStatus = UObject::FindFunction("Function Engine.OnlinePlayerInterface.SetOnlineStatus");

	Engine_SetOnlineStatus_Parms SetOnlineStatus_Parms;
	SetOnlineStatus_Parms.LocalUserNum = LocalUserNum;
	SetOnlineStatus_Parms.StatusId = StatusId;
	ProcessEvent(pFnSetOnlineStatus,NULL,&SetOnlineStatus_Parms,NULL);
	if(LocalizedStringSettings)
		memcpy(LocalizedStringSettings,&SetOnlineStatus_Parms.LocalizedStringSettings,0xC);
	if(Properties)
		memcpy(Properties,&SetOnlineStatus_Parms.Properties,0xC);
}

struct Engine_AcceptFriendInvite_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                RequestingPlayer;                                 		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::AcceptFriendInvite(unsigned char LocalUserNum,struct FUniqueNetId RequestingPlayer)
{
	static UFieldFunc* pFnAcceptFriendInvite = NULL;
	if(!pFnAcceptFriendInvite)
		pFnAcceptFriendInvite = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AcceptFriendInvite");

	Engine_AcceptFriendInvite_Parms AcceptFriendInvite_Parms;
	AcceptFriendInvite_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AcceptFriendInvite_Parms.RequestingPlayer,&RequestingPlayer,0x8);
	ProcessEvent(pFnAcceptFriendInvite,NULL,&AcceptFriendInvite_Parms,NULL);
	return AcceptFriendInvite_Parms.ReturnValue;
}

struct Engine_OnWritePlayerStorageComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnWritePlayerStorageComplete(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnWritePlayerStorageComplete = NULL;
	if(!pFnOnWritePlayerStorageComplete)
		pFnOnWritePlayerStorageComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnWritePlayerStorageComplete");

	Engine_OnWritePlayerStorageComplete_Parms OnWritePlayerStorageComplete_Parms;
	OnWritePlayerStorageComplete_Parms.LocalUserNum = LocalUserNum;
	OnWritePlayerStorageComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnWritePlayerStorageComplete,NULL,&OnWritePlayerStorageComplete_Parms,NULL);
}

struct Engine_AreAnyFriends_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FFriendsQuery>                       Query;                                            		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::AreAnyFriends(unsigned char LocalUserNum,TArray<struct FFriendsQuery>* Query)
{
	static UFieldFunc* pFnAreAnyFriends = NULL;
	if(!pFnAreAnyFriends)
		pFnAreAnyFriends = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AreAnyFriends");

	Engine_AreAnyFriends_Parms AreAnyFriends_Parms;
	AreAnyFriends_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnAreAnyFriends,NULL,&AreAnyFriends_Parms,NULL);
	if(Query)
		memcpy(Query,&AreAnyFriends_Parms.Query,0xC);
	return AreAnyFriends_Parms.ReturnValue;
}

struct Engine_CanViewPlayerProfiles_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::CanViewPlayerProfiles(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnCanViewPlayerProfiles = NULL;
	if(!pFnCanViewPlayerProfiles)
		pFnCanViewPlayerProfiles = UObject::FindFunction("Function Engine.OnlinePlayerInterface.CanViewPlayerProfiles");

	Engine_CanViewPlayerProfiles_Parms CanViewPlayerProfiles_Parms;
	CanViewPlayerProfiles_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnCanViewPlayerProfiles,NULL,&CanViewPlayerProfiles_Parms,NULL);
	return CanViewPlayerProfiles_Parms.ReturnValue;
}

struct Engine_IsLocalLogin_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::IsLocalLogin(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnIsLocalLogin = NULL;
	if(!pFnIsLocalLogin)
		pFnIsLocalLogin = UObject::FindFunction("Function Engine.OnlinePlayerInterface.IsLocalLogin");

	Engine_IsLocalLogin_Parms IsLocalLogin_Parms;
	IsLocalLogin_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnIsLocalLogin,NULL,&IsLocalLogin_Parms,NULL);
	return IsLocalLogin_Parms.ReturnValue;
}

struct Engine_ClearReadPlayerStorageCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadPlayerStorageCompleteDelegate;                		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearReadPlayerStorageCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadPlayerStorageCompleteDelegate)
{
	static UFieldFunc* pFnClearReadPlayerStorageCompleteDelegate = NULL;
	if(!pFnClearReadPlayerStorageCompleteDelegate)
		pFnClearReadPlayerStorageCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageCompleteDelegate");

	Engine_ClearReadPlayerStorageCompleteDelegate_Parms ClearReadPlayerStorageCompleteDelegate_Parms;
	ClearReadPlayerStorageCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadPlayerStorageCompleteDelegate_Parms.ReadPlayerStorageCompleteDelegate,&ReadPlayerStorageCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadPlayerStorageCompleteDelegate,NULL,&ClearReadPlayerStorageCompleteDelegate_Parms,NULL);
}

struct Engine_ClearLoginChangeDelegate_Parms
{
	struct FScriptDelegate                             LoginDelegate;                                    		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::ClearLoginChangeDelegate(struct FScriptDelegate LoginDelegate)
{
	static UFieldFunc* pFnClearLoginChangeDelegate = NULL;
	if(!pFnClearLoginChangeDelegate)
		pFnClearLoginChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearLoginChangeDelegate");

	Engine_ClearLoginChangeDelegate_Parms ClearLoginChangeDelegate_Parms;
	memcpy(&ClearLoginChangeDelegate_Parms.LoginDelegate,&LoginDelegate,0xC);
	ProcessEvent(pFnClearLoginChangeDelegate,NULL,&ClearLoginChangeDelegate_Parms,NULL);
}

struct Engine_AddAddFriendByNameCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             FriendDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddAddFriendByNameCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate FriendDelegate)
{
	static UFieldFunc* pFnAddAddFriendByNameCompleteDelegate = NULL;
	if(!pFnAddAddFriendByNameCompleteDelegate)
		pFnAddAddFriendByNameCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddAddFriendByNameCompleteDelegate");

	Engine_AddAddFriendByNameCompleteDelegate_Parms AddAddFriendByNameCompleteDelegate_Parms;
	AddAddFriendByNameCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddAddFriendByNameCompleteDelegate_Parms.FriendDelegate,&FriendDelegate,0xC);
	ProcessEvent(pFnAddAddFriendByNameCompleteDelegate,NULL,&AddAddFriendByNameCompleteDelegate_Parms,NULL);
}

struct Engine_AddLoginStatusChangeDelegate_Parms
{
	struct FScriptDelegate                             LoginStatusDelegate;                              		// 0x000000 (0x000C)              
	unsigned char                                      LocalUserNum;                                     		// 0x00000C (0x0001)              
};

void UOnlinePlayerInterface::AddLoginStatusChangeDelegate(struct FScriptDelegate LoginStatusDelegate,unsigned char LocalUserNum)
{
	static UFieldFunc* pFnAddLoginStatusChangeDelegate = NULL;
	if(!pFnAddLoginStatusChangeDelegate)
		pFnAddLoginStatusChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddLoginStatusChangeDelegate");

	Engine_AddLoginStatusChangeDelegate_Parms AddLoginStatusChangeDelegate_Parms;
	memcpy(&AddLoginStatusChangeDelegate_Parms.LoginStatusDelegate,&LoginStatusDelegate,0xC);
	AddLoginStatusChangeDelegate_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnAddLoginStatusChangeDelegate,NULL,&AddLoginStatusChangeDelegate_Parms,NULL);
}

struct Engine_OnWriteProfileSettingsComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnWriteProfileSettingsComplete(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnWriteProfileSettingsComplete = NULL;
	if(!pFnOnWriteProfileSettingsComplete)
		pFnOnWriteProfileSettingsComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnWriteProfileSettingsComplete");

	Engine_OnWriteProfileSettingsComplete_Parms OnWriteProfileSettingsComplete_Parms;
	OnWriteProfileSettingsComplete_Parms.LocalUserNum = LocalUserNum;
	OnWriteProfileSettingsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnWriteProfileSettingsComplete,NULL,&OnWriteProfileSettingsComplete_Parms,NULL);
}

struct Engine_ClearAddFriendByNameCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             FriendDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearAddFriendByNameCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate FriendDelegate)
{
	static UFieldFunc* pFnClearAddFriendByNameCompleteDelegate = NULL;
	if(!pFnClearAddFriendByNameCompleteDelegate)
		pFnClearAddFriendByNameCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearAddFriendByNameCompleteDelegate");

	Engine_ClearAddFriendByNameCompleteDelegate_Parms ClearAddFriendByNameCompleteDelegate_Parms;
	ClearAddFriendByNameCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearAddFriendByNameCompleteDelegate_Parms.FriendDelegate,&FriendDelegate,0xC);
	ProcessEvent(pFnClearAddFriendByNameCompleteDelegate,NULL,&ClearAddFriendByNameCompleteDelegate_Parms,NULL);
}

struct Engine_AutoLogin_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::AutoLogin()
{
	static UFieldFunc* pFnAutoLogin = NULL;
	if(!pFnAutoLogin)
		pFnAutoLogin = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AutoLogin");

	Engine_AutoLogin_Parms AutoLogin_Parms;
	ProcessEvent(pFnAutoLogin,NULL,&AutoLogin_Parms,NULL);
	return AutoLogin_Parms.ReturnValue;
}

struct Engine_ClearFriendsChangeDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             FriendsDelegate;                                  		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearFriendsChangeDelegate(unsigned char LocalUserNum,struct FScriptDelegate FriendsDelegate)
{
	static UFieldFunc* pFnClearFriendsChangeDelegate = NULL;
	if(!pFnClearFriendsChangeDelegate)
		pFnClearFriendsChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearFriendsChangeDelegate");

	Engine_ClearFriendsChangeDelegate_Parms ClearFriendsChangeDelegate_Parms;
	ClearFriendsChangeDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearFriendsChangeDelegate_Parms.FriendsDelegate,&FriendsDelegate,0xC);
	ProcessEvent(pFnClearFriendsChangeDelegate,NULL,&ClearFriendsChangeDelegate_Parms,NULL);
}

struct Engine_ClearFriendMessageReceivedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             MessageDelegate;                                  		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearFriendMessageReceivedDelegate(unsigned char LocalUserNum,struct FScriptDelegate MessageDelegate)
{
	static UFieldFunc* pFnClearFriendMessageReceivedDelegate = NULL;
	if(!pFnClearFriendMessageReceivedDelegate)
		pFnClearFriendMessageReceivedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearFriendMessageReceivedDelegate");

	Engine_ClearFriendMessageReceivedDelegate_Parms ClearFriendMessageReceivedDelegate_Parms;
	ClearFriendMessageReceivedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearFriendMessageReceivedDelegate_Parms.MessageDelegate,&MessageDelegate,0xC);
	ProcessEvent(pFnClearFriendMessageReceivedDelegate,NULL,&ClearFriendMessageReceivedDelegate_Parms,NULL);
}

struct Engine_GetPlayerStorage_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlinePlayerStorage*                        ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UOnlinePlayerStorage* UOnlinePlayerInterface::GetPlayerStorage(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnGetPlayerStorage = NULL;
	if(!pFnGetPlayerStorage)
		pFnGetPlayerStorage = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetPlayerStorage");

	Engine_GetPlayerStorage_Parms GetPlayerStorage_Parms;
	GetPlayerStorage_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetPlayerStorage,NULL,&GetPlayerStorage_Parms,NULL);
	return GetPlayerStorage_Parms.ReturnValue;
}

struct Engine_AddReadAchievementsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadAchievementsCompleteDelegate;                 		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddReadAchievementsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadAchievementsCompleteDelegate)
{
	static UFieldFunc* pFnAddReadAchievementsCompleteDelegate = NULL;
	if(!pFnAddReadAchievementsCompleteDelegate)
		pFnAddReadAchievementsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddReadAchievementsCompleteDelegate");

	Engine_AddReadAchievementsCompleteDelegate_Parms AddReadAchievementsCompleteDelegate_Parms;
	AddReadAchievementsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadAchievementsCompleteDelegate_Parms.ReadAchievementsCompleteDelegate,&ReadAchievementsCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadAchievementsCompleteDelegate,NULL,&AddReadAchievementsCompleteDelegate_Parms,NULL);
}

struct Engine_ClearLoginFailedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             LoginDelegate;                                    		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearLoginFailedDelegate(unsigned char LocalUserNum,struct FScriptDelegate LoginDelegate)
{
	static UFieldFunc* pFnClearLoginFailedDelegate = NULL;
	if(!pFnClearLoginFailedDelegate)
		pFnClearLoginFailedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearLoginFailedDelegate");

	Engine_ClearLoginFailedDelegate_Parms ClearLoginFailedDelegate_Parms;
	ClearLoginFailedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearLoginFailedDelegate_Parms.LoginDelegate,&LoginDelegate,0xC);
	ProcessEvent(pFnClearLoginFailedDelegate,NULL,&ClearLoginFailedDelegate_Parms,NULL);
}

struct Engine_OnReadPlayerStorageComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnReadPlayerStorageComplete(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadPlayerStorageComplete = NULL;
	if(!pFnOnReadPlayerStorageComplete)
		pFnOnReadPlayerStorageComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnReadPlayerStorageComplete");

	Engine_OnReadPlayerStorageComplete_Parms OnReadPlayerStorageComplete_Parms;
	OnReadPlayerStorageComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadPlayerStorageComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadPlayerStorageComplete,NULL,&OnReadPlayerStorageComplete_Parms,NULL);
}

struct Engine_GetAchievements_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FAchievementDetails>                 Achievements;                                     		// 0x000004 (0x000C)              
	int                                                TitleId;                                          		// 0x000010 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000014 (0x0001)              
};

unsigned char UOnlinePlayerInterface::GetAchievements(unsigned char LocalUserNum,TArray<struct FAchievementDetails>* Achievements,int TitleId)
{
	static UFieldFunc* pFnGetAchievements = NULL;
	if(!pFnGetAchievements)
		pFnGetAchievements = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetAchievements");

	Engine_GetAchievements_Parms GetAchievements_Parms;
	GetAchievements_Parms.LocalUserNum = LocalUserNum;
	GetAchievements_Parms.TitleId = TitleId;
	ProcessEvent(pFnGetAchievements,NULL,&GetAchievements_Parms,NULL);
	if(Achievements)
		memcpy(Achievements,&GetAchievements_Parms.Achievements,0xC);
	return GetAchievements_Parms.ReturnValue;
}

struct Engine_GetUniquePlayerId_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::GetUniquePlayerId(unsigned char LocalUserNum,struct FUniqueNetId* PlayerID)
{
	static UFieldFunc* pFnGetUniquePlayerId = NULL;
	if(!pFnGetUniquePlayerId)
		pFnGetUniquePlayerId = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetUniquePlayerId");

	Engine_GetUniquePlayerId_Parms GetUniquePlayerId_Parms;
	GetUniquePlayerId_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetUniquePlayerId,NULL,&GetUniquePlayerId_Parms,NULL);
	if(PlayerID)
		memcpy(PlayerID,&GetUniquePlayerId_Parms.PlayerID,0x8);
	return GetUniquePlayerId_Parms.ReturnValue;
}

struct Engine_AddLoginChangeDelegate_Parms
{
	struct FScriptDelegate                             LoginDelegate;                                    		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::AddLoginChangeDelegate(struct FScriptDelegate LoginDelegate)
{
	static UFieldFunc* pFnAddLoginChangeDelegate = NULL;
	if(!pFnAddLoginChangeDelegate)
		pFnAddLoginChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddLoginChangeDelegate");

	Engine_AddLoginChangeDelegate_Parms AddLoginChangeDelegate_Parms;
	memcpy(&AddLoginChangeDelegate_Parms.LoginDelegate,&LoginDelegate,0xC);
	ProcessEvent(pFnAddLoginChangeDelegate,NULL,&AddLoginChangeDelegate_Parms,NULL);
}

struct Engine_ShowFriendsUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ShowFriendsUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowFriendsUI = NULL;
	if(!pFnShowFriendsUI)
		pFnShowFriendsUI = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ShowFriendsUI");

	Engine_ShowFriendsUI_Parms ShowFriendsUI_Parms;
	ShowFriendsUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowFriendsUI,NULL,&ShowFriendsUI_Parms,NULL);
	return ShowFriendsUI_Parms.ReturnValue;
}

struct Engine_DeleteMessage_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                MessageIndex;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::DeleteMessage(unsigned char LocalUserNum,int MessageIndex)
{
	static UFieldFunc* pFnDeleteMessage = NULL;
	if(!pFnDeleteMessage)
		pFnDeleteMessage = UObject::FindFunction("Function Engine.OnlinePlayerInterface.DeleteMessage");

	Engine_DeleteMessage_Parms DeleteMessage_Parms;
	DeleteMessage_Parms.LocalUserNum = LocalUserNum;
	DeleteMessage_Parms.MessageIndex = MessageIndex;
	ProcessEvent(pFnDeleteMessage,NULL,&DeleteMessage_Parms,NULL);
	return DeleteMessage_Parms.ReturnValue;
}

struct Engine_Logout_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::Logout(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnLogout = NULL;
	if(!pFnLogout)
		pFnLogout = UObject::FindFunction("Function Engine.OnlinePlayerInterface.Logout");

	Engine_Logout_Parms Logout_Parms;
	Logout_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnLogout,NULL,&Logout_Parms,NULL);
	return Logout_Parms.ReturnValue;
}

struct Engine_OnLoginFailed_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ErrorCode;                                        		// 0x000001 (0x0001)              
};

void UOnlinePlayerInterface::OnLoginFailed(unsigned char LocalUserNum,unsigned char ErrorCode)
{
	static UFieldFunc* pFnOnLoginFailed = NULL;
	if(!pFnOnLoginFailed)
		pFnOnLoginFailed = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnLoginFailed");

	Engine_OnLoginFailed_Parms OnLoginFailed_Parms;
	OnLoginFailed_Parms.LocalUserNum = LocalUserNum;
	OnLoginFailed_Parms.ErrorCode = ErrorCode;
	ProcessEvent(pFnOnLoginFailed,NULL,&OnLoginFailed_Parms,NULL);
}

struct Engine_AddMutingChangeDelegate_Parms
{
	struct FScriptDelegate                             MutingDelegate;                                   		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::AddMutingChangeDelegate(struct FScriptDelegate MutingDelegate)
{
	static UFieldFunc* pFnAddMutingChangeDelegate = NULL;
	if(!pFnAddMutingChangeDelegate)
		pFnAddMutingChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddMutingChangeDelegate");

	Engine_AddMutingChangeDelegate_Parms AddMutingChangeDelegate_Parms;
	memcpy(&AddMutingChangeDelegate_Parms.MutingDelegate,&MutingDelegate,0xC);
	ProcessEvent(pFnAddMutingChangeDelegate,NULL,&AddMutingChangeDelegate_Parms,NULL);
}

struct Engine_AddFriend_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                NewFriend;                                        		// 0x000004 (0x0008)              
	struct FString                                     Message;                                          		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::AddFriend(unsigned char LocalUserNum,struct FUniqueNetId NewFriend,struct FString Message)
{
	static UFieldFunc* pFnAddFriend = NULL;
	if(!pFnAddFriend)
		pFnAddFriend = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddFriend");

	Engine_AddFriend_Parms AddFriend_Parms;
	AddFriend_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddFriend_Parms.NewFriend,&NewFriend,0x8);
	memcpy(&AddFriend_Parms.Message,&Message,0xC);
	ProcessEvent(pFnAddFriend,NULL,&AddFriend_Parms,NULL);
	return AddFriend_Parms.ReturnValue;
}

struct Engine_GetFriendMessages_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FOnlineFriendMessage>                FriendMessages;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::GetFriendMessages(unsigned char LocalUserNum,TArray<struct FOnlineFriendMessage>* FriendMessages)
{
	static UFieldFunc* pFnGetFriendMessages = NULL;
	if(!pFnGetFriendMessages)
		pFnGetFriendMessages = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetFriendMessages");

	Engine_GetFriendMessages_Parms GetFriendMessages_Parms;
	GetFriendMessages_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetFriendMessages,NULL,&GetFriendMessages_Parms,NULL);
	if(FriendMessages)
		memcpy(FriendMessages,&GetFriendMessages_Parms.FriendMessages,0xC);
}

struct Engine_OnReadAchievementsComplete_Parms
{
	int                                                TitleId;                                          		// 0x000000 (0x0004)              
};

void UOnlinePlayerInterface::OnReadAchievementsComplete(int TitleId)
{
	static UFieldFunc* pFnOnReadAchievementsComplete = NULL;
	if(!pFnOnReadAchievementsComplete)
		pFnOnReadAchievementsComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnReadAchievementsComplete");

	Engine_OnReadAchievementsComplete_Parms OnReadAchievementsComplete_Parms;
	OnReadAchievementsComplete_Parms.TitleId = TitleId;
	ProcessEvent(pFnOnReadAchievementsComplete,NULL,&OnReadAchievementsComplete_Parms,NULL);
}

struct Engine_OnReadFriendsComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnReadFriendsComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadFriendsComplete = NULL;
	if(!pFnOnReadFriendsComplete)
		pFnOnReadFriendsComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnReadFriendsComplete");

	Engine_OnReadFriendsComplete_Parms OnReadFriendsComplete_Parms;
	OnReadFriendsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadFriendsComplete,NULL,&OnReadFriendsComplete_Parms,NULL);
}

struct Engine_ClearMutingChangeDelegate_Parms
{
	struct FScriptDelegate                             MutingDelegate;                                   		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::ClearMutingChangeDelegate(struct FScriptDelegate MutingDelegate)
{
	static UFieldFunc* pFnClearMutingChangeDelegate = NULL;
	if(!pFnClearMutingChangeDelegate)
		pFnClearMutingChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearMutingChangeDelegate");

	Engine_ClearMutingChangeDelegate_Parms ClearMutingChangeDelegate_Parms;
	memcpy(&ClearMutingChangeDelegate_Parms.MutingDelegate,&MutingDelegate,0xC);
	ProcessEvent(pFnClearMutingChangeDelegate,NULL,&ClearMutingChangeDelegate_Parms,NULL);
}

struct Engine_ReadPlayerStorage_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlinePlayerStorage*                        PlayerStorage;                                    		// 0x000004 (0x0004)              
	int                                                DeviceID;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ReadPlayerStorage(unsigned char LocalUserNum,class UOnlinePlayerStorage* PlayerStorage,int DeviceID)
{
	static UFieldFunc* pFnReadPlayerStorage = NULL;
	if(!pFnReadPlayerStorage)
		pFnReadPlayerStorage = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ReadPlayerStorage");

	Engine_ReadPlayerStorage_Parms ReadPlayerStorage_Parms;
	ReadPlayerStorage_Parms.LocalUserNum = LocalUserNum;
	ReadPlayerStorage_Parms.PlayerStorage = PlayerStorage;
	ReadPlayerStorage_Parms.DeviceID = DeviceID;
	ProcessEvent(pFnReadPlayerStorage,NULL,&ReadPlayerStorage_Parms,NULL);
	return ReadPlayerStorage_Parms.ReturnValue;
}

struct Engine_AddReadFriendsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadFriendsCompleteDelegate;                      		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddReadFriendsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadFriendsCompleteDelegate)
{
	static UFieldFunc* pFnAddReadFriendsCompleteDelegate = NULL;
	if(!pFnAddReadFriendsCompleteDelegate)
		pFnAddReadFriendsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddReadFriendsCompleteDelegate");

	Engine_AddReadFriendsCompleteDelegate_Parms AddReadFriendsCompleteDelegate_Parms;
	AddReadFriendsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadFriendsCompleteDelegate_Parms.ReadFriendsCompleteDelegate,&ReadFriendsCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadFriendsCompleteDelegate,NULL,&AddReadFriendsCompleteDelegate_Parms,NULL);
}

struct Engine_ClearReadPlayerStorageForNetIdCompleteDelegate_Parms
{
	struct FUniqueNetId                                NetId;                                            		// 0x000000 (0x0008)              
	struct FScriptDelegate                             ReadPlayerStorageForNetIdCompleteDelegate;        		// 0x000008 (0x000C)              
};

void UOnlinePlayerInterface::ClearReadPlayerStorageForNetIdCompleteDelegate(struct FUniqueNetId NetId,struct FScriptDelegate ReadPlayerStorageForNetIdCompleteDelegate)
{
	static UFieldFunc* pFnClearReadPlayerStorageForNetIdCompleteDelegate = NULL;
	if(!pFnClearReadPlayerStorageForNetIdCompleteDelegate)
		pFnClearReadPlayerStorageForNetIdCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageForNetIdCompleteDelegate");

	Engine_ClearReadPlayerStorageForNetIdCompleteDelegate_Parms ClearReadPlayerStorageForNetIdCompleteDelegate_Parms;
	memcpy(&ClearReadPlayerStorageForNetIdCompleteDelegate_Parms.NetId,&NetId,0x8);
	memcpy(&ClearReadPlayerStorageForNetIdCompleteDelegate_Parms.ReadPlayerStorageForNetIdCompleteDelegate,&ReadPlayerStorageForNetIdCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadPlayerStorageForNetIdCompleteDelegate,NULL,&ClearReadPlayerStorageForNetIdCompleteDelegate_Parms,NULL);
}

struct Engine_AddLoginFailedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             LoginDelegate;                                    		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddLoginFailedDelegate(unsigned char LocalUserNum,struct FScriptDelegate LoginDelegate)
{
	static UFieldFunc* pFnAddLoginFailedDelegate = NULL;
	if(!pFnAddLoginFailedDelegate)
		pFnAddLoginFailedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddLoginFailedDelegate");

	Engine_AddLoginFailedDelegate_Parms AddLoginFailedDelegate_Parms;
	AddLoginFailedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddLoginFailedDelegate_Parms.LoginDelegate,&LoginDelegate,0xC);
	ProcessEvent(pFnAddLoginFailedDelegate,NULL,&AddLoginFailedDelegate_Parms,NULL);
}

struct Engine_ClearFriendInviteReceivedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             InviteDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearFriendInviteReceivedDelegate(unsigned char LocalUserNum,struct FScriptDelegate InviteDelegate)
{
	static UFieldFunc* pFnClearFriendInviteReceivedDelegate = NULL;
	if(!pFnClearFriendInviteReceivedDelegate)
		pFnClearFriendInviteReceivedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearFriendInviteReceivedDelegate");

	Engine_ClearFriendInviteReceivedDelegate_Parms ClearFriendInviteReceivedDelegate_Parms;
	ClearFriendInviteReceivedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearFriendInviteReceivedDelegate_Parms.InviteDelegate,&InviteDelegate,0xC);
	ProcessEvent(pFnClearFriendInviteReceivedDelegate,NULL,&ClearFriendInviteReceivedDelegate_Parms,NULL);
}

struct Engine_WriteProfileSettings_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlineProfileSettings*                      ProfileSettings;                                  		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::WriteProfileSettings(unsigned char LocalUserNum,class UOnlineProfileSettings* ProfileSettings)
{
	static UFieldFunc* pFnWriteProfileSettings = NULL;
	if(!pFnWriteProfileSettings)
		pFnWriteProfileSettings = UObject::FindFunction("Function Engine.OnlinePlayerInterface.WriteProfileSettings");

	Engine_WriteProfileSettings_Parms WriteProfileSettings_Parms;
	WriteProfileSettings_Parms.LocalUserNum = LocalUserNum;
	WriteProfileSettings_Parms.ProfileSettings = ProfileSettings;
	ProcessEvent(pFnWriteProfileSettings,NULL,&WriteProfileSettings_Parms,NULL);
	return WriteProfileSettings_Parms.ReturnValue;
}

struct Engine_ClearLoginCancelledDelegate_Parms
{
	struct FScriptDelegate                             CancelledDelegate;                                		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::ClearLoginCancelledDelegate(struct FScriptDelegate CancelledDelegate)
{
	static UFieldFunc* pFnClearLoginCancelledDelegate = NULL;
	if(!pFnClearLoginCancelledDelegate)
		pFnClearLoginCancelledDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearLoginCancelledDelegate");

	Engine_ClearLoginCancelledDelegate_Parms ClearLoginCancelledDelegate_Parms;
	memcpy(&ClearLoginCancelledDelegate_Parms.CancelledDelegate,&CancelledDelegate,0xC);
	ProcessEvent(pFnClearLoginCancelledDelegate,NULL,&ClearLoginCancelledDelegate_Parms,NULL);
}

struct Engine_DenyFriendInvite_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                RequestingPlayer;                                 		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::DenyFriendInvite(unsigned char LocalUserNum,struct FUniqueNetId RequestingPlayer)
{
	static UFieldFunc* pFnDenyFriendInvite = NULL;
	if(!pFnDenyFriendInvite)
		pFnDenyFriendInvite = UObject::FindFunction("Function Engine.OnlinePlayerInterface.DenyFriendInvite");

	Engine_DenyFriendInvite_Parms DenyFriendInvite_Parms;
	DenyFriendInvite_Parms.LocalUserNum = LocalUserNum;
	memcpy(&DenyFriendInvite_Parms.RequestingPlayer,&RequestingPlayer,0x8);
	ProcessEvent(pFnDenyFriendInvite,NULL,&DenyFriendInvite_Parms,NULL);
	return DenyFriendInvite_Parms.ReturnValue;
}

struct Engine_ClearReadProfileSettingsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadProfileSettingsCompleteDelegate;              		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearReadProfileSettingsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadProfileSettingsCompleteDelegate)
{
	static UFieldFunc* pFnClearReadProfileSettingsCompleteDelegate = NULL;
	if(!pFnClearReadProfileSettingsCompleteDelegate)
		pFnClearReadProfileSettingsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearReadProfileSettingsCompleteDelegate");

	Engine_ClearReadProfileSettingsCompleteDelegate_Parms ClearReadProfileSettingsCompleteDelegate_Parms;
	ClearReadProfileSettingsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadProfileSettingsCompleteDelegate_Parms.ReadProfileSettingsCompleteDelegate,&ReadProfileSettingsCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadProfileSettingsCompleteDelegate,NULL,&ClearReadProfileSettingsCompleteDelegate_Parms,NULL);
}

struct Engine_OnLoginStatusChange_Parms
{
	unsigned char                                      NewStatus;                                        		// 0x000000 (0x0001)              
	struct FUniqueNetId                                NewId;                                            		// 0x000004 (0x0008)              
};

void UOnlinePlayerInterface::OnLoginStatusChange(unsigned char NewStatus,struct FUniqueNetId NewId)
{
	static UFieldFunc* pFnOnLoginStatusChange = NULL;
	if(!pFnOnLoginStatusChange)
		pFnOnLoginStatusChange = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnLoginStatusChange");

	Engine_OnLoginStatusChange_Parms OnLoginStatusChange_Parms;
	OnLoginStatusChange_Parms.NewStatus = NewStatus;
	memcpy(&OnLoginStatusChange_Parms.NewId,&NewId,0x8);
	ProcessEvent(pFnOnLoginStatusChange,NULL,&OnLoginStatusChange_Parms,NULL);
}

struct Engine_GetLoginStatus_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::GetLoginStatus(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnGetLoginStatus = NULL;
	if(!pFnGetLoginStatus)
		pFnGetLoginStatus = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetLoginStatus");

	Engine_GetLoginStatus_Parms GetLoginStatus_Parms;
	GetLoginStatus_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetLoginStatus,NULL,&GetLoginStatus_Parms,NULL);
	return GetLoginStatus_Parms.ReturnValue;
}

struct Engine_AddLogoutCompletedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             LogoutDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddLogoutCompletedDelegate(unsigned char LocalUserNum,struct FScriptDelegate LogoutDelegate)
{
	static UFieldFunc* pFnAddLogoutCompletedDelegate = NULL;
	if(!pFnAddLogoutCompletedDelegate)
		pFnAddLogoutCompletedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddLogoutCompletedDelegate");

	Engine_AddLogoutCompletedDelegate_Parms AddLogoutCompletedDelegate_Parms;
	AddLogoutCompletedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddLogoutCompletedDelegate_Parms.LogoutDelegate,&LogoutDelegate,0xC);
	ProcessEvent(pFnAddLogoutCompletedDelegate,NULL,&AddLogoutCompletedDelegate_Parms,NULL);
}

struct Engine_WritePlayerStorage_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlinePlayerStorage*                        PlayerStorage;                                    		// 0x000004 (0x0004)              
	int                                                DeviceID;                                         		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::WritePlayerStorage(unsigned char LocalUserNum,class UOnlinePlayerStorage* PlayerStorage,int DeviceID)
{
	static UFieldFunc* pFnWritePlayerStorage = NULL;
	if(!pFnWritePlayerStorage)
		pFnWritePlayerStorage = UObject::FindFunction("Function Engine.OnlinePlayerInterface.WritePlayerStorage");

	Engine_WritePlayerStorage_Parms WritePlayerStorage_Parms;
	WritePlayerStorage_Parms.LocalUserNum = LocalUserNum;
	WritePlayerStorage_Parms.PlayerStorage = PlayerStorage;
	WritePlayerStorage_Parms.DeviceID = DeviceID;
	ProcessEvent(pFnWritePlayerStorage,NULL,&WritePlayerStorage_Parms,NULL);
	return WritePlayerStorage_Parms.ReturnValue;
}

struct Engine_IsMuted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::IsMuted(unsigned char LocalUserNum,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnIsMuted = NULL;
	if(!pFnIsMuted)
		pFnIsMuted = UObject::FindFunction("Function Engine.OnlinePlayerInterface.IsMuted");

	Engine_IsMuted_Parms IsMuted_Parms;
	IsMuted_Parms.LocalUserNum = LocalUserNum;
	memcpy(&IsMuted_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnIsMuted,NULL,&IsMuted_Parms,NULL);
	return IsMuted_Parms.ReturnValue;
}

struct Engine_OnUnlockAchievementComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnUnlockAchievementComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnUnlockAchievementComplete = NULL;
	if(!pFnOnUnlockAchievementComplete)
		pFnOnUnlockAchievementComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnUnlockAchievementComplete");

	Engine_OnUnlockAchievementComplete_Parms OnUnlockAchievementComplete_Parms;
	OnUnlockAchievementComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnUnlockAchievementComplete,NULL,&OnUnlockAchievementComplete_Parms,NULL);
}

struct Engine_OnAddFriendByNameComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnAddFriendByNameComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnAddFriendByNameComplete = NULL;
	if(!pFnOnAddFriendByNameComplete)
		pFnOnAddFriendByNameComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnAddFriendByNameComplete");

	Engine_OnAddFriendByNameComplete_Parms OnAddFriendByNameComplete_Parms;
	OnAddFriendByNameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnAddFriendByNameComplete,NULL,&OnAddFriendByNameComplete_Parms,NULL);
}

struct Engine_OnReadProfileSettingsComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnReadProfileSettingsComplete(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadProfileSettingsComplete = NULL;
	if(!pFnOnReadProfileSettingsComplete)
		pFnOnReadProfileSettingsComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnReadProfileSettingsComplete");

	Engine_OnReadProfileSettingsComplete_Parms OnReadProfileSettingsComplete_Parms;
	OnReadProfileSettingsComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadProfileSettingsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadProfileSettingsComplete,NULL,&OnReadProfileSettingsComplete_Parms,NULL);
}

struct Engine_OnLoginCancelled_Parms
{
};

void UOnlinePlayerInterface::OnLoginCancelled()
{
	static UFieldFunc* pFnOnLoginCancelled = NULL;
	if(!pFnOnLoginCancelled)
		pFnOnLoginCancelled = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnLoginCancelled");

	Engine_OnLoginCancelled_Parms OnLoginCancelled_Parms;
	ProcessEvent(pFnOnLoginCancelled,NULL,&OnLoginCancelled_Parms,NULL);
}

struct Engine_ReadAchievements_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                TitleId;                                          		// 0x000004 (0x0004)              
	unsigned long                                      bShouldReadText : 1;                              		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      bShouldReadImages : 1;                            		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ReadAchievements(unsigned char LocalUserNum,int TitleId,bool bShouldReadText,bool bShouldReadImages)
{
	static UFieldFunc* pFnReadAchievements = NULL;
	if(!pFnReadAchievements)
		pFnReadAchievements = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ReadAchievements");

	Engine_ReadAchievements_Parms ReadAchievements_Parms;
	ReadAchievements_Parms.LocalUserNum = LocalUserNum;
	ReadAchievements_Parms.TitleId = TitleId;
	ReadAchievements_Parms.bShouldReadText = bShouldReadText;
	ReadAchievements_Parms.bShouldReadImages = bShouldReadImages;
	ProcessEvent(pFnReadAchievements,NULL,&ReadAchievements_Parms,NULL);
	return ReadAchievements_Parms.ReturnValue;
}

struct Engine_CanCommunicate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::CanCommunicate(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnCanCommunicate = NULL;
	if(!pFnCanCommunicate)
		pFnCanCommunicate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.CanCommunicate");

	Engine_CanCommunicate_Parms CanCommunicate_Parms;
	CanCommunicate_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnCanCommunicate,NULL,&CanCommunicate_Parms,NULL);
	return CanCommunicate_Parms.ReturnValue;
}

struct Engine_ClearUnlockAchievementCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             UnlockAchievementCompleteDelegate;                		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearUnlockAchievementCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate UnlockAchievementCompleteDelegate)
{
	static UFieldFunc* pFnClearUnlockAchievementCompleteDelegate = NULL;
	if(!pFnClearUnlockAchievementCompleteDelegate)
		pFnClearUnlockAchievementCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearUnlockAchievementCompleteDelegate");

	Engine_ClearUnlockAchievementCompleteDelegate_Parms ClearUnlockAchievementCompleteDelegate_Parms;
	ClearUnlockAchievementCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearUnlockAchievementCompleteDelegate_Parms.UnlockAchievementCompleteDelegate,&UnlockAchievementCompleteDelegate,0xC);
	ProcessEvent(pFnClearUnlockAchievementCompleteDelegate,NULL,&ClearUnlockAchievementCompleteDelegate_Parms,NULL);
}

struct Engine_CanPurchaseContent_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::CanPurchaseContent(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnCanPurchaseContent = NULL;
	if(!pFnCanPurchaseContent)
		pFnCanPurchaseContent = UObject::FindFunction("Function Engine.OnlinePlayerInterface.CanPurchaseContent");

	Engine_CanPurchaseContent_Parms CanPurchaseContent_Parms;
	CanPurchaseContent_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnCanPurchaseContent,NULL,&CanPurchaseContent_Parms,NULL);
	return CanPurchaseContent_Parms.ReturnValue;
}

struct Engine_ReadPlayerStorageForNetId_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                NetId;                                            		// 0x000004 (0x0008)              
	class UOnlinePlayerStorage*                        PlayerStorage;                                    		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ReadPlayerStorageForNetId(unsigned char LocalUserNum,struct FUniqueNetId NetId,class UOnlinePlayerStorage* PlayerStorage)
{
	static UFieldFunc* pFnReadPlayerStorageForNetId = NULL;
	if(!pFnReadPlayerStorageForNetId)
		pFnReadPlayerStorageForNetId = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ReadPlayerStorageForNetId");

	Engine_ReadPlayerStorageForNetId_Parms ReadPlayerStorageForNetId_Parms;
	ReadPlayerStorageForNetId_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ReadPlayerStorageForNetId_Parms.NetId,&NetId,0x8);
	ReadPlayerStorageForNetId_Parms.PlayerStorage = PlayerStorage;
	ProcessEvent(pFnReadPlayerStorageForNetId,NULL,&ReadPlayerStorageForNetId_Parms,NULL);
	return ReadPlayerStorageForNetId_Parms.ReturnValue;
}

struct Engine_GetPlayerNickname_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UOnlinePlayerInterface::GetPlayerNickname(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnGetPlayerNickname = NULL;
	if(!pFnGetPlayerNickname)
		pFnGetPlayerNickname = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetPlayerNickname");

	Engine_GetPlayerNickname_Parms GetPlayerNickname_Parms;
	GetPlayerNickname_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetPlayerNickname,NULL,&GetPlayerNickname_Parms,NULL);
	return GetPlayerNickname_Parms.ReturnValue;
}

struct Engine_OnLoginChange_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
};

void UOnlinePlayerInterface::OnLoginChange(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnOnLoginChange = NULL;
	if(!pFnOnLoginChange)
		pFnOnLoginChange = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnLoginChange");

	Engine_OnLoginChange_Parms OnLoginChange_Parms;
	OnLoginChange_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnOnLoginChange,NULL,&OnLoginChange_Parms,NULL);
}

struct Engine_AddReadPlayerStorageForNetIdCompleteDelegate_Parms
{
	struct FUniqueNetId                                NetId;                                            		// 0x000000 (0x0008)              
	struct FScriptDelegate                             ReadPlayerStorageForNetIdCompleteDelegate;        		// 0x000008 (0x000C)              
};

void UOnlinePlayerInterface::AddReadPlayerStorageForNetIdCompleteDelegate(struct FUniqueNetId NetId,struct FScriptDelegate ReadPlayerStorageForNetIdCompleteDelegate)
{
	static UFieldFunc* pFnAddReadPlayerStorageForNetIdCompleteDelegate = NULL;
	if(!pFnAddReadPlayerStorageForNetIdCompleteDelegate)
		pFnAddReadPlayerStorageForNetIdCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddReadPlayerStorageForNetIdCompleteDelegate");

	Engine_AddReadPlayerStorageForNetIdCompleteDelegate_Parms AddReadPlayerStorageForNetIdCompleteDelegate_Parms;
	memcpy(&AddReadPlayerStorageForNetIdCompleteDelegate_Parms.NetId,&NetId,0x8);
	memcpy(&AddReadPlayerStorageForNetIdCompleteDelegate_Parms.ReadPlayerStorageForNetIdCompleteDelegate,&ReadPlayerStorageForNetIdCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadPlayerStorageForNetIdCompleteDelegate,NULL,&AddReadPlayerStorageForNetIdCompleteDelegate_Parms,NULL);
}

struct Engine_AddFriendByName_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     FriendName;                                       		// 0x000004 (0x000C)              
	struct FString                                     Message;                                          		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::AddFriendByName(unsigned char LocalUserNum,struct FString FriendName,struct FString Message)
{
	static UFieldFunc* pFnAddFriendByName = NULL;
	if(!pFnAddFriendByName)
		pFnAddFriendByName = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddFriendByName");

	Engine_AddFriendByName_Parms AddFriendByName_Parms;
	AddFriendByName_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddFriendByName_Parms.FriendName,&FriendName,0xC);
	memcpy(&AddFriendByName_Parms.Message,&Message,0xC);
	ProcessEvent(pFnAddFriendByName,NULL,&AddFriendByName_Parms,NULL);
	return AddFriendByName_Parms.ReturnValue;
}

struct Engine_AddKeyboardInputDoneDelegate_Parms
{
	struct FScriptDelegate                             InputDelegate;                                    		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::AddKeyboardInputDoneDelegate(struct FScriptDelegate InputDelegate)
{
	static UFieldFunc* pFnAddKeyboardInputDoneDelegate = NULL;
	if(!pFnAddKeyboardInputDoneDelegate)
		pFnAddKeyboardInputDoneDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddKeyboardInputDoneDelegate");

	Engine_AddKeyboardInputDoneDelegate_Parms AddKeyboardInputDoneDelegate_Parms;
	memcpy(&AddKeyboardInputDoneDelegate_Parms.InputDelegate,&InputDelegate,0xC);
	ProcessEvent(pFnAddKeyboardInputDoneDelegate,NULL,&AddKeyboardInputDoneDelegate_Parms,NULL);
}

struct Engine_ClearWritePlayerStorageCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             WritePlayerStorageCompleteDelegate;               		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearWritePlayerStorageCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate WritePlayerStorageCompleteDelegate)
{
	static UFieldFunc* pFnClearWritePlayerStorageCompleteDelegate = NULL;
	if(!pFnClearWritePlayerStorageCompleteDelegate)
		pFnClearWritePlayerStorageCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearWritePlayerStorageCompleteDelegate");

	Engine_ClearWritePlayerStorageCompleteDelegate_Parms ClearWritePlayerStorageCompleteDelegate_Parms;
	ClearWritePlayerStorageCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearWritePlayerStorageCompleteDelegate_Parms.WritePlayerStorageCompleteDelegate,&WritePlayerStorageCompleteDelegate,0xC);
	ProcessEvent(pFnClearWritePlayerStorageCompleteDelegate,NULL,&ClearWritePlayerStorageCompleteDelegate_Parms,NULL);
}

struct Engine_CanPlayOnline_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::CanPlayOnline(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnCanPlayOnline = NULL;
	if(!pFnCanPlayOnline)
		pFnCanPlayOnline = UObject::FindFunction("Function Engine.OnlinePlayerInterface.CanPlayOnline");

	Engine_CanPlayOnline_Parms CanPlayOnline_Parms;
	CanPlayOnline_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnCanPlayOnline,NULL,&CanPlayOnline_Parms,NULL);
	return CanPlayOnline_Parms.ReturnValue;
}

struct Engine_OnFriendInviteReceived_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                RequestingPlayer;                                 		// 0x000004 (0x0008)              
	struct FString                                     RequestingNick;                                   		// 0x00000C (0x000C)              
	struct FString                                     Message;                                          		// 0x000018 (0x000C)              
};

void UOnlinePlayerInterface::OnFriendInviteReceived(unsigned char LocalUserNum,struct FUniqueNetId RequestingPlayer,struct FString RequestingNick,struct FString Message)
{
	static UFieldFunc* pFnOnFriendInviteReceived = NULL;
	if(!pFnOnFriendInviteReceived)
		pFnOnFriendInviteReceived = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnFriendInviteReceived");

	Engine_OnFriendInviteReceived_Parms OnFriendInviteReceived_Parms;
	OnFriendInviteReceived_Parms.LocalUserNum = LocalUserNum;
	memcpy(&OnFriendInviteReceived_Parms.RequestingPlayer,&RequestingPlayer,0x8);
	memcpy(&OnFriendInviteReceived_Parms.RequestingNick,&RequestingNick,0xC);
	memcpy(&OnFriendInviteReceived_Parms.Message,&Message,0xC);
	ProcessEvent(pFnOnFriendInviteReceived,NULL,&OnFriendInviteReceived_Parms,NULL);
}

struct Engine_OnMutingChange_Parms
{
};

void UOnlinePlayerInterface::OnMutingChange()
{
	static UFieldFunc* pFnOnMutingChange = NULL;
	if(!pFnOnMutingChange)
		pFnOnMutingChange = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnMutingChange");

	Engine_OnMutingChange_Parms OnMutingChange_Parms;
	ProcessEvent(pFnOnMutingChange,NULL,&OnMutingChange_Parms,NULL);
}

struct Engine_ReadFriendsList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                Count;                                            		// 0x000004 (0x0004)              
	int                                                StartingAt;                                       		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ReadFriendsList(unsigned char LocalUserNum,int Count,int StartingAt)
{
	static UFieldFunc* pFnReadFriendsList = NULL;
	if(!pFnReadFriendsList)
		pFnReadFriendsList = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ReadFriendsList");

	Engine_ReadFriendsList_Parms ReadFriendsList_Parms;
	ReadFriendsList_Parms.LocalUserNum = LocalUserNum;
	ReadFriendsList_Parms.Count = Count;
	ReadFriendsList_Parms.StartingAt = StartingAt;
	ProcessEvent(pFnReadFriendsList,NULL,&ReadFriendsList_Parms,NULL);
	return ReadFriendsList_Parms.ReturnValue;
}

struct Engine_OnJoinFriendGameComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnJoinFriendGameComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnJoinFriendGameComplete = NULL;
	if(!pFnOnJoinFriendGameComplete)
		pFnOnJoinFriendGameComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnJoinFriendGameComplete");

	Engine_OnJoinFriendGameComplete_Parms OnJoinFriendGameComplete_Parms;
	OnJoinFriendGameComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnJoinFriendGameComplete,NULL,&OnJoinFriendGameComplete_Parms,NULL);
}

struct Engine_SendGameInviteToFriends_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FUniqueNetId>                        Friends;                                          		// 0x000004 (0x000C)              
	struct FString                                     Text;                                             		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::SendGameInviteToFriends(unsigned char LocalUserNum,TArray<struct FUniqueNetId> Friends,struct FString Text)
{
	static UFieldFunc* pFnSendGameInviteToFriends = NULL;
	if(!pFnSendGameInviteToFriends)
		pFnSendGameInviteToFriends = UObject::FindFunction("Function Engine.OnlinePlayerInterface.SendGameInviteToFriends");

	Engine_SendGameInviteToFriends_Parms SendGameInviteToFriends_Parms;
	SendGameInviteToFriends_Parms.LocalUserNum = LocalUserNum;
	memcpy(&SendGameInviteToFriends_Parms.Friends,&Friends,0xC);
	memcpy(&SendGameInviteToFriends_Parms.Text,&Text,0xC);
	ProcessEvent(pFnSendGameInviteToFriends,NULL,&SendGameInviteToFriends_Parms,NULL);
	return SendGameInviteToFriends_Parms.ReturnValue;
}

struct Engine_ClearReadAchievementsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadAchievementsCompleteDelegate;                 		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearReadAchievementsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadAchievementsCompleteDelegate)
{
	static UFieldFunc* pFnClearReadAchievementsCompleteDelegate = NULL;
	if(!pFnClearReadAchievementsCompleteDelegate)
		pFnClearReadAchievementsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearReadAchievementsCompleteDelegate");

	Engine_ClearReadAchievementsCompleteDelegate_Parms ClearReadAchievementsCompleteDelegate_Parms;
	ClearReadAchievementsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadAchievementsCompleteDelegate_Parms.ReadAchievementsCompleteDelegate,&ReadAchievementsCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadAchievementsCompleteDelegate,NULL,&ClearReadAchievementsCompleteDelegate_Parms,NULL);
}

struct Engine_ShowKeyboardUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     TitleText;                                        		// 0x000004 (0x000C)              
	struct FString                                     DescriptionText;                                  		// 0x000010 (0x000C)              
	unsigned long                                      bIsPassword : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	unsigned long                                      bShouldValidate : 1;                              		// 0x000020 (0x0004) [0x00000001] 
	struct FString                                     DefaultText;                                      		// 0x000024 (0x000C)              
	int                                                MaxResultLength;                                  		// 0x000030 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000034 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ShowKeyboardUI(unsigned char LocalUserNum,struct FString TitleText,struct FString DescriptionText,bool bIsPassword,bool bShouldValidate,struct FString DefaultText,int MaxResultLength)
{
	static UFieldFunc* pFnShowKeyboardUI = NULL;
	if(!pFnShowKeyboardUI)
		pFnShowKeyboardUI = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ShowKeyboardUI");

	Engine_ShowKeyboardUI_Parms ShowKeyboardUI_Parms;
	ShowKeyboardUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowKeyboardUI_Parms.TitleText,&TitleText,0xC);
	memcpy(&ShowKeyboardUI_Parms.DescriptionText,&DescriptionText,0xC);
	ShowKeyboardUI_Parms.bIsPassword = bIsPassword;
	ShowKeyboardUI_Parms.bShouldValidate = bShouldValidate;
	memcpy(&ShowKeyboardUI_Parms.DefaultText,&DefaultText,0xC);
	ShowKeyboardUI_Parms.MaxResultLength = MaxResultLength;
	ProcessEvent(pFnShowKeyboardUI,NULL,&ShowKeyboardUI_Parms,NULL);
	return ShowKeyboardUI_Parms.ReturnValue;
}

struct Engine_GetKeyboardInputResults_Parms
{
	unsigned char                                      bWasCanceled;                                     		// 0x000000 (0x0001)              
	struct FString                                     ReturnValue;                                      		// 0x000004 (0x000C)              
};

struct FString UOnlinePlayerInterface::GetKeyboardInputResults(unsigned char* bWasCanceled)
{
	static UFieldFunc* pFnGetKeyboardInputResults = NULL;
	if(!pFnGetKeyboardInputResults)
		pFnGetKeyboardInputResults = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetKeyboardInputResults");

	Engine_GetKeyboardInputResults_Parms GetKeyboardInputResults_Parms;
	ProcessEvent(pFnGetKeyboardInputResults,NULL,&GetKeyboardInputResults_Parms,NULL);
	if(bWasCanceled)
		*bWasCanceled = GetKeyboardInputResults_Parms.bWasCanceled;
	return GetKeyboardInputResults_Parms.ReturnValue;
}

struct Engine_ClearReadFriendsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadFriendsCompleteDelegate;                      		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearReadFriendsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadFriendsCompleteDelegate)
{
	static UFieldFunc* pFnClearReadFriendsCompleteDelegate = NULL;
	if(!pFnClearReadFriendsCompleteDelegate)
		pFnClearReadFriendsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearReadFriendsCompleteDelegate");

	Engine_ClearReadFriendsCompleteDelegate_Parms ClearReadFriendsCompleteDelegate_Parms;
	ClearReadFriendsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadFriendsCompleteDelegate_Parms.ReadFriendsCompleteDelegate,&ReadFriendsCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadFriendsCompleteDelegate,NULL,&ClearReadFriendsCompleteDelegate_Parms,NULL);
}

struct Engine_OnFriendsChange_Parms
{
};

void UOnlinePlayerInterface::OnFriendsChange()
{
	static UFieldFunc* pFnOnFriendsChange = NULL;
	if(!pFnOnFriendsChange)
		pFnOnFriendsChange = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnFriendsChange");

	Engine_OnFriendsChange_Parms OnFriendsChange_Parms;
	ProcessEvent(pFnOnFriendsChange,NULL,&OnFriendsChange_Parms,NULL);
}

struct Engine_GetFriendsList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FOnlineFriend>                       Friends;                                          		// 0x000004 (0x000C)              
	int                                                Count;                                            		// 0x000010 (0x0004)              
	int                                                StartingAt;                                       		// 0x000014 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000018 (0x0001)              
};

unsigned char UOnlinePlayerInterface::GetFriendsList(unsigned char LocalUserNum,TArray<struct FOnlineFriend>* Friends,int Count,int StartingAt)
{
	static UFieldFunc* pFnGetFriendsList = NULL;
	if(!pFnGetFriendsList)
		pFnGetFriendsList = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetFriendsList");

	Engine_GetFriendsList_Parms GetFriendsList_Parms;
	GetFriendsList_Parms.LocalUserNum = LocalUserNum;
	GetFriendsList_Parms.Count = Count;
	GetFriendsList_Parms.StartingAt = StartingAt;
	ProcessEvent(pFnGetFriendsList,NULL,&GetFriendsList_Parms,NULL);
	if(Friends)
		memcpy(Friends,&GetFriendsList_Parms.Friends,0xC);
	return GetFriendsList_Parms.ReturnValue;
}

struct Engine_ClearLogoutCompletedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             LogoutDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearLogoutCompletedDelegate(unsigned char LocalUserNum,struct FScriptDelegate LogoutDelegate)
{
	static UFieldFunc* pFnClearLogoutCompletedDelegate = NULL;
	if(!pFnClearLogoutCompletedDelegate)
		pFnClearLogoutCompletedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearLogoutCompletedDelegate");

	Engine_ClearLogoutCompletedDelegate_Parms ClearLogoutCompletedDelegate_Parms;
	ClearLogoutCompletedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearLogoutCompletedDelegate_Parms.LogoutDelegate,&LogoutDelegate,0xC);
	ProcessEvent(pFnClearLogoutCompletedDelegate,NULL,&ClearLogoutCompletedDelegate_Parms,NULL);
}

struct Engine_OnLogoutCompleted_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnLogoutCompleted(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnLogoutCompleted = NULL;
	if(!pFnOnLogoutCompleted)
		pFnOnLogoutCompleted = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnLogoutCompleted");

	Engine_OnLogoutCompleted_Parms OnLogoutCompleted_Parms;
	OnLogoutCompleted_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnLogoutCompleted,NULL,&OnLogoutCompleted_Parms,NULL);
}

struct Engine_AddJoinFriendGameCompleteDelegate_Parms
{
	struct FScriptDelegate                             JoinFriendGameCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UOnlinePlayerInterface::AddJoinFriendGameCompleteDelegate(struct FScriptDelegate JoinFriendGameCompleteDelegate)
{
	static UFieldFunc* pFnAddJoinFriendGameCompleteDelegate = NULL;
	if(!pFnAddJoinFriendGameCompleteDelegate)
		pFnAddJoinFriendGameCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddJoinFriendGameCompleteDelegate");

	Engine_AddJoinFriendGameCompleteDelegate_Parms AddJoinFriendGameCompleteDelegate_Parms;
	memcpy(&AddJoinFriendGameCompleteDelegate_Parms.JoinFriendGameCompleteDelegate,&JoinFriendGameCompleteDelegate,0xC);
	ProcessEvent(pFnAddJoinFriendGameCompleteDelegate,NULL,&AddJoinFriendGameCompleteDelegate_Parms,NULL);
}

struct Engine_RemoveFriend_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                FormerFriend;                                     		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::RemoveFriend(unsigned char LocalUserNum,struct FUniqueNetId FormerFriend)
{
	static UFieldFunc* pFnRemoveFriend = NULL;
	if(!pFnRemoveFriend)
		pFnRemoveFriend = UObject::FindFunction("Function Engine.OnlinePlayerInterface.RemoveFriend");

	Engine_RemoveFriend_Parms RemoveFriend_Parms;
	RemoveFriend_Parms.LocalUserNum = LocalUserNum;
	memcpy(&RemoveFriend_Parms.FormerFriend,&FormerFriend,0x8);
	ProcessEvent(pFnRemoveFriend,NULL,&RemoveFriend_Parms,NULL);
	return RemoveFriend_Parms.ReturnValue;
}

struct Engine_UnlockAchievement_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                AchievementId;                                    		// 0x000004 (0x0004)              
	float                                              PercentComplete;                                  		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::UnlockAchievement(unsigned char LocalUserNum,int AchievementId,float PercentComplete)
{
	static UFieldFunc* pFnUnlockAchievement = NULL;
	if(!pFnUnlockAchievement)
		pFnUnlockAchievement = UObject::FindFunction("Function Engine.OnlinePlayerInterface.UnlockAchievement");

	Engine_UnlockAchievement_Parms UnlockAchievement_Parms;
	UnlockAchievement_Parms.LocalUserNum = LocalUserNum;
	UnlockAchievement_Parms.AchievementId = AchievementId;
	UnlockAchievement_Parms.PercentComplete = PercentComplete;
	ProcessEvent(pFnUnlockAchievement,NULL,&UnlockAchievement_Parms,NULL);
	return UnlockAchievement_Parms.ReturnValue;
}

struct Engine_ClearLoginStatusChangeDelegate_Parms
{
	struct FScriptDelegate                             LoginStatusDelegate;                              		// 0x000000 (0x000C)              
	unsigned char                                      LocalUserNum;                                     		// 0x00000C (0x0001)              
};

void UOnlinePlayerInterface::ClearLoginStatusChangeDelegate(struct FScriptDelegate LoginStatusDelegate,unsigned char LocalUserNum)
{
	static UFieldFunc* pFnClearLoginStatusChangeDelegate = NULL;
	if(!pFnClearLoginStatusChangeDelegate)
		pFnClearLoginStatusChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearLoginStatusChangeDelegate");

	Engine_ClearLoginStatusChangeDelegate_Parms ClearLoginStatusChangeDelegate_Parms;
	memcpy(&ClearLoginStatusChangeDelegate_Parms.LoginStatusDelegate,&LoginStatusDelegate,0xC);
	ClearLoginStatusChangeDelegate_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnClearLoginStatusChangeDelegate,NULL,&ClearLoginStatusChangeDelegate_Parms,NULL);
}

struct Engine_GetProfileSettings_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlineProfileSettings*                      ReturnValue;                                      		// 0x000004 (0x0004)              
};

class UOnlineProfileSettings* UOnlinePlayerInterface::GetProfileSettings(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnGetProfileSettings = NULL;
	if(!pFnGetProfileSettings)
		pFnGetProfileSettings = UObject::FindFunction("Function Engine.OnlinePlayerInterface.GetProfileSettings");

	Engine_GetProfileSettings_Parms GetProfileSettings_Parms;
	GetProfileSettings_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetProfileSettings,NULL,&GetProfileSettings_Parms,NULL);
	return GetProfileSettings_Parms.ReturnValue;
}

struct Engine_CanShowPresenceInformation_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::CanShowPresenceInformation(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnCanShowPresenceInformation = NULL;
	if(!pFnCanShowPresenceInformation)
		pFnCanShowPresenceInformation = UObject::FindFunction("Function Engine.OnlinePlayerInterface.CanShowPresenceInformation");

	Engine_CanShowPresenceInformation_Parms CanShowPresenceInformation_Parms;
	CanShowPresenceInformation_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnCanShowPresenceInformation,NULL,&CanShowPresenceInformation_Parms,NULL);
	return CanShowPresenceInformation_Parms.ReturnValue;
}

struct Engine_AddFriendMessageReceivedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             MessageDelegate;                                  		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddFriendMessageReceivedDelegate(unsigned char LocalUserNum,struct FScriptDelegate MessageDelegate)
{
	static UFieldFunc* pFnAddFriendMessageReceivedDelegate = NULL;
	if(!pFnAddFriendMessageReceivedDelegate)
		pFnAddFriendMessageReceivedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddFriendMessageReceivedDelegate");

	Engine_AddFriendMessageReceivedDelegate_Parms AddFriendMessageReceivedDelegate_Parms;
	AddFriendMessageReceivedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddFriendMessageReceivedDelegate_Parms.MessageDelegate,&MessageDelegate,0xC);
	ProcessEvent(pFnAddFriendMessageReceivedDelegate,NULL,&AddFriendMessageReceivedDelegate_Parms,NULL);
}

struct Engine_IsGuestLogin_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::IsGuestLogin(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnIsGuestLogin = NULL;
	if(!pFnIsGuestLogin)
		pFnIsGuestLogin = UObject::FindFunction("Function Engine.OnlinePlayerInterface.IsGuestLogin");

	Engine_IsGuestLogin_Parms IsGuestLogin_Parms;
	IsGuestLogin_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnIsGuestLogin,NULL,&IsGuestLogin_Parms,NULL);
	return IsGuestLogin_Parms.ReturnValue;
}

struct Engine_OnKeyboardInputComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnKeyboardInputComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnKeyboardInputComplete = NULL;
	if(!pFnOnKeyboardInputComplete)
		pFnOnKeyboardInputComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnKeyboardInputComplete");

	Engine_OnKeyboardInputComplete_Parms OnKeyboardInputComplete_Parms;
	OnKeyboardInputComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnKeyboardInputComplete,NULL,&OnKeyboardInputComplete_Parms,NULL);
}

struct Engine_AddFriendsChangeDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             FriendsDelegate;                                  		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddFriendsChangeDelegate(unsigned char LocalUserNum,struct FScriptDelegate FriendsDelegate)
{
	static UFieldFunc* pFnAddFriendsChangeDelegate = NULL;
	if(!pFnAddFriendsChangeDelegate)
		pFnAddFriendsChangeDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddFriendsChangeDelegate");

	Engine_AddFriendsChangeDelegate_Parms AddFriendsChangeDelegate_Parms;
	AddFriendsChangeDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddFriendsChangeDelegate_Parms.FriendsDelegate,&FriendsDelegate,0xC);
	ProcessEvent(pFnAddFriendsChangeDelegate,NULL,&AddFriendsChangeDelegate_Parms,NULL);
}

struct Engine_AddReadPlayerStorageCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadPlayerStorageCompleteDelegate;                		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddReadPlayerStorageCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadPlayerStorageCompleteDelegate)
{
	static UFieldFunc* pFnAddReadPlayerStorageCompleteDelegate = NULL;
	if(!pFnAddReadPlayerStorageCompleteDelegate)
		pFnAddReadPlayerStorageCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddReadPlayerStorageCompleteDelegate");

	Engine_AddReadPlayerStorageCompleteDelegate_Parms AddReadPlayerStorageCompleteDelegate_Parms;
	AddReadPlayerStorageCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadPlayerStorageCompleteDelegate_Parms.ReadPlayerStorageCompleteDelegate,&ReadPlayerStorageCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadPlayerStorageCompleteDelegate,NULL,&AddReadPlayerStorageCompleteDelegate_Parms,NULL);
}

struct Engine_AddReadProfileSettingsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadProfileSettingsCompleteDelegate;              		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddReadProfileSettingsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadProfileSettingsCompleteDelegate)
{
	static UFieldFunc* pFnAddReadProfileSettingsCompleteDelegate = NULL;
	if(!pFnAddReadProfileSettingsCompleteDelegate)
		pFnAddReadProfileSettingsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddReadProfileSettingsCompleteDelegate");

	Engine_AddReadProfileSettingsCompleteDelegate_Parms AddReadProfileSettingsCompleteDelegate_Parms;
	AddReadProfileSettingsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadProfileSettingsCompleteDelegate_Parms.ReadProfileSettingsCompleteDelegate,&ReadProfileSettingsCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadProfileSettingsCompleteDelegate,NULL,&AddReadProfileSettingsCompleteDelegate_Parms,NULL);
}

struct Engine_OnReadPlayerStorageForNetIdComplete_Parms
{
	struct FUniqueNetId                                NetId;                                            		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterface::OnReadPlayerStorageForNetIdComplete(struct FUniqueNetId NetId,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadPlayerStorageForNetIdComplete = NULL;
	if(!pFnOnReadPlayerStorageForNetIdComplete)
		pFnOnReadPlayerStorageForNetIdComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterface.OnReadPlayerStorageForNetIdComplete");

	Engine_OnReadPlayerStorageForNetIdComplete_Parms OnReadPlayerStorageForNetIdComplete_Parms;
	memcpy(&OnReadPlayerStorageForNetIdComplete_Parms.NetId,&NetId,0x8);
	OnReadPlayerStorageForNetIdComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadPlayerStorageForNetIdComplete,NULL,&OnReadPlayerStorageForNetIdComplete_Parms,NULL);
}

struct Engine_CanDownloadUserContent_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned char                                      ReturnValue;                                      		// 0x000001 (0x0001)              
};

unsigned char UOnlinePlayerInterface::CanDownloadUserContent(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnCanDownloadUserContent = NULL;
	if(!pFnCanDownloadUserContent)
		pFnCanDownloadUserContent = UObject::FindFunction("Function Engine.OnlinePlayerInterface.CanDownloadUserContent");

	Engine_CanDownloadUserContent_Parms CanDownloadUserContent_Parms;
	CanDownloadUserContent_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnCanDownloadUserContent,NULL,&CanDownloadUserContent_Parms,NULL);
	return CanDownloadUserContent_Parms.ReturnValue;
}

struct Engine_ShowLoginUI_Parms
{
	unsigned long                                      bShowOnlineOnly : 1;                              		// 0x000000 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ShowLoginUI(bool bShowOnlineOnly)
{
	static UFieldFunc* pFnShowLoginUI = NULL;
	if(!pFnShowLoginUI)
		pFnShowLoginUI = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ShowLoginUI");

	Engine_ShowLoginUI_Parms ShowLoginUI_Parms;
	ShowLoginUI_Parms.bShowOnlineOnly = bShowOnlineOnly;
	ProcessEvent(pFnShowLoginUI,NULL,&ShowLoginUI_Parms,NULL);
	return ShowLoginUI_Parms.ReturnValue;
}

struct Engine_ReadProfileSettings_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlineProfileSettings*                      ProfileSettings;                                  		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::ReadProfileSettings(unsigned char LocalUserNum,class UOnlineProfileSettings* ProfileSettings)
{
	static UFieldFunc* pFnReadProfileSettings = NULL;
	if(!pFnReadProfileSettings)
		pFnReadProfileSettings = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ReadProfileSettings");

	Engine_ReadProfileSettings_Parms ReadProfileSettings_Parms;
	ReadProfileSettings_Parms.LocalUserNum = LocalUserNum;
	ReadProfileSettings_Parms.ProfileSettings = ProfileSettings;
	ProcessEvent(pFnReadProfileSettings,NULL,&ReadProfileSettings_Parms,NULL);
	return ReadProfileSettings_Parms.ReturnValue;
}

struct Engine_SendGameInviteToFriend_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                Friend;                                           		// 0x000004 (0x0008)              
	struct FString                                     Text;                                             		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::SendGameInviteToFriend(unsigned char LocalUserNum,struct FUniqueNetId Friend,struct FString Text)
{
	static UFieldFunc* pFnSendGameInviteToFriend = NULL;
	if(!pFnSendGameInviteToFriend)
		pFnSendGameInviteToFriend = UObject::FindFunction("Function Engine.OnlinePlayerInterface.SendGameInviteToFriend");

	Engine_SendGameInviteToFriend_Parms SendGameInviteToFriend_Parms;
	SendGameInviteToFriend_Parms.LocalUserNum = LocalUserNum;
	memcpy(&SendGameInviteToFriend_Parms.Friend,&Friend,0x8);
	memcpy(&SendGameInviteToFriend_Parms.Text,&Text,0xC);
	ProcessEvent(pFnSendGameInviteToFriend,NULL,&SendGameInviteToFriend_Parms,NULL);
	return SendGameInviteToFriend_Parms.ReturnValue;
}

struct Engine_Login_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     LoginName;                                        		// 0x000004 (0x000C)              
	struct FString                                     Password;                                         		// 0x000010 (0x000C)              
	unsigned long                                      bWantsLocalOnly : 1;                              		// 0x00001C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterface::Login(unsigned char LocalUserNum,struct FString LoginName,struct FString Password,bool bWantsLocalOnly)
{
	static UFieldFunc* pFnLogin = NULL;
	if(!pFnLogin)
		pFnLogin = UObject::FindFunction("Function Engine.OnlinePlayerInterface.Login");

	Engine_Login_Parms Login_Parms;
	Login_Parms.LocalUserNum = LocalUserNum;
	memcpy(&Login_Parms.LoginName,&LoginName,0xC);
	memcpy(&Login_Parms.Password,&Password,0xC);
	Login_Parms.bWantsLocalOnly = bWantsLocalOnly;
	ProcessEvent(pFnLogin,NULL,&Login_Parms,NULL);
	return Login_Parms.ReturnValue;
}

struct Engine_AddWriteProfileSettingsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             WriteProfileSettingsCompleteDelegate;             		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::AddWriteProfileSettingsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate WriteProfileSettingsCompleteDelegate)
{
	static UFieldFunc* pFnAddWriteProfileSettingsCompleteDelegate = NULL;
	if(!pFnAddWriteProfileSettingsCompleteDelegate)
		pFnAddWriteProfileSettingsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.AddWriteProfileSettingsCompleteDelegate");

	Engine_AddWriteProfileSettingsCompleteDelegate_Parms AddWriteProfileSettingsCompleteDelegate_Parms;
	AddWriteProfileSettingsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddWriteProfileSettingsCompleteDelegate_Parms.WriteProfileSettingsCompleteDelegate,&WriteProfileSettingsCompleteDelegate,0xC);
	ProcessEvent(pFnAddWriteProfileSettingsCompleteDelegate,NULL,&AddWriteProfileSettingsCompleteDelegate_Parms,NULL);
}

struct Engine_ClearReceivedGameInviteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReceivedGameInviteDelegate;                       		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterface::ClearReceivedGameInviteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReceivedGameInviteDelegate)
{
	static UFieldFunc* pFnClearReceivedGameInviteDelegate = NULL;
	if(!pFnClearReceivedGameInviteDelegate)
		pFnClearReceivedGameInviteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterface.ClearReceivedGameInviteDelegate");

	Engine_ClearReceivedGameInviteDelegate_Parms ClearReceivedGameInviteDelegate_Parms;
	ClearReceivedGameInviteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReceivedGameInviteDelegate_Parms.ReceivedGameInviteDelegate,&ReceivedGameInviteDelegate,0xC);
	ProcessEvent(pFnClearReceivedGameInviteDelegate,NULL,&ClearReceivedGameInviteDelegate_Parms,NULL);
}

struct Engine_ShowPlayersUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowPlayersUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowPlayersUI = NULL;
	if(!pFnShowPlayersUI)
		pFnShowPlayersUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowPlayersUI");

	Engine_ShowPlayersUI_Parms ShowPlayersUI_Parms;
	ShowPlayersUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowPlayersUI,NULL,&ShowPlayersUI_Parms,NULL);
	return ShowPlayersUI_Parms.ReturnValue;
}

struct Engine_ShowFriendsInviteUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowFriendsInviteUI(unsigned char LocalUserNum,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnShowFriendsInviteUI = NULL;
	if(!pFnShowFriendsInviteUI)
		pFnShowFriendsInviteUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowFriendsInviteUI");

	Engine_ShowFriendsInviteUI_Parms ShowFriendsInviteUI_Parms;
	ShowFriendsInviteUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowFriendsInviteUI_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnShowFriendsInviteUI,NULL,&ShowFriendsInviteUI_Parms,NULL);
	return ShowFriendsInviteUI_Parms.ReturnValue;
}

struct Engine_ShowMembershipMarketplaceUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowMembershipMarketplaceUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowMembershipMarketplaceUI = NULL;
	if(!pFnShowMembershipMarketplaceUI)
		pFnShowMembershipMarketplaceUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowMembershipMarketplaceUI");

	Engine_ShowMembershipMarketplaceUI_Parms ShowMembershipMarketplaceUI_Parms;
	ShowMembershipMarketplaceUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowMembershipMarketplaceUI,NULL,&ShowMembershipMarketplaceUI_Parms,NULL);
	return ShowMembershipMarketplaceUI_Parms.ReturnValue;
}

struct Engine_ShowGamerCardUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowGamerCardUI(unsigned char LocalUserNum,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnShowGamerCardUI = NULL;
	if(!pFnShowGamerCardUI)
		pFnShowGamerCardUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowGamerCardUI");

	Engine_ShowGamerCardUI_Parms ShowGamerCardUI_Parms;
	ShowGamerCardUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowGamerCardUI_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnShowGamerCardUI,NULL,&ShowGamerCardUI_Parms,NULL);
	return ShowGamerCardUI_Parms.ReturnValue;
}

struct Engine_ClearProfileDataChangedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ProfileDataChangedDelegate;                       		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterfaceEx::ClearProfileDataChangedDelegate(unsigned char LocalUserNum,struct FScriptDelegate ProfileDataChangedDelegate)
{
	static UFieldFunc* pFnClearProfileDataChangedDelegate = NULL;
	if(!pFnClearProfileDataChangedDelegate)
		pFnClearProfileDataChangedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ClearProfileDataChangedDelegate");

	Engine_ClearProfileDataChangedDelegate_Parms ClearProfileDataChangedDelegate_Parms;
	ClearProfileDataChangedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearProfileDataChangedDelegate_Parms.ProfileDataChangedDelegate,&ProfileDataChangedDelegate,0xC);
	ProcessEvent(pFnClearProfileDataChangedDelegate,NULL,&ClearProfileDataChangedDelegate_Parms,NULL);
}

struct Engine_OnDeviceSelectionComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterfaceEx::OnDeviceSelectionComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnDeviceSelectionComplete = NULL;
	if(!pFnOnDeviceSelectionComplete)
		pFnOnDeviceSelectionComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.OnDeviceSelectionComplete");

	Engine_OnDeviceSelectionComplete_Parms OnDeviceSelectionComplete_Parms;
	OnDeviceSelectionComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnDeviceSelectionComplete,NULL,&OnDeviceSelectionComplete_Parms,NULL);
}

struct Engine_ShowContentMarketplaceUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                CategoryMask;                                     		// 0x000004 (0x0004)              
	int                                                OfferId;                                          		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowContentMarketplaceUI(unsigned char LocalUserNum,int CategoryMask,int OfferId)
{
	static UFieldFunc* pFnShowContentMarketplaceUI = NULL;
	if(!pFnShowContentMarketplaceUI)
		pFnShowContentMarketplaceUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowContentMarketplaceUI");

	Engine_ShowContentMarketplaceUI_Parms ShowContentMarketplaceUI_Parms;
	ShowContentMarketplaceUI_Parms.LocalUserNum = LocalUserNum;
	ShowContentMarketplaceUI_Parms.CategoryMask = CategoryMask;
	ShowContentMarketplaceUI_Parms.OfferId = OfferId;
	ProcessEvent(pFnShowContentMarketplaceUI,NULL,&ShowContentMarketplaceUI_Parms,NULL);
	return ShowContentMarketplaceUI_Parms.ReturnValue;
}

struct Engine_OnProfileDataChanged_Parms
{
};

void UOnlinePlayerInterfaceEx::OnProfileDataChanged()
{
	static UFieldFunc* pFnOnProfileDataChanged = NULL;
	if(!pFnOnProfileDataChanged)
		pFnOnProfileDataChanged = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.OnProfileDataChanged");

	Engine_OnProfileDataChanged_Parms OnProfileDataChanged_Parms;
	ProcessEvent(pFnOnProfileDataChanged,NULL,&OnProfileDataChanged_Parms,NULL);
}

struct Engine_ShowCustomPlayersUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000004 (0x000C)              
	struct FString                                     Title;                                            		// 0x000010 (0x000C)              
	struct FString                                     Description;                                      		// 0x00001C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000028 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowCustomPlayersUI(unsigned char LocalUserNum,TArray<struct FUniqueNetId>* Players,struct FString Title,struct FString Description)
{
	static UFieldFunc* pFnShowCustomPlayersUI = NULL;
	if(!pFnShowCustomPlayersUI)
		pFnShowCustomPlayersUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowCustomPlayersUI");

	Engine_ShowCustomPlayersUI_Parms ShowCustomPlayersUI_Parms;
	ShowCustomPlayersUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowCustomPlayersUI_Parms.Title,&Title,0xC);
	memcpy(&ShowCustomPlayersUI_Parms.Description,&Description,0xC);
	ProcessEvent(pFnShowCustomPlayersUI,NULL,&ShowCustomPlayersUI_Parms,NULL);
	if(Players)
		memcpy(Players,&ShowCustomPlayersUI_Parms.Players,0xC);
	return ShowCustomPlayersUI_Parms.ReturnValue;
}

struct Engine_ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadProfileSettingsCompleteDelegate;              		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterfaceEx::ClearReadCrossTitleProfileSettingsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadProfileSettingsCompleteDelegate)
{
	static UFieldFunc* pFnClearReadCrossTitleProfileSettingsCompleteDelegate = NULL;
	if(!pFnClearReadCrossTitleProfileSettingsCompleteDelegate)
		pFnClearReadCrossTitleProfileSettingsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ClearReadCrossTitleProfileSettingsCompleteDelegate");

	Engine_ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms;
	ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms.ReadProfileSettingsCompleteDelegate,&ReadProfileSettingsCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadCrossTitleProfileSettingsCompleteDelegate,NULL,&ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms,NULL);
}

struct Engine_ShowCustomMessageUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FUniqueNetId>                        Recipients;                                       		// 0x000004 (0x000C)              
	struct FString                                     MessageTitle;                                     		// 0x000010 (0x000C)              
	struct FString                                     NonEditableMessage;                               		// 0x00001C (0x000C)              
	struct FString                                     EditableMessage;                                  		// 0x000028 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000034 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowCustomMessageUI(unsigned char LocalUserNum,TArray<struct FUniqueNetId>* Recipients,struct FString MessageTitle,struct FString NonEditableMessage,struct FString EditableMessage)
{
	static UFieldFunc* pFnShowCustomMessageUI = NULL;
	if(!pFnShowCustomMessageUI)
		pFnShowCustomMessageUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowCustomMessageUI");

	Engine_ShowCustomMessageUI_Parms ShowCustomMessageUI_Parms;
	ShowCustomMessageUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowCustomMessageUI_Parms.MessageTitle,&MessageTitle,0xC);
	memcpy(&ShowCustomMessageUI_Parms.NonEditableMessage,&NonEditableMessage,0xC);
	memcpy(&ShowCustomMessageUI_Parms.EditableMessage,&EditableMessage,0xC);
	ProcessEvent(pFnShowCustomMessageUI,NULL,&ShowCustomMessageUI_Parms,NULL);
	if(Recipients)
		memcpy(Recipients,&ShowCustomMessageUI_Parms.Recipients,0xC);
	return ShowCustomMessageUI_Parms.ReturnValue;
}

struct Engine_ShowInviteUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     InviteText;                                       		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowInviteUI(unsigned char LocalUserNum,struct FString InviteText)
{
	static UFieldFunc* pFnShowInviteUI = NULL;
	if(!pFnShowInviteUI)
		pFnShowInviteUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowInviteUI");

	Engine_ShowInviteUI_Parms ShowInviteUI_Parms;
	ShowInviteUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowInviteUI_Parms.InviteText,&InviteText,0xC);
	ProcessEvent(pFnShowInviteUI,NULL,&ShowInviteUI_Parms,NULL);
	return ShowInviteUI_Parms.ReturnValue;
}

struct Engine_ReadCrossTitleProfileSettings_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                TitleId;                                          		// 0x000004 (0x0004)              
	class UOnlineProfileSettings*                      ProfileSettings;                                  		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ReadCrossTitleProfileSettings(unsigned char LocalUserNum,int TitleId,class UOnlineProfileSettings* ProfileSettings)
{
	static UFieldFunc* pFnReadCrossTitleProfileSettings = NULL;
	if(!pFnReadCrossTitleProfileSettings)
		pFnReadCrossTitleProfileSettings = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ReadCrossTitleProfileSettings");

	Engine_ReadCrossTitleProfileSettings_Parms ReadCrossTitleProfileSettings_Parms;
	ReadCrossTitleProfileSettings_Parms.LocalUserNum = LocalUserNum;
	ReadCrossTitleProfileSettings_Parms.TitleId = TitleId;
	ReadCrossTitleProfileSettings_Parms.ProfileSettings = ProfileSettings;
	ProcessEvent(pFnReadCrossTitleProfileSettings,NULL,&ReadCrossTitleProfileSettings_Parms,NULL);
	return ReadCrossTitleProfileSettings_Parms.ReturnValue;
}

struct Engine_GetDeviceSelectionResults_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     DeviceName;                                       		// 0x000004 (0x000C)              
	int                                                ReturnValue;                                      		// 0x000010 (0x0004)              
};

int UOnlinePlayerInterfaceEx::GetDeviceSelectionResults(unsigned char LocalUserNum,struct FString* DeviceName)
{
	static UFieldFunc* pFnGetDeviceSelectionResults = NULL;
	if(!pFnGetDeviceSelectionResults)
		pFnGetDeviceSelectionResults = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.GetDeviceSelectionResults");

	Engine_GetDeviceSelectionResults_Parms GetDeviceSelectionResults_Parms;
	GetDeviceSelectionResults_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetDeviceSelectionResults,NULL,&GetDeviceSelectionResults_Parms,NULL);
	if(DeviceName)
		memcpy(DeviceName,&GetDeviceSelectionResults_Parms.DeviceName,0xC);
	return GetDeviceSelectionResults_Parms.ReturnValue;
}

struct Engine_UnlockAvatarAward_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                AvatarItemId;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::UnlockAvatarAward(unsigned char LocalUserNum,int AvatarItemId)
{
	static UFieldFunc* pFnUnlockAvatarAward = NULL;
	if(!pFnUnlockAvatarAward)
		pFnUnlockAvatarAward = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.UnlockAvatarAward");

	Engine_UnlockAvatarAward_Parms UnlockAvatarAward_Parms;
	UnlockAvatarAward_Parms.LocalUserNum = LocalUserNum;
	UnlockAvatarAward_Parms.AvatarItemId = AvatarItemId;
	ProcessEvent(pFnUnlockAvatarAward,NULL,&UnlockAvatarAward_Parms,NULL);
	return UnlockAvatarAward_Parms.ReturnValue;
}

struct Engine_AddDeviceSelectionDoneDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             DeviceDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterfaceEx::AddDeviceSelectionDoneDelegate(unsigned char LocalUserNum,struct FScriptDelegate DeviceDelegate)
{
	static UFieldFunc* pFnAddDeviceSelectionDoneDelegate = NULL;
	if(!pFnAddDeviceSelectionDoneDelegate)
		pFnAddDeviceSelectionDoneDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.AddDeviceSelectionDoneDelegate");

	Engine_AddDeviceSelectionDoneDelegate_Parms AddDeviceSelectionDoneDelegate_Parms;
	AddDeviceSelectionDoneDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddDeviceSelectionDoneDelegate_Parms.DeviceDelegate,&DeviceDelegate,0xC);
	ProcessEvent(pFnAddDeviceSelectionDoneDelegate,NULL,&AddDeviceSelectionDoneDelegate_Parms,NULL);
}

struct Engine_IsDeviceValid_Parms
{
	int                                                DeviceID;                                         		// 0x000000 (0x0004)              
	int                                                SizeNeeded;                                       		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::IsDeviceValid(int DeviceID,int SizeNeeded)
{
	static UFieldFunc* pFnIsDeviceValid = NULL;
	if(!pFnIsDeviceValid)
		pFnIsDeviceValid = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.IsDeviceValid");

	Engine_IsDeviceValid_Parms IsDeviceValid_Parms;
	IsDeviceValid_Parms.DeviceID = DeviceID;
	IsDeviceValid_Parms.SizeNeeded = SizeNeeded;
	ProcessEvent(pFnIsDeviceValid,NULL,&IsDeviceValid_Parms,NULL);
	return IsDeviceValid_Parms.ReturnValue;
}

struct Engine_ShowFeedbackUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowFeedbackUI(unsigned char LocalUserNum,struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnShowFeedbackUI = NULL;
	if(!pFnShowFeedbackUI)
		pFnShowFeedbackUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowFeedbackUI");

	Engine_ShowFeedbackUI_Parms ShowFeedbackUI_Parms;
	ShowFeedbackUI_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowFeedbackUI_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnShowFeedbackUI,NULL,&ShowFeedbackUI_Parms,NULL);
	return ShowFeedbackUI_Parms.ReturnValue;
}

struct Engine_AddProfileDataChangedDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ProfileDataChangedDelegate;                       		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterfaceEx::AddProfileDataChangedDelegate(unsigned char LocalUserNum,struct FScriptDelegate ProfileDataChangedDelegate)
{
	static UFieldFunc* pFnAddProfileDataChangedDelegate = NULL;
	if(!pFnAddProfileDataChangedDelegate)
		pFnAddProfileDataChangedDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.AddProfileDataChangedDelegate");

	Engine_AddProfileDataChangedDelegate_Parms AddProfileDataChangedDelegate_Parms;
	AddProfileDataChangedDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddProfileDataChangedDelegate_Parms.ProfileDataChangedDelegate,&ProfileDataChangedDelegate,0xC);
	ProcessEvent(pFnAddProfileDataChangedDelegate,NULL,&AddProfileDataChangedDelegate_Parms,NULL);
}

struct Engine_OnReadCrossTitleProfileSettingsComplete_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                TitleId;                                          		// 0x000004 (0x0004)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlinePlayerInterfaceEx::OnReadCrossTitleProfileSettingsComplete(unsigned char LocalUserNum,int TitleId,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadCrossTitleProfileSettingsComplete = NULL;
	if(!pFnOnReadCrossTitleProfileSettingsComplete)
		pFnOnReadCrossTitleProfileSettingsComplete = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.OnReadCrossTitleProfileSettingsComplete");

	Engine_OnReadCrossTitleProfileSettingsComplete_Parms OnReadCrossTitleProfileSettingsComplete_Parms;
	OnReadCrossTitleProfileSettingsComplete_Parms.LocalUserNum = LocalUserNum;
	OnReadCrossTitleProfileSettingsComplete_Parms.TitleId = TitleId;
	OnReadCrossTitleProfileSettingsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadCrossTitleProfileSettingsComplete,NULL,&OnReadCrossTitleProfileSettingsComplete_Parms,NULL);
}

struct Engine_ShowAchievementsUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowAchievementsUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowAchievementsUI = NULL;
	if(!pFnShowAchievementsUI)
		pFnShowAchievementsUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowAchievementsUI");

	Engine_ShowAchievementsUI_Parms ShowAchievementsUI_Parms;
	ShowAchievementsUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowAchievementsUI,NULL,&ShowAchievementsUI_Parms,NULL);
	return ShowAchievementsUI_Parms.ReturnValue;
}

struct Engine_UnlockGamerPicture_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                PictureId;                                        		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::UnlockGamerPicture(unsigned char LocalUserNum,int PictureId)
{
	static UFieldFunc* pFnUnlockGamerPicture = NULL;
	if(!pFnUnlockGamerPicture)
		pFnUnlockGamerPicture = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.UnlockGamerPicture");

	Engine_UnlockGamerPicture_Parms UnlockGamerPicture_Parms;
	UnlockGamerPicture_Parms.LocalUserNum = LocalUserNum;
	UnlockGamerPicture_Parms.PictureId = PictureId;
	ProcessEvent(pFnUnlockGamerPicture,NULL,&UnlockGamerPicture_Parms,NULL);
	return UnlockGamerPicture_Parms.ReturnValue;
}

struct Engine_AddReadCrossTitleProfileSettingsCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             ReadProfileSettingsCompleteDelegate;              		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterfaceEx::AddReadCrossTitleProfileSettingsCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate ReadProfileSettingsCompleteDelegate)
{
	static UFieldFunc* pFnAddReadCrossTitleProfileSettingsCompleteDelegate = NULL;
	if(!pFnAddReadCrossTitleProfileSettingsCompleteDelegate)
		pFnAddReadCrossTitleProfileSettingsCompleteDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.AddReadCrossTitleProfileSettingsCompleteDelegate");

	Engine_AddReadCrossTitleProfileSettingsCompleteDelegate_Parms AddReadCrossTitleProfileSettingsCompleteDelegate_Parms;
	AddReadCrossTitleProfileSettingsCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddReadCrossTitleProfileSettingsCompleteDelegate_Parms.ReadProfileSettingsCompleteDelegate,&ReadProfileSettingsCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadCrossTitleProfileSettingsCompleteDelegate,NULL,&AddReadCrossTitleProfileSettingsCompleteDelegate_Parms,NULL);
}

struct Engine_GetCrossTitleProfileSettings_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                TitleId;                                          		// 0x000004 (0x0004)              
	class UOnlineProfileSettings*                      ReturnValue;                                      		// 0x000008 (0x0004)              
};

class UOnlineProfileSettings* UOnlinePlayerInterfaceEx::GetCrossTitleProfileSettings(unsigned char LocalUserNum,int TitleId)
{
	static UFieldFunc* pFnGetCrossTitleProfileSettings = NULL;
	if(!pFnGetCrossTitleProfileSettings)
		pFnGetCrossTitleProfileSettings = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.GetCrossTitleProfileSettings");

	Engine_GetCrossTitleProfileSettings_Parms GetCrossTitleProfileSettings_Parms;
	GetCrossTitleProfileSettings_Parms.LocalUserNum = LocalUserNum;
	GetCrossTitleProfileSettings_Parms.TitleId = TitleId;
	ProcessEvent(pFnGetCrossTitleProfileSettings,NULL,&GetCrossTitleProfileSettings_Parms,NULL);
	return GetCrossTitleProfileSettings_Parms.ReturnValue;
}

struct Engine_ClearCrossTitleProfileSettings_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                TitleId;                                          		// 0x000004 (0x0004)              
};

void UOnlinePlayerInterfaceEx::ClearCrossTitleProfileSettings(unsigned char LocalUserNum,int TitleId)
{
	static UFieldFunc* pFnClearCrossTitleProfileSettings = NULL;
	if(!pFnClearCrossTitleProfileSettings)
		pFnClearCrossTitleProfileSettings = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ClearCrossTitleProfileSettings");

	Engine_ClearCrossTitleProfileSettings_Parms ClearCrossTitleProfileSettings_Parms;
	ClearCrossTitleProfileSettings_Parms.LocalUserNum = LocalUserNum;
	ClearCrossTitleProfileSettings_Parms.TitleId = TitleId;
	ProcessEvent(pFnClearCrossTitleProfileSettings,NULL,&ClearCrossTitleProfileSettings_Parms,NULL);
}

struct Engine_ShowDeviceSelectionUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                SizeNeeded;                                       		// 0x000004 (0x0004)              
	unsigned long                                      bManageStorage : 1;                               		// 0x000008 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowDeviceSelectionUI(unsigned char LocalUserNum,int SizeNeeded,bool bManageStorage)
{
	static UFieldFunc* pFnShowDeviceSelectionUI = NULL;
	if(!pFnShowDeviceSelectionUI)
		pFnShowDeviceSelectionUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowDeviceSelectionUI");

	Engine_ShowDeviceSelectionUI_Parms ShowDeviceSelectionUI_Parms;
	ShowDeviceSelectionUI_Parms.LocalUserNum = LocalUserNum;
	ShowDeviceSelectionUI_Parms.SizeNeeded = SizeNeeded;
	ShowDeviceSelectionUI_Parms.bManageStorage = bManageStorage;
	ProcessEvent(pFnShowDeviceSelectionUI,NULL,&ShowDeviceSelectionUI_Parms,NULL);
	return ShowDeviceSelectionUI_Parms.ReturnValue;
}

struct Engine_ShowMessagesUI_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlinePlayerInterfaceEx::ShowMessagesUI(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnShowMessagesUI = NULL;
	if(!pFnShowMessagesUI)
		pFnShowMessagesUI = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ShowMessagesUI");

	Engine_ShowMessagesUI_Parms ShowMessagesUI_Parms;
	ShowMessagesUI_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnShowMessagesUI,NULL,&ShowMessagesUI_Parms,NULL);
	return ShowMessagesUI_Parms.ReturnValue;
}

struct Engine_ClearDeviceSelectionDoneDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             DeviceDelegate;                                   		// 0x000004 (0x000C)              
};

void UOnlinePlayerInterfaceEx::ClearDeviceSelectionDoneDelegate(unsigned char LocalUserNum,struct FScriptDelegate DeviceDelegate)
{
	static UFieldFunc* pFnClearDeviceSelectionDoneDelegate = NULL;
	if(!pFnClearDeviceSelectionDoneDelegate)
		pFnClearDeviceSelectionDoneDelegate = UObject::FindFunction("Function Engine.OnlinePlayerInterfaceEx.ClearDeviceSelectionDoneDelegate");

	Engine_ClearDeviceSelectionDoneDelegate_Parms ClearDeviceSelectionDoneDelegate_Parms;
	ClearDeviceSelectionDoneDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearDeviceSelectionDoneDelegate_Parms.DeviceDelegate,&DeviceDelegate,0xC);
	ProcessEvent(pFnClearDeviceSelectionDoneDelegate,NULL,&ClearDeviceSelectionDoneDelegate_Parms,NULL);
}

struct Engine_GetSkillForCurrentPlayer_Parms
{
	struct FUniqueNetId                                Player;                                           		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
};

int UOnlineRecentPlayersList::GetSkillForCurrentPlayer(struct FUniqueNetId Player)
{
	static UFieldFunc* pFnGetSkillForCurrentPlayer = NULL;
	if(!pFnGetSkillForCurrentPlayer)
		pFnGetSkillForCurrentPlayer = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.GetSkillForCurrentPlayer");

	Engine_GetSkillForCurrentPlayer_Parms GetSkillForCurrentPlayer_Parms;
	memcpy(&GetSkillForCurrentPlayer_Parms.Player,&Player,0x8);
	ProcessEvent(pFnGetSkillForCurrentPlayer,NULL,&GetSkillForCurrentPlayer_Parms,NULL);
	return GetSkillForCurrentPlayer_Parms.ReturnValue;
}

struct Engine_SetLastParty_Parms
{
	struct FUniqueNetId                                PartyLeader;                                      		// 0x000000 (0x0008)              
	TArray<struct FUniqueNetId>                        PartyMembers;                                     		// 0x000008 (0x000C)              
};

void UOnlineRecentPlayersList::SetLastParty(struct FUniqueNetId PartyLeader,TArray<struct FUniqueNetId>* PartyMembers)
{
	static UFieldFunc* pFnSetLastParty = NULL;
	if(!pFnSetLastParty)
		pFnSetLastParty = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.SetLastParty");

	Engine_SetLastParty_Parms SetLastParty_Parms;
	memcpy(&SetLastParty_Parms.PartyLeader,&PartyLeader,0x8);
	ProcessEvent(pFnSetLastParty,NULL,&SetLastParty_Parms,NULL);
	if(PartyMembers)
		memcpy(PartyMembers,&SetLastParty_Parms.PartyMembers,0xC);
}

struct Engine_ClearRecentPlayers_Parms
{
};

void UOnlineRecentPlayersList::ClearRecentPlayers()
{
	static UFieldFunc* pFnClearRecentPlayers = NULL;
	if(!pFnClearRecentPlayers)
		pFnClearRecentPlayers = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.ClearRecentPlayers");

	Engine_ClearRecentPlayers_Parms ClearRecentPlayers_Parms;
	ProcessEvent(pFnClearRecentPlayers,NULL,&ClearRecentPlayers_Parms,NULL);
}

struct Engine_ClearRecentParties_Parms
{
};

void UOnlineRecentPlayersList::ClearRecentParties()
{
	static UFieldFunc* pFnClearRecentParties = NULL;
	if(!pFnClearRecentParties)
		pFnClearRecentParties = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.ClearRecentParties");

	Engine_ClearRecentParties_Parms ClearRecentParties_Parms;
	ProcessEvent(pFnClearRecentParties,NULL,&ClearRecentParties_Parms,NULL);
}

struct Engine_DumpPlayersList_Parms
{
	TArray<struct FCurrentPlayerMet>                   Players;                                          		// 0x000000 (0x000C)              
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x00000C (0x0004)              
	//int                                                PlayerIdx;                                        		// 0x000010 (0x0004)              
	//int                                                TeamNum;                                          		// 0x000014 (0x0004)              
	//struct FUniqueNetId                                NetId;                                            		// 0x000018 (0x0008)              
};

void UOnlineRecentPlayersList::DumpPlayersList(TArray<struct FCurrentPlayerMet>* Players)
{
	static UFieldFunc* pFnDumpPlayersList = NULL;
	if(!pFnDumpPlayersList)
		pFnDumpPlayersList = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.DumpPlayersList");

	Engine_DumpPlayersList_Parms DumpPlayersList_Parms;
	ProcessEvent(pFnDumpPlayersList,NULL,&DumpPlayersList_Parms,NULL);
	if(Players)
		memcpy(Players,&DumpPlayersList_Parms.Players,0xC);
}

struct Engine_ShowRecentPartiesPlayerList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     Title;                                            		// 0x000004 (0x000C)              
	struct FString                                     Description;                                      		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000020 (0x0004)              
	//TArray<struct FUniqueNetId>                        Players;                                          		// 0x000024 (0x000C)              
};

bool UOnlineRecentPlayersList::ShowRecentPartiesPlayerList(unsigned char LocalUserNum,struct FString Title,struct FString Description)
{
	static UFieldFunc* pFnShowRecentPartiesPlayerList = NULL;
	if(!pFnShowRecentPartiesPlayerList)
		pFnShowRecentPartiesPlayerList = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.ShowRecentPartiesPlayerList");

	Engine_ShowRecentPartiesPlayerList_Parms ShowRecentPartiesPlayerList_Parms;
	ShowRecentPartiesPlayerList_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowRecentPartiesPlayerList_Parms.Title,&Title,0xC);
	memcpy(&ShowRecentPartiesPlayerList_Parms.Description,&Description,0xC);
	ProcessEvent(pFnShowRecentPartiesPlayerList,NULL,&ShowRecentPartiesPlayerList_Parms,NULL);
	return ShowRecentPartiesPlayerList_Parms.ReturnValue;
}

struct Engine_SetCurrentPlayersList_Parms
{
	TArray<struct FCurrentPlayerMet>                   Players;                                          		// 0x000000 (0x000C)              
};

void UOnlineRecentPlayersList::SetCurrentPlayersList(TArray<struct FCurrentPlayerMet> Players)
{
	static UFieldFunc* pFnSetCurrentPlayersList = NULL;
	if(!pFnSetCurrentPlayersList)
		pFnSetCurrentPlayersList = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.SetCurrentPlayersList");

	Engine_SetCurrentPlayersList_Parms SetCurrentPlayersList_Parms;
	memcpy(&SetCurrentPlayersList_Parms.Players,&Players,0xC);
	ProcessEvent(pFnSetCurrentPlayersList,NULL,&SetCurrentPlayersList_Parms,NULL);
}

struct Engine_GetCurrentPlayersListCount_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UOnlineRecentPlayersList::GetCurrentPlayersListCount()
{
	static UFieldFunc* pFnGetCurrentPlayersListCount = NULL;
	if(!pFnGetCurrentPlayersListCount)
		pFnGetCurrentPlayersListCount = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.GetCurrentPlayersListCount");

	Engine_GetCurrentPlayersListCount_Parms GetCurrentPlayersListCount_Parms;
	ProcessEvent(pFnGetCurrentPlayersListCount,NULL,&GetCurrentPlayersListCount_Parms,NULL);
	return GetCurrentPlayersListCount_Parms.ReturnValue;
}

struct Engine_ShowCurrentPlayersList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     Title;                                            		// 0x000004 (0x000C)              
	struct FString                                     Description;                                      		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000020 (0x0004)              
	//TArray<struct FUniqueNetId>                        Players;                                          		// 0x000024 (0x000C)              
};

bool UOnlineRecentPlayersList::ShowCurrentPlayersList(unsigned char LocalUserNum,struct FString Title,struct FString Description)
{
	static UFieldFunc* pFnShowCurrentPlayersList = NULL;
	if(!pFnShowCurrentPlayersList)
		pFnShowCurrentPlayersList = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.ShowCurrentPlayersList");

	Engine_ShowCurrentPlayersList_Parms ShowCurrentPlayersList_Parms;
	ShowCurrentPlayersList_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowCurrentPlayersList_Parms.Title,&Title,0xC);
	memcpy(&ShowCurrentPlayersList_Parms.Description,&Description,0xC);
	ProcessEvent(pFnShowCurrentPlayersList,NULL,&ShowCurrentPlayersList_Parms,NULL);
	return ShowCurrentPlayersList_Parms.ReturnValue;
}

struct Engine_ShowRecentPlayerList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     Title;                                            		// 0x000004 (0x000C)              
	struct FString                                     Description;                                      		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000020 (0x0004)              
};

bool UOnlineRecentPlayersList::ShowRecentPlayerList(unsigned char LocalUserNum,struct FString Title,struct FString Description)
{
	static UFieldFunc* pFnShowRecentPlayerList = NULL;
	if(!pFnShowRecentPlayerList)
		pFnShowRecentPlayerList = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.ShowRecentPlayerList");

	Engine_ShowRecentPlayerList_Parms ShowRecentPlayerList_Parms;
	ShowRecentPlayerList_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowRecentPlayerList_Parms.Title,&Title,0xC);
	memcpy(&ShowRecentPlayerList_Parms.Description,&Description,0xC);
	ProcessEvent(pFnShowRecentPlayerList,NULL,&ShowRecentPlayerList_Parms,NULL);
	return ShowRecentPlayerList_Parms.ReturnValue;
}

struct Engine_GetPlayersFromCurrentPlayers_Parms
{
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000000 (0x000C)              
	//int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
};

void UOnlineRecentPlayersList::GetPlayersFromCurrentPlayers(TArray<struct FUniqueNetId>* Players)
{
	static UFieldFunc* pFnGetPlayersFromCurrentPlayers = NULL;
	if(!pFnGetPlayersFromCurrentPlayers)
		pFnGetPlayersFromCurrentPlayers = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.GetPlayersFromCurrentPlayers");

	Engine_GetPlayersFromCurrentPlayers_Parms GetPlayersFromCurrentPlayers_Parms;
	ProcessEvent(pFnGetPlayersFromCurrentPlayers,NULL,&GetPlayersFromCurrentPlayers_Parms,NULL);
	if(Players)
		memcpy(Players,&GetPlayersFromCurrentPlayers_Parms.Players,0xC);
}

struct Engine_DumpCurrentPlayers_Parms
{
};

void UOnlineRecentPlayersList::DumpCurrentPlayers()
{
	static UFieldFunc* pFnDumpCurrentPlayers = NULL;
	if(!pFnDumpCurrentPlayers)
		pFnDumpCurrentPlayers = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.DumpCurrentPlayers");

	Engine_DumpCurrentPlayers_Parms DumpCurrentPlayers_Parms;
	ProcessEvent(pFnDumpCurrentPlayers,NULL,&DumpCurrentPlayers_Parms,NULL);
}

struct Engine_AddPartyToRecentParties_Parms
{
	struct FUniqueNetId                                PartyLeader;                                      		// 0x000000 (0x0008)              
	TArray<struct FUniqueNetId>                        PartyMembers;                                     		// 0x000008 (0x000C)              
	//int                                                FindIndex;                                        		// 0x000014 (0x0004)              
};

void UOnlineRecentPlayersList::AddPartyToRecentParties(struct FUniqueNetId PartyLeader,TArray<struct FUniqueNetId>* PartyMembers)
{
	static UFieldFunc* pFnAddPartyToRecentParties = NULL;
	if(!pFnAddPartyToRecentParties)
		pFnAddPartyToRecentParties = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.AddPartyToRecentParties");

	Engine_AddPartyToRecentParties_Parms AddPartyToRecentParties_Parms;
	memcpy(&AddPartyToRecentParties_Parms.PartyLeader,&PartyLeader,0x8);
	ProcessEvent(pFnAddPartyToRecentParties,NULL,&AddPartyToRecentParties_Parms,NULL);
	if(PartyMembers)
		memcpy(PartyMembers,&AddPartyToRecentParties_Parms.PartyMembers,0xC);
}

struct Engine_GetTeamForCurrentPlayer_Parms
{
	struct FUniqueNetId                                Player;                                           		// 0x000000 (0x0008)              
	int                                                ReturnValue;                                      		// 0x000008 (0x0004)              
	//int                                                PlayerIndex;                                      		// 0x00000C (0x0004)              
};

int UOnlineRecentPlayersList::GetTeamForCurrentPlayer(struct FUniqueNetId Player)
{
	static UFieldFunc* pFnGetTeamForCurrentPlayer = NULL;
	if(!pFnGetTeamForCurrentPlayer)
		pFnGetTeamForCurrentPlayer = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.GetTeamForCurrentPlayer");

	Engine_GetTeamForCurrentPlayer_Parms GetTeamForCurrentPlayer_Parms;
	memcpy(&GetTeamForCurrentPlayer_Parms.Player,&Player,0x8);
	ProcessEvent(pFnGetTeamForCurrentPlayer,NULL,&GetTeamForCurrentPlayer_Parms,NULL);
	return GetTeamForCurrentPlayer_Parms.ReturnValue;
}

struct Engine_GetPlayersFromRecentParties_Parms
{
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000000 (0x000C)              
	//int                                                PartyIndex;                                       		// 0x00000C (0x0004)              
	//int                                                MemberIndex;                                      		// 0x000010 (0x0004)              
	//int                                                AddMemberAt;                                      		// 0x000014 (0x0004)              
};

void UOnlineRecentPlayersList::GetPlayersFromRecentParties(TArray<struct FUniqueNetId>* Players)
{
	static UFieldFunc* pFnGetPlayersFromRecentParties = NULL;
	if(!pFnGetPlayersFromRecentParties)
		pFnGetPlayersFromRecentParties = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.GetPlayersFromRecentParties");

	Engine_GetPlayersFromRecentParties_Parms GetPlayersFromRecentParties_Parms;
	ProcessEvent(pFnGetPlayersFromRecentParties,NULL,&GetPlayersFromRecentParties_Parms,NULL);
	if(Players)
		memcpy(Players,&GetPlayersFromRecentParties_Parms.Players,0xC);
}

struct Engine_AddPlayerToRecentPlayers_Parms
{
	struct FUniqueNetId                                NewPlayer;                                        		// 0x000000 (0x0008)              
	//int                                                FindIndex;                                        		// 0x000008 (0x0004)              
};

void UOnlineRecentPlayersList::AddPlayerToRecentPlayers(struct FUniqueNetId NewPlayer)
{
	static UFieldFunc* pFnAddPlayerToRecentPlayers = NULL;
	if(!pFnAddPlayerToRecentPlayers)
		pFnAddPlayerToRecentPlayers = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.AddPlayerToRecentPlayers");

	Engine_AddPlayerToRecentPlayers_Parms AddPlayerToRecentPlayers_Parms;
	memcpy(&AddPlayerToRecentPlayers_Parms.NewPlayer,&NewPlayer,0x8);
	ProcessEvent(pFnAddPlayerToRecentPlayers,NULL,&AddPlayerToRecentPlayers_Parms,NULL);
}

struct Engine_ShowLastPartyPlayerList_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FString                                     Title;                                            		// 0x000004 (0x000C)              
	struct FString                                     Description;                                      		// 0x000010 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00001C (0x0004) [0x00000001] 
	//class UOnlineSubsystem*                            OnlineSub;                                        		// 0x000020 (0x0004)              
};

bool UOnlineRecentPlayersList::ShowLastPartyPlayerList(unsigned char LocalUserNum,struct FString Title,struct FString Description)
{
	static UFieldFunc* pFnShowLastPartyPlayerList = NULL;
	if(!pFnShowLastPartyPlayerList)
		pFnShowLastPartyPlayerList = UObject::FindFunction("Function Engine.OnlineRecentPlayersList.ShowLastPartyPlayerList");

	Engine_ShowLastPartyPlayerList_Parms ShowLastPartyPlayerList_Parms;
	ShowLastPartyPlayerList_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ShowLastPartyPlayerList_Parms.Title,&Title,0xC);
	memcpy(&ShowLastPartyPlayerList_Parms.Description,&Description,0xC);
	ProcessEvent(pFnShowLastPartyPlayerList,NULL,&ShowLastPartyPlayerList_Parms,NULL);
	return ShowLastPartyPlayerList_Parms.ReturnValue;
}

struct Engine_ClearPostImageCompleted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PostImageDelegate;                                		// 0x000004 (0x000C)              
};

void UOnlineSocialInterface::ClearPostImageCompleted(unsigned char LocalUserNum,struct FScriptDelegate PostImageDelegate)
{
	static UFieldFunc* pFnClearPostImageCompleted = NULL;
	if(!pFnClearPostImageCompleted)
		pFnClearPostImageCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.ClearPostImageCompleted");

	Engine_ClearPostImageCompleted_Parms ClearPostImageCompleted_Parms;
	ClearPostImageCompleted_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearPostImageCompleted_Parms.PostImageDelegate,&PostImageDelegate,0xC);
	ProcessEvent(pFnClearPostImageCompleted,NULL,&ClearPostImageCompleted_Parms,NULL);
}

struct Engine_OnQuerySocialPostPrivilegesCompleted_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FSocialPostPrivileges                       PostPrivileges;                                   		// 0x000004 (0x0004)              
};

void UOnlineSocialInterface::OnQuerySocialPostPrivilegesCompleted(bool bWasSuccessful,struct FSocialPostPrivileges PostPrivileges)
{
	static UFieldFunc* pFnOnQuerySocialPostPrivilegesCompleted = NULL;
	if(!pFnOnQuerySocialPostPrivilegesCompleted)
		pFnOnQuerySocialPostPrivilegesCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.OnQuerySocialPostPrivilegesCompleted");

	Engine_OnQuerySocialPostPrivilegesCompleted_Parms OnQuerySocialPostPrivilegesCompleted_Parms;
	OnQuerySocialPostPrivilegesCompleted_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnQuerySocialPostPrivilegesCompleted_Parms.PostPrivileges,&PostPrivileges,0x4);
	ProcessEvent(pFnOnQuerySocialPostPrivilegesCompleted,NULL,&OnQuerySocialPostPrivilegesCompleted_Parms,NULL);
}

struct Engine_AddPostLinkCompleted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PostLinkDelegate;                                 		// 0x000004 (0x000C)              
};

void UOnlineSocialInterface::AddPostLinkCompleted(unsigned char LocalUserNum,struct FScriptDelegate PostLinkDelegate)
{
	static UFieldFunc* pFnAddPostLinkCompleted = NULL;
	if(!pFnAddPostLinkCompleted)
		pFnAddPostLinkCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.AddPostLinkCompleted");

	Engine_AddPostLinkCompleted_Parms AddPostLinkCompleted_Parms;
	AddPostLinkCompleted_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddPostLinkCompleted_Parms.PostLinkDelegate,&PostLinkDelegate,0xC);
	ProcessEvent(pFnAddPostLinkCompleted,NULL,&AddPostLinkCompleted_Parms,NULL);
}

struct Engine_OnPostImageCompleted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlineSocialInterface::OnPostImageCompleted(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnPostImageCompleted = NULL;
	if(!pFnOnPostImageCompleted)
		pFnOnPostImageCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.OnPostImageCompleted");

	Engine_OnPostImageCompleted_Parms OnPostImageCompleted_Parms;
	OnPostImageCompleted_Parms.LocalUserNum = LocalUserNum;
	OnPostImageCompleted_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnPostImageCompleted,NULL,&OnPostImageCompleted_Parms,NULL);
}

struct Engine_QuerySocialPostPrivileges_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineSocialInterface::QuerySocialPostPrivileges()
{
	static UFieldFunc* pFnQuerySocialPostPrivileges = NULL;
	if(!pFnQuerySocialPostPrivileges)
		pFnQuerySocialPostPrivileges = UObject::FindFunction("Function Engine.OnlineSocialInterface.QuerySocialPostPrivileges");

	Engine_QuerySocialPostPrivileges_Parms QuerySocialPostPrivileges_Parms;
	ProcessEvent(pFnQuerySocialPostPrivileges,NULL,&QuerySocialPostPrivileges_Parms,NULL);
	return QuerySocialPostPrivileges_Parms.ReturnValue;
}

struct Engine_ClearPostLinkCompleted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PostLinkDelegate;                                 		// 0x000004 (0x000C)              
};

void UOnlineSocialInterface::ClearPostLinkCompleted(unsigned char LocalUserNum,struct FScriptDelegate PostLinkDelegate)
{
	static UFieldFunc* pFnClearPostLinkCompleted = NULL;
	if(!pFnClearPostLinkCompleted)
		pFnClearPostLinkCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.ClearPostLinkCompleted");

	Engine_ClearPostLinkCompleted_Parms ClearPostLinkCompleted_Parms;
	ClearPostLinkCompleted_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearPostLinkCompleted_Parms.PostLinkDelegate,&PostLinkDelegate,0xC);
	ProcessEvent(pFnClearPostLinkCompleted,NULL,&ClearPostLinkCompleted_Parms,NULL);
}

struct Engine_AddQuerySocialPostPrivilegesCompleted_Parms
{
	struct FScriptDelegate                             PostPrivilegesDelegate;                           		// 0x000000 (0x000C)              
};

void UOnlineSocialInterface::AddQuerySocialPostPrivilegesCompleted(struct FScriptDelegate PostPrivilegesDelegate)
{
	static UFieldFunc* pFnAddQuerySocialPostPrivilegesCompleted = NULL;
	if(!pFnAddQuerySocialPostPrivilegesCompleted)
		pFnAddQuerySocialPostPrivilegesCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.AddQuerySocialPostPrivilegesCompleted");

	Engine_AddQuerySocialPostPrivilegesCompleted_Parms AddQuerySocialPostPrivilegesCompleted_Parms;
	memcpy(&AddQuerySocialPostPrivilegesCompleted_Parms.PostPrivilegesDelegate,&PostPrivilegesDelegate,0xC);
	ProcessEvent(pFnAddQuerySocialPostPrivilegesCompleted,NULL,&AddQuerySocialPostPrivilegesCompleted_Parms,NULL);
}

struct Engine_ClearQuerySocialPostPrivilegesCompleted_Parms
{
	struct FScriptDelegate                             PostPrivilegesDelegate;                           		// 0x000000 (0x000C)              
};

void UOnlineSocialInterface::ClearQuerySocialPostPrivilegesCompleted(struct FScriptDelegate PostPrivilegesDelegate)
{
	static UFieldFunc* pFnClearQuerySocialPostPrivilegesCompleted = NULL;
	if(!pFnClearQuerySocialPostPrivilegesCompleted)
		pFnClearQuerySocialPostPrivilegesCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.ClearQuerySocialPostPrivilegesCompleted");

	Engine_ClearQuerySocialPostPrivilegesCompleted_Parms ClearQuerySocialPostPrivilegesCompleted_Parms;
	memcpy(&ClearQuerySocialPostPrivilegesCompleted_Parms.PostPrivilegesDelegate,&PostPrivilegesDelegate,0xC);
	ProcessEvent(pFnClearQuerySocialPostPrivilegesCompleted,NULL,&ClearQuerySocialPostPrivilegesCompleted_Parms,NULL);
}

struct Engine_OnPostLinkCompleted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlineSocialInterface::OnPostLinkCompleted(unsigned char LocalUserNum,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnPostLinkCompleted = NULL;
	if(!pFnOnPostLinkCompleted)
		pFnOnPostLinkCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.OnPostLinkCompleted");

	Engine_OnPostLinkCompleted_Parms OnPostLinkCompleted_Parms;
	OnPostLinkCompleted_Parms.LocalUserNum = LocalUserNum;
	OnPostLinkCompleted_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnPostLinkCompleted,NULL,&OnPostLinkCompleted_Parms,NULL);
}

struct Engine_PostLink_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FSocialPostLinkInfo                         PostLinkInfo;                                     		// 0x000004 (0x004C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000050 (0x0004) [0x00000001] 
};

bool UOnlineSocialInterface::PostLink(unsigned char LocalUserNum,struct FSocialPostLinkInfo* PostLinkInfo)
{
	static UFieldFunc* pFnPostLink = NULL;
	if(!pFnPostLink)
		pFnPostLink = UObject::FindFunction("Function Engine.OnlineSocialInterface.PostLink");

	Engine_PostLink_Parms PostLink_Parms;
	PostLink_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnPostLink,NULL,&PostLink_Parms,NULL);
	if(PostLinkInfo)
		memcpy(PostLinkInfo,&PostLink_Parms.PostLinkInfo,0x4C);
	return PostLink_Parms.ReturnValue;
}

struct Engine_PostImage_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FSocialPostImageInfo                        PostImageInfo;                                    		// 0x000004 (0x0034)              
	TArray<unsigned char>                              FullImage;                                        		// 0x000038 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000044 (0x0004) [0x00000001] 
};

bool UOnlineSocialInterface::PostImage(unsigned char LocalUserNum,struct FSocialPostImageInfo* PostImageInfo,TArray<unsigned char> FullImage)
{
	static UFieldFunc* pFnPostImage = NULL;
	if(!pFnPostImage)
		pFnPostImage = UObject::FindFunction("Function Engine.OnlineSocialInterface.PostImage");

	Engine_PostImage_Parms PostImage_Parms;
	PostImage_Parms.LocalUserNum = LocalUserNum;
	memcpy(&PostImage_Parms.FullImage,&FullImage,0xC);
	ProcessEvent(pFnPostImage,NULL,&PostImage_Parms,NULL);
	if(PostImageInfo)
		memcpy(PostImageInfo,&PostImage_Parms.PostImageInfo,0x34);
	return PostImage_Parms.ReturnValue;
}

struct Engine_AddPostImageCompleted_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             PostImageDelegate;                                		// 0x000004 (0x000C)              
};

void UOnlineSocialInterface::AddPostImageCompleted(unsigned char LocalUserNum,struct FScriptDelegate PostImageDelegate)
{
	static UFieldFunc* pFnAddPostImageCompleted = NULL;
	if(!pFnAddPostImageCompleted)
		pFnAddPostImageCompleted = UObject::FindFunction("Function Engine.OnlineSocialInterface.AddPostImageCompleted");

	Engine_AddPostImageCompleted_Parms AddPostImageCompleted_Parms;
	AddPostImageCompleted_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddPostImageCompleted_Parms.PostImageDelegate,&PostImageDelegate,0xC);
	ProcessEvent(pFnAddPostImageCompleted,NULL,&AddPostImageCompleted_Parms,NULL);
}

struct Engine_ReadOnlineStatsForFriends_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::ReadOnlineStatsForFriends(unsigned char LocalUserNum,class UOnlineStatsRead* StatsRead)
{
	static UFieldFunc* pFnReadOnlineStatsForFriends = NULL;
	if(!pFnReadOnlineStatsForFriends)
		pFnReadOnlineStatsForFriends = UObject::FindFunction("Function Engine.OnlineStatsInterface.ReadOnlineStatsForFriends");

	Engine_ReadOnlineStatsForFriends_Parms ReadOnlineStatsForFriends_Parms;
	ReadOnlineStatsForFriends_Parms.LocalUserNum = LocalUserNum;
	ReadOnlineStatsForFriends_Parms.StatsRead = StatsRead;
	ProcessEvent(pFnReadOnlineStatsForFriends,NULL,&ReadOnlineStatsForFriends_Parms,NULL);
	return ReadOnlineStatsForFriends_Parms.ReturnValue;
}

struct Engine_CalcAggregateSkill_Parms
{
	TArray<double>                                     Mus;                                              		// 0x000000 (0x000C)              
	TArray<double>                                     Sigmas;                                           		// 0x00000C (0x000C)              
	double                                             OutAggregateMu;                                   		// 0x000018 (0x0008)              
	double                                             OutAggregateSigma;                                		// 0x000020 (0x0008)              
};

void UOnlineStatsInterface::CalcAggregateSkill(TArray<double> Mus,TArray<double> Sigmas,double* OutAggregateMu,double* OutAggregateSigma)
{
	static UFieldFunc* pFnCalcAggregateSkill = NULL;
	if(!pFnCalcAggregateSkill)
		pFnCalcAggregateSkill = UObject::FindFunction("Function Engine.OnlineStatsInterface.CalcAggregateSkill");

	Engine_CalcAggregateSkill_Parms CalcAggregateSkill_Parms;
	memcpy(&CalcAggregateSkill_Parms.Mus,&Mus,0xC);
	memcpy(&CalcAggregateSkill_Parms.Sigmas,&Sigmas,0xC);
	ProcessEvent(pFnCalcAggregateSkill,NULL,&CalcAggregateSkill_Parms,NULL);
	if(OutAggregateMu)
		*OutAggregateMu = CalcAggregateSkill_Parms.OutAggregateMu;
	if(OutAggregateSigma)
		*OutAggregateSigma = CalcAggregateSkill_Parms.OutAggregateSigma;
}

struct Engine_ReadOnlineStatsByRank_Parms
{
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x000000 (0x0004)              
	int                                                StartIndex;                                       		// 0x000004 (0x0004)              
	int                                                NumToRead;                                        		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::ReadOnlineStatsByRank(class UOnlineStatsRead* StatsRead,int StartIndex,int NumToRead)
{
	static UFieldFunc* pFnReadOnlineStatsByRank = NULL;
	if(!pFnReadOnlineStatsByRank)
		pFnReadOnlineStatsByRank = UObject::FindFunction("Function Engine.OnlineStatsInterface.ReadOnlineStatsByRank");

	Engine_ReadOnlineStatsByRank_Parms ReadOnlineStatsByRank_Parms;
	ReadOnlineStatsByRank_Parms.StatsRead = StatsRead;
	ReadOnlineStatsByRank_Parms.StartIndex = StartIndex;
	ReadOnlineStatsByRank_Parms.NumToRead = NumToRead;
	ProcessEvent(pFnReadOnlineStatsByRank,NULL,&ReadOnlineStatsByRank_Parms,NULL);
	return ReadOnlineStatsByRank_Parms.ReturnValue;
}

struct Engine_ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms
{
	struct FScriptDelegate                             RegisterHostStatGuidCompleteDelegate;             		// 0x000000 (0x000C)              
};

void UOnlineStatsInterface::ClearRegisterHostStatGuidCompleteDelegateDelegate(struct FScriptDelegate RegisterHostStatGuidCompleteDelegate)
{
	static UFieldFunc* pFnClearRegisterHostStatGuidCompleteDelegateDelegate = NULL;
	if(!pFnClearRegisterHostStatGuidCompleteDelegateDelegate)
		pFnClearRegisterHostStatGuidCompleteDelegateDelegate = UObject::FindFunction("Function Engine.OnlineStatsInterface.ClearRegisterHostStatGuidCompleteDelegateDelegate");

	Engine_ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms;
	memcpy(&ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms.RegisterHostStatGuidCompleteDelegate,&RegisterHostStatGuidCompleteDelegate,0xC);
	ProcessEvent(pFnClearRegisterHostStatGuidCompleteDelegateDelegate,NULL,&ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms,NULL);
}

struct Engine_AddFlushOnlineStatsCompleteDelegate_Parms
{
	struct FScriptDelegate                             FlushOnlineStatsCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineStatsInterface::AddFlushOnlineStatsCompleteDelegate(struct FScriptDelegate FlushOnlineStatsCompleteDelegate)
{
	static UFieldFunc* pFnAddFlushOnlineStatsCompleteDelegate = NULL;
	if(!pFnAddFlushOnlineStatsCompleteDelegate)
		pFnAddFlushOnlineStatsCompleteDelegate = UObject::FindFunction("Function Engine.OnlineStatsInterface.AddFlushOnlineStatsCompleteDelegate");

	Engine_AddFlushOnlineStatsCompleteDelegate_Parms AddFlushOnlineStatsCompleteDelegate_Parms;
	memcpy(&AddFlushOnlineStatsCompleteDelegate_Parms.FlushOnlineStatsCompleteDelegate,&FlushOnlineStatsCompleteDelegate,0xC);
	ProcessEvent(pFnAddFlushOnlineStatsCompleteDelegate,NULL,&AddFlushOnlineStatsCompleteDelegate_Parms,NULL);
}

struct Engine_AddReadOnlineStatsCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadOnlineStatsCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineStatsInterface::AddReadOnlineStatsCompleteDelegate(struct FScriptDelegate ReadOnlineStatsCompleteDelegate)
{
	static UFieldFunc* pFnAddReadOnlineStatsCompleteDelegate = NULL;
	if(!pFnAddReadOnlineStatsCompleteDelegate)
		pFnAddReadOnlineStatsCompleteDelegate = UObject::FindFunction("Function Engine.OnlineStatsInterface.AddReadOnlineStatsCompleteDelegate");

	Engine_AddReadOnlineStatsCompleteDelegate_Parms AddReadOnlineStatsCompleteDelegate_Parms;
	memcpy(&AddReadOnlineStatsCompleteDelegate_Parms.ReadOnlineStatsCompleteDelegate,&ReadOnlineStatsCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadOnlineStatsCompleteDelegate,NULL,&AddReadOnlineStatsCompleteDelegate_Parms,NULL);
}

struct Engine_ReadOnlineStats_Parms
{
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000000 (0x000C)              
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::ReadOnlineStats(TArray<struct FUniqueNetId>* Players,class UOnlineStatsRead* StatsRead)
{
	static UFieldFunc* pFnReadOnlineStats = NULL;
	if(!pFnReadOnlineStats)
		pFnReadOnlineStats = UObject::FindFunction("Function Engine.OnlineStatsInterface.ReadOnlineStats");

	Engine_ReadOnlineStats_Parms ReadOnlineStats_Parms;
	ReadOnlineStats_Parms.StatsRead = StatsRead;
	ProcessEvent(pFnReadOnlineStats,NULL,&ReadOnlineStats_Parms,NULL);
	if(Players)
		memcpy(Players,&ReadOnlineStats_Parms.Players,0xC);
	return ReadOnlineStats_Parms.ReturnValue;
}

struct Engine_RegisterHostStatGuid_Parms
{
	struct FString                                     HostStatGuid;                                     		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::RegisterHostStatGuid(struct FString* HostStatGuid)
{
	static UFieldFunc* pFnRegisterHostStatGuid = NULL;
	if(!pFnRegisterHostStatGuid)
		pFnRegisterHostStatGuid = UObject::FindFunction("Function Engine.OnlineStatsInterface.RegisterHostStatGuid");

	Engine_RegisterHostStatGuid_Parms RegisterHostStatGuid_Parms;
	ProcessEvent(pFnRegisterHostStatGuid,NULL,&RegisterHostStatGuid_Parms,NULL);
	if(HostStatGuid)
		memcpy(HostStatGuid,&RegisterHostStatGuid_Parms.HostStatGuid,0xC);
	return RegisterHostStatGuid_Parms.ReturnValue;
}

struct Engine_ReadOnlineStatsByRankAroundPlayer_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x000004 (0x0004)              
	int                                                NumRows;                                          		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::ReadOnlineStatsByRankAroundPlayer(unsigned char LocalUserNum,class UOnlineStatsRead* StatsRead,int NumRows)
{
	static UFieldFunc* pFnReadOnlineStatsByRankAroundPlayer = NULL;
	if(!pFnReadOnlineStatsByRankAroundPlayer)
		pFnReadOnlineStatsByRankAroundPlayer = UObject::FindFunction("Function Engine.OnlineStatsInterface.ReadOnlineStatsByRankAroundPlayer");

	Engine_ReadOnlineStatsByRankAroundPlayer_Parms ReadOnlineStatsByRankAroundPlayer_Parms;
	ReadOnlineStatsByRankAroundPlayer_Parms.LocalUserNum = LocalUserNum;
	ReadOnlineStatsByRankAroundPlayer_Parms.StatsRead = StatsRead;
	ReadOnlineStatsByRankAroundPlayer_Parms.NumRows = NumRows;
	ProcessEvent(pFnReadOnlineStatsByRankAroundPlayer,NULL,&ReadOnlineStatsByRankAroundPlayer_Parms,NULL);
	return ReadOnlineStatsByRankAroundPlayer_Parms.ReturnValue;
}

struct Engine_OnReadOnlineStatsComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineStatsInterface::OnReadOnlineStatsComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnReadOnlineStatsComplete = NULL;
	if(!pFnOnReadOnlineStatsComplete)
		pFnOnReadOnlineStatsComplete = UObject::FindFunction("Function Engine.OnlineStatsInterface.OnReadOnlineStatsComplete");

	Engine_OnReadOnlineStatsComplete_Parms OnReadOnlineStatsComplete_Parms;
	OnReadOnlineStatsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnReadOnlineStatsComplete,NULL,&OnReadOnlineStatsComplete_Parms,NULL);
}

struct Engine_OnFlushOnlineStatsComplete_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineStatsInterface::OnFlushOnlineStatsComplete(struct FName SessionName,bool bWasSuccessful)
{
	static UFieldFunc* pFnOnFlushOnlineStatsComplete = NULL;
	if(!pFnOnFlushOnlineStatsComplete)
		pFnOnFlushOnlineStatsComplete = UObject::FindFunction("Function Engine.OnlineStatsInterface.OnFlushOnlineStatsComplete");

	Engine_OnFlushOnlineStatsComplete_Parms OnFlushOnlineStatsComplete_Parms;
	memcpy(&OnFlushOnlineStatsComplete_Parms.SessionName,&SessionName,0x8);
	OnFlushOnlineStatsComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnFlushOnlineStatsComplete,NULL,&OnFlushOnlineStatsComplete_Parms,NULL);
}

struct Engine_ClearReadOnlineStatsCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadOnlineStatsCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void UOnlineStatsInterface::ClearReadOnlineStatsCompleteDelegate(struct FScriptDelegate ReadOnlineStatsCompleteDelegate)
{
	static UFieldFunc* pFnClearReadOnlineStatsCompleteDelegate = NULL;
	if(!pFnClearReadOnlineStatsCompleteDelegate)
		pFnClearReadOnlineStatsCompleteDelegate = UObject::FindFunction("Function Engine.OnlineStatsInterface.ClearReadOnlineStatsCompleteDelegate");

	Engine_ClearReadOnlineStatsCompleteDelegate_Parms ClearReadOnlineStatsCompleteDelegate_Parms;
	memcpy(&ClearReadOnlineStatsCompleteDelegate_Parms.ReadOnlineStatsCompleteDelegate,&ReadOnlineStatsCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadOnlineStatsCompleteDelegate,NULL,&ClearReadOnlineStatsCompleteDelegate_Parms,NULL);
}

struct Engine_ClearFlushOnlineStatsCompleteDelegate_Parms
{
	struct FScriptDelegate                             FlushOnlineStatsCompleteDelegate;                 		// 0x000000 (0x000C)              
};

void UOnlineStatsInterface::ClearFlushOnlineStatsCompleteDelegate(struct FScriptDelegate FlushOnlineStatsCompleteDelegate)
{
	static UFieldFunc* pFnClearFlushOnlineStatsCompleteDelegate = NULL;
	if(!pFnClearFlushOnlineStatsCompleteDelegate)
		pFnClearFlushOnlineStatsCompleteDelegate = UObject::FindFunction("Function Engine.OnlineStatsInterface.ClearFlushOnlineStatsCompleteDelegate");

	Engine_ClearFlushOnlineStatsCompleteDelegate_Parms ClearFlushOnlineStatsCompleteDelegate_Parms;
	memcpy(&ClearFlushOnlineStatsCompleteDelegate_Parms.FlushOnlineStatsCompleteDelegate,&FlushOnlineStatsCompleteDelegate,0xC);
	ProcessEvent(pFnClearFlushOnlineStatsCompleteDelegate,NULL,&ClearFlushOnlineStatsCompleteDelegate_Parms,NULL);
}

struct Engine_FlushOnlineStats_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::FlushOnlineStats(struct FName SessionName)
{
	static UFieldFunc* pFnFlushOnlineStats = NULL;
	if(!pFnFlushOnlineStats)
		pFnFlushOnlineStats = UObject::FindFunction("Function Engine.OnlineStatsInterface.FlushOnlineStats");

	Engine_FlushOnlineStats_Parms FlushOnlineStats_Parms;
	memcpy(&FlushOnlineStats_Parms.SessionName,&SessionName,0x8);
	ProcessEvent(pFnFlushOnlineStats,NULL,&FlushOnlineStats_Parms,NULL);
	return FlushOnlineStats_Parms.ReturnValue;
}

struct Engine_RegisterStatGuid_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	struct FString                                     ClientStatGuid;                                   		// 0x000008 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::RegisterStatGuid(struct FUniqueNetId PlayerID,struct FString* ClientStatGuid)
{
	static UFieldFunc* pFnRegisterStatGuid = NULL;
	if(!pFnRegisterStatGuid)
		pFnRegisterStatGuid = UObject::FindFunction("Function Engine.OnlineStatsInterface.RegisterStatGuid");

	Engine_RegisterStatGuid_Parms RegisterStatGuid_Parms;
	memcpy(&RegisterStatGuid_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnRegisterStatGuid,NULL,&RegisterStatGuid_Parms,NULL);
	if(ClientStatGuid)
		memcpy(ClientStatGuid,&RegisterStatGuid_Parms.ClientStatGuid,0xC);
	return RegisterStatGuid_Parms.ReturnValue;
}

struct Engine_WriteOnlineStats_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	struct FUniqueNetId                                Player;                                           		// 0x000008 (0x0008)              
	class UOnlineStatsWrite*                           StatsWrite;                                       		// 0x000010 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000014 (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::WriteOnlineStats(struct FName SessionName,struct FUniqueNetId Player,class UOnlineStatsWrite* StatsWrite)
{
	static UFieldFunc* pFnWriteOnlineStats = NULL;
	if(!pFnWriteOnlineStats)
		pFnWriteOnlineStats = UObject::FindFunction("Function Engine.OnlineStatsInterface.WriteOnlineStats");

	Engine_WriteOnlineStats_Parms WriteOnlineStats_Parms;
	memcpy(&WriteOnlineStats_Parms.SessionName,&SessionName,0x8);
	memcpy(&WriteOnlineStats_Parms.Player,&Player,0x8);
	WriteOnlineStats_Parms.StatsWrite = StatsWrite;
	ProcessEvent(pFnWriteOnlineStats,NULL,&WriteOnlineStats_Parms,NULL);
	return WriteOnlineStats_Parms.ReturnValue;
}

struct Engine_GetClientStatGuid_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UOnlineStatsInterface::GetClientStatGuid()
{
	static UFieldFunc* pFnGetClientStatGuid = NULL;
	if(!pFnGetClientStatGuid)
		pFnGetClientStatGuid = UObject::FindFunction("Function Engine.OnlineStatsInterface.GetClientStatGuid");

	Engine_GetClientStatGuid_Parms GetClientStatGuid_Parms;
	ProcessEvent(pFnGetClientStatGuid,NULL,&GetClientStatGuid_Parms,NULL);
	return GetClientStatGuid_Parms.ReturnValue;
}

struct Engine_FreeStats_Parms
{
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x000000 (0x0004)              
};

void UOnlineStatsInterface::FreeStats(class UOnlineStatsRead* StatsRead)
{
	static UFieldFunc* pFnFreeStats = NULL;
	if(!pFnFreeStats)
		pFnFreeStats = UObject::FindFunction("Function Engine.OnlineStatsInterface.FreeStats");

	Engine_FreeStats_Parms FreeStats_Parms;
	FreeStats_Parms.StatsRead = StatsRead;
	ProcessEvent(pFnFreeStats,NULL,&FreeStats_Parms,NULL);
}

struct Engine_WriteOnlinePlayerScores_Parms
{
	struct FName                                       SessionName;                                      		// 0x000000 (0x0008)              
	int                                                LeaderboardId;                                    		// 0x000008 (0x0004)              
	TArray<struct FOnlinePlayerScore>                  PlayerScores;                                     		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineStatsInterface::WriteOnlinePlayerScores(struct FName SessionName,int LeaderboardId,TArray<struct FOnlinePlayerScore>* PlayerScores)
{
	static UFieldFunc* pFnWriteOnlinePlayerScores = NULL;
	if(!pFnWriteOnlinePlayerScores)
		pFnWriteOnlinePlayerScores = UObject::FindFunction("Function Engine.OnlineStatsInterface.WriteOnlinePlayerScores");

	Engine_WriteOnlinePlayerScores_Parms WriteOnlinePlayerScores_Parms;
	memcpy(&WriteOnlinePlayerScores_Parms.SessionName,&SessionName,0x8);
	WriteOnlinePlayerScores_Parms.LeaderboardId = LeaderboardId;
	ProcessEvent(pFnWriteOnlinePlayerScores,NULL,&WriteOnlinePlayerScores_Parms,NULL);
	if(PlayerScores)
		memcpy(PlayerScores,&WriteOnlinePlayerScores_Parms.PlayerScores,0xC);
	return WriteOnlinePlayerScores_Parms.ReturnValue;
}

struct Engine_OnRegisterHostStatGuidComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineStatsInterface::OnRegisterHostStatGuidComplete(bool bWasSuccessful)
{
	static UFieldFunc* pFnOnRegisterHostStatGuidComplete = NULL;
	if(!pFnOnRegisterHostStatGuidComplete)
		pFnOnRegisterHostStatGuidComplete = UObject::FindFunction("Function Engine.OnlineStatsInterface.OnRegisterHostStatGuidComplete");

	Engine_OnRegisterHostStatGuidComplete_Parms OnRegisterHostStatGuidComplete_Parms;
	OnRegisterHostStatGuidComplete_Parms.bWasSuccessful = bWasSuccessful;
	ProcessEvent(pFnOnRegisterHostStatGuidComplete,NULL,&OnRegisterHostStatGuidComplete_Parms,NULL);
}

struct Engine_AddRegisterHostStatGuidCompleteDelegate_Parms
{
	struct FScriptDelegate                             RegisterHostStatGuidCompleteDelegate;             		// 0x000000 (0x000C)              
};

void UOnlineStatsInterface::AddRegisterHostStatGuidCompleteDelegate(struct FScriptDelegate RegisterHostStatGuidCompleteDelegate)
{
	static UFieldFunc* pFnAddRegisterHostStatGuidCompleteDelegate = NULL;
	if(!pFnAddRegisterHostStatGuidCompleteDelegate)
		pFnAddRegisterHostStatGuidCompleteDelegate = UObject::FindFunction("Function Engine.OnlineStatsInterface.AddRegisterHostStatGuidCompleteDelegate");

	Engine_AddRegisterHostStatGuidCompleteDelegate_Parms AddRegisterHostStatGuidCompleteDelegate_Parms;
	memcpy(&AddRegisterHostStatGuidCompleteDelegate_Parms.RegisterHostStatGuidCompleteDelegate,&RegisterHostStatGuidCompleteDelegate,0xC);
	ProcessEvent(pFnAddRegisterHostStatGuidCompleteDelegate,NULL,&AddRegisterHostStatGuidCompleteDelegate_Parms,NULL);
}

struct Engine_GetHostStatGuid_Parms
{
	struct FString                                     ReturnValue;                                      		// 0x000000 (0x000C)              
};

struct FString UOnlineStatsInterface::GetHostStatGuid()
{
	static UFieldFunc* pFnGetHostStatGuid = NULL;
	if(!pFnGetHostStatGuid)
		pFnGetHostStatGuid = UObject::FindFunction("Function Engine.OnlineStatsInterface.GetHostStatGuid");

	Engine_GetHostStatGuid_Parms GetHostStatGuid_Parms;
	ProcessEvent(pFnGetHostStatGuid,NULL,&GetHostStatGuid_Parms,NULL);
	return GetHostStatGuid_Parms.ReturnValue;
}

struct Engine_ShowOnlineStatsUI_Parms
{
	TArray<struct FUniqueNetId>                        Players;                                          		// 0x000000 (0x000C)              
	class UOnlineStatsRead*                            StatsRead;                                        		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineSuppliedUIInterface::ShowOnlineStatsUI(TArray<struct FUniqueNetId>* Players,class UOnlineStatsRead* StatsRead)
{
	static UFieldFunc* pFnShowOnlineStatsUI = NULL;
	if(!pFnShowOnlineStatsUI)
		pFnShowOnlineStatsUI = UObject::FindFunction("Function Engine.OnlineSuppliedUIInterface.ShowOnlineStatsUI");

	Engine_ShowOnlineStatsUI_Parms ShowOnlineStatsUI_Parms;
	ShowOnlineStatsUI_Parms.StatsRead = StatsRead;
	ProcessEvent(pFnShowOnlineStatsUI,NULL,&ShowOnlineStatsUI_Parms,NULL);
	if(Players)
		memcpy(Players,&ShowOnlineStatsUI_Parms.Players,0xC);
	return ShowOnlineStatsUI_Parms.ReturnValue;
}

struct Engine_ClearShowOnlineStatsUICompleteDelegate_Parms
{
	struct FScriptDelegate                             ShowOnlineStatsUICompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineSuppliedUIInterface::ClearShowOnlineStatsUICompleteDelegate(struct FScriptDelegate ShowOnlineStatsUICompleteDelegate)
{
	static UFieldFunc* pFnClearShowOnlineStatsUICompleteDelegate = NULL;
	if(!pFnClearShowOnlineStatsUICompleteDelegate)
		pFnClearShowOnlineStatsUICompleteDelegate = UObject::FindFunction("Function Engine.OnlineSuppliedUIInterface.ClearShowOnlineStatsUICompleteDelegate");

	Engine_ClearShowOnlineStatsUICompleteDelegate_Parms ClearShowOnlineStatsUICompleteDelegate_Parms;
	memcpy(&ClearShowOnlineStatsUICompleteDelegate_Parms.ShowOnlineStatsUICompleteDelegate,&ShowOnlineStatsUICompleteDelegate,0xC);
	ProcessEvent(pFnClearShowOnlineStatsUICompleteDelegate,NULL,&ClearShowOnlineStatsUICompleteDelegate_Parms,NULL);
}

struct Engine_AddShowOnlineStatsUICompleteDelegate_Parms
{
	struct FScriptDelegate                             ShowOnlineStatsUICompleteDelegate;                		// 0x000000 (0x000C)              
};

void UOnlineSuppliedUIInterface::AddShowOnlineStatsUICompleteDelegate(struct FScriptDelegate ShowOnlineStatsUICompleteDelegate)
{
	static UFieldFunc* pFnAddShowOnlineStatsUICompleteDelegate = NULL;
	if(!pFnAddShowOnlineStatsUICompleteDelegate)
		pFnAddShowOnlineStatsUICompleteDelegate = UObject::FindFunction("Function Engine.OnlineSuppliedUIInterface.AddShowOnlineStatsUICompleteDelegate");

	Engine_AddShowOnlineStatsUICompleteDelegate_Parms AddShowOnlineStatsUICompleteDelegate_Parms;
	memcpy(&AddShowOnlineStatsUICompleteDelegate_Parms.ShowOnlineStatsUICompleteDelegate,&ShowOnlineStatsUICompleteDelegate,0xC);
	ProcessEvent(pFnAddShowOnlineStatsUICompleteDelegate,NULL,&AddShowOnlineStatsUICompleteDelegate_Parms,NULL);
}

struct Engine_ShowMatchmakingUI_Parms
{
	unsigned char                                      SearchingPlayerNum;                               		// 0x000000 (0x0001)              
	class UOnlineGameSearch*                           SearchSettings;                                   		// 0x000004 (0x0004)              
	class UOnlineGameSettings*                         GameSettings;                                     		// 0x000008 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineSuppliedUIInterface::ShowMatchmakingUI(unsigned char SearchingPlayerNum,class UOnlineGameSearch* SearchSettings,class UOnlineGameSettings* GameSettings)
{
	static UFieldFunc* pFnShowMatchmakingUI = NULL;
	if(!pFnShowMatchmakingUI)
		pFnShowMatchmakingUI = UObject::FindFunction("Function Engine.OnlineSuppliedUIInterface.ShowMatchmakingUI");

	Engine_ShowMatchmakingUI_Parms ShowMatchmakingUI_Parms;
	ShowMatchmakingUI_Parms.SearchingPlayerNum = SearchingPlayerNum;
	ShowMatchmakingUI_Parms.SearchSettings = SearchSettings;
	ShowMatchmakingUI_Parms.GameSettings = GameSettings;
	ProcessEvent(pFnShowMatchmakingUI,NULL,&ShowMatchmakingUI_Parms,NULL);
	return ShowMatchmakingUI_Parms.ReturnValue;
}

struct Engine_OnShowOnlineStatsUIComplete_Parms
{
};

void UOnlineSuppliedUIInterface::OnShowOnlineStatsUIComplete()
{
	static UFieldFunc* pFnOnShowOnlineStatsUIComplete = NULL;
	if(!pFnOnShowOnlineStatsUIComplete)
		pFnOnShowOnlineStatsUIComplete = UObject::FindFunction("Function Engine.OnlineSuppliedUIInterface.OnShowOnlineStatsUIComplete");

	Engine_OnShowOnlineStatsUIComplete_Parms OnShowOnlineStatsUIComplete_Parms;
	ProcessEvent(pFnOnShowOnlineStatsUIComplete,NULL,&OnShowOnlineStatsUIComplete_Parms,NULL);
}

struct Engine_AddExternalUIChangeDelegate_Parms
{
	struct FScriptDelegate                             ExternalUIDelegate;                               		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::AddExternalUIChangeDelegate(struct FScriptDelegate ExternalUIDelegate)
{
	static UFieldFunc* pFnAddExternalUIChangeDelegate = NULL;
	if(!pFnAddExternalUIChangeDelegate)
		pFnAddExternalUIChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.AddExternalUIChangeDelegate");

	Engine_AddExternalUIChangeDelegate_Parms AddExternalUIChangeDelegate_Parms;
	memcpy(&AddExternalUIChangeDelegate_Parms.ExternalUIDelegate,&ExternalUIDelegate,0xC);
	ProcessEvent(pFnAddExternalUIChangeDelegate,NULL,&AddExternalUIChangeDelegate_Parms,NULL);
}

struct Engine_OnLinkStatusChange_Parms
{
	unsigned long                                      bIsConnected : 1;                                 		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineSystemInterface::OnLinkStatusChange(bool bIsConnected)
{
	static UFieldFunc* pFnOnLinkStatusChange = NULL;
	if(!pFnOnLinkStatusChange)
		pFnOnLinkStatusChange = UObject::FindFunction("Function Engine.OnlineSystemInterface.OnLinkStatusChange");

	Engine_OnLinkStatusChange_Parms OnLinkStatusChange_Parms;
	OnLinkStatusChange_Parms.bIsConnected = bIsConnected;
	ProcessEvent(pFnOnLinkStatusChange,NULL,&OnLinkStatusChange_Parms,NULL);
}

struct Engine_ClearStorageDeviceChangeDelegate_Parms
{
	struct FScriptDelegate                             StorageDeviceChangeDelegate;                      		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::ClearStorageDeviceChangeDelegate(struct FScriptDelegate StorageDeviceChangeDelegate)
{
	static UFieldFunc* pFnClearStorageDeviceChangeDelegate = NULL;
	if(!pFnClearStorageDeviceChangeDelegate)
		pFnClearStorageDeviceChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.ClearStorageDeviceChangeDelegate");

	Engine_ClearStorageDeviceChangeDelegate_Parms ClearStorageDeviceChangeDelegate_Parms;
	memcpy(&ClearStorageDeviceChangeDelegate_Parms.StorageDeviceChangeDelegate,&StorageDeviceChangeDelegate,0xC);
	ProcessEvent(pFnClearStorageDeviceChangeDelegate,NULL,&ClearStorageDeviceChangeDelegate_Parms,NULL);
}

struct Engine_GetLocale_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UOnlineSystemInterface::GetLocale()
{
	static UFieldFunc* pFnGetLocale = NULL;
	if(!pFnGetLocale)
		pFnGetLocale = UObject::FindFunction("Function Engine.OnlineSystemInterface.GetLocale");

	Engine_GetLocale_Parms GetLocale_Parms;
	ProcessEvent(pFnGetLocale,NULL,&GetLocale_Parms,NULL);
	return GetLocale_Parms.ReturnValue;
}

struct Engine_AddConnectionStatusChangeDelegate_Parms
{
	struct FScriptDelegate                             ConnectionStatusDelegate;                         		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::AddConnectionStatusChangeDelegate(struct FScriptDelegate ConnectionStatusDelegate)
{
	static UFieldFunc* pFnAddConnectionStatusChangeDelegate = NULL;
	if(!pFnAddConnectionStatusChangeDelegate)
		pFnAddConnectionStatusChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.AddConnectionStatusChangeDelegate");

	Engine_AddConnectionStatusChangeDelegate_Parms AddConnectionStatusChangeDelegate_Parms;
	memcpy(&AddConnectionStatusChangeDelegate_Parms.ConnectionStatusDelegate,&ConnectionStatusDelegate,0xC);
	ProcessEvent(pFnAddConnectionStatusChangeDelegate,NULL,&AddConnectionStatusChangeDelegate_Parms,NULL);
}

struct Engine_AddLinkStatusChangeDelegate_Parms
{
	struct FScriptDelegate                             LinkStatusDelegate;                               		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::AddLinkStatusChangeDelegate(struct FScriptDelegate LinkStatusDelegate)
{
	static UFieldFunc* pFnAddLinkStatusChangeDelegate = NULL;
	if(!pFnAddLinkStatusChangeDelegate)
		pFnAddLinkStatusChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.AddLinkStatusChangeDelegate");

	Engine_AddLinkStatusChangeDelegate_Parms AddLinkStatusChangeDelegate_Parms;
	memcpy(&AddLinkStatusChangeDelegate_Parms.LinkStatusDelegate,&LinkStatusDelegate,0xC);
	ProcessEvent(pFnAddLinkStatusChangeDelegate,NULL,&AddLinkStatusChangeDelegate_Parms,NULL);
}

struct Engine_GetNetworkNotificationPosition_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UOnlineSystemInterface::GetNetworkNotificationPosition()
{
	static UFieldFunc* pFnGetNetworkNotificationPosition = NULL;
	if(!pFnGetNetworkNotificationPosition)
		pFnGetNetworkNotificationPosition = UObject::FindFunction("Function Engine.OnlineSystemInterface.GetNetworkNotificationPosition");

	Engine_GetNetworkNotificationPosition_Parms GetNetworkNotificationPosition_Parms;
	ProcessEvent(pFnGetNetworkNotificationPosition,NULL,&GetNetworkNotificationPosition_Parms,NULL);
	return GetNetworkNotificationPosition_Parms.ReturnValue;
}

struct Engine_ClearLinkStatusChangeDelegate_Parms
{
	struct FScriptDelegate                             LinkStatusDelegate;                               		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::ClearLinkStatusChangeDelegate(struct FScriptDelegate LinkStatusDelegate)
{
	static UFieldFunc* pFnClearLinkStatusChangeDelegate = NULL;
	if(!pFnClearLinkStatusChangeDelegate)
		pFnClearLinkStatusChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.ClearLinkStatusChangeDelegate");

	Engine_ClearLinkStatusChangeDelegate_Parms ClearLinkStatusChangeDelegate_Parms;
	memcpy(&ClearLinkStatusChangeDelegate_Parms.LinkStatusDelegate,&LinkStatusDelegate,0xC);
	ProcessEvent(pFnClearLinkStatusChangeDelegate,NULL,&ClearLinkStatusChangeDelegate_Parms,NULL);
}

struct Engine_IsControllerConnected_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineSystemInterface::IsControllerConnected(int ControllerId)
{
	static UFieldFunc* pFnIsControllerConnected = NULL;
	if(!pFnIsControllerConnected)
		pFnIsControllerConnected = UObject::FindFunction("Function Engine.OnlineSystemInterface.IsControllerConnected");

	Engine_IsControllerConnected_Parms IsControllerConnected_Parms;
	IsControllerConnected_Parms.ControllerId = ControllerId;
	ProcessEvent(pFnIsControllerConnected,NULL,&IsControllerConnected_Parms,NULL);
	return IsControllerConnected_Parms.ReturnValue;
}

struct Engine_SetNetworkNotificationPosition_Parms
{
	unsigned char                                      NewPos;                                           		// 0x000000 (0x0001)              
};

void UOnlineSystemInterface::SetNetworkNotificationPosition(unsigned char NewPos)
{
	static UFieldFunc* pFnSetNetworkNotificationPosition = NULL;
	if(!pFnSetNetworkNotificationPosition)
		pFnSetNetworkNotificationPosition = UObject::FindFunction("Function Engine.OnlineSystemInterface.SetNetworkNotificationPosition");

	Engine_SetNetworkNotificationPosition_Parms SetNetworkNotificationPosition_Parms;
	SetNetworkNotificationPosition_Parms.NewPos = NewPos;
	ProcessEvent(pFnSetNetworkNotificationPosition,NULL,&SetNetworkNotificationPosition_Parms,NULL);
}

struct Engine_GetNATType_Parms
{
	unsigned char                                      ReturnValue;                                      		// 0x000000 (0x0001)              
};

unsigned char UOnlineSystemInterface::GetNATType()
{
	static UFieldFunc* pFnGetNATType = NULL;
	if(!pFnGetNATType)
		pFnGetNATType = UObject::FindFunction("Function Engine.OnlineSystemInterface.GetNATType");

	Engine_GetNATType_Parms GetNATType_Parms;
	ProcessEvent(pFnGetNATType,NULL,&GetNATType_Parms,NULL);
	return GetNATType_Parms.ReturnValue;
}

struct Engine_ClearControllerChangeDelegate_Parms
{
	struct FScriptDelegate                             ControllerChangeDelegate;                         		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::ClearControllerChangeDelegate(struct FScriptDelegate ControllerChangeDelegate)
{
	static UFieldFunc* pFnClearControllerChangeDelegate = NULL;
	if(!pFnClearControllerChangeDelegate)
		pFnClearControllerChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.ClearControllerChangeDelegate");

	Engine_ClearControllerChangeDelegate_Parms ClearControllerChangeDelegate_Parms;
	memcpy(&ClearControllerChangeDelegate_Parms.ControllerChangeDelegate,&ControllerChangeDelegate,0xC);
	ProcessEvent(pFnClearControllerChangeDelegate,NULL,&ClearControllerChangeDelegate_Parms,NULL);
}

struct Engine_OnStorageDeviceChange_Parms
{
};

void UOnlineSystemInterface::OnStorageDeviceChange()
{
	static UFieldFunc* pFnOnStorageDeviceChange = NULL;
	if(!pFnOnStorageDeviceChange)
		pFnOnStorageDeviceChange = UObject::FindFunction("Function Engine.OnlineSystemInterface.OnStorageDeviceChange");

	Engine_OnStorageDeviceChange_Parms OnStorageDeviceChange_Parms;
	ProcessEvent(pFnOnStorageDeviceChange,NULL,&OnStorageDeviceChange_Parms,NULL);
}

struct Engine_ClearConnectionStatusChangeDelegate_Parms
{
	struct FScriptDelegate                             ConnectionStatusDelegate;                         		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::ClearConnectionStatusChangeDelegate(struct FScriptDelegate ConnectionStatusDelegate)
{
	static UFieldFunc* pFnClearConnectionStatusChangeDelegate = NULL;
	if(!pFnClearConnectionStatusChangeDelegate)
		pFnClearConnectionStatusChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.ClearConnectionStatusChangeDelegate");

	Engine_ClearConnectionStatusChangeDelegate_Parms ClearConnectionStatusChangeDelegate_Parms;
	memcpy(&ClearConnectionStatusChangeDelegate_Parms.ConnectionStatusDelegate,&ConnectionStatusDelegate,0xC);
	ProcessEvent(pFnClearConnectionStatusChangeDelegate,NULL,&ClearConnectionStatusChangeDelegate_Parms,NULL);
}

struct Engine_OnConnectionStatusChange_Parms
{
	unsigned char                                      ConnectionStatus;                                 		// 0x000000 (0x0001)              
};

void UOnlineSystemInterface::OnConnectionStatusChange(unsigned char ConnectionStatus)
{
	static UFieldFunc* pFnOnConnectionStatusChange = NULL;
	if(!pFnOnConnectionStatusChange)
		pFnOnConnectionStatusChange = UObject::FindFunction("Function Engine.OnlineSystemInterface.OnConnectionStatusChange");

	Engine_OnConnectionStatusChange_Parms OnConnectionStatusChange_Parms;
	OnConnectionStatusChange_Parms.ConnectionStatus = ConnectionStatus;
	ProcessEvent(pFnOnConnectionStatusChange,NULL,&OnConnectionStatusChange_Parms,NULL);
}

struct Engine_AddControllerChangeDelegate_Parms
{
	struct FScriptDelegate                             ControllerChangeDelegate;                         		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::AddControllerChangeDelegate(struct FScriptDelegate ControllerChangeDelegate)
{
	static UFieldFunc* pFnAddControllerChangeDelegate = NULL;
	if(!pFnAddControllerChangeDelegate)
		pFnAddControllerChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.AddControllerChangeDelegate");

	Engine_AddControllerChangeDelegate_Parms AddControllerChangeDelegate_Parms;
	memcpy(&AddControllerChangeDelegate_Parms.ControllerChangeDelegate,&ControllerChangeDelegate,0xC);
	ProcessEvent(pFnAddControllerChangeDelegate,NULL,&AddControllerChangeDelegate_Parms,NULL);
}

struct Engine_ClearExternalUIChangeDelegate_Parms
{
	struct FScriptDelegate                             ExternalUIDelegate;                               		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::ClearExternalUIChangeDelegate(struct FScriptDelegate ExternalUIDelegate)
{
	static UFieldFunc* pFnClearExternalUIChangeDelegate = NULL;
	if(!pFnClearExternalUIChangeDelegate)
		pFnClearExternalUIChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.ClearExternalUIChangeDelegate");

	Engine_ClearExternalUIChangeDelegate_Parms ClearExternalUIChangeDelegate_Parms;
	memcpy(&ClearExternalUIChangeDelegate_Parms.ExternalUIDelegate,&ExternalUIDelegate,0xC);
	ProcessEvent(pFnClearExternalUIChangeDelegate,NULL,&ClearExternalUIChangeDelegate_Parms,NULL);
}

struct Engine_OnExternalUIChange_Parms
{
	unsigned long                                      bIsOpening : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void UOnlineSystemInterface::OnExternalUIChange(bool bIsOpening)
{
	static UFieldFunc* pFnOnExternalUIChange = NULL;
	if(!pFnOnExternalUIChange)
		pFnOnExternalUIChange = UObject::FindFunction("Function Engine.OnlineSystemInterface.OnExternalUIChange");

	Engine_OnExternalUIChange_Parms OnExternalUIChange_Parms;
	OnExternalUIChange_Parms.bIsOpening = bIsOpening;
	ProcessEvent(pFnOnExternalUIChange,NULL,&OnExternalUIChange_Parms,NULL);
}

struct Engine_AddStorageDeviceChangeDelegate_Parms
{
	struct FScriptDelegate                             StorageDeviceChangeDelegate;                      		// 0x000000 (0x000C)              
};

void UOnlineSystemInterface::AddStorageDeviceChangeDelegate(struct FScriptDelegate StorageDeviceChangeDelegate)
{
	static UFieldFunc* pFnAddStorageDeviceChangeDelegate = NULL;
	if(!pFnAddStorageDeviceChangeDelegate)
		pFnAddStorageDeviceChangeDelegate = UObject::FindFunction("Function Engine.OnlineSystemInterface.AddStorageDeviceChangeDelegate");

	Engine_AddStorageDeviceChangeDelegate_Parms AddStorageDeviceChangeDelegate_Parms;
	memcpy(&AddStorageDeviceChangeDelegate_Parms.StorageDeviceChangeDelegate,&StorageDeviceChangeDelegate,0xC);
	ProcessEvent(pFnAddStorageDeviceChangeDelegate,NULL,&AddStorageDeviceChangeDelegate_Parms,NULL);
}

struct Engine_OnControllerChange_Parms
{
	int                                                ControllerId;                                     		// 0x000000 (0x0004)              
	unsigned long                                      bIsConnected : 1;                                 		// 0x000004 (0x0004) [0x00000001] 
};

void UOnlineSystemInterface::OnControllerChange(int ControllerId,bool bIsConnected)
{
	static UFieldFunc* pFnOnControllerChange = NULL;
	if(!pFnOnControllerChange)
		pFnOnControllerChange = UObject::FindFunction("Function Engine.OnlineSystemInterface.OnControllerChange");

	Engine_OnControllerChange_Parms OnControllerChange_Parms;
	OnControllerChange_Parms.ControllerId = ControllerId;
	OnControllerChange_Parms.bIsConnected = bIsConnected;
	ProcessEvent(pFnOnControllerChange,NULL,&OnControllerChange_Parms,NULL);
}

struct Engine_HasLinkConnection_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineSystemInterface::HasLinkConnection()
{
	static UFieldFunc* pFnHasLinkConnection = NULL;
	if(!pFnHasLinkConnection)
		pFnHasLinkConnection = UObject::FindFunction("Function Engine.OnlineSystemInterface.HasLinkConnection");

	Engine_HasLinkConnection_Parms HasLinkConnection_Parms;
	ProcessEvent(pFnHasLinkConnection,NULL,&HasLinkConnection_Parms,NULL);
	return HasLinkConnection_Parms.ReturnValue;
}

struct Engine_SaveTitleFile_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	struct FString                                     LogicalName;                                      		// 0x00000C (0x000C)              
	TArray<unsigned char>                              FileContents;                                     		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::SaveTitleFile(struct FString Filename,struct FString LogicalName,TArray<unsigned char> FileContents)
{
	static UFieldFunc* pFnSaveTitleFile = NULL;
	if(!pFnSaveTitleFile)
		pFnSaveTitleFile = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.SaveTitleFile");

	Engine_SaveTitleFile_Parms SaveTitleFile_Parms;
	memcpy(&SaveTitleFile_Parms.Filename,&Filename,0xC);
	memcpy(&SaveTitleFile_Parms.LogicalName,&LogicalName,0xC);
	memcpy(&SaveTitleFile_Parms.FileContents,&FileContents,0xC);
	ProcessEvent(pFnSaveTitleFile,NULL,&SaveTitleFile_Parms,NULL);
	return SaveTitleFile_Parms.ReturnValue;
}

struct Engine_DeleteTitleFiles_Parms
{
	float                                              MaxAgeSeconds;                                    		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::DeleteTitleFiles(float MaxAgeSeconds)
{
	static UFieldFunc* pFnDeleteTitleFiles = NULL;
	if(!pFnDeleteTitleFiles)
		pFnDeleteTitleFiles = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.DeleteTitleFiles");

	Engine_DeleteTitleFiles_Parms DeleteTitleFiles_Parms;
	DeleteTitleFiles_Parms.MaxAgeSeconds = MaxAgeSeconds;
	ProcessEvent(pFnDeleteTitleFiles,NULL,&DeleteTitleFiles_Parms,NULL);
	return DeleteTitleFiles_Parms.ReturnValue;
}

struct Engine_GetTitleFileState_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned char                                      ReturnValue;                                      		// 0x00000C (0x0001)              
};

unsigned char UOnlineTitleFileCacheInterface::GetTitleFileState(struct FString Filename)
{
	static UFieldFunc* pFnGetTitleFileState = NULL;
	if(!pFnGetTitleFileState)
		pFnGetTitleFileState = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.GetTitleFileState");

	Engine_GetTitleFileState_Parms GetTitleFileState_Parms;
	memcpy(&GetTitleFileState_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetTitleFileState,NULL,&GetTitleFileState_Parms,NULL);
	return GetTitleFileState_Parms.ReturnValue;
}

struct Engine_GetTitleFileContents_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	TArray<unsigned char>                              FileContents;                                     		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::GetTitleFileContents(struct FString Filename,TArray<unsigned char>* FileContents)
{
	static UFieldFunc* pFnGetTitleFileContents = NULL;
	if(!pFnGetTitleFileContents)
		pFnGetTitleFileContents = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.GetTitleFileContents");

	Engine_GetTitleFileContents_Parms GetTitleFileContents_Parms;
	memcpy(&GetTitleFileContents_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetTitleFileContents,NULL,&GetTitleFileContents_Parms,NULL);
	if(FileContents)
		memcpy(FileContents,&GetTitleFileContents_Parms.FileContents,0xC);
	return GetTitleFileContents_Parms.ReturnValue;
}

struct Engine_ClearCachedFile_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::ClearCachedFile(struct FString Filename)
{
	static UFieldFunc* pFnClearCachedFile = NULL;
	if(!pFnClearCachedFile)
		pFnClearCachedFile = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.ClearCachedFile");

	Engine_ClearCachedFile_Parms ClearCachedFile_Parms;
	memcpy(&ClearCachedFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnClearCachedFile,NULL,&ClearCachedFile_Parms,NULL);
	return ClearCachedFile_Parms.ReturnValue;
}

struct Engine_GetTitleFileLogicalName_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UOnlineTitleFileCacheInterface::GetTitleFileLogicalName(struct FString Filename)
{
	static UFieldFunc* pFnGetTitleFileLogicalName = NULL;
	if(!pFnGetTitleFileLogicalName)
		pFnGetTitleFileLogicalName = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.GetTitleFileLogicalName");

	Engine_GetTitleFileLogicalName_Parms GetTitleFileLogicalName_Parms;
	memcpy(&GetTitleFileLogicalName_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetTitleFileLogicalName,NULL,&GetTitleFileLogicalName_Parms,NULL);
	return GetTitleFileLogicalName_Parms.ReturnValue;
}

struct Engine_ClearSaveTitleFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             SaveCompleteDelegate;                             		// 0x000000 (0x000C)              
};

void UOnlineTitleFileCacheInterface::ClearSaveTitleFileCompleteDelegate(struct FScriptDelegate SaveCompleteDelegate)
{
	static UFieldFunc* pFnClearSaveTitleFileCompleteDelegate = NULL;
	if(!pFnClearSaveTitleFileCompleteDelegate)
		pFnClearSaveTitleFileCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.ClearSaveTitleFileCompleteDelegate");

	Engine_ClearSaveTitleFileCompleteDelegate_Parms ClearSaveTitleFileCompleteDelegate_Parms;
	memcpy(&ClearSaveTitleFileCompleteDelegate_Parms.SaveCompleteDelegate,&SaveCompleteDelegate,0xC);
	ProcessEvent(pFnClearSaveTitleFileCompleteDelegate,NULL,&ClearSaveTitleFileCompleteDelegate_Parms,NULL);
}

struct Engine_OnLoadTitleFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
};

void UOnlineTitleFileCacheInterface::OnLoadTitleFileComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnLoadTitleFileComplete = NULL;
	if(!pFnOnLoadTitleFileComplete)
		pFnOnLoadTitleFileComplete = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.OnLoadTitleFileComplete");

	Engine_OnLoadTitleFileComplete_Parms OnLoadTitleFileComplete_Parms;
	OnLoadTitleFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnLoadTitleFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnLoadTitleFileComplete,NULL,&OnLoadTitleFileComplete_Parms,NULL);
}

struct Engine_OnSaveTitleFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
};

void UOnlineTitleFileCacheInterface::OnSaveTitleFileComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnSaveTitleFileComplete = NULL;
	if(!pFnOnSaveTitleFileComplete)
		pFnOnSaveTitleFileComplete = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.OnSaveTitleFileComplete");

	Engine_OnSaveTitleFileComplete_Parms OnSaveTitleFileComplete_Parms;
	OnSaveTitleFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnSaveTitleFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnSaveTitleFileComplete,NULL,&OnSaveTitleFileComplete_Parms,NULL);
}

struct Engine_ClearCachedFiles_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::ClearCachedFiles()
{
	static UFieldFunc* pFnClearCachedFiles = NULL;
	if(!pFnClearCachedFiles)
		pFnClearCachedFiles = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.ClearCachedFiles");

	Engine_ClearCachedFiles_Parms ClearCachedFiles_Parms;
	ProcessEvent(pFnClearCachedFiles,NULL,&ClearCachedFiles_Parms,NULL);
	return ClearCachedFiles_Parms.ReturnValue;
}

struct Engine_GetTitleFileHash_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	struct FString                                     ReturnValue;                                      		// 0x00000C (0x000C)              
};

struct FString UOnlineTitleFileCacheInterface::GetTitleFileHash(struct FString Filename)
{
	static UFieldFunc* pFnGetTitleFileHash = NULL;
	if(!pFnGetTitleFileHash)
		pFnGetTitleFileHash = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.GetTitleFileHash");

	Engine_GetTitleFileHash_Parms GetTitleFileHash_Parms;
	memcpy(&GetTitleFileHash_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetTitleFileHash,NULL,&GetTitleFileHash_Parms,NULL);
	return GetTitleFileHash_Parms.ReturnValue;
}

struct Engine_AddSaveTitleFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             SaveCompleteDelegate;                             		// 0x000000 (0x000C)              
};

void UOnlineTitleFileCacheInterface::AddSaveTitleFileCompleteDelegate(struct FScriptDelegate SaveCompleteDelegate)
{
	static UFieldFunc* pFnAddSaveTitleFileCompleteDelegate = NULL;
	if(!pFnAddSaveTitleFileCompleteDelegate)
		pFnAddSaveTitleFileCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.AddSaveTitleFileCompleteDelegate");

	Engine_AddSaveTitleFileCompleteDelegate_Parms AddSaveTitleFileCompleteDelegate_Parms;
	memcpy(&AddSaveTitleFileCompleteDelegate_Parms.SaveCompleteDelegate,&SaveCompleteDelegate,0xC);
	ProcessEvent(pFnAddSaveTitleFileCompleteDelegate,NULL,&AddSaveTitleFileCompleteDelegate_Parms,NULL);
}

struct Engine_AddLoadTitleFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             LoadCompleteDelegate;                             		// 0x000000 (0x000C)              
};

void UOnlineTitleFileCacheInterface::AddLoadTitleFileCompleteDelegate(struct FScriptDelegate LoadCompleteDelegate)
{
	static UFieldFunc* pFnAddLoadTitleFileCompleteDelegate = NULL;
	if(!pFnAddLoadTitleFileCompleteDelegate)
		pFnAddLoadTitleFileCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.AddLoadTitleFileCompleteDelegate");

	Engine_AddLoadTitleFileCompleteDelegate_Parms AddLoadTitleFileCompleteDelegate_Parms;
	memcpy(&AddLoadTitleFileCompleteDelegate_Parms.LoadCompleteDelegate,&LoadCompleteDelegate,0xC);
	ProcessEvent(pFnAddLoadTitleFileCompleteDelegate,NULL,&AddLoadTitleFileCompleteDelegate_Parms,NULL);
}

struct Engine_LoadTitleFile_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::LoadTitleFile(struct FString Filename)
{
	static UFieldFunc* pFnLoadTitleFile = NULL;
	if(!pFnLoadTitleFile)
		pFnLoadTitleFile = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.LoadTitleFile");

	Engine_LoadTitleFile_Parms LoadTitleFile_Parms;
	memcpy(&LoadTitleFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnLoadTitleFile,NULL,&LoadTitleFile_Parms,NULL);
	return LoadTitleFile_Parms.ReturnValue;
}

struct Engine_DeleteTitleFile_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineTitleFileCacheInterface::DeleteTitleFile(struct FString Filename)
{
	static UFieldFunc* pFnDeleteTitleFile = NULL;
	if(!pFnDeleteTitleFile)
		pFnDeleteTitleFile = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.DeleteTitleFile");

	Engine_DeleteTitleFile_Parms DeleteTitleFile_Parms;
	memcpy(&DeleteTitleFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnDeleteTitleFile,NULL,&DeleteTitleFile_Parms,NULL);
	return DeleteTitleFile_Parms.ReturnValue;
}

struct Engine_ClearLoadTitleFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             LoadCompleteDelegate;                             		// 0x000000 (0x000C)              
};

void UOnlineTitleFileCacheInterface::ClearLoadTitleFileCompleteDelegate(struct FScriptDelegate LoadCompleteDelegate)
{
	static UFieldFunc* pFnClearLoadTitleFileCompleteDelegate = NULL;
	if(!pFnClearLoadTitleFileCompleteDelegate)
		pFnClearLoadTitleFileCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileCacheInterface.ClearLoadTitleFileCompleteDelegate");

	Engine_ClearLoadTitleFileCompleteDelegate_Parms ClearLoadTitleFileCompleteDelegate_Parms;
	memcpy(&ClearLoadTitleFileCompleteDelegate_Parms.LoadCompleteDelegate,&LoadCompleteDelegate,0xC);
	ProcessEvent(pFnClearLoadTitleFileCompleteDelegate,NULL,&ClearLoadTitleFileCompleteDelegate_Parms,NULL);
}

struct Engine_ReadTitleFile_Parms
{
	struct FString                                     FileToRead;                                       		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineTitleFileInterface::ReadTitleFile(struct FString FileToRead)
{
	static UFieldFunc* pFnReadTitleFile = NULL;
	if(!pFnReadTitleFile)
		pFnReadTitleFile = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.ReadTitleFile");

	Engine_ReadTitleFile_Parms ReadTitleFile_Parms;
	memcpy(&ReadTitleFile_Parms.FileToRead,&FileToRead,0xC);
	ProcessEvent(pFnReadTitleFile,NULL,&ReadTitleFile_Parms,NULL);
	return ReadTitleFile_Parms.ReturnValue;
}

struct Engine_OnReadTitleFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     Filename;                                         		// 0x000004 (0x000C)              
};

void UOnlineTitleFileInterface::OnReadTitleFileComplete(bool bWasSuccessful,struct FString Filename)
{
	static UFieldFunc* pFnOnReadTitleFileComplete = NULL;
	if(!pFnOnReadTitleFileComplete)
		pFnOnReadTitleFileComplete = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.OnReadTitleFileComplete");

	Engine_OnReadTitleFileComplete_Parms OnReadTitleFileComplete_Parms;
	OnReadTitleFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnReadTitleFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnReadTitleFileComplete,NULL,&OnReadTitleFileComplete_Parms,NULL);
}

struct Engine_GetTitleFileState_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned char                                      ReturnValue;                                      		// 0x00000C (0x0001)              
};

unsigned char UOnlineTitleFileInterface::GetTitleFileState(struct FString Filename)
{
	static UFieldFunc* pFnGetTitleFileState = NULL;
	if(!pFnGetTitleFileState)
		pFnGetTitleFileState = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.GetTitleFileState");

	Engine_GetTitleFileState_Parms GetTitleFileState_Parms;
	memcpy(&GetTitleFileState_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetTitleFileState,NULL,&GetTitleFileState_Parms,NULL);
	return GetTitleFileState_Parms.ReturnValue;
}

struct Engine_AddRequestTitleFileListCompleteDelegate_Parms
{
	struct FScriptDelegate                             RequestTitleFileListDelegate;                     		// 0x000000 (0x000C)              
};

void UOnlineTitleFileInterface::AddRequestTitleFileListCompleteDelegate(struct FScriptDelegate RequestTitleFileListDelegate)
{
	static UFieldFunc* pFnAddRequestTitleFileListCompleteDelegate = NULL;
	if(!pFnAddRequestTitleFileListCompleteDelegate)
		pFnAddRequestTitleFileListCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.AddRequestTitleFileListCompleteDelegate");

	Engine_AddRequestTitleFileListCompleteDelegate_Parms AddRequestTitleFileListCompleteDelegate_Parms;
	memcpy(&AddRequestTitleFileListCompleteDelegate_Parms.RequestTitleFileListDelegate,&RequestTitleFileListDelegate,0xC);
	ProcessEvent(pFnAddRequestTitleFileListCompleteDelegate,NULL,&AddRequestTitleFileListCompleteDelegate_Parms,NULL);
}

struct Engine_AddReadTitleFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadTitleFileCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UOnlineTitleFileInterface::AddReadTitleFileCompleteDelegate(struct FScriptDelegate ReadTitleFileCompleteDelegate)
{
	static UFieldFunc* pFnAddReadTitleFileCompleteDelegate = NULL;
	if(!pFnAddReadTitleFileCompleteDelegate)
		pFnAddReadTitleFileCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.AddReadTitleFileCompleteDelegate");

	Engine_AddReadTitleFileCompleteDelegate_Parms AddReadTitleFileCompleteDelegate_Parms;
	memcpy(&AddReadTitleFileCompleteDelegate_Parms.ReadTitleFileCompleteDelegate,&ReadTitleFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadTitleFileCompleteDelegate,NULL,&AddReadTitleFileCompleteDelegate_Parms,NULL);
}

struct Engine_ClearRequestTitleFileListCompleteDelegate_Parms
{
	struct FScriptDelegate                             RequestTitleFileListDelegate;                     		// 0x000000 (0x000C)              
};

void UOnlineTitleFileInterface::ClearRequestTitleFileListCompleteDelegate(struct FScriptDelegate RequestTitleFileListDelegate)
{
	static UFieldFunc* pFnClearRequestTitleFileListCompleteDelegate = NULL;
	if(!pFnClearRequestTitleFileListCompleteDelegate)
		pFnClearRequestTitleFileListCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.ClearRequestTitleFileListCompleteDelegate");

	Engine_ClearRequestTitleFileListCompleteDelegate_Parms ClearRequestTitleFileListCompleteDelegate_Parms;
	memcpy(&ClearRequestTitleFileListCompleteDelegate_Parms.RequestTitleFileListDelegate,&RequestTitleFileListDelegate,0xC);
	ProcessEvent(pFnClearRequestTitleFileListCompleteDelegate,NULL,&ClearRequestTitleFileListCompleteDelegate_Parms,NULL);
}

struct Engine_ClearDownloadedFiles_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UOnlineTitleFileInterface::ClearDownloadedFiles()
{
	static UFieldFunc* pFnClearDownloadedFiles = NULL;
	if(!pFnClearDownloadedFiles)
		pFnClearDownloadedFiles = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.ClearDownloadedFiles");

	Engine_ClearDownloadedFiles_Parms ClearDownloadedFiles_Parms;
	ProcessEvent(pFnClearDownloadedFiles,NULL,&ClearDownloadedFiles_Parms,NULL);
	return ClearDownloadedFiles_Parms.ReturnValue;
}

struct Engine_ClearReadTitleFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadTitleFileCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UOnlineTitleFileInterface::ClearReadTitleFileCompleteDelegate(struct FScriptDelegate ReadTitleFileCompleteDelegate)
{
	static UFieldFunc* pFnClearReadTitleFileCompleteDelegate = NULL;
	if(!pFnClearReadTitleFileCompleteDelegate)
		pFnClearReadTitleFileCompleteDelegate = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.ClearReadTitleFileCompleteDelegate");

	Engine_ClearReadTitleFileCompleteDelegate_Parms ClearReadTitleFileCompleteDelegate_Parms;
	memcpy(&ClearReadTitleFileCompleteDelegate_Parms.ReadTitleFileCompleteDelegate,&ReadTitleFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadTitleFileCompleteDelegate,NULL,&ClearReadTitleFileCompleteDelegate_Parms,NULL);
}

struct Engine_OnRequestTitleFileListComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     ResultStr;                                        		// 0x000004 (0x000C)              
};

void UOnlineTitleFileInterface::OnRequestTitleFileListComplete(bool bWasSuccessful,struct FString ResultStr)
{
	static UFieldFunc* pFnOnRequestTitleFileListComplete = NULL;
	if(!pFnOnRequestTitleFileListComplete)
		pFnOnRequestTitleFileListComplete = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.OnRequestTitleFileListComplete");

	Engine_OnRequestTitleFileListComplete_Parms OnRequestTitleFileListComplete_Parms;
	OnRequestTitleFileListComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnRequestTitleFileListComplete_Parms.ResultStr,&ResultStr,0xC);
	ProcessEvent(pFnOnRequestTitleFileListComplete,NULL,&OnRequestTitleFileListComplete_Parms,NULL);
}

struct Engine_ClearDownloadedFile_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UOnlineTitleFileInterface::ClearDownloadedFile(struct FString Filename)
{
	static UFieldFunc* pFnClearDownloadedFile = NULL;
	if(!pFnClearDownloadedFile)
		pFnClearDownloadedFile = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.ClearDownloadedFile");

	Engine_ClearDownloadedFile_Parms ClearDownloadedFile_Parms;
	memcpy(&ClearDownloadedFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnClearDownloadedFile,NULL,&ClearDownloadedFile_Parms,NULL);
	return ClearDownloadedFile_Parms.ReturnValue;
}

struct Engine_GetTitleFileContents_Parms
{
	struct FString                                     Filename;                                         		// 0x000000 (0x000C)              
	TArray<unsigned char>                              FileContents;                                     		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UOnlineTitleFileInterface::GetTitleFileContents(struct FString Filename,TArray<unsigned char>* FileContents)
{
	static UFieldFunc* pFnGetTitleFileContents = NULL;
	if(!pFnGetTitleFileContents)
		pFnGetTitleFileContents = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.GetTitleFileContents");

	Engine_GetTitleFileContents_Parms GetTitleFileContents_Parms;
	memcpy(&GetTitleFileContents_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetTitleFileContents,NULL,&GetTitleFileContents_Parms,NULL);
	if(FileContents)
		memcpy(FileContents,&GetTitleFileContents_Parms.FileContents,0xC);
	return GetTitleFileContents_Parms.ReturnValue;
}

struct Engine_RequestTitleFileList_Parms
{
};

void UOnlineTitleFileInterface::RequestTitleFileList()
{
	static UFieldFunc* pFnRequestTitleFileList = NULL;
	if(!pFnRequestTitleFileList)
		pFnRequestTitleFileList = UObject::FindFunction("Function Engine.OnlineTitleFileInterface.RequestTitleFileList");

	Engine_RequestTitleFileList_Parms RequestTitleFileList_Parms;
	ProcessEvent(pFnRequestTitleFileList,NULL,&RequestTitleFileList_Parms,NULL);
}

struct Engine_OnPlayerTalkingStateChange_Parms
{
	struct FUniqueNetId                                Player;                                           		// 0x000000 (0x0008)              
	unsigned long                                      bIsTalking : 1;                                   		// 0x000008 (0x0004) [0x00000001] 
};

void UOnlineVoiceInterface::OnPlayerTalkingStateChange(struct FUniqueNetId Player,bool bIsTalking)
{
	static UFieldFunc* pFnOnPlayerTalkingStateChange = NULL;
	if(!pFnOnPlayerTalkingStateChange)
		pFnOnPlayerTalkingStateChange = UObject::FindFunction("Function Engine.OnlineVoiceInterface.OnPlayerTalkingStateChange");

	Engine_OnPlayerTalkingStateChange_Parms OnPlayerTalkingStateChange_Parms;
	memcpy(&OnPlayerTalkingStateChange_Parms.Player,&Player,0x8);
	OnPlayerTalkingStateChange_Parms.bIsTalking = bIsTalking;
	ProcessEvent(pFnOnPlayerTalkingStateChange,NULL,&OnPlayerTalkingStateChange_Parms,NULL);
}

struct Engine_GetRecognitionResults_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	TArray<struct FSpeechRecognizedWord>               Words;                                            		// 0x000004 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::GetRecognitionResults(unsigned char LocalUserNum,TArray<struct FSpeechRecognizedWord>* Words)
{
	static UFieldFunc* pFnGetRecognitionResults = NULL;
	if(!pFnGetRecognitionResults)
		pFnGetRecognitionResults = UObject::FindFunction("Function Engine.OnlineVoiceInterface.GetRecognitionResults");

	Engine_GetRecognitionResults_Parms GetRecognitionResults_Parms;
	GetRecognitionResults_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnGetRecognitionResults,NULL,&GetRecognitionResults_Parms,NULL);
	if(Words)
		memcpy(Words,&GetRecognitionResults_Parms.Words,0xC);
	return GetRecognitionResults_Parms.ReturnValue;
}

struct Engine_SelectVocabulary_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	int                                                VocabularyId;                                     		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::SelectVocabulary(unsigned char LocalUserNum,int VocabularyId)
{
	static UFieldFunc* pFnSelectVocabulary = NULL;
	if(!pFnSelectVocabulary)
		pFnSelectVocabulary = UObject::FindFunction("Function Engine.OnlineVoiceInterface.SelectVocabulary");

	Engine_SelectVocabulary_Parms SelectVocabulary_Parms;
	SelectVocabulary_Parms.LocalUserNum = LocalUserNum;
	SelectVocabulary_Parms.VocabularyId = VocabularyId;
	ProcessEvent(pFnSelectVocabulary,NULL,&SelectVocabulary_Parms,NULL);
	return SelectVocabulary_Parms.ReturnValue;
}

struct Engine_StartNetworkedVoice_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
};

void UOnlineVoiceInterface::StartNetworkedVoice(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnStartNetworkedVoice = NULL;
	if(!pFnStartNetworkedVoice)
		pFnStartNetworkedVoice = UObject::FindFunction("Function Engine.OnlineVoiceInterface.StartNetworkedVoice");

	Engine_StartNetworkedVoice_Parms StartNetworkedVoice_Parms;
	StartNetworkedVoice_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnStartNetworkedVoice,NULL,&StartNetworkedVoice_Parms,NULL);
}

struct Engine_ClearPlayerTalkingDelegate_Parms
{
	struct FScriptDelegate                             TalkerDelegate;                                   		// 0x000000 (0x000C)              
};

void UOnlineVoiceInterface::ClearPlayerTalkingDelegate(struct FScriptDelegate TalkerDelegate)
{
	static UFieldFunc* pFnClearPlayerTalkingDelegate = NULL;
	if(!pFnClearPlayerTalkingDelegate)
		pFnClearPlayerTalkingDelegate = UObject::FindFunction("Function Engine.OnlineVoiceInterface.ClearPlayerTalkingDelegate");

	Engine_ClearPlayerTalkingDelegate_Parms ClearPlayerTalkingDelegate_Parms;
	memcpy(&ClearPlayerTalkingDelegate_Parms.TalkerDelegate,&TalkerDelegate,0xC);
	ProcessEvent(pFnClearPlayerTalkingDelegate,NULL,&ClearPlayerTalkingDelegate_Parms,NULL);
}

struct Engine_SetSpeechRecognitionObject_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	class USpeechRecognition*                          SpeechRecogObj;                                   		// 0x000004 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::SetSpeechRecognitionObject(unsigned char LocalUserNum,class USpeechRecognition* SpeechRecogObj)
{
	static UFieldFunc* pFnSetSpeechRecognitionObject = NULL;
	if(!pFnSetSpeechRecognitionObject)
		pFnSetSpeechRecognitionObject = UObject::FindFunction("Function Engine.OnlineVoiceInterface.SetSpeechRecognitionObject");

	Engine_SetSpeechRecognitionObject_Parms SetSpeechRecognitionObject_Parms;
	SetSpeechRecognitionObject_Parms.LocalUserNum = LocalUserNum;
	SetSpeechRecognitionObject_Parms.SpeechRecogObj = SpeechRecogObj;
	ProcessEvent(pFnSetSpeechRecognitionObject,NULL,&SetSpeechRecognitionObject_Parms,NULL);
	return SetSpeechRecognitionObject_Parms.ReturnValue;
}

struct Engine_UnregisterRemoteTalker_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::UnregisterRemoteTalker(struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnUnregisterRemoteTalker = NULL;
	if(!pFnUnregisterRemoteTalker)
		pFnUnregisterRemoteTalker = UObject::FindFunction("Function Engine.OnlineVoiceInterface.UnregisterRemoteTalker");

	Engine_UnregisterRemoteTalker_Parms UnregisterRemoteTalker_Parms;
	memcpy(&UnregisterRemoteTalker_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnUnregisterRemoteTalker,NULL,&UnregisterRemoteTalker_Parms,NULL);
	return UnregisterRemoteTalker_Parms.ReturnValue;
}

struct Engine_OnRecognitionComplete_Parms
{
};

void UOnlineVoiceInterface::OnRecognitionComplete()
{
	static UFieldFunc* pFnOnRecognitionComplete = NULL;
	if(!pFnOnRecognitionComplete)
		pFnOnRecognitionComplete = UObject::FindFunction("Function Engine.OnlineVoiceInterface.OnRecognitionComplete");

	Engine_OnRecognitionComplete_Parms OnRecognitionComplete_Parms;
	ProcessEvent(pFnOnRecognitionComplete,NULL,&OnRecognitionComplete_Parms,NULL);
}

struct Engine_MuteAll_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      bAllowFriends : 1;                                		// 0x000004 (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::MuteAll(unsigned char LocalUserNum,bool bAllowFriends)
{
	static UFieldFunc* pFnMuteAll = NULL;
	if(!pFnMuteAll)
		pFnMuteAll = UObject::FindFunction("Function Engine.OnlineVoiceInterface.MuteAll");

	Engine_MuteAll_Parms MuteAll_Parms;
	MuteAll_Parms.LocalUserNum = LocalUserNum;
	MuteAll_Parms.bAllowFriends = bAllowFriends;
	ProcessEvent(pFnMuteAll,NULL,&MuteAll_Parms,NULL);
	return MuteAll_Parms.ReturnValue;
}

struct Engine_IsRemotePlayerTalking_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::IsRemotePlayerTalking(struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnIsRemotePlayerTalking = NULL;
	if(!pFnIsRemotePlayerTalking)
		pFnIsRemotePlayerTalking = UObject::FindFunction("Function Engine.OnlineVoiceInterface.IsRemotePlayerTalking");

	Engine_IsRemotePlayerTalking_Parms IsRemotePlayerTalking_Parms;
	memcpy(&IsRemotePlayerTalking_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnIsRemotePlayerTalking,NULL,&IsRemotePlayerTalking_Parms,NULL);
	return IsRemotePlayerTalking_Parms.ReturnValue;
}

struct Engine_SetRemoteTalkerPriority_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	int                                                Priority;                                         		// 0x00000C (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::SetRemoteTalkerPriority(unsigned char LocalUserNum,struct FUniqueNetId PlayerID,int Priority)
{
	static UFieldFunc* pFnSetRemoteTalkerPriority = NULL;
	if(!pFnSetRemoteTalkerPriority)
		pFnSetRemoteTalkerPriority = UObject::FindFunction("Function Engine.OnlineVoiceInterface.SetRemoteTalkerPriority");

	Engine_SetRemoteTalkerPriority_Parms SetRemoteTalkerPriority_Parms;
	SetRemoteTalkerPriority_Parms.LocalUserNum = LocalUserNum;
	memcpy(&SetRemoteTalkerPriority_Parms.PlayerID,&PlayerID,0x8);
	SetRemoteTalkerPriority_Parms.Priority = Priority;
	ProcessEvent(pFnSetRemoteTalkerPriority,NULL,&SetRemoteTalkerPriority_Parms,NULL);
	return SetRemoteTalkerPriority_Parms.ReturnValue;
}

struct Engine_UnmuteRemoteTalker_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      bIsSystemWide : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::UnmuteRemoteTalker(unsigned char LocalUserNum,struct FUniqueNetId PlayerID,bool bIsSystemWide)
{
	static UFieldFunc* pFnUnmuteRemoteTalker = NULL;
	if(!pFnUnmuteRemoteTalker)
		pFnUnmuteRemoteTalker = UObject::FindFunction("Function Engine.OnlineVoiceInterface.UnmuteRemoteTalker");

	Engine_UnmuteRemoteTalker_Parms UnmuteRemoteTalker_Parms;
	UnmuteRemoteTalker_Parms.LocalUserNum = LocalUserNum;
	memcpy(&UnmuteRemoteTalker_Parms.PlayerID,&PlayerID,0x8);
	UnmuteRemoteTalker_Parms.bIsSystemWide = bIsSystemWide;
	ProcessEvent(pFnUnmuteRemoteTalker,NULL,&UnmuteRemoteTalker_Parms,NULL);
	return UnmuteRemoteTalker_Parms.ReturnValue;
}

struct Engine_UnmuteAll_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::UnmuteAll(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnUnmuteAll = NULL;
	if(!pFnUnmuteAll)
		pFnUnmuteAll = UObject::FindFunction("Function Engine.OnlineVoiceInterface.UnmuteAll");

	Engine_UnmuteAll_Parms UnmuteAll_Parms;
	UnmuteAll_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnUnmuteAll,NULL,&UnmuteAll_Parms,NULL);
	return UnmuteAll_Parms.ReturnValue;
}

struct Engine_RegisterLocalTalker_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::RegisterLocalTalker(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnRegisterLocalTalker = NULL;
	if(!pFnRegisterLocalTalker)
		pFnRegisterLocalTalker = UObject::FindFunction("Function Engine.OnlineVoiceInterface.RegisterLocalTalker");

	Engine_RegisterLocalTalker_Parms RegisterLocalTalker_Parms;
	RegisterLocalTalker_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnRegisterLocalTalker,NULL,&RegisterLocalTalker_Parms,NULL);
	return RegisterLocalTalker_Parms.ReturnValue;
}

struct Engine_AddRecognitionCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             RecognitionDelegate;                              		// 0x000004 (0x000C)              
};

void UOnlineVoiceInterface::AddRecognitionCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate RecognitionDelegate)
{
	static UFieldFunc* pFnAddRecognitionCompleteDelegate = NULL;
	if(!pFnAddRecognitionCompleteDelegate)
		pFnAddRecognitionCompleteDelegate = UObject::FindFunction("Function Engine.OnlineVoiceInterface.AddRecognitionCompleteDelegate");

	Engine_AddRecognitionCompleteDelegate_Parms AddRecognitionCompleteDelegate_Parms;
	AddRecognitionCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&AddRecognitionCompleteDelegate_Parms.RecognitionDelegate,&RecognitionDelegate,0xC);
	ProcessEvent(pFnAddRecognitionCompleteDelegate,NULL,&AddRecognitionCompleteDelegate_Parms,NULL);
}

struct Engine_UnregisterLocalTalker_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::UnregisterLocalTalker(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnUnregisterLocalTalker = NULL;
	if(!pFnUnregisterLocalTalker)
		pFnUnregisterLocalTalker = UObject::FindFunction("Function Engine.OnlineVoiceInterface.UnregisterLocalTalker");

	Engine_UnregisterLocalTalker_Parms UnregisterLocalTalker_Parms;
	UnregisterLocalTalker_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnUnregisterLocalTalker,NULL,&UnregisterLocalTalker_Parms,NULL);
	return UnregisterLocalTalker_Parms.ReturnValue;
}

struct Engine_RegisterRemoteTalker_Parms
{
	struct FUniqueNetId                                PlayerID;                                         		// 0x000000 (0x0008)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000008 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::RegisterRemoteTalker(struct FUniqueNetId PlayerID)
{
	static UFieldFunc* pFnRegisterRemoteTalker = NULL;
	if(!pFnRegisterRemoteTalker)
		pFnRegisterRemoteTalker = UObject::FindFunction("Function Engine.OnlineVoiceInterface.RegisterRemoteTalker");

	Engine_RegisterRemoteTalker_Parms RegisterRemoteTalker_Parms;
	memcpy(&RegisterRemoteTalker_Parms.PlayerID,&PlayerID,0x8);
	ProcessEvent(pFnRegisterRemoteTalker,NULL,&RegisterRemoteTalker_Parms,NULL);
	return RegisterRemoteTalker_Parms.ReturnValue;
}

struct Engine_IsHeadsetPresent_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::IsHeadsetPresent(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnIsHeadsetPresent = NULL;
	if(!pFnIsHeadsetPresent)
		pFnIsHeadsetPresent = UObject::FindFunction("Function Engine.OnlineVoiceInterface.IsHeadsetPresent");

	Engine_IsHeadsetPresent_Parms IsHeadsetPresent_Parms;
	IsHeadsetPresent_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnIsHeadsetPresent,NULL,&IsHeadsetPresent_Parms,NULL);
	return IsHeadsetPresent_Parms.ReturnValue;
}

struct Engine_ClearRecognitionCompleteDelegate_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FScriptDelegate                             RecognitionDelegate;                              		// 0x000004 (0x000C)              
};

void UOnlineVoiceInterface::ClearRecognitionCompleteDelegate(unsigned char LocalUserNum,struct FScriptDelegate RecognitionDelegate)
{
	static UFieldFunc* pFnClearRecognitionCompleteDelegate = NULL;
	if(!pFnClearRecognitionCompleteDelegate)
		pFnClearRecognitionCompleteDelegate = UObject::FindFunction("Function Engine.OnlineVoiceInterface.ClearRecognitionCompleteDelegate");

	Engine_ClearRecognitionCompleteDelegate_Parms ClearRecognitionCompleteDelegate_Parms;
	ClearRecognitionCompleteDelegate_Parms.LocalUserNum = LocalUserNum;
	memcpy(&ClearRecognitionCompleteDelegate_Parms.RecognitionDelegate,&RecognitionDelegate,0xC);
	ProcessEvent(pFnClearRecognitionCompleteDelegate,NULL,&ClearRecognitionCompleteDelegate_Parms,NULL);
}

struct Engine_IsLocalPlayerTalking_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::IsLocalPlayerTalking(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnIsLocalPlayerTalking = NULL;
	if(!pFnIsLocalPlayerTalking)
		pFnIsLocalPlayerTalking = UObject::FindFunction("Function Engine.OnlineVoiceInterface.IsLocalPlayerTalking");

	Engine_IsLocalPlayerTalking_Parms IsLocalPlayerTalking_Parms;
	IsLocalPlayerTalking_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnIsLocalPlayerTalking,NULL,&IsLocalPlayerTalking_Parms,NULL);
	return IsLocalPlayerTalking_Parms.ReturnValue;
}

struct Engine_StopSpeechRecognition_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::StopSpeechRecognition(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnStopSpeechRecognition = NULL;
	if(!pFnStopSpeechRecognition)
		pFnStopSpeechRecognition = UObject::FindFunction("Function Engine.OnlineVoiceInterface.StopSpeechRecognition");

	Engine_StopSpeechRecognition_Parms StopSpeechRecognition_Parms;
	StopSpeechRecognition_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnStopSpeechRecognition,NULL,&StopSpeechRecognition_Parms,NULL);
	return StopSpeechRecognition_Parms.ReturnValue;
}

struct Engine_StartSpeechRecognition_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::StartSpeechRecognition(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnStartSpeechRecognition = NULL;
	if(!pFnStartSpeechRecognition)
		pFnStartSpeechRecognition = UObject::FindFunction("Function Engine.OnlineVoiceInterface.StartSpeechRecognition");

	Engine_StartSpeechRecognition_Parms StartSpeechRecognition_Parms;
	StartSpeechRecognition_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnStartSpeechRecognition,NULL,&StartSpeechRecognition_Parms,NULL);
	return StartSpeechRecognition_Parms.ReturnValue;
}

struct Engine_StopNetworkedVoice_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
};

void UOnlineVoiceInterface::StopNetworkedVoice(unsigned char LocalUserNum)
{
	static UFieldFunc* pFnStopNetworkedVoice = NULL;
	if(!pFnStopNetworkedVoice)
		pFnStopNetworkedVoice = UObject::FindFunction("Function Engine.OnlineVoiceInterface.StopNetworkedVoice");

	Engine_StopNetworkedVoice_Parms StopNetworkedVoice_Parms;
	StopNetworkedVoice_Parms.LocalUserNum = LocalUserNum;
	ProcessEvent(pFnStopNetworkedVoice,NULL,&StopNetworkedVoice_Parms,NULL);
}

struct Engine_MuteRemoteTalker_Parms
{
	unsigned char                                      LocalUserNum;                                     		// 0x000000 (0x0001)              
	struct FUniqueNetId                                PlayerID;                                         		// 0x000004 (0x0008)              
	unsigned long                                      bIsSystemWide : 1;                                		// 0x00000C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000010 (0x0004) [0x00000001] 
};

bool UOnlineVoiceInterface::MuteRemoteTalker(unsigned char LocalUserNum,struct FUniqueNetId PlayerID,bool bIsSystemWide)
{
	static UFieldFunc* pFnMuteRemoteTalker = NULL;
	if(!pFnMuteRemoteTalker)
		pFnMuteRemoteTalker = UObject::FindFunction("Function Engine.OnlineVoiceInterface.MuteRemoteTalker");

	Engine_MuteRemoteTalker_Parms MuteRemoteTalker_Parms;
	MuteRemoteTalker_Parms.LocalUserNum = LocalUserNum;
	memcpy(&MuteRemoteTalker_Parms.PlayerID,&PlayerID,0x8);
	MuteRemoteTalker_Parms.bIsSystemWide = bIsSystemWide;
	ProcessEvent(pFnMuteRemoteTalker,NULL,&MuteRemoteTalker_Parms,NULL);
	return MuteRemoteTalker_Parms.ReturnValue;
}

struct Engine_AddPlayerTalkingDelegate_Parms
{
	struct FScriptDelegate                             TalkerDelegate;                                   		// 0x000000 (0x000C)              
};

void UOnlineVoiceInterface::AddPlayerTalkingDelegate(struct FScriptDelegate TalkerDelegate)
{
	static UFieldFunc* pFnAddPlayerTalkingDelegate = NULL;
	if(!pFnAddPlayerTalkingDelegate)
		pFnAddPlayerTalkingDelegate = UObject::FindFunction("Function Engine.OnlineVoiceInterface.AddPlayerTalkingDelegate");

	Engine_AddPlayerTalkingDelegate_Parms AddPlayerTalkingDelegate_Parms;
	memcpy(&AddPlayerTalkingDelegate_Parms.TalkerDelegate,&TalkerDelegate,0xC);
	ProcessEvent(pFnAddPlayerTalkingDelegate,NULL,&AddPlayerTalkingDelegate_Parms,NULL);
}

struct Engine_CastGraffitiInteractionType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastGraffitiInteractionType(int I)
{
	static UFieldFunc* pFnCastGraffitiInteractionType = NULL;
	if(!pFnCastGraffitiInteractionType)
		pFnCastGraffitiInteractionType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastGraffitiInteractionType");

	Engine_CastGraffitiInteractionType_Parms CastGraffitiInteractionType_Parms;
	CastGraffitiInteractionType_Parms.I = I;
	ProcessEvent(pFnCastGraffitiInteractionType,NULL,&CastGraffitiInteractionType_Parms,NULL);
	return CastGraffitiInteractionType_Parms.ReturnValue;
}

struct Engine_CastAPBViewportType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastAPBViewportType(int I)
{
	static UFieldFunc* pFnCastAPBViewportType = NULL;
	if(!pFnCastAPBViewportType)
		pFnCastAPBViewportType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastAPBViewportType");

	Engine_CastAPBViewportType_Parms CastAPBViewportType_Parms;
	CastAPBViewportType_Parms.I = I;
	ProcessEvent(pFnCastAPBViewportType,NULL,&CastAPBViewportType_Parms,NULL);
	return CastAPBViewportType_Parms.ReturnValue;
}

struct Engine_CastHUDWSCharInfo_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDWSCharInfo(int I)
{
	static UFieldFunc* pFnCastHUDWSCharInfo = NULL;
	if(!pFnCastHUDWSCharInfo)
		pFnCastHUDWSCharInfo = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDWSCharInfo");

	Engine_CastHUDWSCharInfo_Parms CastHUDWSCharInfo_Parms;
	CastHUDWSCharInfo_Parms.I = I;
	ProcessEvent(pFnCastHUDWSCharInfo,NULL,&CastHUDWSCharInfo_Parms,NULL);
	return CastHUDWSCharInfo_Parms.ReturnValue;
}

struct Engine_CastTimeofDayPeriod_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTimeofDayPeriod(int I)
{
	static UFieldFunc* pFnCastTimeofDayPeriod = NULL;
	if(!pFnCastTimeofDayPeriod)
		pFnCastTimeofDayPeriod = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTimeofDayPeriod");

	Engine_CastTimeofDayPeriod_Parms CastTimeofDayPeriod_Parms;
	CastTimeofDayPeriod_Parms.I = I;
	ProcessEvent(pFnCastTimeofDayPeriod,NULL,&CastTimeofDayPeriod_Parms,NULL);
	return CastTimeofDayPeriod_Parms.ReturnValue;
}

struct Engine_CastMailSort_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMailSort(int I)
{
	static UFieldFunc* pFnCastMailSort = NULL;
	if(!pFnCastMailSort)
		pFnCastMailSort = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMailSort");

	Engine_CastMailSort_Parms CastMailSort_Parms;
	CastMailSort_Parms.I = I;
	ProcessEvent(pFnCastMailSort,NULL,&CastMailSort_Parms,NULL);
	return CastMailSort_Parms.ReturnValue;
}

struct Engine_CastModifierType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastModifierType(int I)
{
	static UFieldFunc* pFnCastModifierType = NULL;
	if(!pFnCastModifierType)
		pFnCastModifierType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastModifierType");

	Engine_CastModifierType_Parms CastModifierType_Parms;
	CastModifierType_Parms.I = I;
	ProcessEvent(pFnCastModifierType,NULL,&CastModifierType_Parms,NULL);
	return CastModifierType_Parms.ReturnValue;
}

struct Engine_CastModifierClass_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastModifierClass(int I)
{
	static UFieldFunc* pFnCastModifierClass = NULL;
	if(!pFnCastModifierClass)
		pFnCastModifierClass = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastModifierClass");

	Engine_CastModifierClass_Parms CastModifierClass_Parms;
	CastModifierClass_Parms.I = I;
	ProcessEvent(pFnCastModifierClass,NULL,&CastModifierClass_Parms,NULL);
	return CastModifierClass_Parms.ReturnValue;
}

struct Engine_CastMailDuration_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMailDuration(int I)
{
	static UFieldFunc* pFnCastMailDuration = NULL;
	if(!pFnCastMailDuration)
		pFnCastMailDuration = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMailDuration");

	Engine_CastMailDuration_Parms CastMailDuration_Parms;
	CastMailDuration_Parms.I = I;
	ProcessEvent(pFnCastMailDuration,NULL,&CastMailDuration_Parms,NULL);
	return CastMailDuration_Parms.ReturnValue;
}

struct Engine_CastTaskTargetSpecificationMethod_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskTargetSpecificationMethod(int I)
{
	static UFieldFunc* pFnCastTaskTargetSpecificationMethod = NULL;
	if(!pFnCastTaskTargetSpecificationMethod)
		pFnCastTaskTargetSpecificationMethod = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskTargetSpecificationMethod");

	Engine_CastTaskTargetSpecificationMethod_Parms CastTaskTargetSpecificationMethod_Parms;
	CastTaskTargetSpecificationMethod_Parms.I = I;
	ProcessEvent(pFnCastTaskTargetSpecificationMethod,NULL,&CastTaskTargetSpecificationMethod_Parms,NULL);
	return CastTaskTargetSpecificationMethod_Parms.ReturnValue;
}

struct Engine_CastTaskItemSize_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskItemSize(int I)
{
	static UFieldFunc* pFnCastTaskItemSize = NULL;
	if(!pFnCastTaskItemSize)
		pFnCastTaskItemSize = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskItemSize");

	Engine_CastTaskItemSize_Parms CastTaskItemSize_Parms;
	CastTaskItemSize_Parms.I = I;
	ProcessEvent(pFnCastTaskItemSize,NULL,&CastTaskItemSize_Parms,NULL);
	return CastTaskItemSize_Parms.ReturnValue;
}

struct Engine_CastHUDCeremonyMsgType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDCeremonyMsgType(int I)
{
	static UFieldFunc* pFnCastHUDCeremonyMsgType = NULL;
	if(!pFnCastHUDCeremonyMsgType)
		pFnCastHUDCeremonyMsgType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDCeremonyMsgType");

	Engine_CastHUDCeremonyMsgType_Parms CastHUDCeremonyMsgType_Parms;
	CastHUDCeremonyMsgType_Parms.I = I;
	ProcessEvent(pFnCastHUDCeremonyMsgType,NULL,&CastHUDCeremonyMsgType_Parms,NULL);
	return CastHUDCeremonyMsgType_Parms.ReturnValue;
}

struct Engine_CastVehiclePositionIndex_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehiclePositionIndex(int I)
{
	static UFieldFunc* pFnCastVehiclePositionIndex = NULL;
	if(!pFnCastVehiclePositionIndex)
		pFnCastVehiclePositionIndex = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehiclePositionIndex");

	Engine_CastVehiclePositionIndex_Parms CastVehiclePositionIndex_Parms;
	CastVehiclePositionIndex_Parms.I = I;
	ProcessEvent(pFnCastVehiclePositionIndex,NULL,&CastVehiclePositionIndex_Parms,NULL);
	return CastVehiclePositionIndex_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_Float_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_Float(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_Float = NULL;
	if(!pFnCastPawnHitReaction_Float)
		pFnCastPawnHitReaction_Float = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_Float");

	Engine_CastPawnHitReaction_Float_Parms CastPawnHitReaction_Float_Parms;
	CastPawnHitReaction_Float_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_Float,NULL,&CastPawnHitReaction_Float_Parms,NULL);
	return CastPawnHitReaction_Float_Parms.ReturnValue;
}

struct Engine_CastInteractiveActorType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastInteractiveActorType(int I)
{
	static UFieldFunc* pFnCastInteractiveActorType = NULL;
	if(!pFnCastInteractiveActorType)
		pFnCastInteractiveActorType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastInteractiveActorType");

	Engine_CastInteractiveActorType_Parms CastInteractiveActorType_Parms;
	CastInteractiveActorType_Parms.I = I;
	ProcessEvent(pFnCastInteractiveActorType,NULL,&CastInteractiveActorType_Parms,NULL);
	return CastInteractiveActorType_Parms.ReturnValue;
}

struct Engine_CastSpawnVariable_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastSpawnVariable(int I)
{
	static UFieldFunc* pFnCastSpawnVariable = NULL;
	if(!pFnCastSpawnVariable)
		pFnCastSpawnVariable = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastSpawnVariable");

	Engine_CastSpawnVariable_Parms CastSpawnVariable_Parms;
	CastSpawnVariable_Parms.I = I;
	ProcessEvent(pFnCastSpawnVariable,NULL,&CastSpawnVariable_Parms,NULL);
	return CastSpawnVariable_Parms.ReturnValue;
}

struct Engine_CastMarketplaceConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceConstant(int I)
{
	static UFieldFunc* pFnCastMarketplaceConstant = NULL;
	if(!pFnCastMarketplaceConstant)
		pFnCastMarketplaceConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceConstant");

	Engine_CastMarketplaceConstant_Parms CastMarketplaceConstant_Parms;
	CastMarketplaceConstant_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceConstant,NULL,&CastMarketplaceConstant_Parms,NULL);
	return CastMarketplaceConstant_Parms.ReturnValue;
}

struct Engine_CastMissionUITrackedValueDisplay_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMissionUITrackedValueDisplay(int I)
{
	static UFieldFunc* pFnCastMissionUITrackedValueDisplay = NULL;
	if(!pFnCastMissionUITrackedValueDisplay)
		pFnCastMissionUITrackedValueDisplay = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMissionUITrackedValueDisplay");

	Engine_CastMissionUITrackedValueDisplay_Parms CastMissionUITrackedValueDisplay_Parms;
	CastMissionUITrackedValueDisplay_Parms.I = I;
	ProcessEvent(pFnCastMissionUITrackedValueDisplay,NULL,&CastMissionUITrackedValueDisplay_Parms,NULL);
	return CastMissionUITrackedValueDisplay_Parms.ReturnValue;
}

struct Engine_CastTaskItemSpecificationMethod_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskItemSpecificationMethod(int I)
{
	static UFieldFunc* pFnCastTaskItemSpecificationMethod = NULL;
	if(!pFnCastTaskItemSpecificationMethod)
		pFnCastTaskItemSpecificationMethod = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskItemSpecificationMethod");

	Engine_CastTaskItemSpecificationMethod_Parms CastTaskItemSpecificationMethod_Parms;
	CastTaskItemSpecificationMethod_Parms.I = I;
	ProcessEvent(pFnCastTaskItemSpecificationMethod,NULL,&CastTaskItemSpecificationMethod_Parms,NULL);
	return CastTaskItemSpecificationMethod_Parms.ReturnValue;
}

struct Engine_CastCSAType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAType(int I)
{
	static UFieldFunc* pFnCastCSAType = NULL;
	if(!pFnCastCSAType)
		pFnCastCSAType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAType");

	Engine_CastCSAType_Parms CastCSAType_Parms;
	CastCSAType_Parms.I = I;
	ProcessEvent(pFnCastCSAType,NULL,&CastCSAType_Parms,NULL);
	return CastCSAType_Parms.ReturnValue;
}

struct Engine_CastTTIPlayerAnimType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTTIPlayerAnimType(int I)
{
	static UFieldFunc* pFnCastTTIPlayerAnimType = NULL;
	if(!pFnCastTTIPlayerAnimType)
		pFnCastTTIPlayerAnimType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTTIPlayerAnimType");

	Engine_CastTTIPlayerAnimType_Parms CastTTIPlayerAnimType_Parms;
	CastTTIPlayerAnimType_Parms.I = I;
	ProcessEvent(pFnCastTTIPlayerAnimType,NULL,&CastTTIPlayerAnimType_Parms,NULL);
	return CastTTIPlayerAnimType_Parms.ReturnValue;
}

struct Engine_CastVehicleInteractionAnimation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleInteractionAnimation(int I)
{
	static UFieldFunc* pFnCastVehicleInteractionAnimation = NULL;
	if(!pFnCastVehicleInteractionAnimation)
		pFnCastVehicleInteractionAnimation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleInteractionAnimation");

	Engine_CastVehicleInteractionAnimation_Parms CastVehicleInteractionAnimation_Parms;
	CastVehicleInteractionAnimation_Parms.I = I;
	ProcessEvent(pFnCastVehicleInteractionAnimation,NULL,&CastVehicleInteractionAnimation_Parms,NULL);
	return CastVehicleInteractionAnimation_Parms.ReturnValue;
}

struct Engine_CastMarketplaceSort_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceSort(int I)
{
	static UFieldFunc* pFnCastMarketplaceSort = NULL;
	if(!pFnCastMarketplaceSort)
		pFnCastMarketplaceSort = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceSort");

	Engine_CastMarketplaceSort_Parms CastMarketplaceSort_Parms;
	CastMarketplaceSort_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceSort,NULL,&CastMarketplaceSort_Parms,NULL);
	return CastMarketplaceSort_Parms.ReturnValue;
}

struct Engine_CastNameQuery_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastNameQuery(int I)
{
	static UFieldFunc* pFnCastNameQuery = NULL;
	if(!pFnCastNameQuery)
		pFnCastNameQuery = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastNameQuery");

	Engine_CastNameQuery_Parms CastNameQuery_Parms;
	CastNameQuery_Parms.I = I;
	ProcessEvent(pFnCastNameQuery,NULL,&CastNameQuery_Parms,NULL);
	return CastNameQuery_Parms.ReturnValue;
}

struct Engine_CastTutorialBypassBehaviour_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTutorialBypassBehaviour(int I)
{
	static UFieldFunc* pFnCastTutorialBypassBehaviour = NULL;
	if(!pFnCastTutorialBypassBehaviour)
		pFnCastTutorialBypassBehaviour = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTutorialBypassBehaviour");

	Engine_CastTutorialBypassBehaviour_Parms CastTutorialBypassBehaviour_Parms;
	CastTutorialBypassBehaviour_Parms.I = I;
	ProcessEvent(pFnCastTutorialBypassBehaviour,NULL,&CastTutorialBypassBehaviour_Parms,NULL);
	return CastTutorialBypassBehaviour_Parms.ReturnValue;
}

struct Engine_CastTaskItemCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskItemCategory(int I)
{
	static UFieldFunc* pFnCastTaskItemCategory = NULL;
	if(!pFnCastTaskItemCategory)
		pFnCastTaskItemCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskItemCategory");

	Engine_CastTaskItemCategory_Parms CastTaskItemCategory_Parms;
	CastTaskItemCategory_Parms.I = I;
	ProcessEvent(pFnCastTaskItemCategory,NULL,&CastTaskItemCategory_Parms,NULL);
	return CastTaskItemCategory_Parms.ReturnValue;
}

struct Engine_CastVehicleDriveType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleDriveType(int I)
{
	static UFieldFunc* pFnCastVehicleDriveType = NULL;
	if(!pFnCastVehicleDriveType)
		pFnCastVehicleDriveType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleDriveType");

	Engine_CastVehicleDriveType_Parms CastVehicleDriveType_Parms;
	CastVehicleDriveType_Parms.I = I;
	ProcessEvent(pFnCastVehicleDriveType,NULL,&CastVehicleDriveType_Parms,NULL);
	return CastVehicleDriveType_Parms.ReturnValue;
}

struct Engine_CastClanRank_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastClanRank(int I)
{
	static UFieldFunc* pFnCastClanRank = NULL;
	if(!pFnCastClanRank)
		pFnCastClanRank = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastClanRank");

	Engine_CastClanRank_Parms CastClanRank_Parms;
	CastClanRank_Parms.I = I;
	ProcessEvent(pFnCastClanRank,NULL,&CastClanRank_Parms,NULL);
	return CastClanRank_Parms.ReturnValue;
}

struct Engine_CastTaskMemberRequirement_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskMemberRequirement(int I)
{
	static UFieldFunc* pFnCastTaskMemberRequirement = NULL;
	if(!pFnCastTaskMemberRequirement)
		pFnCastTaskMemberRequirement = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskMemberRequirement");

	Engine_CastTaskMemberRequirement_Parms CastTaskMemberRequirement_Parms;
	CastTaskMemberRequirement_Parms.I = I;
	ProcessEvent(pFnCastTaskMemberRequirement,NULL,&CastTaskMemberRequirement_Parms,NULL);
	return CastTaskMemberRequirement_Parms.ReturnValue;
}

struct Engine_CastDifficultyRating_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastDifficultyRating(int I)
{
	static UFieldFunc* pFnCastDifficultyRating = NULL;
	if(!pFnCastDifficultyRating)
		pFnCastDifficultyRating = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastDifficultyRating");

	Engine_CastDifficultyRating_Parms CastDifficultyRating_Parms;
	CastDifficultyRating_Parms.I = I;
	ProcessEvent(pFnCastDifficultyRating,NULL,&CastDifficultyRating_Parms,NULL);
	return CastDifficultyRating_Parms.ReturnValue;
}

struct Engine_CastSpawnConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastSpawnConstant(int I)
{
	static UFieldFunc* pFnCastSpawnConstant = NULL;
	if(!pFnCastSpawnConstant)
		pFnCastSpawnConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastSpawnConstant");

	Engine_CastSpawnConstant_Parms CastSpawnConstant_Parms;
	CastSpawnConstant_Parms.I = I;
	ProcessEvent(pFnCastSpawnConstant,NULL,&CastSpawnConstant_Parms,NULL);
	return CastSpawnConstant_Parms.ReturnValue;
}

struct Engine_CastChatTag_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastChatTag(int I)
{
	static UFieldFunc* pFnCastChatTag = NULL;
	if(!pFnCastChatTag)
		pFnCastChatTag = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastChatTag");

	Engine_CastChatTag_Parms CastChatTag_Parms;
	CastChatTag_Parms.I = I;
	ProcessEvent(pFnCastChatTag,NULL,&CastChatTag_Parms,NULL);
	return CastChatTag_Parms.ReturnValue;
}

struct Engine_CastLoadingScreenHintDomain_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastLoadingScreenHintDomain(int I)
{
	static UFieldFunc* pFnCastLoadingScreenHintDomain = NULL;
	if(!pFnCastLoadingScreenHintDomain)
		pFnCastLoadingScreenHintDomain = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastLoadingScreenHintDomain");

	Engine_CastLoadingScreenHintDomain_Parms CastLoadingScreenHintDomain_Parms;
	CastLoadingScreenHintDomain_Parms.I = I;
	ProcessEvent(pFnCastLoadingScreenHintDomain,NULL,&CastLoadingScreenHintDomain_Parms,NULL);
	return CastLoadingScreenHintDomain_Parms.ReturnValue;
}

struct Engine_CastCameraConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCameraConstant(int I)
{
	static UFieldFunc* pFnCastCameraConstant = NULL;
	if(!pFnCastCameraConstant)
		pFnCastCameraConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCameraConstant");

	Engine_CastCameraConstant_Parms CastCameraConstant_Parms;
	CastCameraConstant_Parms.I = I;
	ProcessEvent(pFnCastCameraConstant,NULL,&CastCameraConstant_Parms,NULL);
	return CastCameraConstant_Parms.ReturnValue;
}

struct Engine_CastInventoryItemCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastInventoryItemCategory(int I)
{
	static UFieldFunc* pFnCastInventoryItemCategory = NULL;
	if(!pFnCastInventoryItemCategory)
		pFnCastInventoryItemCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastInventoryItemCategory");

	Engine_CastInventoryItemCategory_Parms CastInventoryItemCategory_Parms;
	CastInventoryItemCategory_Parms.I = I;
	ProcessEvent(pFnCastInventoryItemCategory,NULL,&CastInventoryItemCategory_Parms,NULL);
	return CastInventoryItemCategory_Parms.ReturnValue;
}

struct Engine_CastMarketplaceInfo_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceInfo(int I)
{
	static UFieldFunc* pFnCastMarketplaceInfo = NULL;
	if(!pFnCastMarketplaceInfo)
		pFnCastMarketplaceInfo = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceInfo");

	Engine_CastMarketplaceInfo_Parms CastMarketplaceInfo_Parms;
	CastMarketplaceInfo_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceInfo,NULL,&CastMarketplaceInfo_Parms,NULL);
	return CastMarketplaceInfo_Parms.ReturnValue;
}

struct Engine_CastHUDInfoBrowser_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDInfoBrowser(int I)
{
	static UFieldFunc* pFnCastHUDInfoBrowser = NULL;
	if(!pFnCastHUDInfoBrowser)
		pFnCastHUDInfoBrowser = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDInfoBrowser");

	Engine_CastHUDInfoBrowser_Parms CastHUDInfoBrowser_Parms;
	CastHUDInfoBrowser_Parms.I = I;
	ProcessEvent(pFnCastHUDInfoBrowser,NULL,&CastHUDInfoBrowser_Parms,NULL);
	return CastHUDInfoBrowser_Parms.ReturnValue;
}

struct Engine_CastGameplayEventMutuallyExclusiveGroup_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastGameplayEventMutuallyExclusiveGroup(int I)
{
	static UFieldFunc* pFnCastGameplayEventMutuallyExclusiveGroup = NULL;
	if(!pFnCastGameplayEventMutuallyExclusiveGroup)
		pFnCastGameplayEventMutuallyExclusiveGroup = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastGameplayEventMutuallyExclusiveGroup");

	Engine_CastGameplayEventMutuallyExclusiveGroup_Parms CastGameplayEventMutuallyExclusiveGroup_Parms;
	CastGameplayEventMutuallyExclusiveGroup_Parms.I = I;
	ProcessEvent(pFnCastGameplayEventMutuallyExclusiveGroup,NULL,&CastGameplayEventMutuallyExclusiveGroup_Parms,NULL);
	return CastGameplayEventMutuallyExclusiveGroup_Parms.ReturnValue;
}

struct Engine_CastCrimeType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCrimeType(int I)
{
	static UFieldFunc* pFnCastCrimeType = NULL;
	if(!pFnCastCrimeType)
		pFnCastCrimeType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCrimeType");

	Engine_CastCrimeType_Parms CastCrimeType_Parms;
	CastCrimeType_Parms.I = I;
	ProcessEvent(pFnCastCrimeType,NULL,&CastCrimeType_Parms,NULL);
	return CastCrimeType_Parms.ReturnValue;
}

struct Engine_CastVehicleGear_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleGear(int I)
{
	static UFieldFunc* pFnCastVehicleGear = NULL;
	if(!pFnCastVehicleGear)
		pFnCastVehicleGear = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleGear");

	Engine_CastVehicleGear_Parms CastVehicleGear_Parms;
	CastVehicleGear_Parms.I = I;
	ProcessEvent(pFnCastVehicleGear,NULL,&CastVehicleGear_Parms,NULL);
	return CastVehicleGear_Parms.ReturnValue;
}

struct Engine_CastDirection_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastDirection(int I)
{
	static UFieldFunc* pFnCastDirection = NULL;
	if(!pFnCastDirection)
		pFnCastDirection = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastDirection");

	Engine_CastDirection_Parms CastDirection_Parms;
	CastDirection_Parms.I = I;
	ProcessEvent(pFnCastDirection,NULL,&CastDirection_Parms,NULL);
	return CastDirection_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_ConstrainedBoneList_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_ConstrainedBoneList(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_ConstrainedBoneList = NULL;
	if(!pFnCastPawnHitReaction_ConstrainedBoneList)
		pFnCastPawnHitReaction_ConstrainedBoneList = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_ConstrainedBoneList");

	Engine_CastPawnHitReaction_ConstrainedBoneList_Parms CastPawnHitReaction_ConstrainedBoneList_Parms;
	CastPawnHitReaction_ConstrainedBoneList_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_ConstrainedBoneList,NULL,&CastPawnHitReaction_ConstrainedBoneList_Parms,NULL);
	return CastPawnHitReaction_ConstrainedBoneList_Parms.ReturnValue;
}

struct Engine_CastMailConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMailConstant(int I)
{
	static UFieldFunc* pFnCastMailConstant = NULL;
	if(!pFnCastMailConstant)
		pFnCastMailConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMailConstant");

	Engine_CastMailConstant_Parms CastMailConstant_Parms;
	CastMailConstant_Parms.I = I;
	ProcessEvent(pFnCastMailConstant,NULL,&CastMailConstant_Parms,NULL);
	return CastMailConstant_Parms.ReturnValue;
}

struct Engine_CastPvPType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPvPType(int I)
{
	static UFieldFunc* pFnCastPvPType = NULL;
	if(!pFnCastPvPType)
		pFnCastPvPType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPvPType");

	Engine_CastPvPType_Parms CastPvPType_Parms;
	CastPvPType_Parms.I = I;
	ProcessEvent(pFnCastPvPType,NULL,&CastPvPType_Parms,NULL);
	return CastPvPType_Parms.ReturnValue;
}

struct Engine_CastMarketplaceCashType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceCashType(int I)
{
	static UFieldFunc* pFnCastMarketplaceCashType = NULL;
	if(!pFnCastMarketplaceCashType)
		pFnCastMarketplaceCashType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceCashType");

	Engine_CastMarketplaceCashType_Parms CastMarketplaceCashType_Parms;
	CastMarketplaceCashType_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceCashType,NULL,&CastMarketplaceCashType_Parms,NULL);
	return CastMarketplaceCashType_Parms.ReturnValue;
}

struct Engine_CastMailDetach_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMailDetach(int I)
{
	static UFieldFunc* pFnCastMailDetach = NULL;
	if(!pFnCastMailDetach)
		pFnCastMailDetach = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMailDetach");

	Engine_CastMailDetach_Parms CastMailDetach_Parms;
	CastMailDetach_Parms.I = I;
	ProcessEvent(pFnCastMailDetach,NULL,&CastMailDetach_Parms,NULL);
	return CastMailDetach_Parms.ReturnValue;
}

struct Engine_CastVehicleSetupType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleSetupType(int I)
{
	static UFieldFunc* pFnCastVehicleSetupType = NULL;
	if(!pFnCastVehicleSetupType)
		pFnCastVehicleSetupType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleSetupType");

	Engine_CastVehicleSetupType_Parms CastVehicleSetupType_Parms;
	CastVehicleSetupType_Parms.I = I;
	ProcessEvent(pFnCastVehicleSetupType,NULL,&CastVehicleSetupType_Parms,NULL);
	return CastVehicleSetupType_Parms.ReturnValue;
}

struct Engine_CastHUDPopUpItemRule_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDPopUpItemRule(int I)
{
	static UFieldFunc* pFnCastHUDPopUpItemRule = NULL;
	if(!pFnCastHUDPopUpItemRule)
		pFnCastHUDPopUpItemRule = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDPopUpItemRule");

	Engine_CastHUDPopUpItemRule_Parms CastHUDPopUpItemRule_Parms;
	CastHUDPopUpItemRule_Parms.I = I;
	ProcessEvent(pFnCastHUDPopUpItemRule,NULL,&CastHUDPopUpItemRule_Parms,NULL);
	return CastHUDPopUpItemRule_Parms.ReturnValue;
}

struct Engine_CastCrimeTargetCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCrimeTargetCategory(int I)
{
	static UFieldFunc* pFnCastCrimeTargetCategory = NULL;
	if(!pFnCastCrimeTargetCategory)
		pFnCastCrimeTargetCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCrimeTargetCategory");

	Engine_CastCrimeTargetCategory_Parms CastCrimeTargetCategory_Parms;
	CastCrimeTargetCategory_Parms.I = I;
	ProcessEvent(pFnCastCrimeTargetCategory,NULL,&CastCrimeTargetCategory_Parms,NULL);
	return CastCrimeTargetCategory_Parms.ReturnValue;
}

struct Engine_CastPopulation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPopulation(int I)
{
	static UFieldFunc* pFnCastPopulation = NULL;
	if(!pFnCastPopulation)
		pFnCastPopulation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPopulation");

	Engine_CastPopulation_Parms CastPopulation_Parms;
	CastPopulation_Parms.I = I;
	ProcessEvent(pFnCastPopulation,NULL,&CastPopulation_Parms,NULL);
	return CastPopulation_Parms.ReturnValue;
}

struct Engine_CastWarningPromptGroup_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWarningPromptGroup(int I)
{
	static UFieldFunc* pFnCastWarningPromptGroup = NULL;
	if(!pFnCastWarningPromptGroup)
		pFnCastWarningPromptGroup = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWarningPromptGroup");

	Engine_CastWarningPromptGroup_Parms CastWarningPromptGroup_Parms;
	CastWarningPromptGroup_Parms.I = I;
	ProcessEvent(pFnCastWarningPromptGroup,NULL,&CastWarningPromptGroup_Parms,NULL);
	return CastWarningPromptGroup_Parms.ReturnValue;
}

struct Engine_CastPawnHitReactionType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReactionType(int I)
{
	static UFieldFunc* pFnCastPawnHitReactionType = NULL;
	if(!pFnCastPawnHitReactionType)
		pFnCastPawnHitReactionType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReactionType");

	Engine_CastPawnHitReactionType_Parms CastPawnHitReactionType_Parms;
	CastPawnHitReactionType_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReactionType,NULL,&CastPawnHitReactionType_Parms,NULL);
	return CastPawnHitReactionType_Parms.ReturnValue;
}

struct Engine_CastVehicleUICategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleUICategory(int I)
{
	static UFieldFunc* pFnCastVehicleUICategory = NULL;
	if(!pFnCastVehicleUICategory)
		pFnCastVehicleUICategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleUICategory");

	Engine_CastVehicleUICategory_Parms CastVehicleUICategory_Parms;
	CastVehicleUICategory_Parms.I = I;
	ProcessEvent(pFnCastVehicleUICategory,NULL,&CastVehicleUICategory_Parms,NULL);
	return CastVehicleUICategory_Parms.ReturnValue;
}

struct Engine_CastModifierStackingSlot_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastModifierStackingSlot(int I)
{
	static UFieldFunc* pFnCastModifierStackingSlot = NULL;
	if(!pFnCastModifierStackingSlot)
		pFnCastModifierStackingSlot = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastModifierStackingSlot");

	Engine_CastModifierStackingSlot_Parms CastModifierStackingSlot_Parms;
	CastModifierStackingSlot_Parms.I = I;
	ProcessEvent(pFnCastModifierStackingSlot,NULL,&CastModifierStackingSlot_Parms,NULL);
	return CastModifierStackingSlot_Parms.ReturnValue;
}

struct Engine_CastNPCCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastNPCCategory(int I)
{
	static UFieldFunc* pFnCastNPCCategory = NULL;
	if(!pFnCastNPCCategory)
		pFnCastNPCCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastNPCCategory");

	Engine_CastNPCCategory_Parms CastNPCCategory_Parms;
	CastNPCCategory_Parms.I = I;
	ProcessEvent(pFnCastNPCCategory,NULL,&CastNPCCategory_Parms,NULL);
	return CastNPCCategory_Parms.ReturnValue;
}

struct Engine_CastPrimitiveType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPrimitiveType(int I)
{
	static UFieldFunc* pFnCastPrimitiveType = NULL;
	if(!pFnCastPrimitiveType)
		pFnCastPrimitiveType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPrimitiveType");

	Engine_CastPrimitiveType_Parms CastPrimitiveType_Parms;
	CastPrimitiveType_Parms.I = I;
	ProcessEvent(pFnCastPrimitiveType,NULL,&CastPrimitiveType_Parms,NULL);
	return CastPrimitiveType_Parms.ReturnValue;
}

struct Engine_CastPedestrianTTIReaction_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPedestrianTTIReaction(int I)
{
	static UFieldFunc* pFnCastPedestrianTTIReaction = NULL;
	if(!pFnCastPedestrianTTIReaction)
		pFnCastPedestrianTTIReaction = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPedestrianTTIReaction");

	Engine_CastPedestrianTTIReaction_Parms CastPedestrianTTIReaction_Parms;
	CastPedestrianTTIReaction_Parms.I = I;
	ProcessEvent(pFnCastPedestrianTTIReaction,NULL,&CastPedestrianTTIReaction_Parms,NULL);
	return CastPedestrianTTIReaction_Parms.ReturnValue;
}

struct Engine_CastHUDMarkerUsage_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDMarkerUsage(int I)
{
	static UFieldFunc* pFnCastHUDMarkerUsage = NULL;
	if(!pFnCastHUDMarkerUsage)
		pFnCastHUDMarkerUsage = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDMarkerUsage");

	Engine_CastHUDMarkerUsage_Parms CastHUDMarkerUsage_Parms;
	CastHUDMarkerUsage_Parms.I = I;
	ProcessEvent(pFnCastHUDMarkerUsage,NULL,&CastHUDMarkerUsage_Parms,NULL);
	return CastHUDMarkerUsage_Parms.ReturnValue;
}

struct Engine_CastHUDConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDConstant(int I)
{
	static UFieldFunc* pFnCastHUDConstant = NULL;
	if(!pFnCastHUDConstant)
		pFnCastHUDConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDConstant");

	Engine_CastHUDConstant_Parms CastHUDConstant_Parms;
	CastHUDConstant_Parms.I = I;
	ProcessEvent(pFnCastHUDConstant,NULL,&CastHUDConstant_Parms,NULL);
	return CastHUDConstant_Parms.ReturnValue;
}

struct Engine_CastContextSensitiveActionBase_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastContextSensitiveActionBase(int I)
{
	static UFieldFunc* pFnCastContextSensitiveActionBase = NULL;
	if(!pFnCastContextSensitiveActionBase)
		pFnCastContextSensitiveActionBase = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastContextSensitiveActionBase");

	Engine_CastContextSensitiveActionBase_Parms CastContextSensitiveActionBase_Parms;
	CastContextSensitiveActionBase_Parms.I = I;
	ProcessEvent(pFnCastContextSensitiveActionBase,NULL,&CastContextSensitiveActionBase_Parms,NULL);
	return CastContextSensitiveActionBase_Parms.ReturnValue;
}

struct Engine_CastTTINPCEndingType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTTINPCEndingType(int I)
{
	static UFieldFunc* pFnCastTTINPCEndingType = NULL;
	if(!pFnCastTTINPCEndingType)
		pFnCastTTINPCEndingType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTTINPCEndingType");

	Engine_CastTTINPCEndingType_Parms CastTTINPCEndingType_Parms;
	CastTTINPCEndingType_Parms.I = I;
	ProcessEvent(pFnCastTTINPCEndingType,NULL,&CastTTINPCEndingType_Parms,NULL);
	return CastTTINPCEndingType_Parms.ReturnValue;
}

struct Engine_CastVIPAssignmentMethod_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVIPAssignmentMethod(int I)
{
	static UFieldFunc* pFnCastVIPAssignmentMethod = NULL;
	if(!pFnCastVIPAssignmentMethod)
		pFnCastVIPAssignmentMethod = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVIPAssignmentMethod");

	Engine_CastVIPAssignmentMethod_Parms CastVIPAssignmentMethod_Parms;
	CastVIPAssignmentMethod_Parms.I = I;
	ProcessEvent(pFnCastVIPAssignmentMethod,NULL,&CastVIPAssignmentMethod_Parms,NULL);
	return CastVIPAssignmentMethod_Parms.ReturnValue;
}

struct Engine_CastHostingConfigFileCharacterPersistentId_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHostingConfigFileCharacterPersistentId(int I)
{
	static UFieldFunc* pFnCastHostingConfigFileCharacterPersistentId = NULL;
	if(!pFnCastHostingConfigFileCharacterPersistentId)
		pFnCastHostingConfigFileCharacterPersistentId = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHostingConfigFileCharacterPersistentId");

	Engine_CastHostingConfigFileCharacterPersistentId_Parms CastHostingConfigFileCharacterPersistentId_Parms;
	CastHostingConfigFileCharacterPersistentId_Parms.I = I;
	ProcessEvent(pFnCastHostingConfigFileCharacterPersistentId,NULL,&CastHostingConfigFileCharacterPersistentId_Parms,NULL);
	return CastHostingConfigFileCharacterPersistentId_Parms.ReturnValue;
}

struct Engine_CastModifierEffectType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastModifierEffectType(int I)
{
	static UFieldFunc* pFnCastModifierEffectType = NULL;
	if(!pFnCastModifierEffectType)
		pFnCastModifierEffectType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastModifierEffectType");

	Engine_CastModifierEffectType_Parms CastModifierEffectType_Parms;
	CastModifierEffectType_Parms.I = I;
	ProcessEvent(pFnCastModifierEffectType,NULL,&CastModifierEffectType_Parms,NULL);
	return CastModifierEffectType_Parms.ReturnValue;
}

struct Engine_CastActivityMessageParameterConversion_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastActivityMessageParameterConversion(int I)
{
	static UFieldFunc* pFnCastActivityMessageParameterConversion = NULL;
	if(!pFnCastActivityMessageParameterConversion)
		pFnCastActivityMessageParameterConversion = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastActivityMessageParameterConversion");

	Engine_CastActivityMessageParameterConversion_Parms CastActivityMessageParameterConversion_Parms;
	CastActivityMessageParameterConversion_Parms.I = I;
	ProcessEvent(pFnCastActivityMessageParameterConversion,NULL,&CastActivityMessageParameterConversion_Parms,NULL);
	return CastActivityMessageParameterConversion_Parms.ReturnValue;
}

struct Engine_CastOnFootDeathAnimation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastOnFootDeathAnimation(int I)
{
	static UFieldFunc* pFnCastOnFootDeathAnimation = NULL;
	if(!pFnCastOnFootDeathAnimation)
		pFnCastOnFootDeathAnimation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastOnFootDeathAnimation");

	Engine_CastOnFootDeathAnimation_Parms CastOnFootDeathAnimation_Parms;
	CastOnFootDeathAnimation_Parms.I = I;
	ProcessEvent(pFnCastOnFootDeathAnimation,NULL,&CastOnFootDeathAnimation_Parms,NULL);
	return CastOnFootDeathAnimation_Parms.ReturnValue;
}

struct Engine_CastCSALineCheckType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSALineCheckType(int I)
{
	static UFieldFunc* pFnCastCSALineCheckType = NULL;
	if(!pFnCastCSALineCheckType)
		pFnCastCSALineCheckType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSALineCheckType");

	Engine_CastCSALineCheckType_Parms CastCSALineCheckType_Parms;
	CastCSALineCheckType_Parms.I = I;
	ProcessEvent(pFnCastCSALineCheckType,NULL,&CastCSALineCheckType_Parms,NULL);
	return CastCSALineCheckType_Parms.ReturnValue;
}

struct Engine_CastTaskOperationCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskOperationCategory(int I)
{
	static UFieldFunc* pFnCastTaskOperationCategory = NULL;
	if(!pFnCastTaskOperationCategory)
		pFnCastTaskOperationCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskOperationCategory");

	Engine_CastTaskOperationCategory_Parms CastTaskOperationCategory_Parms;
	CastTaskOperationCategory_Parms.I = I;
	ProcessEvent(pFnCastTaskOperationCategory,NULL,&CastTaskOperationCategory_Parms,NULL);
	return CastTaskOperationCategory_Parms.ReturnValue;
}

struct Engine_CastMarketplaceAuctionType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceAuctionType(int I)
{
	static UFieldFunc* pFnCastMarketplaceAuctionType = NULL;
	if(!pFnCastMarketplaceAuctionType)
		pFnCastMarketplaceAuctionType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceAuctionType");

	Engine_CastMarketplaceAuctionType_Parms CastMarketplaceAuctionType_Parms;
	CastMarketplaceAuctionType_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceAuctionType,NULL,&CastMarketplaceAuctionType_Parms,NULL);
	return CastMarketplaceAuctionType_Parms.ReturnValue;
}

struct Engine_CastCSAState_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAState(int I)
{
	static UFieldFunc* pFnCastCSAState = NULL;
	if(!pFnCastCSAState)
		pFnCastCSAState = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAState");

	Engine_CastCSAState_Parms CastCSAState_Parms;
	CastCSAState_Parms.I = I;
	ProcessEvent(pFnCastCSAState,NULL,&CastCSAState_Parms,NULL);
	return CastCSAState_Parms.ReturnValue;
}

struct Engine_CastNPCWorldEvent_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastNPCWorldEvent(int I)
{
	static UFieldFunc* pFnCastNPCWorldEvent = NULL;
	if(!pFnCastNPCWorldEvent)
		pFnCastNPCWorldEvent = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastNPCWorldEvent");

	Engine_CastNPCWorldEvent_Parms CastNPCWorldEvent_Parms;
	CastNPCWorldEvent_Parms.I = I;
	ProcessEvent(pFnCastNPCWorldEvent,NULL,&CastNPCWorldEvent_Parms,NULL);
	return CastNPCWorldEvent_Parms.ReturnValue;
}

struct Engine_CastGameplayEventCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastGameplayEventCategory(int I)
{
	static UFieldFunc* pFnCastGameplayEventCategory = NULL;
	if(!pFnCastGameplayEventCategory)
		pFnCastGameplayEventCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastGameplayEventCategory");

	Engine_CastGameplayEventCategory_Parms CastGameplayEventCategory_Parms;
	CastGameplayEventCategory_Parms.I = I;
	ProcessEvent(pFnCastGameplayEventCategory,NULL,&CastGameplayEventCategory_Parms,NULL);
	return CastGameplayEventCategory_Parms.ReturnValue;
}

struct Engine_CastHeatFunctionality_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHeatFunctionality(int I)
{
	static UFieldFunc* pFnCastHeatFunctionality = NULL;
	if(!pFnCastHeatFunctionality)
		pFnCastHeatFunctionality = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHeatFunctionality");

	Engine_CastHeatFunctionality_Parms CastHeatFunctionality_Parms;
	CastHeatFunctionality_Parms.I = I;
	ProcessEvent(pFnCastHeatFunctionality,NULL,&CastHeatFunctionality_Parms,NULL);
	return CastHeatFunctionality_Parms.ReturnValue;
}

struct Engine_CastHeatConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHeatConstant(int I)
{
	static UFieldFunc* pFnCastHeatConstant = NULL;
	if(!pFnCastHeatConstant)
		pFnCastHeatConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHeatConstant");

	Engine_CastHeatConstant_Parms CastHeatConstant_Parms;
	CastHeatConstant_Parms.I = I;
	ProcessEvent(pFnCastHeatConstant,NULL,&CastHeatConstant_Parms,NULL);
	return CastHeatConstant_Parms.ReturnValue;
}

struct Engine_CastTaskTargetGraffiti_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskTargetGraffiti(int I)
{
	static UFieldFunc* pFnCastTaskTargetGraffiti = NULL;
	if(!pFnCastTaskTargetGraffiti)
		pFnCastTaskTargetGraffiti = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskTargetGraffiti");

	Engine_CastTaskTargetGraffiti_Parms CastTaskTargetGraffiti_Parms;
	CastTaskTargetGraffiti_Parms.I = I;
	ProcessEvent(pFnCastTaskTargetGraffiti,NULL,&CastTaskTargetGraffiti_Parms,NULL);
	return CastTaskTargetGraffiti_Parms.ReturnValue;
}

struct Engine_CastPvPRule_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPvPRule(int I)
{
	static UFieldFunc* pFnCastPvPRule = NULL;
	if(!pFnCastPvPRule)
		pFnCastPvPRule = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPvPRule");

	Engine_CastPvPRule_Parms CastPvPRule_Parms;
	CastPvPRule_Parms.I = I;
	ProcessEvent(pFnCastPvPRule,NULL,&CastPvPRule_Parms,NULL);
	return CastPvPRule_Parms.ReturnValue;
}

struct Engine_CastActivityMessageLocation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastActivityMessageLocation(int I)
{
	static UFieldFunc* pFnCastActivityMessageLocation = NULL;
	if(!pFnCastActivityMessageLocation)
		pFnCastActivityMessageLocation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastActivityMessageLocation");

	Engine_CastActivityMessageLocation_Parms CastActivityMessageLocation_Parms;
	CastActivityMessageLocation_Parms.I = I;
	ProcessEvent(pFnCastActivityMessageLocation,NULL,&CastActivityMessageLocation_Parms,NULL);
	return CastActivityMessageLocation_Parms.ReturnValue;
}

struct Engine_CastTaskItemBatch_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskItemBatch(int I)
{
	static UFieldFunc* pFnCastTaskItemBatch = NULL;
	if(!pFnCastTaskItemBatch)
		pFnCastTaskItemBatch = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskItemBatch");

	Engine_CastTaskItemBatch_Parms CastTaskItemBatch_Parms;
	CastTaskItemBatch_Parms.I = I;
	ProcessEvent(pFnCastTaskItemBatch,NULL,&CastTaskItemBatch_Parms,NULL);
	return CastTaskItemBatch_Parms.ReturnValue;
}

struct Engine_CastNPCEvent_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastNPCEvent(int I)
{
	static UFieldFunc* pFnCastNPCEvent = NULL;
	if(!pFnCastNPCEvent)
		pFnCastNPCEvent = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastNPCEvent");

	Engine_CastNPCEvent_Parms CastNPCEvent_Parms;
	CastNPCEvent_Parms.I = I;
	ProcessEvent(pFnCastNPCEvent,NULL,&CastNPCEvent_Parms,NULL);
	return CastNPCEvent_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_Vector2D_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_Vector2D(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_Vector2D = NULL;
	if(!pFnCastPawnHitReaction_Vector2D)
		pFnCastPawnHitReaction_Vector2D = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_Vector2D");

	Engine_CastPawnHitReaction_Vector2D_Parms CastPawnHitReaction_Vector2D_Parms;
	CastPawnHitReaction_Vector2D_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_Vector2D,NULL,&CastPawnHitReaction_Vector2D_Parms,NULL);
	return CastPawnHitReaction_Vector2D_Parms.ReturnValue;
}

struct Engine_CastMarketplaceDuration_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceDuration(int I)
{
	static UFieldFunc* pFnCastMarketplaceDuration = NULL;
	if(!pFnCastMarketplaceDuration)
		pFnCastMarketplaceDuration = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceDuration");

	Engine_CastMarketplaceDuration_Parms CastMarketplaceDuration_Parms;
	CastMarketplaceDuration_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceDuration,NULL,&CastMarketplaceDuration_Parms,NULL);
	return CastMarketplaceDuration_Parms.ReturnValue;
}

struct Engine_CastCameraHandyCamPresetExported_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCameraHandyCamPresetExported(int I)
{
	static UFieldFunc* pFnCastCameraHandyCamPresetExported = NULL;
	if(!pFnCastCameraHandyCamPresetExported)
		pFnCastCameraHandyCamPresetExported = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCameraHandyCamPresetExported");

	Engine_CastCameraHandyCamPresetExported_Parms CastCameraHandyCamPresetExported_Parms;
	CastCameraHandyCamPresetExported_Parms.I = I;
	ProcessEvent(pFnCastCameraHandyCamPresetExported,NULL,&CastCameraHandyCamPresetExported_Parms,NULL);
	return CastCameraHandyCamPresetExported_Parms.ReturnValue;
}

struct Engine_CastCSAAlignmentType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAAlignmentType(int I)
{
	static UFieldFunc* pFnCastCSAAlignmentType = NULL;
	if(!pFnCastCSAAlignmentType)
		pFnCastCSAAlignmentType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAAlignmentType");

	Engine_CastCSAAlignmentType_Parms CastCSAAlignmentType_Parms;
	CastCSAAlignmentType_Parms.I = I;
	ProcessEvent(pFnCastCSAAlignmentType,NULL,&CastCSAAlignmentType_Parms,NULL);
	return CastCSAAlignmentType_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_BoneRemapTable_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_BoneRemapTable(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_BoneRemapTable = NULL;
	if(!pFnCastPawnHitReaction_BoneRemapTable)
		pFnCastPawnHitReaction_BoneRemapTable = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_BoneRemapTable");

	Engine_CastPawnHitReaction_BoneRemapTable_Parms CastPawnHitReaction_BoneRemapTable_Parms;
	CastPawnHitReaction_BoneRemapTable_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_BoneRemapTable,NULL,&CastPawnHitReaction_BoneRemapTable_Parms,NULL);
	return CastPawnHitReaction_BoneRemapTable_Parms.ReturnValue;
}

struct Engine_CastCameraShakePresetExported_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCameraShakePresetExported(int I)
{
	static UFieldFunc* pFnCastCameraShakePresetExported = NULL;
	if(!pFnCastCameraShakePresetExported)
		pFnCastCameraShakePresetExported = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCameraShakePresetExported");

	Engine_CastCameraShakePresetExported_Parms CastCameraShakePresetExported_Parms;
	CastCameraShakePresetExported_Parms.I = I;
	ProcessEvent(pFnCastCameraShakePresetExported,NULL,&CastCameraShakePresetExported_Parms,NULL);
	return CastCameraShakePresetExported_Parms.ReturnValue;
}

struct Engine_CastTaskTargetClass_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskTargetClass(int I)
{
	static UFieldFunc* pFnCastTaskTargetClass = NULL;
	if(!pFnCastTaskTargetClass)
		pFnCastTaskTargetClass = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskTargetClass");

	Engine_CastTaskTargetClass_Parms CastTaskTargetClass_Parms;
	CastTaskTargetClass_Parms.I = I;
	ProcessEvent(pFnCastTaskTargetClass,NULL,&CastTaskTargetClass_Parms,NULL);
	return CastTaskTargetClass_Parms.ReturnValue;
}

struct Engine_CastTaskItemAnimationType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskItemAnimationType(int I)
{
	static UFieldFunc* pFnCastTaskItemAnimationType = NULL;
	if(!pFnCastTaskItemAnimationType)
		pFnCastTaskItemAnimationType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskItemAnimationType");

	Engine_CastTaskItemAnimationType_Parms CastTaskItemAnimationType_Parms;
	CastTaskItemAnimationType_Parms.I = I;
	ProcessEvent(pFnCastTaskItemAnimationType,NULL,&CastTaskItemAnimationType_Parms,NULL);
	return CastTaskItemAnimationType_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_BoneList_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_BoneList(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_BoneList = NULL;
	if(!pFnCastPawnHitReaction_BoneList)
		pFnCastPawnHitReaction_BoneList = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_BoneList");

	Engine_CastPawnHitReaction_BoneList_Parms CastPawnHitReaction_BoneList_Parms;
	CastPawnHitReaction_BoneList_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_BoneList,NULL,&CastPawnHitReaction_BoneList_Parms,NULL);
	return CastPawnHitReaction_BoneList_Parms.ReturnValue;
}

struct Engine_CastCSAAutoRouteType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAAutoRouteType(int I)
{
	static UFieldFunc* pFnCastCSAAutoRouteType = NULL;
	if(!pFnCastCSAAutoRouteType)
		pFnCastCSAAutoRouteType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAAutoRouteType");

	Engine_CastCSAAutoRouteType_Parms CastCSAAutoRouteType_Parms;
	CastCSAAutoRouteType_Parms.I = I;
	ProcessEvent(pFnCastCSAAutoRouteType,NULL,&CastCSAAutoRouteType_Parms,NULL);
	return CastCSAAutoRouteType_Parms.ReturnValue;
}

struct Engine_CastVehicleDamageVFXState_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleDamageVFXState(int I)
{
	static UFieldFunc* pFnCastVehicleDamageVFXState = NULL;
	if(!pFnCastVehicleDamageVFXState)
		pFnCastVehicleDamageVFXState = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleDamageVFXState");

	Engine_CastVehicleDamageVFXState_Parms CastVehicleDamageVFXState_Parms;
	CastVehicleDamageVFXState_Parms.I = I;
	ProcessEvent(pFnCastVehicleDamageVFXState,NULL,&CastVehicleDamageVFXState_Parms,NULL);
	return CastVehicleDamageVFXState_Parms.ReturnValue;
}

struct Engine_CastMarketplaceTimeLeft_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceTimeLeft(int I)
{
	static UFieldFunc* pFnCastMarketplaceTimeLeft = NULL;
	if(!pFnCastMarketplaceTimeLeft)
		pFnCastMarketplaceTimeLeft = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceTimeLeft");

	Engine_CastMarketplaceTimeLeft_Parms CastMarketplaceTimeLeft_Parms;
	CastMarketplaceTimeLeft_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceTimeLeft,NULL,&CastMarketplaceTimeLeft_Parms,NULL);
	return CastMarketplaceTimeLeft_Parms.ReturnValue;
}

struct Engine_CastChatConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastChatConstant(int I)
{
	static UFieldFunc* pFnCastChatConstant = NULL;
	if(!pFnCastChatConstant)
		pFnCastChatConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastChatConstant");

	Engine_CastChatConstant_Parms CastChatConstant_Parms;
	CastChatConstant_Parms.I = I;
	ProcessEvent(pFnCastChatConstant,NULL,&CastChatConstant_Parms,NULL);
	return CastChatConstant_Parms.ReturnValue;
}

struct Engine_CastMissionUITrackedValue_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMissionUITrackedValue(int I)
{
	static UFieldFunc* pFnCastMissionUITrackedValue = NULL;
	if(!pFnCastMissionUITrackedValue)
		pFnCastMissionUITrackedValue = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMissionUITrackedValue");

	Engine_CastMissionUITrackedValue_Parms CastMissionUITrackedValue_Parms;
	CastMissionUITrackedValue_Parms.I = I;
	ProcessEvent(pFnCastMissionUITrackedValue,NULL,&CastMissionUITrackedValue_Parms,NULL);
	return CastMissionUITrackedValue_Parms.ReturnValue;
}

struct Engine_CastVehicleColour_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleColour(int I)
{
	static UFieldFunc* pFnCastVehicleColour = NULL;
	if(!pFnCastVehicleColour)
		pFnCastVehicleColour = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleColour");

	Engine_CastVehicleColour_Parms CastVehicleColour_Parms;
	CastVehicleColour_Parms.I = I;
	ProcessEvent(pFnCastVehicleColour,NULL,&CastVehicleColour_Parms,NULL);
	return CastVehicleColour_Parms.ReturnValue;
}

struct Engine_CastFireOffset_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastFireOffset(int I)
{
	static UFieldFunc* pFnCastFireOffset = NULL;
	if(!pFnCastFireOffset)
		pFnCastFireOffset = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastFireOffset");

	Engine_CastFireOffset_Parms CastFireOffset_Parms;
	CastFireOffset_Parms.I = I;
	ProcessEvent(pFnCastFireOffset,NULL,&CastFireOffset_Parms,NULL);
	return CastFireOffset_Parms.ReturnValue;
}

struct Engine_CastWeaponClass_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWeaponClass(int I)
{
	static UFieldFunc* pFnCastWeaponClass = NULL;
	if(!pFnCastWeaponClass)
		pFnCastWeaponClass = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWeaponClass");

	Engine_CastWeaponClass_Parms CastWeaponClass_Parms;
	CastWeaponClass_Parms.I = I;
	ProcessEvent(pFnCastWeaponClass,NULL,&CastWeaponClass_Parms,NULL);
	return CastWeaponClass_Parms.ReturnValue;
}

struct Engine_CastVehicleBatch_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleBatch(int I)
{
	static UFieldFunc* pFnCastVehicleBatch = NULL;
	if(!pFnCastVehicleBatch)
		pFnCastVehicleBatch = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleBatch");

	Engine_CastVehicleBatch_Parms CastVehicleBatch_Parms;
	CastVehicleBatch_Parms.I = I;
	ProcessEvent(pFnCastVehicleBatch,NULL,&CastVehicleBatch_Parms,NULL);
	return CastVehicleBatch_Parms.ReturnValue;
}

struct Engine_CastCSAEndPoint_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAEndPoint(int I)
{
	static UFieldFunc* pFnCastCSAEndPoint = NULL;
	if(!pFnCastCSAEndPoint)
		pFnCastCSAEndPoint = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAEndPoint");

	Engine_CastCSAEndPoint_Parms CastCSAEndPoint_Parms;
	CastCSAEndPoint_Parms.I = I;
	ProcessEvent(pFnCastCSAEndPoint,NULL,&CastCSAEndPoint_Parms,NULL);
	return CastCSAEndPoint_Parms.ReturnValue;
}

struct Engine_CastVehicleSpecificationMethod_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleSpecificationMethod(int I)
{
	static UFieldFunc* pFnCastVehicleSpecificationMethod = NULL;
	if(!pFnCastVehicleSpecificationMethod)
		pFnCastVehicleSpecificationMethod = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleSpecificationMethod");

	Engine_CastVehicleSpecificationMethod_Parms CastVehicleSpecificationMethod_Parms;
	CastVehicleSpecificationMethod_Parms.I = I;
	ProcessEvent(pFnCastVehicleSpecificationMethod,NULL,&CastVehicleSpecificationMethod_Parms,NULL);
	return CastVehicleSpecificationMethod_Parms.ReturnValue;
}

struct Engine_CastTrackedActivityOperation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTrackedActivityOperation(int I)
{
	static UFieldFunc* pFnCastTrackedActivityOperation = NULL;
	if(!pFnCastTrackedActivityOperation)
		pFnCastTrackedActivityOperation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTrackedActivityOperation");

	Engine_CastTrackedActivityOperation_Parms CastTrackedActivityOperation_Parms;
	CastTrackedActivityOperation_Parms.I = I;
	ProcessEvent(pFnCastTrackedActivityOperation,NULL,&CastTrackedActivityOperation_Parms,NULL);
	return CastTrackedActivityOperation_Parms.ReturnValue;
}

struct Engine_CastHUDZoneNotifier_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDZoneNotifier(int I)
{
	static UFieldFunc* pFnCastHUDZoneNotifier = NULL;
	if(!pFnCastHUDZoneNotifier)
		pFnCastHUDZoneNotifier = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDZoneNotifier");

	Engine_CastHUDZoneNotifier_Parms CastHUDZoneNotifier_Parms;
	CastHUDZoneNotifier_Parms.I = I;
	ProcessEvent(pFnCastHUDZoneNotifier,NULL,&CastHUDZoneNotifier_Parms,NULL);
	return CastHUDZoneNotifier_Parms.ReturnValue;
}

struct Engine_CastCrimeTargetType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCrimeTargetType(int I)
{
	static UFieldFunc* pFnCastCrimeTargetType = NULL;
	if(!pFnCastCrimeTargetType)
		pFnCastCrimeTargetType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCrimeTargetType");

	Engine_CastCrimeTargetType_Parms CastCrimeTargetType_Parms;
	CastCrimeTargetType_Parms.I = I;
	ProcessEvent(pFnCastCrimeTargetType,NULL,&CastCrimeTargetType_Parms,NULL);
	return CastCrimeTargetType_Parms.ReturnValue;
}

struct Engine_CastFacialHairRandomGeneration_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastFacialHairRandomGeneration(int I)
{
	static UFieldFunc* pFnCastFacialHairRandomGeneration = NULL;
	if(!pFnCastFacialHairRandomGeneration)
		pFnCastFacialHairRandomGeneration = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastFacialHairRandomGeneration");

	Engine_CastFacialHairRandomGeneration_Parms CastFacialHairRandomGeneration_Parms;
	CastFacialHairRandomGeneration_Parms.I = I;
	ProcessEvent(pFnCastFacialHairRandomGeneration,NULL,&CastFacialHairRandomGeneration_Parms,NULL);
	return CastFacialHairRandomGeneration_Parms.ReturnValue;
}

struct Engine_CastHUDMessageRank_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDMessageRank(int I)
{
	static UFieldFunc* pFnCastHUDMessageRank = NULL;
	if(!pFnCastHUDMessageRank)
		pFnCastHUDMessageRank = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDMessageRank");

	Engine_CastHUDMessageRank_Parms CastHUDMessageRank_Parms;
	CastHUDMessageRank_Parms.I = I;
	ProcessEvent(pFnCastHUDMessageRank,NULL,&CastHUDMessageRank_Parms,NULL);
	return CastHUDMessageRank_Parms.ReturnValue;
}

struct Engine_CastVehicleModelClass_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleModelClass(int I)
{
	static UFieldFunc* pFnCastVehicleModelClass = NULL;
	if(!pFnCastVehicleModelClass)
		pFnCastVehicleModelClass = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleModelClass");

	Engine_CastVehicleModelClass_Parms CastVehicleModelClass_Parms;
	CastVehicleModelClass_Parms.I = I;
	ProcessEvent(pFnCastVehicleModelClass,NULL,&CastVehicleModelClass_Parms,NULL);
	return CastVehicleModelClass_Parms.ReturnValue;
}

struct Engine_CastMarketplaceListType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceListType(int I)
{
	static UFieldFunc* pFnCastMarketplaceListType = NULL;
	if(!pFnCastMarketplaceListType)
		pFnCastMarketplaceListType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceListType");

	Engine_CastMarketplaceListType_Parms CastMarketplaceListType_Parms;
	CastMarketplaceListType_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceListType,NULL,&CastMarketplaceListType_Parms,NULL);
	return CastMarketplaceListType_Parms.ReturnValue;
}

struct Engine_CastContactType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastContactType(int I)
{
	static UFieldFunc* pFnCastContactType = NULL;
	if(!pFnCastContactType)
		pFnCastContactType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastContactType");

	Engine_CastContactType_Parms CastContactType_Parms;
	CastContactType_Parms.I = I;
	ProcessEvent(pFnCastContactType,NULL,&CastContactType_Parms,NULL);
	return CastContactType_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_Bool_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_Bool(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_Bool = NULL;
	if(!pFnCastPawnHitReaction_Bool)
		pFnCastPawnHitReaction_Bool = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_Bool");

	Engine_CastPawnHitReaction_Bool_Parms CastPawnHitReaction_Bool_Parms;
	CastPawnHitReaction_Bool_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_Bool,NULL,&CastPawnHitReaction_Bool_Parms,NULL);
	return CastPawnHitReaction_Bool_Parms.ReturnValue;
}

struct Engine_CastCSAAnimType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAAnimType(int I)
{
	static UFieldFunc* pFnCastCSAAnimType = NULL;
	if(!pFnCastCSAAnimType)
		pFnCastCSAAnimType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAAnimType");

	Engine_CastCSAAnimType_Parms CastCSAAnimType_Parms;
	CastCSAAnimType_Parms.I = I;
	ProcessEvent(pFnCastCSAAnimType,NULL,&CastCSAAnimType_Parms,NULL);
	return CastCSAAnimType_Parms.ReturnValue;
}

struct Engine_CastMissionCriminalDispatchTypes_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMissionCriminalDispatchTypes(int I)
{
	static UFieldFunc* pFnCastMissionCriminalDispatchTypes = NULL;
	if(!pFnCastMissionCriminalDispatchTypes)
		pFnCastMissionCriminalDispatchTypes = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMissionCriminalDispatchTypes");

	Engine_CastMissionCriminalDispatchTypes_Parms CastMissionCriminalDispatchTypes_Parms;
	CastMissionCriminalDispatchTypes_Parms.I = I;
	ProcessEvent(pFnCastMissionCriminalDispatchTypes,NULL,&CastMissionCriminalDispatchTypes_Parms,NULL);
	return CastMissionCriminalDispatchTypes_Parms.ReturnValue;
}

struct Engine_CastOpenWorldConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastOpenWorldConstant(int I)
{
	static UFieldFunc* pFnCastOpenWorldConstant = NULL;
	if(!pFnCastOpenWorldConstant)
		pFnCastOpenWorldConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastOpenWorldConstant");

	Engine_CastOpenWorldConstant_Parms CastOpenWorldConstant_Parms;
	CastOpenWorldConstant_Parms.I = I;
	ProcessEvent(pFnCastOpenWorldConstant,NULL,&CastOpenWorldConstant_Parms,NULL);
	return CastOpenWorldConstant_Parms.ReturnValue;
}

struct Engine_CastSkillRatingConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastSkillRatingConstant(int I)
{
	static UFieldFunc* pFnCastSkillRatingConstant = NULL;
	if(!pFnCastSkillRatingConstant)
		pFnCastSkillRatingConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastSkillRatingConstant");

	Engine_CastSkillRatingConstant_Parms CastSkillRatingConstant_Parms;
	CastSkillRatingConstant_Parms.I = I;
	ProcessEvent(pFnCastSkillRatingConstant,NULL,&CastSkillRatingConstant_Parms,NULL);
	return CastSkillRatingConstant_Parms.ReturnValue;
}

struct Engine_CastCrimeTargetEnvironmental_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCrimeTargetEnvironmental(int I)
{
	static UFieldFunc* pFnCastCrimeTargetEnvironmental = NULL;
	if(!pFnCastCrimeTargetEnvironmental)
		pFnCastCrimeTargetEnvironmental = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCrimeTargetEnvironmental");

	Engine_CastCrimeTargetEnvironmental_Parms CastCrimeTargetEnvironmental_Parms;
	CastCrimeTargetEnvironmental_Parms.I = I;
	ProcessEvent(pFnCastCrimeTargetEnvironmental,NULL,&CastCrimeTargetEnvironmental_Parms,NULL);
	return CastCrimeTargetEnvironmental_Parms.ReturnValue;
}

struct Engine_CastGameplayEventCategory2_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastGameplayEventCategory2(int I)
{
	static UFieldFunc* pFnCastGameplayEventCategory2 = NULL;
	if(!pFnCastGameplayEventCategory2)
		pFnCastGameplayEventCategory2 = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastGameplayEventCategory2");

	Engine_CastGameplayEventCategory2_Parms CastGameplayEventCategory2_Parms;
	CastGameplayEventCategory2_Parms.I = I;
	ProcessEvent(pFnCastGameplayEventCategory2,NULL,&CastGameplayEventCategory2_Parms,NULL);
	return CastGameplayEventCategory2_Parms.ReturnValue;
}

struct Engine_CastYesNoEither_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastYesNoEither(int I)
{
	static UFieldFunc* pFnCastYesNoEither = NULL;
	if(!pFnCastYesNoEither)
		pFnCastYesNoEither = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastYesNoEither");

	Engine_CastYesNoEither_Parms CastYesNoEither_Parms;
	CastYesNoEither_Parms.I = I;
	ProcessEvent(pFnCastYesNoEither,NULL,&CastYesNoEither_Parms,NULL);
	return CastYesNoEither_Parms.ReturnValue;
}

struct Engine_CastMissionResultReason_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMissionResultReason(int I)
{
	static UFieldFunc* pFnCastMissionResultReason = NULL;
	if(!pFnCastMissionResultReason)
		pFnCastMissionResultReason = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMissionResultReason");

	Engine_CastMissionResultReason_Parms CastMissionResultReason_Parms;
	CastMissionResultReason_Parms.I = I;
	ProcessEvent(pFnCastMissionResultReason,NULL,&CastMissionResultReason_Parms,NULL);
	return CastMissionResultReason_Parms.ReturnValue;
}

struct Engine_CastFormulaOperation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastFormulaOperation(int I)
{
	static UFieldFunc* pFnCastFormulaOperation = NULL;
	if(!pFnCastFormulaOperation)
		pFnCastFormulaOperation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastFormulaOperation");

	Engine_CastFormulaOperation_Parms CastFormulaOperation_Parms;
	CastFormulaOperation_Parms.I = I;
	ProcessEvent(pFnCastFormulaOperation,NULL,&CastFormulaOperation_Parms,NULL);
	return CastFormulaOperation_Parms.ReturnValue;
}

struct Engine_CastLocaleTypePriority_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastLocaleTypePriority(int I)
{
	static UFieldFunc* pFnCastLocaleTypePriority = NULL;
	if(!pFnCastLocaleTypePriority)
		pFnCastLocaleTypePriority = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastLocaleTypePriority");

	Engine_CastLocaleTypePriority_Parms CastLocaleTypePriority_Parms;
	CastLocaleTypePriority_Parms.I = I;
	ProcessEvent(pFnCastLocaleTypePriority,NULL,&CastLocaleTypePriority_Parms,NULL);
	return CastLocaleTypePriority_Parms.ReturnValue;
}

struct Engine_CastChatState_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastChatState(int I)
{
	static UFieldFunc* pFnCastChatState = NULL;
	if(!pFnCastChatState)
		pFnCastChatState = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastChatState");

	Engine_CastChatState_Parms CastChatState_Parms;
	CastChatState_Parms.I = I;
	ProcessEvent(pFnCastChatState,NULL,&CastChatState_Parms,NULL);
	return CastChatState_Parms.ReturnValue;
}

struct Engine_CastHostingConfigFileAccountPersistentId_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHostingConfigFileAccountPersistentId(int I)
{
	static UFieldFunc* pFnCastHostingConfigFileAccountPersistentId = NULL;
	if(!pFnCastHostingConfigFileAccountPersistentId)
		pFnCastHostingConfigFileAccountPersistentId = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHostingConfigFileAccountPersistentId");

	Engine_CastHostingConfigFileAccountPersistentId_Parms CastHostingConfigFileAccountPersistentId_Parms;
	CastHostingConfigFileAccountPersistentId_Parms.I = I;
	ProcessEvent(pFnCastHostingConfigFileAccountPersistentId,NULL,&CastHostingConfigFileAccountPersistentId_Parms,NULL);
	return CastHostingConfigFileAccountPersistentId_Parms.ReturnValue;
}

struct Engine_CastFeedbackMessage_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastFeedbackMessage(int I)
{
	static UFieldFunc* pFnCastFeedbackMessage = NULL;
	if(!pFnCastFeedbackMessage)
		pFnCastFeedbackMessage = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastFeedbackMessage");

	Engine_CastFeedbackMessage_Parms CastFeedbackMessage_Parms;
	CastFeedbackMessage_Parms.I = I;
	ProcessEvent(pFnCastFeedbackMessage,NULL,&CastFeedbackMessage_Parms,NULL);
	return CastFeedbackMessage_Parms.ReturnValue;
}

struct Engine_CastWeaponFiringState_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWeaponFiringState(int I)
{
	static UFieldFunc* pFnCastWeaponFiringState = NULL;
	if(!pFnCastWeaponFiringState)
		pFnCastWeaponFiringState = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWeaponFiringState");

	Engine_CastWeaponFiringState_Parms CastWeaponFiringState_Parms;
	CastWeaponFiringState_Parms.I = I;
	ProcessEvent(pFnCastWeaponFiringState,NULL,&CastWeaponFiringState_Parms,NULL);
	return CastWeaponFiringState_Parms.ReturnValue;
}

struct Engine_CastTrackedActivityUnitConversion_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTrackedActivityUnitConversion(int I)
{
	static UFieldFunc* pFnCastTrackedActivityUnitConversion = NULL;
	if(!pFnCastTrackedActivityUnitConversion)
		pFnCastTrackedActivityUnitConversion = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTrackedActivityUnitConversion");

	Engine_CastTrackedActivityUnitConversion_Parms CastTrackedActivityUnitConversion_Parms;
	CastTrackedActivityUnitConversion_Parms.I = I;
	ProcessEvent(pFnCastTrackedActivityUnitConversion,NULL,&CastTrackedActivityUnitConversion_Parms,NULL);
	return CastTrackedActivityUnitConversion_Parms.ReturnValue;
}

struct Engine_CastCCameraMode_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCCameraMode(int I)
{
	static UFieldFunc* pFnCastCCameraMode = NULL;
	if(!pFnCastCCameraMode)
		pFnCastCCameraMode = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCCameraMode");

	Engine_CastCCameraMode_Parms CastCCameraMode_Parms;
	CastCCameraMode_Parms.I = I;
	ProcessEvent(pFnCastCCameraMode,NULL,&CastCCameraMode_Parms,NULL);
	return CastCCameraMode_Parms.ReturnValue;
}

struct Engine_CastInteractiveActorCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastInteractiveActorCategory(int I)
{
	static UFieldFunc* pFnCastInteractiveActorCategory = NULL;
	if(!pFnCastInteractiveActorCategory)
		pFnCastInteractiveActorCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastInteractiveActorCategory");

	Engine_CastInteractiveActorCategory_Parms CastInteractiveActorCategory_Parms;
	CastInteractiveActorCategory_Parms.I = I;
	ProcessEvent(pFnCastInteractiveActorCategory,NULL,&CastInteractiveActorCategory_Parms,NULL);
	return CastInteractiveActorCategory_Parms.ReturnValue;
}

struct Engine_CastFXMaterialImpact_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastFXMaterialImpact(int I)
{
	static UFieldFunc* pFnCastFXMaterialImpact = NULL;
	if(!pFnCastFXMaterialImpact)
		pFnCastFXMaterialImpact = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastFXMaterialImpact");

	Engine_CastFXMaterialImpact_Parms CastFXMaterialImpact_Parms;
	CastFXMaterialImpact_Parms.I = I;
	ProcessEvent(pFnCastFXMaterialImpact,NULL,&CastFXMaterialImpact_Parms,NULL);
	return CastFXMaterialImpact_Parms.ReturnValue;
}

struct Engine_CastTaskTargetCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskTargetCategory(int I)
{
	static UFieldFunc* pFnCastTaskTargetCategory = NULL;
	if(!pFnCastTaskTargetCategory)
		pFnCastTaskTargetCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskTargetCategory");

	Engine_CastTaskTargetCategory_Parms CastTaskTargetCategory_Parms;
	CastTaskTargetCategory_Parms.I = I;
	ProcessEvent(pFnCastTaskTargetCategory,NULL,&CastTaskTargetCategory_Parms,NULL);
	return CastTaskTargetCategory_Parms.ReturnValue;
}

struct Engine_CastDisplayPointActivationType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastDisplayPointActivationType(int I)
{
	static UFieldFunc* pFnCastDisplayPointActivationType = NULL;
	if(!pFnCastDisplayPointActivationType)
		pFnCastDisplayPointActivationType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastDisplayPointActivationType");

	Engine_CastDisplayPointActivationType_Parms CastDisplayPointActivationType_Parms;
	CastDisplayPointActivationType_Parms.I = I;
	ProcessEvent(pFnCastDisplayPointActivationType,NULL,&CastDisplayPointActivationType_Parms,NULL);
	return CastDisplayPointActivationType_Parms.ReturnValue;
}

struct Engine_CastVehicleTempSetup_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleTempSetup(int I)
{
	static UFieldFunc* pFnCastVehicleTempSetup = NULL;
	if(!pFnCastVehicleTempSetup)
		pFnCastVehicleTempSetup = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleTempSetup");

	Engine_CastVehicleTempSetup_Parms CastVehicleTempSetup_Parms;
	CastVehicleTempSetup_Parms.I = I;
	ProcessEvent(pFnCastVehicleTempSetup,NULL,&CastVehicleTempSetup_Parms,NULL);
	return CastVehicleTempSetup_Parms.ReturnValue;
}

struct Engine_CastAPBPawnConstant_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastAPBPawnConstant(int I)
{
	static UFieldFunc* pFnCastAPBPawnConstant = NULL;
	if(!pFnCastAPBPawnConstant)
		pFnCastAPBPawnConstant = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastAPBPawnConstant");

	Engine_CastAPBPawnConstant_Parms CastAPBPawnConstant_Parms;
	CastAPBPawnConstant_Parms.I = I;
	ProcessEvent(pFnCastAPBPawnConstant,NULL,&CastAPBPawnConstant_Parms,NULL);
	return CastAPBPawnConstant_Parms.ReturnValue;
}

struct Engine_CastWeaponPickupAvailability_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWeaponPickupAvailability(int I)
{
	static UFieldFunc* pFnCastWeaponPickupAvailability = NULL;
	if(!pFnCastWeaponPickupAvailability)
		pFnCastWeaponPickupAvailability = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWeaponPickupAvailability");

	Engine_CastWeaponPickupAvailability_Parms CastWeaponPickupAvailability_Parms;
	CastWeaponPickupAvailability_Parms.I = I;
	ProcessEvent(pFnCastWeaponPickupAvailability,NULL,&CastWeaponPickupAvailability_Parms,NULL);
	return CastWeaponPickupAvailability_Parms.ReturnValue;
}

struct Engine_CastTaskItemVisibility_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskItemVisibility(int I)
{
	static UFieldFunc* pFnCastTaskItemVisibility = NULL;
	if(!pFnCastTaskItemVisibility)
		pFnCastTaskItemVisibility = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskItemVisibility");

	Engine_CastTaskItemVisibility_Parms CastTaskItemVisibility_Parms;
	CastTaskItemVisibility_Parms.I = I;
	ProcessEvent(pFnCastTaskItemVisibility,NULL,&CastTaskItemVisibility_Parms,NULL);
	return CastTaskItemVisibility_Parms.ReturnValue;
}

struct Engine_CastNPCReaction_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastNPCReaction(int I)
{
	static UFieldFunc* pFnCastNPCReaction = NULL;
	if(!pFnCastNPCReaction)
		pFnCastNPCReaction = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastNPCReaction");

	Engine_CastNPCReaction_Parms CastNPCReaction_Parms;
	CastNPCReaction_Parms.I = I;
	ProcessEvent(pFnCastNPCReaction,NULL,&CastNPCReaction_Parms,NULL);
	return CastNPCReaction_Parms.ReturnValue;
}

struct Engine_CastMarketplaceSearch_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMarketplaceSearch(int I)
{
	static UFieldFunc* pFnCastMarketplaceSearch = NULL;
	if(!pFnCastMarketplaceSearch)
		pFnCastMarketplaceSearch = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMarketplaceSearch");

	Engine_CastMarketplaceSearch_Parms CastMarketplaceSearch_Parms;
	CastMarketplaceSearch_Parms.I = I;
	ProcessEvent(pFnCastMarketplaceSearch,NULL,&CastMarketplaceSearch_Parms,NULL);
	return CastMarketplaceSearch_Parms.ReturnValue;
}

struct Engine_CastInventoryItemCategoryLimited_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastInventoryItemCategoryLimited(int I)
{
	static UFieldFunc* pFnCastInventoryItemCategoryLimited = NULL;
	if(!pFnCastInventoryItemCategoryLimited)
		pFnCastInventoryItemCategoryLimited = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastInventoryItemCategoryLimited");

	Engine_CastInventoryItemCategoryLimited_Parms CastInventoryItemCategoryLimited_Parms;
	CastInventoryItemCategoryLimited_Parms.I = I;
	ProcessEvent(pFnCastInventoryItemCategoryLimited,NULL,&CastInventoryItemCategoryLimited_Parms,NULL);
	return CastInventoryItemCategoryLimited_Parms.ReturnValue;
}

struct Engine_CastHUDConstantBool_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDConstantBool(int I)
{
	static UFieldFunc* pFnCastHUDConstantBool = NULL;
	if(!pFnCastHUDConstantBool)
		pFnCastHUDConstantBool = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDConstantBool");

	Engine_CastHUDConstantBool_Parms CastHUDConstantBool_Parms;
	CastHUDConstantBool_Parms.I = I;
	ProcessEvent(pFnCastHUDConstantBool,NULL,&CastHUDConstantBool_Parms,NULL);
	return CastHUDConstantBool_Parms.ReturnValue;
}

struct Engine_CastErrorCode_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastErrorCode(int I)
{
	static UFieldFunc* pFnCastErrorCode = NULL;
	if(!pFnCastErrorCode)
		pFnCastErrorCode = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastErrorCode");

	Engine_CastErrorCode_Parms CastErrorCode_Parms;
	CastErrorCode_Parms.I = I;
	ProcessEvent(pFnCastErrorCode,NULL,&CastErrorCode_Parms,NULL);
	return CastErrorCode_Parms.ReturnValue;
}

struct Engine_CastDisplayPointType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastDisplayPointType(int I)
{
	static UFieldFunc* pFnCastDisplayPointType = NULL;
	if(!pFnCastDisplayPointType)
		pFnCastDisplayPointType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastDisplayPointType");

	Engine_CastDisplayPointType_Parms CastDisplayPointType_Parms;
	CastDisplayPointType_Parms.I = I;
	ProcessEvent(pFnCastDisplayPointType,NULL,&CastDisplayPointType_Parms,NULL);
	return CastDisplayPointType_Parms.ReturnValue;
}

struct Engine_CastPlayerRadarPings_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPlayerRadarPings(int I)
{
	static UFieldFunc* pFnCastPlayerRadarPings = NULL;
	if(!pFnCastPlayerRadarPings)
		pFnCastPlayerRadarPings = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPlayerRadarPings");

	Engine_CastPlayerRadarPings_Parms CastPlayerRadarPings_Parms;
	CastPlayerRadarPings_Parms.I = I;
	ProcessEvent(pFnCastPlayerRadarPings,NULL,&CastPlayerRadarPings_Parms,NULL);
	return CastPlayerRadarPings_Parms.ReturnValue;
}

struct Engine_CastTutorialPosition_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTutorialPosition(int I)
{
	static UFieldFunc* pFnCastTutorialPosition = NULL;
	if(!pFnCastTutorialPosition)
		pFnCastTutorialPosition = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTutorialPosition");

	Engine_CastTutorialPosition_Parms CastTutorialPosition_Parms;
	CastTutorialPosition_Parms.I = I;
	ProcessEvent(pFnCastTutorialPosition,NULL,&CastTutorialPosition_Parms,NULL);
	return CastTutorialPosition_Parms.ReturnValue;
}

struct Engine_CastDeployedUsableArray_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastDeployedUsableArray(int I)
{
	static UFieldFunc* pFnCastDeployedUsableArray = NULL;
	if(!pFnCastDeployedUsableArray)
		pFnCastDeployedUsableArray = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastDeployedUsableArray");

	Engine_CastDeployedUsableArray_Parms CastDeployedUsableArray_Parms;
	CastDeployedUsableArray_Parms.I = I;
	ProcessEvent(pFnCastDeployedUsableArray,NULL,&CastDeployedUsableArray_Parms,NULL);
	return CastDeployedUsableArray_Parms.ReturnValue;
}

struct Engine_CastVehicleDistricts_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastVehicleDistricts(int I)
{
	static UFieldFunc* pFnCastVehicleDistricts = NULL;
	if(!pFnCastVehicleDistricts)
		pFnCastVehicleDistricts = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastVehicleDistricts");

	Engine_CastVehicleDistricts_Parms CastVehicleDistricts_Parms;
	CastVehicleDistricts_Parms.I = I;
	ProcessEvent(pFnCastVehicleDistricts,NULL,&CastVehicleDistricts_Parms,NULL);
	return CastVehicleDistricts_Parms.ReturnValue;
}

struct Engine_CastHUDMessageType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDMessageType(int I)
{
	static UFieldFunc* pFnCastHUDMessageType = NULL;
	if(!pFnCastHUDMessageType)
		pFnCastHUDMessageType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDMessageType");

	Engine_CastHUDMessageType_Parms CastHUDMessageType_Parms;
	CastHUDMessageType_Parms.I = I;
	ProcessEvent(pFnCastHUDMessageType,NULL,&CastHUDMessageType_Parms,NULL);
	return CastHUDMessageType_Parms.ReturnValue;
}

struct Engine_CastHUDMarkerCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDMarkerCategory(int I)
{
	static UFieldFunc* pFnCastHUDMarkerCategory = NULL;
	if(!pFnCastHUDMarkerCategory)
		pFnCastHUDMarkerCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDMarkerCategory");

	Engine_CastHUDMarkerCategory_Parms CastHUDMarkerCategory_Parms;
	CastHUDMarkerCategory_Parms.I = I;
	ProcessEvent(pFnCastHUDMarkerCategory,NULL,&CastHUDMarkerCategory_Parms,NULL);
	return CastHUDMarkerCategory_Parms.ReturnValue;
}

struct Engine_CastOrganisation_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastOrganisation(int I)
{
	static UFieldFunc* pFnCastOrganisation = NULL;
	if(!pFnCastOrganisation)
		pFnCastOrganisation = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastOrganisation");

	Engine_CastOrganisation_Parms CastOrganisation_Parms;
	CastOrganisation_Parms.I = I;
	ProcessEvent(pFnCastOrganisation,NULL,&CastOrganisation_Parms,NULL);
	return CastOrganisation_Parms.ReturnValue;
}

struct Engine_CastEncumbrance_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastEncumbrance(int I)
{
	static UFieldFunc* pFnCastEncumbrance = NULL;
	if(!pFnCastEncumbrance)
		pFnCastEncumbrance = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastEncumbrance");

	Engine_CastEncumbrance_Parms CastEncumbrance_Parms;
	CastEncumbrance_Parms.I = I;
	ProcessEvent(pFnCastEncumbrance,NULL,&CastEncumbrance_Parms,NULL);
	return CastEncumbrance_Parms.ReturnValue;
}

struct Engine_CastMissionEnforcerDispatchTypes_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMissionEnforcerDispatchTypes(int I)
{
	static UFieldFunc* pFnCastMissionEnforcerDispatchTypes = NULL;
	if(!pFnCastMissionEnforcerDispatchTypes)
		pFnCastMissionEnforcerDispatchTypes = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMissionEnforcerDispatchTypes");

	Engine_CastMissionEnforcerDispatchTypes_Parms CastMissionEnforcerDispatchTypes_Parms;
	CastMissionEnforcerDispatchTypes_Parms.I = I;
	ProcessEvent(pFnCastMissionEnforcerDispatchTypes,NULL,&CastMissionEnforcerDispatchTypes_Parms,NULL);
	return CastMissionEnforcerDispatchTypes_Parms.ReturnValue;
}

struct Engine_CastCharacterStatus_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCharacterStatus(int I)
{
	static UFieldFunc* pFnCastCharacterStatus = NULL;
	if(!pFnCastCharacterStatus)
		pFnCastCharacterStatus = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCharacterStatus");

	Engine_CastCharacterStatus_Parms CastCharacterStatus_Parms;
	CastCharacterStatus_Parms.I = I;
	ProcessEvent(pFnCastCharacterStatus,NULL,&CastCharacterStatus_Parms,NULL);
	return CastCharacterStatus_Parms.ReturnValue;
}

struct Engine_CastFaction_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastFaction(int I)
{
	static UFieldFunc* pFnCastFaction = NULL;
	if(!pFnCastFaction)
		pFnCastFaction = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastFaction");

	Engine_CastFaction_Parms CastFaction_Parms;
	CastFaction_Parms.I = I;
	ProcessEvent(pFnCastFaction,NULL,&CastFaction_Parms,NULL);
	return CastFaction_Parms.ReturnValue;
}

struct Engine_CastCSAAnimEvent_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAAnimEvent(int I)
{
	static UFieldFunc* pFnCastCSAAnimEvent = NULL;
	if(!pFnCastCSAAnimEvent)
		pFnCastCSAAnimEvent = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAAnimEvent");

	Engine_CastCSAAnimEvent_Parms CastCSAAnimEvent_Parms;
	CastCSAAnimEvent_Parms.I = I;
	ProcessEvent(pFnCastCSAAnimEvent,NULL,&CastCSAAnimEvent_Parms,NULL);
	return CastCSAAnimEvent_Parms.ReturnValue;
}

struct Engine_CastMailInfo_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastMailInfo(int I)
{
	static UFieldFunc* pFnCastMailInfo = NULL;
	if(!pFnCastMailInfo)
		pFnCastMailInfo = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastMailInfo");

	Engine_CastMailInfo_Parms CastMailInfo_Parms;
	CastMailInfo_Parms.I = I;
	ProcessEvent(pFnCastMailInfo,NULL,&CastMailInfo_Parms,NULL);
	return CastMailInfo_Parms.ReturnValue;
}

struct Engine_CastPawnHitReaction_SpringList_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPawnHitReaction_SpringList(int I)
{
	static UFieldFunc* pFnCastPawnHitReaction_SpringList = NULL;
	if(!pFnCastPawnHitReaction_SpringList)
		pFnCastPawnHitReaction_SpringList = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPawnHitReaction_SpringList");

	Engine_CastPawnHitReaction_SpringList_Parms CastPawnHitReaction_SpringList_Parms;
	CastPawnHitReaction_SpringList_Parms.I = I;
	ProcessEvent(pFnCastPawnHitReaction_SpringList,NULL,&CastPawnHitReaction_SpringList_Parms,NULL);
	return CastPawnHitReaction_SpringList_Parms.ReturnValue;
}

struct Engine_CastHUDReticule_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDReticule(int I)
{
	static UFieldFunc* pFnCastHUDReticule = NULL;
	if(!pFnCastHUDReticule)
		pFnCastHUDReticule = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDReticule");

	Engine_CastHUDReticule_Parms CastHUDReticule_Parms;
	CastHUDReticule_Parms.I = I;
	ProcessEvent(pFnCastHUDReticule,NULL,&CastHUDReticule_Parms,NULL);
	return CastHUDReticule_Parms.ReturnValue;
}

struct Engine_CastHUDMarkerState_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastHUDMarkerState(int I)
{
	static UFieldFunc* pFnCastHUDMarkerState = NULL;
	if(!pFnCastHUDMarkerState)
		pFnCastHUDMarkerState = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastHUDMarkerState");

	Engine_CastHUDMarkerState_Parms CastHUDMarkerState_Parms;
	CastHUDMarkerState_Parms.I = I;
	ProcessEvent(pFnCastHUDMarkerState,NULL,&CastHUDMarkerState_Parms,NULL);
	return CastHUDMarkerState_Parms.ReturnValue;
}

struct Engine_CastTutorialType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTutorialType(int I)
{
	static UFieldFunc* pFnCastTutorialType = NULL;
	if(!pFnCastTutorialType)
		pFnCastTutorialType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTutorialType");

	Engine_CastTutorialType_Parms CastTutorialType_Parms;
	CastTutorialType_Parms.I = I;
	ProcessEvent(pFnCastTutorialType,NULL,&CastTutorialType_Parms,NULL);
	return CastTutorialType_Parms.ReturnValue;
}

struct Engine_CastCustomisedAssetPriority_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCustomisedAssetPriority(int I)
{
	static UFieldFunc* pFnCastCustomisedAssetPriority = NULL;
	if(!pFnCastCustomisedAssetPriority)
		pFnCastCustomisedAssetPriority = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCustomisedAssetPriority");

	Engine_CastCustomisedAssetPriority_Parms CastCustomisedAssetPriority_Parms;
	CastCustomisedAssetPriority_Parms.I = I;
	ProcessEvent(pFnCastCustomisedAssetPriority,NULL,&CastCustomisedAssetPriority_Parms,NULL);
	return CastCustomisedAssetPriority_Parms.ReturnValue;
}

struct Engine_CastCSAInputType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSAInputType(int I)
{
	static UFieldFunc* pFnCastCSAInputType = NULL;
	if(!pFnCastCSAInputType)
		pFnCastCSAInputType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSAInputType");

	Engine_CastCSAInputType_Parms CastCSAInputType_Parms;
	CastCSAInputType_Parms.I = I;
	ProcessEvent(pFnCastCSAInputType,NULL,&CastCSAInputType_Parms,NULL);
	return CastCSAInputType_Parms.ReturnValue;
}

struct Engine_CastCapacityItemType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCapacityItemType(int I)
{
	static UFieldFunc* pFnCastCapacityItemType = NULL;
	if(!pFnCastCapacityItemType)
		pFnCastCapacityItemType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCapacityItemType");

	Engine_CastCapacityItemType_Parms CastCapacityItemType_Parms;
	CastCapacityItemType_Parms.I = I;
	ProcessEvent(pFnCastCapacityItemType,NULL,&CastCapacityItemType_Parms,NULL);
	return CastCapacityItemType_Parms.ReturnValue;
}

struct Engine_CastLoadingMovieTransitionType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastLoadingMovieTransitionType(int I)
{
	static UFieldFunc* pFnCastLoadingMovieTransitionType = NULL;
	if(!pFnCastLoadingMovieTransitionType)
		pFnCastLoadingMovieTransitionType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastLoadingMovieTransitionType");

	Engine_CastLoadingMovieTransitionType_Parms CastLoadingMovieTransitionType_Parms;
	CastLoadingMovieTransitionType_Parms.I = I;
	ProcessEvent(pFnCastLoadingMovieTransitionType,NULL,&CastLoadingMovieTransitionType_Parms,NULL);
	return CastLoadingMovieTransitionType_Parms.ReturnValue;
}

struct Engine_CastSpawnDestroyData_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastSpawnDestroyData(int I)
{
	static UFieldFunc* pFnCastSpawnDestroyData = NULL;
	if(!pFnCastSpawnDestroyData)
		pFnCastSpawnDestroyData = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastSpawnDestroyData");

	Engine_CastSpawnDestroyData_Parms CastSpawnDestroyData_Parms;
	CastSpawnDestroyData_Parms.I = I;
	ProcessEvent(pFnCastSpawnDestroyData,NULL,&CastSpawnDestroyData_Parms,NULL);
	return CastSpawnDestroyData_Parms.ReturnValue;
}

struct Engine_CastPedestrianPaletteType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPedestrianPaletteType(int I)
{
	static UFieldFunc* pFnCastPedestrianPaletteType = NULL;
	if(!pFnCastPedestrianPaletteType)
		pFnCastPedestrianPaletteType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPedestrianPaletteType");

	Engine_CastPedestrianPaletteType_Parms CastPedestrianPaletteType_Parms;
	CastPedestrianPaletteType_Parms.I = I;
	ProcessEvent(pFnCastPedestrianPaletteType,NULL,&CastPedestrianPaletteType_Parms,NULL);
	return CastPedestrianPaletteType_Parms.ReturnValue;
}

struct Engine_CastWeaponOverrideType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWeaponOverrideType(int I)
{
	static UFieldFunc* pFnCastWeaponOverrideType = NULL;
	if(!pFnCastWeaponOverrideType)
		pFnCastWeaponOverrideType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWeaponOverrideType");

	Engine_CastWeaponOverrideType_Parms CastWeaponOverrideType_Parms;
	CastWeaponOverrideType_Parms.I = I;
	ProcessEvent(pFnCastWeaponOverrideType,NULL,&CastWeaponOverrideType_Parms,NULL);
	return CastWeaponOverrideType_Parms.ReturnValue;
}

struct Engine_CastWitnessingFunctionality_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWitnessingFunctionality(int I)
{
	static UFieldFunc* pFnCastWitnessingFunctionality = NULL;
	if(!pFnCastWitnessingFunctionality)
		pFnCastWitnessingFunctionality = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWitnessingFunctionality");

	Engine_CastWitnessingFunctionality_Parms CastWitnessingFunctionality_Parms;
	CastWitnessingFunctionality_Parms.I = I;
	ProcessEvent(pFnCastWitnessingFunctionality,NULL,&CastWitnessingFunctionality_Parms,NULL);
	return CastWitnessingFunctionality_Parms.ReturnValue;
}

struct Engine_CastCrimeTargetZone_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCrimeTargetZone(int I)
{
	static UFieldFunc* pFnCastCrimeTargetZone = NULL;
	if(!pFnCastCrimeTargetZone)
		pFnCastCrimeTargetZone = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCrimeTargetZone");

	Engine_CastCrimeTargetZone_Parms CastCrimeTargetZone_Parms;
	CastCrimeTargetZone_Parms.I = I;
	ProcessEvent(pFnCastCrimeTargetZone,NULL,&CastCrimeTargetZone_Parms,NULL);
	return CastCrimeTargetZone_Parms.ReturnValue;
}

struct Engine_CastTESProjectionInfo_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTESProjectionInfo(int I)
{
	static UFieldFunc* pFnCastTESProjectionInfo = NULL;
	if(!pFnCastTESProjectionInfo)
		pFnCastTESProjectionInfo = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTESProjectionInfo");

	Engine_CastTESProjectionInfo_Parms CastTESProjectionInfo_Parms;
	CastTESProjectionInfo_Parms.I = I;
	ProcessEvent(pFnCastTESProjectionInfo,NULL,&CastTESProjectionInfo_Parms,NULL);
	return CastTESProjectionInfo_Parms.ReturnValue;
}

struct Engine_CastWorldFaction_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWorldFaction(int I)
{
	static UFieldFunc* pFnCastWorldFaction = NULL;
	if(!pFnCastWorldFaction)
		pFnCastWorldFaction = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWorldFaction");

	Engine_CastWorldFaction_Parms CastWorldFaction_Parms;
	CastWorldFaction_Parms.I = I;
	ProcessEvent(pFnCastWorldFaction,NULL,&CastWorldFaction_Parms,NULL);
	return CastWorldFaction_Parms.ReturnValue;
}

struct Engine_CastModifierItemEffectType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastModifierItemEffectType(int I)
{
	static UFieldFunc* pFnCastModifierItemEffectType = NULL;
	if(!pFnCastModifierItemEffectType)
		pFnCastModifierItemEffectType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastModifierItemEffectType");

	Engine_CastModifierItemEffectType_Parms CastModifierItemEffectType_Parms;
	CastModifierItemEffectType_Parms.I = I;
	ProcessEvent(pFnCastModifierItemEffectType,NULL,&CastModifierItemEffectType_Parms,NULL);
	return CastModifierItemEffectType_Parms.ReturnValue;
}

struct Engine_CastCSA_IATState_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCSA_IATState(int I)
{
	static UFieldFunc* pFnCastCSA_IATState = NULL;
	if(!pFnCastCSA_IATState)
		pFnCastCSA_IATState = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCSA_IATState");

	Engine_CastCSA_IATState_Parms CastCSA_IATState_Parms;
	CastCSA_IATState_Parms.I = I;
	ProcessEvent(pFnCastCSA_IATState,NULL,&CastCSA_IATState_Parms,NULL);
	return CastCSA_IATState_Parms.ReturnValue;
}

struct Engine_CastTaskObjectiveStage_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTaskObjectiveStage(int I)
{
	static UFieldFunc* pFnCastTaskObjectiveStage = NULL;
	if(!pFnCastTaskObjectiveStage)
		pFnCastTaskObjectiveStage = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTaskObjectiveStage");

	Engine_CastTaskObjectiveStage_Parms CastTaskObjectiveStage_Parms;
	CastTaskObjectiveStage_Parms.I = I;
	ProcessEvent(pFnCastTaskObjectiveStage,NULL,&CastTaskObjectiveStage_Parms,NULL);
	return CastTaskObjectiveStage_Parms.ReturnValue;
}

struct Engine_CastWeaponImpactClass_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastWeaponImpactClass(int I)
{
	static UFieldFunc* pFnCastWeaponImpactClass = NULL;
	if(!pFnCastWeaponImpactClass)
		pFnCastWeaponImpactClass = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastWeaponImpactClass");

	Engine_CastWeaponImpactClass_Parms CastWeaponImpactClass_Parms;
	CastWeaponImpactClass_Parms.I = I;
	ProcessEvent(pFnCastWeaponImpactClass,NULL,&CastWeaponImpactClass_Parms,NULL);
	return CastWeaponImpactClass_Parms.ReturnValue;
}

struct Engine_CastPedestrianTempSetup_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastPedestrianTempSetup(int I)
{
	static UFieldFunc* pFnCastPedestrianTempSetup = NULL;
	if(!pFnCastPedestrianTempSetup)
		pFnCastPedestrianTempSetup = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastPedestrianTempSetup");

	Engine_CastPedestrianTempSetup_Parms CastPedestrianTempSetup_Parms;
	CastPedestrianTempSetup_Parms.I = I;
	ProcessEvent(pFnCastPedestrianTempSetup,NULL,&CastPedestrianTempSetup_Parms,NULL);
	return CastPedestrianTempSetup_Parms.ReturnValue;
}

struct Engine_CastInventoryItemSubCategory_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastInventoryItemSubCategory(int I)
{
	static UFieldFunc* pFnCastInventoryItemSubCategory = NULL;
	if(!pFnCastInventoryItemSubCategory)
		pFnCastInventoryItemSubCategory = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastInventoryItemSubCategory");

	Engine_CastInventoryItemSubCategory_Parms CastInventoryItemSubCategory_Parms;
	CastInventoryItemSubCategory_Parms.I = I;
	ProcessEvent(pFnCastInventoryItemSubCategory,NULL,&CastInventoryItemSubCategory_Parms,NULL);
	return CastInventoryItemSubCategory_Parms.ReturnValue;
}

struct Engine_CastCharacterVOIPStatus_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastCharacterVOIPStatus(int I)
{
	static UFieldFunc* pFnCastCharacterVOIPStatus = NULL;
	if(!pFnCastCharacterVOIPStatus)
		pFnCastCharacterVOIPStatus = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastCharacterVOIPStatus");

	Engine_CastCharacterVOIPStatus_Parms CastCharacterVOIPStatus_Parms;
	CastCharacterVOIPStatus_Parms.I = I;
	ProcessEvent(pFnCastCharacterVOIPStatus,NULL,&CastCharacterVOIPStatus_Parms,NULL);
	return CastCharacterVOIPStatus_Parms.ReturnValue;
}

struct Engine_CastTimeOfDayAvailability_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastTimeOfDayAvailability(int I)
{
	static UFieldFunc* pFnCastTimeOfDayAvailability = NULL;
	if(!pFnCastTimeOfDayAvailability)
		pFnCastTimeOfDayAvailability = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastTimeOfDayAvailability");

	Engine_CastTimeOfDayAvailability_Parms CastTimeOfDayAvailability_Parms;
	CastTimeOfDayAvailability_Parms.I = I;
	ProcessEvent(pFnCastTimeOfDayAvailability,NULL,&CastTimeOfDayAvailability_Parms,NULL);
	return CastTimeOfDayAvailability_Parms.ReturnValue;
}

struct Engine_CastRCEType_Parms
{
	int                                                I;                                                		// 0x000000 (0x0004)              
	unsigned char                                      ReturnValue;                                      		// 0x000004 (0x0001)              
};

unsigned char UPhysicalMaterialSDD::CastRCEType(int I)
{
	static UFieldFunc* pFnCastRCEType = NULL;
	if(!pFnCastRCEType)
		pFnCastRCEType = UObject::FindFunction("Function Engine.PhysicalMaterialSDD.CastRCEType");

	Engine_CastRCEType_Parms CastRCEType_Parms;
	CastRCEType_Parms.I = I;
	ProcessEvent(pFnCastRCEType,NULL,&CastRCEType_Parms,NULL);
	return CastRCEType_Parms.ReturnValue;
}

struct Engine_UpdateGRI_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool AScoreboard::UpdateGRI()
{
	static UFieldFunc* pFnUpdateGRI = NULL;
	if(!pFnUpdateGRI)
		pFnUpdateGRI = UObject::FindFunction("Function Engine.Scoreboard.UpdateGRI");

	Engine_UpdateGRI_Parms UpdateGRI_Parms;
	ProcessEvent(pFnUpdateGRI,NULL,&UpdateGRI_Parms,NULL);
	return UpdateGRI_Parms.ReturnValue;
}

struct Engine_ChangeState_Parms
{
	unsigned long                                      bIsVisible : 1;                                   		// 0x000000 (0x0004) [0x00000001] 
};

void AScoreboard::ChangeState(bool bIsVisible)
{
	static UFieldFunc* pFnChangeState = NULL;
	if(!pFnChangeState)
		pFnChangeState = UObject::FindFunction("Function Engine.Scoreboard.ChangeState");

	Engine_ChangeState_Parms ChangeState_Parms;
	ChangeState_Parms.bIsVisible = bIsVisible;
	ProcessEvent(pFnChangeState,NULL,&ChangeState_Parms,NULL);
}

struct Engine_DrawHUD_Parms
{
};

void AScoreboard::DrawHUD()
{
	static UFieldFunc* pFnDrawHUD = NULL;
	if(!pFnDrawHUD)
		pFnDrawHUD = UObject::FindFunction("Function Engine.Scoreboard.DrawHUD");

	Engine_DrawHUD_Parms DrawHUD_Parms;
	ProcessEvent(pFnDrawHUD,NULL,&DrawHUD_Parms,NULL);
}

struct Engine_UpdateScoreBoard_Parms
{
};

void AScoreboard::UpdateScoreBoard()
{
	static UFieldFunc* pFnUpdateScoreBoard = NULL;
	if(!pFnUpdateScoreBoard)
		pFnUpdateScoreBoard = UObject::FindFunction("Function Engine.Scoreboard.UpdateScoreBoard");

	Engine_UpdateScoreBoard_Parms UpdateScoreBoard_Parms;
	ProcessEvent(pFnUpdateScoreBoard,NULL,&UpdateScoreBoard_Parms,NULL);
}

struct Engine_Initialized_Parms
{
};

void UScriptConsoleEntry::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.ScriptConsoleEntry.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_OnCreateChild_Parms
{
	class UUIObject*                                   CreatedWidget;                                    		// 0x000000 (0x0004)              
	class UUIScreenObject*                             CreatorContainer;                                 		// 0x000004 (0x0004)              
};

void UScriptConsoleEntry::OnCreateChild(class UUIObject* CreatedWidget,class UUIScreenObject* CreatorContainer)
{
	static UFieldFunc* pFnOnCreateChild = NULL;
	if(!pFnOnCreateChild)
		pFnOnCreateChild = UObject::FindFunction("Function Engine.ScriptConsoleEntry.OnCreateChild");

	Engine_OnCreateChild_Parms OnCreateChild_Parms;
	OnCreateChild_Parms.CreatedWidget = CreatedWidget;
	OnCreateChild_Parms.CreatorContainer = CreatorContainer;
	ProcessEvent(pFnOnCreateChild,NULL,&OnCreateChild_Parms,NULL);
}

struct Engine_PostInitialize_Parms
{
};

void UScriptConsoleEntry::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.ScriptConsoleEntry.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_SetValue_Parms
{
	struct FString                                     NewValue;                                         		// 0x000000 (0x000C)              
};

void UScriptConsoleEntry::SetValue(struct FString NewValue)
{
	static UFieldFunc* pFnSetValue = NULL;
	if(!pFnSetValue)
		pFnSetValue = UObject::FindFunction("Function Engine.ScriptConsoleEntry.SetValue");

	Engine_SetValue_Parms SetValue_Parms;
	memcpy(&SetValue_Parms.NewValue,&NewValue,0xC);
	ProcessEvent(pFnSetValue,NULL,&SetValue_Parms,NULL);
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_AttachToActor::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_AttachToActor.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_ConsoleCommand::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_ConsoleCommand.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_VersionUpdated_Parms
{
	int                                                OldVersion;                                       		// 0x000000 (0x0004)              
	int                                                NewVersion;                                       		// 0x000004 (0x0004)              
};

void USeqAct_ConsoleCommand::VersionUpdated(int OldVersion,int NewVersion)
{
	static UFieldFunc* pFnVersionUpdated = NULL;
	if(!pFnVersionUpdated)
		pFnVersionUpdated = UObject::FindFunction("Function Engine.SeqAct_ConsoleCommand.VersionUpdated");

	Engine_VersionUpdated_Parms VersionUpdated_Parms;
	VersionUpdated_Parms.OldVersion = OldVersion;
	VersionUpdated_Parms.NewVersion = NewVersion;
	ProcessEvent(pFnVersionUpdated,NULL,&VersionUpdated_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void USeqAct_ControlMovieTexture::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.SeqAct_ControlMovieTexture.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ControlMovieTexture::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ControlMovieTexture.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_MakeNoise::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_MakeNoise.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_Activated_Parms
{
	//unsigned long                                      bIgnoreDefault : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	//class USeqVar_Vector*                              VectVar;                                          		// 0x000004 (0x0004)              
	//FVector3                                           Value;                                            		// 0x000008 (0x000C)              
};

void USeqAct_SetVector::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.SeqAct_SetVector.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ToggleAffectedByHitEffects::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ToggleAffectedByHitEffects.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ToggleCinematicMode::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ToggleCinematicMode.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ToggleGodMode::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ToggleGodMode.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ToggleHidden::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ToggleHidden.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ToggleHUD::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ToggleHUD.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_ToggleHUD::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_ToggleHUD.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool USeqAct_ToggleInput::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.SeqAct_ToggleInput.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqAct_UpdateDynamicCover::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqAct_UpdateDynamicCover.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidDamageType_Parms
{
	class UClass*                                      InDamageType;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
	//int                                                Idx;                                              		// 0x000008 (0x0004)              
	//unsigned long                                      bValidDamageType : 1;                             		// 0x00000C (0x0004) [0x00000001] 
};

bool USeqEvent_TakeDamage::IsValidDamageType(class UClass* InDamageType)
{
	static UFieldFunc* pFnIsValidDamageType = NULL;
	if(!pFnIsValidDamageType)
		pFnIsValidDamageType = UObject::FindFunction("Function Engine.SeqEvent_TakeDamage.IsValidDamageType");

	Engine_IsValidDamageType_Parms IsValidDamageType_Parms;
	IsValidDamageType_Parms.InDamageType = InDamageType;
	ProcessEvent(pFnIsValidDamageType,NULL,&IsValidDamageType_Parms,NULL);
	return IsValidDamageType_Parms.ReturnValue;
}

struct Engine_Reset_Parms
{
};

void USeqEvent_TakeDamage::Reset()
{
	static UFieldFunc* pFnReset = NULL;
	if(!pFnReset)
		pFnReset = UObject::FindFunction("Function Engine.SeqEvent_TakeDamage.Reset");

	Engine_Reset_Parms Reset_Parms;
	ProcessEvent(pFnReset,NULL,&Reset_Parms,NULL);
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int USeqEvent_TakeDamage::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.SeqEvent_TakeDamage.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_HandleDamage_Parms
{
	class AActor*                                      InOriginator;                                     		// 0x000000 (0x0004)              
	class AActor*                                      InInstigator;                                     		// 0x000004 (0x0004)              
	class UClass*                                      InDamageType;                                     		// 0x000008 (0x0004)              
	int                                                inAmount;                                         		// 0x00000C (0x0004)              
	//class USeqVar_Float*                               FloatVar;                                         		// 0x000010 (0x0004)              
	//unsigned long                                      bAlreadyActivatedThisTick : 1;                    		// 0x000014 (0x0004) [0x00000001] 
};

void USeqEvent_TakeDamage::HandleDamage(class AActor* InOriginator,class AActor* InInstigator,class UClass* InDamageType,int inAmount)
{
	static UFieldFunc* pFnHandleDamage = NULL;
	if(!pFnHandleDamage)
		pFnHandleDamage = UObject::FindFunction("Function Engine.SeqEvent_TakeDamage.HandleDamage");

	Engine_HandleDamage_Parms HandleDamage_Parms;
	HandleDamage_Parms.InOriginator = InOriginator;
	HandleDamage_Parms.InInstigator = InInstigator;
	HandleDamage_Parms.InDamageType = InDamageType;
	HandleDamage_Parms.inAmount = inAmount;
	ProcessEvent(pFnHandleDamage,NULL,&HandleDamage_Parms,NULL);
}

struct Engine_ClearSharedFile_Parms
{
	struct FString                                     SharedHandle;                                     		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USharedCloudFileInterface::ClearSharedFile(struct FString SharedHandle)
{
	static UFieldFunc* pFnClearSharedFile = NULL;
	if(!pFnClearSharedFile)
		pFnClearSharedFile = UObject::FindFunction("Function Engine.SharedCloudFileInterface.ClearSharedFile");

	Engine_ClearSharedFile_Parms ClearSharedFile_Parms;
	memcpy(&ClearSharedFile_Parms.SharedHandle,&SharedHandle,0xC);
	ProcessEvent(pFnClearSharedFile,NULL,&ClearSharedFile_Parms,NULL);
	return ClearSharedFile_Parms.ReturnValue;
}

struct Engine_OnReadSharedFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     SharedHandle;                                     		// 0x000004 (0x000C)              
};

void USharedCloudFileInterface::OnReadSharedFileComplete(bool bWasSuccessful,struct FString SharedHandle)
{
	static UFieldFunc* pFnOnReadSharedFileComplete = NULL;
	if(!pFnOnReadSharedFileComplete)
		pFnOnReadSharedFileComplete = UObject::FindFunction("Function Engine.SharedCloudFileInterface.OnReadSharedFileComplete");

	Engine_OnReadSharedFileComplete_Parms OnReadSharedFileComplete_Parms;
	OnReadSharedFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnReadSharedFileComplete_Parms.SharedHandle,&SharedHandle,0xC);
	ProcessEvent(pFnOnReadSharedFileComplete,NULL,&OnReadSharedFileComplete_Parms,NULL);
}

struct Engine_ClearWriteSharedFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             WriteSharedFileCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void USharedCloudFileInterface::ClearWriteSharedFileCompleteDelegate(struct FScriptDelegate WriteSharedFileCompleteDelegate)
{
	static UFieldFunc* pFnClearWriteSharedFileCompleteDelegate = NULL;
	if(!pFnClearWriteSharedFileCompleteDelegate)
		pFnClearWriteSharedFileCompleteDelegate = UObject::FindFunction("Function Engine.SharedCloudFileInterface.ClearWriteSharedFileCompleteDelegate");

	Engine_ClearWriteSharedFileCompleteDelegate_Parms ClearWriteSharedFileCompleteDelegate_Parms;
	memcpy(&ClearWriteSharedFileCompleteDelegate_Parms.WriteSharedFileCompleteDelegate,&WriteSharedFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearWriteSharedFileCompleteDelegate,NULL,&ClearWriteSharedFileCompleteDelegate_Parms,NULL);
}

struct Engine_ClearReadSharedFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadSharedFileCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void USharedCloudFileInterface::ClearReadSharedFileCompleteDelegate(struct FScriptDelegate ReadSharedFileCompleteDelegate)
{
	static UFieldFunc* pFnClearReadSharedFileCompleteDelegate = NULL;
	if(!pFnClearReadSharedFileCompleteDelegate)
		pFnClearReadSharedFileCompleteDelegate = UObject::FindFunction("Function Engine.SharedCloudFileInterface.ClearReadSharedFileCompleteDelegate");

	Engine_ClearReadSharedFileCompleteDelegate_Parms ClearReadSharedFileCompleteDelegate_Parms;
	memcpy(&ClearReadSharedFileCompleteDelegate_Parms.ReadSharedFileCompleteDelegate,&ReadSharedFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadSharedFileCompleteDelegate,NULL,&ClearReadSharedFileCompleteDelegate_Parms,NULL);
}

struct Engine_AddWriteSharedFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             WriteSharedFileCompleteDelegate;                  		// 0x000000 (0x000C)              
};

void USharedCloudFileInterface::AddWriteSharedFileCompleteDelegate(struct FScriptDelegate WriteSharedFileCompleteDelegate)
{
	static UFieldFunc* pFnAddWriteSharedFileCompleteDelegate = NULL;
	if(!pFnAddWriteSharedFileCompleteDelegate)
		pFnAddWriteSharedFileCompleteDelegate = UObject::FindFunction("Function Engine.SharedCloudFileInterface.AddWriteSharedFileCompleteDelegate");

	Engine_AddWriteSharedFileCompleteDelegate_Parms AddWriteSharedFileCompleteDelegate_Parms;
	memcpy(&AddWriteSharedFileCompleteDelegate_Parms.WriteSharedFileCompleteDelegate,&WriteSharedFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddWriteSharedFileCompleteDelegate,NULL,&AddWriteSharedFileCompleteDelegate_Parms,NULL);
}

struct Engine_ClearSharedFiles_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool USharedCloudFileInterface::ClearSharedFiles()
{
	static UFieldFunc* pFnClearSharedFiles = NULL;
	if(!pFnClearSharedFiles)
		pFnClearSharedFiles = UObject::FindFunction("Function Engine.SharedCloudFileInterface.ClearSharedFiles");

	Engine_ClearSharedFiles_Parms ClearSharedFiles_Parms;
	ProcessEvent(pFnClearSharedFiles,NULL,&ClearSharedFiles_Parms,NULL);
	return ClearSharedFiles_Parms.ReturnValue;
}

struct Engine_AddReadSharedFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadSharedFileCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void USharedCloudFileInterface::AddReadSharedFileCompleteDelegate(struct FScriptDelegate ReadSharedFileCompleteDelegate)
{
	static UFieldFunc* pFnAddReadSharedFileCompleteDelegate = NULL;
	if(!pFnAddReadSharedFileCompleteDelegate)
		pFnAddReadSharedFileCompleteDelegate = UObject::FindFunction("Function Engine.SharedCloudFileInterface.AddReadSharedFileCompleteDelegate");

	Engine_AddReadSharedFileCompleteDelegate_Parms AddReadSharedFileCompleteDelegate_Parms;
	memcpy(&AddReadSharedFileCompleteDelegate_Parms.ReadSharedFileCompleteDelegate,&ReadSharedFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadSharedFileCompleteDelegate,NULL,&AddReadSharedFileCompleteDelegate_Parms,NULL);
}

struct Engine_WriteSharedFile_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00000C (0x000C)              
	TArray<unsigned char>                              Contents;                                         		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool USharedCloudFileInterface::WriteSharedFile(struct FString UserId,struct FString Filename,TArray<unsigned char>* Contents)
{
	static UFieldFunc* pFnWriteSharedFile = NULL;
	if(!pFnWriteSharedFile)
		pFnWriteSharedFile = UObject::FindFunction("Function Engine.SharedCloudFileInterface.WriteSharedFile");

	Engine_WriteSharedFile_Parms WriteSharedFile_Parms;
	memcpy(&WriteSharedFile_Parms.UserId,&UserId,0xC);
	memcpy(&WriteSharedFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnWriteSharedFile,NULL,&WriteSharedFile_Parms,NULL);
	if(Contents)
		memcpy(Contents,&WriteSharedFile_Parms.Contents,0xC);
	return WriteSharedFile_Parms.ReturnValue;
}

struct Engine_ReadSharedFile_Parms
{
	struct FString                                     SharedHandle;                                     		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool USharedCloudFileInterface::ReadSharedFile(struct FString SharedHandle)
{
	static UFieldFunc* pFnReadSharedFile = NULL;
	if(!pFnReadSharedFile)
		pFnReadSharedFile = UObject::FindFunction("Function Engine.SharedCloudFileInterface.ReadSharedFile");

	Engine_ReadSharedFile_Parms ReadSharedFile_Parms;
	memcpy(&ReadSharedFile_Parms.SharedHandle,&SharedHandle,0xC);
	ProcessEvent(pFnReadSharedFile,NULL,&ReadSharedFile_Parms,NULL);
	return ReadSharedFile_Parms.ReturnValue;
}

struct Engine_GetSharedFileContents_Parms
{
	struct FString                                     SharedHandle;                                     		// 0x000000 (0x000C)              
	TArray<unsigned char>                              FileContents;                                     		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool USharedCloudFileInterface::GetSharedFileContents(struct FString SharedHandle,TArray<unsigned char>* FileContents)
{
	static UFieldFunc* pFnGetSharedFileContents = NULL;
	if(!pFnGetSharedFileContents)
		pFnGetSharedFileContents = UObject::FindFunction("Function Engine.SharedCloudFileInterface.GetSharedFileContents");

	Engine_GetSharedFileContents_Parms GetSharedFileContents_Parms;
	memcpy(&GetSharedFileContents_Parms.SharedHandle,&SharedHandle,0xC);
	ProcessEvent(pFnGetSharedFileContents,NULL,&GetSharedFileContents_Parms,NULL);
	if(FileContents)
		memcpy(FileContents,&GetSharedFileContents_Parms.FileContents,0xC);
	return GetSharedFileContents_Parms.ReturnValue;
}

struct Engine_OnWriteSharedFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
	struct FString                                     SharedHandle;                                     		// 0x00001C (0x000C)              
};

void USharedCloudFileInterface::OnWriteSharedFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename,struct FString SharedHandle)
{
	static UFieldFunc* pFnOnWriteSharedFileComplete = NULL;
	if(!pFnOnWriteSharedFileComplete)
		pFnOnWriteSharedFileComplete = UObject::FindFunction("Function Engine.SharedCloudFileInterface.OnWriteSharedFileComplete");

	Engine_OnWriteSharedFileComplete_Parms OnWriteSharedFileComplete_Parms;
	OnWriteSharedFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnWriteSharedFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnWriteSharedFileComplete_Parms.Filename,&Filename,0xC);
	memcpy(&OnWriteSharedFileComplete_Parms.SharedHandle,&SharedHandle,0xC);
	ProcessEvent(pFnOnWriteSharedFileComplete,NULL,&OnWriteSharedFileComplete_Parms,NULL);
}

struct Engine_Tick_Parms
{
	float                                              DeltaTime;                                        		// 0x000000 (0x0004)              
	//TArray<class USequenceEvent*>                      losEvents;                                        		// 0x000004 (0x000C)              
	//class USeqEvent_LOS*                               Evt;                                              		// 0x000010 (0x0004)              
	//class APlayerController*                           Player;                                           		// 0x000014 (0x0004)              
	//int                                                Idx;                                              		// 0x000018 (0x0004)              
	//FVector3                                           cameraLoc;                                        		// 0x00001C (0x000C)              
	//FRotator                                           cameraRot;                                        		// 0x000028 (0x000C)              
	//float                                              cameraDist;                                       		// 0x000034 (0x0004)              
};

void ATrigger_LOS::Tick(float DeltaTime)
{
	static UFieldFunc* pFnTick = NULL;
	if(!pFnTick)
		pFnTick = UObject::FindFunction("Function Engine.Trigger_LOS.Tick");

	Engine_Tick_Parms Tick_Parms;
	Tick_Parms.DeltaTime = DeltaTime;
	ProcessEvent(pFnTick,NULL,&Tick_Parms,NULL);
}

struct Engine_SuggestMovePreparation_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool ATriggeredPath::SuggestMovePreparation(class APawn* Other)
{
	static UFieldFunc* pFnSuggestMovePreparation = NULL;
	if(!pFnSuggestMovePreparation)
		pFnSuggestMovePreparation = UObject::FindFunction("Function Engine.TriggeredPath.SuggestMovePreparation");

	Engine_SuggestMovePreparation_Parms SuggestMovePreparation_Parms;
	SuggestMovePreparation_Parms.Other = Other;
	ProcessEvent(pFnSuggestMovePreparation,NULL,&SuggestMovePreparation_Parms,NULL);
	return SuggestMovePreparation_Parms.ReturnValue;
}

struct Engine_OnToggle_Parms
{
	class USeqAct_Toggle*                              inAction;                                         		// 0x000000 (0x0004)              
};

void ATriggeredPath::OnToggle(class USeqAct_Toggle* inAction)
{
	static UFieldFunc* pFnOnToggle = NULL;
	if(!pFnOnToggle)
		pFnOnToggle = UObject::FindFunction("Function Engine.TriggeredPath.OnToggle");

	Engine_OnToggle_Parms OnToggle_Parms;
	OnToggle_Parms.inAction = inAction;
	ProcessEvent(pFnOnToggle,NULL,&OnToggle_Parms,NULL);
}

struct Engine_SpecialHandling_Parms
{
	class APawn*                                       Other;                                            		// 0x000000 (0x0004)              
	class AActor*                                      ReturnValue;                                      		// 0x000004 (0x0004)              
	//class AActor*                                      TouchActor;                                       		// 0x000008 (0x0004)              
};

class AActor* ATriggeredPath::SpecialHandling(class APawn* Other)
{
	static UFieldFunc* pFnSpecialHandling = NULL;
	if(!pFnSpecialHandling)
		pFnSpecialHandling = UObject::FindFunction("Function Engine.TriggeredPath.SpecialHandling");

	Engine_SpecialHandling_Parms SpecialHandling_Parms;
	SpecialHandling_Parms.Other = Other;
	ProcessEvent(pFnSpecialHandling,NULL,&SpecialHandling_Parms,NULL);
	return SpecialHandling_Parms.ReturnValue;
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
	//class APlayerController*                           PlayerCon;                                        		// 0x000020 (0x0004)              
	//int                                                Index;                                            		// 0x000024 (0x0004)              
};

void ATriggerStreamingLevel::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.TriggerStreamingLevel.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void UUIAction_ActivatePage::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_ActivatePage.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void UUIAction_EnablePage::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_EnablePage.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
	//int                                                SearchIndex;                                      		// 0x000000 (0x0004)              
};

void UUIAction_FindPageByCaption::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_FindPageByCaption.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void UUIAction_GetPageReference::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_GetPageReference.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void UUIAction_FindPageByIndex::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_FindPageByIndex.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
};

void UUIAction_GetActivePage::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_GetActivePage.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
	//int                                                PageCount;                                        		// 0x000000 (0x0004)              
	//class USeqVar_Int*                                 IntVar;                                           		// 0x000004 (0x0004)              
	//unsigned long                                      bSuccess : 1;                                     		// 0x000008 (0x0004) [0x00000001] 
};

void UUIAction_GetPageCount::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_GetPageCount.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
	//unsigned long                                      bSuccess : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	//class UUITabPage*                                  NewPage;                                          		// 0x000004 (0x0004)              
	//class USeqVar_Object*                              ObjVar;                                           		// 0x000008 (0x0004)              
};

void UUIAction_InsertPage::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_InsertPage.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_IsValidUISequenceObject_Parms
{
	class UUIScreenObject*                             TargetObject;                                     		// 0x000000 (0x0004)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000004 (0x0004) [0x00000001] 
};

bool UUIAction_PlaySound::IsValidUISequenceObject(class UUIScreenObject* TargetObject)
{
	static UFieldFunc* pFnIsValidUISequenceObject = NULL;
	if(!pFnIsValidUISequenceObject)
		pFnIsValidUISequenceObject = UObject::FindFunction("Function Engine.UIAction_PlaySound.IsValidUISequenceObject");

	Engine_IsValidUISequenceObject_Parms IsValidUISequenceObject_Parms;
	IsValidUISequenceObject_Parms.TargetObject = TargetObject;
	ProcessEvent(pFnIsValidUISequenceObject,NULL,&IsValidUISequenceObject_Parms,NULL);
	return IsValidUISequenceObject_Parms.ReturnValue;
}

struct Engine_Activated_Parms
{
};

void UUIAction_RemovePage::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_RemovePage.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_Activated_Parms
{
	//unsigned long                                      bSuccess : 1;                                     		// 0x000000 (0x0004) [0x00000001] 
	//class UUITabPage*                                  NewPage;                                          		// 0x000004 (0x0004)              
	//class USeqVar_Object*                              ObjVar;                                           		// 0x000008 (0x0004)              
};

void UUIAction_ReplacePage::Activated()
{
	static UFieldFunc* pFnActivated = NULL;
	if(!pFnActivated)
		pFnActivated = UObject::FindFunction("Function Engine.UIAction_ReplacePage.Activated");

	Engine_Activated_Parms Activated_Parms;
	ProcessEvent(pFnActivated,NULL,&Activated_Parms,NULL);
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_ShowFeedbackUI::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_ShowFeedbackUI.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_ShowFriendInviteUI::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_ShowFriendInviteUI.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIAction_ShowGamerCardUI::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIAction_ShowGamerCardUI.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_IsValidLevelSequenceObject_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUICond_SwitchWidget::IsValidLevelSequenceObject()
{
	static UFieldFunc* pFnIsValidLevelSequenceObject = NULL;
	if(!pFnIsValidLevelSequenceObject)
		pFnIsValidLevelSequenceObject = UObject::FindFunction("Function Engine.UICond_SwitchWidget.IsValidLevelSequenceObject");

	Engine_IsValidLevelSequenceObject_Parms IsValidLevelSequenceObject_Parms;
	ProcessEvent(pFnIsValidLevelSequenceObject,NULL,&IsValidLevelSequenceObject_Parms,NULL);
	return IsValidLevelSequenceObject_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIEvent_Initialized::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIEvent_Initialized.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_GetObjClassVersion_Parms
{
	int                                                ReturnValue;                                      		// 0x000000 (0x0004)              
};

int UUIEvent_SceneActivated::GetObjClassVersion()
{
	static UFieldFunc* pFnGetObjClassVersion = NULL;
	if(!pFnGetObjClassVersion)
		pFnGetObjClassVersion = UObject::FindFunction("Function Engine.UIEvent_SceneActivated.GetObjClassVersion");

	Engine_GetObjClassVersion_Parms GetObjClassVersion_Parms;
	ProcessEvent(pFnGetObjClassVersion,NULL,&GetObjClassVersion_Parms,NULL);
	return GetObjClassVersion_Parms.ReturnValue;
}

struct Engine_Deactivated_Parms
{
	//int                                                I;                                                		// 0x000000 (0x0004)              
	//class UUIScene*                                    OwnerScene;                                       		// 0x000004 (0x0004)              
};

void UUIEvent_SceneActivated::Deactivated()
{
	static UFieldFunc* pFnDeactivated = NULL;
	if(!pFnDeactivated)
		pFnDeactivated = UObject::FindFunction("Function Engine.UIEvent_SceneActivated.Deactivated");

	Engine_Deactivated_Parms Deactivated_Parms;
	ProcessEvent(pFnDeactivated,NULL,&Deactivated_Parms,NULL);
}

struct Engine_IsProviderDisabled_Parms
{
	unsigned long                                      ReturnValue : 1;                                  		// 0x000000 (0x0004) [0x00000001] 
};

bool UUIGameInfoSummary::IsProviderDisabled()
{
	static UFieldFunc* pFnIsProviderDisabled = NULL;
	if(!pFnIsProviderDisabled)
		pFnIsProviderDisabled = UObject::FindFunction("Function Engine.UIGameInfoSummary.IsProviderDisabled");

	Engine_IsProviderDisabled_Parms IsProviderDisabled_Parms;
	ProcessEvent(pFnIsProviderDisabled,NULL,&IsProviderDisabled_Parms,NULL);
	return IsProviderDisabled_Parms.ReturnValue;
}

struct Engine_OnCreateChild_Parms
{
	class UUIObject*                                   CreatedWidget;                                    		// 0x000000 (0x0004)              
	class UUIScreenObject*                             CreatorContainer;                                 		// 0x000004 (0x0004)              
};

void UUIScriptConsoleScene::OnCreateChild(class UUIObject* CreatedWidget,class UUIScreenObject* CreatorContainer)
{
	static UFieldFunc* pFnOnCreateChild = NULL;
	if(!pFnOnCreateChild)
		pFnOnCreateChild = UObject::FindFunction("Function Engine.UIScriptConsoleScene.OnCreateChild");

	Engine_OnCreateChild_Parms OnCreateChild_Parms;
	OnCreateChild_Parms.CreatedWidget = CreatedWidget;
	OnCreateChild_Parms.CreatorContainer = CreatorContainer;
	ProcessEvent(pFnOnCreateChild,NULL,&OnCreateChild_Parms,NULL);
}

struct Engine_PostInitialize_Parms
{
};

void UUIScriptConsoleScene::PostInitialize()
{
	static UFieldFunc* pFnPostInitialize = NULL;
	if(!pFnPostInitialize)
		pFnPostInitialize = UObject::FindFunction("Function Engine.UIScriptConsoleScene.PostInitialize");

	Engine_PostInitialize_Parms PostInitialize_Parms;
	ProcessEvent(pFnPostInitialize,NULL,&PostInitialize_Parms,NULL);
}

struct Engine_Initialized_Parms
{
};

void UUIScriptConsoleScene::Initialized()
{
	static UFieldFunc* pFnInitialized = NULL;
	if(!pFnInitialized)
		pFnInitialized = UObject::FindFunction("Function Engine.UIScriptConsoleScene.Initialized");

	Engine_Initialized_Parms Initialized_Parms;
	ProcessEvent(pFnInitialized,NULL,&Initialized_Parms,NULL);
}

struct Engine_SetDataBlob_Parms
{
	struct FString                                     StorageID;                                        		// 0x000000 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x00000C (0x000C)              
	TArray<unsigned char>                              DataBlob;                                         		// 0x000018 (0x000C)              
	struct FScriptDelegate                             InSetDataBlobCallback;                            		// 0x000024 (0x000C)              
	//unsigned long                                      ErrorOccured : 1;                                 		// 0x000030 (0x0004) [0x00000001] 
	//struct FString                                     Error;                                            		// 0x000034 (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::SetDataBlob(struct FString StorageID,struct FString BlobName,TArray<unsigned char>* DataBlob,struct FScriptDelegate InSetDataBlobCallback)
{
	static UFieldFunc* pFnSetDataBlob = NULL;
	if(!pFnSetDataBlob)
		pFnSetDataBlob = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.SetDataBlob");

	Engine_SetDataBlob_Parms SetDataBlob_Parms;
	memcpy(&SetDataBlob_Parms.StorageID,&StorageID,0xC);
	memcpy(&SetDataBlob_Parms.BlobName,&BlobName,0xC);
	memcpy(&SetDataBlob_Parms.InSetDataBlobCallback,&InSetDataBlobCallback,0xC);
	ProcessEvent(pFnSetDataBlob,NULL,&SetDataBlob_Parms,NULL);
	if(DataBlob)
		memcpy(DataBlob,&SetDataBlob_Parms.DataBlob,0xC);
}

struct Engine_OnReadUserFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
	//struct FScriptDelegate                             Callback;                                         		// 0x00001C (0x000C)              
	//TArray<unsigned char>                              FileContents;                                     		// 0x000028 (0x000C)              
	//unsigned long                                      LocalResult : 1;                                  		// 0x000034 (0x0004) [0x00000001] 
};

void UUserCloudFileCloudSaveSystemDataBlobStore::OnReadUserFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnOnReadUserFileComplete = NULL;
	if(!pFnOnReadUserFileComplete)
		pFnOnReadUserFileComplete = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.OnReadUserFileComplete");

	Engine_OnReadUserFileComplete_Parms OnReadUserFileComplete_Parms;
	OnReadUserFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnReadUserFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnReadUserFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnReadUserFileComplete,NULL,&OnReadUserFileComplete_Parms,NULL);
}

struct Engine_DeleteDataBlobCallbackDelegate_Parms
{
	unsigned long                                      bWasSucessfull : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	struct FString                                     Error;                                            		// 0x00001C (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::DeleteDataBlobCallbackDelegate(bool bWasSucessfull,struct FString StorageID,struct FString BlobName,struct FString Error)
{
	static UFieldFunc* pFnDeleteDataBlobCallbackDelegate = NULL;
	if(!pFnDeleteDataBlobCallbackDelegate)
		pFnDeleteDataBlobCallbackDelegate = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.DeleteDataBlobCallbackDelegate");

	Engine_DeleteDataBlobCallbackDelegate_Parms DeleteDataBlobCallbackDelegate_Parms;
	DeleteDataBlobCallbackDelegate_Parms.bWasSucessfull = bWasSucessfull;
	memcpy(&DeleteDataBlobCallbackDelegate_Parms.StorageID,&StorageID,0xC);
	memcpy(&DeleteDataBlobCallbackDelegate_Parms.BlobName,&BlobName,0xC);
	memcpy(&DeleteDataBlobCallbackDelegate_Parms.Error,&Error,0xC);
	ProcessEvent(pFnDeleteDataBlobCallbackDelegate,NULL,&DeleteDataBlobCallbackDelegate_Parms,NULL);
}

struct Engine_GetDataBlobCallbackDelegate_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	TArray<unsigned char>                              DataBlob;                                         		// 0x00001C (0x000C)              
	struct FString                                     Error;                                            		// 0x000028 (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::GetDataBlobCallbackDelegate(bool bWasSuccessful,struct FString StorageID,struct FString BlobName,TArray<unsigned char>* DataBlob,struct FString Error)
{
	static UFieldFunc* pFnGetDataBlobCallbackDelegate = NULL;
	if(!pFnGetDataBlobCallbackDelegate)
		pFnGetDataBlobCallbackDelegate = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.GetDataBlobCallbackDelegate");

	Engine_GetDataBlobCallbackDelegate_Parms GetDataBlobCallbackDelegate_Parms;
	GetDataBlobCallbackDelegate_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&GetDataBlobCallbackDelegate_Parms.StorageID,&StorageID,0xC);
	memcpy(&GetDataBlobCallbackDelegate_Parms.BlobName,&BlobName,0xC);
	memcpy(&GetDataBlobCallbackDelegate_Parms.Error,&Error,0xC);
	ProcessEvent(pFnGetDataBlobCallbackDelegate,NULL,&GetDataBlobCallbackDelegate_Parms,NULL);
	if(DataBlob)
		memcpy(DataBlob,&GetDataBlobCallbackDelegate_Parms.DataBlob,0xC);
}

struct Engine_Init_Parms
{
	class UUserCloudFileInterface*                     InUserCloudFile;                                  		// 0x000000 (0x0008)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::Init(class UUserCloudFileInterface* InUserCloudFile)
{
	static UFieldFunc* pFnInit = NULL;
	if(!pFnInit)
		pFnInit = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.Init");

	Engine_Init_Parms Init_Parms;
	Init_Parms.InUserCloudFile = InUserCloudFile;
	ProcessEvent(pFnInit,NULL,&Init_Parms,NULL);
}

struct Engine_GetDataBlob_Parms
{
	struct FString                                     StorageID;                                        		// 0x000000 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x00000C (0x000C)              
	struct FScriptDelegate                             InGetDataBlobCallback;                            		// 0x000018 (0x000C)              
	//unsigned long                                      ErrorOccured : 1;                                 		// 0x000024 (0x0004) [0x00000001] 
	//struct FString                                     Error;                                            		// 0x000028 (0x000C)              
	//TArray<unsigned char>                              EmptyBuffer;                                      		// 0x000034 (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::GetDataBlob(struct FString StorageID,struct FString BlobName,struct FScriptDelegate InGetDataBlobCallback)
{
	static UFieldFunc* pFnGetDataBlob = NULL;
	if(!pFnGetDataBlob)
		pFnGetDataBlob = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.GetDataBlob");

	Engine_GetDataBlob_Parms GetDataBlob_Parms;
	memcpy(&GetDataBlob_Parms.StorageID,&StorageID,0xC);
	memcpy(&GetDataBlob_Parms.BlobName,&BlobName,0xC);
	memcpy(&GetDataBlob_Parms.InGetDataBlobCallback,&InGetDataBlobCallback,0xC);
	ProcessEvent(pFnGetDataBlob,NULL,&GetDataBlob_Parms,NULL);
}

struct Engine_SetDataBlobCallbackDelegate_Parms
{
	unsigned long                                      bWasSucessfull : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     StorageID;                                        		// 0x000004 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x000010 (0x000C)              
	struct FString                                     Error;                                            		// 0x00001C (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::SetDataBlobCallbackDelegate(bool bWasSucessfull,struct FString StorageID,struct FString BlobName,struct FString Error)
{
	static UFieldFunc* pFnSetDataBlobCallbackDelegate = NULL;
	if(!pFnSetDataBlobCallbackDelegate)
		pFnSetDataBlobCallbackDelegate = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.SetDataBlobCallbackDelegate");

	Engine_SetDataBlobCallbackDelegate_Parms SetDataBlobCallbackDelegate_Parms;
	SetDataBlobCallbackDelegate_Parms.bWasSucessfull = bWasSucessfull;
	memcpy(&SetDataBlobCallbackDelegate_Parms.StorageID,&StorageID,0xC);
	memcpy(&SetDataBlobCallbackDelegate_Parms.BlobName,&BlobName,0xC);
	memcpy(&SetDataBlobCallbackDelegate_Parms.Error,&Error,0xC);
	ProcessEvent(pFnSetDataBlobCallbackDelegate,NULL,&SetDataBlobCallbackDelegate_Parms,NULL);
}

struct Engine_DeleteDataBlob_Parms
{
	struct FString                                     StorageID;                                        		// 0x000000 (0x000C)              
	struct FString                                     BlobName;                                         		// 0x00000C (0x000C)              
	struct FScriptDelegate                             InDeleteDataBlobCallback;                         		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
	//unsigned long                                      RValue : 1;                                       		// 0x000028 (0x0004) [0x00000001] 
};

bool UUserCloudFileCloudSaveSystemDataBlobStore::DeleteDataBlob(struct FString StorageID,struct FString BlobName,struct FScriptDelegate InDeleteDataBlobCallback)
{
	static UFieldFunc* pFnDeleteDataBlob = NULL;
	if(!pFnDeleteDataBlob)
		pFnDeleteDataBlob = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.DeleteDataBlob");

	Engine_DeleteDataBlob_Parms DeleteDataBlob_Parms;
	memcpy(&DeleteDataBlob_Parms.StorageID,&StorageID,0xC);
	memcpy(&DeleteDataBlob_Parms.BlobName,&BlobName,0xC);
	memcpy(&DeleteDataBlob_Parms.InDeleteDataBlobCallback,&InDeleteDataBlobCallback,0xC);
	ProcessEvent(pFnDeleteDataBlob,NULL,&DeleteDataBlob_Parms,NULL);
	return DeleteDataBlob_Parms.ReturnValue;
}

struct Engine_OnWriteUserFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
	//struct FScriptDelegate                             Callback;                                         		// 0x00001C (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::OnWriteUserFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnOnWriteUserFileComplete = NULL;
	if(!pFnOnWriteUserFileComplete)
		pFnOnWriteUserFileComplete = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.OnWriteUserFileComplete");

	Engine_OnWriteUserFileComplete_Parms OnWriteUserFileComplete_Parms;
	OnWriteUserFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnWriteUserFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnWriteUserFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnWriteUserFileComplete,NULL,&OnWriteUserFileComplete_Parms,NULL);
}

struct Engine_OnDeleteUserFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
	//struct FScriptDelegate                             Callback;                                         		// 0x00001C (0x000C)              
};

void UUserCloudFileCloudSaveSystemDataBlobStore::OnDeleteUserFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnOnDeleteUserFileComplete = NULL;
	if(!pFnOnDeleteUserFileComplete)
		pFnOnDeleteUserFileComplete = UObject::FindFunction("Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.OnDeleteUserFileComplete");

	Engine_OnDeleteUserFileComplete_Parms OnDeleteUserFileComplete_Parms;
	OnDeleteUserFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnDeleteUserFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnDeleteUserFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnDeleteUserFileComplete,NULL,&OnDeleteUserFileComplete_Parms,NULL);
}

struct Engine_ClearEnumerateUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             EnumerateUserFileCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::ClearEnumerateUserFileCompleteDelegate(struct FScriptDelegate EnumerateUserFileCompleteDelegate)
{
	static UFieldFunc* pFnClearEnumerateUserFileCompleteDelegate = NULL;
	if(!pFnClearEnumerateUserFileCompleteDelegate)
		pFnClearEnumerateUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearEnumerateUserFileCompleteDelegate");

	Engine_ClearEnumerateUserFileCompleteDelegate_Parms ClearEnumerateUserFileCompleteDelegate_Parms;
	memcpy(&ClearEnumerateUserFileCompleteDelegate_Parms.EnumerateUserFileCompleteDelegate,&EnumerateUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearEnumerateUserFileCompleteDelegate,NULL,&ClearEnumerateUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_GetUserFileList_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	TArray<struct FEmsFile>                            UserFiles;                                        		// 0x00000C (0x000C)              
};

void UUserCloudFileInterface::GetUserFileList(struct FString UserId,TArray<struct FEmsFile>* UserFiles)
{
	static UFieldFunc* pFnGetUserFileList = NULL;
	if(!pFnGetUserFileList)
		pFnGetUserFileList = UObject::FindFunction("Function Engine.UserCloudFileInterface.GetUserFileList");

	Engine_GetUserFileList_Parms GetUserFileList_Parms;
	memcpy(&GetUserFileList_Parms.UserId,&UserId,0xC);
	ProcessEvent(pFnGetUserFileList,NULL,&GetUserFileList_Parms,NULL);
	if(UserFiles)
		memcpy(UserFiles,&GetUserFileList_Parms.UserFiles,0xC);
}

struct Engine_AddReadUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadUserFileCompleteDelegate;                     		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::AddReadUserFileCompleteDelegate(struct FScriptDelegate ReadUserFileCompleteDelegate)
{
	static UFieldFunc* pFnAddReadUserFileCompleteDelegate = NULL;
	if(!pFnAddReadUserFileCompleteDelegate)
		pFnAddReadUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.AddReadUserFileCompleteDelegate");

	Engine_AddReadUserFileCompleteDelegate_Parms AddReadUserFileCompleteDelegate_Parms;
	memcpy(&AddReadUserFileCompleteDelegate_Parms.ReadUserFileCompleteDelegate,&ReadUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddReadUserFileCompleteDelegate,NULL,&AddReadUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_DeleteUserFile_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00000C (0x000C)              
	unsigned long                                      bShouldCloudDelete : 1;                           		// 0x000018 (0x0004) [0x00000001] 
	unsigned long                                      bShouldLocallyDelete : 1;                         		// 0x00001C (0x0004) [0x00000001] 
	unsigned long                                      ReturnValue : 1;                                  		// 0x000020 (0x0004) [0x00000001] 
};

bool UUserCloudFileInterface::DeleteUserFile(struct FString UserId,struct FString Filename,bool bShouldCloudDelete,bool bShouldLocallyDelete)
{
	static UFieldFunc* pFnDeleteUserFile = NULL;
	if(!pFnDeleteUserFile)
		pFnDeleteUserFile = UObject::FindFunction("Function Engine.UserCloudFileInterface.DeleteUserFile");

	Engine_DeleteUserFile_Parms DeleteUserFile_Parms;
	memcpy(&DeleteUserFile_Parms.UserId,&UserId,0xC);
	memcpy(&DeleteUserFile_Parms.Filename,&Filename,0xC);
	DeleteUserFile_Parms.bShouldCloudDelete = bShouldCloudDelete;
	DeleteUserFile_Parms.bShouldLocallyDelete = bShouldLocallyDelete;
	ProcessEvent(pFnDeleteUserFile,NULL,&DeleteUserFile_Parms,NULL);
	return DeleteUserFile_Parms.ReturnValue;
}

struct Engine_OnReadUserFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
};

void UUserCloudFileInterface::OnReadUserFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnOnReadUserFileComplete = NULL;
	if(!pFnOnReadUserFileComplete)
		pFnOnReadUserFileComplete = UObject::FindFunction("Function Engine.UserCloudFileInterface.OnReadUserFileComplete");

	Engine_OnReadUserFileComplete_Parms OnReadUserFileComplete_Parms;
	OnReadUserFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnReadUserFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnReadUserFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnReadUserFileComplete,NULL,&OnReadUserFileComplete_Parms,NULL);
}

struct Engine_ClearAllDelegates_Parms
{
};

void UUserCloudFileInterface::ClearAllDelegates()
{
	static UFieldFunc* pFnClearAllDelegates = NULL;
	if(!pFnClearAllDelegates)
		pFnClearAllDelegates = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearAllDelegates");

	Engine_ClearAllDelegates_Parms ClearAllDelegates_Parms;
	ProcessEvent(pFnClearAllDelegates,NULL,&ClearAllDelegates_Parms,NULL);
}

struct Engine_OnEnumerateUserFilesComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
};

void UUserCloudFileInterface::OnEnumerateUserFilesComplete(bool bWasSuccessful,struct FString UserId)
{
	static UFieldFunc* pFnOnEnumerateUserFilesComplete = NULL;
	if(!pFnOnEnumerateUserFilesComplete)
		pFnOnEnumerateUserFilesComplete = UObject::FindFunction("Function Engine.UserCloudFileInterface.OnEnumerateUserFilesComplete");

	Engine_OnEnumerateUserFilesComplete_Parms OnEnumerateUserFilesComplete_Parms;
	OnEnumerateUserFilesComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnEnumerateUserFilesComplete_Parms.UserId,&UserId,0xC);
	ProcessEvent(pFnOnEnumerateUserFilesComplete,NULL,&OnEnumerateUserFilesComplete_Parms,NULL);
}

struct Engine_ClearDeleteUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             DeleteUserFileCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::ClearDeleteUserFileCompleteDelegate(struct FScriptDelegate DeleteUserFileCompleteDelegate)
{
	static UFieldFunc* pFnClearDeleteUserFileCompleteDelegate = NULL;
	if(!pFnClearDeleteUserFileCompleteDelegate)
		pFnClearDeleteUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearDeleteUserFileCompleteDelegate");

	Engine_ClearDeleteUserFileCompleteDelegate_Parms ClearDeleteUserFileCompleteDelegate_Parms;
	memcpy(&ClearDeleteUserFileCompleteDelegate_Parms.DeleteUserFileCompleteDelegate,&DeleteUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearDeleteUserFileCompleteDelegate,NULL,&ClearDeleteUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_OnWriteUserFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
};

void UUserCloudFileInterface::OnWriteUserFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnOnWriteUserFileComplete = NULL;
	if(!pFnOnWriteUserFileComplete)
		pFnOnWriteUserFileComplete = UObject::FindFunction("Function Engine.UserCloudFileInterface.OnWriteUserFileComplete");

	Engine_OnWriteUserFileComplete_Parms OnWriteUserFileComplete_Parms;
	OnWriteUserFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnWriteUserFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnWriteUserFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnWriteUserFileComplete,NULL,&OnWriteUserFileComplete_Parms,NULL);
}

struct Engine_ClearFile_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUserCloudFileInterface::ClearFile(struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnClearFile = NULL;
	if(!pFnClearFile)
		pFnClearFile = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearFile");

	Engine_ClearFile_Parms ClearFile_Parms;
	memcpy(&ClearFile_Parms.UserId,&UserId,0xC);
	memcpy(&ClearFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnClearFile,NULL,&ClearFile_Parms,NULL);
	return ClearFile_Parms.ReturnValue;
}

struct Engine_AddEnumerateUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             EnumerateUserFileCompleteDelegate;                		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::AddEnumerateUserFileCompleteDelegate(struct FScriptDelegate EnumerateUserFileCompleteDelegate)
{
	static UFieldFunc* pFnAddEnumerateUserFileCompleteDelegate = NULL;
	if(!pFnAddEnumerateUserFileCompleteDelegate)
		pFnAddEnumerateUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.AddEnumerateUserFileCompleteDelegate");

	Engine_AddEnumerateUserFileCompleteDelegate_Parms AddEnumerateUserFileCompleteDelegate_Parms;
	memcpy(&AddEnumerateUserFileCompleteDelegate_Parms.EnumerateUserFileCompleteDelegate,&EnumerateUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddEnumerateUserFileCompleteDelegate,NULL,&AddEnumerateUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_AddWriteUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             WriteUserFileCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::AddWriteUserFileCompleteDelegate(struct FScriptDelegate WriteUserFileCompleteDelegate)
{
	static UFieldFunc* pFnAddWriteUserFileCompleteDelegate = NULL;
	if(!pFnAddWriteUserFileCompleteDelegate)
		pFnAddWriteUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.AddWriteUserFileCompleteDelegate");

	Engine_AddWriteUserFileCompleteDelegate_Parms AddWriteUserFileCompleteDelegate_Parms;
	memcpy(&AddWriteUserFileCompleteDelegate_Parms.WriteUserFileCompleteDelegate,&WriteUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddWriteUserFileCompleteDelegate,NULL,&AddWriteUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_GetFileContents_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00000C (0x000C)              
	TArray<unsigned char>                              FileContents;                                     		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UUserCloudFileInterface::GetFileContents(struct FString UserId,struct FString Filename,TArray<unsigned char>* FileContents)
{
	static UFieldFunc* pFnGetFileContents = NULL;
	if(!pFnGetFileContents)
		pFnGetFileContents = UObject::FindFunction("Function Engine.UserCloudFileInterface.GetFileContents");

	Engine_GetFileContents_Parms GetFileContents_Parms;
	memcpy(&GetFileContents_Parms.UserId,&UserId,0xC);
	memcpy(&GetFileContents_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnGetFileContents,NULL,&GetFileContents_Parms,NULL);
	if(FileContents)
		memcpy(FileContents,&GetFileContents_Parms.FileContents,0xC);
	return GetFileContents_Parms.ReturnValue;
}

struct Engine_EnumerateUserFiles_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::EnumerateUserFiles(struct FString UserId)
{
	static UFieldFunc* pFnEnumerateUserFiles = NULL;
	if(!pFnEnumerateUserFiles)
		pFnEnumerateUserFiles = UObject::FindFunction("Function Engine.UserCloudFileInterface.EnumerateUserFiles");

	Engine_EnumerateUserFiles_Parms EnumerateUserFiles_Parms;
	memcpy(&EnumerateUserFiles_Parms.UserId,&UserId,0xC);
	ProcessEvent(pFnEnumerateUserFiles,NULL,&EnumerateUserFiles_Parms,NULL);
}

struct Engine_ClearReadUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             ReadUserFileCompleteDelegate;                     		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::ClearReadUserFileCompleteDelegate(struct FScriptDelegate ReadUserFileCompleteDelegate)
{
	static UFieldFunc* pFnClearReadUserFileCompleteDelegate = NULL;
	if(!pFnClearReadUserFileCompleteDelegate)
		pFnClearReadUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearReadUserFileCompleteDelegate");

	Engine_ClearReadUserFileCompleteDelegate_Parms ClearReadUserFileCompleteDelegate_Parms;
	memcpy(&ClearReadUserFileCompleteDelegate_Parms.ReadUserFileCompleteDelegate,&ReadUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearReadUserFileCompleteDelegate,NULL,&ClearReadUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_OnDeleteUserFileComplete_Parms
{
	unsigned long                                      bWasSuccessful : 1;                               		// 0x000000 (0x0004) [0x00000001] 
	struct FString                                     UserId;                                           		// 0x000004 (0x000C)              
	struct FString                                     Filename;                                         		// 0x000010 (0x000C)              
};

void UUserCloudFileInterface::OnDeleteUserFileComplete(bool bWasSuccessful,struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnOnDeleteUserFileComplete = NULL;
	if(!pFnOnDeleteUserFileComplete)
		pFnOnDeleteUserFileComplete = UObject::FindFunction("Function Engine.UserCloudFileInterface.OnDeleteUserFileComplete");

	Engine_OnDeleteUserFileComplete_Parms OnDeleteUserFileComplete_Parms;
	OnDeleteUserFileComplete_Parms.bWasSuccessful = bWasSuccessful;
	memcpy(&OnDeleteUserFileComplete_Parms.UserId,&UserId,0xC);
	memcpy(&OnDeleteUserFileComplete_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnOnDeleteUserFileComplete,NULL,&OnDeleteUserFileComplete_Parms,NULL);
}

struct Engine_AddDeleteUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             DeleteUserFileCompleteDelegate;                   		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::AddDeleteUserFileCompleteDelegate(struct FScriptDelegate DeleteUserFileCompleteDelegate)
{
	static UFieldFunc* pFnAddDeleteUserFileCompleteDelegate = NULL;
	if(!pFnAddDeleteUserFileCompleteDelegate)
		pFnAddDeleteUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.AddDeleteUserFileCompleteDelegate");

	Engine_AddDeleteUserFileCompleteDelegate_Parms AddDeleteUserFileCompleteDelegate_Parms;
	memcpy(&AddDeleteUserFileCompleteDelegate_Parms.DeleteUserFileCompleteDelegate,&DeleteUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnAddDeleteUserFileCompleteDelegate,NULL,&AddDeleteUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_ClearWriteUserFileCompleteDelegate_Parms
{
	struct FScriptDelegate                             WriteUserFileCompleteDelegate;                    		// 0x000000 (0x000C)              
};

void UUserCloudFileInterface::ClearWriteUserFileCompleteDelegate(struct FScriptDelegate WriteUserFileCompleteDelegate)
{
	static UFieldFunc* pFnClearWriteUserFileCompleteDelegate = NULL;
	if(!pFnClearWriteUserFileCompleteDelegate)
		pFnClearWriteUserFileCompleteDelegate = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearWriteUserFileCompleteDelegate");

	Engine_ClearWriteUserFileCompleteDelegate_Parms ClearWriteUserFileCompleteDelegate_Parms;
	memcpy(&ClearWriteUserFileCompleteDelegate_Parms.WriteUserFileCompleteDelegate,&WriteUserFileCompleteDelegate,0xC);
	ProcessEvent(pFnClearWriteUserFileCompleteDelegate,NULL,&ClearWriteUserFileCompleteDelegate_Parms,NULL);
}

struct Engine_ClearFiles_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x00000C (0x0004) [0x00000001] 
};

bool UUserCloudFileInterface::ClearFiles(struct FString UserId)
{
	static UFieldFunc* pFnClearFiles = NULL;
	if(!pFnClearFiles)
		pFnClearFiles = UObject::FindFunction("Function Engine.UserCloudFileInterface.ClearFiles");

	Engine_ClearFiles_Parms ClearFiles_Parms;
	memcpy(&ClearFiles_Parms.UserId,&UserId,0xC);
	ProcessEvent(pFnClearFiles,NULL,&ClearFiles_Parms,NULL);
	return ClearFiles_Parms.ReturnValue;
}

struct Engine_ReadUserFile_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00000C (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000018 (0x0004) [0x00000001] 
};

bool UUserCloudFileInterface::ReadUserFile(struct FString UserId,struct FString Filename)
{
	static UFieldFunc* pFnReadUserFile = NULL;
	if(!pFnReadUserFile)
		pFnReadUserFile = UObject::FindFunction("Function Engine.UserCloudFileInterface.ReadUserFile");

	Engine_ReadUserFile_Parms ReadUserFile_Parms;
	memcpy(&ReadUserFile_Parms.UserId,&UserId,0xC);
	memcpy(&ReadUserFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnReadUserFile,NULL,&ReadUserFile_Parms,NULL);
	return ReadUserFile_Parms.ReturnValue;
}

struct Engine_WriteUserFile_Parms
{
	struct FString                                     UserId;                                           		// 0x000000 (0x000C)              
	struct FString                                     Filename;                                         		// 0x00000C (0x000C)              
	TArray<unsigned char>                              FileContents;                                     		// 0x000018 (0x000C)              
	unsigned long                                      ReturnValue : 1;                                  		// 0x000024 (0x0004) [0x00000001] 
};

bool UUserCloudFileInterface::WriteUserFile(struct FString UserId,struct FString Filename,TArray<unsigned char>* FileContents)
{
	static UFieldFunc* pFnWriteUserFile = NULL;
	if(!pFnWriteUserFile)
		pFnWriteUserFile = UObject::FindFunction("Function Engine.UserCloudFileInterface.WriteUserFile");

	Engine_WriteUserFile_Parms WriteUserFile_Parms;
	memcpy(&WriteUserFile_Parms.UserId,&UserId,0xC);
	memcpy(&WriteUserFile_Parms.Filename,&Filename,0xC);
	ProcessEvent(pFnWriteUserFile,NULL,&WriteUserFile_Parms,NULL);
	if(FileContents)
		memcpy(FileContents,&WriteUserFile_Parms.FileContents,0xC);
	return WriteUserFile_Parms.ReturnValue;
}

struct Engine_Timer_Parms
{
};

void AVolumeTimer::Timer()
{
	static UFieldFunc* pFnTimer = NULL;
	if(!pFnTimer)
		pFnTimer = UObject::FindFunction("Function Engine.VolumeTimer.Timer");

	Engine_Timer_Parms Timer_Parms;
	ProcessEvent(pFnTimer,NULL,&Timer_Parms,NULL);
}

struct Engine_PostBeginPlay_Parms
{
};

void AVolumeTimer::PostBeginPlay()
{
	static UFieldFunc* pFnPostBeginPlay = NULL;
	if(!pFnPostBeginPlay)
		pFnPostBeginPlay = UObject::FindFunction("Function Engine.VolumeTimer.PostBeginPlay");

	Engine_PostBeginPlay_Parms PostBeginPlay_Parms;
	ProcessEvent(pFnPostBeginPlay,NULL,&PostBeginPlay_Parms,NULL);
}

struct Engine_UnTouch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AWaterVolume::UnTouch(class AActor* Other)
{
	static UFieldFunc* pFnUnTouch = NULL;
	if(!pFnUnTouch)
		pFnUnTouch = UObject::FindFunction("Function Engine.WaterVolume.UnTouch");

	Engine_UnTouch_Parms UnTouch_Parms;
	UnTouch_Parms.Other = Other;
	ProcessEvent(pFnUnTouch,NULL,&UnTouch_Parms,NULL);
}

struct Engine_PlayExitSplash_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AWaterVolume::PlayExitSplash(class AActor* Other)
{
	static UFieldFunc* pFnPlayExitSplash = NULL;
	if(!pFnPlayExitSplash)
		pFnPlayExitSplash = UObject::FindFunction("Function Engine.WaterVolume.PlayExitSplash");

	Engine_PlayExitSplash_Parms PlayExitSplash_Parms;
	PlayExitSplash_Parms.Other = Other;
	ProcessEvent(pFnPlayExitSplash,NULL,&PlayExitSplash_Parms,NULL);
}

struct Engine_PlayEntrySplash_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
};

void AWaterVolume::PlayEntrySplash(class AActor* Other)
{
	static UFieldFunc* pFnPlayEntrySplash = NULL;
	if(!pFnPlayEntrySplash)
		pFnPlayEntrySplash = UObject::FindFunction("Function Engine.WaterVolume.PlayEntrySplash");

	Engine_PlayEntrySplash_Parms PlayEntrySplash_Parms;
	PlayEntrySplash_Parms.Other = Other;
	ProcessEvent(pFnPlayEntrySplash,NULL,&PlayEntrySplash_Parms,NULL);
}

struct Engine_Touch_Parms
{
	class AActor*                                      Other;                                            		// 0x000000 (0x0004)              
	class UPrimitiveComponent*                         OtherComp;                                        		// 0x000004 (0x0004)              
	FVector3                                           HitLocation;                                      		// 0x000008 (0x000C)              
	FVector3                                           HitNormal;                                        		// 0x000014 (0x000C)              
};

void AWaterVolume::Touch(class AActor* Other,class UPrimitiveComponent* OtherComp,FVector3 HitLocation,FVector3 HitNormal)
{
	static UFieldFunc* pFnTouch = NULL;
	if(!pFnTouch)
		pFnTouch = UObject::FindFunction("Function Engine.WaterVolume.Touch");

	Engine_Touch_Parms Touch_Parms;
	Touch_Parms.Other = Other;
	Touch_Parms.OtherComp = OtherComp;
	memcpy(&Touch_Parms.HitLocation,&HitLocation,0xC);
	memcpy(&Touch_Parms.HitNormal,&HitNormal,0xC);
	ProcessEvent(pFnTouch,NULL,&Touch_Parms,NULL);
}
